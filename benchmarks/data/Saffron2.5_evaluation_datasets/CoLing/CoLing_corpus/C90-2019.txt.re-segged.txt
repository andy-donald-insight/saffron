Generating French with a Reversible Unification Grammar 
Dominique Estival

54 rtedes Acacias , CH-1227 Geneva
O . Intr ~ cluction
In this paper , we describe the linguistic solutions to some of the problems encountered in writing a reversible French grammar  . This grammar is primarily intended to be one of the components of a machine translation system built using ELU  ,   1 an enhanced PATR-II style unification grammar linguistic environment based on the LID system described in Johnson and Rosner  ( 1989 )  , but it is also part of our more general experimentation with fully reversible grammars  . 
The requirement that it be reversible imposes a stringent criterion of linguistic adequacy on a grammar  , siuce it is not allowed to overgenerate while it must at the same time provide a large coverage for analysis  ( Dymetman and Isabe Ue ( 1988 ) ) . Formally , grammars that are fully reversible must be completely declarative  , since nor eierence can be made in the grammar rules to the process  ( analyzer or synthesizer ) which will use them . The unification formalism makes itt possible to write such grammar statements  , because due to the associativity and commutativity of the unitication operation  , the result of unifying feature structures i independent of the order in which they are unitied  ( Appelt ( 1989 ) ) . 
Writing reversible grammars , however , presents problems which do not arise in the traditional grammars used for either analysis or generation  . In addition , the progress accomplished recently in building generators for unification grammars has already revealed some of the problems posed by unification-based reversible grammars  . 2 As shown by Russell et al .  (1990) , even though the grammar rules do not refer to the generation process  , the generation algorithm imposes particular constraints on the grammar formalism  .   3 This paper concentrates particularly on the problems encountered in the generation of French  , specifically in the analysis to be given to clitics  . 
1 ELU stands for Environnement Linguistique d ' Unification  . 
2See Dymetman and Isabelle (1988) , Shieber (1988) , Shieber et al (1989) , van Noord (1988) , inter alia . 
3 For instance , we cannot compare our grammar with the one pre ~ ; nted in Saint-Dizier (1989) , since his grammar is neither reversible nor purely declarative  , as the rules are annotated with ' generation points '  . 
We first briefly describe the aspects of the generation algorithm and of the grammar formalism which are relevan to the particular problems under discussion  , then present he facts of French syntax which pose those problems and the solutions we have adopted  . 
1. The Generator
The generation algorithm of ELU is based on the algorithm described in Shieber et al  ( 1989 ) and was developed at ISSCO by J . Carroll .   4 Generation is head-driven : each role has a " semantic head "  ( see Shieber ( 1988 ) ) , which is specified by the ~ ammar writer , and the head daughter of a rule is generated before its siblings  . The depth-first algorithm defines a downward path through the semantic heads of rules  . 
This algorithm does not require that the grammar be semantically monotonic  . Non-monoto\]t ficity is obtained by having the generator distinguish two types of rules in the grammar  , " chaining " arKl " non-chaining " rules , and by introducing the notion of " pivot " . Following from this distinction , it employs both bottom-up and topdown processing . 
The partition of the set of gramma rules into chaining and non-chaining rules is precompiled from the specification of what counts as the " semantics " of a feature structure  . In a chaining rule , the mother and the head daughter have identical semantics  ; chaining rules are used bottom-up from the " pivot "  , which is defined as the lowest point in the path through the head daughters of chaining rules at which the semantics of the feature structure remains unchanged  . In a non-chaining rule , the mother and the head daughter have different semantics  ; non-chaining rules are used topdown from the pivot  . 
The efficiency of the ELU generator depends in a large part on the restrictors defined by the grammar writer  . Computing the pivot , i . e . creating at each a bil-ity table for chaining rules , and bottom-up rocessing 4Cf . Russell et al ( 1990 ) for a description of the differ-ences between the two algorithms  . 
1 06   1 are both controlled by precompiled " linking " inforomation  , which is encoded as sets of restrictor values . 
A restrictor is a specification of a value wl fich can be computed from a feature structure  ( syntactic ategory , for example , is often defined as ares Uictor ) . Before attempting unification between two feature structures  , the values t br the restrictors are checked in both of them  ; if these values are not compatible , unitication would be bound to fail mid is not tried  . As linking information is only relevant for chaining rules  , it is only used bottom-up during processing , ~md since by definition , chaining rules have the same semantics for their heads  , linking information must be syntactic . 
Restrictors are also used heavilym the selection of lexical items  , so the attributes chosen as restrictors have to be good discriminauts between i ~ ature structures  .   5 " I he generation algorithm by itself guarantees neither the completeness nor the coherence of tile resulting feature structure  . The responsibility tbrpr event?ing the generation of structures which unify with the input  , bu ~ meincomplete(i . e . ensuring completeness ) rests with the grmn mar writer : any structure which needs to be generated in its entirety should not be represented as an uncotx~trained ti ~ature structure  , but must be specified as another data type , i , e . a list , a tree , or a user-defined type expression . Tt~egraul mar writer and the generator sharetile responsibility for preventing additions to the input structure  ( i . e . 
preserving coherence ) : the gramm~writer must again select the appropriate data types  , and the generator " tT cezes " uninstantiated variables that occur in the input  . 
The choice of appropriate data types as well as of good restrictors it herclore crucial to ensure flint the grammar is not only efficient but usable in generation  . 
2. The G , rammar Formalism.
The syntacticieples entations built by file parser are trees where each node is a directed acyclic graph consisting of atuibute-value pairs  ( i . e . a feature struc ~ ture which allows reentrancy ) . ' File semantic represemations ued ~ s input by the generator are feature structures derived from the syntactic trees  . 
The gr~unmar rules consist of contextfree phrase structure rules annotated with corrstraint equatiot rs expressing relations between the categories mentioned ill the rule  . The ELU tormalism provides a generalization of the template facility of PATR-II  , the " relational abstractions " , which are statements abstracting over sets of constraint equations  . These statements 5 Restrictors are also used to restrict the search space in parsing  ( see Shieber ( 1985 ) ) . " f be use of linking information in generation was first proposed by van Noord  ( 1988 )  . 
may receive multiple and mcursive definitions . To give multiple definitions to a relational abstraction permits collapsing what i ~ lan unextended PATR-Iike formalism would be several distinct rules  , and is a powerful way to capture linguistic generalizations  . 
Multiple definitions , however , give rise to a high degree of nondeterminism during processing  . The re-fbre , while the parser expands multiple definitions whenever they are encountered  , the generator uses a lazier approach and only expands them when they are needed  . Nevertheless , tiffs strategy is not sufficient , and the problem posed by the nondeterminism of relational abstractions is the most complex and severe of the grammar/generator interactions described in Russell et al  ( 1990 )  , because of its adverseffects on the restliclion of topdown generation  . 
3. French Critics
Any Frenchgr ~ wn mar must account for the position aidordering of preverbal clitics  . While full complement aud modifier ptwases occur to tile right of the mah ~ verb of a clause  , up to three elitics may occur in front of a verb , as in (1) . 
(1) 11m ' yena fait p,'u-t .
heme there of it informed
He infot ~ nedme of it there.
Moreover , tile clitics must appear in a fixed order , which , as shown ill (2) , is independent of the semantics of the critics . 
(2) a . Il svousl ' yont do lm~e.
they to you it the regave
They gave it to y ott there.
b . * Ilsleurl ' yont do tm6e.
they to them it the regave 77 wygm , e it to them there . 
This f~ed order can be represented by the traditional table given in  ( 3 )  .  6  ( 3 ) Ordering of French ditics meleluiyent ela leurseles nous vous in most accounts of the distribution shown in  ( 3 )  , tile problem is simplified , because only subcategolized complements are de ' tit with  . A French prever baleli-tic , however , is not necessarily a subcategorized complement of the verb  ; adverbials and parts of complement phrases can also cliticize  , and the grammatical category of some clitics is that of adverbs or  6 In ( 3 )  , sest and s for any of the socalled ' R-clitics ' , i . e . 
the reflexive and reciprocal pronouns , as well as the inherent reflexive ~ md the middle marker  , as explained in more detail below . 
2107 quantifiers.
The contrast between (4 . a ) and (4 . b ) shows that a clitic can be either a full complement  , or part of a complement . In (4 . a ) , en  is the full prepositional object of the verb parler  , while in (4 . b ) , en represents the partitive prepositional phrase which is the complement of the object of vouloir  . 
(4) a . I 1 enparla it souvent.
he often talked about it\[cf .   I1 parla it souvent deceUvre\]\[he often talked about that book \] b  . J ' enveux deux . 
I want two of them\[cf . Jeveux de ux deces pommes \]\[ I want two of these apples \] The contrast between  ( 5 . a ) and (5 . b ) shows that a eli-tic can either be subcategorized or not  . In (5 . a ) , y is the subcategorized complement of the verb aller  , while in (5 . b ) , y is a locative adverb , which is not subcategorized by the verb dormir . 
(5) a . I1ya Uait souvent.
he often went there\[cf .   I1 all a it souvent d anscetteville \]\[ he often went to that city \] b  . I1yd or mait souvent . 
he often slept there.
\[ cf .   I1 dorma it souvent d anscethdtel\]\[he often slept in that hotel \] Besides the personal pronouns and the adverbs given in Table  ( 3 )  , there are other lexical items which are not usually considered in the treatment of French clitics  , but whose behavior is closely related . 7 The negative elements pas , plus , jama is , rien , and the quantifier stant , autant , plus , moins and tout 8 also cli-ticize and may appear preverbally . 
While , all the clifics of Table ( 3 ) must appear in front of the traditional AUX constituent  ( i . e . before any of the verbal elements of the VP ) , the examples in ( 6 ) sl how that the elements of this second set appear inside AUX  , more precisely after the first tense-bearing verbal form  . 
(6) a . I1n'en avait jama is 4t 6 persuad 6 , he had never been sure of it b . I1n'en avait jamaisriencru . 
he had never believed any of it c . Jen'yenai jamais autantvu . 
I had never seen so many of them there 7They are , however , the subject of work in theoretical linguistics , see e . g . Perlmutter (197 l) , Emonds (1975) , Kayne (1975) , and more recently Pollock (1989) . Interestingly , though it was developed in a different framework and for different reasons  , our treatment of those elements is compatible with the latter's analysis  ( cf . also fn . 9) . 
8The quantifier touth as actually several forms , inflected for gender and number : tout/tousltoute /toutes  . 
There are thus at least two slots for clitics inside a French VP  , and neither of these slots correlates with argumenthood  . The quantifiers rien and autant which appear inside AUX in  ( 6 . b ) and (6 . c ) are ( paJtts ) of the argument of the verbs croire and voir , and so is the quantifieren , which is in front of the AUX . On the other hand , the adverby is not an argument in (6 . c ), nor is jama is in (6 . a-c) . 
Therefore , the lexical entry of every clitic element must specify not only that it is a clitic but whether it appears in fronto for inside the AUX constituent  . 
4. Generation
Theoretically , the fundamental problem posed by clitics stems from their dual nature  , syntactic ' and morphological , and partly consists in deciding whether to treat them by syntactic or by morphological processes  . 9 Descriptively , there are three issues to be addressed : argument -binding  , linear ordering rela-tior~s , and categorial status of the clitics . All three give rise to problems in generation due to nondeterminism  , for which the solution is to ensure that the lexical verb is instantiated as soon as possible  . 
4.1. Subcategorizatlon
The unification formalism makes it very natural to encode syntactic information i the lexicon and with a lexicalist approach  , our treatment of arguments is straightforward : we make the standard use of a subcategorization list to encode the complements a verb requires  . Since any complement phrase may be realized as a clitic  , this fact is not mentioned in the subcategorization list  . to 9E . g . , restrictions on coordination show that clitics are not independent syntactic on stituents  . 
( i ) * I1 meet te connait.
he knows me and you
Cf . the various analyses presented in Borer (1986) . More recently ( Rizzi and Roberts (1989) , Kayne (1990)) , the question has been reformulated in terms of the type of mechanism  ( adjunction or substitution ) involved in cliticization and of whether clitics are phrasal heads or not  . With the lexicalist approach adopted in our grammars both types of processes can be referred to in the lexicon  , but it is of course still desirable that the two be clearly separated  . 
l 0 This analysis contrast with that of Baschung et al  ( 1987 )  , or B6s et al (1989) , which treats separately complements appearing to the left and complements appearing to the right of the verb  . Their reason for doing so is that they take the variant shown in  ( i ) and ( ii ) to indicate a relatively free order of complements  ( sulx - a tegorized or not ) in French . 
( i ) iladon n 6 ( hier ) unlivre~tMarie ( hier )  . 
yesterday he gave a book to Marie ( ii ) iladon n 6 ( hier ) ? l Marie unlivre ( bier )  . 
yesterday he gave a book to Marie
While the ordering of full complements inside the VP poses some problems for generation  , it is a separate question from that of cliticization  , and the two should receive principled solutions of their own  . 

During analysis , art element found in the VP is checked against Subcat  , the subcategorization list of the predicate . If it does not unify with any element of Subcat , ~t is treated as a VP modifier and added to Mods  , the list of modifiers . From the point of view of generation , clitics realize elements from either the
Subcatlistor from the Mods list.
For instance , we partly follow the lexicalist analysis of Grimshaw  ( 1982 ) for the R-clitics represented byse . That is , we consider that the R-clitic is not an argument of " iuheienfly reflexive "  ( 7 . a , b ) and " middle " verbs (7 . c ), but a morpho-syntaclic marker , ti (7) a . i ~1 s ' est 6 vanoui . 
he fainted b . I1 sele demandait.
he was wondering about it c.IIs'est cassd.
it broke
But in reciprocal and true reflexive constructions  , such as (8 . a , b ) , we treat the R-clitic as a pronoun which is an argument of the verb  . 12(8) a . Ilsses on tregard ds . 
they looked at each other ~ themselves b . Ilsseless on tdonnds . 
they gave them to each other ~ to themselves There ibre  , because the verbs in the examples of ( 7 ) are marked in the lexicon as being iitherently reflexive  , an R-clitic is generated from Subcat without being bound to the list of semantic arguments  . In (8) on the other hand , the verbs are respectively transitive and ditransitive : in their case  , a semantic argument is both bound to , an element of Subcat and re , alized as a reflexive pronoun because of its own semantic features  . In (9 . a-c ) se is , as in (7) , the inherent reflexive marker mid is generated from Subcat  . In (9 . a ) en is the partitive phrase of a subcategorized argument  ; yin(9 . b ) is a subcategorized locative argument from Subcat and in  ( 9 . c ), it is a VP adverb from

(9) a . I1s'enest cass 6 deux.
two of them broke b . Ilss'y trouvaient.
they were the rec . llss'yven daient.
they were so M there
As described in Russellet at .  (1990) , problems arisei in generation because of nondeterminism and becau~e of the unavailability of some syntactic information to the generator  . The subcategorization list IIIn (7 . a ) , there is no nonreflexive verbe ~' an ouir , and in (7 . b ) , dieref lexive verb has a different semantics than the nonreflexive verb from which it is lexically derived  . 
12 In this respect , our analysis also differs from that presented in Wehrli  ( 1986 )  . 
mechanism typical of unification grammars ia source of both these kinds of problems  . Subcategorization lists are relational abstractions with multiple definitions  ; therefore , they introduce non-detenninism in tile expansion of the rules in which they are invoked  . Moreover , they exemplify the type of synotactic information typically found ill lexical entries  ; tiffs in fommtion is not available to the generator until the lexical head has been instantiated  , but if it was a vM lable at a higher point in the path through the rules it would help constrain the topdown search  . 
In particular , here , separating the elements found inside the VP into arguments and modifiers can only be  ( lone alter the lexical head has been instantiated midits subcategorization list is available  . As shown by the two meanings of the verb trouver given in the lexical entries  ( 10 . a , c ) and exemplified in (10 . b , d ) , the semantics of the verb ( its argument list ) may change according to its subcategorization list  . 
(10) a . trouver * v + UN ! Verb Imain ! avoir ~ N refl ! trans ! Subcat  ( np , np ) b . I 1l ' y trouve . 
he finds it there\[cf . II letrouved ansles Alpes . \]\[ he finds it in the Alps\]c . trouver * v+UN ) ! Verb!main!~treIRefl!intrans!Subcat ( np , pp)!PP sem(loc)d . I 1 s ' y trouve . 
it is located there\[cf . I1 set rouve dansles Alpes . \]\[ it is located in the Alps\]In (10 . d ) the cliticy is , an argument ( i . e . it is bound to one of the variables in the arguments list  )  , while in (10 . b ) it is not ( i . e . it is added to the modifiers list ) . 
Even though the two possiblities , are mutually exclusive , if the subcatlist is not available at the VP level  , the search must proceed topdown and tim VP is expanded topdown and nondeterministically  . Recall that when the semantics for the head daughter of a rule does not change  , the rule is a chaining rule which is used bottom -up  , but if the semantics of the head changes , then the rule is a non-chaining rule , which is used topdown and defines a pivot . 
4.2. Linear ordering
As was shown by the examples of (2) , the linear ordering among preverbal clitics is independent of their semantics  ; it is also independent of the syntactic features of their dominating clause  , i . e . negation , inversion , etc , A perspicuous way to express citric ordering is to have one relational abstraction with separate definition stating the different precedence constraints holding between two preverbal clitics  . 
The simplified definitions for Precede ( C1 , C2 ) given in ( 11 ) would account for most of the distribution 4   109 facts of Table ( 3 ) in a natural and elegant way . 13(11) Precede ( C1 , C2 )  <  C1 head morph pers >= 1/2  <  C2 head morph pers >= 3 
Precede(C1 , C2) < C1 head morph case > = acc/refl < ( . '2 head morph case >= dat
Precede(C1 , C2 )  <  C1 head morph case >= refl < C2 head morph case >= acc\]dat
Precede(C1 , C2 ) < C1 heads empred >= y < ( ~ heads empred >= en 4 . 3 . Categorial status A characteristic property of clitics is that they do not have a maximal projection and remain X ? constituents  , with their own syntactic ategory feature coming from the lexicon  . To express the fact that a dative pronoun or the clitics y and en actually stand for a PP can be done by building a PP in the lexicon  , e . g . with a relational abstraction such as Make-PP ( CI , PP) . 
(12) Make-PP ( CI , PP ) < CI heads empred >= " y/en < CI head morph case >= dat < PP heads ere pred > = ~ t < PP head semargs >=\[< CI>\] 
Make-PP(CI , PP ) < CI heads empred >= y < PP heads erepred >= < PP head semargs >=\[< CI>\] 
Make-PP(CI , PP )  <  C1 heads empred >= en < PP heads erepred >= de < PP head sereargs >=\[< CI>\]The relational abstractions Precede and Make-PP constitute an elegant collapsing of syntactic and lexical rules which is useful in analysis : the grammar rules which rewrite VPs containing clitics need not specify all the various possibilities  . However , as with the relmional abstractions encoding subcategorization facts  , its multiple definitions render Precede nondeterministic  . The nondeterminism of Make-PP , which is due to the fact that some clitic forms are ambiguous  , is no less severe . During generation , the evaluation of the equations is delayed until the semantics for the head has been instantiated  , and if the lexical head is not instantiated early enough  , rules which involve these relational abstractions are tried  repeat-13 There are other constraints not accounted for by ( 11 )  , e . g . the one requiring that an ambiguous acc/datform cannot be interpreted as an accusative in front of a dative:  ( i )   , k Elienous luiprd senter a . 
sheusto him will introduce
Similar constraints exist among the clitic elements appearing in postverbal position  . 
edly even if they cannot apply.
In conclusion , for the purpose of generation , we need an analysis where the semantic head of the VP is not necessarily the lexical main verb  , but is the element which will be sure to be instantiated as early as possible  . In an analysis reminiscent of current work in the Government-Binding framework  , 14 where a clause is IP ( Inflectional Phrase ) , the maximal projection of INFL , we take as the semantic head for our rules the element which bears tense  . This element , I may be either the main verb or an auxiliary which takes the main verb as complement  . 
With this analysis of the structure of VP , the semantics of the head daughter I remains the same along the path through the semantic heads so that the pivot of the structure  , i . e . the point at which bottom-up generation can start from  , is at the end of path . At that point , either I is the main verb ( V-raising has applied ) and it can be instantiated immediately , or I is an auxiliary ( V-raising hasn't applied ) and the main verb is its sister , which can be reached through other chain rules . 
We can deal with clitics in two ways : ? by successive adjunction to the head :  ( 13 ) TP/\elTP/\clTP ? by building a list , itself adjoined to the head : (14) TP/\
CLTP/\clcl
Besides being descriptively more adequate , since the ordering constraints hold between the clitics themselves  , not between a clitic and a verbal constituent , the second approach is to be preferred because a list ensures completeness of the resulting feature structure  . Moreover , the whole list of clitics can he built without instantiating the lexical verbal head  . With the two clitic positions and taking I as the head  , the syntactic structure for a VP is as in (15) . 
(15)T\]?/\
CLTP/I\
ICLV2/\ verb ...
14 Cf . f n . 6 and 9 , and work cited in the references given there . 
5 Ii 0
Clitic elements are marked as to whether they must appear to the left or to the fight of I  . If V-raising hasn't applied , as in the examples of (6) , the two critic lists will be in front of the main verb  , on either side of I . If V-raising has applied , the two clitic fists will still be on either side of I  , and of the main verb , as in (16) . 
(16) a . I1 nel'en persua dera jamais.
he will never convince her of it b . I1n'encroit jamaisrien . 
henever believes any of it c . Jen'yenvoit jama is autant . 
In ever see so many of them there 5 . Conch~slon We have shown with die example of French clitics how some problems inherent in the writing of reversi-ble grammars arise  , ~md what aspects of the formalism are responsible for them  . The solutions we propose are motivated by internal considerations  , and provides a coherent syntactic account of the phenomena under consideration  , i . e . clitic placement and so called " adverb climbing "   ( although space prevents us from showing tile details here  , riley also deal adequately with vefibal negation )  . These solutions make full use of the properties and adwm tages of die lexicalist approach to gr  , ' unmars while circumventing ( some of ) the dange ~ it presents . 
** I , ' ungrateful to Susan Warwick and Graham Russell for the time they have spent helping me understand EHJ and its generator  . Neither of them , of course , is responsible for any mistake in this paper . 

Appelt , D .  (1989) . " Bidirectional Grammars and file Design of Natural Lml gaage Systems "  . In ~ IT teoretical issues in natural anguage processing  , edited by Y . Wilks . Hillsdale : Lawrence Erlbaum

Baschung , K , G . B~3s , A . Corluya/ldT . Guillotin (198'7) . " Auxiliaries and Clitics in French UCG Grammar " . In Proceedings of the TtffrdCor ~' eroence of the European Chapter of the Association for Computational Linguistics  , Copenhagen , pp . 

B ~ s , G . and C . Gardent (1989) . " French Order without Order " . in Proceedings of the Fourth Conference of at e European Chapter of ' the Assoociation for Computational Linguistics  , Manchester , pp .  249-255 . 
Borer , H .  (1986) . ed . The Syntax of Pronominal Cli-tics , Syntax and Sem~mtics , vol . 19 . Academic

Dymetman , M . and P . Isabelle (1988) . " Reversible Logic Granlmars lor Machine Trar ~ slation "  . In Proceedings of a ~ e Secure1 International Conference on Theoretical and Methodological Issues in Machine Translation of " Natural Languages  , Carnegie Mellon University , Pittsburgh . 
Emonds , J . E .  (1975) . "A transformational analysis of French clitics without positive output constraints "  . 
Linguistic Analysis , 1.324.
Grimshaw , J .  (1982) . " On the lexical Representation of Romance Reflexives "  . In The Mental Representation fGrammatical Relations  . exlited by J . Bresnan . Cambridge : MIT Press , pp . 87-148 . 
Johnson , R . and M . Rosner (1989) . " A rich environment for experimentation with unification grammars "  . In Proceedings of the Fourth Conference of the European Chapter of the Association for Comtmtational Linguistics  , Manchester , pp .  182-189 . 
Kayne , R .  (1975) . French Syntax ' . Cambridge : MIT

Kayne , R .  (1990) . Seminar . University of Geneva . 
van Noord , G .  (1988) . " BUG : A Directed Bottom Up Generator for Unification Based Formalisms "  . 
Dept . of Linguistics , Trans10, Utrecht University . 
Perlmutter , D .  (1971) . Deep and Surface Structure Constraints in Syntax . New York : Holt , Rinehart and Winston . 
Pollock , J . ?Y .  (1989) . " Verb Movement , Universal Grammar and the Structure of IP " . Linguistic
Inquiry , 20.3pp . 365-424.
Rizzi , L . and I . Roberts (1990) . " Complex Inversion in French " . Probus , vol . l . 1, pp . 130 Russell , G . , S . Warwick and J . Carroll (1990) . 
" Asymmetry ill Parsing and Generating with Unification Grmnmars "  . to appear in the Proceedings of the 28th Annual Meeting of the Assockltion for Computational Linguistics  , Pittsburgh . 
Saint-Dizier , P .  (1989) . " A Generation Method Based on Principles of Government-Binding Theory "  . in Proceedings of the Second European Natural Language Generation Workshop  , Edinburgh . 
Slfieber , S .  (1985) . " Using Restriction to Extend Parsing Algorithms for Complex-Feature-Based Formalisms "  . In Proceedings of the 23rd Annual Meeting of the Association for Computational 
Linguistics , Chicago , pp . 145-152.
Shieber , S .  (1988) . " A Uniform Arct fitecture for Parsing and Generation "  . Proceedings of the 12th International Conference on Computational
Linguistics , Budapest , pp . 614-619.
Shieber , S . , van Noord , G . , R . C . Moore and F . C . N . 
Pereira (1989) . " A Semantic-Head-Driven Generation Algorithm for Unification-Based Formal-isms "  . In Proceedings of the 27th Annual Meeting of the Association for Computational Linguistics  , 

Wehrli , E .  (1986) . " On Some Properties of French
Clitic Se ". In Borer (1986).

