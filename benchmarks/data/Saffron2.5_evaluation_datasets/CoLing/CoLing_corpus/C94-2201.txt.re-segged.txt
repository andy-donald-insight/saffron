DISCONTINUITY AND THE LAMBEK@AL CULUS
Mark Hepple
DeI ) artment of Computer Science , University of Shellield , lLegents Court , 
Portohello Street , Sheflield , UK . gmai\]:hepple0 dcs , sheffield . at . uk
Introduction
This paper is concerned with tile treatment of discontinuous constituency within Categorial Grammar  . 
In particular , I address the problem of providing an adequate formalisation of categorial commctives l  ) ro-l ) osed by Moortgat ( 1988 )  , which are useful for handling certain forms of diseontimm use on stitnency  , l)e-spite some interesting proposals , a satisfactory logic for these emnectives has so far remained dnsive  . I will provide such a h)gie , using an approach that falls within the general framework of labelled deductive systems  ( Gabbay ,  1991) , employing novel methods for reasoning a hout linear order in resourcensage  . The approach is illusl ; rated by linguistical plications for extraction , pied-piping and quanti\[ieation . 
The Lambek calct flus
Our general fran , e work is the associative I , ambelc calculus ( L:l , mnbek ,  1958) , a system which falls within the class of formalisms known as Categorial Grammars  . The set of types is freely generated firomaset of primit iw  ; ( atomic ) types ( e . g . s , np . .  .   . ), using binary in fixel ) craters\,/, . . The ' meaning ' of these connectives in L is fixed hyasenlanties for the logic  , based on a ( se , nigroup ) algehra of strings ( Z : ,  . ), i . e . where ? is an associative , not l-coulm tltative binary operator , with two-sided identity e , and E is the set Of non-eHlpty ( -7 t:-g ) strings over some vocabulary . 
An interpretation funcl ; ion\[\[~assigns some subset of Z ; to each type , satisfying the conditions be . low for conlplex types and gyp (', sequence . s . A type com hi- . 
liar/oil X1 . . . . . Xtz-->X0h . ohls in a model ((?, . ),\[\[\]l ), if \[ x ~ . . . . , x . \]\]_cl\[Xol\],a . dis~lid if it is true in all models .   '1'here are several formulations of L that all realise this same meaning for the connectives  . t~x,v\]\] = . ~, v < z . I . ~e\[\[xllA~<\[v\]\]\[\[X/Y\]J = , : eZ;IV ; ~ :\[ ~ Y ~ .  :,: . ye ~\[ X\]\]I\[vxx\]\]--~ . </: IV ,, ~ eIIY\]\] . ,>, . egx\]\[\[x ~ . . . . . x , , \] = : , : ~ . . . . . . . . . ecI < e\[Ix\]~\]A , . , A . . . . C EX , ,I \] \ ] The alternatlve formulations include e . g . seqnent ( l , amlek 1958), proofnet ( l ~ . oor ( la 199:1), and natural deduct . ion systems ( Morrille ! aL1990, Barryegal .  1991) . Alternative formulations carry different advantages  , e . g . naturald c ductlon is well suil . cd for lh , guisl . icprc sental . ion , whereas proof nets haw ~ benefits for automated theorem proving  . 
l ) is continuous type constructors The I , ambek calculus is a purely concatenative system : where any two types are combined  , the string of the result is arrived at by concatenating the strings of the types combined  . This point is illustrated graphically in ( la , b ) , for the Lambektractors , where ( following Moortgat , 1991) each triangle represents a result string , and unshaded and shaded areas represent fnne-tor and argutlre  . ntstril/gs , respectively . 
(1) ( a ) X/Y ( b ) Y X X ( c)XIY(d)XIY
Y Y Y yl'r clixa ~ ionSuffixal . i on Extraction Infixation Various linguistic phenomena  , however , suggest he existence of discontinous constituency  , i . e . situations the result string from combining two constituents is not produced by concatenating the component strings  . 
( See e . g . Bitch , 1981 . ) Moortgat (1988) suggests aug-men?ing \] T , with two discontinuous type construct , or s . 
A nexh'a clion fimctor X\]Y is one whose argument corresponds to a non-peripheral  ( or more precisely , nor necessaribj peripheral ) suhstring of the result of con > binaries , as it , ( lc ) . An infixation fimet or XIY itself corresponds to a non-l  ) eril ) heral substring of the result of combination , as in ( ld ) . Given these intuitiw ' ~ characterisations , two options arise for the meaning of each comlecLive as to whether the point of insertion of one striug into the other is free  ( universal ) for lixed ( existential )  . In this paper , I will focus on the existential variants of the commctives  , which appear to he the most linguistically useful  , and whose interpretive conditions arc as follows :
Previous proposals
F , ach connective should have two inference rules : a rule of proof  ( showing how to derive a type containing the connective  )  , and it rule of nse ( showing how to employ such a type )  . This indicates a possible eight inference rules that we might hope to state  ( i . e . proof/usex universal/existential x infixation /extraction  )  . V~ri ~ ous attempts have I ~ eeu made to provide a logic for tile discoutiuuous type constructors  , but all have proved ulls u ( ' cessflllor unsatisI'actory in some way or another  . 

Moortgat (1988) , for example , uses an ordered sequent calculus framework , which allows only two of the possible eight rules to be stated : a rule of proof for existential T  , and a rule of nse for universal ~ . Moortgat (1 . 991 ) nses a proof method in which types are not ordered in proof representations  , where linear order constraints and consequences are instead handled using a system of string labelling  , i . e . types are associated with string terms , which are explicitly manipulated by inference rules  . This approach allows two further rules to be stated  , but the four expressible rules are distribnted one per connective  , i . e . a complete logic is not given for even anyone connective  . As Versmissen (1991) notes , Moortgat'string label system does not allow the recording of a specific position for inserting one string into another  , as would seem to be required . 
Morrill & Solias ( 1993 ) avoid this latter problem by augmenting the string \] al~elling algebra with a non-associa  (  , ivepairing operator ( . ,  . ) , allowing labels such as st , s2) , indicating an insertion point in between sl and s2  . ' l Phis system allows versions of T and ~ operators to be specified  , hut ones whose interpretive definitions differ from Moortgat's  . The non-associativity of pairing gives rise to l imited flexibility for the system in terms of the type combinations that can be derived  , and even the types that can be constructed , e . g . no flmctor(X ~ Y)/Z , where a \] argument is not the first sought , is allowed . 
Labelled deduction &: Lambek calculus I next develop a formulation of L which can be e ? -tended to allow for the  ( existential ) discontinuity connectives . Our starting point is a lambdate rm semantics for implicational L due to Bnszkowski  ( 1987 )  , ba . sed on the wellkuown Cnrry-Howard interpretal ; ion of proofs ( I loward ,  1969 ) 3 This uses a bidirectional variant of the lambda calculus whose basic terms are directionally typed variables  . If t is a term of type Y\X ( resp . X/Y ) , and u one of type Y , then ( at ) t ( resp . ( tu ) ") is a term of type X . If v is a variable of type Y , and taterm of type X , the nk lv . t(resp . 2" v . t ) is a term of type Y\X ( resp . X/Y ) . A semantics for implicational L is given by the class of terms which  2Under the Curry-lloward interpretation ( l loward ,  1969) , logical formulas are regarded as types of expressions in typed laln bda calculus  , with atomic formulas corresponding to basic types  , and a formula A--~B to the type of functions from Atotl  . 
It is dm nonstrable that the set of formulas for which there exists stone correspondingly typed lambdate rm is precisely the theorems of the imp fie at lonal fragment of intuitlonistl cogic  . Thus , typed lambda calculus provides a semantlcs for implicational in-tuitlonlstic logic  , i . e . an independent , characterlsationf'valid de ductlon ' , just as the algebral c semantics of L provides an independent character is at lonfvalidity for that system  . Semantics for vm ' ious other logics can be given in terms of classes of typed lambda terms  , i . e . subsets of the typed lambda terms which satisfy certain stated criteria  , van Benthem ( 1983 ) provides a lambda semantics for the system LP , a eonmmtative variant of L . Wansing ( 1990 ) provides lambda semantics for a range of subloglcs of in tultlonistie logic  . The Curry-tloward interpretations opermeates categorlal work that the terms " formula " and " type " have become almost interchangeable  . Note that I have slightly modified BuszkowsM's notation  . 
satisfy the conditions : ( l l l ) each subterm contains a flee variable ,   ( 132 ) no subterm contains > 1 free occur-renee of any variable , (133) each At ( resp . )?') binds the leftmost ( resp . rightmost ) free variable in its scope . 
This semantics can be used in formulating ( implica-tionM ) L as a labelled deductive system ( LDS : Gabbay ,  1991) . aLM ) els are terms of the direction Mlambda sys-tern , and propagation of labels is via application and abstraction in the standard manner  . Natural deduction rules labelled in this way are as follows:  ( 2 ) a/B:aB:b\[B:v\]/EA:aa : ( ~ b ) ~--/ I
A/B : X : v . a
B : bB\A : (~\[ B : v\]
A : ( b ~) l\E ~___ A : a\~/3\A : , ~ v . a
We caneusure that only deductions appropriate to  ( implicational ) L are made by requiring that the label that results with any inference is a term satisfying Buszkowski's three conditions  . To facilitate testing this requirement , I use a flmction E , which maps from label terms to the string of their free variables occurring in the left-right order that follows from type directionality  ( giving what I call a marker term )  . A notion of ' string equivalence ' (  ~-  ) for marker terms is define cl by the axioms : ( -~ . 1)*, (> z ) ?( x . y ) . z(-2) .  -~  .   . 
(-.3). ~- x.c
E is recursively specified by the following clauses  ( where PV returns the set of fi'ee variables in a term  )  , but it is defined for all and only those terms that satisfy Bnszkowski's three conditions  . 4 Thus , we can ensure correct deduction by requiring of the label that results with each inference that there exists some marker term m such that  ) _' ( a ) = m . 
(~; . I ) 2(v ) = v where vEV at s(r . ~) ~(( ~ b ) ~) = ~(( , ) . ~(1,) where l,'v((0nlW(b ) = 0( ~ . a ) ~(( ~, ~) ~) = ~( . ) . ~(~) where FV(a ) ffll ! ' V(b ) = 13 ( ~ . 4) ~(~% . , ) = /3 where l ~' V (2 ~ . .) ? O , ~( a )=' v . ~ (~ . ~) > ~( Xv . .) = 9 where l"V(~"v . ( 0 ? ~ , ~( a)-p , v The followiug proofs illustrate this LDS ( nsing t~m3111 labelle deduction , each for null a is associated with a label , which records information of the use of resources  ( i . e . as-smnptions ) in proving that formula . Inference rules indicate how labels are propagated  , and may have side conditions which refer to labels  , using the information recorded to ensure colrecL inf crencing  . Evidently , the Moortgat (1991) and Morrill &
Solias (1993) formalisms arc LDSs.
4Condition B2 is enforced by the requirement on the application cases of E  . Conditions B1 and B3 are enforced by the first and second rcquirement on the ahstraction cases of E  , respectively . 
1236 as shorthand for E(t)-m , to indicate a significant niarker equivalence ) : x/v : ~ . Y/Z : ~\[ Z : z \]/ i , :
Y : ( yz ) "/ i , ; > : x : (~( vO ")", + ~ . v . ~ x/z:y z . (~(vzy)"
X/(Y/(Z\Y )): m\[Z:z\]\[Z\Y:y\]\1;:r,
Y : ( z ~) ~ ~ z.y
Y/(z\v):a ';>(< D~/~/1 , " ~: x :(~ x ';>( zv )) "/ I .   .   .   .   . 
XlZ . x " ~.( ~ X ', v . (~ v )) "
This system can be extended to cover product using the inference rules  ( 3 )  , and the additional ) 2 elanses shown following ( with the obvious implicit extensions of the direction alambda system  , and of Buszkowski's semantics ) . Labelling of \[ . I\] inferences is via pairing , and that of \[, . El inference sllses all operator ada . pged from \] lent on elal ,  (1992) , where a term \[ b/v . w \] . a implicitly represents timsuhsl , it i itiol of b for v + w i i i a . This rule is nsed hi (4) . 
( a ) D: , \]\[ c: , I , \] a: , i ~: ~ , 1 A : at 3 . 0: bAIB : ( a , b ) iE(s . u ) > :((<,, O ) = : : ( a) . > ~( ~ , ) where l !' V ( a ) r l F V ( b ) : : 007 . 7) >_,(\[ b/v . w\] . a ) = fll ')', ( b ) " fl2 whe, . ~1,'v((,)r : ~ . 'vo ) = 0 (4) x/v/z : , :\[ z:q\[v : , v\]z . v : ~/ E
XlV : (~,)' x : ((*' z ) " vy ~ . .  .   . v ? I ') x . . \[ wl~ . v\] . (( . ~ O"v ) ' 5 + x . ~,, x/(z . v ) : ~' ~ . (\[,,,/~ . v\] . ( ( = ) ": D ~ ) /: Labelled deduction gz discontinuity '\] ' hisal  ) proach can be exi ; eilded l ; o allow for exist . enl , ialia . nd,\[ . These conneci ; iw ; shaves Latidardi in l ) lica-tional inference rules , lsing additional distinguished operators for labelling  ( with superscripte for extraction and it brlul l ? at on  ) :  ( 5 ) AtI ~: ~ , ~: b\[1~:~k : ( oby--t*
A ' ~ B : , V v . a
AIB:aB:b\[B:u\]
A : ( ab)i \] EA : a----ll
A\[B :,\ iv . c , ( lenstier/irsl ; ly how > ; Iiuist ; I ) e extended for the abstract . ion cases of ; he new introduction rules . For a\[II \] terin such as Aev . a , l . \] e relevant E case allows v to appear non-per ipherally in the marker term of a  . For a \[ Ill term such as , ~ v . a , v is allowed to he discontinuous in the marker of a  ( we shall see shortly how this is possible )  , bug requires its components to appear peripherally  . 
where ~ W (.\ %..) ? ~, ~ : ( a ) - ', q ~. v ., e ~
To allow for the new application operators , the marker system must be extended . Recall that the linear order information impl icit in lahcls is projected onto the left  , -right dimension in markers . With 1" and 1 , however , lie possibility exists that either fiuletor or argument is discontirmous in the result of their combination  . For strings xG\[\[XTY \]\] and yG\[\[Y\]~ , for example , we know there is some way of wrapping x around y to give ares nll  , in X , but we do no ~ in general know how the division of  . v should be made . This problem of un-certainly ix handled by using operators L and R  , where 1 , ( rn ) and It ( m ) represent in definile but complemen ~ lary left and right suh components of the marker term m  . ( Larlcl 1 are not projection timeions . ) This idea of the significance of : 1 , and II , in given content via the additional axiom (=' . d ) , which allows that if the eom-plemenl ; ary left ; and rights nh components of a marker appear in , q ) propl : i a telel't-right juxtaposition , then the l ~ larker ~ s resotire es Ir my be treated as continuous  .  5 ( =  . d)I , ( a :) . \] , ( x )::: c The remain ii , g clauses for L ; then are : (>2 . 10) >:((, . t , )'0: V~:(~O ) . ~( b ) . lt(~(a )) wh . ., . ol,'v ( . ) n l ? V (~) = 0 (:: . lI)~((<,~y ) = l,(>~(:)) . ~(,)  . l ~( ~( ~)) where I ~ V ( ~) nvv(b ) =
Some example deriw ~ tions follow : x/v : ~ . \[v :, v\]x/v :, ~-\[ v:v\]/1 . ', ~:\] 1,; zx : (~:, v ) " .   .   .   .   .  ,~ . ~ x : 0, ~) " .   .   .   .   .   . ut : JA
X1Y :,\% . ( ~: y ) " XIY ' . , ~ iy . ( zy)r\[xlv:?\]Y:y\[xtv:x\]Y:y
If ': IE x : (< D'x : (~ y ) ~ l ~, U
Xl(XIY ):,\ q,: . (z . ~ D~'XI(XIY):A % ' . (:vy ) '  ( X/Y ) lZ:x\[Z:z\]\[Y : y\]l\]"x/Y : ( ~:~ ) ~ x : ( (:~ . ~ yy ) ", ~, J : & Od ~(~) . v
I )\ xtz : , \'~, . ((~ . ~V . v ) ' I , ( x ) . aO) . v - ~ . . v / I ( x l z ) / v ,\> v~ . ((: , :~ ) tD " 5 rl ' h is axiom may I ) e seen as stating the lhnlt of what cml be said cm tc crldilg ' uncerl  . a inly divided ' resources , i . e . only where tile unccrt . aint . yiselimina . cd by juxtaposition can thel , ,t  oper-~k \[ ol's ) eielllov ( ! ( I i i i i i i i t k i i / ~ r bOll / ( lo\[ . herwise qiid den ~ l'e source visible . I , ' m ' the reasonable axioms ( not in practice required here ) arel , ( e)-:: e and l/(e ) ~ e , i . e .   . he only possible left and right subconlponents of ml'mnpty'marker are likewise empty  . 
1237 x/Y:~\[YlZ:v\]\[z : ~\]
Y : ( yz ) ~ x : (~( w)q " ~= . L(v ) . ~ . R(y ) xtz : ~ . ( ~( v ,)~) ~ ~ ~ . ~/ i(xtz)/(v,z ) : : v~o ~ . (,4vz)*y
Word order and NL semantics
Labels encode both the functional structure and linear order information of proofs  , and hence are used in identifying both the NL semantic and word order consequences of combinations  . Label terms , however , encode distinctions not needed for NL semantics , but can easily be simplified to terms involving only a single abstraet or  ( A ) and with application otated by simple left-right juxtaposition  , e . g . 
x ~ A % . ( ~( w ) ") ' ~ ~ z ~.(( vz ) ~).
To determine the linear order consequences of a proof with label a  , we might seek a marker m consisting only of concatenated variables  , where E(a)-m . 
These variables would be the labels of the proof's undis-charged assumptions  , and their order in m would provide an order for the types combined under the proof  . 
Alternatively , for linguistic derivatlons , we mlght : substitute lexical string atoms in place of variables  , and seeker a marker consisting only of concatenated string atoms  , i . e . a word string . This method is a deqnate for basic L , but problems potentially arise in relation to the discontinuity connectives  . 
Consider the transformation X/Y => Xi " Y . The connective of the result type does not record all the linear order import of the input type's connective  , and neither consequently will the application label operator for a subsequent\[\]E\]  . I to we ver , fl-normalisation yields a simpler label term whose operators record the linear order information originally encoded in the connectives of the types combined  . For exarn ple , the following proof includes a subderivation of X /Y = ~ X\]Y  . 
The overall proof term does not simply order the proof's assumptions under  ) 3  ( giving marker L ( z )  . y . l/ , ( x )) , ' but itst-normal form(xy ) " does ( giving x . y) . 
X/Y :\\ [ V : v\]Y : y/l , : x : (~) ~

XIY :): v . (~: v ) rx : ((~% . (~)  , ) ~:) ~ Of course , normalisation can only bring out ordering information that is implicit in the types combined  . 1:' or example , the combination XTY : ~ , Y : y => X :( xy ) ~ is a , theorem , but the label ( x  y ) ~ does not simply of derx and y . However , if we require that lexical subcategorisation is stated only using the standard Lambek connectives  , then adequate ordering information will always be encoded in labels to allow simple ordering for linguistic derivations  . Alternatively , we could allow discontinuity connectives to be used in stating lexical subcategorisation  , and farther allow that lexical types be associated with complexs h'ing terms  , constrncted using label operators , which encode the requisite ordering information . For example , a word w with lexical type XTY might have a string term  , Vv . ( wv ) " , which does encode the relative ordering of w and its argument  . A more radical idea is that deduction be made over lexical types together with their  ( possibly complex ) lexical string terms , and that the testing of side conditions on inferences be done on the  /3-normal form of the end label , so that the implicit ordering information of the lexical string term is ' brought out '  , extending proof possibilities . Then , tile lexical units of the approach are in effect partial proofs or derivations fi Such a change would greatly extend the power of tile approach  .   ( We shall meet a linguistic usage for this extension shortly  . )
Linguistic applications
We shall next briefly consider some linguistic uses of the discontinuity connectives in the new approach  . The most obvkms role for \] is in handling extraction  ( hence its name )  . Adapting a standard approach , a relative pronoun might have type rel/(sTnp ) , i . e . giving a relative clause ( rel ) if combined with s\]np ( a ' sentence missing a NP somewhere ' )  . Note that standard L allows only types rel/ ( s/np ) and rel/ ( np\s )  , which are appropriate for extraction from , respectively , right and left peripheral positions only . For example , whom Mary considers_foolish can be derived under the following proof  . The atom string ( 6a ) results via substitution of lexical string terms in the proof label  , and )3 . Substitntion of lexical semantics and deletion of directional distinctions gives  ( 6b )  . 
( wl . . . . .  ) (  . . . . . . y ) ( considers ) ( foolish ) rel/(slnp ) .   .   .   .   .   . p : ~: ( ( nl>\S ) /adi ) /np:y\[np:u\]adj:z ( nl~\S ) / adj : ( Vu ) "/ S , , p\s : (( v , ,)'~)" s : ( x((!:O"~y ) * sJ , ,p : a <~ , , . ( ~,(( ~ : , ) ' ~) " ) iT ~/ E rel : (, ~ .  \? ,  . ( ~(( V , ,)") b ~ (6) a . whom . mm'y . considers . foolish b . whom'(,~u . considers/u foolish Imary I ) Moortgat ( 1991 ) suggests that a ( for example ) sen-tentially scoped NP quantifier could be typed s  ~  ( s~np )  , if in lixation and extraction could be linked so that infixation wanto the position of the ' missing np ' of sTnp  . r Such linkage does not follow from tile definitions of the connectives but can be implemented in the  6Thls idea in vi ~ . escmn parls on sto formalism such as lea:i-ealised tree adjoining  9':aramar   ( see Joshi et al 1991 )  , where the basic lexical and derivatiom fl units are partial phrase structure trees associated with h:xical items  . 
7In the approach of Morrill & Solias ( 1993 ) such linkage follows automatically given the int ~erpretive definitions of their connectives  . Moorgat (1990 , 1991) propose special purpose quantification I , ypeconst . rnetors . 
1 238 present approach by assigning a complex lexical string term  , as in the lexical entry (<' rYeE , STmNG , SEM >) : < st(sTnp) , A , , . , ,  ~ , ? so , ,~eone , someone ' > Such a string term would result under a ' typeraising ' transformation sud  , as : np => s~(s\[np) . ' Phe example goh . u gave someone money can be derived am follows , with string and semantic results in (7) . 
(~ot~ , ~ on , ,) ( john ) ( g , ~) ( money ) stCslm , ) : q , w : ~(( m , \~)lm , )/m , : v\[m , : ~\] m , : ~( np\s)/nl ) : ( yv)r/Fm , \ ~ :(( w ) ~) "\ l . : s : (~(( yv ) '~)') '
IIsit , p:Z~v . ( x((yv ) ~ z ) ") ~ s:(q,\% . (, ~(( wl "~) Uq ~ (7) a . john . gave . someone . money b . sorne one ' ( Av . gave ' vmoney ' john ' ) Tllere is a sense in which this view of quantifiers seems very natural  . Quantifiers behave distributionally like simple NPs  , but semantically are of a higher type . I aising the string component undertile transformation p => s  . \[ ( slnp ) resolves this incompatibility without imposing additional word order constraints  . 
This a eCOllnt as stated does not allow for multiple quantitication  , 8bu ~ , would if lexical string terms were l ; reated as part ; \ el proofs used in assembling larger deriwfl , ions , as suggested in the previou section . 
In interesting test case , combining both movement and scope issues , arises with pied piping construcl , ions , where a whd temmoving to clause initial position is accompanied by  ( or ' piedpipes ' ) some larger phrase that conl , ains it , as in e . g . the relative clause to whom John spoke , where the PP to whom is fronted . Following Morrill & Sol\as (1993) , and ultimately Mor-rill (1992) , a treatment of piedpiping can be given using \]" and  1  . Again , linkage of in\[ixation and extraction is achieved via complex lexical string assign-mont  . Al ) Plfied-piping relative t ~ rono , m might b ( '  ( rel / ( s\]pp ) )l ( l ) plnp ) allowing it to infix to a NPI , O-sit\on within a Pl ' , giving a functor rel/(s\]pp ) , i . e . 
which prefixes to a ' sentence missing I'P ' to give a relative clause  . Ilence , for example , low homwonld have type rel/(slpp ) , and so Iowhom , /oh ~ z spoke is ~ relative clause . The lexical semantics of whom will ensure that the resulting meaning is eqnivalent to the nonq  ) ied piping w ~ riant whom John spoke to . 

Bach , 1", .  1981 . ' l ) is continuons Constituents in Generalized Categorial Grmmnars  . ' NRLS , 11, ppl-12 . 
Barry , G . , llepple , M . , l , eslie , N . and Morrill , G .  1991 . 
' Proof ligures and structm:al operators for eategorial  8For example , we might seek Loex ~ . cnd the ln ' o of just given by abstracting over z in a\[lI\]inference  , as a basis for adding in a flu'th or quantifier , but the currm ~ proof label would not license such an inference  , due to the presence of the 0i application . 
grammar'.IllP ' lvc.oft3ACL-5, Berlin.
vm , l~cnthcm , 3 .  1983 . ' The semantics of variety in Catcgorial Grammar . ' R . cport 83-29, Dept . of Math-mnatics , Simon Fraser University . Also in W . Busz-kowski , W . Marciszewskian<l J . vanllen them ( Eds ), Catcgorial Grammar , Vol .  25 , Linguistic and Mtcrary Studies ill Eastern F , urope , John Benjamins .  1988 . 
Benton , N . , lfierman , G . , dcPaiva , V . & tIyland , M . 
1992 , "I hrma~ssignment for intuitionistic linear logic  . ' Tedmical Report , Cambridge University Computer

Buszkowski , W .  1987 . ' The Logic of Types . ' In J . 
Srzednicki ( Ed) , Initiative siu Logic , Martinns Nijhoff Publishers , l ) or drecht . 
Gabbay , 1) .  1991 . Labelled dedu clivc syslems . Draft 1991 . ( to appear : Oxford University Press ) . 
11 epple , M .  1990 . The Grammar and Processing of Or-de'r and Dependency : A Categorial Approach  . Ph . 1) . 
dissertation , ( ~ entre for Cognitive Science , University of l!kl in bn rgh . 
l\[oward , W . A .  1!)69 . ' The formulae-as-types notion of construction . ' In . / . l . \[\[ indley & J . P . Seldin(Eds ), 7 bII . lLCuv~'y , Essays on (2ombiuatory Logic , Lambda
Calculus and l , brmalism , AP , 1980.
Josh \, A . K . , Vijay-Shanker , K . & Vgeir , D .  1991 . ' The convergence , of mihtly context-sensitive formalisms ' . 
In P . Sells , S . Shiebor & T . Wasow ( Eds . ) l , ' ounda-ZioTzal issues in Nal ' ~ lral Lauguage Processing  . M1T
Iress , Canll ) ridge MA.
Lambeth , J .  1958 . " t'hemathelnatics of sentence structure . ' Americau Mathcmalical Monlhly , 65 . 
Moortgat , M .  1988 . Calegorial Investigations : Logical and Liuguislic Aspects of lhe Lambck Calculus  , For \ s , 

Moortgat , M .  1990 . ' The quantification calculus . ' Inl I endriks , 1\[ . and Moortgat , M . ( Eds ), Theory of l ;' le ~: ible Inlerp relalion . Esprit DY ANA Deliverable R . I . 2 . A , lnstitul ; eforl , anguage , logic and Information , Univ < ~ rsity of Amsterdam . 
Moortgat , C . l !) 91 . ' Generalized Quantification and Discontinuous type constructors '  . To appear : W . 
SijI ; sm~t&A . vanIlor ck(li ', ds ) Poor . Tilbury Sympooslum on I ) is coTdinuolts Uous lilucncy . l ) e Gruyter . 
Morrill , ( . ; .  1992 . ' Cat ; egorial l ) ' ormalisation of ILela-rio\sat\on:l'iedPiping , Islands and Extraction Sites . ' Research l ( . eport , l ) ept , de Lhm guatgesi Sistemes In-form gtties , Universitat Politdcniea de Catalunya . 
Morrill , G . & Sol\as , M . T .  1993 . " lhlples , I ) is continu-ity , and Clapping in Categorial Grammar . ' In : Proc . 
of ?' ACI ; 6, Utrecht.
t/x ) or da . , 1) .  1991 . lge source Logics : Proof Theorelical hzves ~ igalions  . Ph . l ) . Dissertation , Amsterdam . 
Versmissen , I ? .  1991 . ' l ) is continuous type construe-to tsill (   ) a Legorial ( \] ranlillar . ' in s . Or \]' S , Universiteit
Utrecht , Netherlands.
Wansing , W .  1990 . q ! ' or mulas-as-types for a hierarchy of sublogies of Intuition \ stir Propositional Logic  . ' ms . lnstitnt fiir Philosol ) hie , Freie Universitgt Berlin . 

