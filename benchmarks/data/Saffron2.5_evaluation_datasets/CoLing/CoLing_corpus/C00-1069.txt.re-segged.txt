Multilinguality in a Text Generation System 
For Three Slavic Languages
Geert-Jan Kruijffa , Elke Teicht ' , John Bateman ~ , Ivana Kruijit ; Korbayov fi " , 
Hana Skoumalovg ~ , SergeSharoff'l , Lena Sokolovad , Tony Hartley ~ , 
Kamenka Staykova /, Ji ~' ~ Hana "
? Charles University , Prague ; ~University of the Saarland ; ~University of Bremen ; 
aRRIAI , Moscow ; ? University of Brighton ;/ IIT , BAS , Sofia


This paper describes alnultilingual text generation system in the domain of CAD/CAM software in -- structions tbr Bulgarian  , Czech and l:\[ussian . Starting from a language-independent semantic representation  , the system drafts natural , continuous text as typically found in software in ammls  . The core modules for strategic and tactical gene , ' ation are implemented using the KPML platform for linguistic resource development and generation  . Prominent characteristics of the approach implemented a  . reatreatment of multilinguality that makes maximal use of the cominonalities between languages while also accounting for their differences and a common representational strategy for both text planning and sentence generation  . 
1 Introduction
This paper describes the Agile system It br the multilingual generation of instructional texts as found in soft  ; ware user-manuals in Bulgarian , Czech and Russian . The current prototype focuses on the automatic drafting of CAD/CAM software documentation  ; routine passages as found in the AutoCAD user -manual have been taken as target texts  . The application scenario of the Agile system is as follows  . First , a user constructs , with the help of a GUI , language-independent task models that specify the contents of the documentation to be generated  . The user additionally specifies the language ( currently Bulgarian , Czechor Russian ) and the register of the text to be generated . The Agile system then produces continuous instructional texts realizing the specified content and conforming to the style of software user-manuals  . The texts produced are 1EU In co-Copernicus project PL961004: ' Automatic Generation of Instructional Texts in the Languages of 
Eastern Europe ' intended to serve as drafts for final revision  ; this ~ drafting'scenario is therefbreanalogous to that first explored within the Drafter project  . 
Within the Agile project , however , we have explored a more thoroughly nmltilingual architecture  , making substantial use of existing linguistic resources and components  . 
The design of the Agile system over all re , sts on the following three assum I ) tions . 
First , the input of the system should be specified irrespective of any particular output language  . This means that the user must be able to express the content that she wants the texts to convey  , irrespective of what natural language ( s ) she masters and in what language ( s ) the output text shou M be realized . Such language-independent content specification can take the form of some knowledge representation pertaining to the application domain  . 
Second , the texts generated as the outtmt of the system should be well-formulated with respect to the expectations of natiw  . ? speakers of each particular language covered by the system  . 
Since differences among languages may appear at any level  , language-sensitive dcisions about the realization of the specified content must be possible throughout he generation process  . 
And third , the notion of multilinguality employed in the system should be recursive  , in the sense that the modules responsible t br the generation should themselves be multilingual  . 
The text generation tasks which are common to the languages under consideration should be pertbrmed only once  . Ideally , there should be one process of generation yielding output in multiple languages rather than a sequence of monolingual processes  . This view of ' intrinsic multilinguality ' builds on the approach set out in Bateman et al  ( 1999 )  . Each module of the system is fnlly multilingual in that it simul-resources  , defining commonalities bel ; ween languages , and resource integrity , in ; bat the in-dividuality of each of the language -speeitic resources of a multiling nM ensemble is always preserved  . 
We consider these assuml ) l ; ionsan ( l the view of multilinguality entailed by ; hem to be crucial for the design of efli ; ctive multilingual text generation systems . The results so far a ( : hicved by the Agile system SUl ) port this and also of l ' era ~ soli ( lexperiential basist br the develot ) m cnt of fllr ther multiling nal generation systems . 
The overall operation of 1 ; t1( ; A gile sysl ; em is as t bllows . Al/t cr the us(u'hasSl ) ecilied some in l ; en(led text ( ; Ollten I ; ( described in Section 2) via the Agile GUI , the system i ) ro (: eeds to gen-eral ; e the texts required . To do this , a text t ) lammr ( Section 3 ) first assigns parts of the , task model to text elements and arranges l ; h( ; mina hierarchical fashion a text t ) lan . Then , a sentence plammrorganizes I ; he content of the text elements into sentence -size delml ~ k sandere ~  , test he corresponding input fin'l ; hetacti-ca , 1 generator , expressed in standard sentence l ) lamfing language ( SPI , ) l brmulae . Finally ,  1 ; 11( ; tactical g(meral ; or generates t ; he linguistic realizations corresponding 1 ; otheseSl ) l~s the text ( Sect ; ion 4) . In the stage of the l ) roj ccI ; rtl ) or te(l here , we , conceal ; rated i ) arl ; icularly on \]) roccdu-ral texts . These otlhrsl ; el)-by-st ; et ) des(:rit)t ; ions of how to perl brm domain tasks using the given software tools  . A simplified version of one such procedural text is given  ( tbr English ) in Figure 1 . This architect m:emirrors the reference architecture for generation diseusse  ( t in I/ , eiter8z Dale (1 . 997) . The modules of the system are 1 ) ipelined so that a continuous text is generated realizing the intended meaning of the inlmt semantic representation without backtracking or revision  . 
Several important properties have ( ' haracter-ized the method of development leading to the Agile system  . These are to a large extent responsible for the eflhetiveness of the system  . 
These include :
Reuse and adaptation of available resources . We have reused snt ) stantial bodics of e , xisting linguistic resources at all levels relevant for the system  ; this t ) laye ( la ( : rueial role in achieving the Sol ) histie at cd generation capa-7b d~nwapolylincFirst start the PLINE command using one of these methods : Windows From the Polylinctly out on the  , l ) raw tool ~ lmr , choose Polylinc . 
DOS and UNIX lqom the Drawmenu , choose Poly-line . 
1.. Spccit ~ y the start point of the polyline.
2. S1)ecil~ytim next point of the 1) olylinc.
3. Pressll , cturnt ; oend the polyline.
Figurel : Example " To draw a polyline " bilities now displayed by the system in each of its languages of expertise prior to the project t\]m 'l  . ' e were 11o substantial ~ mtomatic generation systenls fi ) rany of the languages covered . The core modules for strategic and ta ( :ti ( ' algeneration were all imt ) lemcnted using the Kernel-Penman Multilingual system  ( KPML : ef Bateman et al , \]999) a Commonl , is pbase(t grammar development environment , in addition , we adopted the Pemnan Upt ) er Model as used within Pemnan/KP Ml ~ as the basis t brour linguistic semantics  ; a more rcstri ( : ted domain model ( DM ) rclewm to the CAD/CAM-domain was &' , lined as ast ) e('ialization of l ; he UM con-(:epts . The I ) M was i uspired by the domain me ( tel of the Drafterl ) rojet : t , but l ) res(ml ; sag(m (' , ralizati ( ) n ( ) f the latter in that it allows for eml ) ( ; d(lingt : asks and ills L rut ' ; ionst : o any arl fi-l ; rm : yre (: ursive depth ( i . e . , more complexl ;  cxt ; plans ) . A h'eady existing lexical resom:ces and morphological modules availabh  ; to the 1) ro . j (', ctwere used tbr Bulgarian , Czech and l ~ . ussian : the Czech and Bulgarian components were mo  ( t-ules written in C ( e . g . , IIaji (: L ; Hla(lk ~ ,  1997 , tbrCzech ) that were interfimed with KPMI , using a standard set of API-methods ( of . Bateman & Sharoff , 1998) . Finally , because no grammar suitable for generation in Bulgarian  , Czech and l/ . ussia , nexisted , a grammar t br English ( NIGEL : Mann & Matthiessen , 1985) was reused to lmild them ; t br the theoretical basis of this technique see Teich  ( 1995 )  . 
Combination of two methods of resources deve lopment  . Two methods were combined to enable us to develop basic general-language grammars and sublanguage grammars fin:CAD/CAM instructional texts at  ;   ; 11( ; same time . Onenmthod is the system-oriented one aimed at lmildiug a computational resource is a method strongly supported by the KPML development environment  . The other method is instance-oriented , and is guided by a detailed register analysis . The latter method was particularly important given the Agile goal of being able to generate texts belonging to rather diverse text types -- e  . g . , impersonal vs . personal ; procedural , flmetional descriptions , overviews etc . 
Crosslinguistic resource-sharing . A crosslinguistic approach to linguistic specifications and implementation was taken by maximizing resource sharing  , i . e . taking into account similarities and differences among the treated language so that development tasks have been distributed across different languages and reused wherever possible  . 
2 Language-independent Content
Specifications
The content constructed by a user via the Ag-ile GUI is specified in terms of Assertion-bozes or A -boxes  . These A-boxes are considered to be entirely neutral with respect othe language that will be used to express the A-box's content  . Thus individual A-boxes can be used for generating multiple languages  . A-boxesspec-i ( y content by instantiating concepts from ~ , he DM or UM , and placing these concepts in relation to one another by means of configurational concepts  . The configurational concepts define adnfissible ways in which content can be structured  . Figure 2 gives the configurational concepts distinguished within A gile  . 
Procedure A procedure has three slots : ( i ) GOAL ( obligatory , filled by a USER-AcTION ) , ( ii ) METIIODS ( optional , filled by a METHOD-LIsT ) , ( iii ) SIDE-EPFECT(optional , filled by a USER-

Method A method has three slots : ( i ) CONSTRAINT ( option M , filled by an OPERATING-
SYSTEM ) , ( ii ) PaEeONDITION ( optional , filled by a PROCE-
DURE ) , ( iii ) SUUSTEPS ( obligatory , filled by a PI~OCEDUI/E-

Method-List AMETIIOD-LIST is a list of h/IETIIOD 'S  . 
Procedure-List APROCEI ) URE-LIST is a list of

Figure 2: Configurational concepts
Configurational concepts are devoid of actual content  . Tile content is provided by inst , antia-tions of concepts that represent various user actions  , interface events , and interface modalities and functions . Taken together , these instantiations provide the basic propositional content tbr instructional texts and are taken as input t br the text planning process  . 
3 Strategic Generation : From
Content Specifications to Sentence

To realize an Abox as a text , we go through successive stages of text planning , sentence planning , and lexicogrammatical generation ( cf also Reiter & Dale ,  1997) . At each stage there is an increase insensitivity to  , or dependency on , the target language in which output will be generated  . Although the text planner itself is language -independent  , the text ; plamfing resources may ( lifter fl'om language to language as much as is required  . This is exactly analogous to the situation we find within the individual language grammars as represented within KPML : we therefore represent the text planning resources in the same fashion  . For the text type and languages of concern here , however , w ~ ria-lion across languages at the text planning stage turned out to be minimal  . 
The organization of an Abox is used to guide the text planning process  . Itere , we draw a distinction between text structure elements  ( TSEs ) as the elements from which a ( task-oriented ) text , is builtut ) , and text templates ' , which condition the way TSEs are to be realized linguistically  . We locus on the relation between concepts on the one hand  , and TSEs on the other . 
We are specifically interested in the configurational concepts that are used to configure the content specified in an Abox because we want to maintain a close connection between how the content can be defined in an Abox and how that content is to be spelled out in text  . 
3.1 Structuring and Styling
A text structure element is a predefined component that needs to be filled by one or more specific parts of the user's content definition  . 
Using the reader-oriented terminology common in technical authoring guides  , we distinguish a small ( recursively defined ) set of text TSEs ; these are listed in Figure 3 . 

Task-Docmnent ATASK-\] ) OCU MFNT hast WO slots: ( i ) TASK-TFI'I , E ( ol ) ligatory) , ( ii ) TASK-INSTIU(ITIONS ( obligatory ) , being a list of " at least one ~\ [ NSTRUCTION . 
Instruction An INSTRUCTION has three slots : ( i ) TASKS ( obligatory )  , being a list of at least one
TASK ~( ii ) CONSTRAINT ( optional) , ( iii)Pm , ZCONDITION ( optional) . 
Task ATASK has two slots : ( i ) INSTRUCTIONS ( ol ) tional )  , ( ii ) SII)I';-EI , 'I"I , : C'I'(ol ) tional) . 
Figure 3: Text Structure Elements ( TSEs ) The TSEs are placed in correspondence with the configurational concet  ) ts of the DM ( cf . Figure 2) ; this enat)les us to lmild a texts tru('turel ; hatfolh ) ws the structuring of the content in an
A-1) ox ( cf . Figure 4).
Orthogonal to the notion of text structure l-ement is the notion of text temt  ) late . Whereas TSEs capture what needs to be realized , the text template ( : al ) tures how that content is to 1 ) erealized . Thus , a feint ) late defines a style for expressing the content . Amwediscuss below , we define text templates in terms of constraints on the realization of si  ) e ( : iti ( "  ( in ( tivid-ual ) TSEs . D ) rexamt)le , whereas in Bulgarian and Czech headings ( to which the '\]' A SK-TITLE element corresponds : of  . Figure 4) are usually realized as nominal groups , in the Russian Au-to CA Dulallnal headings are realized as nonii-nile purpose clauses as they are ill English  . 
3 . 2 Tex ~ P lann ing g ~ Sentence P lann ing The major component of the text pbmner is fi  ) rnmd by a systemic network fi ) r text structuring ; this network , called the text structuring region , defines an additional level of linguistic resources for the level of genre  . This region constructs text structures in a way that is very similar to the way in which the systemic networks of the grammars of the tactical genera - or build up grammatical structures  . In fact , by using KPML to implement his means for text structuring  , the interaction between global level text generation  ( strategic generation ) and lexicogrammatical expression ( tactical generation ) is greatly facilitated . Moreover , thisal ) - t ) roach has the advantage ; tint constraints on output realization can 1 ) e easily accmnulated and propagated : for example , the text planner caniml ) ose constraints on the output lexicogrammatical realization of particular text t  ) lan elements , such am the realization of text headings by a nominalization ill Czech and Bulgar-an or by an in finite purpose clause in Russian  . This is one contribution to overcoming the notorious generation gap prol  ) leln caused when a text planning module lacks control over the line-graine distinctions that m ' e available in a grmmnar  . Illour case , both text plamfing and sentence planning are integrated into one and the same system and are distinguished by strat-ification  . 
TASK-TITLE ~- GOAl , of topmost PROCEDURETASK-INSTRUCTION S~- METIIODS of PROCEDUI/ES ll  ) E-EIq , ' ECT~SID hl-EFFI~CT of PROCEDUII . I\]
TASK/-~GOAL of PROCEI ) IHtI , ; (- JONSTRA1 NT <- CONSTRAINT of ~41 , VI'IIO1) PRECONI ) ITION ~ PIH?COND1TION of ~ , 4 ETI1OI ) 1NSTIIUCTI ( IN-TAs KS1--SUBSTH ) So fa METIIOD
INST1HJCTION+5MI,TI'IIOD
Figure 4: Mapping TSEs and configurational concepts defined in the DMF ollowing on from the orthogomflity of text t /  ; mplates and text structure elements , the text structuring region consists of two parts  . One1)arl ; deals wil ; hinter preting the Abox in terms of TSEs : traversing l  ; he network of this part of the region produces a text structure for the A-b/lxcont brufing to the definitions above  . The second part of the region imposes constraints on the realization of the TSEs introduced by the first part  . Divers ( ; constraints can beira-posed depending on the user's choice of style  , e . g . , personal ( featuring p predominantly imperatives ) vs . impersonal ( t baturing indicatives ) . 
Tile result of text plmming is a text plan.
This can be thought of as a hierarchical structure  ( built by TSEs ) with lilts of Abox content at ; its leaves together with additional constraints imposed by the text planning process : e  . g . , that the Title segment of the document should not be realized as a full  ( : lause but ; rather as a nominal phrase or almrt ) osive det ) endent clause . The text plan may also include constraints on preferred layout of the docmnent elements : this il flbrmation is passed on via HTML annotations  . 
The sentence plmmer then takes this text plan as in tmt  , and creates SPLt brmulae to express The resulting SPLs can also group one or more leaves together  ( aggregation ) det ) ending on decisions taken by the text planner concerning discourse relations  . Furthennore , constraints on realization that were introduced by the text-planner are also included into the SPLs at this stage  . 
Of particular interest multilingually is the way concepts may require different kinds of realizations ill different languages  . For example , languages need not of course realize concepts as single words : in Czech the concept Mcn  , t gets realized as " menu " but the interface modality Dialogboz is realized as a multiword expression " dialog ov dok no "  ( whose compofients i . e . , an adjective and a nominal head may undergo various grammatical operations independently  )  . 
The Agile system sentence plammr handle such cases by inserting SPL fbrms corresponding to the literal semantics of the complex expressions required  ; these are then expressed via the tactical generator in the usual way  . The resulting SPL formulas thus represent the language-specitic semantics of the sentences to be generated  . Otherwise , if a concept maps to a single word , the sentence planner leaves the fnrther specification of how the concept should be realized to the lexico-grammarnd its concept-to -word map I  ) ings . More extensive difl b . rences between languages are handled by conditional-izing the text and sentence planner resources fl tr the r according to language  . 
4 Tactical Generation : From
Sentence Plans to Sentences
The tactical generation component hat colt-structs sentences  ( and other grammatical units ) fl ' om the SPLt brmulae specified in the text plan relies on linguistic resources tbr Bulgarian  , Czech and Russian . The necessary grammars and lexicons have been constrncted employing the methods described in Section  1  . As , to ted there , the crucial characteristic of this model of nmltilingual representation is that it allows tbr the representation f both  , commonalities and differences between languages , as required to cover the observable on trastive -linguistic phenomena  . This can be applied even among typologically rather distant languages  . 
We first illustrate this with respect o some of the contrastive-linguistic t  ) he nomena that are covered by this model employing exami  ) lesti'om English , Bulgarian , Czech and Russian . We then show the organization of the lexicons and briefly describe lexical dloice  . 
4 . 1 Semantic and grammatical crosslinguistic variation One  . of the tenets of our model of crosslinguistic variation is that languages have a rather high degree of similarity semantically attd tend to differ syntactically  . We can thus expect o have identical SPL expressions for Bulgarian  , Czech and Russian in many cases , although these may be realized by diverging syntactic structures  . 
However , we also allow for the case in which there is no commonality at  ; this level and even the SPL expressions diverge . 2 Example 1 illustrates the latter case ( high semantic divergence , plus grammatical divergence ) , and example 2 the former ( semantic ommonality , plus grammatical divergence ) . 
Example 1: English and Russian spatial PPs . The major lexicogrammatical difference l ) etween English and Russian prepositional phrases is that the relation expressed by the PP is realized by the choice of the preposition in English  , whereas in Russian , it ; is in addition realized by case-government . In the are . a of spatial PPs , the choice of a particular preI ) osition in English corresl ) onds to a distinction in the dimensionality of the object that realizes the range of the relation expressed by the PP  . For both PPs expressing a location and PPs expressing movement  , English distinguishes between three-dimensional objects  ( in , into ) , one-or-two-dimensional objects ( on , onto ) and zero-dimensional objects ( at , to ) . 
In Russian , in contrast , zero-or-three dimensional objects ( preposition : v ) are opposed to one-or-two-dimensional objects ( preposition : ha )  . Afn rther difference between the expression of static location vs  . movement is expressed by case selection : na/v +locative case expresses static location  , v/na+accusative case expresses in ovement ( entering or reaching an object ) and the preposition k+dative case expresses move -inent towards an object  (  , lot quite reaching or 2This distinguishes our approach fl ' om interlingua -based systems  , which typically require a common semantic ( or conceptual ) input . 
478 entering it ) . In the-onverse relation , motion away from an object , sissele , eted tbr movement from within a no h . joel ; , and otf brmove-menaway from the vicinity of an ot  )  . jeet . Her ( ; , both prel ) ositions govern genitive case . The dimensionality of the object is only relevant for the distinction between v/n a and s/ot  , 1) ut not for h . Since the concel ) tualizations of spatial relations are ditf'erent across  \]'3nglish and Russian , the input SPL expressions diverge , as shown in Figure 5) ; rather than using domain model concepts , these SPLext ) ressions restric themselves to Ut ) p e , rModel concepts in order to highlight the crosslinguistic contrast  . This examl ) leillustrates well how it is ( ftenne : e , ssary t ' semanti-:ize , ' ev e , nts differently in ( tilt'ered ; languages in order 1 ; o achieve the most natural results . Not ; ; that Cze , chisher every similar to l/nssian . 
a . SPL Russian ( example : name DO-Textl-Ku : target form " Pomestite fragment v bufer  . ": logical form ( s/dispositive-material-action : lexpomestitj : speech-act-id command : actee  ( a/object : lex fragment ) : destination ( d/THREE-D-0BJECT : lexbufer ) ) )  1 . SPLRn : English ( example : name D0-Textl-En : target form " Put the selection on the clipboard  . ": iogical form ( s/dispositive-material-action : lexput : speech-act-id command : actee  ( a/object : lex selection ) : destination ( d/ONE-0R-TW0-D-0BJECT : lexclipboard ) ) ) 
Figure 5: SPI , extressions
Example 2: English , Bulgarian and Czech headers in CAD/CAM texts . Grammatical ullits ( 1 )   ( 4 ) belows how all ex ~? tIll t , e of , : r , ,ss-linguistic commonality at the level of senanti : in tut and divergence at the le  , vel of grammar . 
These units all timeion asself sutficient Task -titlest br the deseriltions of particular actions that can bet  ) erformed with the given st'tw are . 
(1 ) En : T draw a polyline ( 2 ) BU:qep Taenena Il OJII4 MI4 IIFIH
Drawing-of polyline qNDEF
NOMINAL ( 3 ) Cz : Kreslenlkf ' ivky drawing-NOMINAL \] ine-GEN ( d )  \]/ , ll : LI wo 6I , IHal ) I4COBaTI , IIO , KHJIIIIIHIO in order draw-INF l ) olyline-AcC There are two major ditre , , , ces(: , ) (4) that need to 1) eaccount e , d for: ( i ) they exhibit divergent grammatieal ranks in that ( 1 ) and ( 4 ) are clauses ( u ontinite )  , while (2) and (3) are nomil , algroul , s(nominalizations ) ; and ( ii ) they show divergent syntactic realizations : ( 2 ) and ( 3 ) ditl'er in that in Bulgarian , wl fich does not have (: as (' , , the relation 1 ) etween the syntactic head Met ) q_'a elte ( ch , crtacn c ) and the modifier lie-:mamma ( polilinia ) is (  ; x t ) ressed by a t ) r e , position na(ha ) , whereas in Cze , ch , which has cast , this relation is expressed by genitive case , ( k?ivky ) . 
\]) espite these ( litferen (: es , only the first diver-gen (: e has any ( ; on sequen (: ; s for the S\])Lext ) res-sions rcquir ( ; d ; I ; hcl ) a sie semantic ommon a\]-ity among ( 1 ) (4 ) is 1 ) reserve , d . This is shown in Figm:e6t ) yme , ans of the standard linguistic conditionalization  1  ) rovided 1 ) yKPMLl ' or all levels of linguistic des ( : ription . The COll ( tition-alization shows that both the English ( 1 . ) and the Russian ( 4 ) ar ( ' nontinite clauses while , the \] hdgarian ( 2 ) and the Czech ( 3 ) are nomin M-izations . These S\])l , ext ) ressions also show the use of ( lom ~ dn ( ' onc (  ; 1) tsasi)rodu('e(lby the text tfl~mner rathe , r than Ut ) lmr model concepts as in the SPLs in Figure ,  5 . 
(example : name DO-Textl : logicalform ( s/DM::draw:en:ru:PROPOSAL-Q&PROPOSAL : bu:cz:EXIST-SPEECHACT-Q&NOSPEECHACT : actee  ( d/DM :: polyline ) ) ) Figure 6: Multilingual SPLe , x pression t br the header examlfles The second differen  ( ' e is handled by the generation grmmnars internally  . Here , Bulgarian and Czech share the basic tractional -grammatical description of t  ) ostmotlifie , rst brnomilmlizati(ms(Figm:e7) . The ditl'erence in structure only from the functional description : For Bulgarian  , the postmodifier marker Ha ( ha : % f ' ) is inserted , and tbrCzech , the nominal group realizing the Postmodifier is attributed genitive ease  . a ( gate:name MEDIUM-QUALIFIER : inputs processual -mediated : outputs  ( ( i . 0 medium-qualifier ( : bu : cz preselect Medium nominal-group )   ( : cz preselect Medium noun-gen-case )   ( : buinsert Medium qualifier marker )   ( : bulexify Medium qualifier markerna ) ) ) : region QUALIFICATION ) Figure 7: Shared system tbr Bulgarian and
Czech 4.2 Lexical choice and lexicons
The lexical items t breach language are selected from the lexicon via the domain model  . ADM concept is annotated with one or more lexical items from each language  . If there is more than one item per language , the choice is constrained by features imposed by the graln mar  . 
For example the concept DN::draw is annotated with two lexical items which are the imperfective and perfective forms of the verb draw in Czech  , Bulgarian and Russian . If the grammar selects imperfective aspect , tim first is chosen ; if the grammar selects perfective aspect , the second is chosen . This mechanism is used als of br the choice between a verb and its nominalization  , among others . With the help of the lexicon , the inflectional properties collected tbra particular lexical item during generation are translated into a format suitable t brexternal morphological modules  , which are then called . 
The result of the external module , the inflected tbrm , is passed back to the KPML system and inserted into the grammatical structure  . 
5 Evaluation and Conclusions
A first round of evaluation has been carried out on the Agile prototype  . This directly assessed the ability of users to control  multilin-3This description is also valid for Russian , which has a nominal group structure similar to Czech  . The 13 ulgarian one is more like English . 
gual generation in tile three languages , as well as the design and robustness of the system  eom-1onents   . Groups of users were given a brief training period and then asked to construct A-boxes express in given content  . Texts were cross-generated : i . e . , the languages were w~ried across the A-boxes independently of the native languages of the subjects who created them  . Errors were then classified and recommendations for the next and final A gile prototype collected  . 
The generated texts were then evaluated by expert technical authors  . They were generally judged to be of a broadly similar quality to the texts originating from manuals  , and both kinds of texts received similar criticism  . The main source of criticism and errors was the design of the GUI which is now being improved for the final prototype  . The overall design of the system has the retbre shown itself to offer an etfective approach tbr multilingual generation  . 
We are now extending the system to cover a broader angeof text types as well as the further grammatical and semantic variation required by the evaluators as well as by the additional text types  . 
References
Bateman , J . A . , Matthiessen , C . M . I . M . , & Zeng , L . 
(1999) . Multilingual natural anguage generation for multilingual software : a flmction a linguistic approach  . Applied Artificial hdelligencc , 13(6), 607-639 . 
Bateman , J . A . & Sharoff , S .  (1998) . Mult , ilingual grammars and multilingual lexicons for nmltilin-gual text  ; generation . In Mnltilinguality in the Icz-icon II , ECAI'98 Workshop 13 , ( pp .  18) . 
Hajie , J . 8; Hladk ?, B .  (1997) . Probabilistic and rule-based tagger of an inflective language a comparison  . In Proceedings of ANLP'97, ( pp . 

Mmm , W . C . & Matthiessen , C . M . I . M .  (1985) . 
Demonstration of the Nigel text generation computer progrmn  . In J . D . Benson 8: W . S . Greaves ( Eds . ) , Systemic Perspectives on Discourse , Volume 1(pp .  50-83) . Ablex . 
Reiter , E . & Dale , R .  (1997) . Building applied natural language generation systems  . Journal of Natural Language Engineering ,  3 ,  57-87 . 
Tcich , E .  (1995) . Towards a methodology for the construction of multilingual resources t br multilingual text generation  . In Proceedings of the I J-CAI'95 workshop on multilingual generation , ( pp . 


