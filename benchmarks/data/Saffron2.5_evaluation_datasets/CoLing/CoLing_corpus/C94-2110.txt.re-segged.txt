Virtual Polysemy
Antonio Sanfilippo , Kerima Benkerimi &: Dagmar Dwehus *
SHARP Laboratories of Europe
Oxford Science Park , Oxford OX44 CA , UK
antonio , kerima , dagmar@sharp.co.uk

We present an approach to lexical knowledge representation where different uses of the same word can be conflated into a single meta-entry which encodes regnlarities about sense/usage extensibility  . 
This approach makes it possible to solve lexical anrbiguities by using contextual information  ( lur-ing language processing to ground underspecified word entries  , and can be efficiently implemented within a typed feature structure formalism  . 
1 Introduction
One of the central aspects of lexical knowledge , perhaps the most significant in characterizing the creative aspect of language use  , is our ability to generate appro ~ priate uses of words in coutext  . This ability is usually exercized by manipulating semantic and/or syntactic properties of words to achieve desirable collocational settings  . Some illustrative examples are given in ( 1 ) where ? move can be interpreted as a psychological verb when used transitively with a sentient direct object  , * enjoy can take either a noun or verb phrase complement when used in the expeT ~ encesnse  ( Pustejovsky ,  1991 , 1993; Briscoe , Copestake & Boguraev ,  1990) ,   , accord is synonymous with either agree or give /granl depending on its valency  ( Poznafiski & Sanfilippo ,  1993) , and * the occurrence of a directional argument with swim triggers a shift in aspectual interpretation  . 
(1) a . Please move your car
Her sadness moves himb . John enjoys the book
John enjoys reading the booke . The two a lib is do not accord
They accorded him a warm welcomed . Johnswam for hours
Johnswamacross the channel
Although the precisen rechanisms which govern lexical knowledge are still largely unknown  , there is strong evidence that word sense extensibi\[ity is not arbitrary  ( Atkins & : Levin , 1991; Pustejovsky ,  1991 , 1994; Ostler Atkius ,  1991) .  \[ , ' or example , the amenability of a * This work was carried out as part of the M'F project at SIIARP Laboratories of Europe  . We would like to thank all members of the NLP groul  )  , and in particular Iatl Johnson and Pete Whitelock  , for helpful comments and advice . 
transitive verb such as move to yield either a movement or psychological interpretation eanbe generalized to most predicates of caused motion  ( e . g . agitate , crash , cross , lift , slrike , sweep , unwind ) with the causer colresponding to the stimulus argument and the theme to the experieneer  . Similarly , the option of either a noun or verb phrase complement for enjoy can be extended to many other psychological verbs with experiencer subjects  ( e . g . hale , like , lnv fe O , and verbs of undirected motion in English ( e . g . carry , drive , float , push , run , swim , walk ) can subcategorize for an expression of completed path so as to yield a telic/directed interpretation  ( Tahny , 1985; Sanfilippo el al . , 1992; Sanfilippo , 11994) . Moreover , the metonymical and metaphoric processes which are responsible for sense/usage extcn-sious appear to be sul  ) ject to cross linguistic variatiou . 
For example , the " meat vs . animal " alternatkm that is found in English-- viz  . feedlh . elamb vs . e allamb--is absent in Eskimo ( Nunberg & . Zaencn ,  1992 ) as well as in l ) utch where nominal compomlding is used instead- . e . g . lain vs . lamvlees ( Copestake & Saniil-ippo , 1993) . 
Exanrples of this sort show that our ability to exteud word use in context is often systematic or conventiomalized  . As Pustejovsky and Boguraev (1993) point out , traditional approaches to lexical representation assume that word use extensibility can be modeled by exhaustively describiug the meaning of a word through closed enumeration of its senses : each sense corresponds to a predefined context  . This practice has largely characterized the compilation of dictionary entries in the tex -icographic tradition and has consequently iniluenced the shape of comlmtational lexicons since the largescale construction of such lexicons has typically involved semiautomatic knowledge acquisition from machine readable dictionaries  ( Carroll & Grover ,  1989) . 
Word sense enumeration provides highly specialized lexical entries  , but ? it fails to make explicit regularities about word sense cx tensibility which are necessary in promoting com-pactedness in lexical description  , ? it is at odds with our ability to create new word uses in novel contexts  , and ? it generates massive lexic ~ dambiguity . 
The use of lexical rules to generate different uses of a word fl'o maker nel entry  ( Copestakegg Briscoe , 199l ; Sanfilippo ,  1994 ) provides a 1 ) rincipled alternative to word sense enumeration and can be made to eater for uovel uses of words  . I lowever , it is not clear whether this practice can address the question of lexical ambiguity suc  ( : essfully as there is no known general control restrict polysemic explmsion without preen q  ) ting the generation of l ) ossible word uses . 
The goM , f this paper is to show how a more dynamic approach to lexical stlecilic  ; ~ tion can I ic used to tackle the l ) roblem of lexical a , nhiguity and at the same time to model creative a Zl  ) ccts of word usage . In particular , our objective is to present ways iu which word sense enmner ~ d  ; ion cn be esche we d by contlating different word senses into a single recta-entry which allows sense/usage expansiou without reliance on co ercive operations/lel  , as lexical rules . This approach is implemented within ~ L typed feature structure lilt  . -realism where word sense cout latk mc~tn bec . x pressed in terms of lexical type uuder sllc Cificatiou : awnr dentry is ~ Lssociated with alcxical tylle havi  , g suhtype extensious which describellossible uses of the word  . 
This approach makes it possible to solw ~\[ exical am--biguities by us in r  ; syntactic and semantic context . alinformation during language processing to ground un  . 
ders pecitled word entries.
2 Lexlcal Polymorphism and q'ype
Resolution
Our lloints of dep ~ Lrture are .   ( i ) the polymorll hie approach to lcxical specilication of I ' us /  . ej(wsky (1991 , 1993) aud ( ii ) the Attribute I , ogic Engine ( AI , I ; :) for real is md c . veloped by Carpenter(\[9, ()2; t,t992b ) . 
Following Pustq\]ovsky , we adopt an integrated muLtilayered representatiou  ol7 word meaning which incofporates salient a speets of world know h  . 'd ge and * viler ( ; different use , ~ of the same word are conll at cd into as ill-gle mela-e'nlry  . For example , a verb eutry is ~ m signed ~ t lexical type which provi  ( les as l > ecifie ~ tt lon of both argument and event stru <' ture in <: luding them ~ tic and collo < -atioual  ( e . g . qualia ) prol > < ~ rties <> fits parti <: ipants ~ tnd can be extended to achieve contextual congruity  ( see below )  . In contrast with l'ustejovsky , however , we do not ? lsecoercinu as alrlaiil generative device to enl  (  . ) r c e s e u s e e x t c n s k ) n s . Truecoer (, . i on h wo l v c s\[ , y\[ ) eshifting which is operationally equivalen to a lexic M rule  ( Pustejovsky ,  1993) . Consequently , the gener ; t-Lion of sense exten , dons by coer ( : k misultimately of little availin redueing lexic  ; daml figuil . y , a . ' ~ w~s noted earlier R ) r lexical rules . 
\] lather than using coercion , w cencode lexi ( : alpoly morphism by type underspecilieation ad generate sense extensions using contextual iulbrmation to ground lexical items  . Wc provide such a sime ill ca . 
lion of lexical structure within ( ; arpenter's ALE using at lPSG dike grammar I ' ( )rmalisnl ( Pollard & Sag ,  1992) . This grammar formalism integrates a neo . 
l ) a vidsonian approach to verb semanties ( Parsons ,  1990 ) where thematic roles are delined as prototy l ) ical notions ( Dowry ,  1991) , secSaniilil)l ) O(1993) . l , cxical types are ~ m'anged into an inheritance hierarchy with l  ) olymorl ) hictypes ~ s intermediate nodes ; caeh type can be ~ ussociated with cotmtraiqts expressed in terms of attribut c--w due pairs  . For exanq ) le , the lexical type of SylIS (' , III for all intl : all si Livc verb sile hl , ~ swint is deflued so as to subsume i . ll (', types iv_,n dir ~ synse . nrandiv_obl_dlr_synse . m which characterize the two uses of the verb exen q  ) lilied in ( ld )  . This is shown in the type lattice fragment in Fig \[ where  . upl)er-(' . ~me characters are used lor attrilml ; es and bold lower- . ct use for tyl ) es ( many details are omitted to re ~ u .  ~ , of exposition )   ( lyn_L've is a sort for nonstative ventualities ( i . e . 
it subsumes processes and relic events ) -pred is either a lexical or logical predicate  ( l ( : x_pred , e . g . swim ; log_t)rcd , e . g . aud ) loc_chng is a thematic sort which characterizes participants undergoing change of location  ( lir_t ) re .  1 ) is a sort for prepositions which express a directed path  ( e . g . to , acT vss ) . 
Becauses wim in the lexicon is assigned tile underspec-itic dtypeiv_re Mitor Av  . x ) bl_dlr ~ synsem , it can potentially combine with a complement and the subject arguments  , or the subject only . In the tirst case , the complement list would he nonempty with its head in-stautiat  , in gapp_syns(~m ( prepositional phrase ) . The value for the t ) ath SYN:LOC:COMPS would thus resolve to the type 1 ) p_comp dlst which as shown in ( I ) is the singleton list containing a pp-syIl sem . 
This is simply because _or4qu:ompl lst is defined as having subtypes (  ;  . Jlst the empty list -- and pp_coml ) _llst as shown in ( 5 )  . 
Illatyped feature structure formalism with gcn -eralizcd reeursive type  . resolution ( Pollard & Sag , 1992: ch . 1; Carpenter , 1992a : ch . 15), the grounding of e . _or . _pf)_COml) . Jlstol ) l ) _COml ) A is two uhlsul Iiccto solve iv_undir_or Av_ol ) l_dir_synsemtoiv_obl_dir_synsean , lnstantiation for timhead of tile compAist during l  ) ~trsing would then be sufficient to det ?: rmine which use of the verb is c  . on tcxtually appropriate . Elegant as it might seem , however , generalized recursive tyl ) e resolution leads to conqmtational in ef-tl ciency . Moreove . r , if w c ; Lssume that lexical entries are sort-resnlved during rule application  , it is difficult , perhaps impossible , to avoid multiple solutions for an under . 'q ) ecifi ( ' dlcxical item when its rule context Call-not lc ~M to dete  . rnlinistic disamhiguation . '\[' his would be the case when parsing a verb such ~ usbrgtg with a noun phrase complement  . As ( : an he inferred with reference to the three lS ( :s of the w~'rb exemplilied in ( 2 )  , three so httinns are possible until either the subject or the next comphnnent is l  ) arsed : ( 2 ) a . Mary brought l " i do h . Mary b~'(n/ght-171 (7o to the party c . mary cookie We trie ! lt , oachieve ~ tinoree ( licient middeterininis ~ tictreatlnent by ( h . we loping special-l ) urpose facilities which make awfi\[ableaguklcd approach the sort reso-hd  , ion . The I ) ~ si (' . intuition underlying such an atteml ) t is that for every class of lexical ambiguity there is a spe-citic words uh structure whose instantiation is essential for disaml  ) iguation . For example , valency ambiguities lor verbs caa be generally resolved with reference to their complementation structure  , ~suoted above for the two uses of swimilll i d  )  . Likewise , the ambiguity of nonfinals sue has lamb which can be used as either simple nouns or m  ) unl ) hr~scs in English ( e . g . feed the htmb vs . cat lamb ) can be contextually resolved with reference to d c t c  . rmiuer selection . 
We use di ) rocedural attachments orules to support contextmflly guided resolution of polymort  ) hic lexical type . s . The AI , E environment provides rather convenient facilitie  :  ; to carry out this implementation iuther verb Joe  1 \]/\[ Ilp_~ylleelllSYN:LOC=\[SUBJ=\[S ~ M:IND=\[\]\] 
LCOMPS = cAstriv_or lv_obL semIND=\[~ procesaSEM =/ RESTI ~= and  ( lex_pred ( Iol )   , 
LIo ? 4.s(@,\[\] obj))
Iiv_undir_or_iv_obl_dir-synsentrvob . oo \]
SYN' , LOC=l SUBJ=it p-synse*~/\[COMPS=e_ot . _pp_compAist J\[ivd , rJ . v_obl . ~ cm\]
SEM=/IND=\[~\]dyn_evc/\[RESTlt .   .   .   .   . d(lex_pred(\[~\]), pred(arss )) Jiv . ~abi_dir-synsem
SUBJ=\[SEM:IND=\[\]\]
SYN:LOC = pp_comp-list rpp-SyllSenl\]
COMPS=liD=\[SEM:IND=\[\]
TL = elist " iv . aar Av_obL sem
IND =\[\]
SEM = RESTP ~= and ( lex_pred(\[0\]) , attd(Ioc_ehng(\[61 , ffl ) , dir_prep(~\] , \[\] obj ) ) ) Figure h Using type subsumption to encode lexical polymorphism  . 
form of Pro\[og-style clauses where first-order terms are replaced with attribute-vahle descriptions  . For exanl-ple , given a definition of list as in (3a ) , the list-membership redicate can be defined as in  ( 3b ) where X is a typed feature structure ( Carl ) enter , 1992b : ch .  4) . 
(3) a . listsub\[e_list,ne_list,comp_list .   .   .   .  \]  . 
e_listsub\[\].
ne_list sub\[ne_comp_list .   .   .   . \] intro\[hd:bet , tl:list\] . 
b . member(X , hd:X ) if true.
member(X , tl:Xs ) if member(X , Xs).
Using the membership redicate above , we can define the ALE definite clause in ( 4 ) which would resolve polymorphic verb_synsemtypes by checking them against a list of unambiguous y nsem types for consistency  . 
(4 ) solve_head_type ( Lex_Type ) if member ( LexType , \[ iv_undir_synsem , iv_obl_dir_synsem . . . . \]  ) solve_head_type can be integrated with grammar rules as shown schematically in Fig  2 so that a verbal head exhibiting valency mn biguity  ( e . g . 
iv_und lr_or_iv_obl_dlr~ynsem ) with contextual instantiation of its list of complements - eAistor pp_comp-list  , as defined in ( 5 ) -- would return a fully resolved FS ( iv-synseln or iv_o bl_synsem in Fig 1 )  . 
This way of carrying out lexical type resolution has computation M overheads which tend to grow proportionally to the number of unambiguous lexical types  . 
This is simply because lexical type resolution is done by unifying underspecified synsemFSs against a list of unambiguous lexical synsemFSs using the membership predicate : the longer the list  , the heavier the computational overhead . With about thirty unambiguous verb types , we found that the disambignation of polymorphic lexical types using-~olve head_type with simple sentences was slower than enumeration of each distinct option through lexical disjunction --- although the difference in performance tended to cou-verge as we tried tinting longer and more complexsen  . ?\[ phrase\]SYNSEM:SYN:LOC:COMPS=\[\] comp-llst\]\[  . i  ~ .  \[  . y .   .   .   .   .   .   . 
HEAD\[SYNS l , ~ M =\[\]\[ SYN:I , OC , COMPS=\[signs yllse , l\]COMP\[SYNSEM=\[\]\]
GOAl.solveJtead_type(~)lID=\[\]
TL =\[ ~
Figure 2: Simplified l\[ead-Complement Rule with solve A ~ ead_type integrated as a goal  . 
tences.
(5) comp_list sub\[e_list , ne_comp_list , e_or_pp_comp_list\] . 
elistsub\[\].
ne_comp_listsub\[pp_comp_list .   .   .   . \] intro\[hd:synsem , tl:comp_list\] . 
e_or_pp_comp_listsub\[e_list,pp_comp_list\].
pp_comp_listsub\[\]intro\[hd:pp_synsem , tl : elist\] . 
Some improvements were obtained by eliminating the lnembership flmction and simply listing all possibilities as facts  , e . g . solve ~ head_type(undir_synsem ) if true . , solve ~ head_type(obl_dir_synsem ) if true . I Iowever , we thought that better results yet could be achieved by exploiting conditions on constraint introduction rather than using unification with the list of unambiguous synsemFSs  . 
Since in ALE path values can be introduced as constraints  , an attribute and its value can be used to retrieve the type at which that value was introduced : I?-restricts  ( Type , hd , pp_synsem ) . 
Type = pp_comp_list
Our basic idea was to define a rec . ursive definition of this facility and use it as a procedural attachment on rules to enhance lexical type resolution during language processing  . For example , we could use the value forthc\[lead of tile comp dist of a verb--as provided which such value occurs to resolve the verb's lexieal type  , e . g . 
\[7-recrestricts ( iv_oriv_obl_eynsem , eyn:loc:comps:hd:pp_synsem , 

SubType = iv_obleynsem
This allowed us to carry out ambiguous lexieal type resolution without having to cheek type compatibility against a list of unambiguous lexicM types  . 
We devised a version of rec_restricts which given an ambiguous lexical type and the resolving conrain returns the appropriate grounded type by I  . retrieving all the minimal subtypes of the aml ) iguous type 2 . collecting the constraints of eae . h subtyl ) e into a list 3 . returning the subtypes whose llst of constraints include tlm resolving constraint  . 
The Prolog codel brt his Mgorith mist us shown be -h  ) w , where sub , intro and conearc ALE predicates whicl lencode subsumption  , feature introduction and constraint declaration . 
rec_restricts ( hmbigType , Cons , Grounded Type ) :- find all ( Type , ( subtype ( Ambig Type , Type ) , ( Typesub\[\]; Typesub\[\]intro_)) , 
SubTypes ), member ( Grounded Type , SubTypes),
SubType cons Consl , term_expansion ( Consl ,  \[\]  ,  \[\]  , List Cons ) , member cone ( Cone , ListCons) . 
rec_reetricte is ealle . dfi : oln within solve ~ hoad_type which was redefined  ; ~s a two place l ) redicate whose arguments are : a ( polyn , or phie ) synsemtype , and its resolving contraint a . s provided during the course of rule application , e . g . 
solve head_type(ivml dir_orivobldir_synsem , pp_synsem ) , In the compih * . dcode for solve_head_type , the tmam-biguous type given as output 1)y roe . restricts ( e . g . 
iv_undir_synsem ) is used to resolve , the input poly-morl ) hictype ( iv_undir_or_iv_obl_dir_synsem ) using unification of ( atomic ) synsc . m types rather than fldlytledged l!'Ss . This solution proved to t ) e far more el-tic cut than the previous one . and never yielded worse results when compared to the enumeration of each dis-tinct verl  ) valency option through lexical disjunct km . 
3 Initial Results and Envisaged

Using the treatment outlined above , we have ( leveloped at y t ) e lattice covering all n tajor comph!mentation patterns for English and  ( ~ erman ( over 30 frames ) with a variety of intermediate polymorphic types describing possible clusters of subcategorization l  ) tions . At the same time , we have started to exploit the slt me technique R ) rdealing with other cases of lexical aln-biguity , suchtm the ability of noutiuals to functiol tas either nouns or noun l  ) hr ; Lses , e . g . Johndrank beetlebeer/beers / the beers , l ' reliminary results are very en . 
c0 uraging . For example a verb such ; m want w h M t can be used as either a transitive ( wantabeer )  , subject equi(w . nt to . sleep ) or object raising w'x b ( want Mary to sleep ) will only produce a single chart edge when followed by a VP complement  , e . g . 
(6) 1% derivation(\[wmlt , to , sleep\]) . 
0 want1 to 2 sleep 30.........
t . . . . . . . .



With simple structure si~s the one in (6) , the ed-winage ill using i ) olyna or phic lexical types with sort resolution ~ s compare xl to word sense euumeration by lexical disjnnction is minimal even though fewer chart edges are built  . This is because there is a constantow ' M lead when doing polymorphic type resolution through solve_head_type which in the sec~mesis equivalent obuilding al~w more lexieal edges  . 
With more complex sentences , however , this overhead is soon offset , and the benefits of using lexical polymorphismt ) eeomemanifest , l , ' or example , the analysis of a sentence like John likes that they want go come using polymort  ) hiever b types produce ( l 23 edges and was about 15% faster than the analysis yMded using a lexicon with verb usage enumeration where  34 edges were built . 
We are also cent dent that we caniml ) rove the t ) e > formance of our el ) preach in at , least two regards . 
First , we can reduce the co , n putational effort cur-rent ; ly used in ensuring that the input lexiealty l ) e to solve_head_type has not been altered~sa result of some previous rule el  ) pliesion . Such a measure is needed , R ) r example , when aw . ' rb with l ) olymorl ) hie type undergoes morphological combination before the head-complement rule el  ) plies . In this clme , the semantics of the verb wouhl be altered with a consequent loss of the original  ( polymorphie ) lexical type . 
This wouht make lexical type resoht tion impossible . 
We must therefore avoid destructiven to dilications of the orgluM lexical type while resoht tion of such type is still possibh : by introducing in the signa structure where the semantics of the boundmorl  ) heme is stored until all verbal arguments are COltSllllled  . ' l ' he stored senl . atlties is then retrieved using procedural at tachments  . This retriev Miseom putationally expensive imit is carried out by inealls of procedural attachme  . nts , and we are now investigating the alternative of building the resulting semantics online where it is currently stored  . 
Second , we can make lexical type resolution by roe_rest ricts nlore deterministic in those cases where the solving constraint does not lead to a unique solution  , as discussed earlier with reference to the verb bring  . In the lexicon , briu9 is assigned the polymorl ) hie . 
type tv_or_tv_obl_or .   . ditrans_syns(, . m which subsumes the tlu ' ee uses of tim verb exemplified in  ( 2 ) : tv .   . synsem in (2a ), tv . _old__(litran synsemin(2b ) , and ditrans syns (; min lab ) . Because the three subtypes are consistent with a direct object subcategoriza-lion  , z-ec_restr?cts Call not provide a unique solution when parsing bring with a nouul  ) hrase complement . 
This is l ) eeause , rec_restr?cts carries outsort resolution of a I  ) olymorphic type by elmcking consistency of specific  ) subtypes of the polymorphie type . Consequently , tee_restricts would return three solutions for bring using the instantiation for the head of the compllst to np_synsem  , as would the use of generalized recursive constraint resolution  . In our approach , however , this inadequacy can be easily redressed by ? changing rec_res ~ ricts so that sort resohltion is done by returning the maximal  ( least specific ) subtype of the input polymorphic type at which the discriminating constraint is introduced  , and ? modifying the grammar so as to support such a change  .   1 As long as the same constraint is not introduced at several subtypes for each polymorphic type to be solved  , these changes will ensure that sort resolution by tee_restrict si always deterministic  . 
4 Conclusion
If the computational nalysis of natural anguage is to approach the ease with which language users manage the contextual determination of word usage  , an approach to lexical ambiguity is needed which capitalizes on the regularity of sense extensions to avoid undiscriminated generation of word uses during sen-tencc processing  . Our proposal to achieve this objective is to use lexical polymorphism with deterministic contextual sort resolution within a type feature structure formalism  . Such a proposal is based on the intuition that for each class of lexieal ambiguity there is a word substructure whose increnmntal instautiation provide sufficient discriminating information to select a unique solntion  . We have shown how a first implementation of such an approach can be realized for the domain of verbal diatheses and envisaged how further refinements can be carried out to arrive at a fidl specification  . Although it is too early to establish whether or not the approach can be made to handle all kinds of lexical ambiguity  , initial result suggest that our treatment is effective  , efficient and has natural applications in domains other than verbal diatheses  . 

Atkins B . & B . Levin (1991) Admitting hnpedimeuts . 
In U . Zernik ( ed ) Lexical Acquisition : Exploiting OnLine Resources to Build a Lexicon  , LEA Publishers , 
Hillsdale , New Jersey.
Briseoe T . , A . Copestake & B . Bognraev ( 1990 ) En-joy the Paper : Lexieal Semantics via Lexicology  . 

Carpenter , B . (1992a ) The Logic of Typed Feature Structures . Cambridge Tracts in Theoretical Com-pnter Science  32  , CUP , New York . 
Carpenter , B .   ( 1992a ) ALE : The Attribute Logic Engine User's Guide . Ms , Carnagie Mellon University . 
1This involves toring the putative grammatical link of a parsed argument  ( e . g . the direct object for bring ) so that when a unique solution for the input polymorphic type is available this link c~x  , be used to establish the appropriate relation between complementation and arguments ructure e  . g . the direct object of bring would be interpreted as a goal in its ditrausitive use  ( bring Fidoa cookie ) and as a theme otherwise ( bring Fido , bring Fidoto the lmrty ) . 

Carroll , J . & C . Grover ( 1989 ) The Derivation of a Large Computational Lexicon for English from LDOCE  . In Boguraev , B . & Briscoe , T . ( eds . ) Computational Lexicography for Natural Language Processing  . Longman , London . 
Copestake , A . and A . Santilippo ( 1993 ) Multilingual Lexical Representation . I Proceedings to the AAAI93 Spring Symposium Series : Building Lexicons for Machine Translation  , Stanford , University , CA . 
Copestake A . L : T . Briscoe ( 1991 ) Lexical Operations in a Unification-Based Framework  . In J . Pustejovsky & S . Bergler ( eds ) Logical Semantics and Knowledge Representation , Springer-Verlag . 
Dowty , D .   ( 1991 ) Thematic ProtoRoles and Argument Selection . Language 67, pp .  547-619 . 
Nunberg , G . & A . Zacnen ( 1992 ) Systematic Poly~semy ill Lexicology and Lexicography  . FUrtOLEX-92 . 
Ostler N . and B . Atkins ( 1991 ) Predictable Mean ~ lugShifts : Some Linguistic Properties of Lexical Implication R  . nles . In J . Pnstejovsky & S . Bergler ( eds ) Logical Semantics and Knowledge Representation , Springer-Verlag . 
Pollard , C . and I . A . Sag (1992) Head-Driven Phrase Structure Grammar . Ms . Stanford University , CA . 
Poznafiski , V . and Sanfilippo A .   ( 1993 ) Detecting Dependencies between Semantic Verb Subclasses and Snb categorization Frames in Tcxt Corpora  . In J . Pustejovsky and B . Boguraev ( eds ) Acquisition of Lexical KT wwledgef wm Text , Proceedings of a SIGLEX Workshop , ACL93 , Columbus , Ohio . 
Parsons , Terence ( 1990 ) Events in the Semantics of English : a Study in Subatomic Semantics  . MIT press , Cambridge , Mass . 
Procter , P .   ( 1978 ) Longman Diction a ~ j of Contemporary English . Longman , London . 
Pustejovsky , J . (1991) The Generative Lexicon . Computational Linguistics , 17(4) . 
Pnstejovsky , J . (1993) Linguistic Constraints on Type
Coercion . Ms . Brandeis University.
Pustejovsky , J . & B . Boguraev ( :1993 ) Lexieal Knowledge Representation ad Natural Language Processing  . Artificial Intelligence 63 . 
Sanfilippo , A . (1993) LKB Encoding of l , exical Knowledge . in Briscoe , T . , A . Copestake and V . de Paiva ( eds . ) Default Inheritance with iu Unification-
Based Approaches to the Lexicon , CUP.
Sanfilippo , A . (1994) Word Knowledge Acquisition , Lexicon Construction and Dictionary Compilation . 
CO 13NG-94, Kyoto , Japan.
Sanfilipl)o , A . , T . Briscoe , A . Copestake , M . Mart (, M . ' l ' auld and A . Alonge (1992) Translation Equivalence and I , exicalization i the ACQUILEXLKB . 
Proceedings of TM1-92, Montreal , Canada.
Talmy , L .   ( 1985 ) Lexiealization Patterns : Semantic Structure in Lexical Form  . In Shopen , T .   ( ed ) Language Typology and Syntactic Description 3 . Grammatical Categories and the Lexicon , CUP . 
