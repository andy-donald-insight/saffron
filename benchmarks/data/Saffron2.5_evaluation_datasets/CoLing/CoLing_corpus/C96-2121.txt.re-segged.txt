Saussurian analogy : a theoretical account and its application 
Yves Lepage & Ando Shin-ichi
ATt Interpreting T (' . le commu ~ tications lesearch Labs,
llikaridai22, Seika . -(:ho , Soraku-gull , Kyoto 619-02, . \] apan
lepage , and o ~? tl.atr.co.jp

in tim (7 our sdeling u is liqueg & ~ , & ' alc , S ; d , llSSllr()l-fl(;Ilti ( ) llSkl , p\[tellO\]ll ( :\[ I Oll OFtremendous it nl ) ortance in l+mguage , analogy . For example , giwm the series walk , walked and look , how can we (: oil , t , tl (+ fourth term , looked ? We give ; ~ t ) ossi--I ) lea , (: count of this phenome not lint , et'tns of edition distances , thus paving the way to comptlt+d ; i on M applic ++ tk ) ns . This ex-l ) lanal ; ion accout Jts for prefixing , suffix . + ing and infixing . We show how it is possible to perform the a . n Mogical analysis and generation of sentences , using t t treebank ; m(l~q)l ) rox it naLl ; el ); tt , tertFln&t (; hitlg . As a ,  ( ; OllSe ( lt lell ce ~ our \[ ) ro-posal linds its t ) lnee in I ; he(~xa . tul)le-l)as( . 'd approach to natur M language processing . 
1 Introduction
In the Cours de linguistique gdn & ul , which dates backt ; o 1916 , Saussm : elnetltions a phenorue nonoftremendous iml  ) ortance in language , analogy : given some series of three words , human being sarcable to (; oiia fourth one . One can see area etualisation of this principle in the ex~unl  ) te-based np pro ; + ch to machine l , r ~ mslation . An Mogy sec ~\ [ l ( stoh+Lvetieverb ( ' + enL heorise ( \] illa , ltiono-lingual frmnework , maldng its hilingu Mal>l ) li ( ' ~ v-tion questionable . ' l ' he purpose of this article is to propose a possible  , mathemati (' Mly sound cx-I ) l~mat\[on , and to show the p ; ~ t , h to comtmtational applications . 
2 Saussurian analogy
In Chapter\[our , t)~rt1\[1o\["theCou'rsdelinguis-lique . qdn & ' alct , Saussur (; points out wha . the calls analogy : given two forms of ~ given word  , and ouly one form of a second word , it is possil > h' . I . ot all uxa . ml > les in this six : tlott+u'e front the (\] ours . 
co in the missing form ~.
Latin : or a to rem : or al or = ho norem : x
X ~: h , ollor
In this particular case , Saussure was interested in explaining the competition of honor with the older for nl honos  , honor is not a phonetic transformation of h on . os by rhotacism , but simply the result of a . nalogy . 
Analogy is very general , and its (' . \[\[~(' ts are seen in a number of other places . Ill may explain M1 flexional paradigms , from conjugation to declension : ~ . 
( ~ ern\]an:screen : . sclzle := lachen:xx:lachteAnalogya . lso explains what is called the producl ; ivity of bmguage , i . e . , the fact that underst~mda . ble words cml be coined , which are not registered in diction a . ries , nnd may have never been uttered before by the speaker nor heard before by the list  ; crier 4 . 
I , ' rench:rdaction: r'6actionnaUv = r@rcssion:xx = r@rcssionnaircFina . lly , analogy Msocxphdnsincorrect\[brms or barbarisms  , ex ; m q ) le~s of which , ~ reflmquent in child langua . g(;~ . 
French : dleindrai:/leindre=viendrai:xx = viendre Our goal is to give one possible account of this phenomenon in compul  , ation Mt , erms , ; rod to show that , given n tree brink , ~ possible ; ~ pl ) lica . t;ion may t ) ethemmtys is or genera . lion of sentences . 
o, . .to ,, ( o, . ~ to , : , ~ p e ~ , , k or ) + , , d h o . o ; ( t , o Ho, . ') ~ . , mi-\[,;~tive singular , or alorem and honorcma . ccu \] s Mivcs in-gula . r . 
: ~ ta Hu : r + ( tola , , gh ) ~ u , d . ~ , ' ~ tz , ~ r , ( to put ) , m cht <+ ~: t-ztcpast\[OrltlS . 
4 rdaction(reaction ) ~ uM , '@ ression ( repression ) nouns , rdactionnaire(reactionary)adje(:tivc ; rdprcs ? sionnaire souuds per h~(:tly I !' rench , but will not be to und in + ~ diction ~ u : y . 
~'dtei , ,hv ( to extinguish ; to turn off ) infinitive , (' teindrai " , rodvic n draifuture tense ; viendre is + Lb~u'-ba , risminp btce of venir ( to come ) ( compare , inl '; u-gllsh , qocd for wc'nl ) . 
7173 A possible account 3 . 1 Notations Let 12 be a nonempty finite set , called the vocabulary .  (12",  . ) is the monoid over 12 where . denotes concatenation .  1 ) * is also the infinite union of all 12n tbrn 6 IN . By convention , 120 = el with g being the empty string . 
Using these notations , analogies are equations with one unknown on 12': u : v = w : x . To be able to solve analogies , it is necessary to give a meaning to such a notation  . 
3.2 A geometrical view
In our attemp to discover a mathematical explanation of analogy  , we were long hindered by the notation itself . Of course , the idea behind it is that analogy could be considered a similar psychological process as the one intervening in proportions : mathematics : mathematical = physics : x  2:4  =  3 : xBut ~ , the set of rationals , is mathematically well equipped . Addition defines a commutative group , and multiplication makes it a field . Pro-portions in iI ~ are thus well understood , and safely solved . What is true for II ~ is not for l ; * . The basic operation , concatenation , is not comnmtative and does not define a group , but a relaxed structure , that of a monoid . And no one knows what the meaning of u : v could possibly be  . 
In fact , looking at analogy fi'om the previous point of view is misleading because  , intentionally or not , we think of nmnbers , which enforces too many constraints . A better , more relaxed view of the problem is that era rectangle  . In a rectangle , opposite sides and diagonals are equal ( see
Figure 1).
rnathem O , tics physics mathematical ~ x
Figure 1: Analogy seen as a rectangle 3 . 3 Formal  sa t  on ' Fhis view makes explicit that analogy sets a relation between an unknown on on  ( " h and , and three terms on the oth & hand . Now , carrying on with the geometrical paral M , analogy may be interpreted in terms of distances as follows : the distanee of any term to the unknown is the same as the distance between the two remaining terms  . 
We thus posit the following equivalence.
Definition 1 ( Analogy )
Af dist(u , v ) = dist(w , x ) u : v - - w : x ~ => dist(u , w ) = dist(v , x ) dist(v , w ) = dist(u , x ) The rectangle view does not forbid commutativity for dist  , a notable difference with division on numbers , where 2/4 is not the same as 4/2 . 
3.3.1 Linguistic interpretation
Let us linguistically interpre the previous system of equations  . Supl ) ose we get the following analogy to solve : mathematics : mathematical = physics : x  . Of course , x = physical . 
The first two equations show that the terms on the diagonal may be exchanged  . A linguistic interpretation is thai ; analogy involves two orthogonal dimensions reflecting the duality of the lexeme/morpheme  ( or root/affix , or mean-ing/limction , etc . ) separation . 
( list ( mathematics , mathematical ) = dist(physics , physical ) dist(mathematics , physics ) = dist(mathematical , physical ) On each side of the equal sign something is conserved  ( one dimension )  , and something changes ( second dimension ) . 
* In the example , the first equation stands for a conservation i meaning  ( " mathematics " as opposed to " physics " ) and a change in categories ,   . whereas the second equation stands for a conservation of grammatical categories  ( N as opposed to A )  , but a change in meanings . 
The third equation means that , somehow , analogy neutralises changes performed at the same time along the two previous dimensions  . 
dist(mathematics , physical ) = dis . t(physics , mathematical ) On each side of the equality sign , both changes in meanings and categories , performed at the same time , leave the proportion unchanged . 
3.3.2 Conlpletet brmalisation
In order to complete the \[' or mMisation , distre--mains to be defined , l , ;dition distances which have been proposed in many works  ( Levenshtein 65 )  , ( Wagner & Fischer 74) , ( Selkow 77) , etc . , are a good (; at l(lidate . They are mathematically sound as well as fat , it rely relevant : they re\[tectasensible notion  , that of keystrokes , an ( t turn out to be metrics under some hypotheses . They answer the correction problem : what is the minimal number of cdit operations needed to lrans Jbrmone word into an olhcrone ?  . In our example , howmmty characters need to be ( : hanged to transR ) rmmalh-emalical into physics '? Edit operations are insertion  ( for instance , e-~p ) ,   ( leletion ( likel-+? ) defined by assigning weights to these three ( ) per : ations , 1 for each of them , for simplification . The edit < tistance is then a simple extension fi ' omedit operations to strings  . 
Definition 2 ( Edition distanee ) Let V be a vocab ' ulary , dist is defined on V * as a commutative operation  , in the following way : v(a , cvv ( , , , ,O ( v *) dist(e , e ) = dist(a , a ) = 0 dist(e , a ) = dist(a , b ) = 1ffa:/bdist(a . u , c ) = dist(a , e ) + dist(u , e ) dist(a , c ) + dist(u , b . v ), dist(a . u,b . ' v ) = mi ~ 4 dist(a , b ) + dist(u , v ) , ) dist(<b ) + dist(a . ' u , v ) With this delinition and a weight of 1 for each of the three edit operations , tile distance between mathematical and physics becomes  9  . 
math cmaIica / yszcs = 9
As a mathematical result , with more general weighl ; s , it can be proved that , if the edit Ol ) er-ations define a metric on PUc , then the (' . ( lit distance on V * is also a metric . We recall tile t brmal definition of a metric . 
Definition 3 ( Metric ) Let Sb case t , dist a function from , _qxS to IR + , the , so/of non-negative realn ' umb crs , dist is a metric on S if and only if ? ( cqualily ) 
V(a , b ) < S2 , dist(a , b ) = 0C > a = b ? ( commulalivity ) v(( , , s ( list ( < b ) = dit ( < a )  ?  ( h'i angle in equality ) V ( a , b , c)CS a , dist(a , c)_<dist(a , b ) + dist(b , c ) 3 . 4 Coverage tlaving defined what we un<lerstand by analogy in a formal way  , we inspect , someo\['its properties . We first ; make a very strong but necessary assumption about the nature of the solution of an analogy  . Following the linguistic feeling , we impose that tile solution of an analogy be built only with the elements of the vocabulary present in the three given terms  . In other words , no material from outside should be used . 
This constraint does not prevent analogies from having multiple solutions  . It suffices that the distances become too large relative to the lengths of the words  , a : thc = of : x is such a case . The constraint eliminates , for instance , all words of the form txy , with x and y two letters outside of the set a , e , f , h , o , t , but does not bar Ill , hh h , eee , which are solutions of this analogy . But , as a matter of fact , this kind of example does not make much linguistic sense  . 
3.4.1 Equality
A degenerated c~se of analogy is when two oftile three terms are equal  . The only possihle solution is then the third term  . Il Lother words , nothing new <: an really be said . This meets commons ellse . 
v)c(v'f , ==
This property is always true . It is proved thanks to the equality property of a metric : u : " u = v : x dist  ( u ,   , 4= O = dist(v , x ) ~ x = ,  :  . 
Some . imt > or tmtt linguistic phenomen are covered hy on r proposal for linguistic examples  . But the corresponding mathematical properties appear not to hold ill the general case  . In fact , studying the necessary and suificient conditions under which they are true remains an open problem  . It seems that , in all cases , it ; has to do with some " weakest links " along the pair of strings considered  ( minimisation of a sum of distances )  . 
3.4.2 Transitivity
An important property which works in many cases , and at least on linguistic examples , but may not ; be true in the general case 6 , is transitivity : ? tlV-~lff:VIA~ttl l ?  ) l~-lJO:XzT ~ I/\[V : ' W : X This accounts for the fact  ; that any representative illagroup of conjugat ion/declension/die  , may he chosen as the model . In Ancient Greek , Ao To < is always taken as a model for the declension of tile  1st group of masculine nouns , although any other word from the same group would have been as good  . 
3.4.3 Prefixes and suffixes
Our definition of analogy fortunately captures linguistic cases where prefixes  ( or suffixes ) are involved . 
tt . t :' ~ t . ~~ --- w . t : X = 2? X ~ W . ~ This is not true in tile general case . At least ;, x = w . vahvays verille stile first two distance qua - tions : dist  ( 'u . t,u . v ) = dist(l , v ) = dist(w . t , w . v ) = dist(l , v ) dist(u . t , w . t ) = ( list(u , w ) = dist(u . v , w . v ) = ( list(u , w ) thanks to a property of edit distances , which we give here without a proof : V(u , v , w)E(V *) a ,   6Counter-example : the : ttt = a : of Aa : of = th . c : h h h . ~the:tit=the:hh h because dist(the , thc ) = 0 ? dist(ttt , hh h ) = 3 may not always be verified . Asu Ificient condition for it to hold is that the joints between prefixes and suffixes minimise some sums of distances : dist  ( u . v,w . t ) = dist(u , w ) + dist(t , v ) = dist(u . t , w . v ) This is the case when prefixes and sulfixes are dissimilar enough  , as in our example with mathema#i-cs and phys-i - cal  , but in the general case , only dist(u . v , w . t)_<dist(u,w ) + dist(v , t ) holds . 
3.4.4 Infixes and umlauts
Similarly to prefixing and suffixing , our formalisation accounts for linguistic examples of infixing  , a phenomenon well illustrated by semitic languages  7   ( here , the replacement of anabyani ) . 
Arabic : arsala : mursilun = aslama : xx = musl imun It also accounts for some  ( not all ) examples of sound changes , like umlaut in Germans . 
German : Balg : B ~ lge = Ilals : xx = Hi ilse These linguistic cases work partly thanks to the previous property of distances with prefixes  . 
3.4.5 R . eduplie at lon
Unfortunately , our proposal does not render an account of reduplication  . This would be necessary if we wanted to describe , for example , the formation of plurals in Malay/Indonesian : or ang ---+ orang-orang  9  . Here , a speculative remark would link the power of analogy with some class of languages  ; our proposal seems not to go beyond regular languages  . 
4 Application
In the sequel , we will apply the principle of analogy not on words any more  , but on sentences . In the same way ~ words are strings of characters  , sentences are strings of words . So , the shift from words to sentence sijust of matter of reformulation  . 
W calso recall that edit distances and edit operations are not contined to strings  ; they extend in a natural way to forests , and hence to trees . 
In fact , it is possible to give a definition of an edit distance on forests which generalises the definitions on strings  ( Wagner & Fischer 74 ) and on 7 arsala ( hesent ) and aslama ( he became converted ) verbs 3rd person singular past ; mursilun ( a sender ) and muslirn un ( a convert ) agent nouns . 
8Balg(pelt , skin ) and Iials(neck ) singular ; Biilge and Hdlse plural . 
9 orang ( human being ) singular , orang-orang plural . 
trees ( Selkow 77) . Hence the possibility of applying analogy to trees  . 
The example-based approach in machine translation , inaugurated by ( Nagao 84 ) and illustrated by ( Sadler and Vendelmans 90 ) or ( Sato 90 )  , for instance , relies on the assumption that , if two sentences are " ek)se " , then , their analyse should be " close " too . By consequence , if the analysis of a first sentence is known , the analysis of the second one could be obtained by performing slight " modifications "  ( > it it . A problem arises : where are the slight " modifications " to be performed  , and what ; are they ? In that matter , edit distances could help a lot : " close " means at a distance not too large  , and ': modifications " are edit operations . 
4 . 1 Analysis by analogy 4 . 1 . 1 Pr inc ip le Suppose we have a collection of sentences  ( a database ) already analysed ( in fact , a treebank ) . 
For a new sentence , called the prototype , our goal is to build its analysis , i . e . , a corresponding tree . 
Of course , the ideal case is when the prototype is already present in the treebank  , which means that the analysis is tbnnd there too . 
In general , the prototype will not be found in the treebank . The search may thus be relaxed to similar sentences  . Now , if at least two different sentences are retrieved by approximate matching  , a fourth one can be built by analogy . Figure 2 illustrates this : the prototype is in the upper left corner  ; the two sentences on its right and under it have been obtained by approximate matching  . 
Knowing the respective distances between these three sentences  ( on the arrows )  , sentence x can be computed by analogy . 
it ' by chance sentence x belongs to the treebank , its analysis is also in the treebank . Now , a reverse process on trees delivers an analysis for the prototype  , as illustrated in Figure 3 . The three trees in the right and bottom corners are the corresponding analyses of the sentences of Figure  2  . They were taken from the treebank . The distances are given on the arrows . Tree y is the solution of the analogy , and we claim that it is the analysis of the prototype sentence  . 
4.1.2 Implementation
Approximate matching is retrieval of all sentences at a distance less than a threshold Koma given prototype  . Efficient algorithms , using dynamic programming , have been proposed to per-t brm approximate matching  ( Ukkonen 83 ) and ( Landau & Vishkin 88 )  . Our method is somewhat different . We do as if we wanted to generate the entire set of sentences at a distance less than or equal to the threshold  . In doing that , we introduce a don't care symbol representing any possible word  . Pattern-matching with don't care symbols has already been studied  ( Pinter 85 )  . Of 1  /  2   3 the lamp turns on the green signal is on x = the signalisoff Figure  . 2: l ) rototype ( upper left corner) , sentences obtained by approximate matching and x , sentence oi ) tained by analogy , and retrieved from the treebank . I ) is tanees are given in words . 

NP VP
II adj adv /

NP VP behP
II adj adv !
SS
NP VP NP VP erb ~ . . A +-- 1 - - - - ~ ~ ~ j P det N be APlladvadvl , ' igure 3: Analyses from the treebank and y , analysis of the prototy t ) e sentence obtained by analogy . 
Distau (' es are given in nodes.
course , this naive solution implies an exponential explosion  , but , fortunately , it is not ne ( : essary to consider the entire set of sentences , neith (' . r to generate them . Only sentences which a . resubstrings of other strings may be coded . This allows us to use a siml ) le non-determinist ( -version of the Aho & (  ; or a sick algorithm ( Aho & . ( k ) rasic k 75) , which only cheeks the possible presenc . e of patterns on an array of integer triples . This algorithm C()tl . tl ) CteS well with one of then , ostel Iichmt algorithm agr cp(Wu ~ Manl ) er 92) , as it is faster in average . 
4.1.3 Us (; antius (; fulness
In a first implementation , rather than really computing solutions of analogies on trees  , we retrieve them from the treebank using approximate matching  . I , ;xeeution dines are l ) eh ) wone second for the analysis of short chunks of text  ( about 5 words )  . This technique helps a lot in the ( -onstruc-lion of treebanks . Firstly , building new linguistic structures for new sentence sidelinitely made faster  . Secondly , this technique enforces consis--tency , a sensible issue in treebank construction , especially if treebanks are to be used to train probabilistic models  . 
4 . 1  . 4 Exi ) erhnents and measures ' l b have a more precise idea about the power of the method  , we carried out some experiments on an excerpt of the tree  . -bank of the University of Pennsylwm in ( 787 sentences with their corresponding analyse's )  . For all possible zl-tuples of Sellt , (\] iilees which verify the analogy definition , w ceomlmted the analysis of the first sentence by analogy  . We . recall that there may be no solution , one solution , or several solutions . .As a restrict , ion in this experiment , we ( lid not consider distances between objects over half of the lengths of the objects  . 
Ret : all In document retrieval , recall is delined as the ratio of the number of relevant documents retrieved over the total mml ber of relew mt docu--inents ill the data base  . I h ' r e , we ( lefine the recall as the number of times the exact structure was computed by analogy  , divided by the number of sentence t ) airs having the same structure in the treebank . In one experiment , here call is 0 . 69 , a quite good figure , which shows thai ; the technique is promising . 
Precision Again , in document retriew f l , precision is defined as the ratio of then mnt ) er of rele-documents retrieved . Here , we define the precisio ~ as the number of times when the exact structure was computed by analogy divided by the number of solutions delivered  . 
In the experiment , he precision is 0 . 43 , which means thai in almost half of the cases , one of the structures delivered is the right one . Now , in average , the structures delivered are far from the exact structure by  1  . 61 node , with a standardeviation of 1 . 86 . This means that in average less that two nodes have to be edited in order to get the exact structm : e  , the size of a structure in the treebank being 9 . 8: t:5 . 4 nodes . 
4.2 Generation by analogy
Generation may be performed in the same way as analysis  , the difference being that the prototype is a tree and pattern-matching is performed on trees  . The overall process is similar to the one for analysis  , but in the opposite direction . The tool we have built for the edition of text with trees  , allows approximate matching on trees , and generation is performed using the same functions as for analysis  . 
5 Conclusion
We have proposed a possible theoretical explanation of analogy in terms of edit distances  . As expected , this proposal renders an account of some important linguistic phenomena  , in particular , prefixing , suffixing and infixing . Also , transitivity is verified by linguistic examples . Nevertheless , the exact mathematical properties , and especially , the necessary and sufficient conditions on strings under which the above mentioned properties hold remain for the large part to be studied  . 
A possible application is an Mysis and generation by analogy  . The proposed technique falls under the example -based approaches to natural an-guage processing  , hut we think it may be safer than previous methods  , because it relies on more information , and linguistically founded information . We have built a first implementation , which shows to be of great utility in accelerating the construction of treebanks and improving their consistency  . 

Alfred V . Aho and Margaret J . Corasick
Efficient String Matching : An Aid to Biblio -graphic Search Communications of the ACM  , Vol . 18, No .  6,
June 1975, pp . 333-340.
( gad M . Landau and Uzi Vishkin
Fast String Matching with kD ifferences
Journal of Computer and System Sciences,
Vol . 37, 1988, pp . 63-78.
V .\[. l , evenshtein
Binary codes capable of correcting deletions , insertions and reversals Dokl . Akad . NaukSSSR , vol . 163, No . 4, August 1965, pp .  845-848 . 
English translation in Soviet Physics-dok lady vol . 10, No . 8, February 1966, pp .  707710 . 
Nagao Makoto
Al " ramework of a Mechanical Translation between Japanese and English by Analogy Principle in Artificial  g4 Human Intelligence , Alick Elithorn and Ranan Banerjieds . , Elsevier
Science Publishers , NATO 1984.
Ron Y . Pinter
Etficient string matching with don't care patterns in A  . Apos tolico and Z . Galil ( eds ) NATO Series , vol . FI~2 , Combinatorial Algorithms on Words , Springer Verlag , Berlin Heidelberg ,  1985 , pp .  11-29 . 
Victor Sadler and Ronald Vendelmans
Pilot implementation of a bilingual knowledge bank Proceedings of  COLING90  , Helsinki ,  1990 , vol 3 , pp .  449-451 . 
Sato Satoshi and Nagao Makoto
Example-Based Translation of Technical Terms Proceedings of the Fifth International Conference on Theoretical and Methodological Issues in Machine Translation  TMI-93  , pp 58-68 , Kyoto ,  1993 . 
Ferdinande Saussure
Goutsdelin . quislique gdndrale publi5 par Charles Bally et Albert Sechehaye , 
Payot , Lausannet Paris , 1916.
Stanley M . Selkow
The Tree-to-Tree Editing Problem
Informalion Processing Letters , Vol .6, No.6,
December 1977, pp . 184-186.
Esko Ukkonen
On approximate string matching in Proc . lnt . Conf . Found . Comp . Theor . , Lecture Notes in Computer Science 158 , Springer Verlag , Berlin/New York ,  1983 , pp 487-495 . 
Robert A . Wagner and Michael J . Fischer
The String-to-String Correction Problem
Journal for the Association of Computing Machinery  , Vol . 21, No . l , January 1974, pp .  168-173 . 
Sun Wu & Udi Manber
Fast Text Searching Allowing Errors
Communications of the ACM , Vol .; 35, No . 10,
October 1992, pp . 83-91.

