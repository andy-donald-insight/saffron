GPSG Parsing , Bidirectional Charts , anti
Connection Graphs
Laurent DEVOS1,2 Michel GILLOUX 1
iCentre Nationald ' ~' tudes desT~l&'ommunications

Routede Trdgastel , BP 40
22301 Lannion Cedex , France
2 l~cole Nationale SupHieure de Sciences Appliqudes et de Technologies  , 
6, rue de Kerampont , BP4 47
22305 Lannion Cedex , France
Abstract : Ttfspaper describes a tractable method for parsing GPSG grmnmars without  , altering the modularity and expressiveness of this tbnnalism  . The proposed method is based on a constraint propagation mech  , ' ufism which reduces the number of unnecessary structures built at parsethne through the early detection of inadmissible local trees  . The propagation of constraints is rendered efficient by indexing constraints and categories in a connection graph m ~ d by using a bidirectional  chat1 pm ~ ertogether with a bot-lore-up strategy centered around head constituents  . 
;\[ o Introduction
Among currant syntactic theories , Generalized l'hrase Structure Grammars ( GPSG )   \[4\] provide an appealing solution for describing natural languages with their modular system of composite categories  , rules , constraints and feature propagation principles . 
As other highly modular systems , GPSG is plagued by the difficulty of desigtfing an efficient algorithm lor combining its various components into an execut-able program  . Recent attempts to solve this problem have followed different lines of research  . 
One solution \[9\] rests on die almost equivalence between GPSG and ContextFree Grmnmars  ( CF )  . In this framework , GPSGrifles , met~mdes and constraints on we U-fonned categories and local trees amtrans forum d before any parsing took place into an equivalent set of CF produclions for which various efficient pro'sing methods already exist  . In theory , lhis method has the advantage of preserving the hice expressive properties of GPSG while leading to a par-sable grammar  . Though , the method is clearly hn-practical in the case of real grammars due to the enormous nmn ber of categories and local trees which must be considered prior to the filtering by the other modules  . 
A related yet more realistic method \[9\] follows the same strategy of compiling GPSG into another grammar description language for which there exist parsing algorithms  . In this case , the target language \[6\] has a CF skeleton but is augmented through feature descriptions which provide a natural mapping from GPSG categories  . Here the difficulty lies for the linguist in tile expression of the grammar in the target language since there exist no algorithm to compile automatically the GPSG grammar  . 
Another set of approaches \[1 , 7 , 8\] attempt o build fronl scratch a parsing strategy wlfich is suited to GPSG or rather to a modified version of it  . The modifications are ( sometimes ) motivated by linguis . .
tic arguments , e . g . enhancing the expressive power , but first to render GPSG computationaly tractable at the expense of some of its distinctive features  . 
The last class of methods\[2 , 1 2\] try to take GPSG as it is and to design a parsing algorithin wtfich is not only sound but ' also complete with re-  . 
spect to the theory . Then the difficulty lies in the efficiency of the parser  . The method described in this paper belongs to tiffs category  . Several principles contribute to its efficiency . First , it is based on a bidirectional chart parser , Which , together with the ad . .
vantages of conventional chart parsing , is well suited to both the ID/LP decomposition and the palficuhu : role devoted to head constituants  . Second , the various constraints used in GPSG ( linear precedence , head feature convention , foot teature principle ) are viewed as a set of constr , ' dnts which are applied as soon as possible , when necessary , to shorten the development of unproductive hypotheses  . Third , the constraints are precompiled into a connection graph which mini~mizes the computation of category subsumption done at runtime  . And , fourth , the rule invocation strategy is bottom-up , and head-driven in that the only ele-1151 . 
mentmry active edges created bottom-up in the chart are those corresponding to head constituants  . This strategy allows the FFP and the HFC to be brought into use at the time active edge sam created and  , consequently , by instantiating very so on a maximum of the foot antihead features of dominating categories  , to detect violations of constraints long before constituents are completed  . 
2. Bidirectional chart parsing
Conventional chart parsing techniques \[5\] avoid redoing identical parses to t grammars having a contextfree basis  . In the case of GPSG , the seted > tuques could be straightforwardly customized to accommodate ID rules  . This would result in a strategy where an active edge would be created for each category in a rule extending a given in active edge  , be it a head daughter or not . 
When one considers the go ~ of having uninteresting patzes fail as soon as possible  , it become simoportant to Make head daughters come into play first  . 
" I qais is because they activate a maximum of constraints on their mother categories by the percolation of features through the t~TC and FI-q  :'  . In order to build local ID trees around their head daughters  , the strategy should not force the first constituent attached to an edge to be its lefiruost one  . We use bidirectional chart parsing \[11\] because it relaxes Ot is constraint . This technique has been first proposed in the context of speech recognition where is l~md parsing is made advantageous because lexical interpret a  . .
tions are weighed by plausibility factors . Its proponents remarked that it could also be well suited to linguistic theories sharing the notion of head constit-uent  , like GPSG . This intuition was confimaed by the comparison we made on several chm~parsing strategies  ( eesection 6" hnplementation " )  . 
In order to fit the ID/LP decomposition , each edge of the bidirectional chart must have the following structure : 
Start :
End :
Rule:
Match :
Category:
Daughters : the leftmost position of the edge ; the rightmost position ; a pointer to the associated IDale ; a bitvector indicating those members in the LHS of Rule with an extension attached to the edge  ; the category of the edge ; the list of daughter categories . 
Thus an edge is active just in case all bits of
Match are set to 1.
New edges are created in two mtmners . Some are formed when an inactive edge is an extension of a head category in an ID rule  ( rule 1 )  . They have only one daughter category and we call them elementary edges  . The others stem from the extension ( in the chart sense ) of an active edge ( rule 2 )  . An active edge A is extended on its right ( resp , on its left ) anytime an inactive edge adjacent on the right ( resp , on the left ) has a category wtfich is an extension of a category in the Rule of A whose bit in Match is not set to  0  . To be validated the new edge should not vio ~ late any FCR  , LP , I-Pb ' CorF ~ constraint ( see beolow ) . 
3.'\] lle connection graph
The categories of edges result ( 1 ) from the application of feature instantiation principles to  , an ac-live edge or ( 2 ) from the creation of an elementary edge . 
Thus the category of a new edge is always an extension of the category of an already existing edge  ( I ) or of the category in the lefthand side ( LHS ) of an IDale ( 2 )  . Since the whole process is initialized by extending lexical in active edges  , the only categories possible for nonlexical edges are extensions of a le LHSs  . In addition , LP mid FCR constraints only concern categories being a lextension of respeclively both categories in a LP statement or the ~ efl calego  . .
ry in a FCR constraint . It is then possible to remark that the constraints that should be verified on a cate ~ gory A are inherited fi'om the constraints to be veri-tied on the category B category A stems to m  . This is because for A to be an extension of a category C it is necessary that B may be unified with C  . 
In the sane way , in active edges of category A may only become daughters in local trees whose associated ID rule features a category B in their LHS such that A is an extension of B  . Thus determining the IDales by which elemeutary edges cnuld be creoated under the application of rule  1 to an inactive edge may be seen as inheriting these ID rules from the categories of edges leading to it by the recursive application of rule  2   ( extension )  . These Iwo process-es , inheriting constraints and IDales , should be related to the inheritance of colmections in a connec-lion graph theorem prover  \[10\]  . 
In a commction graph theorem prover ( CGTP ) , resolvents may be only resolved in turn with axioms connected to one of their parents  , just like in GPSG categories may be constrained only by constraints concerning ttmirm other category  , that is the category they a man extension of . Importing the technique of connection graphs in GPSG allows to reduce the  152   2 amount of computationeeded to verify constraints . 
Just like in CGTP , a preprocessing phase , done once for all and independently of any phrase to be parsed  , connects every categories in rule righthand sides  ( RHS )  , LPs , FCRs and FSDs to the relevant elements of rule LHSs  . 
Thus each LPC1 < C2(resp . FCRtC1 ~ C2 ) is connected to all categories C such as C unifies with C  1 or Cunifies with C 2   ( resp . such as Cunifies with C1) . In the case of FCR , categories C such as C does not unify with C 2 are never created since they violtate the FCR . 
In the same way , FSDs are connected to categories to help determine where they should apply  . 
For example , if we consider the ID rule N1---> H , PIP and the LP constraint \[+ N\] < PP plus trees 
N 1 \[SUBCAT 30\] PP\[+POS\]paper of Gazdar we see that the LP must be checked on this pair of trees because the following connections between the involved categories exist : unifies unifies 
N 1 -<-\[+ N\] < PP~PP extends I/nni fiesun if ies ~ extends f  ( inherited )   ( inherited )  -"
NI\[SUBCAT30\]PP\[+POS\]
On this diagram , two connections have been inherited from former ones  . 
In order to distinguish the types of constraints connected to categories  , several arcs are present in the graph . For exmnple , FCR-Left type arcs connect a category C with a FCRC  1 ~ C 2 such as Cunifies with C 1  . 
Inheritance of constraints in the connection graph and creation of bidirectional edges in the chart thus make the bulk of the parsing method  . The method is then completely defined through the ways of : ? applying ID rules  , constraints and feature instantiation principles to create new edges and categories  ; tWe assume all FCRs to be in the canonical form Cl : ~ C  2 since the other formats ( e . g . C1=Ca ) may be decomposed into a set of canonical forms ( e . g . C1~C2, C2~Cl) . 
? inheriting connections to ID rules and constraints for each new edge and category  ; ? computing the initial connection graph . 
4 . Applying ID rules , constraints , and feature instantiation principles We assume that  , in a first step ,   , all metarules have been applied when possible to base ID roles to generate an extended set of ID rules t ?  . Thus we are left we a set of ID nlles , LP and FCR constraints , and feature instantiation principles , included FSDs . 
4.1. Immediate Dominance Rules
As remarked in section 3 above , a daughter category in an edge of the chart must be either the category of a lexical item or an extension of an ID rule LHS  . Thus , provided that the connection graph was suitably initialized  , it is sufficient to consider only those members in ID role RHSs connected to a lexical item or to an inactive edge in order to create new edges through rules  1 and 2  . 
4.2. Linear Precedence Constraints
LP statements , are checked each time an edge is considered for extension through rule  2  . These checks only occur when a new edge A results from B being extended on its left  ( resp . right ) by category C . 
Then , only those LP , C1 < Ca such as C is connected to C2(resp . CI ) and C1 ( resp . Ca ) is connected to some daughter of B are considered  . For the selected LPs , the parser has then to compare C 1 and C 2 on one hand and C and daughters of B on the other hand with respect o the partial order relation is -an-exten-sion-of  . 
4.3. Feature Cooccurrence Restrictions
It is not necessary to wait for an edge to become in active before checking FCRs  . In fact , it is far better to consider them each time a new edge is created  . A being the category of the new edge , tiffs requires to check each FCRC ! ~ C 2 cotmected to tile edge in tile graph through the extension and unification relations  . 
4.4. Feature lnstantiation Principles
In order to be able to check LP , and FCR con-ttA better method for applying metarule should trigger them only when needed by the sentence to be parsed  . The indexing of constraints in a connection graph could serve this purpose  . 
3153 straints as soon as possible on new edges , the trans?mission of features though general instantiation principles  ( HFC and FFP ) is done each time rule 2 is applied . Head and foot features of the extending edge A are compared to those of the extended edge B  . 
There are two cases : omleast one of these features gets in consistent values on rite daughter A and its poten-tied father B  ; in this situation , edge A is not valid and the chart is not modified  ; o all foot and head features get consistent val -re  ; s ; then those which were unspecified or underspecified are set to the suitable value fl ~ rough unification  ; the category of the new edge is added to the comiection graph where it inherits the relevant ID rules  , LP , FCR and FSD ,  4 . 5 . Feature Specification Defaults Since feature specification defaults only affect features not set by the feature instantiation pfinci~ples they only apply to inactive edges  . Thus their use consists in applying otfly those FSD connected in the graph to the  catego~7 of a new in activedge . 
5o hfitiMizing the Connection Graph qhe connection graph is initialized in two phases  . A first phase may took place only once for every grammar since it is independent from the particular phrase to be parsed  . In this phase , all possible connections between ID rules categories  , LPs , FCI~s and FSDs are computed . For example , each connecolion between a rule LHSA and a rule RHS element B such that A ratifies with B are memoriz ~ ed  , The second phase depends on the lexical interpretations of the phrase to be parsed and it adds new connections to the graph  . " lhese co~mections are those that hold between a lexical interpretation A and a category B in the RHS of a rule such that A is  , ' u ~ extension of B . 
6 . hnplementation " Ille method has been implemented as a Comomon Lisp program on a pVAX-II  . A core GPSG grannnar of French was developed using this parser  . 
In order to assess the interest of the bidirectional chart and its head-driven bottom-up strategy we made a series of tests consisting in parsing a small set of French sentences under three different strategies : strategy I was left -to-right and topdown  , strategy 1I was left-to-right and bottom-up , and strategy Iii , the chosen one , is bidirectional , bottom-up , and head-driven . Table 1 gives the observed performances of the three strategies measured by the total number of edges created and the total CPU time needed to parse all sentences t  . 

Number of edges
CPUtime ( in seconds)
IIIII 381 189 352 38.3 25.1 12,4
Table 1: A comparison of different strate #es7 . Conclusion The method we propose makes it possible to parse efficiently GPSG grammars but unlike other apoproaches  \[1  , 3 , 7 , 8\] it allows the grammar to be ex . .
pressed in the exact formalism described by Gazdar arid his colleagues in  \[4\] and does not require an intractable preprocessing ptiase like would doe  . .g . thc compilation of the grmn mar into an equivalent set of contextfree productions  . 
Although we did not study in detail the suit-.
ability of the method when the control agreement principle is taken into account  , we do not see any major incompatibility with the use of a connection graph to index the various modules of a GPSG gram ~ 
Knar 8 . References\[1\]Briscoe , T . , Grovel C . , Boguraev , B . , Caro U , J . , " A Formalism and Enviromnent for the
Development of a Large Grammar of English ' , 10th International Joint Conf . on Artificial Intelligence , pp .  703-708, 1987 . 
\[2\] Busemann , S . , Hauenschild , C . , " A Consll~c ~ tire View of GPSG or How to Make It Work "  , Proc . of COLING , pp .  77- . 82, 1988 . 
\[3\] Fisher , A . J . , " Practical Parsing of General ? ized Phrase Structure Grammars "  , Computational Linguistics , vol . 15, no . 3, pp . 13 9o 148,198 9 . 
\[4\] Gazdar , G . , Klein , E . , Pullum , S . , Sag , 1 . , " Generalized Phrase SU ' ucmreGrammar ",
Blackwell Publishing , 1985.
? tCPU time is only an indication of the efficiency of the method since it measures also our implementation  . No particular effort was spend on tuning the implementation  . 
1544\[5\] Kay , M . , " Algorithm Schemata and Data Structures in Syntactic Processing "  , in Readings in Natural Language Processing , B . J . 
Groszetaleds , pp . 35-70, 1986.
\[6\] Kartunen , L . , " D-PATR : A Development Environment for Unification Based Grammars "  , llth International Conference on Computational Linguistics  , p . . 74-80, 1986 . 
\[1\] Kilbury , J . , " Category Cooccurrence Restrictions and the Elimination of Metarules "  , 
Proc . of COLING , p . . 5055, 1986.
\[8\] Kilbnry , J . , " Parsing with Category Cooccurrence Restrictions "  , Proc . of COLING , pp . 

\[9\] Shieber , S . M . , " A Simple Reconstruction of GPSG ", Proc . of the llth International Conference on Computational Linguistics  , pp .  145-152, 1985 . 
\[10\]Stickel , M . E , " A Nonclausal Connection -
Graph Resolution Theorem-Proving Program ", Proc . of AAAI-82, 229-233, 1982 . 
\[11\]Stock , O . , Falcone , R . , Insinnamo , P . , " Island Parsing , and Bidirectional Charts " , Proc . of
COLING , p . .636-641, 1988.
\[112\] Weisweber , W . , " Using Constraints in a Con-structive Version of GPSG "  , Proc . of COL-
ING , pp . 738-743, 1988.

