hesaurus-based Efficient Example Retrieval
by Generating Retrieval Queries from Similarities *
Takehito Utsurot Kiyotaka Uchimoto * Mitsutaka Matsumoto * Makoto Nagao * 
~t Graduate School of Information Sciencel Dept , of I ' , lectrl cal Engineering
Nara Institute of Science and Technology Kyoto University 
Abstract
In example-based NLP , the problem of eoml ) utational cost of example retrieval is severe , since the retrieval time increases in proportion to the number of examples in the database  . This paper proposes a novel example retrieval method for avoiding ftfll retrieval of examples  . 
The proposed method has the following three features  ,  1 ) it generates retrieval queries from similarities ,  2 ) efficient example retrieval through the tree structure of a thesaurus  ,  3 ) binary search along subsumption ordering of retrieval queries  . Example retrieval time drastically decreases with the method  . 
1 Introduction
Since an m del of machine translation ( MT ) called Translation by Analogy was first proposed in Nagao  ( 1984 )  , nm ch work has been undertaken in example-ba~sed NLP  ( e . g . Sato and Nagao ( 1990 ) and Kurohashi and Nagao ( 1993 ) ) . The basic idea of example-based approach to NLP is to accomplish some task in NLP by imitating a similar previous example  , instead of using rules written by human writers . Major processing steps of example-based approach are:  1  ) collect examples and the results of performing the task in a database  , 2) given an input , retrieve similar examples from the database ,  3 ) adapt the results of tile similar examples to the current input and obtain the output  . 
Compared with the traditional rule-based approach , example-based approach has advantages like : 1 ) it is easier to maintain the implemented system , since once the system is constructed , the performance can be improved just by adding new examples  ,  2 ) finer-grained syntactic and semantic discrimination can be expected just by adopting finer-grained similarity measure between the input and the example  . 
ht almost all the previous fl'ame works of example -based NLP  , it is necessary to calculate similarity values for all the examples in the database in order to find the most similar one  , and this is called full retrieval . Usually , the computational cost of example retrieval causes a severe problem  , because the retrieval time increases in proportion to the number of examples in the database  . 
This paper proposes a novel method for avoiding flfll retrieval  . The proposed method , which we call query generation retrieval , has the following three features , * The authors would like to thank Prof . Y . Matsumot of Nara Institute of Science and Technology  , Dr . Y . Den and Dr . 
E . Sumita of ATR , and Mr . M . Shimbo of Kyoto University , for valuable comments on the draft of the paper . 
1 ) it generates retrieval queries from similarities ,  2 ) efficient example retrieval through the tree structure of a thesaurus  ,  3 ) binary search along subsumption ordering of retrieval  , queries . In this paper , we focus on retrieval of example surface case structures of Japanese sentences  . The similarity vatne between the input and the example is calculated using existing hand -compiled thesaurus  . In the following sections , the similarity measure of surface case structures is defined in section  2  , then the framework of query generation retrieval is described in section  3  . 
2 Similarity of Surface Case
Structures
As a similarity measure of surface case struct m ' es~we basically use the similarity measure in Kurohashi and Nagao  ( 1 . 993) . Since the att thors ' similarity measure is intended for calculating similarity between tile input surface case structure and a case fl'ame with exaln plen or a  , s , we adjust it to the similarity betwee i , two surface case structures . Tile following describes the data structure of surface case structures and the thesaurus  , and gives the definition of the similarity measure  . 
2 . 1 Data Structure 2 . 1 . 1 Surface Case Structure In general , surface case structure of a Japanese sentence can be represented in feature-structure-like notation as below:\[pred:V  , pl\[pred:Nl ,   . , p , ~:: . sern:Seml\]""\[pred:NnIn this notation , V is the verb , Pl ,   .   .   .   , P ~ are the Japanese surface ease markers , N 1 ,   .   .   . , N , ~ are ease ebement norms , and Semi, .   .   .   , Sem , ~ are the semantic categories of each case element in a thesaurus  . 
In our task of retrieval of example surface case structures  , the input and the examples to be retrieved have to have the same verb  . Besides , the similarity value between the input and the example is dependent only on each semantic ategory  . Thus , in this paper , we define the smJaeecase structure of a sentence a  . q the set of pairs p , Sere ) where p is a surface case marker and Sere is the leaf semantic ategory of the case element noun :   1 e: ( pl , Seg~gl ) .   .   .   .   . ( pn , Se ~ Ttn > 1In the remainder of this paper , for brevity'sake , we regardlloans as an alllbigll OllSI~tlld assume that a noun has only one leaf semantic ategory in the thesaurus  , although noan 8 ( : an beambiguous and have more than one semantic a tegory in the current implementation  . 
1044 2.1.2 Thesaurus
A thesaurus of nouns is regarded us a tree in which each node represents a semantic ategory  . We define a thesaurus of nouns as a rooted directed tree  ( SC , El ) where SC is the set of semantic categories and Et C = 
SC xSC is the set of directed edges : l'J t = : ( 5'eml , 5' emj)lS'emi ,  . S'emj ~ . qUA noun has on ! ( or possibly more ) leaf semantic ute-gory in the thesaurus . At present we use an online thesaurus called Bunrui Goi Ilyou  ( BGH )   ( NLR 1 ,  1964) . 
BGII has a six-layered M ) straetion hierarchy and more than 60 , 000 Japanese words are assigned to the leaves . 
2 . 2 Similarity Measure 2 . 2 . 1 S imi la r i ty o f Se  nant ic Categor ies Before we define the similarity of surfaee case structures  , first we deline the similarity of semantic categories in the thesaurus  . We detine the similarity sim . ~( , b'eml , Sere 2 ) of two semantice atego ' ries ~5'e11~1 and Sere2 as ~ L monotonieally increasing function of the most specifice onllil Olllayermscl  ( Seml ,   , 5' er n2) of
Senh and , S'e ~* , 2a Sbelow : mad/123456 exact match 1 , S/ms undef 578 918 112 . 2 . 2 S imi la r i ty o f Sur face Case St ructures First  , we assume , that the similarity measure of surface c ~ Lsesl ; ructnres have to satisfy the following require -meats  . The simibmty should become greater if 1 ) the number of the eol'res poiMing cases becomes greater  , o , ' 2 ) the corresponding ease element nouns become more similar  , or 3 ) the ratio of the number of the corresponding cases to the l  , nnlbcr of the cases in each surface case structure becomes greater  . 
When cM culating the simih Lrity of two surface case structures el and  e2  , flrsl ; e ~ and e2 are match e ( l and the set of pairs of the corresponding eases , M(ea , e2) , is construcl ; ed . A ease(pli , Sernli ) of el corr (> sponds to ~ c~se(p2j , S ern2j of e2 only when the surface case markers Pil and P2j are tim same and sim ~ ( Sern , i , Sem2j ) is ( lefine(l . 2 bets imp .   ,   ( m ) be the similarity of a pairm of corresponding cases  , then the similarity sims ( el , e2) of the two aurfae . e case structures el and ( !2 is delined as below: . im , , . ( r . ) v/\[MIx : "~<- r~- .   .   .   .   .   .   .   . IMIx ~ IFMI ( xVI e=/'/\[~where IMI is the number of the corresponding causes  , and I , ~ , l and I ~= i a , ' e the number of case , ~ in e , ~ mde2 respectively . The first factor satisfies requirement 1) , 2In Japanese , there exist several topic-marking postpositional particle such as " tl  ( wa ) " and " g ( too ) " , and eases marked by those topic-marking postpositional particles could correspond to cases marked by caue-marking post-lmsitional par -tides such a  . s "/) ?( ga-NOM ) " and "~: ( wo-ACC ) ' . Although this paper considers ease-marking postpositional particles only  , the implemented system can appropriately cMeulate the similarity of surface asestruct tnes in which topic-marking po  . st-position Mp articles apl ) e~m and tile second satisfes2 )  .  ' . File third and the fourth satisfy 3) . 
For example , the similarity of the surface case structures el and  e2 of Example 1 and 2 is calculated as folh ) ws . 
Example 1 kare-gahon-wokau he-NOM book-ACC buy ( fiebuys a book . )
Example . 2kare-ga musuko- , ninooto- , wokau he-NOMs on-DAT note book-ACC buy ( liebuys hissona note hook . ) First , the set of pairs of the COl'rest ) onding cases , M(cl , e ~) , is constructed ( nb = not cbook ) . 
-  (( ~ ( , , , 0 , s e , ,~ , ~) , ( ~( u ~) , Semao )) , M () ~ : ( wo) , Sem~oo ~) , ( ~( wo ) , s e ~ . ~ , ~ , ,))  (( In the ease of semantic ategories in BGIt , the results of the similarity calculation are sim . .(Se~nh ~, Semhe ) = 11 and simo(Se . ~ boo ~, Se . ~) = 9 . Since IMI , levi , and levi are 2, ~, a . d3 respectively , sims(el , e2) is cMculated as follows : 11+9(22~~i . ~, . ( e , , e ~) = ?'~ x-2xx = u . ss 3 Query Generation Retrieval Query generation retrieval has the following three t~a-tares  ,  1 ) it generates retriev M queries from similarities ,  2 ) eflleient example retriev M through the tree structure of a thesaurus  ,  3 ) binary search along subsump-lion ordering of retrieval queries  . Fig .   1 describes the framework of query generation retriev M  . 
In query generation retrieval , first , given an inlmt surface case structure , t retrieval query is generated for a certmn similarity and then example surface case structures which satisfy the similarity are retrieved from the example database  . In order to generate a retrieval query which satisfy the given similarity require-meat  , it is necessary to enumerate all the l ) ossible patterns of surf~t cecase structures which satisfy the given similarity reqt drement  . We define similarity template which enumerates all the possible patterns of  ( : alculat-lug similarity between two surface case structures and collect them in a similarity table  . The similarity table is referred to whm , gener ~ tting retriev M queries from the inl ) ut surface case structure and a certmn similarity . 
A retriew d query consists of the number of cases of the e?ample to be retrieved  , cases which the example to be retrieved should have  , and semantic restrictions of ease element nouns . \[ norder to quickly retrieve examples which satisfy are trievM query  , for each surface case marker we build a substructure of the whole the-sara'us of lOUi is  , which we call sub-thesaurus . Examples which satisfy the requirements in a retrieval query are quickly retrieved through the tree structure of those sub-thesauri  . 

Input Surface Case Structure ?
Similarity Table ( Similarity Template )?
Retrieval Query ?1, r\/
Fig .   1: The Framework of Query Generation Retrieval In our query generation retrieval  , it is necessary to control the retrieval process effectively by providing similarities in a certain order and to retrieve the most similar examples as fast as possible  . In this paper , we use binary search along subsumption ordering of retrieval queries  . It is possible to define a subsmnption relation between two retrieval queries  . Such subsumption relation of retrieval queries results in the subsumption relation of the sets of retrieved examples  . This means that a set of retrieved examples ubsumes another set if the retrieval query of the former set subsumes  , or in other words , is more general than that of the latter set . With those subsumption relations of retrieval queries and the sets of retrieved examples  , it becomes possible to efficiently binary-search te set of examples to be retrieved by the most specific retrieval query  . 
Sections from 3 . 1 to 3 . 3 describe those three features and section 3 . 4 evaluates the framework . 
3.1 Retrieval Query Generation from
Similarities 3 . 1 . 1 Retrieval Query A retrieval query q is defined as a pair  ( ldb , csp ) , where ldb is the number of cases of the example to be retrieved  , and csp is the requirement on cases and semantic restriction of case element nouns  , which we call a case structure pattern . A case structure pattern is represented as a set of pairs  ( p , Sere ) of a surface case marker p and a semantic category Sere  , where Sere is not necessarily a leaf semantic ategory  . It requires that for each element ( p , Semincs p , the example to be retrieved has to have a case marked by p and the case element noun has to satisfy the semantic restriction of the semantic a tegory Sere  . 
For example , for the verb "~~) ( buy ) " , the following ql requires that the example to be retrieved should have three cases  , the case element noun of " ~ ( ga-NOM ) " should be " ~/ ( he ) "  , and that of the " ~ ( wo-ACC ) " case should belong to the semantic ategory of " s t "  ( = " stationery " )  . ql retrieves examples like " ~/ ,  ~ ,   , ~ , f ' ,  ~:- , /"- b ,  ~ , ~'~5" ( He buy shiss on a note book . ) and " ~ ,  ~ ,  ~ , V - ,   , ~~? ,  ~  , ~'~")" ( He buy shis daughter pencils . ) . 
ql = (3, (;4~( ga ), Semhe ), (~ wo ), Semst )) 3 . 1 . 2 Similar ity Template We introduce the notion of similarity template in order to enumerate all the possible patterns of calculating the similarity between two surface ease structures  . In the case of the similarity measure defined in section  2  . 2 . 2 , a similarity template is represented as a 3-tupple : where lin and lab correspond to the number of cases of the input and of the example respectively  , and they are supposed to be less than or equal to the predetermined maximum number l  , ~ a  ~ . CS is the multiset of the similarities between corresponding ease element nouns  . For example , in the case of Example 1 and 2 in section 2 . 2 . 2 , the result of similarity calculation is represented as a similarity template  ( 2 ,  3 ,  11 ,  9  ( suppose that the former example is the input and the latter is from the example database  )  . 
All the possible combinations of li , , ldb , and CS can be enumerated beforehand without any inputs and examples if only the maximum case number lm ~ is given  . 
Suppose that lm ~ , is 3 , the number of possible combinations of l in , ldb , and CS is 203 . 
3.1.3 Retrieval Query Generation
Similarity templates are collected in the similarity table and referred to when generating rctrievM queries from the input and a certain similarity  . The following shows how to generate a retrieval query frmn an input ei  , ~ and a similarity template t = (\] ei , d , ldb , CS ) . 
The retrieval query to be generated is denoted as q =  ( Idb , CSp ) , where ldb corresponds to them unber of cases in tile example to be retrieved and is the same as Idb  . in t . CS in t is the multiset of the similarities between corresponding case element nouns  . When constructing the case structure pattern csp fl'ome in and CS  , we use an injection to map each similarity sire incs to a ease  ( p , Se . ~) in ~ . ~ or each ( p , S e ~ , ~) to which a similarity sire is mapped , a case(p , Sere ) is collected into csp , where the semantic a tegory Sere satisfies im ~ ( Semin , Sere ) = sire . 
For example , let the input ei , ~ be the surface case structure of Example 1 and the similarity template t be ( 2 , 3 ,  11 , 9) , then there exist two possible injections frmnCS into e in and two retrieval queries are generated as below  ( sim , ( SemN , SemN , , , ) = x ): o . =(~'( ~ a ), S ~ . .~o,,(~( . ~o),S . m ~ oo ~) ql = (3 , (~)"( ga ) , Semhe , ll ) , ( ewo ) , Sembook , 9)>

Each element ( p , Sernina case structure pattern cs prequires that the example surface case structure has to have a case marked by p and the case element noun has to satisfy the semantic restriction of the semantic category Sere  . Given the example databa . s e , it is possible to collect examples which satisfy the requirement p  , Sere beforehand . For each case marker p , we collect all those sets of examples . Since all tile semantic categories forms the whole thesaurus of nouns  , nonempty sets of those collected examples also form a substructure of the whole thesaurus of nmms  . We call it a sub-thesaurus for the case marker p . 
Fig . 2 shows an example of the sub-thesaurus for " ( wo-ACC ) " cause , supposing that the example database contains Example  1 and 2 in section 2  . 2 . 2 . The most specific common layer of Sembook and Semnb is the layer  5  , and the example set is Eglor Eg2 at layer 6 and 7  ( leaf )  , and Egl , Eg 2 above layer 6 . 
Given a requirement ( p , Sere ) and a sub-thesaurus for p , examples which satisfy the requirement are quickly retrieved through the tree structure of the sub-thesaurus in constantime  . Examples wtfich satisfy all the requirements in csp are obtained as the intersection of all those sets of retrieved examples  . 
The Size of ASub-Thesaurus
We estimate the size of all the sub-thesauri by the total number of elements in the nodes of those sub-thesauri  . 
Let N be the total number of examples in the example database  , d be the depth of the whole thesaurus of nouns , and lrna ~ betile maximum case number . A case element noun in an e?ample appears it , a leaf node and all of the parent nodes of the leaf in a sub-thesaurus  , thus appears d times . Since the number of case element nouns in an example is at most lmaa ~  , the number of e~se element liouns ill the examph  '  , database is at most Nxlm = ~ and the order of the size of all the sutl-thesauri is at most Nxl  .   .   .   . xd , i . e . , O(N)(l . . . . . x disconstant ) . 
a . a Binary Search along Subsmnption Ordering o f Retrieval Queries  3  . 3 . 1 Subsumpt ion Re la t ion A subsumption relation can he defined between two re-trievM queries  , and results illtim subsmnption relation of the sets of retrieved examples  . For cxmnple , in the case of the following two retric val queries ql and  q2  , q2 has a requirement on the "~: ( ni-DAT ) " case while ql does not , and the requirement on tile "\] fi ( . qa-NOMO " case is more specific in q2 than in ql . Thus , q2 is more specific than ql , or in other words , ql subsumes qa . 
q , = (3,-~( . q a ), S e , ; ~ th . . . . . . . ), ('2(wo ), Se . mtt )) q~:(a , (~ s(,~), s . .,,,~),( ~ . ( , , , o ), s ~ . .,),  .   .   .   .   .   .   .   , ) Furthermore , ql and q2 are generated from the similar--itytenlplates t ,  - <2 ,  3 ,  5 , 9a . ndt2:<2,3,11,9,5)gg2// . '/" //'/ /,/" ,  . */,'v "4", ,,"' . ,, / /  . , " a~Egl,Eg2",,/'//"6// . /"/' EglEg7 ( Leaf ) . 

Senl(g , . book ) Scin(/-\]',. note book )
Sub-Thesaurus for ~ ( wo-ACC ) Case ~/ ~: ~" ~- ) Rool , ~: Egl , Eg2 ( llc buys a Ix~0k , ) //\[ " , , ,  ~ , I , l~'l:Layei'1 ~" , , /-- I , ~' fi:5 ( noun ) /" . .
( liebuys hisson /: , ~ " , a notebook , ) //" r "' ,  ""  . . . . .  ? "  . . . , . .~ / " ~ ( Egl , Eg2 "" . .

Fig . 2: An Example of Sub-Thesaurus respectively , and a subsmnption relation of similarity templates holds between tl and  t2 as well . 
3.3.2 Similarity Table
With the subsun , ption relations of retrieval queries and the sets of retrieved examples  , it is possible to eificiently binary-search the set of examples to be retrieved by the most specific retrieval query  . In the following , we describe how to organize the set of all the similarity templates as a similarity table and to realize the process of binary search of the most similar examples  . 
First , the set of all the similarity templates is divided into a sequence TI  ,   .   .   .   ,   2'n which is totally ordered by the following subsumptiou relation  . Let ein be the input and Ti , Tj ( i < j ) be the sets of similarity templates ill the sequence  T1  ,  .   .   .   , :/'~ , , and EGi , EGj be the sets of examples retrieved by all the similarity templates in  7~ and \[ D respectively . Then , ~/ ~ subsumes 7) if and only if , t ) EG is ubsmnes EGj , and 2 ) the sets of retrieved examples are totally ordered by similarity  , i . e . , Ve . i(~EGIVcjEE(;j , sim ~ ( ein , ei ) < sim~(ei , , , ei ) . 
In the case of the similarity measure defined in section  2  . 2 . 2 , suppose that lm~is3 , tile length of the sequence 7'1 ,  . . .   , 7 ~ in the similarity table is 7 when li ~ , isl , 9 when li , ~ is 2 , and 11 when li ~ is 3 . 
With this subsmnl ) tion ordering , the most similar examples are obtained by finding the most specific Ti with nonempty EGi and then finding the most similar exaruples in EGI  . Since EGi = ? means EGj = ? for any j > i , this search process can be efficiently realized by binary-searching the sequence T l  ,   .   .   . , T , . This sequence T l , .   .   .   , Tn can be regarded as a table of similarity templates and is called similarity table  . 
Fig .   3 shows the binary search of the similarity ta-hle . Example space is partitioned by the snbsumption relation  . The most similar examples are fmmd in the innermost nm>mnpty set  . This binary search method makes efficient retrieval possible whether the example xSubsumpt lonRelation x  . .  . . . . . . . . . . . . . . . . . . . . . , o .   .   .   .  ,  .   .  ,% ,,  . ,  . . . . . . ?: . :::: . . . .  . . . . . . .   . 
The Input
The Most Similar Example ": Example Fig .   3: Binary Search with Subsumption Relation database contain similar examples or not  . 
3.4 Evaluation
The framework of query generation retrieval consists of three major components  , i . e . , the example database , the similarity table , and the set of sub-thesauri . Let N be the size of the example database , the order of the size of the similarity table is independent of N and that of the set of sub -thesauri is O  ( N )  . Thus , tile total order of the size of the system is O ( N )  . 
In order to evaluate the computational cost , we plot the computation time ( in CPU time ) , increasing then unlber of examples N , and compare the result with a full retrieval program  . The example database contains example surface case structures of the Japanese verb " F~+  )   ( buy ) " and both programs retrieve the most similar examples from the example database  , given an input surface case structure of the same verb " ~  ; ~) ( buy ) " . For the query generation retrieval program , the maximum number l .   .   .   . of cases was 3 . The full retrieval program calculates the similarity between the input and the example for all the examples in the example database  , and retrieves the examples with the greatest similarity  . Both programs are implemented in SICStus Prolog 2 . 1 on a SPARC station-10 . Fig . 4 illustrates the results . The computation time of the full retrieval program is proportional to N  , while that of the query generation retrieval program is nearly constant  . Thus , our query generation retrieval program achieved drastic improvement in decreasing computational cost compared with the full retrieval program  . 
4 Concluding Remarks
This paper proposed a novel example retrieval method in example-based NLP  , bascd-on generating retrieval queries fl'om similarities  . The proposed method is applicable to any other definitions of similarities in example-based NLP  , if the following three requirements are satisfied  ,  1 ) the similarity is calculated based on word sense similarities in a thesaurus  ,  2 ) the similarity can be defined as afnnetion of a small number of factors  ,  3 ) each factor varies over not too many number of discrete values  , or otherwise , continuous values can be transformed into not too many discrete values  . 
300....T . . . . ~-~--~--, ---
Full Retrieval * - , , ~
Query Generation Retrieval , /25O2OO
E150

IO05 O0-~--020406080100120140
Number of Examples
Fig . 4: Time per Number of Examples
In this paper , we restrict ourselves to the eases where examples have the same verb as input  . However , similarities of verbs have to be considered and the example database has to contain examples of many verbs  . 
Constructing sub-thesauria right be a problem in those eases  , and the solution n fight be that all the examples are distributed into several sets of sub -thesauri  . 
In applications like case-based reasoning ( CBR ) and information retrieval ( IR )  , good examples do not necessarily have the greatest similarity and thus content-based indexing methods are more effective  . On the other hand , in example-based NLP , usually similarity measure is strictly defined and only the most similar examples are retrieved  . The proposed query generation retrieval fits this feature of example-based NLP  . 
The idea of generating retrieval queries from similarities is employed also in several other related fields such as translation aid system  ( Snmita and Tsutsumi , 1988) and CBR ( Shimazu , Kitano and Shibata ,  1993) . 
Since the tasks of those works are different front ours  , their formalizatim m are different from ours . 

Kurohashi , S . and Nagao , M .  (1993) . Structural disambiguation in Japanese by evaluating case structures based on examples in case frame dictionary  , Proceedings of the 3rd IWPT , pp .  111-122 . 
Nagao , M .  (1984) . A frmnework of a mechanical translation between Japanese and English by analogy principle  , in A . Elithorn and R . Banerji ( eds ) , Artificial and Humau Intdligence , Elsevier Science Publishers , B . V . 
NLRI ( National I , anguage Research Institute) .  (1964) . 
Word List by Semantic Principle a , Syuel Syuppan . ( in

Sato , S . and Nagao , M .  (1990) . Toward memory-based translation , Proceedings of the 13th COLING , Vol . 3, pp .  247-252 . 
Shlmazu , H . , Kitano , H . and Shibata , A .  (1993) . Retrieving eases from relational databases : Another stride towards corporate-wide case-base systems  , Proceedings of the 13th\[ . \] CA\[,pp .  909 914 . 
Sumita , E . and Wsutsumi , Y .  (1988) . A translation aid system using flexible text retrieval based on syntax-inatching  , Proceedings of the 2nd TML
