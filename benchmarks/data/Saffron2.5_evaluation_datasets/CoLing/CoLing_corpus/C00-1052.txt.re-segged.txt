Compact non-left-recursive grammars using the selective 
left-corner transform and factoring *
Mark Johnson Brian Roark
C()gnitiv ( ; and Linguistic Sci (' . n(:(' . s , Box 1978
Brown University
Mark_Johnson@\[3rown.edu Brian_Roark@grown.edu
Abstract
Tim lcft-c . or ner transibrmrei I loves left-r ( ; cursion f l'om ( l ) rol ) al ) i list i ( ' )   ( : on text-free granunars and uni-tcation grammars , i ) ermitting siml ) l ( ~ tol ) -down parsing te ( : hniquestol ) e used . Unforl . unately the grammars l ) roduced by the stal~dard \] et Tt- ( ' orner transform are usually much larger than ; he original . 
The select , lyeleft-corner i ; rans form ( lescril ) ed in this l ) aI ) er1 ) rodu ( : esa transformed grammar which simulates left -corne recognition of a user-st  ) coiffed set of timoriginal productions , and tOl)-downr(~cognition of the , others . C()mbined with tw () factorizations , it ; 1) rOdll ( ; esllOll-lefl ; -recilrsive grall llll ~ ll ' S ; lilt ; ~/ re11 o ; much larger than the original . 
1 Introduction
TOl ) - downi ) arsing techniques a real ; tl ' a (: tiv (! because of their simt ) licity , and can often a ( :hi ( ~vegood 1 ) er-formance in 1 ) racti ( : e ( loark and . \]() hns(m , 1999) . 
However , with a left-re ( : ursive grammar such l ) ars ( ' a st yl ) i ( : ally fail to term im~te . Timleft > corner gram-ltlarl ; ralls for lneolivert salefl ; - recursive ~ l'i illllll ~ lrin to a non-lefl ; -recursive one : a topdown t ) arser using a left-corner transformed grammar simulates a lefl  ; - ( : orner parser using the original granllnar ( l/os ( mkrantz and Lewis II , 1970; Aho and Ulhnan ,  1972) . I h ) we ver , the left-corner transformed grammar can 1 ) e significantly larger than the original grammar , ca . using mlmero ~ lsl ) rol ) lelns . For example , we show1) clew that a probat)ilistic on text-fr ( . ~ egrammm : ( PCFG ) estimated froln left-corner transformed Petal WSJ treebank trees exhil  ) its considerably greaters t ) arse data prol ) lems than a PCFG estimal , e(t in the usual manner , siint ) ly because the left-corner transformed grammar contains approximately  20 times more 1  ) reductions . The transform described in this paper t ) rodue es a grammar al ) prox-imately the same size as the inlmtgrmmnar , which is not as adversely at \[ ected by sparse data  . 
* This research was slli)i ) or l ; edt ) yNSF awards ! 1720 368 , 9870676 and 98121 (19 . We would like totlm nko 11" (: olleagues in I~I , IAP ( Brownl , aboratory for Linguistic Information Pro-ccssing ) and Bet ) Mooret br their hcll ) fulcomments on this pal ) Or . 
Left-corner transforms a . reparticularly usefll because they can i ) reserve annotations on productions ( n : ore on this 1 ) (flow ) and are there ibreapt ) lieable to more COml ) I exgraminar formalisms as well its CFGs ; at ) roI)erty which other al)l ) roae hestole fl ; -recursion elimination tyl)ically lack . For examl ) le , they al ) l ) lytol ( ~ft-r ( ~cursive unification-based granmmrs ( Mat ; -sumoto et al , 1983; Pereira and Shieber ,  1987;  . h)hn-son , 1998a ) . Because the emission 1) robabilit ; y of a PCFG 1) ro(hm ( ; ion ca15 be regarded as an anllotatiollon a CFG1 ) reduction , the left-corner transform cant ) rodue (' , a CFG with weighted l ) roductions which assigns the same l ) robal ) iliti ( ~sto strings an ( l trans-tbrmed trees its the original grammar ( Abney et al ,  11999) . I lowever , the transibrmed grammars ( : an be much larger than the original , which is unac ( 'el ) table t br many aI ) t ) lieations involving large grammars . 
The selective left-corner transform reduces the transl ' or nm  ( l grammar size because only those l ) ro- ( lu ( : tions which apt ) ear in a left-recto'sire ( : y ( : lellee ( l1 ) e recognized left- ( : orner in order to remove left-recurson . At Ol ) -down parser using a grammar pro-dueed by the selective left-  ( : or ner ; ranst . ' orm simulates a generalized left-corner parser ( Demers , 1977; Nijholt ,  1980 ) wl fich recognize stuser-specified sul ) -set ; of the original productions in a left-corner fashion  , and the other productions to l )- down . 
Although we do not investigate it in this 1) al)er , the selective left- ( : orner transform should usually lmveaslnaller sear  ( : hsl ) ace relative , to tim standard left-corner transform , all else being equal . The partial l ) arsest ) roduce during a to t ) -down parse consist of a single connected tree fragment  , while the partial parses l ) rodueed produced during a let't-corner t ) arse generally consist of several discommcted tree fragments  . Since these fragments arc only weakly related ( via the " link " constraint descril ) ed below )  , the search for each fragment ix relatively independent  . 
This lllayl ) erest ) onsil ) le for the ol ) servation that exhaustive left-corner 1 ) arsing is less efficient titan topdown l ) arsing ( Covington ,  1994) . Intbrmally , because the selective left-corner transforln recognizes only a sul  ) set of 1 ) reductions in a lefl ; -corner fashion , its partial parses contain fewer tree discontiguous While this paper focuses oil reducing grammar size to n linimize sparse data problems in PCFG estilnation  , tile modified left-corner transforms described here are generally api  ) licable wherever the original left-conler transform is  . For example , tile selective left-corner transform can be used in place of the standard left-comer transform in the construction of finite-state approximations  ( Johnson , 1998a ) , often reducing the size of the intermediate automata constructed  . The selective left-corner transform can be generalized to head-corner parsing  ( vail Noord ,  1997) , yielding a selective head-corner parser .   ( This follows from generalizing the selective left -corner transform to Horn clauses  )  . 
After this paI ) er was accepted for publication we learnt of Moore  ( 2000 )  , which addresses the issue of grammar size using very similar techniques to those proposed here  . The goals of tile two pat ) ers are slightly different : Moore's approach is designed to reduce the total grammar size  ( i . e . , the sunl of the lengths of the productions ) , wt file our approach minimizes the number of productions  . Moore ( 2000 ) does not address left-corner tree-transforms , or questions of sparse data and parsing accuracy that are covered ill section  3  . 
2 The se lec t ive le f t - corner and re la ted t rans forms This section introduces the selective left-corner transform and two additional factorization transforms which apply to its output  . These transfbrnm are used illtile experiInents described in tile following section  . As Moore (2000) observes , in general the transforms produce a non-left -recursive output grammar only if tile input grammar G does not contain unary cycles  , i . e . , there is no nonterminal A such that A-~+A . 
2 . 1 The selective left-corner t rans form The selective left-corner transform takes as input a CFG G =  ( V , T , P , S ) and a set of left-corner productions LC_P , which contains no epsilont ) roductions ; the non-left-corner prodnctions P-L are called topdown productions  . The standard left-corner tr'ans-form is obtained by setting L to the set of all non-epsilon productions in P  . The selective left-corner trnns form of G with respect oL is the CFG ?  . Cn(G ) = ( V1, T , P1, S ), where:
V1 = VUDX:DEV , XcVUT and P1 contains all instances of tile schemata 1  . In these schemata , DEV , wET , and lowercase greek letters range over ( VtOT ) * . The D-X are new nont ; ernlinals ; informally they encode a parse state in which an D is predicted topdown and an X ?-- D  .   .   .   .   .   . D .   . -/31f ~ oa DA : ~~~?" finD/3n
CC '..
A ~, ~ D-B jarioD-D
Figure 1: Schematic parse trees generated by the original grmn marG and the selective left-corner transformed grammar gCL  ( G )  . The shaded local trees in the original parse tree correspond to left-corner productions  ; the corresponding local trees ( generated by instances of schemal c ) in the selective leff-conler transforn led tree are also showns haded  . The local tree colored black is generated by an instance of schemal b  . 
has been found left-corner , so DX~cr . (c , )7 only if D~bXT . 
D ~ wD-w ( la )
D-~(.~DA where A-+a EP-L(lb)
D-/3-+\[3DC where C+/3/3EL(lc)
D-D ---> e(ld)
Tile schemata flmction as follows . The productions introduced by schema 1~ start a left-corner parse of a predicted nonterminal D with its let'mlostermi-nalw  , while those introduced by schenlal b start ; a left-corner parse of D with a left > corner A , which is itself found by the topdown recognition of production A -+  ( tEP-L . Scheinal cextends the current left-corner Bt it ) to a C with tile left > corner recognition of production C ~  /3 f t . Finally , scheinald in at chestile topdown prediction with tile recognized left-corner category  . 
Figure 1 schematically depicts the relationship between a chain of left-comert  ) roductions in a parse tree generated by G and the chain of correst  ) onding instances of schemale . The left-come recognition of the chain starts with the recognition of  ( t , tile right hand side of a topdown production A--+  ~  , using an instance of schemal b . Tile left-branching chain of left-corner productions corresponds to a right-branching chain of instances of schemal c  ; the left-corner transforln in effect converts left recursion into right recursion  . Notice that tile topdown predicted category D is passed own this right-recursive chain  , effectively multiplying each left-conler productions by the possible topdown predicted categories  . Tile right recursion terininates with an ill -stance of schemald when tile left-comer and topdown categories match  . 
Figure 2 shows how to t ) -down productions from G are recognized using ? CL ( G )  . When these-(& , ? CO : A--Ar :- re , nmval(t : .   K2ZX LEC x Figure 2: The recognition of a topdown produc , tionA--+a : by ? CL ( G ) involves a left-corner category AA , which immediately rewrites to e . One-stepe-removal applied to ? CL ( G ) l ) roduces a grmnmar in which each topdown production A-+ct corresponds to a production A--+tt in the transformed grammar  . 
lective left-corner tra , ns for mist bllowed by a one-step c-renlow d transforn l  ( i . e . , coml ) osition or partial evaluation of schema1t ) with respecto schemal d ( Johnson , 1998a ; Abney and 3oMson , 1991; Resnik ,  1992)) , each topdown production f ' roll lG appears uilclmnged intiletinal grammar  . Fulle-relnoval yields the grannnargiwm1)3 , the schemata below . 
. D-~wD-w
D - ~' w where . D ~ j w
D ~ ~ DA where A-+(~cl ) - L . D -+ a where D =>* APLA,-+~G--L
DB--+fl DC where C-->B flcL
DB-fl wl lere D ~, C,C~B fl 6L
Moore ( 2000 ) introduces a version of the left-corner transform called LCLIt  , which al ) plies only to productions with left-recursive parent and left cl fihl categories  . \] n the ~ ( : on text of the other transforms that Moore introduces  , it seems to have the , sallle effect in his system as thes ( Je ( ; tive lefl ; -corll ( Wtrails-form does lmre . 
2 . 2 Select ive le f t - corner t ree transfor l l lS There is a  1  . -to-1 correspondence bt ween the 1 ) arse trees generated by G and ? CL ( G )  . A treet is generated by G iff there is a corresponding t'generated by ? CL  ( G )  , where each occurrence of a topdown production in the derivation of t corresponds to exactly one locall  , reegelm rated by occurrence of the corresponding instance of schema  11  ) ill the derivation of t ' , and each occurrence of a M't-corner production in  1 corresponds to exactly one occurrence of the corresponding instance of schemale in t '  . It ; is straightforward to detine a 14o-1 treel ; ransform TL mapping parse trees of G into parse trees of ? dL  ( G )   (  . Johnson , 1998a ; Roark and Johnson , 1999) . In the empirical evaluation below , weest in mtea PCFGD or a the trees obtained by applying  7  , to the trees in the Petal WSJ tree-lmn k , and compare it totile PCFG estinmted from the original treebank trees  . 
A stochastic topdown parser using the I'CFG estimated from the trees produced by ~  , simulates a stochastic generalized left-corner Imrser  , wl fich is a generalization of a standard stochastic lefl  ; -corner 1 ) arser that pernfits productions to t ) eret ; ognize , dtopdown as well as left-corner ( Manning and Carpenter ,  1997) . Thus investigating the 1 ) roperties of PCFG estimated from trees transformed with " YL is an easy way of studying stochastic trash-down automata perform in generalized lefi  ; -corner parses . 
2.3 Pruning useless productions
We turn now to the problmn of reducing the size of tile grmn mars produced by left-corner transforms  . 
Many of the productions generated by schemata 1 art : useless , i . e . , they never appear in any terminating deriw ~ tion . Wt file they can be removed by standard methods for deleting useless productions  ( Ilopcroft and Ulhnan ,  1979) , the relationship between the parse trees of G and ? CL  ( G ) depicted in Figure 1 shows how to determineahead of time the new nonterminals DX that can at  ) pear in useful productions of ECL ( G )  . This is known as a link constraint . 
D ) r ( P ) CFGs there is a particularly simple link constrain l  ; : \] ) Xapt ) ears in usefl fl productions of ? CL ( G ) only if ~7 < ( 17 UT ) * . D =>* X T . If ? Lepsilon removal is applied to the resulting grammar  , DX appears in use fill productions only if H7C ( 17 UT )  +  . D ~, X7 . Thus one only needge . nerate instances of the left-corner schemata which satist ~ y the corresponding link constraints  . 
Moore ( 2000 ) suggests all additional constraint on nonte . rminals DX that canal ) l ) earin usef ll1 ) roduc-l ; iolts of ? CL(G ): Dllllsl ; eitller beth ( ! start synJ ) ol of Gorel seal ) pear in a production A--+ o'D/3 of G , for . , , ;, Ac-V , cVuT+cTp . 
It is easy to see that the lroducl , ions that Moore's constraint prohibits are useless  . There is one non-tern final in the treebank gramnmr investigated below that has this property  , namely LST . However , ill the tree-lmnk granmmr none of the productions exlmnding LST are left-recursive  ( in fact , the first ; dfild is a hvays a pretermiiml ) , so Moore's constraint does not at gecthesize of the transformed grammars investigated below  . 
While these constraints can dramatically reduce both the number of productions and the size of the  1  ) arsing search space of the 1 ; ransformed grmn mar , in general the transfl ) rmed grammar ? CL ( G ) can 1 ) equadratically larger than G . There are two causes for the explosion ill grmnmar size  . First , ? CL ( G ) contains an instance of sdmmalb t breach topdown production A--+a and each D such that  37  . D ~, A7 . Second , ? CI , ( G ) contains an instance of schemal c for each left -corner production C-~fi and each D such that BT  . D ~, C7 . InetDct , ? CL ( G ) contains one copy of each production for each possible left-comerances to r  . Section 2 . 5 describes filrther factorizations of the l ) roductions of ? CL ( G ) which mitigate these causes . 
357 2.4 Optimal choice of L
Because : :> ~ , increases monotonically with = > L and hence L , we typically reduce the size of ? CL ( G ) by making the left-corner production set L as small as poss it  ) le . This section shows how to find the unique minimal set of left-corner productions L such that ? CL  ( G ) is not left-recursive . 
Assume G = ( V , T , P , S ) is wuned ( i . e . , P contains no useless productions ) and that there is no A6V such that A--++A ( i . e . , G does not generate recursive unary branching chains  )  . For reasons of space we also assume that P contains no e-productions  , but this approach can be extended to deal with them if desired  . A production A -+/3fl CP is left-rccursive iff ~3' C ( VUT ) * . \]3~, AT , i . e . , Prewrites B into a string beginning with A . Let L0 be the set of left-recursive prodtlctious in G . Then we claim ( 1 ) that ? CLo ( G ) is not left-recursive , and (2) that for all LCLo , ? CL(G ) is leff-recursive . 
Claim 1 follows t ? om the fact , that if A~s , 0B 7 then A = :> , , /37 and tile constraints ill section 2 . 3 on useful productions of ? CLo(G ) . Claim 2 t bllows from the fact that if LC L0 then there is a chain of left-recursive productions that includes a topdown production  ; a simple induction on tile length of the chain shows that gCL  ( G ) is left-recursive . 
This result justifies the common practice in natural language lefl  ; -cornert ) arsing of taking tile terminals to be the preterminal t  ) art-of-speech tags , rather than the lexical items themselves .   ( We did not attempt to calculate tile size of such a left-comer grammar in tiltempirical evaluation below  , lint it would be much larger than any of the grammars described there  )  . In fact , if the preterminals are distinct from the other nonterminals  ( as they are ill the treebank grammars investigated below  ) then L0 does not include any productions beginning with a preterminal  , and ? CLo ( G ) contains no instances of schemala at all . We now turn our attention to tlm others clmmata of the selective left-corner grammar transform  . 
2.5 Factoring the output of ? CL
This section defines two factorizations of the out tm t of the selective left-corner grammar transform that can dramatically reduce its size  . These factorizations are most effective if the number of t  ) roductions is much larger than the number of nonterminals  , as is usually the case with treebank grmn mars . 
Tilttopdown factorization decomposes schemal bby introducing newimn terminals Dt  , where DCV , that have the stone expansions that D does in G . Using the same interpretation for variables as in schemata  1  , if G = ( I~T , P , S ) then (?( a ) = T , S ) , where: 14a = IqtOD ': DEV and Ptd contains all instances of the schematal a  , 3a , 3b , lc and 1(t . 
D--+A'D-A where A-+a EP-L(3a )
A'-+a , where A --> creP-L(3b )
Notice that the number of instances of schema 3a is less than the square of tile number of nonterminals and that the number of instances of sdmma  31  ) is the number of topdown productions ; the sum of these numbers is usually much less than tile mlmber of instances of schemal b  . 
Top-down factoring plws approximately tile same role as " non-left-recursion grouping "  ( NLRG ) does in Moore's ( 2000 ) approach . The meier difl ! erence is that NLRG applies to all productions A ~  /3/9 in wt fich /3 is not left-recm'sive , i . e . , ~7 . / 7  =>~  /3% while in our system toll-down factorization applies to those productions t br which  ~7  . B ~, AO ', i . e . , the productions not directly involved in left recursion  . 
Timleft-corner factorization decomposes schemal c in a similar way using new nonterminals D\X  , where DeV and X~VUT . 
c ) ( c ) = T , S ), where:
I'o = ~ qUD\X:D6V ,   X6VUT and Plc contains all instances of tile schemata la  , ib , 4a . , 4bandid . 
D/3-+C\BDC where C-+B\[9 ? L(4a)
CxB --+ fl where C--+B fl EL (4b )
The number of instances of schema 4a is bounded by the numtmr of instances of schema l c and is typically nmch smaller  , while the number of instances of schema 41 ) is precisely them unber of left-corner productions L  . 
Left-corner factoring seems to correspond to one step of Moore's  ( 2000 ) " left factor " ( LF ) operation . 
Tile left ; factor operation constructs new nonterminals corresponding to common prefixes of " arbitrary length  , while left-corner factoring effectively only factors the frst nonterminal symbol on the right hand side of left-corner productions  . While we have not done experiments , Moore's left factor operation would seem to reduce the total number of symbols in the transformed grammar attile expense of possibly introducing additional productions  , while our left-corner factoring reduces the number of productions  . 
These two factorizations can be used together in the obvious way to define a grmn martrans-~__  . C(ld , le ) form " L , whose productions are defined by schematal a , 3a , 3b , 4a , 4b and ld . There are corre-spondiug tree transtbrms , which we refer to as TI ! td ) , etc . , below . Of course , the pruning constraints described in section 2 . 3 are applicable with these factorizations , and corresponding invertible tree transforms can be constructed  . 
358 3 Empirical Results
To examine the effect of the tra . nsforms outlined above , we experimented with vm ' ious PCFGs in-dueed from sections  2--21 of a modified Pcml WSJ treebank as described in Johnson  ( 19981 ) )  ( i . e . , labels simplifie cltogrammatical ca . tegorics , R . OOT lu)des added , empty nodes and vacuous unary bra . nehcs deleted , and auxiliaries retagged as AUX or AUX (') . \ ~ , Z e . ignored lexic . alitems , and treated the part-of-speech tags as terminals . As Bob Moore pointed out Lous , the left-corner transform may pro-duc . eleft-recursive grmn mars if its inlmt grammar contains mmry cycles  , so we removed them using the atrans for ln that Moore suggested  . Given an iifitial set of ( non-epsihm ) productions P , the transtbrmed grammar contains the following in :odu  ( : tions , wher c~l ; heA ~ are 1 lewllOll-terlilillals :
A "-~( t where A--(tGP , A75~; A
A ~ D ~ where A => ~, D ~ iA . /1h - ~ ~: where A-~(~GP,A ~; . ,1 , ( t ~> ~ , A This transform can be extended t , o one on PCFGs which preserves derivation probabilities  . In this sec-tic)n , we fixP to ) be the produetic msl ; lmtre . sult ; afl ; eral ) plying this unary t : yc : le removal transform a . tion to the tree-l ) ank 1) roductions , and G to \]) e the (' or re-st ) on ding grammm ' . 
Tables 1 and 2 give the sizes of selective left ; - ( : or nergrmn lnartrmls forms ofG for various wthles of l  ; heleft-et ) rner set L and fa (: to rizal ; ions , without and with epsilon-remowfl respectively . Inl ; he tables , L/j is the st ' . /; of hd't-rc . cm'siv ('1) roductions in P , as detined in set : lion 2 . 4 . N is these l of 1) ro clu(:-l ; ions in 1~ whose hfft-ha \] M sides do not begin with a part -ofspee  ( : h ( P ( )S ) tag ;  1 ) ecause I ' OS tags are distinct front other nontermimtls in l  ; he tree-lmn k , N is an easily identified set of I ) roductions guaranteed to include L0 . The tables also gives the sizes of maximum -likelihood PCFGs estimated from the tr  (  ; es resulting fl : om applying the sele ( : tive left-corner tree transforms 7-1 , ( the treebank , l ) reaking mmryt : yeles as clescribed above . For the I ) arsing exl ) eri-ments below we always deleted empty nodes in the outl  ) ut of these tree transforms ; this corresponds to el ) silon removal in the grammar transform . 
First , note that/2Cv(G ) , the result of al ) plying the standard left-corner glmmnar transform to G  , has al ) proximately 20 times the number of t ) roductions ? C ( m't ~ ) ( G )  , the result of a I)-tha . tG has . I to wever " coplying the selective left-corner grammar transformation with factorization  , has approximately 11 . 4 times them unber of productions that G has . Thus the . 
methods described in this paper cml in fact dramatically reduce the  . size of left-corner transformed grammars . Second , note that ? C(~t'I")(G ) is not much th . , , : hist , et: . , , seNlarger isllOtIJO\\]
G?C1'?CN?CLo
T,\,,,o,~e(ta)(z ~)( t(z,z ( . .) 1 . 5,040 346,344 30,716 345,272 113,616 254,067 22,4:11 314,555 103,504 232,41 . 5 21,364 20,087 17,146 19,61 . 9 16 , 349 19 , 002 15 , 732 18 , 945 16 , 126 18 , 437 15 , 6 18 Table \]: Sizes of PCFGs inferred using vm'ious grammar and tree transtbrms after pruning with link constraints without epsihm removal  . Cohmms indicate thctorization . 
In the grammar and tree transfl ) rms , P is the set , of productions in G(i . e . , the standard M't-corner transform ) , N is the set of all productions in P which do not begin with a POS tag  , mML0 is the set of left-recursive t ) roclu(:tions . 
? C1'?CN?CL , "IN " ~\]) o , , o , ,e (? , ~ z ) ( l ~) (~<>) 564 , 430 38 , 489 563 , 295 1 . 76,644: 411,986 25,335 505,435 157,899 371,102 23,566 22,035 17,398 2:1,58!) 16,688 20,696 15,795 21,061 16,566 20,168 15,673 ' . l ' alfle 2: Sizc's of PCFGs inferred using various grammm : and tree trmts forms aft c  . r pruning with link constraints with epsihm remov M  , using the same notation as Table 1 . 
much larger than L0 , which in turn is be (: ausc , most pairs of non-P () S nontern finals A , Barenmt ; ually left-recursive . 
'l ) lrning now to the PCFGs estimated after at ) -plying tree transtbrms , we notice that grammar size ( Loesll () tJll ( ; FeLq e . I lell J\]ySt ) dramatically . These PCFGs encode a . maximum-likelihood estimate of the state transit i ( m probabilities for vmious stochastic generalized h  ; t't-(-ornert)m'sers , since at ol ) . -clt ) wn parser using these , grammars simulates a generalized left-corner 1 ) arser . The fact that ? Cp(G ) is 17 tim c . slarger than the . PCFG infe . rreda . fter applying " T , to the tree-lmn kmeans that most of tile lOS- sible transitions of a standard stochastic left -corner parser are not obser vc  . d in the treebank la " ' ammg " data . The state of a left-corner parser does capture some linguistic generalizations  ( Mmmingan<l Carpenter , 1997; Roarka . nd Johnson ,  1999) , but one might still expects parse-data problems . Note that " Lois only 1 . 4 times larger than T , ( t ~' z ~) Lo , SOWe expectless serious sp~rse data problems with the fat : toted selective left-corner transibrm  . 
We quantii ~ these sparse data prol ) lems in two ways using a heldout teste or Ims , viz . , all sentences in section 23 of the trce-lmn k . First , table 3 lists the mmfl ) er of sentences in the test corpus that fail to receive a parse with the wwious PCFGs mentioned 
Ilone %,
TN %.0 none(t(0(t ~) ( td , lc ) 20 2000
Table 3: The number of sentences not receive a parse using various fl'om sections  221  . 
in section 23 that do grammars estimated
Transfor in none 7?,


TN~7I ~0 enolle(td)(lc)(td , Ic )   664   543   639   518   640   547   615   522   719   539   718   554   685   521   706   561   666   521 Table 4: The lmml ) er of productions found in the transformed trees of sentences in section  23 that do not appear in the corresponding transforined trccs f  , ' omsections 221 .   ( The subscript epsilon indicates epsilon remowf l was applied  )  . 
above . This is a relatively crudelneasure , but correlates roughly with the ratios of graln lnar sizes  , as expected . 
Second , table 4 lists the number of productions found in the tree -transformed test cortms that  ( lonotat ) pear in the correspondingly transformed trees of sections  2   2t   . What is striking here is tlmt the number of missing I  ) roduction saft ; er either of the l ; rans for lns , Loor , N is a pl ) roxilllal ; ely thesa , in eastim number of inissing 1 ) reductions using the untransformed trees , indicating that the factored selective left -corner transfl  ) rmscause little or no additional sparse data problem  .   ( The relationship between local trees ill the parse trees of G and ? dc  ( G ) mentioned earlier implies that left-corner tree trans-tbrmations wilt not decrease the number of missing productions  )  . 
We also investigate the accuracy of the maximum -likelihood parses  ( MLPs ) obtained using the PCFGs estimated from tile output of the various left-corner tree transforms  .   1 We searched for these parses using all exhaustive CKY parser  . Because the parse trees of these PCFGs are isomorphic to the derivations of the corresponding stochastic generalized left-corner parsers  , we are in fact evaluating different kinds of stochastic generalized left-corner parsers inferred from sections  221 of the treebank . We used 1\?e ( lid not investigate the grammars produced by the various left-corner grammar transforms  . Because a left-corner grammar transform ECL preserves production probal  ) ilities , the highest scoring parses obtained using the weighted CFGEeL  ( G ) should be the highest scoring parses obtained using 
G transformed by TL.
nolle %,
TN7:0,,one(t ~ Z ) ( Z ~)( ta , to ) 70 . 8,75 . 3 75 . 8,77 . 7 74 . 8,76 . 9 75 . 8,77 . 6 73 . 8,75 . 8 75 . 5,77 . 8 72 . 8,75 . 4 75 . 8,77 . 4 73 . 0,74 . 7 75 . 6,77 . 8 72 . 9,75 . 4 Table 5: Labelled recall and precision scores of PCFGs estimated using various tree-transforms illa transform-detransform framework using test data from section  23  . 
tile transforn > detransforn l franmwork described in Johnson  ( 1998b ) to evaluate the parses , i . e . , we applied tile at ) propriate inverse tree transforn l , \ ]---1 to detransform the parse trees produced using the PCFG estimated froul trees transtbrnmd by T  . By calculating the labelled precision and recall scores t br the detransformed trees in the usual rammer  , we can systematically compare the parsing accuracy of difl brent kinds of stochastic generalized left-corner parsers  . 
Table 5 presents the results of this comparison . As reported previously , the standard left-corner grmn-in a rembeds sufficient nonlocal infornlation in its productions to significantly improve the labelled precision and recall of its MLPs with respect o MLPs of the PCFG estimated from the untrans for nmd trees  ( Maiming and Carpenter , 1997; ll . oark and Johnson , 1999) . Parsing accuracy drops off as granunar size decreases  , presuntably because smaller PCFGs have fewer adjust at fle parameters with which to describe this nonlocal information  . There are other kinds of nonlocal information which can be incorporated into a PCFG using a transforln-detransform approacll that result in an eve  . n greater improvement of lml'sing accuracy ( 3 ohns on , 1998b ) . Ultinmtely , however , it seems that a more complex ai ) t ) roach incorporating backoff and smoothing is necessary ill order to achieve the parsing accuracy achieved by 
Charniak (1997) and Collins (1997).
4 Conclusion
This paper presented factored selective left -corner grammar transtbrms  . These transtbrlns preserve the priinary benefits of the left-conmr grammar transform  ( i . e . , elimination of left-recursion and preservation of annotations on tlroductions  ) while dranmti-tally ameliorating its 1 ) rincipal problems ( gramnmr size and sparse data problelns )  . This should extend the applicability of left -conmr techniques to situations involving large grammars  . We showed how to ident if ~ y then finimal set L0 of productions of a grammar that must be recognized left-corner ill order for the transformed grammar not to be left-recursive  . 
We also proposed two factorizations of tile output of the selective left-corner grmn mart  , ransfbrm which fllrther reduce grammar size , and showed that there is only an finor increase in graln marsize when the a largetre  ( 'A ) a . nkgrmnmar . Finally , we exploited the treetrm~s forms that , correspond to these grammar trmls forms to formulate and study a class of s to  ( : hastie generalized left-corner t ) arsers . 
This work could be extended in a . nmn ber of ways.
D ) rexaml)le , in this t ) al ) er we assumed that one would always choose a left -corner l  ) ro ( lut'tioll set that ine ht des then finimal set L0 required to ensure that the transfbrmed grammar is not left-recursive  . 
However , Roarkmid Johnson ( 1999 ) report good per R ) rmance from a stochastically-guided topdown parser  , suggesting that lefl ; -recm'sion is not ; always fatal . It might be possible to judiciously choose a M't -cor  , mr production set smaller than L0 which elimiim test ) erni ( : iousleft-r (  ; cursion , so that the remaining lefl ; -reeursive cycles llav (' , su ( : hlowt ) rol ) a-1 ) ility that tlmy will efl ' ( ~ ( :t ; ivelynever l ) e used and a stochastically-guided topdown l ) arser will II ( ~ , Vel'sea . rehl ; h(un . 

Stephen Almey and Mark Johnson .  1991 . Memory requirements and local mn biguities of parsing strategies  . 
Journal of 1Lsycholinflui . sticR . e . scavch , 20(3):233250 . 
Steven Abney , David Me Alles , x  ~ r , and D ; rnando Pereira . 
1999 . Relating 1) r ( )) al ) ilisl ; i (: grammars and automata . 
IllProcccd infls of tile , ? Tth Annual Mcefinfl of the Association for Computational Linipdstics  , pages 542549 , 
San Francisco . Morgan Kauflmmn.
Alfred V . Ahom M . let h ; ryD . 1 Jllman .  1!172 . The 5l Ttc-or yo J ' Parsing , Translation and Compiling ; Volume . I : Parsing . Prentice-Hall , Englewood Cliffs , New Jersey . 
Eugene Charniak .  1997 . St ; a tist : i (: al parsing wit ; hacol L ; ex1 ; -ll'ee ~ lallllllar and words l ; atisl ; i(:s . In \]) ~ Y ) (' ccd , -ings of the Fourteenth Nationo , lCovj ): rcnce on Artificial hLtcdlifl cnce , Menlo Park . AAAI Press/MIT Press . 
Michael Collins .  1997 . Three generative , lexicalised models for st ; atistical parsing . In The Proceedings of the 35th Annual Meeting of tile : Association jbr Com-p ' utational Linguistics  , San Francisco . M ~ org all K all f -
IlI ~ Ulll.
Michael A . Covington .  1994 . Natural Lanfluage Pro-cessin9 for Prolo 9 Programmers . Prentice Ilall , Englewood Clitli % New Jersey . 
A . Demers .  1977 . Generalized left > corner parsing . In Cot@fence R . ccord of the Fourth ACM Symposium on Principles of Programming Lanfluagcs  , 1977 AC'M
SIGACT/SIGPLAN , pages 170-182.
, John E . Hopcroftml . dJeIfrey D . Ulhmm .  1979 . Introduction to Automata Theory , Languages and Computation . Addison-\Vesley . 
Mark Johnson . 1998a . Finite state a pl ) roximation of unification grammars using lefl ; -eorner grmmnarl\[ , ,rallsforlllS . In ~' hc \]) roccc diltga of tlt (' .   3O'th dtrt-nual Gin@fence of the Association J ' or Computational Linguistics  ( COLINGACL )  , pages 619623 . Morgan

Marl Johnson .  19981) . PCFG mode , Is of linguistic tree representations . Computational Linguistics , 24(4):613632 . 
Christol ) her D . Manningm M Bob Carl ) enter . 1997.
1) robal ) ilistic parsing using left > corner models . In Pro-cecdings of flu : 5th hd cr national Workshop on Parsing Technologies , 1) ages 147-158 , Massachusetts Institut , e of Technology . 
guji Matsumoto , IIozumi Tanaka , Ilideki Ilirakawa , I Iideo Miyoshi , and Hideki Yasukawa .  1983 . BUP : A1) otl ; oIn-llI)t ) arser embedded in Prolog . New Generation Computing , 1(2):145158 . 
l . obert C . Moore .  2000 . Removing left reeursion from context-flee grmnmars  . In Proceedings of 1st Annual Conference of tile North American Chapter of the Association for Computational Linguistics  , San ~' an-cisco . Morgan Kauflnann . 
Anton Nijholt .  1980 . Context-free Grammars : Co ' rots , Normal Forms , and Par , sing . Springer Verlag , Berlin . 
Fermmdo C . N . Pereira and Stuart M . Shieber .  1987 . 
P ' ~ wlofl and Natural Language Analysis . Numbexl 0 in CSL Ilx ~ eture Notes Series . Chicago University Press,

Philiples nik .  1 . 992 . l , eft-corner parsing and psychological plausibility . In The Proceedings of th (' , JlJ'tec , nth h~-t cr national Conference on Computational Linfluistics  , 
COLING-92, vohmw,1, pages 191197.
\]3 rianl / . oark and Mark Johnson .  1999 . Efficient probabilistic topdown and left-corner parsing  . In P~wcccd-ings of the 37th Annual Mcctinfl of the ACL , pages 421428 . 
Stanley J . Rosenkrantz and Philip M . Lewis II .  197) . 
Deterministic M't corner parser . In IEEE CmLfcrcnce Record of the llth Annual Symposium on Switchinq and Automata  , pages 139152 . 
Gertjan van Noord .  1997 . An efficient implenm nl ; al ; ion of the head-(: or n(!r l ) arser . Computational Linguistics , 23(3):425q 56 . 

