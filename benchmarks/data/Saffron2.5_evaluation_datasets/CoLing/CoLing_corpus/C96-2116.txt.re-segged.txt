AGENEI ~ LIZEI ) RECONSTRUCTION ALGORITH MFOREL LIPSIS

Shalom Lappin and ttsue-Hueh Shih
Department of Linguistics
School of Oriental and African Studies
University of London
Thornhaugh Street , Russell Square
London WC1HOXG , UK
shalom@semantics.soas.ac.uk , hh112@eng.cam.ac.uk

We present an algorithm which assigns interpretations to several major types of ellipsis structures through a generalized procedure of syntactic reconstrtiction  . 
Ellipsis structures are taken to be sequences of lexically realized arguments and/or adjuncts of an empty verbal head  . Reconstructions characterized as the specification of a  ( partial ) correspondence relation between the unrealized head verb of an elided clause and its argument and adjuncts on one hand  , and the head of a non-elided antecedent sentence and its arguments and adjuncts on the other  . The algorithm generates appropriate interpretations for cases of VP ellipsis  , pseudo-gapping , barellipsis ( stripping ) , and gapping . It provides a uniform computational approach to a wide range of ellipsis phenomena  , n dith as significant advantages over several other approaches to ellipsis which have recently been suggested in the computational and linguistic literature  . 
1 Introduction
Ellipsis structures pose an important problem for NLP systems designed to provide text understanding or to handle dialogue  . They contain information which is not overtly expressed  , but which must be recovered through the identification of an antecedent  . However , unlike pronominal anaphora , which is resolved by matching a pronoun with an antecedent oun phrase  , the interpretation of an ellipsis fragment ( or sequence of fragments ) generally involves mapping it ( them ) into a sentential structure by association with an antecedent clause  . It is possible to distinguish two main approaches to ellipsis resolution  . The first seeks to associate an elided construction directly with a semantic representation  , while the second mediates semantic interpretation through the reconstruction of the syntactic structure of the antecedent  . The algorithm we propose implements the second view of ellipsis  , by characterizing ellipsis resolution as the specification of a relation of  ( possibly partial ) correspondence bt ween the lexically unrealized head of an elided clause and its arguments and adjuncts as one term of the relation  , and the realized head of the antecedent clause and its arguments and adjuncts as the second term  . 
The algorithm is a generalized procedure for syntactic reconstruction which provides a unified way of handling a significant variety of ellipsis constructions  . It modifies and extends the reconstruction strategy for handling VP ellips is suggested in Lappin and McCord  ( 1990 )  . The algorithm covers VP ellipsis , illustrated in 1 , pseudo-gapping ( in 2) , bare ellipsis involving sequences of bare arguments  , adjuncts or both ( in 3) , and gapping ( in 4) . 
1. John completed his paper before he expected to.
2 . John sent the flowers to Lucy betbrehedid the chocolates  . 
3 . Bill wrote reviews : for the journal last year , and articles this year . 
4. Samt eaches in London , and Lucy in

It will be a useful component for source analysis in machine translation  , text understanding systems , and discourse interpretation systems . 
6872 The Reconstruction Algorithm
Let an ellipsis fragment be a phrase which ( i ) occurs outside of a lexieally realized sentence , and ( ii ) is interpreted as an argument or an adjunct of the head verb of a non-elided sentence  . Let s = < bl , . . . ,bk > ( 1_<k ) be a sequence of ellipsis fragments such that , for each bi~s , b~q immediately follows bi . Takes to be maximal in that there is no ellipsis fragment  , b0 or bk+1 , not contained in s , which immediately precedes or immediately follows an element of s  . 
A . Identify an antecedent sentence S for s.
B . Take the head verb of S , A , as the new interpreted head of the sentence to be constructed from s  ( we will refer to the new head as A ' )  . 
C . Consider in sequence ach argument slot
Slot ~ in the SUBCAT list of A.
1 . If there is a phrase C'ins which is of the appropriate type for filling Slot i  , then fillSlot ~ in the SUBCAT list of A ' with C ' and remove C ' from s  . Else , 2 . If Slota is filled by a phrase C , then fill Slot , in A ' with C , and list C as a new argument of A ' . Else , 3 . If Sloti is empty in the frame of A , it remains empty in the frame of A ' . 
4 . Construct a list , Arg-List , of the phrases which fill the SUBCAT list slots of 

D . Construct a list of adjunct phrases for A'as follows  . 
1. Constructhelist L of adjunct phrases in s.
a . If L4:nil , then for each element
AdjP ' of L , fill an adjunct slot for A ' with

2 . Consider each adjunct slot of A filled by a phrase AdjP  . 
a . If there is a phrase AdjP ' filling an adjunct slot of the same type in A '  , then leave AdjP ' in this slot and remove AdjP ' from s  . Else , b . Fill an adjunct slot for A ' with AdjP , and list AdjP as a new adjunct of A ' . 
3 . Construct a list , Adj-List , of all the phrases which fill adjunct slots of A ' . 
E . Generate a new syntactic structure as follows.
1 . Concatenate Arg-List and Adj-List to create a combined list  , Ph-List , of the phrasal arguments and adjuncts of A ' . 
2 . Reorder the elements of Ph-List to produce a new list  , Ord-Ph-List , in which the sequence of arguments and adjunct phrases corresponds to the order of arguments and adjuncts phrases of A  . 
3. Construct a new clause headed by A'.
4 . Substitute Ord-Ph-List for the list of arguments and adjunct phrases of A ' in the new structure  . 
3 Coverage and Implementation of the

At this point , the algorithm has been partially implemented in Prolog to apply to the output of McCord's English Slot Grammar ESG parser  ( which also runs in Prolog ) in order to generate reconstructed trees for VP ellipsis and pseudo-gapping constructions  ( ee McCord et al ( 1992 ) for a description of ESG and NLP systems which run on top of it  )  . Examples of the algorithm's output for theses cases are given in  5 and 6  . 
VP Ellipsis5 . John completed the paper before he expected to . 
Interpreted VP ellipsistree.
f-subj(n ) John(l ) noun(prop)
Otop complete (2, 1, 4) verb ( fin)
I Indet the (3) det(def )
LI . obj(n ) paper (4) noun(cn)
It v subconj before (5, 7) subconj
II subj(n ) he (6) noun(pron)
IIsc compexpect (7, 6, 8) verb ( fin)
I1 comp(inf ) preinf (8 , 6 , 9) preinftfaux comp complete (9 , 6 , 4) verb ( inf )
IIn det the ( 3 ) det ( def ) tJobj ( n ) paper ( 4 ) noun ( cn )  6 . John sent the flowers to Mary before he did the chocolates  . 
Interpreted VP ellipsistree.
\[ osubj ( n ) top n de to bj C n ) iobj ( to ) obj prep vsub conj , subjCn ) tsccomp
IndettobjCn ) tiobj ( to ) obj prep
John ( l ) noun(prop)send(2 , l , 4 , 6 ) verb ( f in ) the ( 3 ) det ( det ) flower ( 4 ) noun ( cn ) to ( 5 , 6) prep(to)
Mary (6) noun ( prop ) before (7 , 9) subconjhe (8) noun(pron)send(9 , 8 , 11 , 6 ) verb ( f in ) the ( lO ) det ( det ) chocolate ( 11 ) noun ( cn ) to ( 5 , 6) prep(to)
Mary (6) noun ( prop)
The algorithm is currently being reimplemented in Prolog to apply to the output of a modified It PSG  ( Pollard and Sag ( 1994 ) ) grammar designed to handle ellipsis . 
We are developing the grammar within the framework of Erbach's  ( 1995 ) ProFIT system for augmenting Prolog with typed feature structures  . The feature structures which the grammar currently generates tbr simple bare argument and bare adjunct ellipsis cases are illustrated by the AVM's in  7 and 8  , respectively ( cases of bare adverb ellipsis are discussed in Chao  ( 1988 ) and Kcmpson and
Gabbay (1993)).
7. John gives Mary flowers , and chocolates too.
phon!\[john , gives , mary , flowers , and , chocolates , tool&syn!loc!subcatlH&dtrs\[head_dtr\[i ) hon!!and&synHoe!head!conj!<conj&mtb cat\[\ [ QI  , O2I & eomp dtrs\[l_Ql&phon!ljohn , gives , mary , flowersl & syn\[loc\[heaul ! . I&subeat\[\[\]&dtrs\[head_dtr!phon!\[gives , mary , flowers \]& synHoelhead !_ . l&subeat\[\[_Sl&dtrslhead_dtr\[phon\[\[gives\ ]& synHoc!head!_J&vfm'm!<fin&subcat!l_S  , _Cl , II&comp_dtrs\[\[CI&phon\[\[maryl&tt 9 l < syn . loc . head . case , ace & subeattll,
II&phon!\[flowers\]&synHoe!head\[ease\[<acc & subeat!\[Il&comp_dtrs!\[S&phon!ljohnl&syn ! loe!lnead\[case\[<nom & subcatlHI  , 02 & phon!\[choeolates , oo\]& syn!loe!head\[_Tl&subeat!\[l&dt rsHte add tr!phon!\[ehocolates\]&syn\[Ioc!head\ [ Tl&so heat!ll&dtrs\[headtr!phon\[\[ chocolates l&synHoc!head!_TI&easel<ace& subcattll & eomp_dtrs!\[\[&eomp_dtrs\[\[\]& adj dtrs!phon!ltoo\]&syn\[Ioc!head!a type ! < too & slnb cat tlll  8  . Johnsings , and beautifully too . 
phon!\[john , sings , aml , beautifully , too I&s ya Hoc ! subcat\[\[l&dtrs\[headtr!l ) hon!\[and\[&synHoc\[head!cooj ! < conj&subcat!\ [_E  1  , W2\]& comp dtrs\[\[_El&phon!\[john , singsl&syn!loc!head ! , l&subcat!\[l&dtrslheaddtr!phon\[\[sings\]& syn!locHlead!_J&sobcat!\[S\]&dtrs!headtr\ [ phon!bingsl&syn\[IocHlead\[J&vform\[<fin & subeat !\[_Sl & eomp_dt  , ' s\[ll&comp_dtrs!\[S&phoo!ljohn\]&synHoc ! head ! case ! < nom & subcat ! llI  , 
W2&phml !\[ beautifully , too I&s ya!loc!hcad!Jl&subcat!ll&dtrs!head_d trIphon\[lheautifullyl&syn!loc!hcad!_Jl&sal  ) cat !\[ l &!!! dtrs . head tr . phon . \[I ) eautifully I&syn . loc . head . Jt&subcat!\[\]&dtrsHtead_dtr!phon!H& synHoc!hcad!Jl&subeat!ll&dtrs!headtr!phon \[\[\[& syn  . loe . head , ll&vform\[<elided&suhcat!\[l&eomp_dtrs!ll & comp_dtrs\[n&adjdtrs!phon!\[beautifullyl & 
I ! ! y < syo . loc . head . a type , others & subcat!\[\]& comp_dtrs!H&eompdtrs\[\ [ l&adj_dtrs\[phon!ltoo\]&synHocHlead\[a type ! < too & subeat\[\[I \] The bare NP chocolates is the head of the The generalized ellipsis reconstruction algorithm will identify gives as the head V of the antecedent clause in the first conjunct  , and then will fill one of the positions in its SUBCAT list with the local features of chocolates  . If it fills the direct object ( third complement ) position of this list with the bare NP , then it will fill the subject and indirect object positions with the local features of John and Mary  , generating the reconstructed feature structure corresponding to  9  . 
9 . \[~ p\[NpJohn\]\[vP\[v gives\]\[NP Mary\]\[NP flowers\]\]\] and\[  , , \[ Ne John \] \[ vP \[ vp \[ v gives \] [ NP Mary \] \[ NP chocolates \]\] \[ AdvP tOO \]\]\] By contrast  , heb are adverb beautifully is an adjunct daughter of a VP headed by an empty verb in  8  . This is due to the fact that in our grammar , an adverb is an adjunct which modifies a VP . The algorithm will identify sings as the head V of the antecedent clause and substitute it for the empty V in  8  . This will yield a feature structure corresponding to  10  . 
10 . \[ m\[~John\]\[ve\[vplays\]\]\] and\[n , \[NPJohn\]\[vv\[vp\[vP\[v P\[v plays\]\]\[ AdvP beautifully\]\]too\]\] 
We employ a rule which permits an unbounded number of adverbs to be generated in successively higher VP's through left recursion on the daughter VP node  . The relevant PS rule is of the form
VP ~ VP , ADV . We require this rule in order to allow for the fact that there is no apparent upper bound on the number of adverbs in a VP  .   11 indicates that it is possible to obtain an unbounded number of bare adverbial adjuncts in an ellipsis site  . 
11a . John sang , but not in New York.
b . John sang , but not in New York at the concert . 
c . Johnsang , but not in New York at the concert for three hours  . 
d . Johnsang , but not in New York at the concert for three hours on Tuesday  . 
e . Johnsang , but not in New York at the concert for three hours on Tuesday to impress his music teacher  . 
4 Comparison with Other Approaches to

Reinhart ( 1991 ) suggests a syntactic reconstruction account of bare ellipsis which adjoins an NP in the antecedent clause to an NP fragment by LF movement  . The result is a conjoined NP which , taken as a generalized quantifier , applies to the antecedent clause , interpreted as a predicate formed by lambda abstraction  . So , for example , adjunction of , flowers in the antecedent clause of 7 to the NP fragment chocolates in the ellipsis site produces the LF structure  12a   , which is interpreted as 12b . 
12 a . \[ IP'\[IPJohn gives Marytl\]\[NP\[NP flowers\]  , \[NP and\[NP chocolates\]2\]2\]\]b .   ( flowers and chocolates ) (~x\[john gives mary x \] ) Given that Reinhart's analysis relies on LF adjunction of an NP in the antecedent to an NP in the ellipsis site in order to create a generalized quantifier corresponding to a coordinate NP  , it is not clear how it can apply to bare ellipsis cases like  3  , in which a sequence of arguments and adjuncts appear in the ellipsis site  . Moreover , the analysis cannot deal with bare ellipsis cases like  8  , where a bare adjunct fragment does not correspond to any constituent in the antecedent clause  . Therefore , this account does not cover the full range of bare ellipsis cases  . As we have seen , the proposed generalized reconstruction algorithm does handle bare ellipsis structures like  8  . In cases like 3 the algorithm will substitute the head V of the antecedent for the empty verb of the elided clause  , and the bare PP adverb will modify the VP headed by this verb  . The algorithm will fill some of the complement positions in the SUBCAT list of the reconstructed V with the NP arguments in the ellipsis site  , and it will fill the remaining positions with arguments inherited from the antecedent head V  . This procedure will yield elided clause . 
Dalrympl et al .   ( 1991 ) and Shieber et al ( 1995 ) present a generalized semantic account which employs higher order-unification of property and relation variables to resolve ellipsis  . Their general strategy is to specify the interpretation f the antecedent clause as an equation between a propositional variable S and a predicate-argument structure  . The arguments of the predicate correspond to the fragments in the ellipsis site  , and ellipsis resolution consists in finding an appropriate value for the predicate variable which can apply to both the sequence of arguments in the interpretation of the antecedent clause  , and the sequence of arguments in the ellipsis site  . Given the equations in 13 a-c , higher-order unification correctly generates 13d as the interpretation of 3  . 
13 a . < a ~ , a 2>=< book reviews , last year > & < bj , b2>=<articles , this year > b . Sl- ( wrote book reviews for the journal ( during ) last year ) (bill ) c . R =) ~ x  ~ , y\[bill wrote x for the journal ( during ) Yld .   ( book reviews ) ( ) ~x\[ ( last year ) ( ) ~ y\[bill wrote x for the journal ( during ) y\] ) \] ) and ( articles ) (~ , x\[ ( this year ) 0 ~ y\[bill wrote x for the journal ( during ) y\] ) \] ) 
While the higher-order unification analysis can deal with bare ellipsis cases like  3   ( as well as VP ellipsis and pseudo-gapping )  , it is not clear how to apply it to bare ellipsis examples like  8  , where the adjunct in the ellipsiss it elacks a corresponding element in the antecedent clause  . Lappin ( 1996 ) suggests positing a tee manner adverbial function variable in the lexical semantic representation f verbs like sing  . This will permit the specification of the equations in  14a-c for 8  . Higher-order unification solves these equations to yield  14d   , the desired interpretation of 8 . 
14 a . al = fn , , , , , or & bl = beautifully b . S ~=( J,~,,~,, oXplays ))( john)c . P =) g\[(/(plays ) ( john)\]d . ) vJ\[ff(plays )) ( john )\] ff , , , ~m , , ~ r ) and ) g\[ ( J ( plays ) ) ( john ) \] ( beautifully ) In fact , this solution does not generalize to cases like 11  , which indicate that there is no upper bound on the number of antecedent less bare adjuncts which can appear in a bare ellipsis sequence  . As it is not possible to posit an unbounded number of free adjunct function variables in the semantic representation of a verb  ( VP )  , it seems that the higher-order unification analysis cannot deal with these cases  . 
The generalized reconstruction algorithm presented here does not require the presence of constituents in the antecedent corresponding to adjunct elements of the fragment sequence  . When a bare adjunct phrase AdjP does not correspond to a phrase in the antecedent clause  , AdjP is simply added to the list of adjuncts of the new head verb of the reconstructed clause  . Therefore , the algorithm produces the correct reconstructed forms for the elided clauses in ll  . 
Another problem is posed by the fact that , as higher-order unification applies to semantic interpretations of antecedents  , it will not have access to syntactic structure . 
But at least some cases of ellipsis resolution seem to require reference to this structure  . 
Consider the contrast between 15a and 15b.
15 a . The studemsent invitations to the professors yesterday  , and to each other today . 
b . ? ? The student said that John sent invitations to the professors yesterday  , and to each other today . 
The elided conjunct in 15b is ill-lbrmed because the reciprocal NP each other in the bare argument is interpreted as illicitly bound from outside of its local syntactic domain  . By contrast , the generalized reconstruction algorithm generates the full syntactic structure of the elided clause  , and so it provides the representation required to specify the contrast between  15a and 15b  . 
691 5 Conclusion
We have proposed a generalized reconstruction algorithm for ellipsis resolution  . The algorithm provides a unified computational procedure for assigning interpretations to a significant variety of ellipsis constructions  . The basic strategy which the algorithm encodes is to reconstruct an elided clause by  ( i ) taking its head verb V ' to be identical to the head verb V of an antecedent clause  ,   ( ii ) filling the argument positions in the SUBCAT list of V ' with the NP's in the ellipsis site  ,   ( iii ) inheriting NP arguments of V to fill the corresponding argument positions in the SUBCAT list of V ' which the NP's in the ellipsis site do not occupy  ,   ( iv ) applying the adjuncts in the ellipsis site to the  ( possibly successive ) VP ( ' s ) headed by V ' , and ( v ) inheriting any adjuncts modifying V as modifiers of the VP  ( ' s ) which V ' heads , when these adjuncts do not correspond to adjuncts in the ellipsis site  . The algorithm has wider empirical coverage than other current approaches which have been suggested within the computational and linguistic literature  . It can be integrated into a more comprehensive NLP system to recover missing information for purposes of text and dialogue understanding  . 
6 Acknowledgments
We are grateful to Chris Brew , Jo Calder , Claire Grover , and Suresh Manandhar for helpful comments on some of the ideas proposed here and for useful advice on implementational issues  . The research described in this paper is supported by grant 
GR/K 59576 from the Engineering and
Physical Science Research Council of the

Dalrymple , M . , S . Shieber , and F . Pereira (1991) , " Ellipsis and Higher-Order Unification " , Linguistics and Philosophy 14 , pp .  399-452 . 
Erbach , G . (1995), " ProFIT : Prolog with
Features , Inheritance and Templates ",
Proceedings of the Seventh Conference of the European Association fi  ) r Computational Linguistics ' , pp .  180-187 . 
Kempson , R . and D . Gabbay , (1993), " How
We Understand Sentences . And Fragments
Too ? " in M . Cobb(ed .), SOAS Working
Papers in Linguistics and Phonetics 3, pp.

Lappin , S . (1996), " The Interpretation of Ellipsis " in S . Lappin ( ed . ), The Handbook of Contemporary Semantic Theory,
Blackwell , Oxford , pp . 145-175.
Lappin , S . and M . McCord (1990) , " Anaphora Resolution in Slot Grammar " , Computational Linguistics 16 , pp .  197-212 . 
McCord , M ., A . Bernth , S . Lappin , and W.
Zadrozny (1992), " Natural Language
Processing within a Slot Grammar
Framework ", International Journal on
Artificial Intelligence Tools "1, pp . 229-277.
Pollard , C . and I . Sag (1994) , Head-Driven Phrase Structure Grammar , University of
Chicago Press , Chicago , IL.
Reinhart , T . (1991), " Elliptic Conjunctions -
Non-Quantificational QR " in A . Kasher ( ed . ), The Chomskyan Turn , Blackwell,
Oxford , pp . 360-384.
Shieber , S . , F . Pereira , and M . Dalrymple (1995) , Interactions of Scope and Ellipsis ' , ms . , Harvard University , AT&TBell
Laboratories , and Xerox Parc.

Chao , W . (1988), On Ellipsis , Garl and
Publishing Co ., New York.

