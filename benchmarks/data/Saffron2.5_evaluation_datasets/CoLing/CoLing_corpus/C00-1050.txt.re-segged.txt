Kana-Kanji Conversion System with Input Support
Based on Prediction
Yumi ICHIMURA , Yoshimi SAITO , Kazuhiro KIMURA and Hideki HIRAKAWA
I Iuman Interface l , aboratory
Corporate Research & Development Center , TOSttIBA Corp . 
1 , Komukai-Toshiba-cho , Saiwai-ku , Kawasaki-shi , 
Kanagawa , 212-8582 Japanyumi . ichimura@toshiba , co . jp
Abstract
We propose ~ kana-ka ' ~ ji conversion systeln with input support based on prediction  . This system is composed o\['l , wopm ' ts : prediction of succeeding ka'1~:ji charac / ; erst , rings from l , ypedl , : anaones , and ordinary k(vna-lca'l~(\]i conversion . 
It automatically shows candidates of kanji character strings which the user intends to input  . 
Ore'prediction method features : ( i ) Arbitrary positions of typed t , : an a character slarings are re-gm'de dasl , he top of words .   ( ii ) A system dictionary and a user dictionary are used  , and eadlentry in the syst cln dictionary has ( : erl , ai . nly factor calculated fl ' om the frequency of ' words in corpora  .   ( ill ) Candidates are estimated by certainty factor and ' us@l  , lness factor , and likely ones with greater\['actors than l ; hresholds are shown . The proposed system could reduce the user's key inlm t operations to  78% from the original ones in ore ' experinmnts . 
1 Introduction
TOSHIBA developed the world's first Japanese word processor in  1978  . Unlike languages based on an alphabet , Japanese uses / , housands of I canji characters of varying comp\ ] exity  . Hence , l , o arrange all of l~a'~:iichm ' a cl ; erson keyboard is ; difficult . On the other hand , kana dlarac-ters which are phonetics cripl , s of Japanese have 83 variations ; these can be arranged on key-boa '& As a result , conversion from k an a notations to kanji ones , whal , is called kana-ka , ~: ji conversion , has been used . Since Japanese is not writl , enseparately by words , segmental , ion of typed k an a characl , er strings has ambiguil , y . 
And ~ mambiguil , y in conversion exists , too ; ak an a notation may correspond l , o some different t : a , njinotations . These maket , : an a-kanji conversion challenging . 
We have made efforts l , or aise a precision of kana-ka Tt:ji conversion , thinking l , h~thigh precision can provide a better input enviromnent for the user  . At ) rccision of our kana-kanji conversion system reaches  95-98% for several kinds o\[' texts in our previous experiments  . Never the-\]ess , this approach is not ; enough in the situations where fasl ; typing is hard , e . g . , lbr beginners who m'e not familiar wil , hkeyboard or for palm-size comlmters . Thus , new method to reduce key input ; operations is needed . 
We propose a k ( vna-kanji conversion system witl l input support based on prediction  . This system is composed o\['two parts : prediction of succeeding ka'nji character strings t\]'om typed kanaones  , and ordinary hrvna-kanji conversion . 
It ; automatically shows candidates of ka'nji character strings which the user intends to input  . 
The candidates change as /; lieusc , rinputska . na characters . If no approt ) riatect loice is pre-senl ; e(t , the candidates aul ; Olnatict d\]y disappear when the ne?t kana character is entered  . Our system , l , here\['ore , can be used in the same manner as an ordinary ka ' na-kanji conversion system  , and allows the user to save time and efforts for key input without learning new key operations  . 
We have been considered two issues to generate accurate candidates :  ( i ) How Codetermine where t ; ypedk an a character strings are segmented ; since Japanese is not written separately by words  , determination of positions where words start is needed to retrieve dictionaries  . 
( ii ) How to determine when prediction candidates are presented  ; if all of retrieval results are always shown , as ysl , em cannot be convenielf l ,  . 
Surveying previous works Dora the view on above issues  , we found l , hal , the Reacl , ive Keyboard has been proposed ( Darraghel , al . , 1980) . 
It accelerates type written communication with is going to type next  . In this system , the top of typed ct ~ a racter strings is regarded as the top of words  , because English is written separately by words ; the issue of segmentation f character strings does not occur  . 
On the other hand , in previous works for Japanese , a predictive pen-based text input method has been proposed  ( Fukushim and Ya-lnada ,  1 . 996) . In this system , character strings are input by h~md-writing on LCD panel  . Since the user usually inputs not only by kana but also by t ~ anji and an alphabet  , entered character strings are segmented with the help of the wu-iety of characters  . Thus , the issue of segmentation is not considered . 
The PO Box ( Pen-Operations B used OneX-ample ) which is a text input method tbrpen-based computers has also been proposed  ( Ma-sui ,  1998) . It shows succeeding candidates from cl ~ a racter strings input by software keyboard  . 
Arbitrary positions of input character strings can be regarded as the top of words  , and retrieval results are always shown as candidates  ; the prediction ordering is based on the user's previous choice  . Since input speed by pen is not faster than that by keyboard  , time to choose candidates i shorter than that to input c  . harac-ters . Hence , even if many candidates are shown , this n ~ ethod is effective for pen-based computers  . It is , however , inefficient for ordinary keyboard . 
We propose a system with following features : ( i ) Arbitrary positions of typed kana character strings are regarded as the top of words  . 
( ii ) A system dictionary and a user dictionary are used  , aud each entry in the system dictionary has certainty factor calculated from the frequency of words in corpora  . 
( iii ) Candidates are estimated by certainty factor and useful'hess factor  ; and likely ones with greater factors than thresholds are shown  . 
These features provide an cfl3cicnt Japanese text input environment for ordinary keyboard without learning new key operations  . 
Section 2 shows an example of text input using the proposed system  . Section 3 explains an input support method based on prediction  . Section 4 shows efficiency of our system by means of experiments  . Section 5 describes conclusions . 
2 Example of Text Input
Figure 1 shows an example of text input using tile proposed system  . Suppose that tile user intends to input a sentencc  ,   ,   ,   , v , ~ , ~2-co-e ~" e$&N ~ ~~ ~- ( werc qucstyore " attendance at the following meeting  ) " , typing ha . ha/ub ~9~~~ .  ~-  ( katcino kaigi wo kaisaishi-maswnod cgos anshuu ncgaim as u  ) " . When the user types "\] ~'( ha ) " , " ~( hi ) " , and " CO(no ) " keys , the system antomatically opens a prediction menu window just below the typed char-act crs  , and shows two candidates in the menu window ( Fig . l(a )) : ( at the following address , modest . . . . ) ( al . the following address , modest . . . . ) The first candidate is high\]ighted . If the menu window contains an appropriate candidate  , the user can choose it by cursor ; otherwise the user can continuentering the next characters  . Subsequently , when "\]0 , (lea ) " key is typed , the predic . tion menu window d is N ) pears ( Fig . l(b)) . 
When " ~( i ) " and " ~"( gi ) " keys are typed , the system automatically opens a prediction menu window again  , and shows % ur new candidates ( Fig . l(e )) : ( we request your a . ttenda . ncea . t the meeting )   ( we hold the meeting )   ( we hold the meeting )   ( we hold the meeting ) Here the first one is what the user just wants ; the user enters select key , th cn the prc diction menu window disappears , and dmsen candidate is insert cd in the cditarea . If remaining t can a charact cr string wtfich was not included in the chosen cundidate xists  , l  ~ a , na-l~anji conversion starts automatically ; the first three I canac . har-acters of this sentence " ? a ~ ~ ( l ~ ahino ) " is converted to t can jinotation ' q ' ~ , co(the following ) " ( Fig . l(d )) . This is the first result of t~ana-kanji conversion  , so that the user c and ~ angeit to others . An overline of thcconversion rcsult in Fig . l(d ) shows that this result is not fixed yet . 
In above example , while 27 ~ a nad ~ a racters are needed to input in ordinary l ~ ana-t ~ anji con-I ~ Al : : l-w~~?j  U4   118   0   I0   1- l-I?o )  ~? . ~1/41/80101--i(c)NA~-:z-~~ . ? I/4I/80I0I . I-1(d )
NAH-w~f ~ 31141/8010 t-l-I
Figure 1: Example of Japanese text input using word processor with input support  . ( a ) "; ~ J '', "-~", and "03" keys are typed . (b ) " ~ ~'' ' key is typed , subsequently . ( e ) "~~''' and " s'"keys are typed , subsequently . (d ) The first candidate in ( c ) is chosen . 
version , our system can reduce the input of 21 ~: ana characters , "* L ~ b ' ~~ t ~ ~ ~ b ~ J-c0 ~"~" ~\] ube ~ 9 talo ~ ~ J- ( wo kaisaishimasu node gos ansh uune gaim as u ) " ; only 6k anacharacters are needed to input . 
3 Input Support Method Based on

In this section , an overview of the system is shown . Then dictionaries used in the system , factors for estimation of candidates , and user learning are described . 
.  .   .   .   .   .   .   .   .   .   .   . -\[ In Lut Character Stings 1
Kana-Kemji Coi ~, ' elsiot ~
Ka , ~ a-Kanji Conve , sion ' ~ l-~~ . ' ~~ ? ~ tJ_Input Prediction U it
Chomcter Sub-strings \] ~___ ~
Fdiction Candidates II " 1 Estimation u ~ tI ~ .   .   .   .   .   .   .   .   . Y - . -J-~User Leanmlg Uldt--J ( Kam-K~ji Conversion \] Adopted by Us 2 ; -"'\[ C~ida~s ) Figure 2: Diagram of the proposed system ? 3 . 1 Overv iew of the sys tem Figure 2 shows a diagram of the proposed system . It is composed of a kana-hanji conversion unit and au input prediction unit  , and the latter has following four subunits : Character Sub-strings Generation Unit  ( a ) generates character substrings obtained from segmentation of typed kana character strings  . 
Dictionary Retrieval Unit ( b ) retrieves prediction dictionaries using character substrings generated by Unit  ( a )  . 
Prediction Candidates Estimation Unit ( c ) calculates certainty factor and usefulness factor for all of retrieved results by Unit  ( b ) to estimate candidates ? User Learning Unit ( d ) extracts phrases adopted by the user , and automatically registers them into the user dictionary  . 
3.2 Prediction Dictionary
Two kinds of dictionaries are used as a prediction source :  ( i ) System Dictionary consists of high frequent phrases  . 
343  ( ii ) User Dictionary consists of phrases learned fl'om texts which the user typed before  . 
Ead~diction m'y includes words and phrases without distinction  . This is because Japanese is not written separately by words  , and high fl ' equent phrases consist of various grammatical forms  , sud~as single word or two words . And eadt entry hask an a notation ( phonetic script ) and kanjione . 
3.3 Estimation of Prediction

Two kinds of factors are used to estimate candidates :  ( i ) Certainty Factor indicates how certain a candidate is  . 
( ii ) Usefulness Factor indicates how useful a candidate is  . 
These two factors vary as the user inputs a character  . Retrieval results are sorted in order of these factors  , and only ones with greater factors than thresholds are shown as candidates  . 
3.4 Calculation of Certainty Factor
Certainty factors fox " entries in the system dictionary and the user dictionary are calculated in different manner  . 
First we make some notational conventions.
A typed k an a character string is denoted by S , which has right substrings S ; (1< i < L(S )) . 
L(x ) is the length of a string x . An entry in the dictionary is denoted by W , which has kanji notation WH and k an a notation Wy . 
3.4.1 Entry of System Dictionary
When S is typed , certainty factor fox ' W in the system dictionary is calculated as follows: 
Certainty factor(WlS ) =

Fl((Si ) '
O , when S has a right substring Si whid ~ partiMly matches with the head of Wy otherwise where F~:  ( WH ) is the frequency of W Hinkan jinotation corpus , and FK ( & ) is the fl'equency of Si in k an a notation corpus corresponding to kanjione  . 
For example , certainty factor :\[' or "~' ~~ ~ ~ ~ ~ ( ka , na-kanji conversion ) " is calculated using the frequency in Table 1: Table 1: Frequency for "\] a~ta:f~q':'~f ~" in two corresponding corpora : kanji notation corpus with  155  , 000 characters , and kanaone with 227 , 000 characters . 
Character strings Frequency in k an a notation corpus iJ  ~  6  , 720 ~ a ~191 ia ~ Y ' a : Yo ~12 , 87 \] a ' ~ a:\]o'tu 12 ,  ' , tu 77
IJ'/aIo'A~D ~ , AJIJ'76 iJ ' ~ a:io'k~15" , tulo'/u 76
Clmrac/er strings Frequency in kanji not a . tion corpus Certainty faclor(~a ' ~ . ~ f4I?J't * .  ) = 70/191 .  = 0 . 366 C crl , ai'n , ty . factor ( ia ' ~" ?~- ~ : ~ ~ Iio're : " h' )  = 70/114 = 0  . 6 14 The values of certainty factor corresponding to every character substrings are described in tim system dictionary  , and are read out at re-trieval . 
3.4.2 Entry of User Dictionary
Since t . he system cannot infer which phrases would be registered into the user dicl  , ionax'y , calculation of certainty factor \[' or an entry in the user dictionary from corpora may  10e impossible . 
Hence , when S is typed , certainty factor fox ' W in the user dictionary is calculated as follows: 
Certainty factor ( WIS ) =
O , when S has a right substring & which partially m attires with the head of Wy otherwise where N  ( Si ) is the number of entries whose k an a notations tart from Si in the user dictionary  , and c ~ is a constanto give greater factor tbr entries in tile user dictionary than that in the system dictionary  ; i . e . , tile user dictionary has priority . 
344 3 . 5 Ca lcu la t ion o f Use f idness Factor An increase in tile length of typed tca'n  , ad~m'-acter strings raises the certainty on prediction  , but lessens the usefulness . Hence , ' us@d'n , css factor is introduced in addition to certain , ty factor . When S is typed , " us@tl'ness factor for W is calculated as t bllows : 
UsefuI , n.essfactor(WlS ) =
O , when S has a right substring & which partially matches with the head of Wy otlm rwise  3  . 6 User Learning Aft , re'the user adopts prediction or t : a~ta-ha . n : ji conversion cmldidates , words wit ; ll longer length than threshold and phrases which sat  , is fygiven grammatical conditions are extracted ; these are automatic Mly registered in t , othe user dictio-nm'y . 
Por example , suppose , that the user intends ( ; () input a phrase """*'~ m cet , ing ) " , typing 1 , : a ' nachm'a cl , ers "#' v~gV-br; , o ~ ~ g-~(ko . igi'nish,'ussetcisn , ru ,)" . When "#'( ka ) " , % ~( i ) " , and " ~"( gi ) " keys ~ we typed , \[' om ' candidates are sllow u in the predict . i on metal window ( Fig . l(c )) . II cretlm predict ; ion menu window dose not cont : a in a candidate wlficll the user wants  , the , lltlm user conl ; imms enter-tug the next ; l~:a'n , a characters " k br; , v ~ ~3- , 5 (' hish'ussehis'uru , )" and l , :a'n , a , -/ , : an : jicmwersion key . As a result , bb ' ~~-~" V-br; , - o-g~3-~(l , ; a , igini , stu~ssehisuru ) " is convcrt , ed to ~ , aL , l+) , ~ , 3 - ~( attend 31; the meeting ) " . 
When this conversion candidate is adopted , two words ml ( taphrase are regist , ered into the user dictionary : ~ N ( meeting ) " ,  "/15/ , ' i ~ g-~(ag-~_~'~L , I , ))I , ~Y ~( M ; tend at , the meet-tend ) " , ~ md "-"" " ing ) " . 711"7~,(lea )", %'( i ) ", and "~"((( . It ) " keysIII't ; ') ~ are typed after this learning , " ~ q~V- , bI , u3-~ is contained in the prediction menu window . 
4: Experiment , s
Efficiency of the proposed system is shown by means of ' experilnents  . 
4.1 Evaluation Measures
Neitherst ; art keyfort n'e diction or cancel key for prediction candidates are needed  . Andst-leer , keyto ~ dopt . candidates i needed in both of t ) rediction midordinary ha . ha-ha , nit conversion ; we need not ; tn~ke into account of l ; he input of select ; key . tIence , the length of complemented hanac , haracters is just a decrease in key input ; operations . Two evaluation measures , an operation ratio and a precision , are defined as follows:

Operation , ratio = px 100 (%)

Precision , = Sx 100 ( % ) where P is the length of the original ha'ha text ;  , Q is the length of ha'hachm ' acters complemented by prediction ~ R is the number of sllown prediction menu windows contMning appropriate choices  , and Sistile number of ~ dl of shown prediction menu windows  . 
4.2 Data and Conditions
Two kind of texts , a paper on n at m ' a language processing and a let ; ter , were used in ore " ex-tm riments ; these l , exl , s were not included in the corpora used to calculate certainty factor : A system dictionary with  37  , 926 entries was used . 
Thresholds of certai'nl , ll factor mid'us@d . nessfa , ctor were 0 . 1 and 2 . q ~ he numlmr of candidates present . edin ~ predict ; ionmmm window was five or less . If ~ prediction menu window contained ml ~ l ) propri~t , e (' hoice ~ it , was ~ lw~ys adopted . 
With ~ v view to ex~mdn in 8 eacl ~ contrilm tio no \[' the system ( tict ; ionary and user learning , experiments were carried out in three cases : ( i ) Only the systeln dictionary was used . 
( it ) Only user learning was used.
( iii ) Bot ; ht\]t csyst , em dictionary mid user learning were used . 
~ Ve calculated the lengt ; h of complemented ha'ha du ~ r ~ , ct ; ers automatic Mly . An operation ratio and a precision were recorded at  ; every input of 4 , 500 l can a characters . 
4.3 II , esults
Pigm'e3 shows experimental results.
Decrease in key input operations : Using both the system dictionary and user learning  , for the paper , an operation ratio was 97 . 3-78 . 6% ( line(r3) in Fig . 3 ( a )) and a precision was 20 . 0 -26 . 7% ( line ( p3) in Fig . 3(c )); for the letter , an operation rat ; k , was 80 . 7 78 . 1% ( line(r3) in Fig . 3 ( b )) and a precision was 26 . 1--29 . 6% ( line(p3) in 95%, . -- . , 90% 85% ~'~ 65% 0 60% 55% 50% i t i t i T T t o ( ~oooooooooooo00Pal ) er ? thell Ulllber of input characters o ? 100%   95%   90%   85%   80%   75%   70%   65%   60%   55%   50%   , ' "~- -~ .  - -  .   . 
r , riiii ( b ) Letter the nttm ber of input chracters .   .   .   . (rl ) SystemDicti0naO " .   .   .   .   .   .   .   ( r2 ) User Learning -- ( r3 ) System Dictionary +
Uset Learning 50%   45%   t0%  "--"  35%   30%   0   25%  "~  20%   10%   5%   f--2__t=--_==~   ,  / 50% 45% 40% /- -" 35% 30%  , ~ 25%
G '2"~205';' . I ) t 15% 10% 5% -- .   .   .   .   .  - " _ :  .  -  .   .   .   .   .   . 
0% trr ,  ~ ~  , r0% ,  ~  ,  ~  , r ,   , e3~~3 ou ~ ~ v5o ~ 3oe5ov5 oo~c , e5cD"*~"?21~~~q~~~~~~+ . ; ~ +~, ,-,  . +  . t ( c ) l ? ~ q ) er " the mtmber of ( d ) Letter " the munber of input characters input characters  .   .   .   . ( pI ) System Dictionary .   .   .   .   .   .   .   ( p2 ) User Learning -- ( p3 ) System Dictionary +
User Learning
Pigure 3: Experimental Results . ( a . ) Operation ratio for the paper . (b ) Operation ratio for the letter . 
( c ) Precision for the paper . ( d ) Precision for the letter . 
Fig . 3(d )) . When 45 , 000 ka ~ a characters were typed , an average of the operation ratio was 78% , that is , a 22% decrease in the original operations was obtained ; an average of the precision was 25~) ~ , that is , a quarter of shown prediction menn windows contained appropriate choices  . This precision was enough to realize comfortable operations  . 
Contribution of the system dictionary : Using only the system dictionary  , for the paper , an operation ratio was 97 . 6-96 . 6% ( line(rl ) in Pig . 3(a )), that is , a 2 . 4-3 . 4% decrease in the original operations was obtained  ; for the letter , an operation ratio was 90 . 6-78 . 8% ( line(rl ) in Pig . 3(b )), that is , a 9 . 4-21 . . 2% decrease in the original operations was obtained . As a result , the system dictionary is effective for a text like a letter with idioms or common phrases  , because phrases . Furthermore , e omt ) are dat ) recisious-ing both the system diction m'y and user lewcning wi /  ; h that using only user learning , the \[' or lner was worst for the paper ( lines ( t ) 2 ) and ( p3 ) in Fig . at e)(d )) . As a result , for some kind of texts , the system dictionary not only is ineffective but also reduces a prec  . ision . 
Contribution of user learning : User learning had an effect tbvan operation ratio aI'te  . v more than 9 , 000 ka'nachm ' acters were typed ( lines ( r2 ) in Fig . (a ) ( b )) . In fact , if the user types about ten pages of texts , a 1520% decrease in the original ot ) erations can be obtained . 
5 Conclusions
We proposed al ~ ana-ka'nji ( : on version system with inputs ut ) portbased ( m prediction . Ore ' system that ures : ( i ) It ; shows prediction cml did~tes of 1 , : a'@i character strings which the 11sevint , ends to input without any special key operation . I\['noapt)ro-priate choice is presented , the candidates disappear automatically when the next l  , : a'na character is entered . 
( it ) Arbit ; rary positions o\['typedl:anacJlavacterstri llgS are reg ~ w  ( le ( t as the top of words . 
( iii ) A system dietio1~avy and a user dictionary ave used , and each entry in the system ( tic Lio-nary has certainty factor calculated : from the frequency of words in corpora  . 
( iv ) Candidates ave estimated by certainty factor and use  . fill . hess factor , and likely ones with greater\['actors than thresholds rare shown  . 
( v ) ~ Zords and phrases are extracted \[' reintyped texts  , and registered into the user dictionary automatically  . 
The proposed system could reduce the . user's key input operations to 78% h'om the original ones in the experiments using two kinds of texts  . This system was built into the TOSIIIBA Japanese word processor  , the JW-8020 , which was released in autumn 1 . 998 ( Fig . 4) . 
To raise a precision by field information and context of texts is our lhtm'ework  . 
Figm'e 4 . : TOSHIBA Japanese word processor , the JW-8020 . where the proposed systen l was built . 
Profet , a new generation of word prediction : '\ neva . luation study . ill Proceedings of I , h , eACLWo'rt , ; shop on Natu , ra , lLanguage Proccss in 9 fin , Co'm , munication Aids , pages 2328 , July . 
John J . Darragh , Ian H . Witten , and Ma . rkL . Ja . mes . 
1980 . There active keyboa . rd : A predictive typing aid . IEEE Corn . purer , 23(11):41-49, November . 
Toshikazu Fukushinma . nd Hiroshi " ~ amada .  1996 . A predictive pen-based ja . pa . nese text input method and its ( , valuation ( in japanese) . Journal of \[' Jhlbr -" m . atio ' n Processing Socie * y of , Japan , , 37(1):23 30 . 
Nestor Garay-Vitoria . and . lulio G . A bas (- al .  1997 . 
\? ord prediction for inflected languages , a . pplica-lionto basquela . nguage . In Prtmcedi . nfls of the ACL Worl , : sh . op on Natural Lan : f~m , . qe Proeess in : l for Co'm , 'm , u ' nication Aids , pages ') 935 , July . 
Toshiyuki Masui .  1998 . An efficient text input n lelhod for pen-based computers  . In Proceed-i'ngs of lh . cACM Conference on Hum , an Factors in Comgrttli'ng Systcm , s(CHI'98) , pages 328-335 . 
.:\ddison-\?esley , April.
Masa . ka . l . su Sugimoto .  1997 . Input scheme for ja . panese text with shk key card ( in japa . nese ) . In \[ PSJ S\[GMBL Report No . l , pages 16, May . 
References
Alice Ca . rlberger , Joh ~ mC ~ rlberger , Timt Ma . gnu-son , Sira , E . Palazuelos-Cagigas , M . Sha . ron Hun-nicutt , and Santiago Aguilera Naya . rro .  1997 . 

