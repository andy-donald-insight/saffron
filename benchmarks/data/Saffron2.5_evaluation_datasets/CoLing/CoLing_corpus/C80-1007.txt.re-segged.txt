A CONTEXT-FREEGRAM MAR OF FRENCH*
Morris Salkoff
Universit & de Paris 7, L.A.D.L.
2 Place Jussieu , Paris 5, FRANCE
Summarx . I present here a method that allows one to construct a CF grammar of a natural language that correctly accounts for verbal selection rules  . This goes contrary to the prevailing opinion , following Chomsky 5 , that such a construction is impossible . My method consists essentially in separating the semantic function of a selection rule  , namely , the exclusion of certain noun subclasses , from the syntactic relation between the elements ( verb , subject , object :) linked by this relation of selection . When the verb and object ( subject ) are separated by intervening levels of complement construction  , the selection can still be satisfied by a double classification of verbs : according to the kind of subject they take  , and also according to the type of verb that can follow them  ( in the complement construction )  . 
Conjunctions and sentences with respectively can also be treated within the framework of the 
CF approximation proposed here.
like the latter , is recursively extendable to ? O . Introduction sentences of theoretically unbounded length  . 
It is now quite generally supposed that a natural language cannot be adequately described by a CF grammar  . This opinion was first advanced by Chomsky 5 who discussed this problem from the point of view of phrase structure grammars  . He presents the reafragment of a CF phrase structure grammar in terms of noun phrases NP  , verb phrases , VP , etc . , which are familiar from immediate constituent analysis  . These rules cannot treat verbal selection rules properly  ; Chomsky ~( ch .  8 ) had already tried himself to correct this defect within the framework of a CF phrase structure grammar  , but the difficulties heen countered seem to have persuaded him that only a transformational grammar could handle such a problem  . 
Harman 13 proposed another solution to the problem of treating verbal selection rules in a CF grammar  ; head ded a set of subscripts to the CF rules used in Chomsky  5  , which were chosen so that only those subjects and objects which satisfied the selection rules could appear with a given type of verb  . Chomsky 8 showed that this method would not suffice if the sentences subscripted as Harman had suggested were themselves embedded in complement constructions  . Thus , where Harman's system will not generate such ab -errant sentences as * Bill elapsed  , it will not be able to exclude the generation of such a sequence when it is embedded in a complement construction  , as in * John persuaded Bill to elapse . 
Further arguments for the inadequacy of a CF grammar were adduced from the fact that sentences containing respectively cannot be assign-ed an appropriate structure in the framework of a CF grammar  . This was noted by Chomsky 5 (?4 . 2 ) in his discussion of the algebraic language ww ; the relation between this language and sentences containing respectively was discussed by Bar -Hillel & Shamir I  , and then taken up again by Chomsky 8 together with examples taken from the comparative construction in English  . Later , Pos-tal 22 exhibited a construction in Mohawk which is similar to the one with respectively  , and As a result of these considerations , Chomsky 8 concluded that a coherent description of recursively embedded sentences or of verbal sel -ection rules could not be obtained in a natural way by any CF grammar  , and that consequently no CF grammar could adequately describe a natural language  . However , it turns out that this question is not so easily disposed of as it would appear  , and recent work by Joshi & Levy 18 shows that a CS grammar containing rich context -depen-dent rules can be used to analyze trees that describe a CF language  . They did this by an extension of a theorem of Peters & Ritchie  21   , who showed that CS rules of a certain type can be used not to generate sentences  , i . e . , not to characterize them , but only to verify their wellformedness , by applying the context-depen-dent parts of these rules as constraints on the set of trees that schematize these sentences  . In this case , the language described by these trees is a CF language  . 
Joshi & Levy generalized the kinds of CS rules that can be used for this result and defined CS rules that can describe conditions on the context whose action is close to that of certain transformations  . These rules are expres-sed as Boolean combinations of predicates that describe the left and/or right context of a node  , or the upper and/or lower contexts ( the nodes above and below a given node )  . Roughly speaking , a tree is said to be analyzable with respect to a grammar containing such rules if one of the rules is satisfied at each node of the tree  . In that case , the language which consists of the terminal strings of all the trees analyzed by the grammar is a CF language  , even though the rules take the context into account ~  . 
Hence these terminal strings can be described by ? Note that the formalism used by Joshi & Levy for displaying conditions on trees is close to the notation used for rewrite rules  , and can lead to some confusion , lit need only be remembered that these context -dependent rules are not used to generate structures  . 
38 some CF language.
Now the string grammar proposed by Harris 15 and which analyzes English ( Sager 23 ) and French ( Salk of f2 ~' 25 ) can be shown to be of just the form described by Joshi & Levy  . It contains CS rules of the type described by them  , and is used to analyze a tree , rather than to generate it . 
It would thus appear that English or French can be described by some CF language  , although the string grammar gives no clear clue as to what its form would be  . Is hall show here that such a CF grammar can be written for French  , and that it can treat , in a linguistically appropriate fashion , the problem of the expression of verbal selection rules in nested complement construct-ions  . I have chosen French because systematic data giving a wide coverage of the French lexicon are available  ( Gross 12 , Boons et al3); however , the very nature of this construction makes quite plausible its extension to other natural languages  . Only the method used will be outlined in this brief article  , and an example of its application to embedded complement constructions  ; for more details , consult Salk off25 ( chap .  3 ) In ow construct CF rules that correctly describe sentences in which related pairs like verb -subject  , verb-object , etc . , that are linked by a relation of selection , may be separated by constructions of unbounded length  . Each such CF rule is the expansion of a sentence schema S  . 
The verbal selection rules are accounted for in this method by separating the semantic function of a selection rule  , namely , the exclusion of certain noun subclasses , from the syntactic relation between the pairs carrying this function  ( generally , a verb and a noun phrase ) . Each sel-ection rule is decomposed into two independent parts : one part is the choice of a noun not cla-ssified in certain noun subclasses  , in such a way as to express the semantics of that selection rule  ; the second part is the use of the noun phrase containing this N for the subject or object of a given verb in ~ rule schema  , which amounts to satisfying the complete verbal selection rule  . 
Conjunctional sequences , including sentences containing respectivement can be handled by this method  , but not within the strict mathematical framework of a CF language  . The resulting CF grammar of French can be compared with a tra-nsformational grammar  , and it is seen that the two are more similar than has been thought  . 
?. The base rules
In order to set forth the selection rules as clearly as possible  , I shall begin by using in the rules developing S , noun phrases bearing three subscripts , i . e . , complex symbols : ( I ) NP ; where x is a function F : sub-x , y , zjects , object ~ , or i ~ direct objectio ; y is the morphology M:singular , plural ,  . . . ; and z is a semantic su~-class S ~ these sets have no elements in common  . 
With this notation , typical rules for S will have the following form :   ( 2 ) aS ? NP tV . NPs ~ y , zio , y , zbS + NP tV . PNP . 
s , y  ~ zJio , y , zcS+NPs , y , ztVkNPo , y ~ zP NP io , y , z , etc . 
The verb is subscripted according to the complements it takes  . 
In this notation , the CF rules no longer constitute a strict constituent grammar of the type discussed by Chomsky  5'8  . My notation brings out the grammatical relations between the elem-ents of the sentence schemata  , which is not pos-sible ? in a direct way in a phrase structure gra-mmar  . The complex symbols are useful in order to explain clearly the process of sentence embedding  ; they will be eliminated in a second step and replaced by the noun phrases without subscripts used in the verbal selection rules  . 
Main rule schema.
For clarity , I shall use only the subscript F(s , o , orio ) in the rules for S . Only an abbreviated list of these rules can be given here  ; for a complete list , cf . Salkoff 25 . A first subgroup of rules contains non-sential objects :  ( 3 ) S~NP tV1 ( Maxdort ) 

S ? NP t V2 NP ( Maxsign eletrait S)
S0
S ? NP st V3 PiNPio(Paul d@pend de Max)
S+NP t V~NP P . NP . ( Paul bases a
SO 1i Oth ~ orie surce 8 fait 8); etc.
There are about ten such rules in French . A second group of rules contain a sentential complement clause : S+NP t  V20 queS ( Max sait que Paul as fait cela )   ; ? NPst V22 NP?que S ( J ' ~ n forme Maxque Paulestvenu ) A third group of rules yield embedded sent-ences . One example will be treated here , as it occurs in independent sentences and in relative clauses  , to illustrate the method . 
(4) a S+NPtV 30 S1 ( Max convain c ...

S1+NP de Vl . . . Paulded or mir ) 0 S * NP de V2 NP .   . Pauld'otercela )   0 S 0 The new notation oNPs denotes a noun phrase having a double function F : it must be an accept - ? To do so  , one has , for example , to reinterpret the tree structure of the sentence  ( cfo

39 able object of the verb V30 which precedes ? , and also an acceptable subject of the main verb of SI  . The sentence schema for S 1 is a sentence de-formation ( in Harris '17 terminology )  ; there are about ten such deformations in French . Another one is the following : ( 5 ) S+NPtV 32S 3 ( Maxapprend . . . 

S3? ~ . NP ~ V1 . . . ? Paul ~ dormir ) 1os . . . etc . 
Each such schema Si contains as many rules as S itself  . 
With the schemata Sl , I can account for the recursive embedding of sentences  , like Luccon-vain cPauld ' apprendre ? Max ~ dire aux dl ~ vesque  . . . ; other schemata are needed to account for sentence embedding in relat ive clauses :  ( 6 ) a NP r l ? NP que NP t V 30 SI ( l ' homneoss proque Max convain c . . . 
bS1 ? o(t)s de V1 . . de dormir ) pro ? o(O ) s de V 2 NP ? .   . d ' oterce la ) .   .   . etc . 
Here , the symbolo ( @ ) s is a dummy element standing for the noun phrase , carrying the same subscripts , at the head of NP rl . It is marked by the same selectional features as oNPs and will be used to ' transmit'thisse lection through embedded sentences  . Such dummy elements come close to certain pronouns found in relative clauses without antecedent  , like cein : J'aiachet $ ceque Maxasculpt@ . 
A second type of relative clause is this : ( 7 ) NP r2?NP queS ( lelivre que . . . 
opro
Spr ? ? NP st V2(~)o . . . Paullit ) + NPst VL ~( ~) o PNP io . Paul fair de .   .   . ces articles ) ? NP st V30 SI'I . . Max convainc . . . pro
SI'I?NP de V2(0) o . . Paul de pro o s lire ) ? NP de V 4 (@) o P NP . 
0 Si O . . Paul de faire de tee articles ) ? NPst V32 S3"I . . Max apprend . . . proS3 . 1 + d?NP dV2 (~) o "" ~ Paul proios ? .   . ~ life ) . etc . 
With these rules , it is possible to describe recursively embedded sentences inside relative clauses  , although the complex symbols give us no ? Sentences like Maxemp $ chequela tablene to mbe ? Maxemp $ chelatable detomber  , in which the raised object ( table ) does not have to be compatible with the verb emp @ oher  , are accounted for by different rules ? indicat ion yet as to how the verbal selection rules are to be satisfied  . 
?2. Selection Rules
According to the kind of noun allowed as subject  , or as direct or indirect object , a verb is said to select for that subclass ? The majority of the selection rules thus concern the following three rules for S :  ( 8 ) aS ? NP st V2 NP ? ( Lucporte unchapeau ) bS+NP tV3P . NP , ( Maxd~pend de Luc)S1i OcS?NPt V4N PP . NP , ( Max attribue
SO ii Olam ~ dailled S~c)
The selection rules vary with the preposition Pi for verbs V  3 and V ~ . In the sentence analyzer based on the string grammar  , these selection rules are contained in a system of contextual rules attached to each lexical entry for a verb that can appear in  ( 8 ) ? Experience shows that five noun subclasses are needed for such a system of selection rules : N t  , ' time '; Ns , sentential ; Nh , ' human '; Nc , concrete ; and N nom , nominalizations . These subclasses are used in the verbal entries to indicate the unacceptable contexts for a verb classified in  V2  , V3 , or V  ~ . 
The analyzer then uses these contextual rules to d is allow an unacceptable decomposition in a sentence analysis  . 
These contextual rules can be replaced by
CF rules in the following way . Let (9) N\N . + N .  +  . . . = N"i \] denote any noun except one belonging to subclass N i  , or to N ~ , etc . ; the bar\means'min-us' . If N " is substituted for the noun N in any NP , and carried over into every rule developing NP , the terminal rule for the noun in NP will be ( \]0 ) N "? Nd , where N d is a lexical entry . 
Each choice for N discompared with the list of subclasses Ni  , N . ,  . . . , attached to N ' . If Nd belongs to any ~ f these subclasses , it is discarded ; if Nd doesn't belong to these sub-class-es the conditions expressed in  ( 9 ) are satisfied . 
Now , if the selection rule of a given verb is that subclasses N  . , N ~ ,   , are unacceptable as id "'" subject ( object ) , then the noun phrase containing Nd satisfies that selection rule  , and will be the only noun phrase permitted in that syntactic position  . 
In owdefine noun phrases GN containing all the combinations of excluded noun classes from the five named above  ( there are 31 such GN ) :  ( l ) aGN+N , if no subclasses are excluded ; bGNi ? N\N t ; GN2 ? N\Ns ;   . . .  ;
GN5 ? N\N nom ; cGNi , 2 ? N\N t+Ns ; GNi , 3 ? N\Nt + N h ? . . GNI,5 + N\N t + Nnom ;

Inserting the noun phrases GN~into (8) , and replacing the subscripts i an ~ J \]_' by the single subscript ~  , I obtain the following rule schema-ta : ( 12 ) S ? ( GNj ) stVj , j , ( GNj , )?; I_<j , j '_<31S ?( GNj)stV . ,j , ,j Pi ( GNj , ,)io I~j , j "_<31S ?( GNj ) stVj , m(GNj , ) ? Pi ( GNj " ) io1_<ms ( j ' x j " x k ) The subscripts are not independent ; in general , a verb accepts a certain GNj , ( GN: , ,) only for ? . ? J . certain values of GNj . This is captured in the double verb classification : V ~ ~  , ( Vj , ~ , , ) is that verb subclass which requires J'JGNiJ for subject  , when the direct ( indirect ) object is GNi , ( GNi ) . Lexicographl cal work shows that there are ' about 40 different prepositions appearing in the objects P N and NPN  . Since the double verb classification must be carried out for each value of Pi ' this amounts to a triple classification of verbs  . 
?3. Elimination of the complex symbols
The schema ( 12 ) generates only acceptable sentences ; each verb in the lexicon is classifi-ed according to which of the subclasses defined by  ( 12 ) it belongs to ; hencen over b willever appear in a schema of type  ( 12 ) unless it is acceptable there . Then , since the process defined by ( I0 ) is such that only acceptable nouns can be chosen for the noun phrases GN  ( = N ' ) in these schemata , each schema must in fact give rise to an acceptable sentence ? The situation is quite different  , however , for the rules containing o NPs , NP oor NP io . 
These cannot be developed as written , for two reasons : ( 1 ) only noun phrases of the type N " are available , so that verbal selection rules can be satisfied ;   ( 2 ) the syntactic functions expressed by the subscripts on these noun phrases can be obtained only by a subclassification of the verbs appearing with them  . Thus , in order for oNPs ( in 4 ) to be an acceptable object of the verb Va that precedes  , and also an acceptable subject for the verb Vb of the embedded sentence containing it  , the verb Vb must be subclassified according to type of subject  , and Va has to be subclassified according to the type of Vb that may follow  . 
An even more complex classification is needed to handle relative clauses like  ( 7 )  , which begin with NPo . This noun phrase must be an acc-eptable object for the last verb  , say Vc , in the S which follows ; however , S can contain an proproun bounded number of embedded verbs before Vc appears  . Hence , Vc is not known at the moment when the lexical entry is chosen for the N " which re-presents NP o  . The problem , then , is to ' transmit ' the selectional characteristics of the noun in NPo to the rule that will later develop V e  , by using the embedded verbs as carriers for the selectional information ? This transmission of sel-ectional information necessitates a sub -classi-fication both of embedded verbs and of the schemata of the type Spro "  ?31 Elimination of oNPs I subdivide the sets S\]S 2  , S3 ,   . . . ( cf . 4 and 5) into S~subsets , where i runs through the 31 possible values of the subject N " ( which replaces oNPs )  . These subsets then constitute a classification of the schemata SI  ,   . . , according to the type of subject the verb of the schema :  ( 13 ) S ~? N\]?N\]?N\]?N\]
I subdivide the same way : (14) S1 pro , lde V1 de V2N Pode V30 S . 1 idev 31 s2 . 
J sets S1 pro that is acceptable for
S~?N~de VI?N~de V2N Po . . . etc.
sit ? N ~ idevl (6b ) , S2 in the +(~) Ide V\] , where ~ I is a dummy carrying these lec-? ( 4 ) IdeV 2N Potional features of N ~ ; ?(~) 1'd~V3os~pro , j ? etc . 
This new way of ordering the rules is the basis for the subclassification of verbs  V30  , which take the object SI . A verb V30 accepts only the subsets S ~ whose subject N ~ is an acceptable object for l that verb ? This is a selection rule between verbs : the verb  V30 selects an object having a verb of a certain type t  . 
The generation of reeursively embedded sentences which satisfy verbal selection rules is now obtained as follows  . First , let us choose a rule developing the matrix sentence  , for example (15) N\]tV30S ~

Now the verbs in the subclass V30 have been subclassified in the lexicon according to the type of acceptable subject  , N i , and also according to the type of acceptable complement S ~  . By choosing in (15) a verb in the subclass ( Nj , Si ) , I obtain an acceptable sentence . 
% The selection between verbs mentioned here has already been suggested by Z  . Harris 16 in the framework of a system of sentence generation ba-sed on the concept of the verb as an operator acting on its arguments  ( approximately , its subject and object ) ? Selection between verbs was also used by M . Gross I0 in order to account for constructions like Je coul~s mangerung ~ teau  , ? ? Jeco~2~sd ~ tester Max ; here , the first verb ( of movement ) selects for the type of verb that can follow it . 
411 Next , Si is developed , using the schema (13) , by one of twotynes of rules : ( 16 ) aS~l+N\]zdeV31S ~ ; bS~l?N~de V2 NPo If rule a is chosen , another sentence is embedded , and a verb V31 in the subclass ( N\[ , S\]) is chosen from the lexicon . But if rule b is chosen sentence embedding terminates with that rule  . 
The same method can be used for generating acceptable relative clauses NP rl  ( in 6 )  . As an example , I rewrite one of the NP rlin terms of the noun phrases N':  ( 17 ) a NP rl?N ~ que N\]t V30 Slpro , ibS ~ ro , i ? ( @ ) ideV1 i ) By choosing a verb V30 in the subclass ( N\] , Sp , i . e . , one taking N ' . . as its subject and as second verb ( in S ! ro ) Jone whose subject is N\[ , I guarantee that the Niina is both an acceptable object of  V30 and an acceptable subject of the verb in S1 pro ?32 Elimination of N_P_o The development sketched in ?31 will not do for relative clauses like NP r2   ( in 7 )  , which have the form NPoque Spro . This can be schematized roughly as NPo que . ? Vi .   .   .   . V ~ V c , where V i , V j , . . are embedded verbs o ~ the type V30, V31, . . . , and V c is the last verb of ' qpro ' the one for which NPo must be an acceptable ob-ject  . 
In order to transmit the selectional characteristics of NPo to the rule that develops Vc  , and this within the framework of a CF grammar , I can proceed as follows . I subscript Sproin (7) by k , which is also the subscript on the noun phrase N ~ that replaces NPo  ( just as SI , S2 ,   . . . .
were subscripted for the type of subject ) ; then the schema SI ~ for embedded sentences will have two subscripts : one for ~  , and a second one for the type of subject the verb takes  . This yields the following kind of development : ( 18 ) NP r2?'N ~ queSpro , k
Spro , k?N~tV2 ( ~ ) k + N~t V 4 ( ~ ) kPnNPio+N~t V~0sl'l , k pro , 131 N~t V 30 pro , 2 ? sl . l , ksche-<mata\[Sl'l'k?N~tV 30 pro , 31 s 2 . l , k ? N\[t V 31 pro , l-~N : tV31S2"l , klpro , 2s 2 . l , k ? N . ~tV 31 pro , 31 sl . l ( @ ) kpro:~?N\]de V2 ? N\] de V 4 ( ~ ) kPnNPio?N\]deV30 SI . i , ~ pro , 3 ? Nidev 31 s2"l , , k pro , j (31 times , as above , once each for the subjects N ~ . . . . . Nil ) The typical rule for NP r2 is the following : sl . l , k (19) NP r2~N ~@ u e N ~ t V 30 pro , j Once more , acceptability is guaranteed by choosing a verb V30 in the subclass ( N  ~ , S\]) . Next , the symbol SI . i , I ~ representing a possibly em -" pro , j ' bedded sentence , can be developed by the rules : ? s3 . l , k(20) as l'l'k pro , J ? N : j de V 32 pro , j ' bSI'I ,  . k ? N : de V2(~) k pro , jj If rule b is chosen , sentence embedding term in-ates ; then , choosing a V 2 in the subclass taking an object of type N ~ ( as indicated by@k ) guarantees that N ~ in ( 18 ) is an acceptable object for that V2 . If-rulea is chosen , sentence embedding continues ; a verb V32 is chosen , in the subclass ( hi , S\] , ) , until a rule of type_b is chosen . 
The reader will notice two features of this method of using the selection rules to generate relative clauses ?  ( I ) The subdivision of SI into a set of S~rule schemata does not increase the number of rules in S  . The same number of rules would be obtained by inserting the noun phrases Nk into S  ( or SI )  , and this must be done in any case in order to express the verbal selection rules  ( in whatever fashion ) ? In the decompositions of SI ,  . . . , used above , the point was only to present the original schemata so as to make the subject or object of the verb in the schema stand out  , for further reference . 
(2 ) The two kinds of selection made explicit in these schemata  , the one between verbs , and the other ( better known ) between verb and object ( or subject )  , appear only once in the grammar . Both types of selection are used in each step of sentence embedding  , but in no case does this entail rewriting the two kinds of selection in the grammar each time a deeper level of embedding is attained  . 
?4. Conjunction ; respectively
It has been shown by Chomsky 5 that conjunctions can be described in a CF grammar only by using an infinite number of rules  , represented by rule schemata ; if one restricts oneself to strict CF grammar , one introduces an excessive structu-ring of the conjoined forms ? An approximate sol--ution can nevertheless be given to this problem  , in the framework of a finite CF grammar , in the following way . I construct a sequence of conjoin-ed noun phrases  :   ( 21 ) aGN1+N " ; bGN2 ? N " et N " ; cGN3 ? N " et N " et N " dGNI ? N " et N " . . . et N " ( ! times ) k 42 i Denoting by G cf the CF grammar containing the rules GNi  , GNi-I ,   . . . , GNI , Ican . setup the series of grammars G~f , G 2 lcf '"''' G cf ' each representing a better approximation to the infinite G~f  , which contains a noun phrase of un-grammar bounded clength  . 
For any practical purpose , such as generation ( or analysSs ) of sentences , it is clear i that one of the Gcf will be large enough to yie-ld the desired precision  . However , another app-roximation is available which is less costly  , from the viewpoint of the number of rules requi -red  , and which yields the same result for G~f . 
This is the rule schema proposed by Chomsky & Sch5tzenberger   9 for handling conjunction in a CF grammar . For the case of noun phrase conjunction , this schema is as follows : (22) aGN?N ' ; bGN+N " ( etN' ) * The star indicates that the group ( etN' ) can be iterated as many times as is necessary . This schema is therefore an abbreviation for an infinite number of rules  . 
With such a rule schema in it , my grammar is no longer strictly CF ; however , it is clearly f~ithful to the spirit of the approximation for l outlined above  , since the language described Gcf by my grammar is the same as that reached asymptotically by the series of grammars G~f  , 2Gcf ,  . ., G~f obtained with (21) . The rule schema ( 22 ) can be compared to an alggrithm for generating anylby choosing the number one of the grammars G cf of iterations  . 
There exists a set of structures in natural language which cannot be described by the methods developed until now  , namely those containing either respectivement , or the distributives quiorsel on que : ( 23 ) a Lesrats des group esAet Br Suss is sentet $ chouent dansles labyr in the sLaet 
Lb , respectivement.
bLes report eursont parlequiaux minis-tres , quiaux d~l$gu~s , quiaux d~put  ~ a . 
cSel on quetues pauvre , bourgeo is ou aristocrate , tuser as ouvrier , commer-gantou patron . 
Although these strings cannot be generated by a CF grammar ?  , a procedure is nevertheless avail-?--The applicability-~f this argument to the linguistic case is not quite as simple as this brief formulation of the argument might lead one to suppose  , in the way it is generally used in discussing sentences with respectivement  . It is only the language containing just the sentences  ( 23 )  , and only those , that cannot be generated by a CF grammar . However , in order for this conclusion to apply to the generation of the entire French language by a CF grammar  , it must be shown that there exists no sublanguage of French containing these sentences in respectivement as a subset that can be generated by a CF grammar  . 
Cf . Gross II (?8.1) for this argument.
able for including this type of sentence in the CF approximation under discussion here  . 
I add Kleene rules to the grammar , and a condition on these rules , as follows: ( 24 ) aNs ( etNs ) * V No ( et No ) * bNs ( etN ) * V ( et V ) * N ( et No ) * so These rules contain all common conjunctions of subject  , verbs and direct object . Moreover , they cover the sequences of classes observed in sentences containing respectivement  . They don't have the structure one would like to associate with such sentences  . In order to describe the respec-tivement sentences  , I add the following condition to the starred parentheses : the number of iterations of each occurrence of the star is the same  ; and a structure , or rule of interpretation , is imposed on the starred groups , as follows : 1I , No ( et INo) ,   ( 25 ) Ns ( etNs ) * V ( et V ) This grouping pairs the Ns and the No that are to be associated with each other via respectivement  ; (25) is equivalent to : (26) N1 et N2 . . V 1 et V 2 . . N 1 et N 2
SS00
Thus , I am interpreting ( 25 ) as a sentence conjunction : N 1V   1N   1  ~  ~2   ~2   M2 ~ requir-O~L~Sv ~0 ~""" ~ ased by the adverb respeetivement . 
?5. Conclusions
The methods I have sketched here cancerta-inly be applied to other natural languages and will account in a natural way for the general phenomena of verbal selection rules in embedded sentences  . One may wonder why this work has not been carried out before  . 
Historically , attacks against the adequacy of CF grammar for describing natural language arose at a moment when it was necessary to explore the nature of the transformational grammar just proposed  . This new style of grammar seemed so much better adapted than CF phrase structure grammars to explaining sentence relations that any more effort towards developing a detailed CF grammar seemed fruitless  . To discourage such efforts , Chomsky5 ( chap .  5 ) declared that " any gra-mmar that can be constructed in terms of this theory \[ CF phrase structure grammar \] will be extremely complex  , adhoc and ' unrevealing '" . These remarks were reaffirmed ( Chomsky 8 ) and bolstered by an argumentation based on the inherent in adequacy of CF grammar for describing verbal selection rules  . 
A second criticism arose from the analysis of constructions  , like respectivement , whose description could not be obtained within the strict framework of a CF grammar  . We have seen above that such a statement is at best unclear  . It may be correct that a mathematically rigorous descr-iption of this construction is not possible in a  43   . . . 
strict CF grammar ; even so , we are undernoobligation to transfer this observation bodily to the domain of linguistics  . The type of description that I elaborated above , in which a rule of interpretation is added to a rule generating the form of sentences containing respectivement  , is now used in recent work in generative semantics  . 
Moreover , it can be seen that the CF gramm-arpresented here is but a short step removed from a transformational grammar  . In all transformational theories , a transformation includes ( among other things ) a relation between sentences . Most authors also include operations that deform one sentence into another  , or which modify an abstract structure so as to derive sentences from it  . The CF grammar I have proposed contains the information that establishes relationships between sentences  , but it does not contain the operations or the metalinguistic assertions that make the transformation explicit  . By a small extension of the CF framework I can also obtain the equivalent of a transformation  , as follows . As an example , I consider the passive transformation . 
The passive transformation consists in matching an active phrase with its passive counterpart  . The statement of the transformation can stop there  , as does Harris'I ~ , or one can add the specification of the computer operations needed to create the active and passive trees  , as in generative grammar . In the CF grammar presented here , I have two independent rules , one for the active form , and another for the passive of the first : ( 27 ) a Sact ? NPst V 2 NP obSpas?NPot~tre V2~   ( par NPs ) Each of these rules has an independent set of selection rules that are expressed in the choice of the N " for the NP  . Adding these selection rules , (27) becomes : (28) a Sact ~ NP st V2N Po ; NPs ? N ~ ; NPo?NibSpas?NPot~treVi ~ ( par NPs )   ; 
NPo?Ni;NPs?N ~
This is of course a wasteful repetition of identical selection rules  . It was just to avoid this kind of useless duplication that justified the introduction of transformations  . Suppose now that If actorize the selection rules from a set of forms that constitute an equivalence class  , for example , from the ' active ' and the ' passive ' forms ; I place a separator p between the forms of the equivalence class :  ( 29 ) S ? NP st V2 NP o/p/NP ot ~ tre V2 ~ ( par
NPs ) / p/I1t~treV2eNPo(parNPs ) ; + N~"NPo+N\]NPs In this formulation , the selection rules are no longer duplicated ; moreover , we can interpret the separator p between the members of the equivalence class as indicating a relation between the sentence schemas so separated  . The factorization of the selection rules , together with the introduction of the separator can be read as the definition of a transformational rule between the sentence schemata  . 
Of course , rule (29) is no longer CF , but it represents a rather natural extension of the CF framework which makes the latter much more similar to a transformational grammar than one might have thought possible uptil now  . However , the reader will note that the concept of a transformation is indispensable as a tool for the const-ruction of this CF grammar  , and then for its extension towards a transformational grammar by means of the factorization of selection rules  . 
Furthermore , this CF grammar does not generate the sentences of the language ' weakly '  , in the meaning given this word by Chomsky ; in fact , it provides the man'adequate'grammatical structure as well as a linguistically justifiable relationship to other sentences of the language  . 
Finally , let us note that although the entire set of rules of the CF grammar proposed here is large  ( of the order of 109 rules )  , it is nonetheless finite . Furthermore , the size of the gra-mmaris of no theoretical consequence  , since it could be stored quite handily , not in some static memory ( e . g . , a pile of discs ) , but in a dynamic form ( that is , in the form of schemata ) where each rule is generated at the moment when the program of syntactic analysis  ( or generation ) requires it . In this way , the set of rules would be reduced to a series of sub-programs that can ge-nerate either one rule  , or a subset of rules , or all the rules . During analysis or generation , a call for rules would activate their synthesis by the appropriate sub-program  . 
Such a program of analysis by synthesis reduces the number of rules to a smaller number of sub -programs  , but a string grammar reduces them still more , down to a set of about 150 strings ( the rewrite rules ) together with about 200 restrictions ( the CS portions attached to the CF rules )  . 
The size of the CF grammar required to describe selection rules adequately also explains why all attempts at automatic syntactic analysis by means of strictly CF grammars undertaken until now have failed  . The authors of these CF grammars limited their effort to including some rudiment-ary linguistic facts  ; the average size of this sort of CF grammar was of the order of several thousand rules  ( cf . Kunolg , 20) . Under these conditions , there was no question of providing only linguistically acceptable analyses  . However , in the last few years , other CS variants of a CF grammar have been proposed  , and partly worked out . In particular , the augmented transition network grammar of Bobrow & Fraser  2  , especially in the form given it by Woods 28 , has predicates associated with the transitions , predicates that are so many context-sensitive tests  . This kind of 44-grammar is then quite similar to string grammar , i . e . , to a CF grammar together with CS conditions on the rules  . Unfortunately , none of the grammars based on the ideas of Bobrow and Woods has been worked out insufficient detail to make a linguistic comparison with string grammar possible  . 

I . Bar-Hillel & Shamir , E . , 1960 . FiniteState Languages , in Language & Information , New York , 
Addison-Wesley , (1964).
2 . Bobrow , D . & Fraser , B . , 1969 . An augmented state transition network analysis procedure  , Proc . of the International Joint Conference on
Artificial Intelligence.
3 . Boons , J . -P . , Guillet , A . & Leclere , C . , 1976 . Classes de constructions transitives , Rapport de Recherche N ? 6 , L . A . D . L . , Univ , de Paris 7, Place Jussieu , Paris 4 . Chomsky , N . , 1955 . The logical structure of linguistic theory , New York , Plenum (1975) . 
5.--1957. Syntactic Structures , The Hague
Mouton 6 .  - - 1963 . Formal properties of grammars , in Handbook of Mathematical Psychology , Vol .  2,
New York , John Wiley 7 .  - - 1965 . Aspects of the theory of syntax,
Boston , MIT Press 8 .  - - 1966 . Topics in the theory of generative grammar , in Current ~ ends in Linguistics , 
Vol . 3, The Hague , Mouton 9 . Chomsky , N . & Sch~tzenberger , M . , 1963 . The algebraic theory of contextfree languages , in Computer Progra ~ ning and Formal Systems , Amsterdam , North-Holland 10 . Gross , M . , 1968 . Grammaire transformation-nelled uf rangais:le verbe  , Paris , Larousse II .  - - 1972 . Mathematical Models in Linguistics , New Jersey , Prentice-Hall 12 .  - - 1975 . M~thodesen Syntaxe , Paris , Hermann 13 . Harman , G . , 1963 . Generative grammars without transformation rules : a defense of phrase structure  , Language , Vol . 39, N ? 4 . 
14 . Harris , Z .  1952 . Discourse analysis , Language , Vol . 28, N ? 1J 5 .  - - \]962 . String analysis of sentence str-ucture , The Hague , Mouton J6 .  - - 1964 . The elementary transformations , in Harris ,  1970 , Papers in structural and transformational linguistics  , Dordrecht , Reidel 17 .  1968 . Mathematical structures of language , New York , John Wiley 18 . Joshi & Levy , \]977 . Constraints on structural descriptions : local transformations  , SIAM J . 
of Computing , Vol . 6, No 219 . Kuno , S . , 1963 . The multiple-path syntactic analyzer for English , Report N ? NSF -9 , Computation laboratory , Harvard , Boston . 
20 .  - - 1965 . The predictive analyzer and a path elimination technique  , Comm . of the Assn . 
for Comp . Mach . , Vol 8, p .  453 21 . Peters , S . & Ritchie , R . , 1969 . Context-Sen-sitive immediate constituent analysis  , Proc . of the ACM Symposium on ' Theory of Computing ' , New
York , ACM22 . Postal , P . , 1964 . Limitations of phrase str-ucture grammars , in The structure of language , ed . by Fodor & Katz , New Jersey , Prentice-Hall . 
23 . Sager , N . , 1973 . The string parser for scientific literature , in Natural Language Processing , ed . by R . Rustin , New York , Algorithmics

24 . Salkoff , M . , 1973 . Unegrammaire encha~nedu frangais , Paris , Dunod 25 .  - - 1979 . Analyse syntaxique du frangais : grammaire en cha ~ ne  , Amsterdam , J . Benjamins 26 . Woods , W . , 1970 . Transition network grammars for natural language analysis  , Comm . of the Assn . 
for Comp . Mach . , Vol . 13, p . 591* I should like to thank M . Gross for many helpful comments , and myself for an excellent typing job . 

