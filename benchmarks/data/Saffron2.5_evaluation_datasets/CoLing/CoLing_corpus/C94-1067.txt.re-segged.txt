An HPSG Parser Based on Description l , ogies *
J . Joachim Quantz
Technische Universit ~ it Berlin , \]' rojekt KHZVM 11 , FR5-d2 , 
Franklinstr .  28/29 , D-10587 Berlin , Germany , email : jjq@cs . tu-berlin . de

I rath is paper I present a parser based on Description Logics  ( I ) I . ) for a German lll'SG-slyle fragment . The specilied parser relies mainly on the inferential capabilities of the nnderlying DL system  . Given a preferential default extension for DL disamhiguation is achieved by choosing the parse containing a qualitatively minimal number of exceptions  . 
1 Introduction
I ratiffspaper I present a parser for IIP'SO based on Description Logics  ( 1 ) 1 . ) . " l ) mmain mntiwrtion for specifying such it parser relies on considerations concerning the disambiguation of NL expressions  . In ISchmitz , Quantz 931 it is shown how differentypes of ambigt fity can be handled will  ) a homogeneous approach based on lhenotion of preference rules l Jackendoff  83\]  . A major req nirement for such at , nified approach is that information usually represented rather differently  ( e . g . syntactic , semantic , and encyclopedic information ) is homogeneously represented in itt in ; f ern1 and declarative formalism in order to express and evaluate the complex l  ) references stemming from the different kinds of information  . 
Description Imgics have been developedira the field of Knowledge Representation  ( see , for example , \[Brachman et al91\]) . q trey have already been used for the representation f semantic and encyclopedic information  , e . g . I Allgayer et al 89, Stock 91, Preusselal .  921 . Due 1 ( 5 their similarity to typcd feature formalisms \[ Carpenler  921  , syntactic infonnation is in principle also expressible in DI  , , as already sketched in \[ Quanlz 93 , Quantz , Sehmilz 941 . 
Furlhermore , Preferential Defaull Description Logics ( H ) DL ) based on weighte defaults \[ Quuntz , Ryan 931 can be used to represent the preference rules in a declarative and formally well-founded way  . 
ht the following I will mainly show how II l , ' SG-sly lesyntactic information can be represented in  1  ) I . , atrld bow a simple parser can be build by using tim inference capabilities of a DL system  . Note that when specifying the parser I will kee t  ) the presentation as simple as possible , thereby deliberately ignoring efficiency aspects . I will also refrain from model ; riga // asp ccts of relevant knowledge in DL , i . e . 
there are still pieces of information which are not explicitly encoded in the DL modeling  , but tire rather ; nil ; licitly cnntained in lheparser ( e . g . information related to linear precedence and to traces  . 
The main objective of this paper it thus neil her to contribute to research inefficient parsing tectmology  , nor to " The project KIT-VM11 is suppo21ed by lhe German leedcral Minister of Research and Technology  ( BMFF ) under conh'ac101
IV 101Q8.
develop a declarative formalismirawhich all aspects relevant for NI  . P can be represented . It is rather top rnvide the b'ils is for an implementation of the exception minimiza-lion a pls roach to interpretation proposed in I Quantz  931  . 
In Section 6I will hriefly sketch how the l ) L-based parser l ) resenled in Section 5 can be exleuded to realize this approach . 
2 ilasie Ideas
An important distinction made in DI . , but missing in tradi-tionaI fealure formafisms , is the one between objects ; rod /) 7) es . I ) I . formulae eilher express that a type 1~ is more specific than ( or subsumed by ) a type t2 ( tl : < t2 ) or that an object o is an instance of a type or , using I ) I , terminology , a conceU(o::c ) . 
Applying Ibis schema to the task (5t " NI , P , we can say that the objects in this donaa in are wn rds or phrases  , and that the types are syntactic categories . I : urthermore , given a phrase el we have add iliomll relations between lhisl  ) hrase and its constitnents 02 ,  03 ,   .   .   . , nsually expressed as "02 is a daughter of ol " . In DL this ix modeled as ' ( or , 02):: dtrs ' , or equivalently as '01::dlrs:02' . ' dtrs ' llltlSacts as a binary predicate or , using I ) l . terminology , as a role . Nile thai roles can have more I hanone value in contrast I  ( if ealures , which are funclional . We can thus write ' el::dlrs:02 & dtrs:03' . 
Note further Ih ; lt the objects stand for occt Jrrences of words or phrases  , and thal different occtwrenees nf the slime word will be represenled by different objects  . This is represented by writing ' o2::15hen : or ' , for example , It ) express thai 02 is tinocetlrrenee of I he form ' er ' . 
This is all rather similar R ) standard Ill, . ~(; nil ; ilion , and the main difference is I hat in addition to the feature structures used in IIIHG  , we add ; ill addition a level of objects , which we see as instances nf the features true ha ' es  . Fea-Itl restructures I hus correspond Io types or more precisely Iol  ) I . concepts . In a way , IJ le objects ill 1 ) L are used to make the lIPS ( \] features lr ( lchu'es\]~cr , v\[slcnt , i . e . 1 (5 have pointers or names to refer to them . 
The addition a level of objects allows a slraighlforward description of the parsing task  . We start with an ttm ber of objects , namely words , whose phonological value amd position ix known . We want to end up with a single object containing till these words as  ( not necessarily immediate ) consthuents . Now the immediate dominance schemata in ill / IIPSG loll us how  1  ( 5eonstHlct phrases from words or other phrases . Thus the main operation for building a phrase is to create a new object being an instance of an ID schema  ( notethilt it ) schematare features lrt lctures and therefore concepts  ) and I ( 5 fill in the required daughters by us ; W the objects available as building mate , ' i al . This is achiew xt by choosing the ' functor ' -daughter ' and filling the required argumenls  . 

Threep ( lints are i in porlani in the following sot ) ions : 1 . Obviously , 0 bjeels cannot be combined in a random way . In III'S GlheID schemat and I helexie alonlrios e on iahl information concerning c  ( )mbination wiih olher ptlrases . Twill modellhis infornialion in DL tii idrise standard I  ) 1 , it ffer one oslocheek consis-leil cy of eombinalions  . Thus lhol ) l , sysiom is used I oper form I heunif leaiionilisk underlying Ill > S  ( and similar Jnification Grain mars +2 . All objecl can only be used ) is building nlalorial \[+ or a phrase if il has ilolyel been used i is building maiorial for sortieolher phrase  . I , ' tlrlherinore , when looking , for dlitighlers o\['linowl ) hraso , we hay (: . I of illl hosodaughiers for which a filler is required  , but not yet specified , l will use tile cpi , vtemico \] scr ( t/orkIll ' ( )+ posed in IDonini el al . 921 Io formalize these in lu- ) lit ) fisaudlh on uses landard Ill , rehieval for chocking the see on strainls . 
3 + lq ) rsynlaclically ambiguous expressions there is III or oih a none possibility io coml/inothe words /phrases  . Since the objects and especially ltiO rohitions between them fire viewed from differe li  ( porspeclive , ,i in lhe alloirlalivc ' hlterprelali()ns , \volieedanio ehanisntii Dl , to reproscnll hose diffefon l views , i w i l l i 1 s c x i l u a t e U d e . s'cri\]~tionx'o::cins ' in I ho follow in , ~lo formalize lhisnotion of differ-ell ( porsl ) eClives + Thert ~ sal + O ( ll ~ h corfesp of l dei ice boD . vo on the silualiOll Si is od Io capture the specific in  ) eli ) re ( aliens and ) he charl seroaled in charl pars . -iBg . 
3 The Ihidc Hylnl ; Description i , oEic\] ) eset ' iptlon Logics Valy wittheler nl-build hig operalor : l they contain + In this set  ) ion 1 will pf es enll he ~ yillax of file 1 ) 1 , which is u ; ied hit tio e ? a inples given in I he next l wo seclions  , l ) ue to spacelhnilal i ( ms I will li ( tl specify lheformal seinanlics for this 1 ) 1 . ( see , for exaliloph ' , \ [ I\[oppeetal 93 , Quanlz , Schlnilz 9 < !1 for a model-
Iheorelio Selliailli CS ): t-~e , r , lv , ti & t2 , k(i)e->Ilte(r , c ) , aOIlle(l ') > lie(f ) , exaclly ( u , f ) i '; ( ) ii I :: 1'2 r '> fuai , doi ' ilaiil(C ) , rillll , e(c ): till2 , iii \'( r)"y"~"I1:'Q12 , I 1:: I2 , el : . "- e2,:)::/YillS,o>:lt ; ild . Sil(51, . " gO ) When specifying filefralgmerlt and the pars ; el + in the no ? l , '; (+ clion . + I will use a ilolallllil based Oil I lie PROI . () Ginler-face pl . , ') vide , : tlly the BACK sysIet nlll . l ) pe et al 931 . hi BACK a dislinclion is lllade belween lermil ~ ti'oduclion  , '-; or do finilions , and conslritlnl ,  . likorlll CS . Alernlilai no can Doinl roduccd ciileril S/~/'/ , 'lliil , t"(1 , :< l ) , i , e . () lilylle CeSSilfy (: ondilions are t ~ , ivon , or as ( Ioth lod(l , ::: t ) , i + e . necessary arid sufficient condiloils fire ( , iron . Ai'ulcCl > ( ?2iliCatl Slhal each objocl being at ) in stal ) coofels a\] , ~; oillinsl ; ili('e of (; 2 . 
"lhe for aul hl ' extends il(sl , s;0'exprc . sses lhe ( act thaisilt lali ( mse is ~ lriextensicm of siltial i ( in sl . This mean : - ; Iha\['o::Cinsl'implies'o::cin ~ ; 7 . ' for all objeels tl and colicopls e . 
It (1 order to dislitiguish belw cent cllilly , and quelying itf formaiioli I will ll SO'o ~: ( ; ills'l:ortolls and'o'?:ills'for qilOi+\[e  ~  . If tirlho Hnorea Sst lnielhlitii toll only suce eds if it is consistent with lheprev iously enlered in formal  ) on ; otherwise it ill ) Is . When the object used in a query is a variable , the syslem will relrieve all known instances of a concel  ) l , i . e . ' Object+?:ins'will reltirrl the objects known lobe in slances of ' e'in's'by backtracking  . 
Note hatheepislemie operator k will ( ) lily be used in queries . It can there R ) rebestraightforwardly integrated into exisling I ) 1 . syslems . Since this is also true for situated descriplior ls  , lheparse , " presented in Seelion 5 is largely b~lsed Oilstil\[ldil rdinference capabilities of DI  , systems . 
4 A Snlall l:ragment ll '~ lhis section \[ will present examples from an In  . ' S(;-slyle fragment for German modeled in DL . Due to space lim-ilalions I will nol specify all the information contained ill I his modeling but only lheone needed  1o illustrale the main character is lies of file formalization and lheexample sentence ' Die  sch6ne l : rausie htsic'discussed in I he nexl seclion . 
The fragment is based on I hepresenlalion in \[ PcJlhtrd  ,   Sag871 and ils applicalion to German in \[ llill191L A main difference between lny I ) I . model illg and slandard Ill > S ( modeling is lh ; l \]\[ ; IVOi(lfealure im the swhich would in lroduces t ; i ) er fluous ITll+objects . There is thus tit ) feature ' head ' in my modeling since it would yield the im  , +o duelion of head objects whose ontological status seems controversial  . Consequently , my II ead Fea-lure Principle specifies cq tdw dence not for as higle fealure ' head '  , but rather for each head feature separately . 
The fragmenleotl I ilii/s five main categories  , l lamely tie(m ,   , ' lfl , i , e , 'D , de / , and tu // . For il hlslrall on , the definili(ms ( ) iII ( ) llll and , qt ' Jafej ; iven l ) elow:
II ( llll:--lll~lj:ll&lex:I "" p::maj:u & lex : Phrases lrt l clt lre is represented by roles as I he I ' ollowi Iig : till  . '-::-< domlln(si/~il ) t ~ rallll~o(sl~l , tl)
COO li)_dlts:<5 dll.';
COlllp dh'\[:<5 coinp dim & foal ) leaddlr:<dh ~& tealfuncior_dir:<dim & feat The fealut'e'funcior  , dlr ' will be used by lheparser it ) s t ) co-ifyIhosib , naclin ~ , as funelor of a now phrase , lls wihle will be idenlical to I hovahio of ' head  . dlr ', ' adj . dh " , ( ) t ' filler d h " , dependilit ; I ) llIhep ' , lrlietllar/ tnlc'(l/lle Z , )on/-/)la , ' sc(:(It )) sehemliil SOd . Nololhtil Iho daughlors which ; ire mode h xl as feillt lreslt zt2 funcliomil , i . e . no phrase can have l wo fill cr : ~ for ' heild dh " . 
(; or fest ) on dinl_; othese dau , Jiler roles and foal ( ires we have art , umonl roles : lnd fealuros a . <;' comp_argl'elc , lIhen dislint ! , tiishIll ( ; R ) llow in F ~ types of phrases lril Cttlros : corllp . : flttl Ctt lre:::s onle 01 e add h ' )   ( ~ftiil clor_dh . :\[ io adlr & il O ( ildj dill & lio ( liller_dlr ) adj+'4htlCllll'O:::s Oiile ( adj + dh ) & seine ( head . dill & ftill lClOrdh ": adj dll " l~no(coinp . dli . ';) & no ( filler . dill fill cf . shuclute :: sonw , (fillef dlr ) tt~sonic ( headdh\]&\[:unclor_dh fillerdlr&no ( comp_dll:q ) l ~ no ( adj_dlr ) Thushia ' coln p_sll'tl CItlrt ; ' I he'he add lr ' , ' lOiS as a filil ClOr . 
Nololhalil has It ) be cxplieilly slalod wholher a eerlain \[' eahlre is enlply  , e . g . ' lie(adj . .all ()' for ' comp_slrueliiro' . 
Ill , syslcms il SS ( llile all ( ) pell world aild \[ like all descrit ) iions filler for a role at an object does not imply thaithere will never be one  . 
" Ilm fragment contain sixID schemata , namely three for noun phrases , one for verb phrases , one for adjt mets , and one for topicalization . 
idl := eomp~slructure & the(headxltr , np&nfo~rn:comm ) & some ( comp_dlrl ) & no ( compmrgs ) id 2: = e omp ~ s truelt , re & the ( head xhr , noun & nfom ~: comm ) & no ( comp-dtrs ) & some ( compmrgl ) k 13:=comp~slmctum & lhe ( headxlt~ . verb ) & no ( eomp-args ) & mc:-k14:=adj-slrueture & the ( adj_dtr , adjunct ) id 5:= tiller_structure & lhe(head . dlr , maj:v&no(compmrgs )) & me :+& the ( liller_dlr , lop :+) id 6: = eomp~stmeture & the(head~ltr , noun & nform:pro ) & no ( eompxlt~s ) & no ( comp_a , gs ) For tile lexieal entries I will use three moq ) ho-symt actie features ( n form , case , gen ) to illustrate agreement between nouns , adjectives , and determiners . Agreement concern-insease and gender between nouns and detenniners i modeled by specifying that t be value of tile feature ' case ' at a common noun is I hosame as the vahle of I ho featn re'ease ' at the object filing the feature ' eomp_argl '  ( which is the determiner )  . 
Below are lexical entries for ' frau ' and ' sic ' : noun & n fot rn : comm => exactly  ( 1  , eomp_args ) & lhe(comp_m'gl , det ) & case = eomp_argl . case & gen = compmrgl . gen ) noun & nfoml:pro=>no ( comp_args ) lexeme:frau:=>noun&nform:comm&gen:fphon : frau=>lexeme:fraulexeme:er~sie=>notnl&nfol ' m:prophon:sie=>lexeme:er_sie&gen:fNote the bierard fieal nature of the modeling -- the subcategorization if ormation is specified for common nouns and pronouns in general  , and is then inherited by each specific common noun and pror ~ oun  . Information shared by all forms of a lexeme is specified as a property of I helexeme  , whereas information specilic to a parlicuhw form is specified for Ibis form only  . 
Adjectives require non-saturated noun phrases as arguments and agree with them wrtease  . ' rodgender:adj=>adjunct&case=rood-rag . case & gen=mod-mg . gen & the ( mod_mg , np & some ( comp . mgs ) ) lexeme:schoen => adj phon:sehoene => lexeme : schoen Finally  , the lexieal enlry for'sieht':verb---->lhe ( eomp_argl , np&case:nora ) lexeme:sehen=>verb & exaclly (2 , eomp . m ' gs ) lhe(e omp_arg2 , np & case : aec ) phon:sie ht-----> lexeme : sehen Note that for verbs taking more than two arguments we need addilional features '  comp_arg3' and ' comp_arg4'  . 
In addition to tile information modeled so far we need a formalization of the principles underlying the combination of signs in fl ING  . Some of these principles hold only for ph , ' ases and not for signs in general . Aph , ' ase is defined as follows : phrase := some(du . s ) phrase=>lex:-lex : -=> phrase " lllellead Fealure Pri  , cit ; le is then delined as : phrase => maj = head xhr . maj&gen=head~ht:gen & case=head . dt~ ; ease " l'\]m parsing process presented in the next section is essentially triggered by signs which can act as functors  , namely signs wilh unsaturated sube at \[ is is , signs wilh slashes , and pronouns : some ( args ) => funetor some ( slash ) => funetornotre&nfmm:pro=2>funclor5I ) L-Based Parsing In Ibissection 1 will present he basic structure of al ) L-based parser for tile above fragment . The parser is realized by five main predicates . I assume that tile initial informa-lion given In the parser consisls of descriptions of the words occurring in tile expression to be parsed  . Consider the ambiguous sentence ( 1 ) Diesch/3ne Frausie htsie . 
(2) " llle pretty woman sees her.
(3) Tlm pretty woman she sees.
" llminitial DI . representation f this sentence is : wt::phon : die &  star1:0 & end:linst w5 :: phon:sle & star1:4  &  end:5 inst Given Ibis information the parser builds phrases from tile live words  . This is done by creating new phntses until no more combim ~ tions of signs are possible  . " l\]m parsing succeeds if the words have been all used up and a single phrase results : pain e_sign  ( Sit , Sit ) :- find all ( Sign , Sign?:sign&no(k(inv(dtts ))) in Sit , \[_\]) , pm . ' se_sign(Sit , FinSit ) :- new_phrase(Sit , NewSit ) , pai ~ e_sign(NcwSit , FinSil) . 
Note that tile epistemic . ?' once pl ' no ( k ( inv ( dtrs ) ) ) ' is used to determine whether a sign is still available for phrasebuiMing  . An object is an instance of this concept if it is no laliller of some ' dtrs ' role at any other object  . 
Tim basic idea of building a new phrase is to look for a sign which can act as a funel or  , to choose an ID schema in which lifts sign is a functor  , and to find the required ; trguments of tile functor . Finally , the linear precedence rules are checked and , if necessary , traces are introduced . 1 new@hrase(SiI . FinSit):-Sign ?: funelor & no(k(inv(dl ~ , ' s ))) in Sit , selec Lid_schema ( Sign , Sit , Piu-ase , NewSit ) , eomplete ~ lrguments(Sign , NewSit , Nextgit ) , checkJps_and_continuity ( Phrase , Sit , NextSit , FinSit) . 
Seleetkmofan II ) schema is realized in a rather naive and simple way---we just take an ID schem and try to create a new phrase its an instance of lit is schema  , where the feature ' f t , nctor xllr ' is filled by tile funclor . 
I Due to space limitations I do not specify Ihe predieale ' check dps_and_continuily ' in this paper 
NP ( p8 , idl ) die(wl ) N(p / , id 4) j' , < , sch~ne(w2)N ( p6 , id2)
Hlrau ( w3)
S/NP ( p13 , idS ) sieht(w4) S/NP/V(pl2 , id3)//(tl1 , NP ) NP ( p9 , idS ) I ! ( tl0 , V ) tlsic ( w5 ) Figurel : Phrase structure of tile sentence ' Diesdffme Frausie htsic '  ( ' l\]rm pretty wonmn sees her ) +'\]\[' stands for'head_dtr' , C ' for ' comp_dtr ' , A ' for ' adj_dlr ' , and ' F'for ' liller_dtr ' . 
select_id_schema(Sign , Sit , Phrase , NewSit):-id_schema(ID ) , extend ~ sit(Sit , NewS\]l ) , Phrase :: ID & ftmetor_tllr:Signi Newgil . 
Information about existing II ) schem ; flathus has to be encoded as facts of the form ' k t_sclmma  ( idl ) ' , elc . Tile predicate ' extend_sit(Sit , NewS\]t ) ' ix used to tell tile DI+system to create a new situation which is an extension of tile current situation  . 
Note that no further knowledge al ) outtile , ' tctual rood-cling of It ) schemata is uscxl in tile parser except for tile fact that each ID schema has a ' funclor_dtr '  . Note furlher that the DL tell will fail if tile information known about the ftmetor cannot be unilied wilh the information required by tile ID schema for the filler of ' fun etc  , r_dtr ' . 
In order to complete tile arguments of the functor  , tile parser cheeks for each argument feature ArgFeat wh clh cran argument is required  ( som c ( ArgFeat ) ) but not yet specified ( no ( k ( ArgFeat ) ) )  . If so , ' lind_arg'looks for such an argument and enters it as filler for Arg Feal  . Then tile remaining arguments are completed . 
complete . argumenls ( Functc , r Sil , FinSi1):-arg_feature(AtgFeat) , Functor ?: some ( ArgFeat ) & no ( k ( Arg Feal ) ) in Sil ,  ! , tind_mg(Functo e ; Sit , ArgFeal , NewSil ) , complete_arguments(l:unctonNewSiI , HnSil) . 
complete_argumenls(_,Sit,Sit).
Again we need to introduce facts sl ) ecifying tile arglnnents used in tile fragment , e . g . ' arg_fealure(comp_argI ) ' . 
If an argument is rc*qt , ired it has lobe filled , therefore tile Cut , Thustile recurs \] onlean \] n ares successfully only when all required arguments are actually tilled  .   Nol0 thai the only information about argument structure needed t  ) y the parser are facts of tim form ' arg_feature ( comp_argl ) ' for all argument features . 
To find an argument the parse , " looks for a sign which has not yet been used for phrase building and  , asserts it as filler for I he argument feature . Again , if unification is not possible due to conflicting constraints  ( e . g . agreemenl ), the DL tell will fail . 
tind_arg(Functor , Sit , A~gFeat , FinSit):-Atg'?:sign&no(k(inv(dm- ; ))) in Sit , extend_sit(Sit , FinS\]t) , 
Funclor : : ArgFeal : Arginl : in Sit.
tind_arg(Funclot ; Sil , Argl:eat , FinSit):..
new_phrase ( Sit . NewSi ,), find_a~g(l"unctcw,Sil . ArI,Feat,lqnSil) . 
The second clause is needed Io create a required , ' lrgument which has not yet been build Ul ) . Ill this case ' new . phrase ' is called It ) Creale a new potential ; , rgumellt . 
For the sentence ' Die sch6nc Frausie htsic'we obtain two different parses , since bolh ' die schoene frau ' and ' sic ' are ambiguotls between nolni/lalive  ; ilia accusative ease . " llle reading according t ( ) which ' die schoene frm , ' is subject is shown in Figure I as at ) hrase slructure tree . 
Some of the eorresporv Jing infomullion conlained in I he I  ) I . situation represenling this reading is given below:wt::phon:die&case:nora&stinl:O  , e ? end:lps::idl & head~ltr:p7 & comp ~ ltrl:wl&slarl:O & end:3   p9  ::  id6  &  head_dtr:w5  &  sla0  . : 4  &  end:5 IlO::trilee & tracing:w4 & comp_argl:tu & comp . ~ rg2: p , ~ &  star1:5  &  end:5 tit::trace&Iracing:pt ~& slart:4 & end: , l
I ) 12:: id 3& . he add tr:tl0&compdh'\]:Itt&compdtr2:p ~ ) & slash : w4&s hlsh:pg & slarl: , ' l & end:5 pl ~:: id5 & headdlr:plz & tiller_dlr:w4 & slash : lh&sI ; l ll:3  ~  end:5   p14  ::  id5 & head a:ltr:pRs & tiller_dtr:pa & stall:0  &  end:5 In the second purset it and P9 swap places , i . e . l ) 9 is the ' comp . dtrl'of\])12 and Ill is the ' comp . Atr2' . 
The rest , It of the parsing process illustrates tile object -centeredness of D\]  . representations . The constituents of tile ulterance are explicitly modeled and can be used for extracting or specifying further information  . Thus we can choose to introduce at feature ' subject ' and add tile fact  '1  ) 1 . 1:: subjecl : ps ' , or we can retrieve all tiles alurated noun l ) hrases ( Phrase 2: nt > & no ( args ) ) . 
"It , is object-cenlerednessi useful fo , " disambigualion , for example for a , laphor\[i resolution , as il hts hated in \[ Quantz , Schmitz 941 . 
4156 Interpretation as Exception Minimization , L ? I will now briefly sketch howihe parser presented in the previous section can be extended to perform disambiguation by exception minimization as proposed in \[ Quantz  93\]  . In case of ambiguous expression stile parser will return more than one situation  . Tile basic idea of interpretation as exception minimization is to model additional preference rules nee  , ded for disambignalion as DL defaults , and to choose the inteql retation violating a qualilatively minimal set of defaults  . 
A Preferential Default Description Logic ( PDDL ) based on weigthed defaults has been developed in \[Quantz  , Ryan 93\] . A weigthed default /5 has the form cl "-* , ~ ca , where cl is called the premise of /5 (/51 , ) , c2 the conclusions of 8 ( ~5~ ) and n the weight of /5 ( w ( 8 ) )--the higher the weight , the more relevant tire default . For lhis PDI ) La formally well-behaved preferential entailment relation o  ~>2 is presented , which is based on an ordering on DL models ?\[5~: . The basic idea of this preferential semantics i to compute a score far each model by summing up the exceptions to the defaults  . Models with lower score are then preferred because they qualilatively minimize the exceptions  . It is straighlforward to carry the idea of scoring and ordering over from models to situation  . To do so , we compute for each situations and each default 6 tile exceptions -- those objects for which ' Object  ?:   6~  , in s's ncceeds and ' Object ?:/5 ~ ins ' fails . 
If there are several possible interprelations for an expression we choose the interpretation given by lhesituation with the lowest score  .   ( Note that there may be Iruely ambiguous expressions which yield situations with identical scores  . ) Thus taking the above example , we might use a preference for topicalization of subjects to prefer I heparse shown in Figure  1  . This can be achieved by simply introducing a defat  , ltnp & top:+~5 case : nor a Obviously , this default is a rather weak one and can be over written by information stemming from selectional restrictions \[ Schmitz  , Quantz 93\] . 
In principle , it is possible to use preferences stemming from weighte defaults already in tile parsing process- --situations whose score is higher than a specilied threshold are not processed any further  . Thus instead of producing all parses in tile first step and ordering them in a second step  , the parser would Ihen only produce tire preferred reading  . 
7 Conclusion
I have presented a DL-bnsed parser for a small Ill , ( l-style fragment of German . Most aspects of tile grammar and the parser have been modeled in a highly declarative way  . 
Since the main motivalion formy tl resentation has been in show how an III " SG parser can be implemented in principle by using the inference functionality of a DE system  , I have deliberately ignored any efficiency issues  . It should be obvious , however , thai the parser can be further optimized to increase its perforn mnce  , for example by integrating chart parsing techniques  . We are currently testing tile performance of alternative impleme malions of both the parser and the underlying DL system  . 
One advantage of using DL as underlying form if lism is that in addition to the syntactic information modeled ill this paper  , semantic and encyclopedicn formalion can be easily integrated in lotile presenled framework  . Furlher-more , Preferential Default Description Logics can be used to model preference rules as weighted efaults  , thereby obtaining in t c q ) relation as exception minimization . Thel ) arser presented in this llaper thus provides lhe basis for an homogeneous and formally well -founded approach to disambiguatltm based on Preferential Default Description 

References
I Allgayer ctal . 89\]J . Allgayer , R . Jansen-Winkehl , C . Reddig , N . Reithinger , " l ~ , i directional Use of Km ) wl-edge in The MultiModal NL Access System XTRA " , in 1JCAI '6'9 , 1492-1497\[I3 , -achman et al 911 R . t3rachman , I) . L . McGuiness , P . F . Patel-Sclmeidcr , L . Alperin Resnick , A . 13 orgida , "Living with CLASSIC : When and Howlo Usea KI . -ONE-like Language ", in J . Sow)ted . ) , Principles of Semantic Networks : l ; :vplorations hitheRe present at km < ( Knowledge , San Male(l : Morgan Kaufmann ,  1991 , 401-456\[Carpenler92\]B . Carpenter , 7' he Logic of " l) , pedl , ' eature Structures , Cambridge : Canlb , idgeUnive , ' sity Press , A . Schaerf , W . Null , " Adding Epistemic Operators to
Cnucept Languages " , KR-92 , 342-353\[Ililt 1911 W . Hiltl , E in HPSG-Enl wutf ffr & ts Deutsche und sehle hnplementier ung  , , Diplomarheit l . Jniversiliit
Koblenz-Landau , 1991
I Hoppe el al . 931 T . Hoppe , C . Kinclermann , JJ . Quantz , A . Schmiedel , M . Fischer , I ~ ACKV 5Tutor  #zl , ~ Manual , KIT Report 100 , Techniscllc Universitiit Berlin , 1993\[Jaekendoff 831 R . 3 ackendoff , Semantics and Cognition,
Cambridge : MIT Press , 1983\[Pollard , Sag87\[C . Polhlrd , I . A . Sag , An Informatkm Baxed Syntax and Semantics , Vol . IF undamentals,
Stanford : CSLI Lecture Noles 13 , 1987\[Preuss et al 921 S . PreuB , B . Schmilz , C . llauenschild , C . Umbach Anapkora Resohttion in Machine 7 ) ' ) as-#1I\[o11 , KIT Report 104 , Technlsche Universiliit I3erlin , 
Minimization ", IJCA\[-93, 1310 1315
IQuanlz , Ryan 931 J3 . Quantz , M . l~yan , Pmferenlkt IDe-Jhult Description Lo L , ics , KIT-Report 110 , Technische
Univ crsitiit Herlin , 1993\[Quanlz , Schmilz 941 J . J . Quantz , FLS ctunitz , " Know-ledge-Based l ) is a mlliguation for Machine Translation " , 
Mhtds and Machhles 4, 39- . 57,\]994\[Schmitz,Qt , antz 93\]1; . Schmitz , 33 . Quanlz , De , lullsht Machine 7kanslation , KIT Report 106 , Technische
Universitiit Berlin , 1993\[Stock 91\]O . Stock , " Natu , ' alLanguage and Exploration of an Inform ) lionSpace:tile AI . Frescolnler aclive Sys-lem ', in IJCAI '91, 972978
