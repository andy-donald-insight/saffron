The Use of Instrumentation in Grammar Eng in eering 
Norbert Br Sker
Eschenweg 3,6923 1 Rauenberg

This paper explores the usef lt llmss of a technique from software engineering  , (: ode instrumentation , t br the develop lnent of largescale natural anguage grammars  , hltbrl nation about the usage of graln-mar rules in test and corpus sentence si used to iln prove grammar and testsuite  , as well as adapting a grammar to a specific genre  . Results show that less than half of a large -coverage rmnmar for German is actually tested by two large test suites  , and that 1030% of testing time is redundant . This methodology applied can be seen as a reuse of grammar writing knowledge for testsuite compilation  . The construction of genre-specific grmmnars results in peribrmance gains of a factor of four  . 
1 Introduction
The field of Computational Linguistics ( CL ) has 1ooth moved towards applications and towards large data sets  . These developments ( : all for a rigorous methodology for creating so called lingware : linguistic data such as lexica  , grammars , treebanks , as well as software processing it . Experience fl'omS of t ; -ware Engineering has shown that the earlier deficiencies are detected  , the less costly their correction is . 
Rather than being a post-development effort , quality ewduation must be an integral part of development to make the construction of lingware more eifieient  ( e . g . , cf . ( EAGLES ,  1996 ) f bra generale vahm tion fl ' a me work and ( Ciravegna et al ,  1998 ) for the application of a particular software designn lethodol-ogy to linguistic engineering  )  . This paper presents the adaptation of a particular Software Engineering  ( SE ) method , ill strmnentation , to Grmmnar Engineering ( GE ) . Instrumentation allows to determine which test item exercises a certain piece of  ( software or grammar ) code . 
The paper first describes the use of instrument a -tion in SE  , then discusses possible realizations in unification grammars  , and finally presents two classes of al ) l ) lications . 
2 Software Instrumentation
Systematic software testing requires a match between the test subject  ( module or comt ) lete system ) and a test suite ( collection of test items , i . e . , sample input ) . This match is usually computed as the percentage of code items exercised by the testsuite  . 
Depending oll the definition of a code item , various measures are employed , t brexample ( cf . ( Itet-zel , 1988) and ( EAGLES ,  1996 , Appendix B ) ibr overviews ) : statement coverage percentage of single statements exercised branch coverage percentage of arcs exercised in controlt low graph  ; subsume statement coverage path coverage t ) ercentage of 1 ) aths exercised from start to end in control flow graph  ; subsmues branch coverage ; impractical due to large ( often in finite ) number of paths condition coverage percentage of  ( simple or aggregate ) conditions evaluated to both true and false ( on differentest items ) Test suites are constructed to maximize the targeted measure  . A test run yields information about the code items not exercised  , allowing the improvement of the test suite . 
The measures are autonmtically obtained by in -strumentation : The test subject is extended by code which records the code items exercise during processing  . Afl ; erl ) rocessing the test suite , the records are used to comlmte the lneasures . 
3 Grammar Instrumentation
Measures from SE cannot siln l ) lybe transferred to unification grmmnars , because the structure of ( imperative ) programs is different fl : om ( declarative ) grmnmars . Nevertheless , the structure of a grmnmar ( formalism ) allows to define measures very similar to those employed in SE  . 
constraint coverage is the quotient # constraints exercised 
T con---#constrainting raln lnar structure or an equational COllSl  . l ' ailll ;; del ) (' al(l- . 
in go 11 the formal is ln .
disjunction coverage is the quotient # disjulml  . ions covere (15/'( lis =  #disiun('t . ions in grammar where a disjunction is ( : on sidel:ed ( : over ( ~ ( l when all its all : ernative ( li@mcl ; shave been set ) aral ; elyexercised . Iten (; omlm SSes (: on straint coverage . 
Optionale on stituenl , san(lequal ; ions have to be treated as a disjuncgion of the consgrain  (  , and an empty constraini ; ( cf . Fig . 2 for an examl)le ) . 
interaction coverage is the quotient-j/: disjuncl  ; (- omt ) in ai ; ionsexercise(1) in l'=#legaldi@m('l . (: oml ) in ati ( ) ns where a(lisjunct Colnbinal ; ion is a (' om I ) h'l ; esel . 
of choi (' esinl ; he ( lisjun ( : tfions which yiehls a well-for lned grmmnal ; i (' at sl ; ru( ; l ; ure . 
As with path coverage , the set of legal ( li@mct Colnbination typically is intinite ( hiet or c ( ' ur-sion . A solution from SE is to restri(:t1 ; 111 ! use of recursive rules to a fixed ll Ullll ) er ( ) f (  ; ; ts(' , s , for exaint ) le not using t . hcrule at all , and using il ; olly Oll Ce . 
The goal of insl ; rllnlenl ; al ; ion is 1 ; oel ) lain inf () rma-li () lia ) ( ) lll , which test cases ( ~ xer(:isewlfi(:ltgl ' ; '/llll11 , : l'(-onstraint . s . One way 1 ; ore (: or (1 lifts infornmlion is to exlendl , he parsing alg () rithm . Another way is ~ ouse 1:he gralm nar formalisl nil . qelfIoi(lc , , l . if ylhed is jun(:l ; s , l ) el ) el Ming on the (! xl ) ressivits-()fl ; hef ( ) r-realism used , th ( ; following 1) ossil ) ilil ; ies exisl :: atomic features Assmning a uni ( luemmfl ) ering of ( tisjuncts , an annotal ; ion ( ) f ghe form DISJUNCT-nn = + can be used for marking  . To delx ; rmine whether a (- ertain disjun(:l ; was use ( tin consl ~ ru ( ; til~gaso httion , one only nee ( Is to check whether the associate ( l feal ; m'e occurs ( at some level of embedding ) in the solut . i(m . 
set-valued features If set-valued f(~al ; ures are availal ) le , one can use a sel ; -valued fl~a-lureDISJUNCTS to co\]le( ; i ; ai . onli ( " sym-1 ) olstel ) resenting one disjunct each : DISJUNCT-nn ~ DISJUNCTS  , whi('h might , ease ; he collection of exereise ( l(lisjuncl , s . 
multiset of symbols To recover the number of times a disjunct is used  , one needs I ; oleav ( ; the uniiication l ) aradign l , l ) ecause it is very difficult ;  1 ; ocounl ; wiLh unitical ; iol ~ grammars . \ Vehave use ( laspecial feal ; ure of our gramntar ( levelol ) -mentei : vironment : Folh ) wing the LI " Gsl ) iril ; () f(lifl'erent l ) roje(:tions , itt ) r()vi(lesat)r()je(:t . ioll for
VP -~>
VP ~- v += 1";
NP ?$= ( I"OBJ);
PP *; = ( t(mE);
I$~(TADJUNCT);.
Figure 1: Sample Rule
Ve\]NI'(~
IP1)++=I";\])ISJUNCT-001 C_o . ; += ( to BJ )
DISJUNCT-002o* ; \]) ISJUNCT-003 Eo* ; $= ( I"OBL )
DIS , \] UNCT-004 Co , ;
I.l.e(tADJUNCT)
DIS , JUNCT-005 co , ;.
Figure 2: Instl'mnenl . ed rule synfl ) olicmarl:s , whit : his fornmlly equivale nl . 1o an mll . isel , of s3"ml ) ols associate ( twit . h the con > l ) lel . es()lut , ion(stru(:~ , ural embedding I )\] aysno role ; see ( Franl ? et al ,  \] . 998) f ( ) ral ) l ) lical . ions) . 
In I . hisway , we can (' ollecl ; fronll . here el ; node of c'ach solution the set of all ( tisjun ( : lsexer ( :ised , 
Ix ) gel ; her wil ; hausage eount..
Consider the LFG granunar rule in Fig . 1 . ~ Con-sl . raint (: ( ) verage would require tesl ; items such tlmt every (: a legory in t . he VP is exer(:ised ; a sequence of VNPPP would sut li ( : e for this measure , l ) is jun(:lion (' overage also requires 11) t . a kelh(!(unpty(lisjun('ls into a (: ( tOUlll . : NP ; m(lPP are Ol ) l . ional , s ( ) i ; hal , four ilems are neex h ~( l1 . o a chiewe full ( lisjuncl . ionc ( ) ver-age on 1 . hephrases l . ru(;lm ' eimrl . of lhe rule . 1)/1 o\[ . () lhe(li@m(ti ( milll . he PP retoolalien , 1Ave more t . esl . 
items are requh'e(l ( ; o a chieve full ( lisjuncl ; ion coverage on L he (- Oml ) h!t ( ; rule . Fig . 2 shows lherule from
Fig . 1 with insta'ument , ation.
4 Grmnmar and Testsuite
Improvement l'laditionally , a tests , rite is used 1 . ohill ) rove ( or main l ; ain ) a gramnmr's quality ( in terms of ( : over-agean ( lover generali ( m )  . Using in si ; rume nl . al ; ion , one may exten ( 1 this usage l ) ylooldng for sources of 1Although the saml ) h ! rule m ' e in the format of I , FG , nothing of them c'th ( )d ( )logy relies ( m the choice of linguistic ( n " computal . ional 1 ) aradign L The notation : ?/*/+ represent ot ) -tionality/iteration including/exchtding zero occurrences on categories  , erel ) resents the eml ) ty string . Annotations to a cat ( . ' gorysl)ecify equality (=) o1" , ' ~( ! tmembers hit ) ( C ) of feature values , or non-existel , ceofi ~ aturcs(~) ; they are terl ni-nat (! dl ) yas ( , micolon(;) . Disjunclions are given in I ) ra ( : ( ! s ( -" "1-''  ) ' I " ( 4- )  " " '  , , . , t , ~ x ', , , ' i ,, bl ? . ~, ', ' prc . ~, . , ti , , gt . l , , , f , , ~,- lurest . ruclur (! corresponding t . o the mother (( laugh / . er ) of th . e rule . o , ( for optimal il . y ) represents the sent . ence's multiset valued . %, mbolicprojc'ction . Com , nents are enclosed in quo-lati ( mmarks (" .   .   .  ") . Cf . ( K:tplan and Bresnan , 1982) for an intro(lucti()nto1 , 1 , *14 notation . 
119 overgeneration ( cf . Sec . 4 . 3) , and may also improve the quality of the testsuite  , in terms of coverage ( of . 
See . 4.1) and economy ( el . See . 4.2).
Complementing other work on testsuite construction  ( cf . Sec . 4 . 4), I will assume that a . grammar is already available , and that a test suite has to be constructed or extended  . While one may argue that grmnmar and testsuite should be developed ill parallel  , such that the coding of a new gralmnar disjunct is accompanied by the addition of suitable test cases  , and vice versa , this is seldom the case . Apart from the existence of grmn mars which lack a testsuite  , there is the more principled obstacle of the evolution of the grmn mar  , leading to states where previously necessary rules silently loose their useflf lness  , because their flmction is taken over by some other rules  , structured differently . This is detectable by instrumentation , as discussed in See . 4 . 1 . 
On the other hand , once there is a test suite , it has to be used economically , avoiding redundantests . 
Sec . 4 . 2 shows that there are different levels of redundancy in a test suite  , dependent on tile specific grammar used . Reduction of this redundancy can speed Ul ) the test ; activity , and give a clearer picture of the grammar's pertbrmance  . 
4.1 Test sulte Completeness
If the disjunction coverage of a testsuite is 1 for some grammar , the test suite is complete w . r . t , this grammar . Such a testsuite can l'eliably be used to monitor changes in the gramlnar : Any reduction ill the grammar's coverage will show Ul  ) ill the failure of some test case ( for negative test cases , cf . Sec . 4 . 3) . 
If the test suite is not complete , instrumentation can i ( lent ii \ [ y disjuncts which are not exercised . These might be either ( i ) approl ) riate , buttmtested , dis-juncts calling for the addition of a test case  , or ( it ) ill-appropriate disjuncts , for which a grammatical test case exercising them cannot be constructed  . 
Checking completeness of our local testsuite of 1 . 787 items , we found that only 1456 out of 3730 grammar disjuncts in our German grammar were tested  , yielding T , t is = O . 39  ( the TSNLP test suite containing 1093 items tests only 1081 disjuncts , yielding Tdi ,  = 0 . 28) . 2 Fig . 3 shows an example of a gap in our test suite ( there are no examples of circuln positions )  , while Fig . 4 shows an inal ) l ) roppri-ated is junct thus discovered ( the category ADV adj has been eliminated in the lexicon  , but not in all rules ) . Another error class is illustrated by Fig . 5 , which shows a disiunct that can never be used due to an LFG coherence violation  ; tile grmn marisill-consistent here . a2 There are , of course , m~parsed but grammatical test cases in both testsuites  , which have not been taken into account in these figures  . This exl ) lains the dill ' ere , lee to the overall number of 1582 items in the German TSNLP testsuite . 
3Tcst cases using a free dative pronoun may be in the test- 
PPs td = ~ P1) rae $=$;
NPs td$=(I"OBJ);e DISJUNCT-011 Co.;
IP cireum $= ?;
DISJUNCT-012 Co*"mmseddisjulmt ";
Figure 3: Appropriate untested disjunct
ADV PeDISJUNCT-021 Co*;
IADV adj $ = $
DISJUNCT-022Eo*"unuseddisjunct ";
ADV std $=1"
DISJUNCT-023 Co*"unuseddisiunct ";
I .,.).
Figure 4: hmp propriate disjunct 4 . 2 Testsuite Economy Besides being coml)lete , a test suite must be economical , i . e . , contain as few items as 1) ossible . Instru-nmntation can identify redundantest cases  , where re ( lundaney can be defined in three ways : similar it y There is a set of other test cases which jointly exercise all disjunct which the test case under consideration exercises  . 
equivalence There is a single test case which exercises exactly the same combination  ( s ) of dis-juncts . 
strict equivalence There is a single test case which is equivalent o and  , additionally , exercises the disjunets exactly as of t(mas , the test case under consideration . 
Fig . 6 shows equivalent test cases found in our testsuite : Example  1 illustrates the distinction between equivalence and strict  , equivalence ; the test cases contain different numbers of attributive adjectives  . Example 2 shows that our grammar does not make any distinction between adverbial usage and secondary  ( subject or object ) predication . 
The reduction we achieved in size and processing time is shown in Table  1  , which contains measure-lnents for a test run containing only tile  1  ) arseable test cases , one without equivalentest cases ( for every set of equivalentest cases , one was arbitrarily selected ) , and one without similar test cases . 
The last was constructed using a siml ) le heuristic : Starting with the sentence xercising the most dis-juncts  , working towards sentences relying on fewer disjuncts  , a sentence was selected only if it exercised a disjunct wtfich no previously selected sentence x -ercised  . Assulning that a disjnnct working correctly suite  , but receive no analysis since the grmmnatical fimction FREEDAT is not defined as such in the configuration section  . 

VP args = 5,.,
IPRON std
I ....
$=  ( TFI ( EEDAT )   ( $ CASE ) = dat ( $ PION-TYPE )  = 1 ) er s ~ ( q - ( )> . J2)
DISJUNCT-041C-o *" unused disjun(;t ";
Figure 5: hl consist , ent , disjunct 1 tinguter alter We inting uter all ; ertrockener\Vein'agoodold(dry ) wine . '2 Erifit das Schnitzelroh . 
Eri Btdas Schnitzelna ( ;kt,
Erit . Itdas Schnitzels (: hnell.
'lie cats the , ~ chnitzeln akcd/ra . lv/q . uict cIy . ' Figure 6: Sets of equivaleul ; t , est cases once will work corre ( 'tly more than ( )11 (  ; ( ~: we di (1 no l ; (: onsiders t . rict , equivalence . 
We envisage the following use of this redundancy detec:ion :  '1'here ch~al'lyar (  ; linguist ; i (: r(~asollsl ; odis-t . inguish all 1; est cases ill ( ~ xaml)le 2 , s()l ; hcy (: almol simply be delel ; cd from the t(~'st ; suit , e . Ilath ( . ' r , t . heir equivalence indicates that . the grammar is not 3, eliperfect . ( or never will be , it'it , remains l/urely syntactic ) . Such equivalences couhl be in t , erl ) reted as ar ( m finder which linguistic distinclions need to lie in corl  ) orated into the grammar . Thus ,  1 ; hislev ( q ( ) f r ( ' ( hm ( lancy may drive your grammard ( w ( ~h ) l ) mentagenda . The h~vcI of c(tuivalell c(~C ; /lll ) et ; /k ( li its a limited in t(wa cl ; ionlesl : '\]' h ( ' s ( ' lesl: ( ' as ( ' srcl ) r ( > scnl ; one ~(-( ) ml ) h' . lx~'s(~lecl ; ion of grammar disiml(:l , s , and ( given l , hc grammar ) lhere is no lhing we can gain 1 ) y checking a test case if an equivale nl ; one was tested . Thus , this level of redundan ( ' y may 1 ) e used for ensuring the quality of graml nar changes prior t  , otheir incorporation into the t ) roducl ~ ionversion of t , he grammar . The level of similar it . y (: onl ; ains much le . ~ ssl , est cases , and does not t , esl , any ( systenml , ic ) intera(:tion1)et . we end is juncts . Thus , it may 1) 1; use (1 during ( levch/1) ment . as a quick ru\]e-ofthunll )  1 ) rote-dure detecting serious errors only . 
test relative runtime relative eases size ( set ) nm time
TSNLP testsuite l ) arseable 1093   100%   1537   100% no equivalents 783   71%   665  . 3 43% no similar cases 214 19% 128 . 58% local tests nite\] ) arseable 1787   100%   1213   100% no equivalents 1600   89%   899  . 574% no similar cases 331 18% 175 . 0 ld % ~1 ~ d ) le1:Reduction of ~ l~st suites l ) erTestt ' ~ ill Cleicht . 
\]) ieschhdL,n .
Mans(:htat~n .
Dieserschlafen.
Ichs chhffen.
\]) erschlafen.
\] criers chlafen.
l ) erieniges ch hff en .
.lenerschlafen.
Keinerschlafen.
\ ]) ersel beschlaflm.
Erschlafen.
Irg end jemand schlafen.
Diesel beschlat ~ n.
Dasschlafen.
Einesschlafen.
Jedeschlafen.
Dieses schlaf'en.
Einesch lafen.
Meinsschlafen.
Dasjeniges (; hlafen.
Jedesschlaflm.
Die . ie nigeschlat'en.
Jenesschlafen.
Keinesschlafen.
Dasselbesch lafen.
Figure 7: S(mi ; ence~s relying on SUS l ) icious di@mct 4 . 3 Sources of Overgeneration To cont , rolover genel'a . tion , al ) l ) ropriately marked un-grammati ( ' alsentences are iml ) (n'tant in every testsuite , lnsl ; rulnentation as 1 ) rol ) osed here only looks at successful parses , but . cansgi\]ll ) eaI)l ) lied in this C ( ) lll ; (? xt:If ~/ 11 lll gfall lIll ~/ l ; iealt . est . (; a serecuives all analysis , insl ; rumeld ; at , ion informs usa ) ou I , t , he dis-julmtSused in the incorrect , analysis . One of these ( lis . juncts must lie incorrect , or the sentence would not . have receiv ( xta solution . We exploit , this infor-mati(m by a ecumulat . iollacross the entire l ; estsuite ~ looking to t(lisjuncts t , hatal ) t ) ear in mmsually high 1) report . ion in l ) arseable ml granmmtical test . cases . 
Int : his rammer , six grammar disjuncts are single doul . \]) y the l ) arse al)h ~ ml gramlnat , icalt . est cases in th(~TSNLI)t(,sI suite . Therues1l ) rominen;di@m(:t . 
al ) l ) ears in 26 senl(~n(;(>(list . e(t in Fig . 7) , of which lhetopleft group is in ( l ( > dgrmmnali ( ' al and th ( ~rest fallint . ( ) Fw ( /  ( : lasses : A partial V1 ) with object NP , inlert ) reted as an imt/(n'a t , iv(~sentence (1) el ; tom left ) , and a weird interaction with the token iz cr incorrectly " handling cal  ) it . alization ( right . groul )) . 
15 trfl'om being conclusive , t , hc similarity of theses ( nlt . ences derived from a suspicious grammar dis-junct , and the ( ' lear relation of the senten ( -esto only tw ( /exact . lySl ) ceifial ) legram in a rerrors make it 1 ) lau-sil ) le that this approach is very i ) rolnising ill detecting the sources of ovcr gener ~tion  . 
4.4 Other Al ) l ) roaches to T cstsuite
Construction
The delicacy of testsuite construction is acknowledged in  ( EAGLES ,  1996 , I ) . 37) . Althought . here are amnnber of eflbrts to construct reusable testsuites  , none has to my knowledgex l ) lored how ex-ist . ing grammars can l ) eexl ) loited . 
Starting wit . h(Flickingerel ; al . , 1987),; (; si . suites have l ) ecll ( \[ rawn 111 ) fix ) In a linguistic viewpoint , in-for'm , cd by \[ lhcI study of linguistie , s and \[ reflecting \] the 9' ram'm , atical issues that linguists h , avc concerned them , selves with , ( Flickinger et al ,  1987 , p . 4) . A1-(Balkan ,  1994) , all the test suites reviewed there also seem to follow the same methodology  . The TSNLP project ( Lehmann and Oepen , 1996) and its successor DiET ( Netter et al ,  1998) , which built largenml-tilingual testsuites , likewise fall into this category . 
The use of corpora ( with various levels of mmota-tion ) has been studied , but the reconmmn dations are that much manual work is required to turn cori  ) us examples in to test cases ( e . g . , ( Balkan and Fouvry , 1 . 995)) . The reason given is that corpus sentences neither contain linguistic  1  ) he no menain isolation , nor do they contain systematic variation . Corpora thus are used only as an inspiration . 
( Oepen and Flicldnger ,  1998 ) stress the interdependence between application and test suite  , but don't comment on the relation between grammar and test suite  . 
5 Genre Adaptation
A different al~t ) lication of instrumentation is the tailoring of a general grammar to specific genres  . All-purpose grammars are 1 ) lagued by lexical and structural aml ) iguity that leads to overly long mm times . 
If this ambiguity could be limited , parsing efficiency would iml ) rove . Instrunmnting a general grammar allows to automatically derive specialized subgrmn-mars based on sample corpora  . This setup has several advantages : The larger the overlap between gel>res  , the larger the portion of grammar development work that can be recycled  . The all-lmr pose grammar is linguistically ltlo reinteresting  , because it requires an integrated concept , as oI ) posed to several separate genre-specific grammars . 
i will discuss two ways of improving the efficiency of parsing a sublanguage  , given an all-purpose unification gramnmr . The first consists in deleting unused disjuncts , while the second uses a staged parsing process . The experiments are only sketched , to indicate the apl ) licability of the instrumentation technique , and not to directly compete with other proposals on grmn nmr specialization  . For example , the work reported in ( Rwner and Smnuelsson , 1994; Samuelsson ,  1994 ) diifers from the one presented belowill several aspects : They induce a grammar from a treebank  , while I propose to mmotate the grammar based on all solutions it produces  . No criteria for tree decomposition and category specialization are needed here  , and the standard parsing algorithm can be used . On the other hand , the efficiency gains are not as big as those reported by  ( Rayner and
Salnuelsson , 1994).
5.1 Restricting the Grammar
Given a large sample of a genre , instrunmntation allows you to determine the likely constructions of that genre  . Elinfinating unused disjuncts allows faster
Descriptor Content Coverage




Copier/Printer User Manual 89%
Car Maintenance Instructions 76%
News (5-30 words per sentence ) 42%
Verb-tinal subclauses from News 75%
Table 2: Corpora used for adaptation parsing due to a smaller gralm nar  . An experiment was conducted with several corpora as detailed in Table  2  . There was some eft ' of t to cover the corpus HC-DE , but no grammar development based on the other corpora  . The NEWS-SC corpus is part the corl ) uS of verb-final sentences used by ( Beil et al ,  1999) . 
A training set of 1000 sentences froln each corpus was parsed with an instrumented base grammar  . From the parsing results , the exercised grammar disjuncts were extracted and used to construct a corl  ) us-specific reduced grammar . The reduced grammars were then used to parse a test  ; set of another 1000 sentences Dora each corpus . Ta Me 3 shows the lmrt ' or nmn ceiln provement on the corpora : It gives the size of the grammars in terms of the number of rules  ( with regular expression right hand sides and feature annotation  )  , the number of arcs ( corresponding to unary or binary rules with disjunctive feature annotation  )  , and the number of dis-juncls ( unary or binary rules with tmique feature annotation  )  . The number of mismatches counts the sentences for which the solution  ( s ) obtaine differed fl ' om those obtained with the base gramnmr  , while the number of add it i ( ms counts these lltellces which lid not receiw ; a1 ) arse with the base grannnar due to resource limitations  ( runtinle or memory )  , but received one with the reduced granmmr . The other cohnnns give timings to l ~ rocess the total corlms  , and the longest and average processing time per sen-ten  ( e ; time is in seconds . The last cohm m gives the averagen mn be r of solutions per sentence  . 
Due to the sampling of a genre , the grammars obtained can only be approximate . To detern fine the relation of the smnple size to the quality of the grmn mar obtained  , the coverage of random fragment gram'mars was measured in the tbllowing way : Ran-domly select an mnber of sentences fl ' om the total corpus  , construct ( in the same way as described a loove for the reduced grammar  ) a fragment grmn-mar , and detern fine its coverage on the test set fl'om the respective corpus  . The graphs in Fig . 8 show how the coverage and runtime relate to the number of sentences on which the fragnmnt granunars are based  . The leftmost data point ( x value 0 ) describes the performance of the reduced gramlnar on the training set  , while the rightmost data point describes its perfbrmance on the test set  . The data points in \] ) etween represent fl : agment grammars based on as qk-~ng"Y ~ ~  , ~  . 
ca . . bido ? mg ~ abb
Corl ) us IIC-\])E1) ase grammar 18536691 . 1564 n/~tl:/a\[7692 . d > 3007 . 1 10 . 1 rcducc'd graminar (938) 1129 60373 901J 2089 . 4 162 . 7 1 . 9 17 . 61953728\]160611/t1<128 . !) >300 . 3 1 . 5 53<1 3072 1 <144 . 2 11 . 3 0 . 4
Corpus\VIIB1 ) as e grammar r ( xlu ( : edglU/llllll " ( 559 ) Tal ) le3:\]'erli ) rman ( ' e of r (  . ' ( hleed grallllllars lOO\[q?t~--~IIC\[~ ) E
NEWS-SC-
WIIBkAI 200   300   400   500   000   700 nLm/berols anlonces used for gfain mar construction 3000   -2500   -1ooo   501  "
W ) IB-
NEWS ~ SC' 1   O0   200   300   400   500   600   700   800 nut :: be ) of sentences used lotg\[arn mar construction Figure  8: l ) erf ( )rnmnc ( ~  ( ) f fl' ; tgl lient ; gralt llnars Il U/ll3" , % elll : ellces . : is giv(n\]) y(h(x axisvahl(! . 
' . File result , srel ) or lx ' (1 here r(~l ) l'(LSOll ,  ( , heminimal l ) el'l ~) l : lllall c ( ; g ; Iillduo Lo ( ; lit ; t':t ( ; l ;  1 ; tl ; II , LII ( , COllS ( ; l'llC-l ; ion of reduced ~/11 ( lt'lU/~lll(ll , ~I'tllIIlIU'S lifelI()J , based on ( . he corre('l , solul ; i(ms for the ( , raining , qell-l ; ellce , q , ) Ill ; l ' ; tgh(~d'011 all solulions l ) rodu(:ed1) y( ; hebase grammar . The (: OllSt , rucl ; ion of alart ~ e-s(:ale( ; reel ) ank with manually veriiie ( l solutions is un ( h ! r way but has no l ; ) ' el . 1) rogjresse ( lfarenough ( ; () serve as input for this ext ) erimeld ;  . Even with this systenl-atic , but (: urable error ,  ( ; lie reduction reduces over all processing by a factor of four  . The mmd ) er of solutions is constant becaus ( ~ only unused disjuncts are eliminated ; this will change if the treebank solutions are used  (  ; o construct l ; here du (: odgl ' ~ llllllat ' . 
5.2 Staged Parsing
Even eliminat , ing only unlil : ely disjunets necessarily redllces L\]Io coverage of the gramnmr  . A sequence of l ) arsing stages allows one to profit front a small and fast  ; granmmr as well as from a large and slow one . 
S~age ( tl ) arsing applies difl'erent grammars one after the other to the inlmt  , m : ( ; il one yields a solution , which terminates the l ) rocess . In our case , a grammar of sl ; age'l ~ , q-1 in (: ludes the grammar of stag0 t ~ , 1) ttl ; this nee (1 not bet : he case in gener ; d . 
"1'() r((lu(x'thev ; u ' ial ) iliLy for an ( Xl ) ( ; rimen L : I as- , SlllIIO ( ; ll . ' ees ; , :/ . ~( s : Tit (' . :\[ irst , ill('hld('s frequcnl ; ly used di , ~ jun('I ; s , Idles ) COll(illfFt ) qll(lltdi@m(:ts , alt ( ll : h0 thir (1unu . ~ edisjuncts . This ensur (? , ~(; heflll(x ) vt , r-age of the base grammar , \] ml ; allows lo focus on fre-(lu(m ( . con . sl : ru(q , ions in th (, first parsing stage . The t ) r t ) (: t ; dure is similar as \]) c for e : l " rom ( . he solutiol lS of a L raining sol . , ; t staged . qIYt ? Itlltitl " iS construc . lx:d . 
( ) urrel ~ tly , exl ) erimenI ; sare l ) erforlned ( ; odei ; ermine all sefll detini ( ; ion of'f requellt , ly used ' . In del ) endent from the ac ( , ual performance gains finally obtained , the apl ) lication of instrulnentation allows a system-atie exploration of the possible configurations  . 
5 . 3 Other approaches to grammar adal ) tation ( Iayner and Samuelsson , 1994; Ilayner and Carter , 1996; Sanmelsson , 1994) present a grammar Sl ) eeial-izal ; ion ( , eclmique for unification gran : In ars . Fronlatl ' eebanl : of the sublanguag c , they induce a specialized gramnlar using fewer ' re  , a cre ~" ltlc , s " which colrespond to the application of several original rules  . 
They report an average speed-ul ) of 55 for only the parsing phase ( taking lexical lookup into accomlt , thesl ) eed-upfael ; or was only 610) . I ) ue to (: he ( lerival . iOll ( ) fJ ; \] le ~ ralllll ~/ rfr Oll tacorl ) ll S Sample , increase of precision of 1 . 6% . Tile differences to the approach described here are clear : Starting from the grammar  , rather than from a treebank , we annotate tile rules , rather than inducing them from scratch . 
We do not need criteria for tree decomposition and category specialization  , and we can use the standard parsing algorithm . On the other hand , the efficiency gains are not as big as those reported by  ( Rayner and Carter ,  1996 )   ( but note that we cannot measure ilarsing times alone  , so we need to coral ) are to their speedup factor of 10 )  . And we did not ( yet ) start from a treebank , but froln the raw set of solutions . 
6 Conclusion
I have 1 ) resented the adaptation of code in strmnenta-tion to Grammar Engineering  , discussing measures and iml ) lementations , and sketching several applications together with preliminary results  . 
The main application is to iml ) rove grammar and testsuite by exl ) loring the relation between both of them . Viewed this way , testsuite writing can benefit from grammar develop nlent because both describe the syntactic on structions of a natural language  . Testsuite systematically list ; these constructions , while grammars give generative procedures to construct hem  . Since there are currently many more grammars than testsuites  , we may reuse the work that has gone into the grmnmars for the improvement of test suites  . 
Other al ) l ) lications of instrumentation are possi-1 ) le ; genre a dal ) tation was discussed in some depth . 
On a more general level , one may ask whether other methods fl'om SE may fruit flfl lyal  ) ply to GE as well , 1) ossibly in modified form . For example , the static analysis of programs , e . g . , detection of unreachable code , could also be applied for grammar development to detect unusable rules  . 

L . Balkan and F . Fouvry .  1995 . Corpusbased testsuitcgeneration . TSNLP-WP2 . 2, University of

L . et al Balkan .  1994 . Test Suite Dcsign Annotation Scheme . TSNLP-WP2 . 2, University of Essex . 
F . Beil , G . Carroll , D . Prescher , S . Riezler , and M . Rooth .  1999 . Inside-outsid estimation of a lexicalized PCFG tbrger lnan  . In Prec . 371, h Annual Mecting of the ACL . Maryland . 
F . Ciravegna , A . Lavelli , D . Petrelli , and F . Pianesi . 
1998 . Developing language reesources and al ) pli-cations with GEPPETTO . In Prec . 1st Int'l Conf . 
on Language Resources and Evaluation , pages 619625 . Granada/Spain , 2830 May 1998 . 
EAGLES .  1996 . Evaluation of Natural Language Processing Systems  . Final Report EAG-EWG-

D . Flickinger , J . Nerbonne , I . Sag , and T . Wasow .  1987 . Toward Evaluation of NLP Systems . 
Hewlett-Packard La . boratories , Pale Alto/CA.
A . h'ank , T . H . King , J . Kuhn , and J . Maxwell . 
1998 . Ol ) timality theory style constraint ranking ill largescale LFG grammar  . In Prec . of the LFG98 Confcrcnce . Brisbane/AUS , Aug 1998,
CSLI Online Publications.
W . C . Hetzel .  1988 . The complete 9uide to s@ware testing . QED Infommtion Sciences , Inc . Welles-ley/MA 02181 . 
R . M . Kaplan and J . Bresnan .  1982 . Lexical-function algrmmnar : A formal system for grammatical rel/resentation  . In J . Bresnan and R . M . 
Kaplan , editors , The Mcntal Representation of Grammatical R clations  , pages 173-281 . Cambridge , MA : MITl?ress . 
S . Lehmann and S . Oel ) en .  1996 . Tsnl1 ) -test suites for natural language processing . ~\[ ll Prec . 16th , Int'l Co~?on Computational Linguistics , pages 711-716 . Copenhagcn/DK . 
K . Netter , S . Armstrong , T . Kiss , J . Klein , and S . Lehman .  1998 . Diet ; -diagnostic and evaluation tools for : all ) applications . In Prec . 1st Int'l Conf . on Language I~esov , rces and Eval'ua-tion , pages 573579 . Granada/Spain , 2830 May 1998 . 
S . Oct ) ca and D . P . Flickinger .  1998 . Towards systematic grmnmar profiling : testsuite techn  . 10 years a fro . Journal of Computer Speech and Language ,  12:411 435 . 
M . Rayner and D . Carter .  1996 . Fast parsing using 1 ) runing and grammar specialization . In Prec . 
3/fth Annual Meeting of th cACL . Santa Cruz,

M . IXayner and C . Sanmelsson .  1994 . Corpusbased grmmnar specia . lization for fast analysis . In M . -S . AgnSs , H . Alshawi , I . Btrean , D . Carter , and K . Ceder , editors , Spohen Langv , age Translator : First-Year Report , pages 41-54 . Report CRC-043,
Cmn bridge/UK : Sll I International.
C . Smnuelsson .  1994 . Grammar spezialization through entropy thresholds  . In Prec . 32 rid Annual
Meet in 9 of the ACL.

