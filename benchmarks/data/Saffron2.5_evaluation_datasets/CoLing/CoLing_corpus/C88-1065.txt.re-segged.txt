Exploiting Lexical Regularities in
Designing Natural Language Systems
Boris Katz
Artificial Intelligence Laboratory
Massachusetts Institute of Technology
Cambridge , MA 02139
Beth Levin
Department of Linguistics
Northwestern Unlversigy
Evanston , IL 60208
They'veatemper , some of them -- particularly verbs : they're the proudest--adjectives you can do anything with  , but not verbs -- however , I can manage the whole lot of them \[-- Lewis Carroll  , Through the Looking-Glass
Abstract
This paper presents the lexical component of the STAttT Question Answering system developed at the MIT Artificial Intelligence Laboratory  . START is able to interpret correctly a wide range of semantic relationships associated with altern at expres-sions of the arguments of verbs  . The design of the system takes advantage of the results of recent linguistic research into the structure of the lexicon  , allowing START to attain a broader range of coverage than many existing systems while maintaining modular organization  . 
1. Introduction
If asked " Did Sally eat ?" after having been told that Sally at eapear  , speakers of English would no the sitate to answer "Yes "  . 
But we would not expect English speakers to answer "Yes " if asked " Did David dress ? " after being told that David dressed the baby  . Here the appropriate answer would be " I don't know "  . 
Computational linguists engaged in building Question-Ans-wering system should find these examples thought-provoking  . 
Two sequences consisting of a statement followed by a question which appear to be parallel syntactically  ( transitive use of a verb in the statement , intransitive use of the same verb in the question  ) elicit quite different responses . The simple syntax of these pairs is unlikely to pose a challenge for the parsers used in most existing systems  . The problem is that the intransitive uses of the two verbs  , eat and dress , receive very different interpretations . Thus the intransitive use of eat found in the question " DidSall yeat ? " implies the existence of an understood but unexpressed ' object that is interpreted as a prototypl caltype of food or a meal :  ( 1 ) Sally at eapear . ~ Sallyate . ( i . e . , Sallyate some food . ) The question " Did David dress ?" on the other hand does not mean ~ Did David dress something one typically dresses ?'  , it means ' Did David dress himself ?': ( 2 ) David dressed the baby , = 7 ~ David dressed ( i . e . , David dressed himself . ) Natural language systems hould be able to recognize that the relationship between transitive and intransitive dress is not the same as that between transitive and intransitive at  . 
A large number of English verbs have both transitive and intransitive uses  . Interchanges parallel to the one described for eat are possible with a wide range of verbs :  ( 3 ) Jessie a typed a letter . Did Jessicaty pe ? Yes . 
(4) Gabriell as wept the floor . Didshesweep ? Yes . 
(5) Miriam read the book . Did Miriamread ? Yes.
But the behavior of the verb dress is not exceptional  . Another set of verbs including bathe , change , shave , shower , and wash behave like it . For example , these verbs show the same entailments as dress : ( 6 ) Carla bathed the dog . := ~ Carla bathed ( i . e . , Carla bathed herself . ) (7) Jill washed the sweater . = fi ~ Jill washed ( i . e . , Jill washed herself . ) (8) Peters haved Tom . ~ Peters have d(! . e . , Peters have d himself . ) The different relationships between transitive and intransi~give uses of verbs cannot be ignored in the design of a natural language system and its lexical component  , The most obvious way to handle these relationships i to add information to the lexical entries of each verb with transitive and intransitive uses  . 
While such an approach is viable when a system has a  smM1 lex~icon ~ it becomes less tractable as the lexicon grows larger since it requires a tremendous increase in the amount of idiosyncratic information which must be registered in the entry of e a  ( -hverb . 
The examples discussed so far illustrate just a few of a wide range of relationships between alternate x pressions of the arguments of verbs that must be correctly interpreted by any natural language system that alms at substantial coverage of English  . We believe that what is required in order to implement a system that meets these demands is an understanding of English lexical organization  . For this reason we draw on recent theoret leal linguistic investigations into the lexical knowledge possessed by native speakers of English carried out by the MIT Lexicon Project  ( Rappaport , Levin , and Laughren\[1988\] , Levin\[1985\] , Hale and Keyser\[1986\] , Levin and Rappaport\[to appear \]) . These studies have established a range of semantic-syntactic interdependencies exhibited by semantically coherent classes of verbs and have identified a number of essential classes of verbs  , as well as the central properties characterizing verbs of each type  . 
The results of this work have been used in the design of a lexical component for the START natural language system developed at the MIT Artificial Intelligence Laboratory  ( Katz\[1988\] )  . In this paper we show how these rest tlgs allow STAtt2\[' to attain a broade range of coverage than most existing systems while maintaining modular organization  . 
3 16   2o Assu\[nptlons about Lexicai Organization A verb d  , ~notes an action , state , or process involving one or more participants , which we refer to as the arguments of the verb . Solae verbs may express their arg tunents in more than one way  , sometimes wi~h slightly different semantic interpretations  . 
We sayth * ~ t such verbs patriciate in argument alternations  . We have seen that certain verbs have both transitive and intransitive uses  , and That the relationship between the uses is not uniform across all eerbs  ; rather , it is a property of the verb involved . 
We say the ft such verbs participate in transitivity alternations  , a subclass of argument alternations . So far , we have seen the indefinite object alternation , in (9) , and the reflexive alternation , in (10): (9) Sally ~ deapear . : ~:,-, ~ Sallyate . ( i . e . , Sallyate some food . ) (10) David dressed the baby . : : ~ David dressed . ( i . e . , David dressed himself . ) These are only two of about a dozen transitivity alternations found in English  . ( See Atkins , Keg / , and Levln\[1986\] , Hale and Keyser It 9~t6\] , Levin \[1985\] for a description of various other altern ~ tion . ~ l . ) A question that a system designer might ask is whether the argument Mternations a verb participates in are predictable or whether they are merely an idiosyncratic property of that w ~ rt  ,  . This question is clearly also of linguistic interest  . 
Argument alternations , including transitivity alternations , have receiw ~ d considerable attention from theoretical linguists  . 
It t in ' as out that each alternation is associated with particular semantic types of verbs  . Thus the verbs participating in the indefinite object alternationate all activity verbs  ; most of them describe typical occup . ations : a(11) drink , eat , file , iron , plow , read , sweep , type , write . . . .
The verb spa~rtieipating in the reflexive alternation are all verbs of grooming :  ( 12 ) bathe , brnsh , change , comb , dress , shave , shower , wash ,   . . . 
Studies of phenon : en a such as those described here reveal that Englis : h verbs are organized into classes on the basis of shared components of meaning  . The members of these classes share certai:: syntactic properties  , specifically properties concerning the possible expressions of their arguments  . To state this differently , certain linguistically relewntaspects of a verb 's meaning serve as a pointer to its place in the organizational scheme of English verbs  . Once this place is identified , various syntactic properties of a verb can be determined  . 
For linguists working on the lexicon the study of alter-inations can provide insight into linguistically relevant aspects of meaning due to the interdependency between the syntactic and semantic properties of a verb  . ( For instance , see Hale and Keyser \[1987\] for a discussion of another transitivity alternation  , the middlettlternation , from this perspective ) . For eompttta-tional linguists this characteristic of lexicM organization suggests a modtflar system design : many lexical properties can be associated with verb classes  , and need not be registered in the lexical entries of individual verbs  , which can simply indicate class rnember ~ hip . These ideas are incorporated into the design of tb  . eSTART system , as we describe in detail in the remainder of the paper  . 
1 In certain circumstances , a much wider range of English transitive verbs show an intransitlve use with an indefinite object interpretation : when they are used by people whose activity involves the action denoted by the verb to describe the activity  . For example , the verb stuff does not usually occur without an object  , ~ She stuffs , but if this verb is used to describe the activity of someone Who stuffs pillows in a pillow -factory  , then it would be M1 right to use the verb : ntransitively . 
3. An Overview of the START system
The START natural language system ( SynTactic Analysis using Reversible Transformations  ) consists of two modules which share the same Grammar  ( see Katz\[1980\] , Katz and Winston\[1982\]) . The understanding module analyzes English text and produces a knowledge base which incorporates the information found in the text  . Given an appropriate segment of the knowledge base  , the generating module produces English sentences . A user can retrieve the information stored in the knowledge base by querying it in English  . The system will then produce an
English response.
START has been used by researchers at MIT , Stanford University , and the Jet Propulsion Laboratory for constructing and querying knowledge bases using English  . ( See , for example , Winston\[1982\] ,  [1984\] , Winston , Binford , Katz , and Lowry\[1983\] , Doyle\[1984\] , Katz and Brooks \[19871) . 
START rearranges the elements of the parse tree it constructs into embedded ternary expressions  ( T-expressions ) by tying together the three most salient parameters of a sentence  , the subject , the object , and the relation between them , < subject relation object > . For instance , the sentence ( 13 ) Gabriella might buy some stickers will result in the T-expression < Gabriella buystickers >  . 
Certain other parameters ( adjectives , possessive nouns , prepositional phrases , etc . ) are used to create additional T-expressions in which prepositions and several special words serve as rela  . -finns . 
The remaining parameters -- adverbs and their position  , ten-se , auxiliaries , voice , negation , etc . -- are recorded in a represen . 
rational structure called history . The history has a page pertaining to each sentence which yields the given T-expression  . 
When we index the T-expression in the knowledge base  , we cross-reference its three components and attach the history H to it  . One can thus think of the resulting entry in the knowledge base as a " digested summary " of the syntactic structure of 
English sentences.
In order to handle embedded sentences , START allows any T-expression to take another T -expression as its subject or ob--jeer  . START can analyze and generate sentences with arb : trar-ily complex embedded structures  . 
We conclude our description of START with a brief overview of how the system answers questions  . Questions are requests for information from START 's knowledge base  . In order to answer a question START must translate the question into a T-expression template which can be used to search the knowledge base for T-expressions which contain infornmtion relevant o providing an answer to the question  . We illustrate the actual question ~ answering process with an example  . Suppose that as a result of analyzing and indexing a text containing sentence  ( 14 )  , the knowledge base contains T-expression ( 15 ) :  ( 14 ) Mary presented Paul with a gift . 
(15) << Mary present Paul > with gift >
Now suppose that a user asks START the following wh-question :  ( 16 ) Whom did Mary present with a gift ? In the context of  . (14) the answer is Paul . In order to determine this , the system must first turn the question into a T -expression template that can be used to search the knowledge base  . The first step in this process is to undo the effects of the ~ h-movement transformation that is used to create English wh-questions  . To do this , START must find the place in sentence ( 16 ) that the wh-word whom came from and then insert the wh-word in this position : Next the language understanding system leads sentence  ( 17 ) through the same flow of control as any other declarative sentence and produces the following T -expression which serves as a pattern used to query the knowledge base :  ( 18 ) < < Mary present whom > with gift > Treating whom as a matching variable  , the system feeds T-expression ( 18 ) through a matcher in order to determine whether there is anything in the knowledge base that matches  ( 18 )  . The marcher finds the T-expression created from ( 14 ) :  ( 19 ) < < Mary present Paul > with gift > and the language generation system then uses this T -expression to produce the English response to question  ( 16 ) :  ( 20 ) Mary presented Paul with a gift . 
START handles yesno questions in a similar fashion  . Suppose that START had been asked theyes no question  ( 21 ) Did Mary present Paul with a gift ? As in the wh -case  , START would turn this question into a T -expression template that could be matched against he T-expressions in the knowledge base  . The difference between yea-no and wh-questions is that the T-expression template generated by a yesno question would contain ovariables  . The question above would generate the template < < Mary present Paul > with gift > which would match against  ( 19 )  , allowing the system to answer : (22) Yes , Mary presented Paul with a gift . 
4. Introducing S-rules
Since T-expressions in the START system are built using the pattern < subject relation object > at every level of embedding  , they mimic the hierarchical organization of English sentences  . As a consequence , sentences differing in their surface syntax but close in meaning are not considered similar by the system  . For example , given sentence (23) as input , START will create an embedded T-expression (24) , whereas a near paraphrase , sentence (25) , will generate T-expression ( 26 ) :  ( 23 ) Mary presented Paul with a gift ( 24 ) < < Mary present Paul > with gift > ( 25 ) Mary presented a gift to Paul ( 26 ) << Mary present gift > to Paul > Speakers of English know that sentences  ( 23 ) and ( 25 ) both describe a transfer of possession . In both sentences , the gift is the transferred object , Paul is the recipient of this object , and Mary is the agent of the transfer ~ despite different syntactic realizations of some of these arguments  . It seems natural that this kind of knowledge be available to a natural language system  . However , START , as described so far , does not consider T-expressions (24) and (26) , which are associated with these sentences , to be similar . 
The difference in the T-expressions becomes particularly problematic when START is asked a question  . An example will clarify this point . Suppose the input text contains only one present sentence  ,  (27) , and the knowledge base cont Mns only the corresponding T-expression  ,   ( 28 ) :  ( 27 ) Mary presented Paul with a gift ( 28 ) < < Mary present Paul > with gift > Now suppose the user asked the following question :  ( 29 ) To whom did Mary present a gift ? after being told sentence  ( 27 )  , START would not be able to answer it . This question presents a problem for START because T-expression  ( 30 ) produced by question ( 29 ) will not match T-expression ( 28 )  . 
(30) << Mary present gift > to whom >
START is unable to answer such questions because it is unaware of the interactions between the syntactic and semantic properties of verbs  . This limitation is a serious drawback since interactions similar to the one just described pervade the English language and  , therefore , cannot be ignored in the construction of a natural language system  . 
The present example illustrates that START needs information that allows it to deduce the relationship between alternate realizations of the arguments of verbs  . In this instance , we want START to know that whenever A presents B with C  , then A presents C to B . We do this by introducing rules that make explicit the relationship between alternate realizations of the arguments of verbs  . We call such rules S~rules ( where S stands for both Syntax and Semantics )  . Here is the S-rule that solves the problem caused by the verb present :  ( 31 ) Present S-rule If < < subject present object1> with object2> Then < < subject present object2> to object l > S-rules are implemented as a rule -based system  . Each S-rule is made up of two parts , an antecedent ( the IF-clause ) and a consequent ( the THEN-clause )  . Each clause consists of a set of templates for T -expressions  , where the template lements are filled by variables or constants  . For example , the Present S-rule contains three variables , subject , object 1 , object 2 , which are used to represent the noun phrases in the T-expressions  . This rule also contains three constants , present , with , and to , shown in boldface . The Present S-rule will apply only to T -expressions which involve the verb present and which meet the additional structural constraints  . 
S-rules operate in two modes : forward and backward  . We describe both modes of operation briefly , although in this paper we concentrate on S-rules operating in the backward mode  , since this mode is most useful in a Question -Answering natural language system  . 
When triggered by certain conditions , S-rules in the forward mode allow the system to intercept T-expressions produced by the understanding module  , transform or augment them in a way specified by the rule  , and then incorporate the result into the knowledge base  . For instance , if the Present S-rule is used in the forward mode  , as soon as its antecedent matches T-expression ( 32 ) produced by the understanding module , it creates a new T-expression ( 33 ) and then adds it to the knowledge base : ( 32 ) < < Mary present Paul > with gift > ( 33 ) < < Mary present gift > to Paul > Now question ( 29 ) can be answered since T-expression ( 30 ) associated with this question matches against T -expression  ( 33 )  . 
The generating module of START responds : ( 34 ) Mary presented a gift to Paul . 
All additional facts produced by the forward S -rules are in-  . 
stantly entered in the knowledge basel The forward mode is especially useful when the information processed by START is put into action by another computer system because in such a situation START ought to provide the interfacing system with as much data as possible  . 
In contrast , the backward mode is employed when the user queries the knowledge base  . Often for reasons of computationale/l~cleney , it is advantageous not to incorporate all inferred knowledge into the knowledge base immediately  . S-rules in the bac : kward mode trigger only when a request comes in which cannot be answered irectly  , initiating a search in the knowledge base to determine if the answer can be deduced from the available information  . For example , the Present S-rule used in the backward mode does not trigger when sentence  ( 27 ) is read and T-expression ( 28 ) is produced by START . The S-rule triggers only when question ( 29 ) is asked since this question cannot be answered irectly  . 
5. The I , exical Component of START
In order tolm derstand an English sentence , the START system needs to have morphological , syntactic , and semantic information about the words in the sentence  . All the words that the system is aware of , along with information about their part of speech  , inflection , gender ~ , number , etc . are stored in the Lexicon . Virtually every branch of START uses the Lexicon to accomplish i ~ s task  . In this section we discuss the way in which the Lexicon extends the system's ability to dcal with semantic-syntactic interdependencies  . We show that the Lexicon provides a place where a verb's membership in a semantic lass can be registered  , a ) lowing more general S-rules to be stated . 
To exantine how lexieal information about verb classes may be utilized by the S-rules  , we introduce another argument alternation in English  , the property-factoring alternation ( Van Oosten\[1980\] )  . Consider the following sentence : ( 35 ) Paul surprised the audience with his answer . 
An English speaker knows that sentence ( 35 ) can be paraphrased ( 36 ) Paul's answer surprised the audience . 
Notice that in (35) , the subject brings about the emotional reaction ( surprise ) by means of some property expressed in the with phrase  . Sentence ( 36 ) describes the same emotion Mreaction as in ( 35 ) but in ( 36 ) the property and its possessor are collapsed into a single noun phrase  . 
Suppose that after sentence ( 35 ) is typed into the computer , we ask : ( 37 ) Did Paul's answer surprise the audience ? While a speaker of English would know that the answer to this question is Yes  , this reply is not obvious to START since T -expressions : related to sentence  ( 35 ) and question ( 37 ) are very different : 2 ( 38 ) << Paul surprise audience > with answer > ( 39 ) < answer surprise audience > Extending t : he approach taken to the example with the verb present in section  4  , we could formulate a simple S-rule that could be used to answer question  ( 37 )  . The Surprise S-rule (40) , like the Present S-rule , makes explicit the relationship between the alternate realizations of the arguments of the verb surprise:  '2'1'o simplify the exposition we do not show the T -expression describing the relation between the property  ( answer ) and its possessor ( P , ~' . l) . 
(40) Surprise S-rule
If << subject surprise object 1> with object 2>
Then < object 2 surprise object 1 >
In taking this approach we are explicitly associating the property-factoring alternation with the verb surprise  ; we are assuming that it is an idiosyncratic property of the verb  . 
Formulating a special purpose S-rule which applies only to the verb surprise does not seem to be the best solution to the problem  . Surprise is only one of many verbs which exhibit the property-factoring alternation  . This alternation holds of a large class consisting of over one hundred verbs  , among them (41) anger , annoy , embarrass , frighten , impress , please ,   . . . 
For example: ( 42 ) Miriamam used Jessica with her performance . 
(43) Miriam's performance amused Jessica.
(44 ) Gabriella scared the turtle with a sudden movement  . 
(45 ) Gabriella ' sudden movements cared'the turtle . 
These verbs also share a certain semantic property : they all denote emotional reactions  . For this reason we identify a class of emotional -reaction verbs and say that the property of the verb surprise responsible for the alternation shown in  ( 35 ) and ( 36 ) holds for all verbs that comprise the emotional -reaction class  .   3 Once we have tied the ability to participate in the property-factoring alternation to a particular class of verbs  , we no longer need to indicate this property in the lexical entry of each verb in the class or write verb-specific S-rules  , such as the Surprise S-rule . Rather , we can associate the alternation with the class and then simply indicate in the lcxical entry of a verb whether it belongs to tlf is class  . That is , we augment a verb's lexical entry with an indication of its semantic lass membership  . For instance , we would register in the entry for surprise that it is a member of the emotional-reaction class  .  4  ( 46 )   ( surprise : verb : emotional-reaction ) Now instead of writing a number of verb-specific S-rules  , we can write a single general S-rule which triggers not only on the verb surprise  , but on any verb fl'om the emotional-reaction class :  ( 47 ) Property-factoring S-rule If < < subject verb object1> with object2> 
Then < object 2 verb object 1 >
Provided verb E emotional-reaction class The revised S-rule contains a PROVIDI~D clause which specifies the class of verbs to which the rule applies  , ensuring that it applies to the emotional -reaction verbs  . 
When question (37) is asked , the Property-factoring S-rule ( used in the backward mode ) will trigger , since the T-expression ( 48 ) < answer surprise audience > 3These verbs have been the subject of extensive study ill the linguistic literature because of these and other characteristic properties that set this class apart  . ( See Postal\[1971\] , Pesetsky\[1987\] , Bel-letti and R . iz zi\[1986\] , Grimshaw \ [ to appea-\] , and many others ) . 
This class of verbs which take the experiencer argument  ( the person experiencing the emotions ) as object should be distinguished from a second class of verbs of psychological state which take the experlencer argument as subject  . The latter class which includes verbs like admire  , detest , esteem , hate , and like will not be discussed in this paper . 
4Irrelevant details have been suppressed in this lexical entry  . 
5 19 produced by the question matches the THEN-part of the rule  , and furthermore , the verb surprise belongs to the emotional -reaction class  . The correct answer to question ( 37 ) is deduced when the appropriately instantiated IF -part of the S-rule is matched to T-expression  ( 38 ) found in the knowledge base . Here is how START responds : (49) Yes , Paul's answer surprised the audience . 
The PROVIDED restriction of S-rule ( 47 ) not only allows the rule to apply to verbs of the appropriate semantic type  , but it also prevents the rule from applying to verbs that do not display the property-factoring alternation  . For instance , the verbs surprise and present can express their arguments in a similar fashion--both are found in the context\[NP VNP with NP\]  , but they differ in the other realizations of their arg-u-ments  . Specifically present does not participate in the property-factoring alternation  , as (50) shows , nor does surprise participate in the alternation that present participates in  , as ( 51 ) shows : ( 50 ) Mary presented Paul with a gift . 
* Mary's gift presented Paul.
(51) Paul surprised the audience With his answer.
* Paul surprised his answer to the audience.
In the absence of the PROVIDED clause , the Property-factoring S-rule could potentially misapply to verbs like present  . 
The surprise example shows how the addition of information about semantic lass membership to verb entries allows the system to handle a particular phenomenon  ( or lexieal property ) common to all verbs in a particular class , with the help of a single S-rule . We refer to this approach as the verb class approach  . 
We could have achieved the same effect in another way : instead of specifying verb class membership in the entry of each verb  , we could have explicitly registered the lexical properties that apply to the verb  ( or the names of the corresponding S-rules )  . Taking this approach , the lexical entry for surprise would indicate property-factoring instead of emotion a breaction but would otherwise be unchanged  . 
(52 )   ( surprise : verb : property-factor lng ) This approach could allow us to dispense with the PROVIDED clause in the S-rules since the lexical entry of a verb would be tagged with the set of S -rules that could apply to that verb  . 
However , the verb class approach as a clear advantage over the alternative lexical property approach when more than one property is involved  . Typically each semantic lass of verbs has a number of properties associated with it  , which must ultimately be handled by a natural anguage system  . 
If we take the lexical property approach , whenever we add a new lexical property , we would need to write an S-rule for this new property  , and we would then have to add the property to the lexical entry of each member of the class of verbs that exhibit this property  . 
In contrast , if we take the verb class approach , it is easy to extend the system to handle new properties of a class of verbs  . 
All that is required is the addition of the appropriate S-rule  , formulated so that it triggers on this class of verbs  . There is no need to alter the lexical entries of the members of the class in any way if the lexical entry of each verb in the class indicates that it is a member of this class  . Thus the verb class approach , unlike the lexical property approach , allows a more modular system design ; this in turn allows the coverage of the system to be extended more easily  . 

To illustrate that each class of verbs is characterized by a whole cluster of properties  , we survey just a few of the properties associated with the emotional-reaction verbs  . They participate in several transitivity alternations - - the middle alternation in  ( 53 ) and ( 54 )   ( see Keyser and Roeper\[1984\] , Hale and Keyser\[1987\] , among others ) and the null-object alternation i ( 55 ) and ( 56 )   ( aiz zi\[1986\] ) :  ( 53 ) Dogs fright en little children . 
(54) Little children frighten easily.
(55) Thunder never fails to frighten people.
(56) Thunder never fails to frighten.
The subject of the middle use ( 54 ) bears the same semantic relation to the verb as the object of the transitive use  ( 53 )  , while the subject of then nll-object use ( 56 ) bears the same semantic relation to the verb as the subject of the transitive use  ( 55 )  . The null-object alternation , like the indefinite object alternation , involves an unexpressed but understood object in the intransitive variant  . However , the understood object here is interpreted as " people "  . 
E motional-reacti0n verbs are also set apart by another prop--erty : they only have passive nominals  . Thus , the children's disappointment means that the children experience disappoint-ment  ( passive interpretation )  , not that they caused disappointment ( active interpretation )  . Compare the interpretation of this nominal to that of the nominal related to a verb like describe : Gene's description can refer to the description that Gene gave  ( active interpretation ) or to a description that someone gave of
Gene(passive interpretation).
We return to the example involving present discussed in the previou section  . The alternation manifested by the verb present is exhibited by the members of a small class of verbs which also include sentrust  , furnish , supply , and trust . The Present S-rule in ( 31 ) can be generalized so that it will apply to the entire class of verbs like present  , which we name the present class . 
(57) Presentation S-rule
If << subject verb object l > with object2> Then < < subject verb object2> to object l >
Provided verb E present class
Now suppose that after typing ( 58 ) we ask question ( 59 ) :  ( 58 ) Mark supplied the restaurant with fresh vegetables  . 
(59 ) Did Mark supply freshvege tables to the restaurant ? Since the verb supply is a member of the Present class  , the SL rule in ( 57 ) applies and START will be able to answer the question correctly :  ( 60 ) Yes , Mark supplied freshvege tables to the restaurant . 
The examples described in this section show how the transparent syntax of the S-rules coupled with the information about verb class membership provided by the Lexicon facilitates fluent and flexible dialog between the user and the language processing system  . 
6 . Employing S-Rules : Additional Examples In this section we present additional dialogues that START can handle  . These interchanges are chosen to illustrate the use of S-rules as well as the range of coverage of the START system  . 
In the process we introduce S-rules that handle several more semantic-syntactic interdependencies  , including the indefl rfite object and reflexive alternations discussed in the introduction to the paper  . 
At the beginning of timpa per we present cd two short interchange  . ,~ between two speakers of English and asked what it would take for a natural anguage system to be able to participate in these interchanges  . We repeat the examples below: ( 61 ) Speat : er1:Sallyate apear . 
Speal ~: er1:DidSall yeat ?
Speat:er2: Yes.
(62) 5 peat:er1:David dressed the baby.
Speaker 1: Did David dress ?
Speaker 2: I don't know.
These examples were used to ilhlstrate some of the semantic-syntactic  ; nter dependencies characteristic of verbs that partioi pate in bansitivity alternations  . Verbs that have both transitive and i * t transitive uses differ in the interpretations asociated with their intransit  , ive uses , as these interchanges were intended to show . S-rules allow START to answer questions that draw on knowledge of the semantic-syntactic interdependencies that are manitk~sted in transitivity alternations  . 
The two transitivity alternations relevant othe interchan-ges above are the indefinite object alternation  ( with eat ) and the reflexive alternation ( with dress )  . When used intransitively , verbs thai . participate in the indefinite object alternation describe actions where there is an iml  ) lied object which is understood to be something that is a typical object of the verb  . Thus : (63) Sally at eapear . ==> Sallyate . ( i . e . , Sallyate some food or a meal . ) We can formulate an S-rule that makes explicit the relationship between the transitive and the intransitive use of such verbs  . 
(64) in definite-object S-ruh :
If < subject verb object > "1?he a < subject verb > Provided verb Eactivi~y/oec . ll , patio . a chess Now if S ': CA t ~' F were asked " Did Sally eat ? " after having been told that Sally ate a pear  , START would be able to answer " Yes " , assunfing that ear's lexical entry indicates that it is a members t the activity/occupation class  . 
In order to handle the dress interchange , START needs an S-rule that captures the properties of the reflexive alternation shown by verbs of grooming  . The intransitive use of a verb that participates in this alternation implies that the subject perforn md t l  , eaction denoted by the verb on himsel for herself . 
(65) David dressed.--==>David dressed himself.
We can capture the special interpretation associated with the intransitiw ~ use of a verb like dress by means of an S-rule:  ( 66 ) Reflexive SJ'ule
If < subject verb >
Then < subject verb subject >_Provided verb E grooming class Now if asked " Did~leff dress himself ? "  , after being told that Jeff dress cd , tim system would answer " Yes " since the lexical entry of dress in  ( ii cates that it is a verb of grooming . START will also be ablc to handle the following more complex interchange :  ( 67 ) Input : Anndressed and Mau'ydressed the baby . 
Question : Who dressed herself ?
STA.II!I':Anndressed herself.
Quest ~ ion : Who dressed the baby ?
START : Mary dressed the baby.
Oueation : Did Mary dress ?
STAt/T : I don't know.
In a more complex situation , S-rules are allowed to trigger each other and to ask each other for help  . To exemplify this , we introduce two more S-rules . These rules are used to capture the properties of a cl~s of verbs that has received substantial attention in the linguistics literature  ( see Anderson\[1971\] , Fraser\[19711 , Schwarz-Norman \[1976\] , Jeffries and Willis\[1984\] , Rappaport and Levin \[1986\] , among othms ) . We refer to this class a stiles pray/load class after two prototypic Mmembers  . The verbs in this class describe actions that involve putting substances or materials on surfaces  ( e . g . spray ) or in containers ( e . g . load ) . 
What distinguishes one member of the spray/load class from another is the manner in which this action is performed  . Some members of this class are listed below : ( 68 ) load , pack , pile , smear , spray , spread , stack , stuff , wrap ,   . . . 
All the members of this class display an argument alternation  , the locative alternation ; they arc . " found in two syntactic frames , as illustrated below : ( 69 ) Miriams prayed paint on tl ~ ew all .   ( locative variant )   ( 70 ) Miriams prayed the wall with paint . ( with variant ) (71) Janloade dhay on the truck . 
(72), Janloaded the truck with hay.
Although the sentences in each of these pairs might appear at first glance to be paraphrases  , they are not . For instance , in the first pMr , only (69) , the locative w ~ riant , may be used to describe a situation wherea small portion of the  . wall is covered wifll paint as a result of the spraying  ( the partitive interpretation )  , while sentence (70) , the with variant , necessarily implies ~ hat , the wall is entirely covered with paint as a result of the action  ( the holistic interpretation )  . The sentences in each pair ~' ~ rc near paraphrases in the sense that the truth of the with variant entails the truth of the locative varimlt  , but not vice versa . 
Before we canibrmulate an S-rule that captures ~ ; lle relation between the two variants , we need to look more closely at the locative variant  . When used in the locative variant , a pray/load verbs are found with a wide range of locative prepo  . , ; itions ( tlm set of prepositions indicating spatial relationships  )  . 
(73 ) Miriams prayed paint on/under/around the table . 
When the . with variant of aspray/load verb is part , phrased by the locative variant , typically only oned the range of locative prepositions i possible  ; the choice is a function of the verb involved . The verbs stray and load both involve the preposition on in the locative variant  , but the w . wbstuff requires the prepo . -sition into , while the verb wrap requires around : ( 74 ) Jessie a stuffed the pillow with feattmrs . 
(75) aessic astuffed the feathers into tile pillow . 
(76) Oabriell a wrapped tile package with paper.
(77) Gabriella wrapped paper around the package.
It appears that each spray ~ load verb is associated with a default locative preposition that must be indicated in its lexical entry :  ( 78 )   ( spray:verb:spray-load:defimlt . -preposition o )   ( 79 )   ( wrap:verb:spray-load:default-preposition around  )   ( 80 )   ( stuff:verb:spray-load:default-preposition into  ) We can now write an S-rule that captures the relation between the with and locative variants of the locative alternation :  ( 8:1 . ) Itolistie/pariitive S-rule I f << subject verb object1> with object2> Then < < subject verb object2> prepLoc object1> 
Provided verb (? spray/load class
In this S-rule tile variable ~ prepLoc'is instantiated with the default locative preposition associated with tile verb tim rule is applying to  . 

Using the Holistic/partitive S-rule , START is easily able to handle the following interchanges :  ( 82 ) Input : Matil dast uffed the suit case with books . 
Question : Did Matil dast uff the books into the suit case ? START : Yes  , Matil dastuffed the books into the suit case . 
(83) Input : Miriam wrapped the book with paper.
Question : Who wrapped the paper around the book ? START : Miriam wrapped the paper around the book  . 
To illustrate how S-rules can trigger each other , we introduce an S-rule motivated by another property of spray ~ load verbs  . We have seen that the with variant of aspray ~load verb entails the locative variant  . In addition , the locative variant , which describes the placement of some substance in a container or on some surface  , implies that the substance will be in the con -tain cror on the surface  . That is , sentence ( 84 ) entails sentence ( 85 ) :  ( 84 ) Janloaded hay on the truck . 
(85) Hay was on the truck.
The following S-rule can be used to capture this property of spray ~ load verbs  .  5  ( 86 ) Resulting Location S-rule If < < subject verb object1> prePLOC object2> 
Then << subject be > prepLoc object 2>
Provided verb Espray/load class
We attribute the entailment relationship between the two variants described by the Holistic /partitive S-rule to a speaker's linguistic knowledge  , while the entailment relationship described by the Resulting Location S-rule reflects realworld knowledge  . 
We introduced the Resulting Location S-rule in order to show how one S-rule can operate on the output of another  . The Holis-tic/partitive S-rule and the Resulting Location S-rule together allow sentence  ( 88 ) to be deduced fl ' om sentence ( 87 ) :  ( 87 )   , \] anloaded the truck with hay . 
(88) Hay was on the truck.
By using both these S-rules , the system can handle the following interchange :   ( 89 ) Input : Janloaded the truck with hay . 
Question : Was the rehay on the truck ?
START : Yes , there was hay on the truck.
The syntactic omponent of START is able to undo the effects of the There-Insertion rule in the question  , translating it into the T-expression ( 90 ) << haybe > on truck > This T-expression does not match anything in the knowledge base  , so START tries to apply S-rules . The Resulting Location S-rule used in the backward mode can apply to this T-expression  , suggesting that START then searches for the T -expression that matches template  ( 91 ) below , where the variable verb is restricted to members of the spray/load class  . 
(91) << subject verb hay > on truck >
This T-expression also does not match against anything in the knowledge base  , but it triggers the Holistic/partitive S-rule ,   5The PROVIDED clause in the Resulting Location S-rule restricts this rule to the sprayfload verbs  . Actually this S-rule applies to a larger set of verbs  , the set of causative verbs of change of location , including put , place , insert and transitive move , slide , drop , as well as the sprayfload verbs . For instance , if Rebecca put the books on the table , then the books are on the table . We have given a restrictive formulation of the PROVIDED clause in this S-rule since we do not want to discuss the implications of introducing a hierarchy of verb class types for the operation of S-rules  . 
322 which when applied produces ( 92 ) << subject verb truck > with hay > Finally , T-expression ( 92 ) matches with the T-expression ( 93 ) << Janload truck > with hay > obtained from the Input sentence in  ( 89 )  , allowing START to generate the appropriate answer . 
Below we show some further examples of interchanges successfully handled by START through the use of additional S-rules  . These examples involve verbs of manner of motion , listed in (94) , and verbs of creation , listed in (97): (94) climb , cross , fly , gallop , jump , march , swim , walk ,   . . . 
(95) Input : Albert jmnped over the fence.
Question : Did he jump the fence ?
START : Yes , Albert jumped the fence.
(96) Input : C and y climbed up the mountain.
Question : What did C and y climb ?
START : C and y climbed the mountain.
(97) bake , carve , croche ~ hammer , knit , sew , weave ,   . . . 
(98 ) Input : Jessica baked the doughint or ound loaves . 
Question : What did Jessica baker ound loaves from ? START : Jessica baked round loaves from ~ he dough  . 
(99) Input : Miriam carved wood into a doll.
Question : Out of what did Miriam carve the doll ? START : Miriam carved the doll out of the wood  . 
At any given moment many S-rules may be hidden in the computer's memory examining the output flow generated by START and waiting tbr their turn to participate in the deduction process  . S-rules fundamentally expand the power of our system  ; they open a window into the intricate world of semantic-  . 
syntactic interactions.
7. Lexical Acquisition
A natural language system must be built in such a way that is is easy to expande its coverage  , not only by increasing the size of the lexicon but also by adding to the set of different phenomena covered by its grammar  . Due to the large number of semantic-syntactic interdependencies  , increasing the coverage of a system's grammar might seem to be prohibitively expensive  . 
It would requiremed dling with the entries of every verb in the Lexicon  , in order to register its behavior with respect o the new phenomenon  . But once a phenomenon is assoeiated with one or more verb classes  , it need only be associated with these classes . 
There is no need to tamper with the entries of the individual verbs or construct verb-specific S -rules  , as long as the lexical entries of verbs indicate class membership  . Thus the problem of incorporating new phenomena is considerably simplified  . 
The process of lexical acquisition ( adding new words to the Lexicon and specifying the relevant information about them  ) i , - ~ very simple in START . Introducing a new lexical item amounts to little more than appending it to a list of similar words  , adding a few idiosyncratic features when necessary  . For example , if we wanted to add the verb annoy to START's lexicon  , we would simply have to add the verb together with an indication that it is a member of the emotional-reaction class  . 
(1O0 )   ( annoy:verb : emotional-reactlon ) The lexical entry would not need to contain an explicit indication that this verb participates in the property-factoring alternation since the S -rule representing this alternation makes explicit that this property holds of all members of the emotional-reaction clw~s  . The classmcntbershiI ) indication in annoy's lexical entry would allow the S-rules that apply to the emotional-reaction cla : ~ s in general to apply to this verb in partien lar  , so that STAI ~ C will be able t ( , hm  ~ ( lle sequences such as the following : ( 10\] ) In pu *:'_/' he dog annoyed the guests with its loudbarking  . 
( 2ueaiion : Whom did the dog's lond harking annoy ? S!/'AR . T : q ? he dog's loud barking annoyed the guests . 
The acquisition of S-rules is equally simple in the STAHT system due to a special component ~ ha  . t allows STAI-~I ' to in-~eerS . .rules tram examples . Adding a new S-rule to the system requires typing in a set of English sentences which capture a specific insta  , me of the rule . lh ) rins l ; ance , a pair of declar-~tive seats , tees ( sa , : has(35) and (36)) , which exemplify the property-f ~ w . to ring alternation , can be used by S'\]'ARSi?toi~ffer the celated Srule  .  ' . I . ' odot , his , STAtG . ' analyzes the sentences , queries th , ~ user for ad ( titional information regarding elements of co ~ responding T-expre'~sions  ( a , '; certaining whether they are too . lashing variable , Z constants , or predicates ) , and then build strod general \ zes the S--rule automatically  . 
Carefld examination of English verb cbmses ( see Levin\[to appear \] ) combined with the effectivemployment of S-rules allows the system to red * me to a minimuln the amount of idiosyn-coat  , is , ~ynt~etie and semantic information in the Lexicon  . All this makes t , he system transportable ; that is , it is easily adaptable to new domains . 
go Coneiasion
The addition of a componen ~ that explicitly encodes verb classes and their characteristic properties  , enables the START system to handles wide range of phenomena reflecting sernantic-syn-t~et lc correspondences that are characteristic of English verbs  . 
By t ? ~ (: to ring properties that , belong to whole classes of verl : , sout of the entries of individual verbs and letting these entries imply designate the verb's class membership  , we do more than merely simplify entries . We facilitate the addition of new words to the lexicon and make it easier to extend tile system 's coverage of linguistic phenomena  . 

We arc gral ; e . fulto a a ~ e Simpson , Misha Katz , and Tom Maril \] for bdpfnl comme_usmtd suggestions concerning this paper  , and to Jeff Pah , mcci who rontributed signiiieantly to the Question- 
Answering pa ~ rt of the system.
This paper describes research done at the Massachusetts Institute of Technology  . Support tbri ( atz's work was provided in part by the Advanced P ~esearch Projects Agency under Of-flee of Naval Resc ~ rch contract  N0014-85-K-0124  . Support for Levin ~ swork w~m provided in part by a grant to the Lexicon Project of the MIT Center for Cognitive Science from the System Derek  , parent Foundation . 
Refe . renees 1 . S . R . Anderson , " Ontile Role of l ) cepStrueture in Semantic Interpretation , " l , ' ou ' a datio'ns of Languag(:7i' , !87- . 39 tL 1971 . 
2 . B . T . At & ins , J . Keglj ~, ndB . l ', evin ~" Fxplicittro dhnplie it Informs . -lion in Dictionaries , " Lexicon Project Working Papers 12 , Center htr Cognigive Science , MIT ~ Cambridge , MA ,  1986 . 
3 . A . Belletti and L . Rizzi , " Psych-Verbs and Th-Theory , " Lexicon Projest Working Pal)ers 13 , Center for Cognitive Science , MIT , Cambridge , MA ,  1986 . To appear in Natural Language and Linguistic

4 . R . J . Doyle ,  tlypothesizing and Refining Causal Models , " M . I . T . Artificiallnte Uigence Laboratory Menm No . 811, December 1984 . 
5 . B . l ) ~' aser , "A Note on Spray Paint Cases , " Linguistic Inquiry 2 , 603-607 ,  1971 . 
6 .  ,1 . Grimshaw , A ~ yumsntStractw , ' c , MIT Prea % Cambridge , MA , to appmt r . 
7 . K . L . Hale and S . J . Keyser , " Some Transilivit . y Alternations in English , " Lexicon Project Working Papers 7 , Center for Cognitive Science , MIT , Cambridge , MA ,  1986 . 
8 . K . L . llale and S . J . Keyser , " A Viewfl ' om the Middle , " Lexicon Project Working Papers 1 O , Center for Cognitive Science , ME t ' , Cambridge , 
MA ~1987.
9 . L . Jeffries and P . Willis , " Al / eturn to the Spray Paint Issue , " Journal of Pragmatics 8 ,  715- . 729, 1984 . 
10 . BK  ~ . tz , "A Three-step Procedure for Language Generalion , " M . LT Artificial Intelligence Laboratory Memo No . 599, December 198I . 
11 . B . Katz , " Using English for Indexing and l/etrieving , " RIB0 . 8 8 Conference on User ~ oricnted Content-based ! l'eg : t and Image Handling  , 
Cambridge , MA , 1988.
12 . B . Katz and R . N . th . ooks , " Understanding Naturalt , anguage for Spacecraft Sequencing , " Journal of the B'ritishlnl crplanetary Society , vol . , tO , no .  10, 1987 . 
la . B . Katz and P . tl . Winston , " A Two-way Natural Language Interface , " in Integrated Interactive 6' omputing Systems , edited by P . l ) egano and E . Sandewall , North-Iloll and , Amsterdam , 1982 . 
14 . S . J . Keyser and T . Roeper , " On the Middle and Ergative Constructions in English  , " Lingnistic It quiry 15 ,  381-416 ,  1984 . 
15 . B . Levin , " Introduction , " in Lejical Semantics in . Review , edited I , yB . l , ev in , Lexicon Project Working Papers 1 , Center for Cognitive
Science , M1T , Cambridge , MA , 1985.
16 . B . Levin , " Approaches to l , exical Semantic I~cl ) rescnLation , " in A ' atomatin 9 the Lexicon , edited by D . Walker , A . Zarnpolli , and N . Carlzolari , MIT Pre , ~% Cambridge , MA , to appear . 
17 . B . Levitt and M . Rappaport , Unaccnsativity : at glee Syr ~ . tax . Se'mantics Interface , " MIT Press , Cambridge , MA , to appear . 
18 . D . Pesetsky , " Binding Problerns with Experiencer ~ , ' erbs , " l ; iw/uistic
Inqni ', ' y18, 126-140, 1987.
19 . P . Postal , Cross-Over Phenomena , Itolt , Rinehart , and W in stm ~ , NY . 

20 . M . Rappaport and B . Levin , " What to Do with The taq lolcs , " Lexiron Project Working Papers 11 , Center for Cognitive Science , Mr /' , 
Cambridge , MA , 1986.
21 . M . Rappaport , B . Levin , and M . Laughren , " Nive aux de rel ) re ~ en ration lexicale " , Lexique 7 ,  1988 . An English translation ' Levels of Lexieal Representation " appears as l  , exicon Project Worldng I ) ~ q)c ~; 20 , Center for Cognitive Science , MIT ,  1987 . 
22 . L . Rizzi , " Null Objects in Italian and the Theory of pro , " Linguistic
Inquiry 17, 501-557, 1986.
23 . L . Schwartz-Norman , " The Grammar of '(' ontent ' and ' Container ' , " Jov ; rnal of Linguistics 12 ,  279-287 ,  1976 . 
24 . J . Van Oosten , " Subjects , Topics and Agents : Evidence from Pro-perty -factoring  , " Proceedings of the Berkeley\[ , inguis/ic . sSociety 6,
Berkeley , CA , 1980.
25 . P . H . Winston , Artificial Intelligence , Addison-Wesley , Readi ~ g , MA ,  1984 . 
26 . P . II . Winston , " Learning New Principles from Precedents and Exercises  , " Artificial Intelligence , vol . 19, no .  :/, 1982 . 
27 . P . H . Winston , T . O . Binford , B . Katz , MAt . Lowry , " Learnhlg Physical Descriptiolm from Functional Definitimas  , Fxamples , and Prece-dents , "National Con  #ronce on Artificial Intelligence , Washington , 
D . C ., 1983.

