XTAG System-A Wide Coverage Grammar for English
Christy Doran , Dania Egedi , Beth Ann Hockey , B . Srinivas and Martin Zaidel *
Institute for Research in Cognitive Science
University of Pennsylvania
Philadelphia , PA 19104-6228, USA
cdoran , egedi , beth , srini , zaidel@linc . cis . upenn . edu

This paper presents the XTAG system , a grammar development tool based on the Tree Adjoining Grammar  ( TAG ) formalism that includes a wide-coverage syntactic grammar for English  . The various components of the system are discussed and preliminary evaluation results from the parsing of various corpora are given  . Results from the comparison of X3AG against the IBM statistical parser and the Alvey Natural Language Tool parser are also given  . 
1 INTRODUCTION
XTAG is a large ongoing projecto develop a wide -coverage grammar for English  , based on the l , exi-calized Tree Adjoining Grammar ( I3"AG ) tbrmalism . 
LTAG is a lexicalized mildly-context sensitive tree rewriting system\[Joshi et al  , 1975; Schabes ,   1990\] that is closely related to Dependency Grammars and Categorial Grammars  . Elementary trees in 13~AG provicle a larger domain of locality over which syntactic and semantic  ( predicate-argument ) constraints are specified . XTAG also serves as an LTAG grammar development system consisting of a predictive left-to-right parser  , an X-window interface , aroof phological analyzer , and a part-of-speech tagger ( also referred to as simply ' tagger ' )  . 
2 SYSTEMDE SCRIPTION
Figure 1 shows the overallllow of the system when parsing a sentence  . The input sentence is submitted to the Morphological Analyzer and the  3hgger  . 
The morphological analyze retrieves the morphological information for each individual word from the morphological database  . This output is tiltered in the P . O . SB lender using the output of the trigram tagger to reduce the part-of-speech ambiguity of the * currently at BBN  , Cambridge , MA , USA
Input Sentence ~' phAnaly ~ l_'l'~ger , ,__ _ _ ~\ [ p . 0 . SB lender ~ < 1 ? .   .   .   .   .   .   . ii __/i ~-1% ~ TteeSdection ,, ~ NynOB ~ .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
Derivation Structure
Figure I : Overview of XTAG system words . The sentence , now annotated with part-of-speech tags and morphological information for each word  , is input to the Parser , which consults the syntactic database and tree database to retrieve the appropriate tree structures for each lexical item  . A variety o\[' heuristics arc used to reduce the number of trees selected  . The parser titan composes the structures to obtain the parse  ( s ) of the sentence . 
2.1 Morphological Analyzer
The morphology database \[ Karp et al ,   19921 was originally exlracted from 1979 edition of the Collins English Dictionary and Oxford Adwmced Learner'sl  ) ictionary of Current English , and then cleaned up and auglnent cd by hand . It consists of approximately 317 , 000 inltected items , along with their root forms and intlectional int brmalion  ( such as case , num-tiated : Noun , Proper Noun , Pronoun , Verb , Verb Particle , Adverb , Adjective , Preposition , Complementizer , Determiner , Conjunction , lntmjection , and Noun/Verb Contraction . Notms and Verhs are the largest categories , with approximately 213 , 000 and 46 , 500 inflected forms , respectively . '\[' he access time for a given inflected entry is  0  . 6 msec . 
2.2 Part-of-Speech Tagger
A trigram part-of-speech tagger \[ Church ,  19881 , trained on the Wall Street Jotlrilal Corpus , is incorporated in XTAG . The trigraln tagger has been extended to output he Nbest parts-of-speech sequences \[ Soong and Huang  ,  1990\] . XTAG uses this infermaton Io reduce the number of specious parses by filtering the possible parts-of-speech provided by the morphological nalyzer for each word  . The tagger decrease stile time to parse a sentence by an average of  93%  . 
2.3 Parser
Tim system uses an Ea , 'ley-style parser which has been extended to handle feature structures associated with trees \ [Schabes  ,  19901 . The parser uses a general two-pass parsing srategy for ' lexicalized'gramlnars IS chabes  ,  19881 . In the tree-selection pass , the parser use stile syntactic database entry\[ or each lexical item in the sentence to select a set of elementary structures from the tree database  . The tree-grafting pass composes the selected trees using substitution a dad-junct on operations to obtain the parse of the sentence  . 
The output of tile parser for tile sentence I had a map yesterday is illustrated in l  ; igure 2 . The parse tree I represent she surface constituent sructure  , while the derivation tree represents he deriwttion history of tile parse  . The nodes of the derivation tree are the tree names anchored by tile lexical items  . The composition operation is indicated by the nature of I hearcs  ; a dashed line is used for substitution adabol d line for adjunct on  . The number besid each tree name is the address of the node at which the operation took place  . 
Tile deriwltion tree can also be interpreted as a dependency graph with unlabeled arcs hetween words of the sentence  . 
lleuristics that take advantage of 12FAGs have been implemented to improve the performance of tile parser  . For instance , the span of the tree and the position of the anchor in the tree are used to weed out unsuitable trees in the first pass of the parser  . Statistical information about he usage frequency of the trees Il iach node of I he parse tree has a ligatures h'uchlre  , not shown here , associaled with it . 

NP Vl'r
NVP Ad

IV NP yesterday had Delt PN
II1) map
I a
P~ . ll ' SeTreenxOV nxl\[hadlo . NXN\[I\] ( 1 ) l~vxARB\[yesterdayl ( 2 ) r*NX dxNI map\] ( 2 . 2)
Iiicd ) X Dlal(1) l ) erivation Tree
Figure 2: Output structures from the Parser has been acquired by parsing corpora  . This information has been compiled into a statistical database  ( tile l , exProbDB ) that is used by the parser . These method speed the runtme by approxmmtely 87% . 
J2 . 3 . 1 lleuristics for Ranking the 1 arses The parser generates the parses in a rank order  . This ranking is determined using a combination of heuris-tics  , which are expressed as structural preferences for deriwttion  , e . .g . attachment sies of adjuncts , right-vs . 
left-branching structures , topicalized sentences , etc . 
Similar hem'istics have been used for other parsers  . 
See recent work by I Hobbs and Bear ,  199411 , \[ Mc-
Cord , 19931, and \ [ Nagao , 1994t.
A partialistel ~ the heuristics used in XTAG follows:  1  . Prefer argument positions to adjunct positions ( here , this a motmts Io preferring fewer adjunc-ton operations  )  . 
2 . For PPs other I hano /' , attach to nearest site that isllOta proper noun . 
3 . Prefer right-branching struct tu'e for sequences of a diectives adverbs and PPs  . 


Prefer left-branching structure for sequences of norms  . 
Prefer high attachment ( wide-scope ) for a modi-tier and a sequence of modifees of the same type  ( i . e . a PP following or preceding a coordinate NP , an adjective or determiner preceding a coordinate NP or sequence of Ns  , an N preceding coordinate Ns ) . 
These rankings are used to control the number of sentences passed onto further levels of processing  . 
In applications emphasizing speed , only the highestranked parse will be considered , in applications emphasizing accuracy , the top N parses can be considered . 
2.3.2 Syntactic Database
The syntactic database associates lexical items with the appropriate trees and tree families based on selectional information  . The syntactic database entries were originally extracted from the Oxford Advanced Learner's Dictionary and Oxford Dictionary for Contemporary Idiomatic English  ; and then modified and augmented by hand . There are more than 37 , 000 syntactic databasentries . Selected entries from this database are shown in Table  1  . Each syntactic entry consists of an INDEX feld , the uninflected form under which the entry is compiled in the database  , an ENTRY field , which contains all of the lexical items that will anchor the associated tree  ( s )  , apos field , which gives the part-of-speech for the lexical item  ( s ) in the ENTRY feld , and then either ( but not both ) a TREES or FAM field . The TREES field indicates a list of individual trees to be associated with the entry  , while the FAM field indicates a list of tree families  . A tree family , which corresponds to a subcategorization frame ( see section 2 . 3 . 3), may contain a number of trees . A syntactic entry may also contain a list of feature templates  ( Fs ) which expand out to feature quations to be placed in the specified tree  ( s )  . Any number of EX felds may be provided for example sentences  . Note that lexical items may have more than one entry and may selec the same tree more than once  , using different features to capture lexical idiosyncrasies  ( e . g . 

2.3.3 Tree Database
Trees in the English \[ ; FAG framework fall into two conceptual casses . The smaller class consists o1' individual trees such as trees ( a )  , ( d ) , and ( e ) in Figure 3 . 
These trees are generally anchored by nonverbal lexical items  . The larger class consists of trees that are
INDEX : have / 26
ENTRY : have
POS : V
TREES : ~ Vvx
FS:#VPr_ind ,  #VPr_past ,  #VP r_perfect + #VP_ppart ,  #VP_pass-
EX : he had died ; we had died
INDEX : have/50
ENTRY : have
POS : V
TREES : flVvx
FS:#VP_inf
EX : John has to go to the store.
INDEX : have / 69
ENTRY:NP0 have NP1
POS:NP0 VNPI
FAM:Tnx0 VnxI
FS:#TRANS +
EX : John has a problem.
INDEX:map/I\]gNTRY:NP0 map out NP1
POS:NP0 VPLNP1
FAM:Tnx0 Vplnxl
INDEX:map/3
ENTRY : map
POS : N
TREES : rN,(~NXdxN,/iNn
FS:#N_wh-,#N_.refl-
INDEX:map/4
ENTRY : map
POS : N
TREES : (~ NXN
FS:#N . .wh - , #N_refl- , #N_plur " Fable 1 : Selected Syntactic Database Entries grouped into tree families  . These tree families represent subcategorization frmnes  ; the trees in a tree family would be related to each other transforma-tionally in a movement -based approach  . Trees 3 ( b ) and 3 ( c ) are members of two distinctree families . 
As illustrated by trees 3(d ) and 3(e) , each node of a tree is annotated with a set of features whose wtlues may be specified within the tree or may be derived from the syntactic database  . There are 385 trees that compose 40 tree families , along with 62 individually selected trees in the tree database . 

NP ( a)
N t ?
NP0$ VP
VONP/$(b ) ~ r
NI'(~I , VP
V0I'1.0 NPI$(c)
NP\[ras......../ace\]line.*<3>\]
Igl':<2>\]
DeII' . I . \[ ag , '\[ wh:<1>:<2>\[\]\[\]NO\[:::::~:< ; 3>> \[! \[\]
V ) w',\[\]
Ii IellSe:<2>\[nlode:<3>\[
ISSJ~lI-CllSei < 4> Imrl ; ect : <5> j
If , . : <,>\[\] w ,*\[ .  , , ,  . t ~ t : < s . --\[\] t .   .   .   .   .   .   . 2 >\[1\[NAI 13 , nod , ~: <3>\[\] I~s sig , ,-case : <4> \[\]1 \[\] ( d )   ( c ) Figure 3: Natnple trees froll l the Tree 1 ) at a base 2 . 3  . 4 Statistics Database The statistics database contain strect migram frequencies which have been collected by parsing lheW all Street Jourllal  , the IBM mant tal , and the ATIS corptts using the XTAG English grammar  . The parser , augmented with the statistics database\[Joshi and Srinivas  ,  1994\] , assigns each word of the input sentence the top three i nost frequently used trees given the part -of-speech  o1' the word . On failure the parser retries using all the trees suggested by the syntactic database li areach word  . The augmented parser has been observed to have a success rate of  50% without retries . 
2.4 X-Interface
XTAG provides a graphical interface for manipulating TAGs  . The interface offers the following : Menu-based facility for creating and modifying treeliles and loading grammar files  . 
User controlled parser parameters , including the parsing of categories ( S , embedded S , NP , l ) etP ) , and the use of the tagger ( on/of lTrctry on failure )  , Storage / , etriew fl facilities for elementary and t ) arsedhces as text liles . 
The production of postscript files corresponding to elementary and parsed trees  . 
Graphical displays of trec and feature data structures  , including a scroll ' web ' for large tree structures  . 
Mouse-based tree editor for crcaing and modifying trees and feature shuctures  . 
H and combination of trees by adjunction or substitution for use in diagnosing rallunar problems  . 
Figure 4 show stile X window interface after a number of sentences have be cllpat'sed  . 

Exits Bttffers Oranmuar Parsers Parsing derived-tree-889 
Bill w'o Jttod to go to Wash h~o a derived-tree- 140368 derived-tree- 140369 derived-tree- 140370 
I eoul~t't understmul him derived-tree-140 449
Goto your room derived-tree- 140420   derlved-tree-140621 derived-tree- 140622 derived-tree- 140763 derived-tree- 140764 derived- tree-140768 derived- tt~-140766 parsers in the same class as XqAG . Although XTAG is being extended to handle sentence fragments  , they are not included at present , and are thereby not reflected in the data in Table  2  . Statistical information ti'om the parsed corpora described in Section  2  . 3 . 4 is presently used only for ' speeding the parser but not to tune the grammar to parse any specilic corpus  . Note then , thaithed at a below does not involve any corpus training  . 


IBM Manual
ATIS nts ~
Av .  #of % Parsed parses/sent 39 . 09% 7 . 53 75 . 42% 6 . 14 74 . 42% 6 . 0 Table 2: Performance of XTAG on various corpora
Figure 4: XTAG Interface 3 ENGLISH GRAMMAR The morphology , syntactic , and tree databases together comprise the English grammar  . Lexical items not in the databases are handled by default mechanisms  . The range of syntactic phenomena that can be handled is large and includes auxiliaries  ( including inversion )  , copula , raising and small clause constructions , topicalization , relative clauses , infinitives , gerunds , passives , adjuncts , it-clefts , wh-clefts , PRO constructions , noun-noun modifications , extraposition , determiner phrases , genitives , negation , noun-verb contractions and imperatives . Analyses for sentential adjuncts and time NP adverbials are currently being implemented  . The combination of largescale lexicons and wide phenomena coverage result in a robust system  . 
4 CORPUSPARSING ANDEVALU-

XTAG has recently been used to parse the Wall Street Journal  2  , IBM manual , and ATIS corpor as a means of evaluating the coverage and correctness of XTAG parses  . For this evaluation , a sentence is considered to have parsed correctly if XTAG produces parse trees  . Verifying the presence of the correct parse among the parses generated is done manually at present  . Table 2 shows the preliminary results . We will present more complete and rigorous results by the time of the conference and compare them with other  2Sentences of length < = 15 words 4  . 1 Comparison with IBM Parser A more detailed experiment to measure the crossing bracket accuracy of the XTAG-parsed IBM-manual sentences has been performed  . Of the 1600IBM sentences that have been parsed ( those available from the Penn Treebank \[ Marcus et al  ,  19931) , only 67 overlapped with the IBM-manual treebank that was bracketed by University of Lancaster  .   3 The XTAG-parses for these 67 sentences were compared 4 with the Lancaster IBM-manual treebank . 
Table 3 shows the results obtained in this experiment . It also shows the crossing bracket accuracy of the latest IBM statistical parser \ [ Jelinekel al  . , 1994\] on the same genre of sentences . Recall is a measure of the number of bracketed constituent she system got right divided by the number of constituents in the corresponding Treebank sentences  . Precision is the number of bracketed constituents the system got right divided by the number of bracketed constituents in the system's parse  . 
Based on the present data , we believe our " results will be consistent for the complete XTAO-parsed IBM corpus  ; we plan to evaluate the XTAG parses against the Penn Treebank  . In addition , we are parsing the Lancaster sentences , and adding those to the
XTAGIBM corpus.
While the crossing-brackets measure is useful for comparing the output of different parsers  , we believe that it is a somewhat inadequate method for " evaluating a parser like XTAG for " two main reasons  . First , 3 The treebank was obtained through Salim Roukos ( roukos@watson . ibm . com ) at IBM . 
~We used the parseval program written by Phil llarison  ( phil@atc . boeing . com) . 



IBM Stat.
parsert ! " am-k-?tsl--11 1000 86 . 2% Nol Not I_\[Ava Ja?k , I Ayailablo Table 3: PerformailcoO\[XTAG on IIM qnaln lalsen ~ fence stile parse generated by the XTAG system is nnich richer in its representation f the internal structure of certain phrases thar i those present in manually created treebanks  . Even though the Lancaster treebank is 1nero detailed interins of bracketing than the Pemi Treebank  , it is not complete in its bracketing of the internal structure of not lnphlases  . As a result oF com-paring the XTAG parse with a skeletal representation  , the precision score is misleadingly ow for the XTAG system  . 
aseColldi'eaSOlltliatlhe crossing brack clIl leaSlll'e is inadequate forewlhiafing XTA  ( I is thai the pri-iriary strtlcturo in XTAG is the doriwition tl ' oo\['r Olll whicll the bracketed heeisderiwtd  . Two identical bracketings for a sentell COCi\[ll \[ la Ve coinpletely tlil:-for ent deriwition trees  . A iliore direclilie a surooF the tlor lorn lancoil ' file XTAG parser would evahiale the deriwition structtlre  , which captures the dependencies between word ; ; . 
4.2 Coiliparis Oll with Alvey
We also colnpared the XTt\G parser to the Alvey Nal : tlral kailg tlage Tools  ( ANI ; l ') t ) alser , and louild that the two perfornled coniparably . We parsed the solof I~DOCI'2 NoltnPluases presented in Appendixl : l of the teciinical report IC  , arroll ,  1903 \] , using I ho XTAG parser . The lechnical report presenls the ranking of tile correct parse and also gives the Ioi aliil lillber of doriwitions for each liOtill phrase  . In this experhnenl , we have conlparod lhetotal nu in bero\[' doriwliions obtained'rent X'I'A  ( I with lhai oblain od front the
ANUF parser.
Table 4 sulnlnarizos the results of l his cxper hlle ilt . 
A iolal of 143 llouni ) luasos were parsed . The NPs whicl l did nol have a correct parse in the toplh rooderivations for tile ANLT parser were considered as faihlres for AN\[\]'  . Tile max in it lnl and average il uni-her of derivations cohnnns show I he highesland lhe average lill nlbc  ; ro\[derivations produced fortile NPs that tiave a correct derivation hithet opt in co deriwi-tlons  , l:ortile XTAG systeiii , porloriil all cercsulls with alid without iheP ( )S lagger are siR ) wit . 55 BcCatlSt ? tilt ? NPs 11o , eliivol ' ~ l ~ O , silor it ' , fI hall ih c . ' St?llt cnt ? os on which il was lrahi ~; d , the perforl nanco of I ho POS la~ggt ? rissys wni 7iparsed % parsed
ANi:ri'armr-;71127-MSi~.Sl %
X ' IAG with I <, 7165. (/3%
XTAG wilhout/127 l\[-86 . 7i%_!~osj~i ~, L_2v,xTxuI 32 14 . 7 d28\[3 . 4 5 / Table 4: Conlparison of XTAG and ANIfI " Parser It would be interesting lose e if the two systems perfornied similarly on a wider range of dala  . In ICarroll ,  1993 \] , only tile IA ) OCENPs are annotated with tilen unlber of deriwltions  ; we are interested in getting nlore data annolated with I his inforimition  , in order tolllake further conlparisons . 
5 COMPUTERPI , ATFORM
XTAG was developed Oll the Still SI-'ARC station so-ties  , and has been tested on the Still 4 and lip BOIL CATs series 9000  . It is a wlihl ble through allony motl Sflp , and requires 20MB of space . Pleases endnlail tox tag-re quesl(,~linc . cis . upenn . edu for I't p instructions or in ore hllormaliOll . XTAG Fequh'es lhefollowing sollware to rtll/:u kniachiiler unnhlgUNIX and Xt  IR4  . Prt'vious releases o\[X willilol work . X1tR4 is free software available \[ rolliMIT . 
IiAC Olllll Olll , is pconipiler which support stile latest delinii it ) n of C t ) l l l l l l l O n I , is p(Steele's (701n-menL is p , second edition ) . XTAG has been lesled wiih Lucid Commolil , is I ) 4 . 0 and Allegro 4 . 0 . 1 . 
ii(\]l,Xversioll4 or hi . gher . C \], X is the lispet luiv . 
alent totile Xlib package wrilten in C.
? Mark Kalllrowilz'sl , is p\[Jlilities fronl CMIJ : logical-pathnalnes and dol systen l  . 
The latest version o1 ' CLX(RS . 0) and tile CMU l , is pUtilities are provided in our flp directory for your convenience  , l to wev cr , we ask that you refer to the approl ~ riate source for updates  . 
Then lorpllology database colnponent lKarl ) el al . , 1992 I , no longer under Iicenshlg restrictions , is available as a separates ys loll l frolil the XTA  ( is ystem . Igphislrtiotioils all diilor ei ii fornlatiOll can b cobtahled by inailing requosls  1o lcx-request ( a ) lhlc . cis . upenn . odu . 
signilit ? antly degraded . \ [: or this i ' of l SO ll , the table contain sill Ji ) r-lliatioil a botlt lilt ? pc : rlorlliant ? t ? of XTA  ( I both with and wilhout
I he tagger.

References \] Carroll , 199311 Carroll , J .  (1993) . Practical Unification-based Parsing of Natural Language  . University of Cambridge , Computer
Laboratory , Cambridge , England.
\[Church , 1988\] Church . , K .  (1988) . A Stochastic Parts Program and Noun Phrase Parser for Unrestricted Text  . In 2nd Applied Natural xmguage
Processing ConJerence.
I Hobbs and Bear , 199411 Hobbs , J . and Bear , J.
(1994) . Two principles of parse preference . In Current Issues in Natural Language Processing : In Honour of Don Walker  . Giardini with

I Jelinek et al , 199411 Jelinek , E , Lafferty , J . , Magerman , D . , Mercel , R . , Ratnaparkhi , A . , and Roukos , S .  (1994) . Decision tree parsing using a hidden derivation model  . ARPA Workshop on Human Language Technology , pages 260-265 . 
\[ Joshi et al , 197511 Joshi , A . J . , Levy , L . , and Takahashi , M .  (1975) . T1 ee adjunct grammars . In Journal of Computer and System Sciences . 
\[ Joshi and Srinivas , 1994\] Joshi , A . J . and Srinivas , B .  (1994) . Disambiguation f Super Parts of Speech ( or Supter tags ) : Almost Parsing . In Proceedings of the 15 ~/ ~ International Conference on Computational Linguistics  ( COLING'92 )  , Kyoto , Japan , August . 
\[Karp et al , 1992\] Kaq ), I) . , Schabes , Y . , Zaidel , M . , and Egedi , 1) . (I992) . A Freely Available Wide Coverage Morphological Analyzer for English  . 
In Proceedings of the 15 t / ~ hzternational Conference on Computational Linguistics  ( COLING'92 ) Nantes , France , August . 
\[Marcus et al , 1993\] Marcus , M . , Santorini , B . , and Malvinkiewicz , M . A . (I993) . Building a large annotated corpus of English : The Penn Treebank  . Computational Linguistics , 19 . 2:313--330, June . 
\[ McCord , 1993\] McCord , M .  (1993) . Heuristics for broadcoverage natural language processing  . In DARPA Human Language Teehnology
Workshop , March.
INagao , 1994\] Nagao , M .  (1994) . Varieties of heuristics in sentence processing . In Current Issues in Natural Language Processing : In Honour of Don Walker  . Giardini with Kluwer . 
\[Schabes , 198811 Schabes , Y . , Abeill 6, A . , and Joshi , A . K .  (1988) . Parsing strategies with ' lexicalized'grammars : Application to tree adjoining grammars  . In Proceedings of the 12 zhbzter-national Conference on Comt ) utational Linguistics ( COLING'88 )  , Budapest , Ilungary , August . 
\[Schabes , 1990\] Schabes , Y .  (1990) . Mathematical and Computational Aspects c~f Lexicalized Grammars  . Ph . 1) . thesis , University of Pennsylvania , Philadelphia , PA , August . A wlil-able as technical report ( MS-CIS-90-48 , LINCLAB 179) fi'om the Department of Computer

\[Soong and Huang , 199011 Soong , EK . and Huang , E .  (1990) . A Fast Tree-Trellis Search for Finding the NBest Sentence Hypothesis in Continuous Speech Recognition  . In Journalo /
Acoustic Society , AM ., May.

