THESELF-EXTENDINGLEXICON : OFF-LINE AND ON-L INEDEFAULTING 
OFLEXICALINFOR MATION INTHEME TALM ACHINE TRANS LATION SYSTEM  ( I ) 
Geert Adriaens Maarten Lemmens
Siemens CSL &
University of Leuven
Department of Linguistics
METAL Project
M . Theresias traat 21
B-3000 Leuven , Belgium
siegeert@cs.kuleuven.ac.be

University of Leuven
Department of Linguistics
B\]ij de-Inkomststraat 21
B-3000 Leuven , Belgium

0. INTRODUCTION
The DEF AULTER component of the METAl , MT system has been developed as a tool for extending the existing lexicons  ( off-line defaulting ) and is the basis for a category-guessing dev ice for unknown words  ( on-line de\[aulting )   . 
i , SOMEBACKGROUNDFORTHEMETALMTSYSTEM(2)I . I . METAL MONOLINGUAL DICTION ARIES METAL monol in gual lexicon entries are r  ( ~ presented as feature-value structures , accessible by their citation or " canonical " form ? For each canonical form  , thea ! lo morphic va ~\[ iants ( spelling variants , irregular forms , etc . ) are stored . 
1, 2. MORPHOLOGY ANDMORPHOSYNTACTIC(ANALYSIS)

In METAL , morphological analysis is a recursive process of lookup and segmentation that scans input words from left to right in search of their component parts  . This results in a set of possible in terp retations which correspond to acceptable sequences of morphemes recognized in the word  ( 3 )  . Words ( or parts of complex words ) which are not in the dictionary will be as s igned the category UNK  ( for UNK nown )  . The morphemes that are the result of morpholog ical analysis are then put in a chart st ructure for further processing by  ( morpho ) synt~ctic rules . 
2 ? OFF-LINED EFAULTING 2 . 1 . GENERAL DESCRIPTION The defaulter first checks whether a word is in the dictionary  ( level O )  . If not , it tries to find morphologically related entries  , so that the information for the new words can be taken from those existing entries  ( level i )  . 
If no related entries can be found , the form of the word can give indications of its  ( mainly ) phonological and morphological character i stics  ( level 2 )  . Hence , the need to organize this knowledge in an exhaust ive  , modular and easily extendable way , so that at \] . east part of the information for new entries can be generated automatically  . 
2.2 DETAILED DESCRIPTION
The DEFAUL TER system consists of three modules :   ( I ) a BASIC module containing language-independent functions  ( like table manipulation , dictionary checking , creating defaulted entries in METAL format , general string manipulation , etc . ) . Furthermore , the basic module contains the necessary info rmation about what features  ( of the set defined for METAL ) should not be copied from entries that a real ready in the dictionary  , but should get new values for the particula rword in question  . 
(2) for each lan~lage , a language-dependent module containing funct ions whose algorithms depend on the language involved  . 
(3) for each language , a set of tables containing language-dependent information in a declarative way  . The smartness of the system depends largely on their completeness and degree of refinedness ? There are three major types of tables :  ( 3?1 ) STANDARD-ENTRIES-TABLES , containing for each category the minimal feature-value information that has to be in the lexicon  . 
(3 . 2) CONTROL-TABLES , containing for each category the functions to be applied for trying to find a related root form in the lexicon ?  ( 3 . 3) ENDINGS-TABLES , containing for each category defaulted the endings that allow one to fi\]\] in the va lues for specific features  ( see Lemmens 1988 )  . An entry in the table has the following general structure :  ( ENDING-PATTERN ( ALO-PATTERNI ( FEATI ( VALI . . VALm)
FEAT n(VALI . . VALn ))) ( ALO-PATTERN2 ( FEAT1 ( VALI . ? VALm )
FEAT n(VALI . . VALn ) ) ) ( ALO-PATTERNn ( FEAT1 ( VALI . . VALm ) ? ?
FEAT n(VALI , . VALn )))) (3 . 4) beside these three major tables , the system needs to know about the linguist ically motivated ways to find the root form of a-  1  -  305 morphologically complex word . For verbs , nouns , adjectives and adverbs ( subject to productive morphological processes  )   , the system has exhaustive lists of derivat ional prefixes it will try to match with the word to be defaulted  . If these prefixes require that certain de fau2ted values be changed , this will be stored in additional convers ion tables for overriding default informat ion  ( 4 )  . 
Off-line defaulting plays a major role in the INTERCODER subsystem  , a window and menu-based interactive coding tool that hides the internal representation of information in the lexicons from the user ~ nd presents it in a more friendly way  . Secondly , developers of the METAL system can simply default files with words and create a new file with defaulted entries  . These files can then be edited with any type of editor to correct and complete the entr ies before adding them to the lexicons  . 
2.3. PROBLEM SWITHO FF-LINE DEF AULTING
Most problems with off-line defaulting occur at level i  , when the word takes over certain features from its morphologically related basic form  , while this is incorrect . 
Unfortunately , these errors are hard to predict . At level 2 ( when defaulting can only resort to the end ings-tables  )   , errors are mostly a mere consequence of incompleteness in these tables  . These errors are usually easier to detect because they are more striking  ( e . g . 
when they lead to the creation of several imposs ible allomorphs for a word  )  . 
3 . ON-LINED EFAUL TING 3 . 1 . GENERAL BACKGROUND Instead of resorting to as s igning either one single default ca tegory  ( say , noun ) to the UNK ( the single-category approach )  , or all open-class lexical categories ( the all-categories approach )   , we tried to develop an intermediate solution , the some-categories approach . The challenge is to find out if the form of a unknown word  , inflected or net , can convey crucial categorial information . Even if the attempt at on-line default ing  ( using endings information and suffix-st ripping  ) is incapable of disambiguating categorial ly  , at \] . east partial disambiguation may be possible  , leaving the system with a minimum of acceptab leguesses of a category plus the associated feature-value information for the word invo lved  ( noun and verb , for instance ) . 
3.2. ON-LINE DEF AULTING IN METAL :
PASTAND PRESENT 3 . 2 . 1 . SINGLE-CATEGORY DEF AULTING The earlier on-l in e defaulting approach consisted of call ing a category-guessing function in the test part of three UNK-rewriting morphosyntaetic rules  , viz . NO->UNK , ADJ->UNK , and VB->UNK . The category-guessing function took the form of the unknown word as input  , and returned either NO , ADJ , VB , or NIL , depending on whether it could predict the unknown to be a noun  , adjective or verb respectively ( using lists of derivational and inflect ional suffixes in the process  )   . If the guess-cat function returned NIL , the word was assumed to be a noun ( the catchall default )   . The function applied a simplified right -to-left morphological analysis algori thm  , trying to find an acceptable pair of a der ivational and an inflectional suffix for a particular category  . This approach has a few shortcomings : ( i ) It is a single-category defaulting scheme : the guess-cat function only returns one guess  , and leaves it at that . 
Furthermore , the guessing process will not be useful for languages with a high degree of categorial ambiguity  .   ( 2 ) Guess-cat only returns the categorial info rmation and no specific feature-value information  , whereas the form of the unknown word may reveal much more specific feature-value in format ion  .   ( 3 ) The parser will always try the three UNK- rewritlng rules  ( and call the guess-cat function at least three times with the same string  )  , though only one of the three rules can succeed . Moreover , a possibly morphologically complex word is rewritten into a higher-level node wi thout the grammar knowing about its component morphemes  . 
3.2.2. SOME-CATEGORIES DEF AULTING
Unfortunately , the ENDINGS-TABLES used in off-line defaul ting could not be used in their original fo rm for on-line defaulting  . First of all , they are too unspecific to predict the category of the word  , and secondly , they rely on the input word being a canonical ( citation ) form and contain no information about in f lectional morphology  . Hence , a unique new table had to be constructed that contains not only endings of stem forms  , but also inflectional suffixes that al low one to disambiguate an unknown word  . Moreover , multiple guesses ( two at most ) are allowed . 
The table returns one or more categories plus other feature information  . 
(defvar * DEF-DUTCH-ON-LINE-ENDINGS * ( def-a or t-endings-table ' ( o . .
("itGit " ( NST ( CAN "*" )   ( ALO "*" )   ( GDF )   ( CLS-0P-EN )   ( DHDE ) ) ) )  ( " liJks " ( AST ( ( CAN "*" )   ( ALO "*" )   ( CLP-0P-E )   )   )   )   ( " ieel " ( ( NST ( ( CAN "*" )   ( ALO "*" )   ( GDN )   ( CLS-0 )   ( DHHIT )   )   )   ( AST (   ( CAN "*" )   ( ALO "*" )   ( CLS-0 )   ( DGSU ) ) ) ) )   ( " dt " ( VST ( ( CAN "- on " )   ( ALO " t " )   ( CLPR-T ) )  ( V-F~X ( 0  ( ( CAN t )   ( ALOT )   ( CLPR-T )  ?  .   .  ) ) ) ) )  .   .   .   )   )   ) The algorithm tries to match the unknown with the endings in the table  , gradually stripping off potential in f lectional suffixes  ( as retrieved from the lexicon )  . The disambiguating potential of these suff ixes is also used in this process  . If , for example , a word ends in an adjective morpheme and in the endings-table both noun and adjective are listed as possible categories for the string without the morpheme  , only the AST category will be defaulted . If the whole strip-and-match process is unsuccessful  , the catch-all default remains the noun , which gets all possible values for its features  ( ( NU SG PL )   ( GDMFN )   . . . ) . Instead of invoking category guessing in the grammar rules  , we decided to activate the guessing process r ight after the left-to-right full-fl edged morphological analysis has returned an UNK analysis  . The guessing process will yield the right lexical categories and put these into the chart  . This means that ( I ) the UNK category disappears as a " lexical " category and  ( 2 ) all component morphemes of a morphologically complex unknown word are added to the chart with all their associated information  . The linguist-devoloper controls the guess ing process through the modularly accessible on-line defaulting table  . 
3 . 3 . ~ q~OBLEM SWITHON-LINE DEF AULTING The very nature of the defaulting itself implies that it is not error-free  . Still , in many cases the number of exceptions to certa in ending string s was rather limited  , and mostly they could be accounted for by inc luding a more specific  ( that is , a longer ) ending string in the table . In some cases , such a solution was not feasible , and the exceptions had to be entered into the d ictionary  . 
4. FURT ~. ~ RRESEARCH
As far as further research into off-line de faulting is concerned  , we will be looking at the potential of the approach for defaulting transfer lexicon entries  ( and not only monolingual ones )  . For instance , we could suggest ~ translation for affixed words  , if their heads are already in the transfer dictionary  . An example can make clear what this means . Suppose the transfer dictionary for trans lation from Dutch to French contains a nent rygelukkig->heureux  ( happy )  . Suppose now that we want to default the word ON gelukkig  ( UN happy ) in the Dutch monolingual dictionary . 
If we knew about a correspondence between Dutch on - and a French adject lve-deriving pre fix with the same meaning  ( say , mal-) , we could first default monolingual Dutch ongelukkig on the basis of gelukkig  , then look at the transfer for gelukkig heureux  )  , and default the monolingual French malheureux  , as well as the transfer entry on gelukkig-> malheureux  . Of course , such an approach relies heavily on unique mappings of phenomena across languages  , which will rarely be the case . For on- , for instance , on juist ( incorrect ) does not correspond to * mal correct , but incorrect . 
Even in these cases , a translation could be suggested , possibly accompanied by alternative pref ixes of the target language with the same meaning  . 
As to on-line defaulting , the current approach is more or less stable for Dutch and French  , but we are still refining the strip- and-match algorithm for optimal results  . 
For the other languages in the set of METALl anguage-pairs  ( German , English , Spanish ) , we will look into the usefulness and the feas ibility of some-categories on-line defaul ting  , and see if interesting tables can be const ructed for these languages as well  . 

NOTES ( I ) We are greatly indebted to Michael Thum for his careful documentation of the DEF AULTER system  . 
(2) See e . g . White 1987 , Bennett & Sloeum 1988 , Thurmair 1989 or Adriaens & Caeyers 1990 for full discussions of the different aspects of the METAL system  . 
(3 ) For a full account of the morphological process in METAL  , see Loomis \]988 . 
(4 ) A typical example of default-overriding for Dutch verbs is the following  . If e . g . gaan ( to go ) has as one of its morphological character is tics that its past participle is formed with ge-  ( gegaan ; the feature CL will have as one of its values PP -GE  )  , this information must be overridden for the related verb verga an  ( past participle is vergaan-not geverga an , which means CL must be PP0) . 
These regularities are stored in the * DEF -DUTCH-VST-CL-CONV * table  ( defining the necessary morphological class conversions for past participles  )   . 

Adria ~ ns , G . & H . Caey Qrs ( 1990 ) -l~tautoma-tisch vertaal systeem METAL:van on derzoek to tcommer cieel produkt  . To appear in Informatie,
October 1990.
Bennett , W . S . & J . S ! oeum ( 1988 ) -The LRC Machine Translation System . In Slocum 1988, 111-134 . 
Boguraev , B . & T . Briseoe ( ads )   ( 1989 ) -Computational Lexicography for Natural Language 
Processing . Longman , London.
Lemmens , M .   ( 1988 ) -A Critical Study of the Defaulters in the Belgian Metal-system  , and a Design of a Morphologically Guided Category Guesser  . Master's Thesis in Germanic Philology,
Leuven 1988 ( written in Dutch).
Loomls , T . (1988) - Morphological analysis in METAL . Internal documentation written at Siemens AG  , K Systeme AP 323 , Munich . 
Nebendahl , D . ( ed ) (1989) - Experten systeme.
Tell 2: Er fahrungen aus der Prax is.
( Engineering und Kommunikation .) Siemens AG,

Nirenbnrg , S . ( ed ) (1987) Machine
Translation . Theoretical and Methodologf cal Issues . ( Studies in Natural Language Processing . ) Can~ridge University Press,
Cambridge UK.
Nirenburg , S .   ( 1989 ) -Lexicons for Computer Programs and Lexicons for People  . CMU-CMT

Sloc~Im , J . (ed ) (1988) - Machine Translation Systems . Studies in Natural Language Processing .   ( Revisedre issue of a special issue of Computat ional Linguistics vol  . II(1985), nos .  13 . ) Cambridge University
Press , Cambridge UK.
Thum , M .   ( 1986 ) -Documentation of the METALDEF AULTER system . Internal documentation written at the Computer Gesellschaft Konstanz 

Thurmair , G .   ( 1989 ) -Aufgabentyp Linguistik : Projekt MEI ~ L . In Nebendahl 1989, 169-195 . 
White , J . S .   ( 1987 ) -l~e Research Environment in the METAL Project  . In Nirenburg 1987, 225--246 . 
Zernik , U .   ( ed )   ( 1989 ) -Proceedings of the First International Lexical Acquisition Workshop  ( Detroit , Michigan , August 21) . 

