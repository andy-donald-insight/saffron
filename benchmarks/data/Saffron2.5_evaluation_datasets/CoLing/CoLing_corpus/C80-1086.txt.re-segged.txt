INTERACTION WITH ALIMITED OBJECT DOMAIN-
ZAPSIBPROJECT
A.S . Narin'yani
Computing Center , Siberian Branch US SRAc . Sci . 
630090 Novosibirsk , USSR
Abstract . The report presents the
basis principles of the ZAPSIB project aimed at the development of a modular series of l inguistic processors designed for natural language  ( NL ) interaction with applied databases . The general structure of the ZAPSIB processors and functions of the main modules are discussed  , as well as technology of the project includ ing problem of processors adaptation to a nob ject domain of the interaction  . 
I . Basic principles
Launching the project the authors x ) were aware of specialities of commercial systems which are principally different in many respects from the experimental prog -rams developed as their prototypes at the beg inning of the applicational direction of our NL works  . 7 ,   2 This position was implemented in the basic pr inciples of the project which could be formulated as follows:  ( a ) Civing up the realization of any " genera lized " scheme of interaction  ( an " average " user ~ an " average " object domain  )   . No scheme of that kind is possible in princip le : a customer's demands could differ dec isively on the main parameters of the interact ion  , such as-limitedness of the NL syntax ; -contents and complexity of the object domain ; -the lexicon size ; -the computer's resource ; -the efficiency of L-processor , etc . 
For some of the parameters the limits of those demands can vary up to  100  , I0 O Oor even 10 O00 times . In this spectrum of diversity it is not poss ible to ex-tract one or two dominants tereotypes-practically every customer needs his own L-processor  , adequate to his special con-ditions and in teraction domain  . 
This situation determines the strategy of the project : it programs the development of not one but a series of L-processors with the same general structure whose basic modules are real ized as sequences of successively extending and compatible R  ) The project being carried out by A . I . 
Laboratory of the Computing Center of the Siber ianDiv  . of the USSRA cad . Sci . 
versions . Implementation of this principle is supposed to provide more adequate choice of L-p rocessor configura-tion with regard to a part icular user  . 
( b ) Each L-processor is to be partition-ed into the universal and adaptable parts  . The latter covers all the infor-mation depend ing on the domain of ap-plication and includes - the database structure : object  , their attributes and relations ; -the lexicon of interaction domain , including the vocabulary , standard word-complexes and denotations . 
-the syntax of the formal language of the system the L-processor works with  . 
To specificate the adaptable part of L-p rocessor during its " tuning in " the object domain  , the processor's modules are completed with special means  . For a better effectiveness of the adapt at i on a professional carrying out this process is provided with a high-level declar at ivelanguage and a set of specialized meta -processors which compile the " outer " spec if ication into the inner representation  . 
The complex of these metaprocessors composes the STEND system which is construc-ted specially to ensure maximal comfort and effectiveness of adaptation procedure  ( fig . l )  ?  ( c ) Shortcomings of the traditional " syn-tact ical analysis ~ semantical analysis " sequence are wellknown :- This scheme enables to process only " syntactically normal " texts  . Any viola-tion of the norm ( which is rather rule than exception for a mass user  ) leads to faults . 
-In principle this scheme is based on assumpt ion of existence of a " complete " formal NL model  . But no such a model has been elaborated up to the moment and most probably it will not be available during nearest ten years  . 
-Even rather rough approximations of the model being developped recently are cumber some  , expensive and too efficiency-killing for a commercial type system  . 
Semantically-oriented analysis of text based on maximal utilization of semantic " foundation " of a message and using syntax in formation as locally as possible for el imination of superfluous meanings  , seems free of the mentioned shortcomings and much more adequate as a model of un-derstanding process  .  2,3,4 --567--
Module's input i1
Universal part \] ~ pdaptableer Adaptation J <_____~ representation  ) ~smetaprOces-a module of L-processor JIi

Module's output
ZAPSIBL-processor
Ii ~ S ~ pecificatio ~ nl of adaptable I
Ipart ( outer I
Irepresenta-i ~ on ) Jii STEND System Fig . 1 . A module of a ZAPSIBL-processor and the scheme of its adaptation through the STEND system  . 
The sphere of applications of the approach is l imited now to restricted object domains  , and ' user-applied database ' interface is one of the most actual examples of such a problem  . 
For realization of the semantically-ori- ented analysis the ZAPSIBL-processors are completed with special means enabl-ing to specify and use detailed data about the interaction domain  . 
( d ) The main procedure of the analysis is organized as a non-deterministic bot-tom-up parse process  , one-or multi-variant , depending on the processor version . 
This organization corresponds optimally to chosen formal apparatus based on the notion of c omponent which generalizes the means of dependency and constituents grammars  . 
2. General scheme of
ZAPSIBL-processors
The minor versions of ZAPSIBL-processors being under development now have the general scheme  ( fig . 2)  . 
Preprocess in ~ module includes-lexical analysis which decomposes the string of input text and divides it into words  , numbers of various notations and letter-dig ital denotations  ; -assemblage of word-complexes , i . e . 
standard combinations of lexemes which are used as an integrate semantic unit under further stages of analysis  ( War and Peace International Federation of Information Processing  , etc ) . 
Main process operates with a system of rules , each of them being production realized in a h igh-level context-dependent grammar  . The system includes special means to control part ial ordering of the rules application  . The level of the grammar and control means depends on the L-processor version  . At the module's output one or more ( in a case of ambiguous result of the analysis ) acyclic parse graphs are formed . 
Postprocessing comprises three stages : - el imination of the local ambiguities with the help of global information about the text meaning formed up to the end of the parse  ; -synthesis of the text semantic repre-sentation according to the parse graph  ; -generation of the output representation of the text meaning in the User's system formal language  . 
Model of interaction domain incorporates all the semantic and pragmatic in-formation concerning the interaction domain and necessary for the operating of all other modules  . 
Feedback with the user serves , if necessary to specify the user's inten-t ions and verify the results of the analysis  . The ZAPSIB strategy regards ap-plying to the user as an extreme measure in the mosturgent cases  . 
Each of the main modules is in its turn a complex of modules and this provides sufficient flex ibility and compatibility of d if ferent versions of the modules  . 
3. Technology of the project
For the development of individual modules as well as " assembled " configurations we use a twostage technological cycle :  ( I ) Creation of the working pilot program in the very high-level SETL language  ;   ( 2 ) Transferring the SETL-program into the instrumental language  ( PL/I )  . 
Such a technology helps to cut downef " forts on the development of the universal part of the software up to three times  . 
Special attention in the project is paid to automation of the adaptation procedure of the L -processor to the user's object  --568-- 
Model of interaction domain \\ x Feedback with the user 
Answer for -~_~mulation
Ij '
Naturai language ~ text /

Preprocessing
Main process
Postprocessing
Representation of ~ the text meaning in the user 's system language \] L 
The user's system ~ IVOCABULARY
I Lexical rules ~ Main rules
Fig .  2 . General scheme of ZAPSIBL-processors . 
domain . The adaptation is expected to be realized on the pilot " L-processor-database " tandem by means of the STEND system  .  5 ,   6 Provided with a set of spe-cialized dia logue means the system enab-les to carry out p rocedure by direct in-teraction with any of the L-processor modules  . 
References i . Hap MH ~ HMA . C . , HXHOT . M .   KOHTeKCTHO--3aBHcHMaH   FpaN~4aTHKa C pa3p~BH~MM COCTaS-~HD~MMHB CHC Te MeBO CX O~e Fo aHa~H3a   . -BKH . : BSa HMo~e ~ CTB He C9BM Hae CTe CT Be H--HO MHS ~ Ke . -HOBOCH6 HpcK:1978, C . 157-165  . 
2. ~ eBMH ~., HapHHBHHHA.C.9KcnepM-
MeHT an BH~MHHM npoueccop:ce MaHTH qeCKH op MeHTM pOB aHH ~ a Han Hs  . -BKH . : BS a ~ MO-~e ~ CTB MeC9 BM Hae CTe CTB eHHOM~s ~ Ke .  -
HOBOCH 6HpCK : 1978, C . 223--233.
3 . Narin'yani A . S . AI Work in the Computer Center of the Siberian Branch of the USSRA cad  . of Sciences . -In : Machine Intelligence , Ellis Horwood Ldt .  1979,

4 . HapMH ~ HHA . C . ~ HHFB MCTM ~ ecK Henpo-~eccop ~ BAHCHB ( qacTBI-3a ~ aqHn poeK-Ta )   . - HOBOCM 6 HpcK , 1979 . -22 c . ( Hpen-pHHT/B~COAHC CCP , 199) . 
5 . Hap MH BH HMA . C . ~ HHFBHCTMKecKHenpo-~eccopN3AHCHB ( q a CTb2-0 ~ a ~ cxe Ma MOCHOBH ~ eMo ~ ynH )   . -HOBOCH6 MpCK , 1979 . -48 C . ( Hpenp HHT/B ~ COAHCCCP , 202) . 
6 . ~ eBHH ~ . ~ . CTEH~-CHC Te Maa ~ an Tauz Hn HHFB MCTM qecKHx n poueccopo B  . -HOBOCH-6HpcK , 1980 . -29 C . ( Hpenp MHT/B ~ COAH
CCCP , 238).

