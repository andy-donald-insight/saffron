Connectivity in Bag Generation
Arturo Trujillo and Simon Berry *
School of Computer and Mathem~tical Sciences
The Robert Gordon University , StAndrew Street
Aberdeen Al/l1 fig
Scotland
iat , cs5s by ( c~_sctus.vgu.ac,ul <
Abstract
' Fhisl ) a per presents a pruning tech-
nique which can bcused to reduce the
number of paths searched in rule-based
b~g generators of the type proposed by
( Poznafiskiel ; al . , 1!)95) and ( l'opowMl , 1995) . Pruning the search space in these generators is important given the  . computational cost of bag generation . ' rhetechnique relies on a connectivity constraint between the semantic indices associated with each lexical sign in a baR  . 
Testing the algorithm on a range of sentences shows reductions in the ~ generation time and the nmn ber of edges con-strucl  . cd . 
1 Introduction
Baggeneration is a form of natural language gel > er  ; ttion in which the input is ; ~ bag ( Msoknown as ainultiset : a set in which rcpe ~ted elements are significant  ) of lexicM elements and the output is a grammatical sentence or a statistically most probable permutation with respect to some  . bm guage model . 
Baggeneration has been considered within the st ~tistieal and rule-based paradigms of computational linguistics  , and catch has handled this problem differently ( Chen and Lee , 1994; Whitelock , 1994; Popowich , 1995; Tn0illo ,  1995) . This paper only considers ruh'based approaches to this problem  . 
Baggeneration has received particulm : attention in lexicalist approaches to MT  , as exempli-tied by Shake-and-Bake generation ( Beaven , 1992; Whitelock ,  1994) . One can also envisage applications of bag generation to generation fi'ommini-*Now at  S\[1ARP L ~ t boral , ories of I " mrope , Ox-h)rd Science \[) ark , Oxford OX 44 CA . E-ma ~ il : simon ~ sh ~ Lrp . co , nktmdly recursiw ' , semantic ropresent actions ( Cope . s-take ctal . , 1995 ) and other semantic fi'ameworks which separate scoping fi'om content information  ( leyle ,  1995) . ht these frameworks , the unordered natll Fe ( ) f predicate or relation sets makes the aI > plict~tion o \[' bag generation techniques attra  . ctiw: . 
A notational convention used in the I ) al ) er is that items such as ' do gt'st and for simplitied lexical signs of the  . form ( Shieber , 198 (0:
SI'M--\[ttl/I,N=dog\] .   .   .   . \[ att c : ~ l=1 JIn such signs , the semantic argument will be referred to as an qn dex ' and will be shown as nsubscril  ) to a lexeme ; in the above exmnple , the index has been giwm the unique type 1 . 
The term index is borrowed rl ' Olll IIPSG ( Pollard and Sag ,  1994 ) where indices ~ u ' e used as arguments to relations  ; however these indicestnay also be equated with dis  ( -onrse referents in l ) lt:I' ( Kamp and Ieyle ,  1993) . As with most lexicalist generators , emantic variables ttt lSl ; \[) c distinguished in order to disallow tr ; mslationally incorrect permutations of the target bag  . We distinguish variables by uniquely typing them . 
Two assumptions are made regarding \[ cxie al -semantic indexing  . 
Assmnption 1 Alllea ' teal signs must be indexed , including fltnetional and nonprcdicative lements ( Calder clal . , 1989) . 
Assumption 2 Allle . ~ ical signs must be con-necled to each other .   7'wo lea:ical signs arc connected if they are directly connected  ; furthermore , the connectivity r clation is h ' an . silivc . 
Definition 17' wo signs , A ,  11 , are directly con-nccled if the recx is latleast two paths  , Path A , Palht 3 , such that A : Path A is token identical with

The indices involved in determining connectivity arc  ; specified as pa . rameters for a pro . _ticul ; tr formalism , l'k ) rexanq)le , in t l PSG ,   !01 play a major role in preventing the generation of incorrect ranslations  . 
\[CAT=S1~\[oKr=NPl\[O~T=VP1 ) \[SEM=E~\]JLS~M:A~G1:=~\]L~:M=IEL . , , ~ o'~=IIljj\[CAT=NP\]\[CAT=Det1 rcA~'=Na\]2 ) L  ~ . = I~j ~ Ls , ~: . , , ,~ ~ = l~l L~E~=@\[ , ,~<----V1\]\] \[ CAT=N1\] 3) \ [~ , _~j\[o a , ,=m \] \[ OAT=Eli \ [ cKr=PP \] \[ CAT=vPl

CAT = A\[CAT----N1
SEM:ARG1:~\]\]
CAT=N1\[OAT=PP
SI , ' M : ARG1 ~\[~\]\]\]\[CAT=N 1 \[ OA'I'=P\[ SEM__@~^lm3~\]\[ --= ~ J\]\[CAT=NP\]
CAT = VtrarCAT = Np\] 1: Simple unification grammar . 
It will be shown that it is possible to exploit the connectivity Assumption  2 above in order to achieve a reduction in the number of redundant wfss constructed by both types of generator described in section  2  . 
3.1 Using Connectivity for Pruning
Take the following bag :
Ex . 2 dogl , thcl , brown: , big : ( corresponding to ' the big brown dog') . Assume that the next wfss to be constructed by the generator is the NP ' the dog '  . Given the grammar in Figure 1 , it is possible to deduce that ' brown ' can never be part of a complete NP constructed from such a substring  . This can be determined as follows . If this adjective were part of such a sentence , ' brown ' would have to appear as a leaf in some constituent that combines with ' the dog ' or with a constituent containing ' the dog '  . From the grammar , the only constituents that can combine with ' dog ' are VP  , Vtra and P . However , none of these constituents can have ' brown l ' as a leaf:ill the case of P and Vtrathisis trivial  , since they are both categories of a ditferent lexical type  . In the case of the VP , ' brown l'cannot appear as a leaf either because expansions of the VP are restricted to NP complements with  2 as their semantic index , which in turn would also require adjectives within them to lave this index  . 
l , ' urthermore , ' brown1' cannot OCCU rasaloaf in a deel ) er constituent in the VP t ) ecause such an occurrence would be associated with a different index  . In such cases ' brown ' would modify a different noun with a different index : Ex  . athe\] , dog\] , with l , 2  , the ~ , lnvwn 2 ,   collar2 A naive implementation f this deduction would attempt to expand the VP depth-ill'st  , left to right , ill order to accommodate ' brown ' in a complete derivation  . Since this would not be possible , the NP ' the dog ' would be discarded . This approach is grossly inefficient however . What is required is a more tractable algorithm which  , given a wfss and its associated sign , will be able to determine whether all remaining lexical elements can ever form part of a complete sentence which includes that wfss  . 
Note that deciding whether a lexical sign can appear outside a phrase is determined purely by the grammar  , and not by whether the lexical elements share the same index or not  . Thus , a more complex grammar would allow ' the man ' from the bagEx  . 4 thel , manl , shaves<l , \] , himself leven though'himself'has the same index as ' the 
II lan'.
3.2 Outer Domains
The approach introduced here compiles the relevant information of \[ line fi ' om the grammar and uses it to check for connectivity during bag generation  . The compilation process results in a set of ( Sign , Lex , Bindings ) triples called outer domains . 
' l'h is set is based on a unification-based phrase structure grammar defined as follows : Definit ion  2 d grammar is a tuple ( N , 7; P , S ) , where P is a sct of production sce ~/3 , a is a sign , /3 is a list of signs , N is the set of alle e , T is the set of all signs appearing as elements of  \[3 which unify with lexical entries , and S is the start sign . 
Outer domains are defined as follow:
Definition 3 ( Sign , Lcx , Binds ) I Sign CNtOT , Lcx ~ T and there exists a derivation Oe ~ /31Signt   /32 LeJ /33 or a ~ f11Lez  \]  /32  , S'iqnl/33 , and Sign ' a unifier for Sign , Lezjaunifier for Lcx , and Binds the set of all path pairs < SignPath , LexPalh > such thai Sign':SignPath is
Ioken identical with LezS : LexPath
Intuitively , the outer domains indicate that preterminal category Lex  ( ' an appear in a complete sentence with subconstituent Sign  , such that l , cx is not a leaf of Sign . Using ideas from data flow analysis ( Kennedy ,  1981) , predictive parser constructions ( Aho et al , 1986) and feature grammar compilation ( Trujillo ,  1994 ) it is possible to construct such a set of triples  . Outer domains thus represent elements whi ( : hmaylie outside a subtree of category Signina complete sentential 
SYNSEM:LOCAL:CONTI,INT:INI)EX.
'\[ bensure that only connected lexical signs are generated and analysed  , the following assumt ) tion must also be made : Assumption 3 A grammar will only generate or analyse connected lexical signs  . 
2 Bag Generation Algorithms
Two mainty l ) es of rule-based bag generators have been proposed  . The first type consists of a parser suitably relaxed to take into account the unordered character of tile input  ( Whitelock , 1994; Popowich , 1995; Trujillo ,  1995) . For example , in generators based on a chart1)arser , the hm ( tan mn-tal rule is applie ( 1 only when the edges to be ( ' om-bined share no \] exical leaves , in contrast to requiring that the two edges have source and target nodes in common  . The other type of generator applies a greedy algorithm to an initial solution in order Cofind a grammatical sentence  ( 1 ) ozna fiski et al ,  1 . 995) . 
2.1 Redundancy in Bag Generation
One disadvantage with the above generators is that they construct an nnd  ) er of strnctures which need Dot have been computed at all  . In buihl--ing these structures , the generatorise \[ fcctively searching branches of the search space which never lead to a CO ml  ) lete sentence . Consider the the tbl-lowing input bag : dog , barked , the , brown , big Previous rest , archers ( Ih : ew , 1992; l ) hillil ) s , 1993) have noted that from such alx ~ g , tile following strings ; u : e generated but none can fi ) rtn part of a ( ; omplete sentence ( note that indices are omitted when there is no possibility of conrnsion  ;  #indicates that the subsring will never be part of ~ complete sentence  ) :
Ex .   1  #the dog the dog barked#the brown dog For simph ' ~ cases in chart based generator such unnecessary strings do not create many problems  , but for k)nger sentences , each additional substring implies a further branclt in the search tree to be considered  . 
Since tile ( ; Oml ) Utational ( ' Oml ) lexity of the greedy bag generator ( Poznafiski ( % al . , 1995) is polynoln i&l(i . e . O(?, . d )) , the cf\]'ect of , '( ~( hlnda , ltsul ) structnres in ot as detriment Mas for parser based generators  . Neverthelc's s , a ( : ert ~ in am ( rant of mmccesm~ry workist ) erformed . ' lk ) show this , consider the test-rewrite sequence for l !' ~ xaml ) h ' . I :
Test : ( log barked the brown big
R . e write : __ barked the dog brown big
Test : barked ( the dog ) brown big
Rewrite : __ ( the dog ) barked brown big
Test : (( the ( log ) barked ) brown big
Rewrite : the brown dog barked__big
Test : (( the ( brown(log )) harked ) big
Rewrite : tile big ( brown dog ) barked_.
Test : ( ( the ( big ( brown clog ) ) ) barked )   ( ' terminate ) In this scqnenced on bleund (  , rscorc(__ . ) indicates the starting position of a moved constituent  ; the moved constituent is elf is given in bold t ~ ce  ; the bracketing indicates analysed constituents ( for expository purposes the algorithm has been over simplified  , but the general idea remains the salne ) . 
Now consider the step where ' brown ' is insert e ( l1 ) etwe (  ; n ' tie ' and ' dog ' . This action causes the complete structure for ' the dog barked'to be discarded and replaced with that for % he brown  ( to g barked ' , which in turn is discarded and replaced by ' the big brown dog barked '  . 
2.2 Previous Work
A number of prnning techniqtms have I ) een suggested to re ( h we them nom , t of redundancy in bag generators . Brew ( 1 9921 proposed a constraint propagation technique which eliminates branches during I  ) aggeneration by considering the necessarylh , ~ ctor-argument relationships that exist between the component basic signs of categorial signs  . These relationships form a graph in dic : Lt-ing the necessary conditions for a lexical item to form part of a comt/h '  . te sentence . Such graphs can 1) euse(ltoel inlinate 1 ; he substrings in l'3xaml)le1 . 
Unh ) rt unately the technique x ploits specilic as-l ) ects of categorial grammars an ( lit is not <: lear how the . y may he used with other formalisms . 
Trujillo (1995) adapts some of Brew's ideas1 , ophrase structure grammars by ( ' emilling l !' of low functions and constructing adjacency graphs  . 
While this al ) l ) roach reduces the size of the search sl ) ace , it ; does not prune it ; sull lciently for cert , in classes of rood tiers . 
Phillips (199' . ) proposes handling ine\[ticiency ~1 ; the expense of completeness . Ills idea is to main-l . a . i l ~ a queue , of roodliable constituents ( e . g . NIs ) in order to delay their combination with other constituents until rood tiers  ( e . g . Pl's ) have been an a . lysed . While practical , this approach can lead to alternative wdid sentences not being gen  (  ; r ; ( . t(~(I . 
3 Connectivity Restrictions
In scm('hing ILra~nmchanisInthateli . li~,al . esuntteCCs sitry WISS , it will I ) el ) ossible to use indices in lexical signs . As lnenl ; ione(\[earlier , these indices derivation . The following definition specifies how outer domains are used : Definit  ion4 A lexical signLea/is in the outer domain of Sign'if\[there is a triple  ( Sign , Lex , Binds ) in outer domains such that Sign and Lexunify with SignI and Lezj respectively  , and there is at least one pair < Path S , PathL > EBinds such that Sign':PathSunifies with LezQPathL  . 
In compiling outer domains , inner domains are used to facilitate computation . Inner domains are defined as follows : Definit ion  5   ( Sign , Lex , Binds ) I Sign CNUT , Lex 67' and there exists a derivation ( ~: ~/ 31 Lez Sf 12 , with Sign I a unifier for Sign , Le~saunifier for Lex , and Binds the set of all path pairs < SignPath , LexPath > such that Sign':SignPath is token identical with LezS : LexPath The inner domains thus express all the possible terminal categories which may be derived from each nonterminal in the grammar  . 
To be able to exploit connectivity during generation  , inner and outer domains contain only triples in which Binds has at least one element  . 
In this way , only those lexical categories which are directly connected to the sign are taken into account  ; the implication of this will become clearer later . 
As an example , the outer domain of NP as derived from the above grammar is:  ( NP\[sem:argl:X\] , Vtra\[sem:arg2: Y\] , < sem:argl . ,sem:arg2 >  ) ( NP\[~em:arg~:X\] , Vt ~ a\[sem:arga:Y\] , < sem:argl , sem:arga >)( NP\[~o , n:~rgl:X\] , P\[~em:~rga:Y\] , < sem:argl , sem:arg3>) This set indicates that for any NIP , the only terminal categories not contained in the subtree with root NP  , and with which the NP shares a semantic index , are Vtra and P . For instance , the first triple arises from the following tree :

NP/sem:argl:X\]VP\[sem:arg2:X\]
Vtra\[sem:arg2: X\]NP a . a Pruning through Outer Domains and

The pruning technique developed here operates on grammars whose analyses result in connected leaves  . 
Consider SOlllewfss W constructed from a bag B and with category C  ; this category , in the form of a sign , will include syntactic and lexical-semantic information  . Such a wfs s will have been constructed during the bag generation process  . Now , either W includes all the input elements as leaves  , in which case W constitutes a complete sentence , or there are elements in the input bag which are not part of W  . In the latter case , for bags obeying Assmnption 2 , the following condition holds for any W that can form part of a complete sentence : Condition  1 Let L be the set of leaves appearing in W , let a be the . graph(V , Fd , where V : C3UB-L , and E--x , y\]x , y 6 V and y is in the outer domain of x . Then G is connected . 
' lb show that ; this condition indeed holds , consider a grammatical ordering of some input bag
B , represented as the string W : ce . . T& . wBy Assumption 2 , the lexical elements in the bag , and therefore in any grammatic Mordering of it , are connected . Now conside reducing this string using the production rule : 
D ~75 to give the string W':
O ~ , . D .. o2
In this case , the signs in W'will also be connected . 
This can be shown by contradiction :
Proof 1 Assume that there is some sign ~ in W ' to which D is not connected  . Then grammar G would allow disconnected strings to be generated  , contrary to Assumption 3 .   7'his is because D would not be able to rewrite 7161 in such a way that both daughters were connected to ~  , leading to a disconnected string . 
The situation in string W'is analogous to that in Condition  1  . By identifying signs which are directly connected in E  , it is possible to determine whether g is connected and consequently whether C can form part of a complete derivation  , instead of simply comparing the value of index paths  , it is more restrictive to use outer domains since they give us precisely those elements which are directly connected to a sign and are in its outer domain  . 
3.4 Example
Consider P ~ xample 2 . ' I beliminate the wfss ' the dog ' from further consideration  , a connected graph of lexical signs is constructed before generation is started  ( Figure 2 )  . This graph is built by nsing the outer domain of each lexical element to decide which of the remaining elements could possibly share an index with it in a complete sentence  . 
1@4 dog1 big 11 Lhc Ibrow ni
Figure 2: Initial commcted graph.
When a new wfss is constructe during genera-ion , say by application of the modified fim dame . n-tal rule or during the rewrite phase in a greedy algorithm  , this initial graph is updated and tested for connectivity  . If the updated graph is not con-neeted then the proposed wfs s cannot form part of a complete sentence  . Updating the graph involves three steps , l " irstly every node in the graph which is a leaf ' of tit  ( ' new wfss is deleted , toge . t . lm r with its associated are s . Secondly , a new node corresponding to tit ( : new wNs is added to the graph . 
Finally , a new arc is added to the graph between the uew node and every other nodelying in its outer domain  . The updated ( disconnected ) graph that ensnes after constructing ' the clog ' is shown in Figure  3  ; this NP is therefore rejected . 
% it dog'l big 14 ~ brown 1
Figure 3: Updated disconnected graph after the wfss ' the dog ' is constructed  . 
4 Compiling Connectivity

For reasons of space , the computation of outer domains cannot be described fully here  . The broad outline , however , is as follows . First , the inner domains of the grammar are calculated . This involves the calculation of the fixed point of set equations  , analogous to those used in the construction of First sets for predictive parsers  ( Aho et al , 1986; Trujillo ,  1994) . Given the inner domains of each category in the grammar  , the construction of the outer domains involves the computation of the lixed point of set equations relating the outer domain of a category to the inner domain of its sisters and to the outer domain of its mother  , in a manner analogous to the eo inpu-tation of Follow sets  . 
I ) uring computation , the set of Binds is monotonically increased as dif Dreut ways of directly connecting sign and lexeme arc found  . 
5 Results
The abow ~' pruning tcchnique has been tested on bags of different sizes including different combina-tkms of modifiers  . Sentences were generated using two versions of a modified chart parser  . In one , ew ' . ry in active edge constructed was added to the chart  . In the . other , every in active edge was tested to see if it led to a disconnected graph  ; if it did , then the edge was discarded . The results of the experiment are shown in Table 1  . The implementation was in Prolog on a Sun Spare Saton  10  ; the generation timings do not include garbage collection time  . The grammar used for the experiment consisted of simplified  , feature-based versions of the 11) rules in GPSG ; there were 18 rules and 50 lexical entries . Compilation of the outer domains for these rules took apt  ) roximately 37 minutes , and the resulting set occupies 40K of men > or y . In the general case , however , tile size of the outer domains is O(n2) , where n is the number of distinct signs ; this number can be controlled by employing equivalence classes of different levels of specificity for preterminal and nonterminal signs  . 
Chart Gen.+Pruning
Hagsize Time Edgcs Time Edges 20 . 1 15 8 . 1 15 4 0 . 3 37 (1 . 4 36 7 1 . 5 103 2 . 0 99 7 0 . 9 72 11 . 0 67
I \] 5 . 1 213 3 . 9 138 12 2 . 6 133 3 . 4 123 15 9 . 0 294 7 . 2 186 15 117 . 6 448 11 . 1 253 17 2 . 3 126 2 . 61105' l'al~le1:Effect of pruning ( times in secs )  . 
Only one reading was generated for each bag , corresponding to one attachment site for PPs . 
' l'het MJe shows that the techniquect myieht reductions in the number of edges  ( both active aud in active ) and time taken , especially for longer sentences , while retaining the overheads at an acceptable level  . 
6 Conclusion
A technique f l ) r pruning the search space of a bag generator has been implemented and its usefulness shown in Lhe geueration of differentypes of constructions  . The technique relies on a connectivity constraint imposed on the semantic relationships algorithm  , outer domains needed to be compiled from the grammar  ; these are used to discard wfss by ensuring l ' exical signs outside a wfss can indeed appear outside that string  . 
Exploratory work employing adjacency constraints during generation has yielded further improvements in execution time when applied in conjunction with the pruner  . If extended appropriately , these constraints could prune the search space even further  . This work will be reported at a later date . 

Two anonymous reviewers provided very useful comments  ; we regret not being able to do justice to all their suggestions  . 
References
A . V . Aho , R . Sethi , and J . D . Ullman .  1986 . 
Compilers-Principles , Techniques , and Tools.
Addison Wesley , Reading , MA.
J . L . Beaven .  1992 . Lexicalist Unification Based Machine Translation . Ph . D . thesis , Department of Artificial Intelligence , University of Edinburgh , Edinburgh , UK . 
C . Brew .  1992 . Letting the cat out of the bag : Generation for Shake-and-Bake MT  . In Proceedings of the 14th COLING , pages 610-16,
Nantes , France , August.
J . Calder , M . Reape , and H . Zeevat .  1989 . An algorithm for generation in unification categorial grammar  . In Proceedings of the Fourth European Conference of the ACL  , pages 233-40 , 
Manchester , England , April.
It . H . Chen and Y . S . Lee .  1994 . A corrective training algorithm for adaptive learning in bag generation  . In New Methods in Language Processing , Manchester , UK . 
A . Copestake , D . Flickinger , R . Malouf , S . Riehemann , and I . Sag .  1995 . Translation using minimal recursion semantics . In Proceedings of the 6th International Conference on Theoretical and Methodological Issues in Machine Translation  , Leuven , Belgium , July . 
II . Kamp and U . Reyle .  1993 . From Discourse to Logic-Introduction to Modeltheoretic Semantics of Natural Language  , Formal Logic and Discourse Representation Theory , volume 42 of Studies in Linguistics and Philosophy . Kluwer
Academic , Dordrecht , The Netherlands.
Ken Kennedy .  1981 . A survey of data flow analysis techniques . In Muchnick and Jones (1981) , chapter 1 , pages 5-54 . 
Steven S . Muchnick and Neil D . Jones , editors.
1981 . Program Flow Analysis : Theory and Applications . Software . Prentice-Hall , Englewood
Cliffs , NJ.
J . D . Phillips .  1993 . Generation of text from logical formulae . Machine Translation , 8(4):209-35 . 
C . Pollard and I . Sag .  1994 . Head Driven Phrase Structure Grammar . Chicago University Press,

Fred Popowich .  1995 . Improving the efficiency of a generation algorithm for Shake and Bake machine translation using Head-Driven Phrase Structure Grammar  . In Proceedings of Natural Language Understanding and Logic Programming V  , Lisbon , Portugal , May . 
V . Poznafiski , J . L . Beaven , and P . Whitelock . 
1995 . An efficient generation algorithm for lex-iealist MT  . In Proceedings of the 33rd Annual Meeting of the Association for Computational 
Linguistics , Boston , MA , June.
Uwe Reyle .  1995 . On reasoning with ambiguities . In Proceedings of the Seventh Conference of the European Chapter of the Association for Computational Linguistics  , pages 115 , Dublin , 
Ireland , March.
C . J . Rupp , M . A . Rosner , and R . L . Johnson , editors .  1994 . Constraints , Language and Computation . Academic Press , London . 
S.M . Shieber . 1986. An Introduction to
Unification-based Approaches to Grammar , volume 4 of CSLI Lecture Notes . CSLI , Stanford,

A . Trujillo .  1994 . Computing FIRST and FOL-LOW functions for Feature -Theoretic grammars  . In Proceedings of the 15th COLING , pages 875-80 , Kyoto , Japan , August . 
A . Trujillo .  1995 . Lexicalist Machine Translation of Spatial Prepositions  . Ph . D . thesis , Computer Laboratory , University of Cambridge , April . 
Pete Whitelock .  1994 . Shake-and-bake translation . In Rupp et al (1994), pages 339-59 . 

