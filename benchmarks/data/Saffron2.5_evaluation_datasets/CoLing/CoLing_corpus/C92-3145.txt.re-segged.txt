A Freely Available Wide Coverage Morphological Analyzer for English * 
Daniel Karp1 , Yves Schabes , Martin Zaidel , and Dania Egedi
Department of Computer and Information Science
University of Pennsylvania
Philadelphia PA 19104-6389 USA
dkarp/schabes/zaidel/egedi?cis , upenn , edu

This paper presents a morphological lexicon for English that handle more than  317000 inflected forms derived from over 90000 stems . The lexicon is available in two formats . The first can be used by an implementation fa two-level processor for morphological nalys is  ( Karttunen and Wittenhurg , 1983; Antworth ,  1990) . The second , derived from the first one for efficiency reasons  , consists of a disk-base database using a UNIX hash table facility  ( Seltzer and Yigit ,  1991) . We also built an X Window tool to facilitate the maintenance and browsing of the lexicon  . The package is ready to be integrated into an natural anguage application such as a parser through hooks written in Lisp and C  . 
To our knowledge , this package is the only available free English morphological nalyzer with very wide coverage  . 
attributes . To improve performance , we used PC-KIMMO as a generator on our lexicons to build a disk-based hashed database with a UNIX database facility  ( Seltzer and Yigit ,  1991) . Both formats , PC-KIMMO and database , are now available for distribution . We also provide an X Window tool for the database to facilitate maintenance and access  . Each format contains the morphological information for over  317000 English words . The morphological database for English runs under UNIX  ; PC-KIMMO runs under UNIX and on a

This package can be easily embedded into a natural language parser  ; hooks for accessing the morphological database from a parser are provided for both Lucid Common Lisp and C  . This morphological database is currently being used in a graphical work bench  ( XTAG ) for the development of tree-adjoining rammars and their parsers  ( Paroubek et al ,  1992) . 
1 Introduction
Morphological analysis has experienced great success since the introduction of two-level morphology  ( Koskenniemi , 1983; Karttunen ,  1983) . Two-level morphology and its implementation are now well understood both linguistically and eomputation any  ( Karttunen , 1983; Karttunen and Wittenburg , 1983; Koskenniemi , 1985; Barton et al , 1987; Koskenniemi and Church ,  1988) . This computational model has proved to be well suited for many languages  . Although there are some proprietary wide coverage morphological n-alyzers for English  , to our knowledge those that are freely available provide only very small coverage  . 
Working from the 1979 edition of the Collins Dictionary of the English Language available through ACL-DCI  ( Liberman ,  1989) , we constructed lexicons for PC-KIMMO ( Antworth ,  1990) , a public domain implementation of a two-level processor  . Using the morphological rules for English inflections provided by Karttunen and Wittenburg  ( 1983 ) and our lexicons , PC-KIMMO outputs all possible analyses of each input word  , giving its root form and its inflectional * This work was partially supported by DARPA Grant  N0014-90-31863  , ARO Grant DAAL03-89-C-0031 , and NSF Grant IPd 90-16592 . We thank Aravind Joshl for his support for this work  . We also thank Evan Antworth , Mark Fo~ter , Laur ~ Karttunen , Mark Liberman , and Annie Zaenen for their help and suggestions . 
? Visiting from Stanford University.
2 Lexicons for PC-KIMMO
We used the set of morphological rules for English described by Karttunen and Wittenburg  ( 1983 )  . The rules handle the following phenomena ( mong others 1 ) : epen thesis , y to i correspondences , s-deletion , elision , itoy correspondences , gemination , and hyphenation . In addition to the set of rules , PC-KIMMO requires lexicons . We derived PC-KIMMO-style lexicons from the 1979 edition of the Collins Dictionary of the English Language  . The 90000-odd roots ~ in the lexicon yield over 317000 inflected forms . 
The lexicons use the following parts of speech : verbs  ( V )  , pronoun ( Pron ) , preposition ( Prep ) , noun(N ) , determiner ( D ) , conjunction ( Conj ) , adverb ( Adv ) , and adjective ( A ) . Figure 1 shows the distribution of these parts of speech ill the two formats : The first column is the distribution of the root forms in the PC-KIMMO lexicon files  , and the second column is tile distribution for the inflected forms derived from the lexicons and stored in the database  . For each word , the lexicon lists its lexical form , a continuation class , and a parse . 
The continuation class specifies which inflections the lexical form can undergo  . At most , a noun rooten genders four inflections ( singular , plural , singular genitive , plural genitive ); an adjective root , three ( base , com-lWe refer the render to Karttunen and Wittenburg  ( 1983 ) or Antworth ( 1990 ) for more details on the morphological rule ~ . 
2Proper nouns were not included in the tables.
AcrEsDECOLING-92 . NANTES . 2328 AOt ) r1992950 Paoc . oF COLING-92 . NArcr~s . AUG .  2328 . 1992 parative , superlative ); and a verb root , five ( infinitive , third-person singular present , simple past , past participle , progressive ) . The exact number generated by any given root depends on its continuation class  . 







Verb  #Root Forms 10O  #Inflected Forms 2 . 1 Ad jec t ives Ttle continuation classes for adjective specify that the word can undergo the rules of comparative and superlative  . For example , the lexicon entry for the adjective ' funky ' is : funky  A-Root2 " A ( ~ unky ) " The entry consists of a word ~ unky , followed by the continuation class hA ~ oot2 , and a parse " A(fuaky ) " . 
The continuation class specifies that the word can undergo the normal rules of comparative and superlative  , and the parse states that the word is an adjective with root ' funky '  . The following is a sample run of PC-
KIMMO's recognizer : recognizer > > funky funkyA ( funky ) recognizer >> funkier funky+erA ( funky ) COMP recognizer >> funkiest funky+estA ( funky ) SUPER The output line contains the root tbrm and any affixes  , separated by '+' s . Thus , a '+' in the output indicates a morphological rule was used  ; its absence means no rule was used , and the parse was returned as found in the lexicon  . PC-KIMMO will antomatically add attribute such as COKP and SUPER to the parse  , depending on the morphological rule matched by the surface form  . But for irregularly inflected forms , special continuation classes indicate that tbc complete parse  ( viz . , part of speech , root , mid attributes ) should be taken ' as is ' from the lexicon entry . For example : better A-Root I " l ( good ) COMP " beatA . .Root ; 1" A ( good ) SUPFAt " good A-Root I " A ( good ) " Tileclass A-Root1 tells PC-KIMMO not to apply the morphological rules to ' better '  , ' best ' , and ' good ' . 
Thus , ' gooder ' is not recognized as ' good Tcr'.
recognizeC ; ~ best best N ( best ) SG bestA ( good ) SUPER best Adv ( beet ) recognizer >> good good N ( good ) SG good A ( good ) recognizer > > better better N ( better ) SG better A ( good ) COMP better V ( better ) INF better Adv ( better ) recognizer >> gooder *** NONE *** recognizer > > goodest *** NONE *** The attributes  ( such as CO l , ~' ) can later be translated into feature structures with the help of templates as in PATR  ( Shieber ,  1986) . The list of attributes is found in Appendix A . 
2.2 Nouns
Inflections of nouns , such as the formation of plural and genitive , are handled by morphological rules ( unless the formation is idiosyncratic )  . In the lexicon for nouns , the continuation class Ii ~ oott indicates that the formation of genitive applies regularly and that no other inflection applies  . The continuation class IIAtoot2 indicates that the formation of the plural and of the genitive apply regularly  . 
miceN-Root1"N ( mouse ) PL " mouse W_Roott " N ( mouae ) SG " ambassador ~ - Root 2 " I ( ambassador ) "" Thus , the above lexicon entries are recognized as below : recognizer >> mice mice N  ( mouse ) PL recognizer > > mouse mouse N ( mouse ) S (  ; 
V ( mouse ) INF mouse recognlzer >> mouses mouse+sV ( mouse ) 3SGPRES recogmzer >> mice'smice+'sN ( mouse ) PLGEN recognlzer >> mouses '*** NONE *** recognlzer ~: ~ mouse's rnouse +' sN  ( mouse ) SGGEN recognizer >> ambassadors ambassador+sN ( arn bassador ) PL recognlzer > > ambassador's ambassador +' sN ( ambassador ) SGGEN recognizer >> ambassadors'ambassador+s+'s N  ( ambassador ) PLGEN2 . 3 Verbs Given the infinitive form of a verb , the formation of the third person singular (+ s) , its past tense (+ ed ) , its past participle (+ ed ) , and its progressive form ( + ing ) is AcrEs DECOLING-92 . NANIES , 2328 Aotrr 19929$ lPROC . OFCOLING-92, NANTES , AUG .  2328 ,   1992 handled by morphological rules unless lexical idiosyncrasies apply  . In order to encode all possible idiosyncrasies over the three verb endings  , eight continuation classes are defined ( see Figure 2 )  . Each continuation class specifies the inflectional rules which can apply to the given lexical item  . 
Continuation class








Applicable rules none+ed+s+s , + ed+ing+ing , + ed+ing , + s + in ~ , + s , + ed Figure 2: Continuation classes for verbs Examples of lexical entries for verbs follow : admire  V~oot8 " V ( admire ) "dyeing V_Roo1:1"V ( dye ) PROG " dye V_~oot 4 " V ( dye ) " zigza ~ ing V-Root I " V ( zigzag ) PROG " zigzagged V-Root 1 " V ( zigzag ) PASTWE " zigzagged V_Rootl " V ( zigzag ) PPARTWE " zigzag V_Root 3 " V ( zigzag ) " tangoes V_P . oot ; 1"V ( tango ) 3 SGPRES " t ; amgo V_Root 6" V ( tango ) " taught V_Rootl " V ( teaeh ) PASTSTR ?' taught V . .Rootl " V ( taach ) PPARTSTR " teachV-Root 7 " V ( teach ) "
Examples of runs follow : recognizer > > admires admire TsV  ( admire ) 3 SGPRES recognizer >> admired admire+ed V ( admire ) PASTWK admire-Fed V ( admire ) PPARTWK recognize C ; ~admiring adrnire+ing V ( admire ) PROG recognizer > admi read mire V ( admire ) INF recognizer >> dyeddye Ted V ( dye ) PASTWK dye+ed V ( dye ) PPARTWK recognizer >> dyesdye+sN ( dye ) PL dyeTsV ( dye ) 3 SGPRES recognlzer >> teachest each+sV ( teach )   3SG PRES recognizer >> teached *** NONE *** recuizer > > taught taught V  ( teach ) PASTSTR taught V ( teach ) PPARTSTR recognizer : ; ~tangoed tango+ed V ( tango ) PASTWK tango Ted V ( tango ) PPARTWK recognizer ~ tangoing tango+ing V ( tango ) PROG recognizer ~ tangoes tangoes V ( tango ) 3 SGPRES The attributes WE ( for " weak " ) and STR ( for " strong " ) mark whether the verb forms its past tense regularly or irregularly  , respectively . The distinction enables unambiguous reference to homographs -- words spelled identically but with different semantic and syntactic properties  . For example , the verb ' lie ' with the meaning ' to make an untrue statement ' and the verb ' lie ' with the meaning ' to be prost rate ' have different syntactic and morphological behavior : the first one is regular  , while the second one is irregular :
He has lain on the floor.
He has lied about ; everything.
Usually , it suffices to index the syntactic properties of each verb by its root form alone  . However , homographs require addition information . In English , the attributes WE and STR are sufficient to distinguish omographs with different morphological behavior  . 
recognizer > > liedlied N ( lied ) SG lie+ed V ( lie ) PASTWK lie+ed V ( lie ) PPARTWK recognizer > lainlain V ( lie ) PPARTSTR recognizer > > laylay V ( lay ) INF lay V ( lie ) PAST STR2 . 4 Other Parts of Speech Pronouns , prepositions , determiners , conjunctions , and adverbs are given continuation classes that inhibit the application of morphological rules  . All of the morphological informatiou is stored in tile parse in the lexicon entry : herselfPron " Pron  ( herself ) REFLFEN3SG " itPron " Pron ( it ) NEUT 3SG NOM ACC " behind Prep " Prep ( behind ) " cooly Adv " Adv ( coolly ) "
PC-KIMMO recognizes them as follows : recognlzer > > herself herselfPron  ( herself ) REFLFEM3SG recognizer > it it NOt ) 5 Git Pron ( it ) NEUT3SGNOMACC recognizer > > behind behind N ( behind ) SG behind Adv ( behind ) behind Prep ( behind ) recognlzer >> coolly coolly Adv ( coolly )   3 Lexicons as a Database PC-KIMMO builds in memory a data structure from the complete lexicon  . Consequently , our large lexicons occupy more than 19 M bytes of process memory . Further , the large size of the structure implies long search times as PC-KIMMO swaps pages in and out  . 
Thus , to solve both the time and space problems simultaneously  , we compiled all inflectional forms into AUtT . SDECOI . \] NG-92, NANTES , 2328 AOt ~"1992952 PRoc . OFCOLING-92, NANTES , AUG .  2328 ,   1992 a disk-base database using a UNIX hash table facility  ( Seltzer and Yigit ,  1991) . 
To compile the database , we used PC-K1 MMO as a generator , inputting each root form and all the endings that it could take  , as indicated by the continuation class . The resulting inflected form became thckey , and the associated morphological information was then inserted into the database  . 
For example , the PC-KIMMO lexicon file contains the entry : sa  , ~ if_Root2"II ( saw ) " The class LRoot2 indicates that tire noun'saw'forms its plural  , singular genitive , and plural genitive regularly . Thus , we send to the generator threelexieal forms and the three suffixes for each infleetiou  , extracting three inflected surface forms :
Lexicale a ~+ ssav+'ssav+s+'s
Surface saws saw ~ ssaws J
The root form of a noun is identical with the singular iuflection  , so we have a total of four inflected for n~s . Since we know which suffix we added to t be root , we also know the attributes for that inflection . 
The inflected form becomes the key , while tile part of speech , root , and attributes are stored as the content intire database  . Hence , the lexicon entry for the noun'saw'produces four key-content pairs in t be database : C saw  , saw NSG ) , ( saws , saw IIPL ) , ( saw's , sawl\[SGGEl\[) , ( saws ~ , sawl\[PLGEN ) . 
Likewise , the verb lexicon contains the entries : salt V_Root  8 " V ( saw ) " saw V_Roo~l " vC see ) PASTSTR " The continuation class VAtoot8 indicates fonr inflections besides the infinitive : third-person singular  ( + s )  , past(+ed ) , weak past participle ( Ted ) , and present participle (+ ing ) . Hence , the generator produces :
Lexical sal ~+ ssaw+ed saw+ing
Surface saws sawed sawing
The class V_Rootl allows noir dlections , but builds tire inflection-feature pair directly :   ( sav , sea
VPASTSTR).
Ilence , morphological aualysis is rednced to sending the surface forms to the database as keysarid retrieving thc returned strings  . Figure 3 lists the database keys and content strings produced by the three lexicon lines given above  . Note that distinct entries are separated by '#' . Since multiple lexical forms can map to the same surface form  , the actual number of keys ( ca .  292000 ) is less than the number of lexical forms ( ca .  317000) . Also , with the database residing on the disk , access times average fi to I0 milliseconds , which greatly improves upon PC-KIMMO . 
3.1 Implementation Considerations
Th clarge number of keys implies a very large disk file  . " Ib reduce the size of the file , we take advantage of tire morphological similarity in English between an inflected form and its lexical root form  . Indeed , the root is often contained intact within the inflected form  . 
Kcy ~ ontents saw NSG #saw VINF #see VPA STSTR saw NPL#saw V  3SG PRESsaw NSG GEN saw VPROG saw VPAST WK  #saw V PPARTWK saw NPLGEN 
Figure 3: Database pairs llence , instead of storing the root , we store the number of shared characters along with any differing characters  , and reassemble tile root front the inflected form on each database query  . Further , despite tire large set of attributes , relatively few combinations ( ca . 80) are meaningful , and can be encoded in a single byte . Since a large proportion of roots are wholly contained with intire surface form  , and since 92% of the keysllave one lexical entry , the average content string is only three bytes long  . Consequently , the total disk file is under 9M bytes . We anticipate further compaction i the near future  . 
3.2 Accompanying Utilities
Besides the PC-KIMMO lexicons , we currently maintain the database file and an ASCII-character " flat " version for online database browsing  . One program converts the lexicons into the database format  , while others dump the database into the flat file or reconstruct tl ~ e database from the flat file  . We have also built a X Windows tool to perform maintenance on the database file  ( see Figure 4 )  . This tool automatically maintains the consistency between the flat file and the database file  . We have builthooks in C and Lisp ( Lucid 4 . 0) to access either the database or PC-
K1 MMO from within a running process.
~: I~IIv ., ~
Re ~: ~ Pre . oun
VPI~TSTR kamer VP l ~ rSIRI~aJum . U~r-I Figure 4: Morphological Database X Window qbol 4 Obtaining the Analyzer The PCoKIMM MMO lexicons , the database files , ttle LISP mtd C access functions , programs for converting between formats , and the X Window maintenance tool are ACl . T~s DECOLING-92 , NAntEs , 2328 AOt~l "1992953 l'a oc . Ol : COLING-92, NANTES , AUG .  2328 ,   1992 available without charge for research purposes . Pleases ende-mall to zaidell cia . np an n , adnor write to either Yves Sehabas , Martin Zaidel , or Dania Egedi . 
5 Conclusion
We have presented freely available morphological tables and a morphological naly zer to handle English inflections  . The tables handle approximately 317000 inflected forms corresponding to 90000 steins . 
These tables can be used by an implementation fa two-level processor for morphological nalysi such as 

However , these large tables degrade the performance of PC -KIMMO's current implementation  , requiring about 18 M bytes of RAM while slowing the access time . 
To overcome these shortcomings , we created a morphological analyzer consisting of a disk-base database using a UNIX hash table facility  . With this database , access times average 6 to 10 milliseconds while moving all of the data to the disk  . We also provide an X Window tool for facilitating the maintenance and access to the database  . 
The package is ready to be integrated into an application such as a parser  . Hooks written in Lisp and C for accessing these tables are provided  . 
To our knowledge , this package is the only available free English morphological nalyzer with very wide coverage  . 

Evan L . Antworth .  1990 . PC-KIMMO : a two-level pro-cessor for morphological nalysis  . Summer Institute of Linguistics . 
G . Edward Barton , Robert C . Berwick , and Eric Sven Ristad .  1987 . Computational Complexity and Natural Language . MIT Press . 
Lanri Karttunen and Kent Wittenburg .  1983 . A two-level morphological nalysis of English . Texas Linguistic Forum , 22:217-228 . 
Lauri Karttunen .  1983 . KIMMO : A two-level morphological analyzer . Texas Linguistic Forum , 22:165-186 . 
Kirmno Koskenniemi .  1983 . Two-level morphology : a general computational model for wordform recognition and production  . Technical report , University of
Helsinki , Itelsinki , Finland.
Kimmo Koskenniemi .  1985 . An application of the two-level model to Finnish . In Fred Karlsson , editor , Computational Morphosyntax : Report on Research 1981-1984  . University of Belsiuki . 
Kiramo Koskenniemi and Kenneth W . Church . 1988.
Complexity , two-level morphology and Finnish . In Proceedings of the 12 th International Conference on Computational Linguistics  ( COLING'88 )  . 
Mark Liberman .  1989 . Text on tap : the ACL data collection initiative . In Proceedings of DARPA Workshop on Speech and Natural Language Processing  , pages 173-188 . Morgan Kaufman . 
Patrick Paroubek , Yves Schabes , and Aravind K . Joshi . 
1992 . XTAG-a graphical work bench for developing tree -adjoining grammars  . In Third Conference on Applied Natural Language Processing  , Trento , Italy . 
Margot Seltzer and Ozan Yigit . Winter 1991 . A new hashing package for UNIX . In USENIX . 
Stuart M . Shieber , 1986 . An Introduction to Unifi-cation-Based Approaches to Grammar  . Center for the Study of Language and Information , Stanford , 

A List of Attributes 1SG   1st person singular 2SG   2nd person singular 3SG   3rd person singular 1PL   1st person plural 2PL   2nd person plural 3PL   3rd person singular 2ND   2nd person 3RD   3rd person
SG singular
PL plural
PROG progressive
PAST past tense
PPART past participle
INF infinitive or present ( not 3rd person )
PRES present
STR strongly inflected verb
WK weakly inflected verb
GEN genitive (+' s)
NOM nominative case
ACC accusative case
NOMACC nominative or accusative case
NEG negation
PASSIVE passive form ( for " born " ) to contracted form verb + to
COMP comparative
SUPER superlative
MASC masculine
FEM feminine
NEUT neuter
WH wh-word
REFL reflexive
REF1 SG1st person singular referent
REF2ND 2nd person referent
REF2SG 2nd person singular referent
REF2 PL2nd person plural referent
REF3SG3rd person singular referent
REF3 PL3rd person plural referent
REFMASC masculine referent
REFFEM feminine referent
ACRESDE COLING-92 , NANTES , 2328 AOt ~ rt 992954 PROC . OFCOLING-92, NANTES . AUG .  2328 , 1992 Un Analyseur Morphologique del'Anglais
R Ssum~du papier
Ab ) ~ cely Available Wide Coverage Morphological Analyzer for English Daniel Karp  , Yves Schabes , Martin Zaidel , et Dania Egedi . 
Nousprdsentous unmmlyseur morphologique del ' Anglais  . Lestables morphologiques in cluent plus de 317000 formesfld chies , d ~ rivdes de 90000 racines . 
Lestables on tdtd construites ? l'aide de dietion aires dlectroniques  ( en particulier " Collins Dictionary of the English Language  , 1979 edition ") distribu 6 espar ACL
DCI ( Liberman , 1989).
Lestables sont disponibles dans deux formats . Le premier formatpeut 6tre util is dave cun analyse ur morphologique ? deux niveaux telque PC-KIMMO  ( Antworth ,  1990) . Dans le deuxi ~ me format , to utes lesformes fld chies on t~td in sdrSes dans une base de donn ~ esur disque hl ' aided ' un utilitaire surUNIX  ( Seltzer et Yigit ,  1991) . Unoutil pour X Window per-met d ' accd deret de modifier cette base de do nn ~ esestanssi disponible  . 
L ' analyseurpeut 6tre utilisd parun autre programmetel qu ' un analysen rsyntaxique  . Leetable speuvent 6 treacce desenLispet C . 
Tables pour PC-KIMMO
Nous avons utilis ~ lesrdgles morphologiques del ' anglaisd crites par Karttunenet Wittenburg  ( 1983 )  . Al ' aide decesrdgle set de dictionaires , nous avons crdd des lexiques quit peuvent 6tre utilisd par PC-KIMMO ( une implementation d ' unanalyseur morphologique ? deux niveaux  ( Antworth ,  1990)) . La Table 1 comportelenombres dera cinesain siquele nombres deformes  fl6chies quipeuvent 6tre reconnues . 
Categories ~ Formesfl ~ chies
Pronom ( Pron ) ~93
Preposition ( Prep ) ~150
Determinant ( D ) 100
Conjonction(Conj ) 64
Adverbe ( Adv ) 7176
Nora ( N ) 199303
Adject if ( A ) 65 146
Verbe(V ) 454 45
TOTAL ~317477
Figure 1: Nombrede Racineset de Formes Fl 6chies.
Base de Donn 6es
PC-KIMO chargel a total it ~ du lexique en md moir e sousla formed ' une structure de donn gesqui permet de factor is erles prefixes communs des mots  . Aveenos lexiques charges , PC-KIMM Ooecupeen viron 19 megaoctets . L'espace md moitest trop important et de plus le temps d ' acc dsn'est passatis faisant  . 
Nous avons done compil , ~ toutesles formes fi , ~ chiessous forme de base de do nn desur disque aveel ' aided ' unutilitaire UNIX  ( Seltzere L Yigit ,  1991) . Cetteutili-taire permet d'd liminer PC-K1 MMOt ) uten rd du is an tI'espacem ( imoire ( 200kilooctects ) et let emps d ' accds ( entre 6 et l0 millid me desecondes )  . 
Cestables sontmaiutenues sous for me de base de donng-eset auss isous forme de text e  . Desprogrammes permettent latrans formation de cestables d'uue form b  . l ' autre . Nousavons ~ critunoutilpour X Window ( Figure 2 ) quipermet d ' accd deret demo difier cette base de do nn desestaussi disponible  . 
' xtmu : . , , tt ~ . , BIIIII in \[,-, a , t ,, - IIc ~- . ~I ~ I~J , ,~ , ~ IIm ,  -  , -IIE rta"r ~-- ,  117"~'
PP ~ q " ~ YIR
Figure 2: Utilitai repour la Base de Donn des Mor -phologiques 
Distribution
Nous distribuons cestable sain siqueles utilitaires ansfra is a vecuncontratden on -commercialisation  . Veuillez contacter parcourier , ilectronique zaidel@?is . upen n . eduoud crireh I ' unedes personnessuivantes : Yves Schabes  , Martin Zaidelou Dania Egedi . 
ACTESDECOLING-92 , NAlqI'ES , 2328 Ao~rr 1992955 PROC . or COLING-92, NAN'r ~ S . AUG .  2328 .  1992
