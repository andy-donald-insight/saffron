Partial Descriptions and Systemic Grammar
Chris Brew
Centre for Cognitive Science
University of Edinburgh
2 Buccleuch Place
Edinburgh

chrisbr ~ uk.ac.ed.cogsci
Abstract
This paper exarnines the properties of feature-ba ~sed partial descriptions built on top of tlalli -day's systemic networks  . We show that the crucial operation of consistency checking for such descriptions iNP-complete  , and therefore probably intractable , but proceed to develop algorithms which can sometimes alleviate the unpleasant consequences of this intractability  . 
1 In t roduct ion tIalliday's system networks \[3\] layout india-grammatic form the interlinked sets of linguistic choices which a speaker nmst make in order to generate an utterance  . As such they have formed the basis of several computer models of natural language generation  \[4  , 11\] . t to wever , as Mellish\[12\] has pointed out , a network can also be read as encoding a set of background constraints which restrict the co- occurrence of descriptive features  , and hence as a specification of the way in which partial descriptions of linguistic objects can be combined  . Although it is easy to combine feature sets , it is not a . lways clear whether the resulting combined description can actually describe any wellformed linguistic object  . Thus the main task we face is that of checking feature sets for consistency  . 
Consider for example the framework given by Winograd for the description of English pronouns  , which is reproduced in figure 1 . Suppose thai ; a natural language system has somehow recovered the information that a pronoun in a particular position can be treated as both third  ( person ) and subjective . At this stage we could be dealing with either " they "  , " he " , " she " or " it " . We rewe to combine this underspecified pronoun with the further description feminine we should know for sure that the pronoun described is " she " and the number has to be singular  , since the network dictates , in a way which will be explained in detail below , that the choice between feminine , masculine , and neuter is only applicable to third person singular pronouns  . The network thus provides the raw material for particular sorts of limited inference about the behaviour of pronouns  . We wanted to investigate the mathematical properties of systemic networks in order to better understand the nature of the constraints on feature structure which they are cap a Me of expressing  . 
Both Mellish and Kasper \[7\] provide translations of systemic networks into non-graphical form Misms : Mellish expresses constraints as axioms within a simple subset of predicate logic  , while K as per uses an extended version ' of Functional Unification Grammar  \[10\]  . Unfortunately the methods which they then use to check for consistency are powerful general methods which may in cur considerable computational cost  . 
We initially hoped to show that systemic networks constitute a low-power constraint language which combines the twingoals of linguistic credibility and computation Mtractability  . 
While the main result we present in this paper is a negative one indicating the unexpected power of systemic networks  , we do go on to present suggestions about how networks can be exploited in natural anguage applications  . 
3 6 pI question animate \[ inanimate person M demonstrfirst second thir dileal ' ~_~ fat ' subjective objective rettexive possessive poss detfeminine m~tsculinesinglar \] neuter phtra  , 1 Figure 1: A pronoun network for English 2 What's in an et ? Our first task is to provide a precise charact  . erisa--tion of the information expressed by ~ systemic network  . We begin by defining a way of labelling systemic networks  , then provide a translation which maps labelled networks into collections of axioms expressed in the tbrm of ' propositional logic  . This work is a slight retinement of a very similar approach used by Mellish  . 
Figure 1 contains examples of each of the t burtypes of syste  . m which we need to consider , linked together in such a way as to produce a description of the possible \['  ( 3 rills of English pronouns . 
The leftmost system is a choice system expressing the opposition between qucs lion ~ per-soual and dcmonslral  , ive pronotlns . Within these broad classification further distinctions operate  . For example queslion pronouns i i l a ~ y b e a'lt71?ralC or in ani'maiG and m , lst also make a choice between various case '-; . The system which expresses t ~ he necessity of making i  ; wo sinm ltane--otis choices is indicated wit . haleft . curly bracket , and isi , l , e and system . Note that ~ here are two routes ~ , otile choice of case , one t?om q'ucslion and the other fro , , personal . The system which ties these two routes together is called the disjunctive system  . Finally , the rightmost system is a choice between various grammatica ! genders  . 
This system can only be reached it ' a pronoun is both third and singular  . The system involving the righthand curly bracket which expresses this is called the conjunctive system  . 
3 Labelllngs for networks
We now establish technical definitions of two types of labelling for systemic networks  . 
3.1 Basic Labeltings
A basic labelling is defined to be a partial function from lines to names such that ? ~ A line receives a name if and only if there is a choice system to whose righthand side i ~ is directly attached  . 
No two lines carry the same name.
Figurel , ~dlowsaba , ~ d clabelling 3"\] plq question personal demons tranimate question \ ] ~ nanimate question personal 
V question personal first personal personal demonstr demonstr second subjective objective reflexive possessive poss det third  , third personal ~--~
V singular rtem cm~tr\[\[plur______~L__nearf\ [ far feminine masculine neuter Figure  2: An exhaustively labelled version of Winograd's network  3  . 2 Exhaust ive labe l l ings Let ~" be a 11 function from lines to names for these lines .   5 c is an exhaustive labelling of a network if and only if the following conditions hold  :-1  . That part of ~" which provides names for lines attache directly to the right of choice systems must be a basic labelling  . 
. If 5 c assigns a line name lzh ~ to the line which is directly attached to the lefthand side of an and system  , then it must also assign that name to the lines which are directly attached to the right hand side of that system  . 
. If ) c assigns line names 11,12, . . . lm to the lines entering a conjunctive system ( wherell is the label for the line appearing at the top of the system and lm that at the b of to m  )  , then it must assign the labelll A12 A ? . . lm to the line which leaves that system 4 . If ~" assigns line narnesll , 12, . . . l , ~ to the lines entering a disjunctive system ( adopting the same ordering convention as above )  , then it must assign the label 11 Vl ~ V . . . Irato the line which leaves that system . 
Figure 2 is an exhaustively labelled version of figure 1  . 
4 Translating labelled networks
We use a translation scheme given by Mellish \[12\] to produce a set of logical axioms equivalent in meaning to the original network  . Mel-lish's scheme can be applied to all four types of system and the correct results will be produced  , but with our labelling scheme only choice systems contribute to the meaning of the network  . 
Each choice system translates into two axioms : an accessibility axiom  , expressing tile constraint that none of the labels to the right of the system can be selected unless the entry point of the system has been reached  ; and an exclusivity axiom expressing the fact that these labels are mutually exclusive  . 
38 va 2
Figure 3: A network for 3SAT   5 Systemic classification is

In this section we show that the problem of systemic cl~sification is at least as hard as prob-lerns known to be NP-hard  . This is done by constructing a polynomial time mapping  1~ from instances of the NP-hard problem called 3SAT to networks which can be tricked into solving this problem for us  . For an introduction to similar linguistic applications of complexity theory see 
Barton et al\[1\].
If there were a polynomial time algorithm tbr checking arbitrary systemic networks  , it would follow that 3SAT could be solved by the composition of the mapping that constructs the network with the algorithm that cheeks the network  . Since this composition is itself a polyno- . 
mialtime algorithm we would then have a polynomial time solution fc  ) r3SAT , and hence for all other problems of the complexity class Af T  )   . 
Thus the successflfl construction of 1I implies that systemic classification is itself NP -hard  . 
5 . 1 . ~_\[~he 3SAT problem 3SAT is the problem of determining the satisfiability of a boolean for rnnla  , state dill conimic tive normal form , in which exactly threeva ~: iables occur in each clause  , of the conjunctioa . These variables may either be positive or negated  , and may be repeated fl : om clause to clause . It , is known that 3SAT is just as hard as the proble ~ rl of sat- -isfiability for general boolean formulae  ( Barl , on at al provide a demonst , ration of this fact on pp52-~35 of\[(I ) . 
5 . 2 The mapp ing f rom 3SAT instances to networks The mapping II takes a 3SAT instance and produces a network . Lettile name of the 3SAT instance be E and its length NI , ; . 
? Make a list of the variable names used in E , counting positive and negative occurrences of a w triable a stile same  . This can certainly he done in time polynomial in Nt ~ using a standard sorting algorithm such as merges or t  . Let the name of tile list of variable names be V and its length Nv  . We use the example of the very simple expression ( xVffVz ) A ( zV~V~7 )   ( 1 ) ? Construct a network consisting of a large and system feeding Nv parallel binary choice systems  . Each choice system carries two labels , one corresponding to a vari-ahle name in V and the other formed by negating the label on the other branch of the system  . The choice of prefix should be such that all labels on tile resulting network are unique  . '\]' his part of the process is polynomial in the length of V  . 
e For every clause in E , addateraary dis?junctive system linking the lines of the network having the label  , ; corresponding to the three symbols of the clause  . This part of the process involves scanning down the Nv systems of the network once for each clause of E  , and is there R ) reals opolynomial in NE . 
Finally , binary e hole e systems are attached to the outputs of all the disjunctive systems introduced in tile last stage  . These systems are labelled with generated labels distinct from those already used in the network  . ' l'h is step is clearly also polynomia , linNt ~' , requiring the crealion of an mnber of choice systems equal t  , o the number of ' clauses in P ; . 
The network give ui ~ figure 3 is the Oile which would be produced l ? om t5'  . In order to use the construcLed network to solve the satisfiability problem for /'  ;  , we check an expression cor-respouding t /) I ; he conjnnction of all the three member (- lause , ~; int ~: . This islmiliby choosing ~: , l arbitrary label from each of t imrightmost choice systems  . ' fhe coaitmct , io ~ of the : ; e labels is a consisi: , ent descr~l , ,~ on whenever all the " assignment . The choice systems to the left of the disjunction express the facts that no variable can be simultaneously true and false  . A correct checking algorithm will succeed in just those circumstances where there is at least one value assignment for the variables of E which makes Ecome out true  . Systemi classification is therefore at least as hard as the other problems in Alp  , and we should be very surprised to find that it can in general be solved in polynomial time  . 
6 Checking systemic descriptions
Although accurate checking of systemic descriptions is an NP-hard problem  , it is still possible to devise algorithms which carry out part of the process of checking without incurring the cost of complete correctness  . Our algorithm depends on a preprocessing step in which the original network is split into two components  , each of which embodie some but not all of the information that was present at the outset  . 
The first component is a simplified version of the original network  , in which no disjunctive systems are present . This is achieved by removing all disjunctive systems  , then reattaching any dangling systems to a suitable point to the left of the position of the disjunction  . For convenience in bookkeeping we introduce special generated features which take the place of the disjunctive expressions that appear in the labelling of the original network  . Figure 5 shows the result of peeling away the disjunction in figure  4  . 
The second component of the network consists of a collection of statements indicating ways in which the generated features may be discharged  . 
For the example network we would have had to note that genfeat ~_ clV  c2 Taken together the simplified version of the network and the statements about generated fen -tures contain all the information eeded  . The simplified network is no wamenable to deterrn in - istic and efficient checking procedures  , including reductions to term unification as proposed by Mellish  . The efficiency of these techniques hinges on the removal of disjunctive systems  . 
The second stage of checking involves the search for a consistent way of discharging all the al  a2   a2 Vblblb ~
CI\[C2
Figure 4: A small example network ala2
C ~ genfe at c2 blb2
Figure 5: The transformed version of the example This is the potentially costly part of the checking process  , since separate disjunctions may conspire to produce exponentially many different alternatives which have to be checl  ( ed . It was to be expected that the process of system i checking would involve an exponential cost somewhere  , so this is no surprise . 
Even the second stage of checking is cheap unless two separate condition shoh:t  1  . . The description produced by the first stage of checking must involve many generated features  . 
2 . The generated features must be interdependent , in that the way in which one feature is discharged colmtrains the way in which olher fie a  . tures can be discharged . 
We can't be sure whether the first condition is going to hold until we see the OUtl  ) ut of the first stage , but we ca . nestimate the extent to which features interact , by inspect , lag the checking rules which arise when ( henet , work is pard-t . ioned . Thus , while we can't promise that the use of systemic networks will ensure tractability !' or arbitrary grammars  , v , ' e can help linguists to catch potential t ) robler ns in the formulation of their feature system  , ,~ during grammar development , and avoid the risk of unexpected combinatorial explosions during the exploitation of the grammars in question  . 
Refe : reaces\[1\]G . Edward Barton , Robert C . 13 erwick , and Eric Sven I , istad . Computational Complex-ilya ' ad Nalu ~ al La' /zguage  . MIT Press , 1988 . 
\[2\] Andreas Eiselean dao chenl ) 6 rre . Unification of Disjunctiw . ' Feature I ) escriptions in Proceedings of the 25t , hAnnual Meeting of the Association for Computation all  , inoguisi ; ics , Stanford University , Stanford , () A . 
July G-9,t987.
\[3\] M . A . K Halliday . q'he/brm of ! a functional grammar , h:G . R . Krcss , edit . or , l latlidayl:Sysle'm and t "~ clioTt i7~ Larzc/~za:\]e , chapter ' . 2, pages 7-25 . ()?ford University
Press , t976.
\[4\](:~eo ; get\[oughton . 73 cpvocl ' ~ clio ~' of ga ~ ; ' -9uoye i  ~ Dialo9~?c : A co'mp ~ da Zio-nal model PhD thesi , ; , Universit . y of Sussex , 1986 . 
\[5\] Lauri Karttunen . Features and Values Pro--ceedings of the 25th Annual Meeting of the Association for Computational Linguistics  , Stantbrd University , StaMbrd , CA , July 2-(5 ,  1984 . 
\[6\] Robert T . Kasper . Fea ( , ure Structures : A Logical Theory with Application to l  , an-guage Analysis PhD thesis , University of
Michigan , 1987.
\[7\]l /, obertT . Kasper . An Experimental Parser for Systemic Grammars Ill Proceedings of the  i2th International Conference on Con > putational , inguistics : COLIN(\]88 , Budapest : August 1988 . 
\[8\]t lobert T . Kaspcr . A Unification Method for 1 ) is junctive Feature Descriptions In Proceedings of the  25th Annual Meeting of the As , ; ociation for Computation all , inguistics , Stanford University , Stanford , CA , July 69 ,  1987 . 
\[9\] Robert T . Ka . ~per , and William Rounds . A Logical Semantics For Feature Structur ( ~s In Proceedings of the 24th Annual Meeting of the Association t'or Computatiorm  . 1Lin--guistics , Columbia University , New York,
NY , June 1013, 1986.
\[10\] Martin Kay . Parsing inflmctional tmiti-cation grammar . In D . R . Dowry , L . Kar-tunnen , and A . Zwicky , editors , Nalural Langua , qeP a ' , 'sin9 , pages 251278 . Can > bridge University Press , Cambridge , England ,  1982 . 
\[11\]W . C . Mann and C . Mathiessen . Nigel : A systemic grammar for text generation l /_ Benson and a  . Greaves Sy . siemic Perspectives on Discourse , Ablex , London , England , 1985 . 
\[12\]C . S . Mellish . hnplementing sysl , cmic dassi- . 
fication by unilication . Comlnda * io ~ zallaw.
guistics , 14(11):405l , 1988. Wil~ter.
1\[3\] Terry Winograd . U ~, dc~:sla~dz/~9Nol~tra\[
La ~9 ~* age . Academic Press , 1972.
4 i
