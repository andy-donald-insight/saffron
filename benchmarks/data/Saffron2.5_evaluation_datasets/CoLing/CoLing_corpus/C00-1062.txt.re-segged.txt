LFG Generation Produces Context-free Languages
Ronald M . Kaplan
Xerox Pale Alto Research Center
3333 Coyote Hill Road
Pale Alto , California 94304 USA

J/irgen Wedekind
Center for Language Technology
N jals gade 80
2300 Copenhagen S , Deninark
juer gell ~ cst.ku.dk
Abstract
This pater examines the generation prollem for a ce\]:tain linguisti:ally relevant  sul0class of LFG grammars . Our main result ; is that the set of strings that such a grammar relates to a particular f-structure is a contextfree language  . This result obviously ex-l ; enlsto other : on text-free baselgrammatical f ( r-malisIns , such its PAT ll , , and also to formalisms , hal ;  1 ) ermit a contextfree skeleton to 1e extracted ( 1 ) er-haps some variants fHPSG )  . The l )\]:() fiscmstru:-l ; ive : from the given f-sl ; ru : ture al ) art ; i : ular cn text-free grannnar is create , d whose , yMl is the ( lesire , dsel ; OfS ; l'illgS . ~4 aily existing generations l ; ral ; e , gies ( top-lown , lottom-ul , head-driven ) can be understood as all : ernative ways of avoiding the creation of useless context-Dee productions  . Our result canteest at ) lished for them regeneral : lass of LFG grammars , but that is beyond the scope of the present paper . 
1 Introduction and Preliminaries This 1al ) erexat \] liltes the generation t ) \]'t ) leln for a : erl ; a in linguistically mol ; ivate , d subclass fLFG grammars . Our luaill result is thai ; these , l . ( fst ; rings thai ; su : hagramma relates to a 1) articular f-stru : l ; ure is a context-fl'ee language . This result extends easily to other context-fl : ee t  ) ased gramnmtical formalisms , su-has PATR ( Shieler et ; al .  1988) , al ) xtI ) erhal ) s also to t brinalisms that 1ermit a : onl ; exl ; -fi ' eeskeletontol ) ee . xtracted from richerret ) resenl ; a-tions . 
We begin with some ba:kgroun1 and formal de-filfitionss that we can make the 1roblem and its solution explicit . An LFG granmmrG assigns to every string in its language at least one c-structure/f structure pair that are set in correst on dence  , by a piecewise flmetion ( ~( Kaplan 1995) . The situation can be characterized in terms of a derivation relation 
A ( ; , defined as follows : (1) Aa(s , c ,  (/) , f ) ill " G assigns to the strings a :- structure c that pie  ( :ewise , - corresponds to fstru:ture f via the function () . 
The'l fiecewise-:orrestonds'notion means thai ,  (/ ; maps individual nodes of a :- structure tree to m \]il  ; s of the f-structure . The arrangement of tile four com-i ) onents of an LFG rel ) resentation is illustrated in the diagram of Figure  1  . This representation be-hmgs to the Aa relation for a grammar that includes the almotated  ( nonterminal ) rules in ( 2 ) and lexical rules in ( 3 )  . 
(2) a . S -+ NP VP (1" suB ,\]) =$? =$ (4 . (: AS~,:)----NOM(?'PI,:NS ,, :) b . NP-+I ) ETNt-=4I-=4: . VP - - ~ V ? = 4 (3) a . DET-+a(1"s PEc ) =, N,,,:v(1"NUM ) = sGt) . N--+st ; ulent ; (? Pm , ; D ) = ' STUm , : Nq " (1" Nt : M ) = s(~(I"sl , l . : c ) (: . V-~M1(J"PlIFI )) ~-' I"ALL((SUB . \])) " (1"' H . : NSt . :) = PAS'I'The(:-stru(:ture , in Figure 1 is derived by applying a sequence of rules from ( 2 ) to rewt'ite the symbol S , the grmn mar'start symbol , and then rewriting the preterminal categories according to the lexical rules  . I ~ exical rules are just notational variants of traditional LFG lexical entries  . 
The ( ) correspondence and the f-structure in Figure 1 are assciated with thai ; c-structure 1 ) e : a use the f-slru:ture satisfies the ( /Mnstautiate descrip-tion cousl ; rucl ; edfl'o In I ; 11 o a , motated c-structure derivatiol q and fllrthermore , it is a minimal model for the set of instantiated escriptions collected from all the nodes of the ani \] otated c-structure  . The ()- instmd;iate descriltio , l for a local mother-daughters configuration justified by a rule is created in the following way  . First , allo ( :currences of the symbol J " in the functional mmotations of the daughters are replaced t  ) y a variable standing f l ) r the f-structure unit that r/ ) assigns t the moth n " node ,  . Then for each of the daughter categories , all occurrences of the sym-1ol $ in its annotations are replaced 1y a variat ) leastudent fell~t ~\[ PREDISTUDEN Tr
NUM SG
SUB.I/SF'ECIN 1)I'3F
LCASENOMem ~ D'r ALI,<(SUl ~.0>'
TENSE PAST
Figure 1: Piecewise c-and f-structure correspondence . 
standing for the ? assignment of the daughter node . 
Observe that all variables denote f-structure units in the range of  4  )  , and that the $ on a category and the ? on the daughters that fllrther expand that category are always instantiated with the same variable  . 
We now turn to the generation problem . A generator for G provides for any given fstructure F the set  ; of strings that are related to it ; by the grmn-111 ar : (4) Gcna(F ) = s\[~c , ? s . t . (s , c , ?, F ) EAt , , . 
Our main result is that for a certain subclass of LFG grmnmars the set : Gcna  ( F ) is a contextfree language . In the next section we prove that this is the case by constructing a contextfree grammar that accepts exactly this set of strings  . Our proofdei ) ends on the fact that the int ) ut F -- and hence the range of q5-is fully specified ; Dymetman (1991) , van Noord (1993) , and Wedekind (1 . 999 ) have shown that the general probleln of generating froln an underspecified input is unsolvable  . We return to this issue at the end of the I ) a per and observe that t br certain l infited tbrms of underspecification the context-fl'ee result can still be established  . Our proof also det ) ends on the fact that , with minor except ; ions , the instantiate descriptions are ideml ) oten t : if p is a particular instantiated proposition  , then a description containing two occurrences of 1  ) is logically equivalent to one containing just a single occurrence  . 
This means that descriptions can be collected by the union oi  ) erator for ordinary sets rather than by multiset ration  . 
The standard LFG tbrmalism includes a number of notational conveniences that make it easy to express linguistic generalizations but which would add comI  ) lexity to our mathematical nalys is . We make a number of siml ) lifying transformations , without loss of generality . The LFG c-structure notation allows the right hand sides of rules to denote arbitrary regular languages  , expressed by Boolean combinations of regular predicates  ( Kaplan 1995 , Kaplan and Maxwell 1996) . We assume that these languages are normalized to standard regular expressions involving only concatenation  , disjunction , and Kleene-star , and then transform the grmn marso that the right sides of the productions denote only finite sequences of a Imotated categories  . First , the effects of any Kleene-stars are removed in the usual way by the introduction of additional nonterminal categories and the rules necessary to expand them at  ) propriately . Second , every category X with disjunctive annotations i replaced by a disjunction of X's each associated with one of the alternatives of the original disjunction  . Finally , rules with disjunctive right sides are replaced by sets of rules each of which expands to one of the alternative right side category sequences  . The result of these transformations is a set of productions all of which are in conventional contextfree format and have no internal disjunctions and which together define the stone string/f structure nmpping as a grammar encoded in the original  , linguistically more expressive , notation . The Kleene-star conversions produce c-structures from which the original ones can be systematically recovered  . 
The full LFG fommlism allows for grammars that assign cyclic and otherwise linguistically unmotivated structures to sentences  . The contextfree result can be established for these granmmrs  , but the argument would require a longer and more technical presentatiou than we can provide in this pal  ) er . 
Thus , without loss of linguistic relevance , we concentrate here on a restricted class of LFG grammars  , those that assign acyclic fstructures to sentences  . 
For our tmr poses , then , ml LFG grammar G is a 4-tuple ( N , T , S , R where N is the set of nonterminal categories , T is the set of terminal symbols ( the lexical items )  , SEN is the root category , and 1 ~ , is the set ; of annotated productions . The context-fl ' eeskeletons of the rules are of the form  X0  -+  X1   . . Xn or X -+ a , with X1 . .Xn EN * and aET . If the an-notations of a nonterminal daughter establish a relationship between $ and T  , then $ is either identified with j ' , the value of an attrilm tein $(( ~ or ) = $) , or the member of a set in 1"($ E(T a )) , where a is a possibly empty sequence of attributes  . 
2 A Context-free Grammar for Gena ( F)
Aninl ) ut structure F for generation is t ) resented as a hierarchical attribute-value matrix such as theoue in Figul " e  1  , repeated here in (5) . 
426\[l ) l1 ~' , 1) tSTUI)I , \] NTt-NUMSG SUIL\]SI ) ECINI ) EI"\[CASI . : NOM
PR ., .:,)' VA ,, I,<(SU , /.0>'
TENSE PAST
Anf structure is an attrilm te-valuts l ; ructure where the values a . reeither subsidiary atl ; rilxlte-vahmrim-trices , symliols , semantic forms , or sei ; s of subsidiary structures ( not shown in this example )  . 
(6 ) A structure 9 is contained in a struct m'eJ'if and only if : . q = f , f is a set and gise onl ; aint d in andement off , or f is an f-struct m ' e and 9 is contained in ( f a ) for some attribute a . 
ints sence , 9 is conl ; ained in fif 9 can 11o located illf by ignoring sonmen closing SUl ) er structure . For any f-structure f , these l ; of all units contained in f is then defined as in  ( 7 )  . 
(7) Units ( f)-glo is contained infNotet ; hat Units(f ) is at in it ; eset for any f , and U'n its(f ) is the range of any ? that A( ; associai ; es with a parl ; icular in tmCF . 
The . (:- strucl ; m'es and ( / ) correslion dencest brF are the unknown si ; hai ; nmsI ; be discovered in the process of generation sol ; hat the 1 ) rol ) er instantia tc descrip-Lionscan \] ) e constructed and cvahtal ; e(l , l lowever , since th treix only at in item lml ) er of l ) ossible terms thai : can be used i ; o designate the ltnil ; soft ? , we can produce a ( Iinite ) SUl ) Cxsct of the , 1) r(/t)erinstantiaW , d descriptions without knowing in advance the details of either the  (  ; - sl ; rucl ; ureor ; 41) articular (/) . 
Let l ; ' bean f-structure tlmt hasm ( m > 0 ) set elements . We introduce m+1 distinct variables v0, . . , v , ~ , which denote bi uniquely the root refit of F ( v0 ) and each net element of F ( vi , i > 0) .   1 We consider the set of all designators of the tbrm  ( vic , ) which art defined in F , where a is a ( possibly empty ) sequence of attributes . The set of designators for a particular unit corresponds  , of course , to the set of all possible fstrue ture paths fl ' om one of the vi roots to that unit  . Thus , the set of design a . t ; or s for all units of F in f in it t , since the number of units of Fistinite and the reart no cycles in F  . 
The set of variables that we will use to construct the instantiate descriptions is the set  1/- consisl ; ing of all v t where t in a designator of the set just defined  . If l is the maximal arity of the rules in G , we will conskltr for the instantiation the set Z consisting of all sequences < v to  , vt , , . ., vt ; ) of variables of V of length 1 . ,  .   .   , n + 1 , not containing any set tit ; -1 Multi-rooted sl , ructures would require ~ whole set of reel wu ' iables  , similm " I , oset elements . 
merit w ~ rial ) lev ,, ~( i = O , . ., m ) more dlan once . On the basis of this ( finite ) set of sequences , we define a ( partial ) fm wtion 1D which assigns to eat : h rule 7' E 1 and each sequence IE 27 that is a pl ) ropriate for ran instantiate description . 
Let r be an nary LFG rule
X0-~Xj . . X ~ , 5% S , , with annotated flmctional schemata S I .   .   . S , z . A sequence of variables IG 27 is appr ' opr'i at c for r if I = @ t0  , vt ,   ,   . -, vl . ) is of length n+1 and (' OiO-t (7) if ~ , (1~---( Vi(Y ') all ( l(j " (7) = , LeSjtj = a set element varial ) ltvj if SE ( j " o- ) ESj for all j = 1 ,   . . , n ( (7' and ? are ( possibly tlnpty ) sequences of attributes )  .   ( Note that ( ?  ( 7 ) = $ reduces to J '=$ if a is empty . ) If I isal ) prot ) riatt for r , then ID(r , I ) , the instantiate description for r and l , is defined as follows:
N(s)m ( , . , n = Ul , < sj , V , o , %), j = l where l:nsl . ( , gj , v to , v t j ) in the instantiate descrip-tion produced by substituting  vt0 for all occurrences of 1" in , 5'j and substituting vtq for all occurences of $ in Sj  . 
If r is a lexical rule with a contextfree skeleton of the fl  ) rmX ~ a every sequence I = ( v , 0> of length \] is ~@ propriate for r mMID is detined by:  ( 9 ) m (  ,  . ,\])-I',, . .~ . ( S , , ', , , , ) . 
The instantiation using a . pprotn'iate sequences of variables , all ; houghtinite , permits an elfectivt dis-crinfinal ; ion of l ; hefst , ructure variables , since it pro-rides diflbXeld ; varial ) les for the $% associated with diti'erent daughters i  ; hat have different flmction as-sigmnents ( i . e . , mmotations of the form (1" c , ) =$ and ( t(7') = $ with (7? J) , but identifies variables where fstructure variables are identified explicitly  ( j '=$ ) or where the identity t bllows by ratification , as in cases where the annotations of two difl brent  ( laughters contain the same function-assigning equa-l  ; loll(J " (7) = $ . Hence , we in fact have enough variables to make all the distinctions that could arise from any c-si  ; rueturt and ? correspondence for the given f -structurt  . 
The set of all possible instantiate descriptions is large but finite  , since R . and Y are finite . Thus , the set IP ( F ) of all possible instantiated propositions for G and F is also large but finite  . 
(10) re(F ) = URa ' ~ w(*rD)
For the construction of the eonttxt-fi'e egrmmnar we have to consider those subsets of IP  ( F ) which have F as their minimal model . This is the set D(F ), again finite . 
427  ( 11 ) D ( F ) is timset of all DC_IP ( F ) such that
F is a minimal model for D .
We are now prepared to establish the main result of tiffspaper :  ( 12 ) Lct G be an LFG grammar conforming to th c restrictions we have described  . Then for " any f-structure F , the set GenG(F ) is a contextfree languaf\]e . 
Pro@IfF is incomt ) lete or incoherent , tlseuGenc(F ) is the empty contextfree language . Let G = ( N,T , S , R ) be an LFG grammar . If D(F ) is empty , then Gena ( F ) is again the empty contextfree language . If D(F ) is not empty , we construct a contextfree grammar Gr = ( ARE , Tr , SF , RE its the following way . 
The collection of nonterlninals ~ rj , , is the ( finite ) set  SF  U N x V x I ) ow ( IP ( F ) ) , wtsere SF is a new root ; category . Categories in NI ; other than SF are written X:v:D , where X is a category in N , v is contained in 17 , and D is an instantiate description in Pow ( IP ( F ) ) . 2),, is the set Tx(/)x0 . The rules RF are constructed from the annotated rules R of 
G . We include all rules of the form : ( i ) S , , , ~ S:v~o:D , for every DdD(F ) ( ii ) X0:vto:D0--+Xl:Vtl:Dl . .Xn:vt:Dn s . t . 
( a ) there is an rER expanding X0 to X1 . .X ,~, ( b ) Do = m (, .  ,  .   .   , v , o )) uUD ,   , i = 1 ( c ) if vv ~ 6 ( v t j c ~ ) belongs to Dj then v , , , ? v t , , ( k = 1 ,   . ., v ,) and (1,, ? j ) s . t . v , , , c(v , , , , o -') c ( iii ) X:vl:D -~ a :(/):~ s . t . 
( a ) there is an rER expanding X to a , ( b ) D = ZD(r , ( vt )) . 
We define the projection Cat ( a::?\]:z ) = a : for every category in NFUTl , , and extend this function in the natural way to strings of categories and sets of strings of categories  . Note that the set Cat ( L ( G  ~ ) ) =  s I Bw E L ( GF ) s . t . Cat(w ) = s is contextfree , since the set of contextfree languages is closed under homol norphisms such as Cat  . We show that the language Cat(L(GF )) = Gena(F ) . 
We prove first that Gcna(F ) CCat(L(aA ) . Let c be an annotated c-structure of a strings with f-structure F in G  . On the basis of c and F we construct a derivation tree of a string s ' in Gj  , , with Cat(s ') = s in two steps . In the first step were label each terminal node with label a by a :  ( ~ , the rook by S : vv 0 , each node introducing a set element with label X bi uniquely by X : v ~  , and each other node ~ This condition captures LFG 's special interpretation of membership statements  . The proper treatment of LFG's semantic forms requires a similar condition  . 
labelled X by X : vt where * is a designator that is construct al  ) le from the function-assigning equations of the mmotations along the path from the unique root or set element o that node  . On the basis of this relabelled c-structure we construct a derivation tree of s ' inGt  , ' bottom-up . We relabel each ter-urinal node with label a : ( / ) by a: ( / ) :~ ) and each preterminal node with label X : vt by X : vt : D where D is defined as in  ( iiib ) with rexpanding X in c to a . Suppose we have constructed the subtrees dominated by  X1  :  Vtl:D1  . .X,z:vt . : D , , the corresponding subtrees in c are derived with r expanding  X0 to X1  . .X m and the nlother node is relabelled by X0:vt0 . We then relabel this mother node by Xo:vto:Do where Do is determined according to  ( iib )  . By induction on the depth of the subtrees it is then easy to verify that the instantiated escription D of a subtreed on fi-nated by X : vt:D is equivalent to the f-description of the corresponding annotated subtree its c  . Thus , F must be a minimal model of the instantiated escrip-tion of the root label  S:v~0:D  ~ ,   , Sl ,  . derives S : v~o:DF in GI , ~ and Cat(J ) = s . 
We now show that Cat ( L(GI ~)) CG en o(F ) . Let c " be a derivation tree of s ' in Gr with Uat  ( s ' ) = s and supl ) ose that the root ( with label SF ) expands to S:vv0:DF . We construct a new derivation tree c'that results from c " by eliminating the root  . We then define a fimction ?' such that for each nonterminal node/t of c':?'  ( IL ) = vt if  #is labelled by X : vt:Dinc' . According to our rule construction it can easily be seen by induction on the depth of the subtrees that the  , renmst be an annotated c-structure c of G with the same underlying tree structure as c'such that for each nodett labelled by z : ~/ : Dinc ' :   ( i ) t * is labelled by a : inc ,   ( ii ) Disidentical with the description that results from Dr  ,   , the f-description of the sub-c-structure dominated by t t in c  , by replacing each occurrence of an f-structure variable '  qS0/  ) '  ( usually abbreviated by f , ) in D , ~ by 4/( , ,) . Since (/'( I t ) = qS ( , , ) follows for two f-structure designators if ( b ' ( # )  = 4/ ( u )  , timf description of the whole c-structure must be equivalent to DE mid thus Ac  , ,(s , c ,  ? , F ) where ~ = ~ b'o Ov and Cv is the unique flmction ttmt maps each ut to the unit of F that is denoted by t  . QEI ) 3An Example As a simple illustration , we produce the context-fl ' eegram nmr GF for the input  ( 5 ) and the grmn mar in ( 2 , 3) above . The only designator variables that will yield useful rules are v ~  0 midv ( ~ osui 33 )  , intimt bllowing abbreviated by vaim Vs . Consider first the context-fl'ee rules that correspond to the rules that generate NP's  . If we choose the sequence I = ( vs ) , the instantiate description for the determiner rule in  ( 33 ) is ( 13 )  . 
(13) ( v , spp~c ) = IN1) EF , ( VsNUM ) = so ; (' OsS')EC):INI)I'H'~(14) DET: , , . :/ . i " . NUM ) = S ; j -+ Rule ( 15 ) is obtained from the N rule using the same seqnence  . 
(15) N :' vs : t?'sI'ILE , ) ) =' S'FUI ) ENT ' )   ( v ~ NUM ) = s ( ~ ~ ~ student : ~: 0 ( l's SPEC )   ) For the NP rule and the sequence vs , vs , vs , both daughter annotatiolls instantiate to the trivial description vs = vs  , and this can combine , with many daughter descriptions . Two of these are the basis for the rules ( 16 ) and ( 17 )  . The ( laughter categories of rule (1 . 6) match them other categories of rules (14) a , nd (15) , all ( 1 the tlll"ee rllles together can derive the stting a:  ( ~:0 student : ( /:~ . Rule (17) , Oll the other hand , isalegi ( ; iinate rule but does not combine with any others to l  ) roduce a terminal string . 1\]; is a useless , albeit harmless , production ; if desired , ittan be removed froln the set of productions 1 )  3 , standard algorithnts tbrCOll(;exl;-\['l . eegram nmrs . 
llf we contimm along in this rammer , we find that the rules in (18 , 1 . 9 , 20 ) are the only other useful rules that belong to G1 , ' . 
The grammar GI~'also includes ( ; he following sl ; arl ; - ing rule : 0 , s .   .   . ))-,,,,"1 = NOM/1)~-'/)( . ,, ',', . : Ns , . :)\[ s , , , . : ( , ) l('VI'll . H )) = ' FAIA,((SUB,I ) "/(',, r,:Ns\] . :) = l , as ' r ) This grammar provides one derivation for a single string  , a : (/): (/) student : (/):(/) Dll:(/):/ . Applying Cat to this string gives ' a stlldent Dll '  , tim only sentence that this grammar associates with the inlmtf'd  ; ructure . 
4 Consequences and Observations
Our main result of lb . rs a new way to con ( :et ) tualize the problenl of generation lbrHPG and other l figher-order context-free-based grainmatical tbr  , nalisms . 
The proof of the theorem is constructive : it indicates precisely how to lmild  1  ; 111 . ' grmnmar GI ; whose language is the desired set ; of strings . Thus , the 1 ) rol ~ lem of LFG generation is divided into two phases  , constructing the context-Deegrammar G/ , , , an ( t then using a standard contextfree generation algorithm to produce strings fl ' omit  . 
\ Ve can regard the first t ) hase of LFG generation as specializing the original LFG gl ' all illlal to  Oi11~ that only produces the given input fstructure . This specialization refines the context-fiee backbone of  1  ; 11( ; original grannnar , but our theorel n indica . test hat the inl ) utt'-si ; ru (: turel ) rovides enough infornmtion so tlmt , in effect , tlmme taw ~ riables in the functional annotations can all be replaced by variables contained in a tixed tinite set  . Thus , in the LFG generation case the st ) e ( : ialized grammar turns out to be in a less l ) owerfult brmal class than the original . 
\ V e ( : an mlder stand ifferent aspects of generation as I  ) ertaining either to the way the grammar is con -strutted or to wellknown properties of  (  ; Oll ( ; exl ; -free grammars and ( ~ olltoxl ; -\]' l'e egneration . 
It follows as an immediate corollary , tbrexam-pie , that it is ( lecidal fle whether the set GcnG , ( F ) is emt ) ty , contains a tinite mmf l ) er of strings , or contains all infinite number of strings . This Clllliede-tern fined by inspecting GF with standard contextfree tools  , once it has l ) een constructed . If the language is infinite , we ( : an make use of tim context-Dee pumping lemma to identify at lnite number of short strings Dora which all other strings  ( ' an be produced 1 ) yrel ) el , ition of sul ) ( lcrivations . We dek in ( 1  ( 19 ) 5 ) tirs ( estal ) lished the de ( : idability of I , FG generation and t ) roved almmping lemmati ) 1 the generated string set ; our tlw x)r(nnl ) rovides alternative ; ul(lvery direct1) root's of the . st previously known results . 
\ ? e also \] lave gtl lexl ) lanation for another observation of Wedekind ( 1995 )  . Kaplan and Bre . s-nan ( 1982 ) showed that the Nonbrancl fing I ) omi-nance Condition ( some tinms called ( ) flline Parsabil-ity ) is a sufficient ( : on ( liti ( m to guarantee ( le ( :idal ) il-ity of lheme ml ) ershipl ) rol ) lenL We de kind noted , how(~ver ,  ( ; bat ( ; hi ~ condition is not nex : essary to de-ler mine\ v\]mlht ~ ragiven tkstrlletlll'e corresponds  1  ; o any strings . We now see more clearly why this is the case : if there is a  ( : olltext-Deederivation for a given string that involves a nonl  ) ranching dominance cy- ( : le , we know ( fronl the pumi ) inghmnna ) that there is another derivation for tlmt saint string that has no such cycle  . Thus , the generated language is the same whether or not derivations with nonbranching dominance  ( : y ( :h ; s are allowed . 
There is a practical consequence to the two phases of LFG generation  . Timgrall lllHtl ' GI , ' eaItt ) e provided to a client as a finite representation f the set of  1  ) crhal ) s in finitely many strings that corresl ) on d to the given fstrueture , and the client can then ( '  o11-trol the process of enumerating individual strings . 
The client ntay choose simply to produce the shortest ones jllst  1  )  3 , avoiding recursive category expansions .   O1 the client may apply the technology of stochastic on text-free grammars to choose the most probable  , senI ; ence , f1'o111 the set of possibilities . The client may also be il W ; erested in strings that meet further conditions that the shortest or most probable strings fail to satist ~ y  ; in this case the client may/(v , , SI'EC ) = INI ) EF f ( vs SPEC ) = INDEF ' ~ ( 16 ) NP : , ,~:~ ( , ,~ ~ M )= s ~; - . D\]n': , ,~: ~ ( v ~ NUM ) ( SO J I(v ~ PR , ,~ , ,)= ' s~u ,  . ,:~'r ' t ,  ( , ,~ sPl~C ) , (17) NP : v ~: v ~= v ~ ,   ( v ~ NUIV l ) = SG-+DET : v~: ( v ~ NUM ) = SON : v ~ : ( a ( 18 ) W : v : ( VF'IIED ) =' FALL ( (SUP , J )) " ' ~( vTt , : NSI , :) = PASTJ - -> fell: , ':0 (191 (20)
V----I ) vP:~:(~Hum ) =' I,al,r,((suB . O ) '?( ,, T~s ~) =\[ AS','Ji"(,,s,,,, . , ) = , ,, ~ /( ,, ~ casl . :) = NOMV ~ V/( , ~ TI , : NSI ~ ) l ) s ~ UsS : v : ~ ( ' OsSPEC ) = INI ) EF / ( Vs NUM ) = SG/ ( " ~ Pro , : . ) =' s'PuI . ~NT'/'(VsSPEC)
I(vPRED ) = q~aLL((SUBa )) '\[ ,   ( 1 ) TENSE ) = PAST---M :' U'~ ( VIREI ) ) = tFALL ( (SUBJ ) )t ~ ? \[ ( ~ TI~NSE ) = PASTJ = l ( ' Os ~' Us ( UsSPEC ) = INDEF-+NP : v~: ( v ~ NUM ) = SC
UsPLIED)--~ISTUDENTI(UsSI'EC)

VP:v:('OsI'IIH )) = ' STUDI , : NT ' ~ ( ~ TE~S  ~ ) = PAS ~ rJ apply the pumt ) inglemma to systematically produce longer strings for exmnination  . 
Our recipet br constructing GF may produce many categories and expansion rules that ca  . i l i , ot play a role in any derivation , either because they are inaccessible from the root symbol  , they do not lead to a terminal string , or because they involve individual descriptions that F does not sat  , is\[y . Having constructed the grammar , weea . n again a pi ) ly standard contextfree methods , this time to trot the grammar in a moreot ) timal for ln by reinoving useless categories and productions  . We can view several difl ! erent generation algorithms as strategies t bravoiding the creation of useless categories in the first place  . 
The most obvious optimization , of course , is to in-cretnentally evaluate all the instantiate descriptions and remove froin consideration categories and rules involving descriptions for which F is not a model  . 
A second strategy is to construct he grammar in bottom-up fashion  . We begin by comparing the terminal rules of the LFG grannnar with the features of the input f -structure  , and construct only the corresponding categories and rules that meet the criteria in  ( iii ) above . We then construct rules that can derive the mother categories of those rules  , and so oil . With this strategy we insure that every category we construct can derive a terminal string  , but we have no guarantee that every bottom-up sequence will reach the root symbol  . 
It is also at ) pealing to construct hegrmn marby means of a topdown process  . If we start with an agenda contain iug the root symbol  , create rules only to expand categories on the agenda  , and place categories on the agenda whenever they appear for the first time  oi1 the right side of a new rule , we get the effect of a top-do wu exploration of the gratnmar  . We will only create categories and rules that are accessible fronlther oot symbol  , but we may still 1 ) roduce categories that derive no terminal string . 
The to i ) -down strategy may not provide ett'ective gui ( tance , however , if the set D ( F ) contains many alternative descriptions of F . But suppose we can associate with every instantiate description Daunique canonical description that has the stone f-structure as its minimal model  , and suppose that we then reformulate tlm grammar construction in terms of such canonical descriptions  . This can shari ) ly reduce the size of the grammar we produce according to any enumeration strategy  , since it avoids rules and categories that express only uuin forlnative variation  . It can particularly benefit a topdowner a > meration because the set D  ( F ) will have at most one canonical member . Presumably any practical generation scheme will define and operate on canonical descriptions of some sort  , but our context-Dee result does not depend on whether or how such descriptions in ight be specified and maifipulated  . 
Just as for contextfree parsing , there are a number of mixed strategies that take topdown and bottom-up inibrmation into account at the stone time  . We can use a precomputed reachability table to guide the process of topdown exploration  , for i ilstance . Or we can simulate a left-corner enumeration of tilesem'ch space  , considering categories that are reachable froin a current goal category and ahnost any of the traditional algorithms tbrprocess-\[llg  (  ; ( ) il text-frecgt ' at illllars call be reforlll llatct l as a strategy t brt n  , oiding the creation of useless categories and rules  . Other enmneration strategies focus on the characteristics of the input f-structure  . A head-driven strategy ( e . g . van Noord 1993 ) identities the lexical heads first , finds the rules that ex-l ) and them , and then uses information associated with those heads  , such as their grmmnatical flmetion assigmnents , to pick other categories to exlmnd . 
Our proof depends on the assmnl ~ tion that the input \]  , ' is flllly specified so that the set of i ) ossible instantiation six finite , l ) y metman (1991) , van Noord (1993) , and Wedekind ( 1999 ) have shown that it ixill gener M undecidable whether or not there are any strings associated with an f-structure that has units ill addition to those in the input  . Indeed , our proof of context-freeness does not go through if we allow new units to be hypothesized arbitrarily  , l/e-yond the ones that appear in F ; if this ixpermitted , we cannot establish a finite . 1) ound on the mun bcr of l/ossil ) le categories . This is unfortmmte , since there may be interesting practical situations ill which it is convenien to leave UnSlm Cified tile value of a liar-titular feature  . However , if there can be , only aii-nil , enlunb (' , i ' of possible w flues for an underspecitied feature  , the (: on text-free resull : can still beesi ; al)-lished . We create from Faset of alternative structures F  ~  . .F , by filling ill all possible values of the UllSl ) eeified features , a . mlwel ) roduce the context-Deegrammar corresponding too , a ch of th cl n . Since a finite ration of e on text-flee languages is context-Dee  , the set of strings generated fl'o many of t , hese structures renminsill that class . 
Atinal COilllllellta \]) ollt ; he generation l/rolf lem for other high-order granmmtical t ' or nmlisn is  . ( ) llr proof dcl ) ends on se , veral tb , aturcs of LFG : the (: Oll\[:exl;-ti'(?e1)ase , the pieeewise correspondence of 1 ) hrase structure , and f-structure units , and the ideml ) Otency of the flumtional description language . PATR shares these properties , although the correspondence is iln-plicit in the mechanisnl and not reified as a linglfisti-cally significant concept  . So , our proof can be used to establish the contextfree result for PATR  . On the other hand , it is not clear whether the string set corresponding to an underlying IPSG structure is context-flee  . HPSG ( Pollard and Sag 1994 ) doestrot Iltake direct use of a contextfree skeleton  , and olmrations other than concatenation may be used to assenfl  ) lea collection of substrings into an entire Sell tetlce  . \ ~ ecanllot extendore " proof to t tPSGm > less the et li~ct of these mechanisms can be reduced to an equivalent characterization with a contextfree base  . However , grammars written for the ALE sys-tem's logic of typed feature structures  ( Carl ) enter and Penn1 . 994) do have a contextfree CO lll \]) Ollelll ; and therefore ' are , ainell~fl )\] e to the , treat n lent we have outlined . 

We arciml cbted to John Maxwell , tladar Slmm to v , Martin Kay , and Paula Newman for many fl'uit-fill and insightflfl discussions of the LFG generation  1  ) roblem , and for criticisms and suggestions that have , helped to clarit ~ y many of tile mathen latie alnd conllmtatiol ml issues  . 

Carpenter , B . aim G . Petal .  1994 . ALE2 . 0 User's Guide . Technical report , Carnegie Mellon University , l ~ it tslmrgh , PA . 
Dymetman , M .  1991 . Inherently Reversible Grammars , Logic Programming and Computability . In P~vcecdings of th , cACL Workshop : Reversible Gram , mari'n Natural Language PTwccssing . Berkeley , CA , pages 20-30 . 
Kat)lan , I . M .  1995 . The Fornml Architecture of Lexical-IPunctio \] ml Grannnar  . In M . Dahyml)le , 11 . M . Kaplan, . 1 . Maxwell , and A . Zaen (' al , editors , \]? or bital\]s . s " ltcsi'nL czical-l ,; uu , cl , ional Grammar . CSLIl ? ublications , Stanford , CA , pages 727 . 
Kapbm , \]7/ . M . and J . Bresnan .  1982 . Lexical-Functional Grammar : Ali ' or ntal System for  ( ~ rana natical lq . epreseill ; ation . In J . Bresnan , (!( l-iter , The Mentall ~ , cprc , s'c'ntato ~ t of G~'(t'llt ~ rtitti-calR clatio'ns . MIT Press , Carol ) ridge , MA , 1) ages 173281 . 
Kaplan , l/ . M . mMJ . Maxwell .  1996 . LIeGCrwm,'mar Writer's Workbe , nch, . Technical report , Xerox Pale Alto Research Center . At http://ftp . par,: . xero:~ . co~n/p ,, 1, / lfg/ltk , tlai , , ~ l . ps . 
Pollard , C . mM1 . Sag .  1994 . \] toad-Driven IW , rascStr'uct'urc,Gra'm'mar . The University of Chicago
Press , Chicago , IL.
Shieber , S . , It . Uszkoreit , F . Pereira, . 1 . llol ) in son , and M . Tyson .  1983 . The Formalist n and hnl ) le-mentation of PATR-II . In B . Grosz and M . Stickel , editors , I~cscarch on Interactive Acquisition and Use of K ' now lcdgc  . SRI Final Report 1894 . SRI hlternational , Menlo Park , CA , pages 39--79 . 
wmNoord , G .  1993 . ll , eversibility in Natural Language Processing . Ph . D . thesis , Rijksuniversiteit

Wedekind , J .  1995 . Sonm Remarks on thel ) ecidal fil-ity of the Generation Problemill LFG- mMPATI-style Unification Grmmnars  . lit Procccdings of th , c71 , hCo'nferc , nc (: of tit ( , E'urop can Chapter of th , cAssociation for Comp ~ ttational Linq'uistics . l ) ublin , pages 45-52 . 
Wedekind , J .  1999 . Semantic-drivell Generation with LFG-and PATR -style Grammars  . Cornp , u-rational Ling , uistics , 25(2):277281 . 

