ANOTEON MOR2H~ESTRUCTUREINGENF~TIVE
Frances Karttunen
The University of Texas at Austin
Austin , Texas U.S . A . 78712
In a nearly model of generative phonology the lexicon of a language contained entries with as few feature specifications as possible in the interest of economy  . The blank feature specifications representing both nondistinctive features and those rendered redundant by sequential constraints were filled in by the same  9honological rules . At this point , the concept of ~ rules changing feature values was unclear  . 
When the distinction between rules that fill in blanks and those that change feature values became clear  , it was zm bodied in the concept of morpheme structure rules and P rules  . The MS rules were further split into feature redundancy  ( segment structure ) rules and sequ ~ tial constraint rules . The MS component bore a striking resemblence to the earlier " pkonotactic " sections of autonomous phonemic analyses  , but the claim was made for I~S ~ les that they explained what phonotactie emerely described  . The MS rules formed a major part of Chomsky's " read justment component " which rendered th ~ output of the syntactic component fit to be the input to the phonological component  . A fairly current version of ~ his model is the following one from Harms ' Introduction t__oo Phonological c ~  )  2 . 
( I ) Sequential constraint rules and blank filling rules fill in redundant features in lexical items  . 
(2 ) These lexical items are inserted into the output of the transformational component  . 
(3) Phonological rules , some utilizing syntactic information , operat ~ on these strings . 
This model takes the lexical entry to be a prime of sorts  . Within the lexical entry , segmental features are not specified if they can be predicted  . If all obstruents in a language are voiceless , voice is specified for the obstruents in all lexical items by the redundancy rule ~+ obs ~~ ~ -vc ~  . If the only possible initial consonant in a triple cluster is s  , then only ~+ cons ~ is given in the lexical entry  . The rest of the distinctive features for s are f illed in by a sequantial constraint r ~ le and the additional nondistinctive ones by a redundancy rule or rules  . 
Harms ' model orders all redundancy rules before the phonological rules  . This ordering excludes Halle's solution for the exception of i and e from Finnish vowel harmony  , which places the harmony rule before the redundancy rule specifging gravity for i and e  . (" On the Bases of Phonology " , The Structure of Language ,  1964 , p .  332 ) The following diagram represents Harms ' model . 

Output of the



Prulesxical Entries
Iscrules redundancy rules
Systematici

Inv____entory,?~-n~ry feature values J
PhOnetic Output 4.
Grouped together as morpheme structure rules ( ~ S rules )  , sequautial constraint rules and redundancy rules , according to proponents of this model , account for the acceptability of some strings as possible morphemes in a language and the rejection of others  . 
If we consider the problem of the acceptability of strings of a language's sequential phonemes  ( English has ~ and l , but ~ lin is not possible . ) , then we might justifiably characterize morpheme structure rules as generating all and only the possible morphemes  ( stems , affixes , and uninflected particles ) of the language . Is this equivalent to the function of the ~ S rules in the model above ? There seems to be the following conceptual difference  . The model descrioed starts with the lexical entry  , and the sequential constraint rules fill in ~ is t inctive features  . The inventory of systematic phonemes is realized in the output of the SC rules  . 
It is not clear where or how the inventory of a languages systematic phonemes fits into this model ? The fully specified phonemes are realized in the output of the ~ rules  . The lexical entries in some sense preexist the phoneme inventory  , because they consist of incomplete feature matrices which are filled in by the NS rules  . How does one 5 . 
arrive at the existing and possible lexical items ? To effect a saving of features in the lexicon  , all fea ~ res that can be determined from context are left out of an entry  . Then MS rules fill them in . In this way , according to Harms , "Morpheme structure rules can account for the fact that native speakers of a language agree with great consistency on which of several nonoccurrin ~ forms could be admitted as new morphemes in their language  . "( Intro . to Phonol . Th . , p .  88 ) Is it possible that this phonological model and its ~ S rules can account for all and only the acceptable morphemes in a language ? If the ~ S rules are only blank-filling rules  , a completely new phoneme can be added at will to a language via this model by simply introducing it fully specified into a lexical entz'y before the ~ S rules  . 
If , on the other hand , the MS rules are able to reverse features in lexical entries  , then ill-formed entries will be corrected . In this case , ta e lexicon may be full of impossible morphemes , and the NS rules act as a filter to pass only wellformed morphemes onto the phonological rules  . 

The argument against this is that the lexicon must be a seconlmical as possible  . No features , right or wrong , which are predictable by rule , are specified in the lexicon . 
Where do the lexical items come from then ? And since the model under ~ is cussion applies ~ u ~ les to items from the lexicon  , not to s~rings An general , what is the status of the acceptable strings which do not  , at a given moment , ~xist in the lexicon ? A test for acceptability of a hypothetical string might be whether the ~ S rules could fully specify its matrices without changing any specified features  . If blanks remained or features had to be changed , then the string would be judged unacceptable in the language  . This test would require that not only existing lexical entries but also hypothetical strings of feature matrices be input to the ~ rules  . To whatever degree the model rejects or changes faulty in out  , it is clearly an acceptor or filter rather than a generator  . 
Unless the lexicon-~S component relationship is completely circular  ( take out of the morphemes what can be put in by the ~ S rules  , list the remains in the lexicon , and then fill them in again by the ~ S rules ) , there is no way to account for the wellformedness of the input to the ~ rules  . 
In hiselegant article , " Redundancy rules in phonology " , Language 43 . 2 ,  1967 , Richard Stanley clearly demonstrated the different nature of redundancy and P rules  ( the former predicting feature values , the latter changing them ) and the danger of misusing featu ~ reblanks . His proposal was that phonological redundancy be embodied not in rules but in Morpheme Structure Conditions  . 
The former had only the lexicon as their domain and we reordered before the P rules  . The latter have all matrices in their domain and are not ordered with respect to the P rules  . 
To quote from Stanley : . . . A grammar of each natural language will have , in place of a set of I~S rules , an unordered finite set M of I~conditions . This set will include , in general , conditions of sash of the three types . The set of all matrices m in U , such that misaccepted by every ~ cmndition in M  , is well defined ; we call this set M(U ) . 
Since each NSc mndition in M represents a generalization about the morphemes of the language  , it follows that the set M ( U ) represents all matrices which violate none of taese generalizations  . .  . 
In sahort , the set M ( U ) is exactly the set of possible morphemes of the language  . The segment structure conditions in M will guarantee that M  ( U ) contains only those matrices ~ ose columns are systematic phonemes of the language  ; the sequence structure conditions in M will guarantee that no seqummtial constraints of the language are violated in matrices of M  ( U )  . The set M of MS conditions may thus be thought of as filtering out  , from the set U of ~ o all matrices , those matrices which do not form p possible morphemes of the language  , leaving the set M(U ) . ( Language 4 ~ . 2 p .  428 ) An alternative model of the phonological component  , differing from Stanley ? in that it views the MS component as a generator rather than as a filter  , assumes the language's full Y specified systematic phonemes as primitives  . The MS conditions are then constraints upon concatenation of submatrices of these matricies of phonetic features  . 

Comp . I ~ one meinventory \ is tinctive features specified  ) --~ S-egment redundancy conditions Il ( fill in nondistinctive features ) ~I Constrailnts of tco--ncatenatio----~~

Output of the trans-formational comp.

All and only the possible morphemes of the language 
I lexic ? ni'-Pru . les.
The ~ S component of this model generates all and only tile possible morphemes of the language  . 
Of these , only a subset are existing lexical items associated with syntactic and semantic if ~formation  . 
Given a hypothetical string , its accept-ability can be deter T ~ ined on two criteria  . First , is it composed of phonemes of the language ? CheEk the inventory  . If so , are the phonemes concatenated in a manner permitted by the Iris conditions ? If these conditions are met  , it may be a lexical item . Is it associated with semantic and syntactic inf o inrmtion ?  10  . 
The practical use of morpheme structure conditions in computation brin@tomindanold example of the commercial aspects of phonotactics  , namely to generate brand names for detergents , beauty products , etc . more seriously , it is desirable to have a system report immediately a recognizable misprint or foreign word rather than to search fruitlessly through dictionary storage for the item  . ~ oreover , since dictionary storage must be continually updated  , it is important for a system to report possible new lexical items for inclusion  . 
