
196 5 International Conference
on Computational Linguistics
SOME QUESTION SOF


S . Abraham
53, Uriu ., Bu 6 apest I ., Hungary
Computing Centreoft ~ e Hungarian Academy of Sciences 
I ~ L : ~ , " , ' : : i ~ ~ : ' ~ I
Abraham 2
ABSTRACT . It is shown that the assumption that language is nonfinite involves the use of a constructive logic which lea#s to some restrictions on language theory an ~ to the fact that the only possible definition of language is that propose ~ by ~ enerative grammars  . Generative grammars can be formulate ~ a ~ normal / ~ ar~ov/algorithm san ~ thu ~ their study can be reduce ~ to the  stu#7 of such algorithms of a special type . A new type of ~ enerative grammar is ~ efine ~ , called matrix grammar . It is shown that a language generated by a context-restricted grammar can be also generate ~ by a matrix grammar  . Some properties of matrix grammars are shown to be ~ eci ~ able  . 
The problem of the explicative power of generative grammars is ~ is cusse ~  . 
I . language metatheory , as indeed any metathe or T , must exactly specify the o~erations allowed in building up the theory/of language /  . This may be ~ one by choosing the lo~ic of the t be or T  . If language is consi~ere ~ a nonfinite set , a constructive logic/Kolmogorov/must be choose n  . This entails some restrictions on the notions an ~ methods to be used in language theory  . ~ amely , we cannot speak of actually infinite sets , au ~ we cannot use t ~ e quantifiers " the ~ exists " an ~" all "  . Thus we cannot include in language theory the notionOf ' language ' itself in the usual way  , as the set of al~/grammatically or sentences . Similarly , we " distributional analysis " restrictinus . /  , as it generally has semantically/correct can not make use of/at least without any the form : 
Abraham 3 /the sentence/sIhas the property % ~ I ~' if there exists/a sentence/s  2 with the property
R2/not necessarily R1 ~ R2/.
It follows that the single way of ~ efining language is that proposed by generative grammars  . 
These grammars are in fact devices that produce / generate / the sentences of a language/an ~ only those /  , one after the other . So , at every moment we have generated a finite set of sentences  , and a % the same , if the grammar is properly constructed , at evry moment we can generate a sentence not yet generated before  . So , in fact the language/the set of all the sentences of the language/is a potentially in finite set and the above meution e ~ ~ if fl culties do not arise  . 
The restrictions to be respected within generative grammars as to the/logically correct/notions an ~ operations are precisely form u ~ ate ~/ it may be interesting to note that Chomsky ~ oes not respect all of them /  . 
2 . Most of the properties/an~possibly event?e most important ones/of generative grammars are obtaineg by constructing automata  , equivalent to
Abraham 4 different using the shown that study generative grammars generative grammars  , and in this way results of automata theory . It is a more natural/an ~ easy/way to is to formulate them as normal/k  , ' arkov/algorithms\[7\] ,  \ [1 \ ]  . So , if given a Phrase Structure Grammar Git can be given a finite set of normal algorithms G = I~LI so that by applying the algorithms to the initial strings ~  . : e obtain the language generated by G . 
The algorithms ~ have the properties : ( i ) each rule/of the algorithm/rewrites at once only one symbol  ;   ( ii ) by applying a rule to a of the strin ~ is not ~ iminished  . 
string the length
For constructing G we must be able to compose the normal algorithms so that these properties should be ? reserved  . The composition rule given by Markov does not fulfil this condition  . So the following composition rule is proved an e used : If ~ Lvp ' ~ Vp are two normal algorithms with the properties  ( i ) an  ~ ( ii ) then for every Og ~/ the set of initial strings / we have 
Abraham 5 where ~ is a normal algorithm with the scheme ? , , here , ~ ek/pi\[ , ~ are symbols put in one-to-one correspondence to the symbols from VV/an ~ different from them and between them /  ; ~ is the list of the rules of the al@or ithm ~ with every ~ changed to ~  . Evidently Z has the properties ( i \] and " ( ilJ ? It is shown that to a set of algorithms G = C % ~ a single algorithm  , ~ corresponds if J  ~ . /the set of the initial strings/is FroFerly enlarged  ,   . so that L(G ) = ~%( Z ) , Thus the study of 2SG is reducible to t~e study of normal algorithms of the type of for/the rewriting rules of which are  , in fact , context-restrlcted rules / . The sufficient anc ~ necessary conditions generating a non-f ~ ~  . ite ~ encrative grammars / . 
are estahlishe ~ ~ for la : ~ gua\[e/by different
Abra Sam 6
It is shown that each singular/Choms~y/can be formulate ~ as of type Ot  . 
transformation an algorithm
The most studied generative grammars are the contextfree grammars/CFG/and the context -restricted grammars/CRG /  . Some properties of these grammars are considered to be uneeciaable  . In this respect they are also ~ ifferent . The differences are formulated in Table I\[6\]:

I . is the language generate ~ by a ~ zrammar empty ?   2  . is the lanEua ~ e generated by a grammar in finite ?   3  . for any string si ~ ~ can some \[ string in clu ~ in~f ! be ~ erive ~ from in a ~ rammar ? 


Iu I
DU
DU
Abraham 7 where Dinai cates that the property in question is a eci ~ able  , U that it is un~eci ~ able . 
The CF grammars have not the necessary generative power to mo~el natural languages  . The CR grammars may have this power/altough this ~ roblem has not been cleareaup/but the un~ecibality of the properties I-  3 /especially ,   3/ makes highly@oubt-fultheir fitness for modeling natural languages  . 
A new type of generative grammars is proposed under the name of matrix grammars/MG /  \[2\]  . 
A matrix grammar is a quintuple
G : ( v ,   , F , where is a contextfree frammar an@~F* is a finite ' set of matrices/called matrix rules / @ eflne@~as follows:  ( 1 ) f * . is a matrix rule if it has the ' form ~ F ( ~ z_i ~_ ~ ) an ~ not necessarily ~~ j ; 
Abraham 8 ( 2 ) f ~ where * is a matrix rule if it has the form . ! io a ~ e matrix rule ~ or belon ~ to F . 
To apply a matrix rule f * to a strinG x means to apply to x all t ~ e contextfree rules which form it  , in the given order/to a ?? lyaCF rule to a strin ~ means to replace the first occureuce of its left side with its right-slde/  . If at least one of these contextfree rules can not be applied to x  , we say that f cannot . be applied to x . 
It is shown that for any context-restricted grammar Gitispo  . ~sible to construct a/stroncly/equivalent matrix grammar  . 
For in stauce , t!:e/not contextfree/language
I = an bncnisgeuerate ~ by the matrix grammar o =  ( v , v ~ ,  ~  , F ) with
V =\[ S,X,Y,Z,a,b,c\];%=; Z=SJ
Abraham 9
F :\[ S-~abc\]
IS--~aXbYcZ\]
X - ~ a ~
Y -, bY
Z - - ~ cZ x a \] g - - * b 7~---. c
It is shown that the properties 1 , 2 , 3 are ~ eci ~ able for matrix g ~ ammars . So the statement that they are un~eci ~ able for the CE grammars is erroneous/the erroneousness of the ~ roof of the un~eci ~ ability of property  3 given in ~5\] can be easily shown / . 
So the fitness of these grammars for model in ~ naturallan ~ iages is most likely  . 
As we have mention e ~ , for each singular transformation a normal algorithm can be constructe@which contains an \ ]y context-restricted rules  , r . ep , arting from this , it can be shown that for a transformational grammar/containing only singular transformations  , see \[4\] /a weakly equivalent matrix ~ rammar can be constructed  . 
Abraham 1 O
The matrix grammars can be form u2 at ~ d algorithm , too . 
as a norm a ~
Since any normal/Mar~ov/algorithm can he reversed  , it is possible to devise a method for the construction of a recognition grammar corresponding to any given generative grammar  . 
As the matrix grammar corresponding to a transformational grammar Is  , in general , only weakly equivalent to the latter , and in automatic/natural/language processing / and especially in machine translation/the adequate analysis is a crucial requirement  , the to strong requirement of Choms~y to derive the structure of a generated sentence from the ~ r ~ y it is generated  , is drorred , and t ! ~ e matrix ~ rammar is completed with a definitional apparatus/rA/that makes it possible to assign to a generated sentence the same structure/analysis/as is assigmed by a transformatio-nalgrammar/details see in  ~3\]  / . By constructing the recognition grammar corresponding generative grammar  , the DA of the crammar is taken over . 
to a given generative
Abraham II3 . Some examples are shown how the above considerations can he applie ? to automatic proces ~' ing of na-tural lanfuages  . 

IllAbraham , ~' J . ,  . , Formal Stufy of Generative Grammars I , Computational Zin~uistics II , pp . 5-18,1964\[2\]Abraham , S . , Some Questions of Phrase Structure Grammars I , /underpress in Computational ! inguistics IV / \[3\] Abraham , S . , Some Questions of Language Theory Kiefer , F . , / under press in Acta Hungarica / "\[4\]   :3homsky  , N . , Cate?oriesan ?
MIT Press , 1964
Syntactic Theory ,\[ q\]Chomsky , ~ . , " ~ Formal JrT ~ operties of Grammars in
Handbook of ! ~ a thematical Psychology,
J . ? Jileyan@Sons , Inc . ~ ew York , NY , vol.2,
Dp . 323-418,1963\[6\]~ and weber , 2 . S . , Decision Problems of Phrase Structure Grammars , IEE Trans . ,vol . EC-13,
Fp . 354-362,1964\[7\] Markov , A . A . , Teorija algorifmov , Trudy Mat . Inst . 
ANSSSR , Xoscow , 1954
