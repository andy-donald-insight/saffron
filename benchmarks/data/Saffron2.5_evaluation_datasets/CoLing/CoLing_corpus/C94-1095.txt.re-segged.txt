INTEX:ACORPUSPROCI!\]SSIN (-?, SYSTEM
MaxI ). Silberztein
Labor atoircd ' Automatiquc1 ) ocument airect Linguistique
Universil 6 Paris 7

INTEX is a text processor ; it is usually used to parse corpora of several megabytes  . It includes several built in large coverage dictionaries and grammars represented by graphs  ; the user in a y add his/her own dictionaries and gramnlars  . 
These tools a mapplied to texts in order to locate lexical and syntactic patterns  , remove ambiguities , and tag words . INTEX builds coll cordances and indexes of all types of patterns  ; it is used by linguists to analyse corpora , but can also be viewed as an information feb'lewd system  . 

INTEX automatically identities words and mor-pho -syntactic patterns in large texts  . By using
INTEX , one can: . . . . build the dictionary of lhe words of the texts ; words may be simple words ( sequences of letters , e . g . table ) , compounds ( sequences of simple words which include a separator  , e . g . wor U pro~cessor ) or complete expressions ( sequences of words which accept insertions , e . g . tokic k . . . the bucket ) ; ---locate in texts all occurrences of a given word  ( even if inflected )  , a given category ( e . g . all feminine plural adjectives ) or a morpho-syniactic pat~tern ( a regular expression )  ; -- apply grammars represented by recursive graphs to texts  ; build indexes or concordances for all occurrences of the previous patterns  ;   . . . . use local grammars to remove word and uller-ance ambiguities in texts  , or to detect errors or deviant sequences . 
While INTEX already i , l cludes several built in dictionaries and granunars  , it allow stile user to create , c(litandadd his/her own tools , hiorder to increase coverage of texts and to remove additional ambiguilies  . 
1. LINGUISTICTOOI , S
The user th's tlo ads a text and selects the woi ' kiuglangl  . iage I . INT\[~ . X counls lh cnuln bor of lokens in the lexl , lhenumber of different ones , and sorts lhoniby frequency . The il I heuser selects linguis--tictools to parse the text  . Tools aye either diclio . .
nnries or tinil Ostale transducers ( FSTs).
1.1. Dictionaries
INTEX is based on lwo large coverage built qn dictionaries : - the I  ) IT: . LAI ~ diclio , mry contains over 700 , 000 simple words , basically all the simple words of the language 2 . Each entry in the I ) ELAI : is as so . 
cialed wilh explicit morphological inforn lathm for each word : its canonical form  ( e . g . the intini-live for verbs ) , its part of speech ( e . g . Noun ), aud some inllectional information ( e . g . th's t person singular present ) . Ilereare three entries of the t:i'onch I ) EI , AI:::a , avoil : V ' . P3sabacas , abaca . N:mpabais . va , abaisses : g . ' , lXsThe token'a'is the Verb'avoir'con , jugaled in tiltThird Person Singularl ' resent ( P3s )  ; ' abacas ' is the masculine plural of the Noun ' abaca '  ; ' abaissa ' is a verbal form of ' a baisser ' COlljugated in lhethird person sirigular " Passe coln posC '  ( J 3 s )  . Since the lnorphological analysis of each 1 , At this moznefit . English . French and Ilaliant licthmaries have boon already included in INTI:  , X . (lermail . , Spanish all d P of lu- . ~tlOS (' , compatible diclionaries lift : tlll ( ICl'COllsIrucliOll . ' ~ Vt : will lJi Ve Froilcho ? ainl ) les . 
2 . For iid is cussiOll on the CO illple loness/ ) I " lilt ' , DEI , AF dictionary . 
see in I(?ourloi , '-; :, Rilborzte in 10~91 . IClemei weau 19931 . 
579 token is performed by a simple lookup routine , INTEX guarantees an error free result ( there is no guessing algorithm nor ' probabilistic ' result  )  . 
INTEX includes a few other dictionaries for proper names  , toponyms , acronyms , etc . ; -- the DELACF dictionary contains over 150 , 000 compounds , mostly nouns 3 . Each entry in the DELACF is associated with its canonical form  , its part of speech , and some inflectional information . Here are three entries of the French
DELACF : htout desuite , htout desuite . ADV cartesbleues , cartebleue . N : fppomme deterre , pomme deterre . N : fsINTEX includes a few other dictionaries for compound proper names  . The use , " may add his/her own dictionaries for simple words and compounds  . 
1.2. FiniteState Transducers
FSTs are represented in INTEX by recursive graphs . Basically , the " input " part of an FST is used to identify patterns in texts  ; the " output " part of an FST is used to associat each identified occurrence with information  . In many cases , FSTs represent words more naturally than dictionaries  . For example , numerical determiners , uchastrente-cinq milleneufcentstrente -q ttatre  , for-really are compounds which are naturally represented by graphs  ( see the graph Dmlm in Appendix 1 )  . FSTs may also be used to bring together graphical variants of a woM in order to check the spelling coherency  , to associate all the variants of a term with a unique canonicalent  , ' y in an index , to represent families of derived words ( see the graph France in Appendix 1 )  , to associate synonyms of a term in an information retrieval system  , etc . In the graph editor , gray nodes are graph names ; tags written in white nodes are the inputs of the FSTs  , outputs are written below nodes 4 . The user draws graphs directly 3 . For a discussion on the completeness of the DELACF  , see in \[ Courtois ; Silberztein 1989\] . 
4 . For a description f the graph editor of INTEX , see\[Silberztein 1993\] . 
on the screen ; the result in graphs a ' reinterpreted as FSTs by INTEX  . 
By selecting and applying dictionaries and FSTs to a text  , the user builds the dictionary of the words of the text  . Appendix 1 shows the resulting dictionary , as well as the list of all unknown tokens . Generally , these tokens are either spelling errors or proper names  . 
2. LOCATING PATTERNS
After having built the dictionary of the words of the text  , the user can locate morpho-syntaetic patterns in the corpus  , index o1' build a concordance for all occurrences of the pattern  . Patterns may be :-- a word , or a list of words . For example , one can locate in a text all occurrences of the verb faire  ( even when inllected )  , all the compound nouns ( since most of them are non-ambiguous terms , their list constitutes a good index ) ; -- a given category , such as verb conjugated in the third person sitzgt tlar  ( V : 3 s )  , or noun in the feminine plural ( N : fp ) , etc . Here arc several examples of categories 5: A : p ( adjective in plural )  , ADV ( adverb) , 
DE 7".' f(femirzine determirzer),
DK ms ( past participle , masctt line singular ) , etc . 
-- a syntactic pattern represented by a regular expression or a graph  ; the following is a regular expression : < t ? tre >   ( < ADV > +< E > ) < DET > < N > This pattern re ' It chesany sequence beginning with a conjugated form of the verb e?t p ' e  , optionally followed by an adverb ( < E > stands for the null word )  , followed by a determiner and then a noun . Note that categories match simple and compound words  . In particular ; < ADV > also matches compound adverbs . More generally , the use , " may apply to the text grammars expressed by recursive graphs  ; graphs typically represent : -- sees of synonymous expressions  , uchas:per-dre I at ~ te , l'esprit , lenord , etc . Graphs in differ -5 . For a syntactic description f the categories , see\[Silberztein 19931 . 
580 ent languages can be linked , so that each matching sequence in the source language could be automatically associated with the corresponding graph in the target hmguage  ( e . g . lose one's head , mind , bearings , etc . ) . A graph may represent all the expressions which designate an entity  , or a process ; indexing such graphs allows one to retrieve information in large corpora  ; -- pieces of a large-coverage rammar of the language  . Recnrsive graphs are easily edited ; standard operations on graphs ( union , intersection , differences , etc . ) help to build an easily main-rained system of hundreds of elementary graphs  . 
This construction has begun in LADL ; we already have graphs describing adverbial complements which express a measure  ( temperature , speed , length , etc . ), a time or a date ( e . g . le17 fdvrier 1993 , le premier hm didumo is dejnin ) ( Maurel 1989) , some locative structures ( Garri-gues 1993) , etc . 
3. REMOVING AMBIGUITIES
In order to disambiguate words in texts , INTEX uses cache dictionaries and local grammars . 
3.1. Cache dictionaries
Since the DELAF and DELACF dictionaries included in INTEX have a very large coverage  , they contain a number of words which only occur in some specific domains  ; in addition , some fie-quent words may be associated with generally inappropriate information  . For instance , par is usually a preposition in French , but in some cases it may be a noun ( a technical terming ol\[ )  . By default , each occurrence of this token will be considered ambiguous  ( preposition or noun )  . Cache dictionaries are used as filters : if INTEX finds a word in a cache dictionary  , it will not look tip the selectedictionaries and FSTs  . If the user knows that in a given corpus , the token paris always a proposition , he/she enters the following entry in a cache dictionary : pat  ; par . PREP Hence , the user can avoid unnecessary ambiguities by putting frequent words  ( or conversely , specific terms ) in cache diction arids adapted to each processed text  . 
Most compounds are ambiguous , since they for-really are sequences of simple words  ; for instance , the sequence pomme deterre is not necessarily a compound noun in the following sentence : Luc recott vreune pomme deterretulle  ( Luccovetwa cooked potato )   ( Luccovers an apple with scorched earth ) However , a number of compounds are not ambiguous , either because they contain a non-autono-mous conslituent  ( e . g . aujourd'hui ) , or because they are technical terms ( e . g . tmlube cathodiqtte , unsous-marinu cldaire) . By entering these non-ambiguous compounds in a cache dictionary  , the user prevents INTEXfi'om looking up dictionaries and FSTs for simple words  ; hence INTEX does not process these conlpounds as ambiguous  . 
3.2. Local grammars
A local granmar is a two-part rule : if a given sequence of words is matched  , then each word in the sequence is tagged in the proper way  . For instance , in the sequence s ' en donne , s ' is a 1) 1" o-noun ( not a conjunction ) , en is a pronoun ( not a preposition ) , and donne is a verb ( not a noun ) . 
The corresponding local grammar would be : s'/< PRO>en/<PRO><MOT>/<V><MOT > stands for any word  . Local grammars arc represented by FSTs , heuce their length and their CO ml ) lcxity have no limit . Any number of local giammars may be used at lho sanie  ( line to disanl ~ bigualo Ioxls ( FSTs In orgo easily )  ; hence it is bestIoel'tale small () lieS . Local ~ l ' aillnlal's uselhc dictionary of the words of the texts  , so they correctly haildlese quell COS with coinpounds  . Appendix 2 shows a few local grannllars . IN'rEX in chidosadozen " pcrfccl " local granllliars  , tllat is , gram-il qars that will never give hl correot lagging so hi-tioils  ; the user may add his/her own perfect ( or probabilistic ) disan ~ bigualing graln nlars . 
3.3. Theresiill of lhepars hig
After having selected linguistic tools ( either dictionaries or FSTs )  , the riser cauparsetile text , that is , insert in the text all the linguistic information req t  , ired by a syntactic parser . For instance , the text : iIladonne would at this step be represented by the following expression : iI  , PRO(la , PRO : fr + la , DU l ' . ' fs)(donne,N:fs+donner , V . ' PIs+donner , V : P3s donnel ; V : Sls+donner , V : S3s + donner , V . ' Y2s ) la can be a pronoun or a determiner ; donne is a noun , or 5 conjugated forms of the verb donner . 
INTEX then builds the corresponding minimal automaton : the number of transitions of this automaton corresponds to the number of lexical ambiguities of the text  ( in the above example : 9 transitions )  . By selecting and applying local grammars to the text  , the user effectively removes transitions in the resulting automaton  . For instance , thanks to a simple local grammar ( which describes the preverbal particles )  , the above text can be parsed to give the following expression : it  , PRO la , PRO : fs(donner , V . ' P3s+donner , V : S3 s ) The remaining ambiguity corresponds to the tense of the verb : indicative or subjunctive present  . The corresponding automaton has only 4 transitions . Hence , the number of transitions can be used as a quantitative tool to measure the efficiency of the removal of ambiguities  . By selecting one local grammar at a time , or by merging several , the user is able to apprehend exactly how each grammar covers the text  , and pcrlbnns in terms of deleting transitions . 

INTEX is used for several purposes : -- lexicographers who build dictionaries for compounds  ( or technical terms ) try to find new ones by applying characteristic patterns to big corpora  , such as : < N > ( de+d'+dela+du+des ) < N > ; -- linguists who study specific syntactic structures use INTEX to find attestations of these structures  . For instance , one may search for the following structure in order to find predicative nouns associated to the support verbs avob  ; don-net ; Ftre , Jaire : ( < avoir >+ < donner >+ <~ tre >+ < faire > )   ( < ADV > +< E > ) < N > -- our objective is to build a large grammar which covers as much of the language as possible  . By applying " pieces " of grammar to big corpora , and then studying the outputs , one can correct and refine each piece , and incrementally develop the global grammar ; -- INTEX is used to find " semantic units " in large technical texts  , hence it constitutes a good information retrieval system  . 

Courtois , B . , Silberztcin M . Eds , (1989) . Lesdic-tionnaires Flectroniques . Langttefran ~: aise,
Larousse : Paris.
Clemence au D .  (1993) . Struct ttration du lexique et re connaissance de roots dFriw  ; s . Th ~ sededoctoraten infornaatique , LADL , Uni-versit 6Paris 7: Paris . 
Garrigues M .  (1993) .   Pr6positions et noms depay set d'~les:unegrammaire locale pour l ' analyse automatique destextes  . In Lin-gvistica elnvestigationes XVI I:2 . John
Benjamins : Amsterdam.
Maurel 1) .  (1989) . Reconna is sance de sF quences de root spat " automate  . Th ~ sededoctorate tainformatique , LADL , Univ crsit6 Paris 7:

Silberztein M .  (1993) . Dietiontmires dlect twtti-qtte set analyse att to matiqtte detextes  . 
Masson : Paris.

Appendix 1: Building the dictionary of the text , qdveme ~ (1)) lli!i ! Fgi !! i ! I "!(<-" ,  " : :  , iiii ! it (; i ! i !: ti . . . . . . ~?,,? h,~?s,ourl , f i l l ~ l , . dCMi ,= ll,~aRl'A . A , ~\] lrir , l ~) 2 .   .   .   .   .   .   . !:1 t . ,,  .   .   .   . lit ~ ii ! i ! ti : + iU~d ~ vratl ) ~lm~cerdan ~ 1 ~ fabrication de ) hoto copicur ~ etii : 5~9   1o = i @ : i iii ~!? ~ iii ! ~/ ~ i ! , " i ~ i ~'::4 , 1'1 I . ~ i:::!!!:i:~:i:i!ii',,'!1l; . in ~ . ~, ~+, t+iiti ~@ i : : iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii .   .   .   .   .   . l : i : l == ~ , , , ~ I !! ~ S i i i i ! " : " ~ > , == = , , , + p  ~ , r = , = , dIi I / iiiiiiiiiiii ! i \ [ i : iii: 11ii \[:\[ii / iiiii : ii ~ ii ~ , ~' ii .   .   .   .   .   .   .   .   .   .   .   . ttu , ~ . ,  .   ,   , w~m ~\ [ i ~ r ~ i i i i i i i i i i i i i i i i i i i i i i i i i i i i i \[ i ii \[ i ! i i i i ? i i i l i ~  . lC0 . 1os , cIo . ~ O ) M ~ lsGtammal cau ~ ( O ) i l i i i i i ~ J 6 e o t t a p h l , uC~\]p(a ) ~!\] ;   ;   ; ii ;   ; (! ;   ; ) : iii +
A 3 t t t d l ~/ . QI\]t- ,   ,  - ~ , ~ ~ X/^~All:;:1 ~ ,  "  ; ~ r~tlse$\[i I\[!\[:~:\]: C~cI~L~d * autrel ~  , d'autresADV'PI)I !' fC"~'~\[C~mfir ~ ; ~ : - - \[  , TJ ~: .   .   .   .   .   .   .   .   .  ~ ,,  .   .   .   .   .   .   .   .   .   .   .   .   . a ~ v . ~v , .   .   .   .   .   .   .   .   .   .   .   . 
Appendix 2: l , ocal grammars and the removal of ambiguities < PI  ( O ~/ L . ~DL/INIER . ~ tp/Cet , e ~ JII\]u ~ AptZ 617:1) B : 631994i:1^DV , YPI~:O ~
