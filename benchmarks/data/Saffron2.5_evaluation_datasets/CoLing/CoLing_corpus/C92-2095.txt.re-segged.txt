Isolating Crosslinguistic Parsing Complexity with a 
Principles-and-Parameters Parser:
A Case Study of Japanese and English *
Sandiway Fong & Robert C . Berwick
NEC Research Institute , 4 Independence W ~ y , Princeton , NJ , 08540 USA , szLndiway@research . nec . comRm 838 , MITAtL ~ bortLtory , 545 Technology Sq . , Cain brldgc , MA 02139, berwick ~ ai . mit . edu 1 Introduction As parsing models and linguistic theories have broadened to encora pass a wider range of non-English languages  , a particularly uscfifl " stress test " is to buikla single theory/parser pair that can work for multiple languages  , in the best case with minor variation , perhaps restricted to the lexicon . This paper reports on the re-suits of just such a test applied to a fully operational  ( Prolog ) implementation faso called principles - and -parameters model of syntax  , for the case of Japanese and English . This paper has two basic aims : ( 1 ) to show how an implemented model t bran entire principles-and-parameters model  ( essentially all of the linguistic theory in Lasnik & Uriagereka  ( 1988 ) ) , see figure 2 for a computer snapshot , leads directly to both a parser for nml-tiple languages and a useful " computational linguistics work bench " in which one can easily experiment with alternative linguistic theoretical tormulations of gram-marital principles as well as alternative computational strategies  ;   ( 2 ) to use this system to uncover sources of parsing complexity in Japanese as opposed to English  . In particular , we examine the " null hypothesis " that a single parsing design suffices for efficient processing of both/lead-first and I lead-fina languages  , in contras to approaches that posit , e . g . , a right-corner or other mirror-image strategy for parsing Japanese as compared to English  ( e . g . , BUP ; Mazuka (1990)) . In this case we can confirm computationally and precisely  , in accordance with nmch current psychollnguisitic work  ( l ' ~ razier and Raynert ( 1988 )  ; lnoue and J . 1) . Fodor (1991) ; Nagai ( 1991 ) ) that it is not the lien&final character of Japanese that results in processing difficulty so mudl as the possibility of scrambling and free deletion of NPs  ( so called " superProDrol ) "  )  . We do this by empirically investigating the effects of  3 t ) ossi-ble " optimizations " of the parsing system for Japanese:  ( 1 ) the use of right-context information via automatic source transformations  , using al , rogramming language compiler technique to introduce dummy nonterminals and corresponding semantic actions  ;   ( 2 ) modification of the Japanese grammar to put the specitier of CP*T iffs research lt as been supported by NSF  ( ~ raltt DCR85552543 under a Presidential Young fnvestiglt to rAward to Professor Robert C  . Berwiek , and a grant front the Kapor Family Foundation . We would like to thank linward Lasnik , Alec Marantz , Shigeru Miyagawa , David Pesetsky , and Mamoro Saito for valuable discussions and valiant attempts to tell us about Japanese  . 
(= S ) on tile right and so eliminate unnecessary center -embedding  ; and ( 3 ) eliminating of scrambling and NP drop to isolate tile separate f fects of l lead-final  ( e . g . , Verb-final ) l ) hrase structure in Japanese . 
By explicit construction , the implementation demomstratcs that it is possible to build an efficient principle-and -parameters parser l br multiple languages  , using 25 principles titat are expressed in a language quite close inform to that of the original linguistic theory  .  '\] . ' he English-Japanese dilt ~ rences handled include the basic Suhjeet-Objcct-  . Verb ( SOV ) order of Japanese ; free " scrambling " of Japancscnoun phrases ; topic comment structur c ;   , mn appear auee of noun phrases that are discourse recoverable  ; and lack of wh-word movem cnt in Japanese questions  . No rule reprogramming is required to accommodate hese differences  , but changes to only 4 binary switches and aininimally distinct lexicon with different thematic grids in some cases  . The parser couple several already-known parsing design strategies tool  ) ta inefficient parsing times , e . g . , typechecking ; nmlt itd c ~ entry canonical LR (1) parsing ; and automatic ( source-to-source ) grammar transformations . 12 Princlplc-based parsing In at ) rinciple-based parser , construction - and language ~ speeitic rules arc rcplaeed with broader principles that remain invariant aside from parametric variation  ( see below )  . The parser works by a ( partially interleaved ) generate-and-test tedmique that uses a canonical LR  ( 1 ) cover in grammar ( derived from X theory plus the theory of movement  ) to lirst buiblan initial set of tree structures ; these structures are then run through a se-1'1'o the best of our knowledge , this system is the first and broa ( lest-coverag cof it ~ type to be able to parse Japanese aml English by setting jnt  ; t a few parameter switches . Dorr (1987) , uoder the supervlsi :) noftim second author , developed ac ( mc " i : tually similar scheme to fi and leL'nglish , Spanish , and ( ~ crman . lit , wryer , l ) or r's system did not have the same bro~td coverage of English  ; did not handle Japanese ; used hand rather than automatic ompiling ; and was approximately 15 times slowek . Gunji's ( 1987 ) Japanese unifi-ceti ( m grammar comes closes to the principle-ba~ed model  , but requires hand-modification from a set of core principles ~ ut does not really accommodate he important Japanese phenomenon of scrambling  ; see below . Ot ficr such systems work only on nmch smatl cr parts of English  , e . g . , Sharp (1985) ; Wehrli (1987) ; Crocker (1989) ; Cortes (1988) ; Johnoson , (1989); or are not in fact parsers , but proof-c fieckers , e . g . , Stabler , (1991, forthcoming) . 
Ac~\] . ;s DECOLING-92 , NANTES , 2328 Ao ( rr 1992631 l'l ~ o(: , oi:COI , ING-92 , N^N TES , AUO .  2328 ,   1992 ries of predicates whese conjunction defines the remainder of the constraints the  ( sentence , I ) hra . ue structur c,LF ) triple must satisfy . This is done using familiar machinery from Prolog to output LFs that satisfy all the declarative constraints of the linguistic theory  . In practice , a straightforward generate-and-test mechanism is grossly inefficient  , since the principles that apply to at the level of surface structure  ( S-structure ) are but a fraction of those that apply in the overall system  . 
The usual problems of lexical and structural ambiguity the the underconstrained nature of the initial X system means that the number of possible S-structures to hypothesize may be buge  . q b obtain an efficient parser we use a full multiple-entry table with backtracking  ( as in 2 bruits , 198 fi ) , extending it to a canonical LR (1) parser . The LIt . machine uses an atttomatically-built S-structure grammar tbatfolds together enough of tim constraints from other principles  , parameters , lexical subcategory information of l line to produce a  25-fold improvement overtile online phrase structure recovery procedure originally proposed by Fong and Berwick  ( 1989 )  . Optimizations include extra conditions in action classes to permit interleaving of other principles  ( like movement ) with structure-building ( the ' in tcr leawing ' noted by principles marked ' l ' in the snapshot in figure  2 below )  ; control structure flexibility in principle ordering  ; precomputation f the LK transition function ; elimination of infinite recursion of empty elements by an additional stack mechanism  , and so forth . We exploit the explicit modularity of the principle-ba  . qcd system in way that is impossible in an ordinary rule-based system : we can build a grammar for phrases trneture that is small enough to make full  , canonical LI ~ . (1) parsing usable , unlike large CFGs . The earlier error detection of full Lll ( 1 ) parsing over LAL tt methods means that fail as early as possible  , to avoid expensive trcc constructions that can sever participate in final solutions  .   2   3 The Japanese parser We begin with a very simple parameterization f Japanese that will nonetheless be able to cover all the Lasnik and Salts w/l -questions  , crambling , and so forth ; sectile table on the next page that follows the example sentences  . The important point is that very little additional must bcs aid in order to parse a wide variety of distinctive Japancsc sentences  ; the principles as show nont be ri~hth and side of the computer snapshot do no ~ change  . ~ Consider first the example wh-movement sentences found in the linguistics paper On the Nature of Proper Govcramenl by Lasnik & Salts  ( 1984 )  .   4 These seu-:qb provid carough measure of the machine size for the phrase structur c grammar of S-structure for both English and Japanese  , the augmented CFC , consists of about 74 productions derived fron laschema of 3034 rules . The resulting characteristic tisit c state automaton  ( CFSM ) consists of 123 states with 550 traal sitions between the various states . The action table consists of a totM of 984 individual ( nonerror ) entries . 
3We will scramble only from direct object positions here  , even though it is straightforward to scramble front indirect object positions  . Informally , we have noted that scrambhng from IO greatly increases computation time  . A tighter set of constraints oils crambling seems called for  . 
4Average best parsing time for the Japanese sentences shown is  0  . 37 sees/word on a Symbolies 36 50 ( 64 KLIPS )   ( eltence . q ( listed below ) displayn lany familiar typological JapaneseEnglish differences  , and cover a rather soplfiaticated sct of differences between English and Japanese : for instance  , why (6) is fine in Japanese but not in English ; frecomissiol ) of NPs ; " scrambling " of subjects and objects ; Verb-final ( more generally , II ead-final ) constituent structure , and no overt movement of wh-phras ~ . We also consider a different set of Japanese sentences  ( also listed below ) designed to illustrate a range of the same phenomena  , taken from t to sokawa (1990) . We stress that these sentences are designed to illustrate a range of sentence distinctions in Japanese  , as well a . qour investigative method , ratmr than serve as any complete list of syntactic differences between the two languages  ( ince they aroob viously not )  . s\[Lasnik & Salts ( 1984 ) \]  ( 2 ) Watashi-wa Taro-ganani-okattakashitteiru'I know what Johll bought '  6  ) Kimi-wa dare-ni Taro ~ ganaze kubi-ninattatte itt a no ' q b whom did you say that John was fired why '  ( 32 ) * Meari-wa Taro-g~nani-okattakadoka sltiranai ' Mary does not know whether or sot John bought what '  ( 37 a ) Taro-wahazekubi-ninatta no ' Why was John fired '  ( 37 b ) Iliru-wa Taro-gahazekubi-ninnttatteittano ' Why did Bill say that John was fired '  ( 39 a ) Taro-ganani-ote-ni ire takoto-o sonnani ok otter uno ~ What arc you so angry about the fact that " Faro obtained '  ( 39 b ) ~l ' aro-ganazeso re-ote-ni ire takoto-o sonnani ok otterll no ' Why are you so angry about the fact that Taro obtain edit '  ( 41 a ) ltanoko-ga Taro-ganani-ote-ni fretstteitta koto-0 sonn & lllokottcru ) to ~ What arc you so angry about the fact that
I\[a noko said that Taro obtained ' ( 4 lb ) * Hanoko-ga Taro-ganazeso re-ore-hifrets tte it takoto-o Solinal liok ottern no ' Why are you so angry about he fact that Ilanoko said that Taro obtain edit '  ( 60 ) Kimi-wanani-odoko-de kattano ~ Where did you buy what '  ( 63 ) Kimi-wanani-o sagashiter uno ' Why are you looking for what ' Complement/no neomplement asymmetry  , scrambling and uneXl ) eeted parses To see bow the parser handles one Japanese xam-plc  ( see the actual computer output in figure 1 or figure 2  )  , consider ( 39 a )   ( and thc corresponding illicit ( 39 b ) ) , where a complement wh but not a noncom-plement wh can be extracted from a complex NP :  ( a ) Taro-ganani ~ ote-nifretsko to-o sonnani ok otter uno  ;   ( b ) * Taro-gahazes or c-ore-hifretsko to-o'What / * Wlly are you so angry about the fact that ' Faro obtained ' Tb is example illustrate several Japanese typological differences with Englisb  . The subject of the matrix clause ( = you ) has been omitted . Nani ( ' what ' ) and te ( ' hand ' ) have been scrambled ; the direct object = 1 . 52 see , n = 100) . Parsing time on a SunSpare station 2 is approximately an order of magnitude faster . 
SE . g . , the doublc-o constraint ; cast-overwriting , passive and causative constructions , etc . all remain to be fully implmoented . 
A CYEs DECOLING ~92 , NANTI~S , 2328 AOt ) r1992632 PROC . OFCOLING-92, NANfI ! S,AUG .  2328 ,  1992  ( marked-o ) nowal > pcaring in front of tim indirect object re  , Phr~ule structure isllead final . Our relaxation of the CaacAdjacency paranteter and the rule that allows adjunctiou of NP to VP  , plus transmission of Case to the scrambled NP will let this analysis through  . '\] ? he LF for this nentence should be something along the lines of : for what x  , proisso angry about \[ ti Le fact that " Faro obtained x\]IlL this example ply denotes the understood subject of ok ottern  ( " be angry " )  . The Ll : sactually returned by the parser are shown in tiles iLaps hot in tigure l  . S\[llosokaw~t ( 1990 ) \]  ( tb ) ' Gengogaku-nogakuseiogatiizu ~ otabeta linguistics-senstudent-noracheese-ace eat-pmst ' A student of linguistic sate cheese '  ( 2by Nagai karat-no gakusei-ga tiizu-o tabeta long hair-gcn student-  , nomcheese-ace eat-p~lt'Ahm ghaired studentate cheese '  ( 3b ) Taro-gahoit-okatta
John-nor a book-ace buy-pa~t ' . lohn bought a book ' ( 4b ) Taro-ga Hanoko-nihon-oageta
John-nor a Mary-dat book-ace give past ' John bought Mary a book '  ( 5b ) Taro-gahon-otable-noue-nisits Johnbook : ace ta  . ble-gent op-dat ( top of table ) put-p~t ' John put the book on the table ' ( 6b ) ' Faro-wa gakkoo-nitta
John-topuchool-datg O-l ) ~t ' John went to school ' ( 151 ) ) Watashi-wa tattvga nani-o katta ka shiranai I -top John-nora what-ace bought Q know-not  <1 do n~t know what John bought ' ( lTb ) q_'mowa Chomsky-no Barriers-oy ontimashitaka John-top Cln  ) msky-gent larriers-accrcad-1 ) mutQ'I ) id John read Chonmky's Barriers ' ( 18 b ) llanoko-wa Biru-ga Chomsky-no Barriers-oyondaka dokashiranai Mary-topllill-no in Chomsky-gen Barriers-aceread Qknow-not'Mary does not know whether or not Bill read 
Chomsky's , ..'
Tile parametric differences that we need to accomodate all these differences between English and Japanese arc quite few : OWe will not have room totlescribe in detail the derivation of these LFs  . But , it uh ou hl be noted tb at the derivation sequence is quite complex  . Note , for example , that . ant ( ' what ' ) undergoes moventent at two levels of phrase structure in order to get to the specilier position of the matrix Complementizer : lOP nani\ [IP*l ~ aro\[NP\[CP pro\[VP~t ' &\ [ VI ~ ir et al \]\] huts\]  ,  . .\]\] Furthermore , the LF tracet'violates the socalled empty category principle unless it is deleted  ( as indicated by \[\] in the snapshot )  , under the present heory . Tile lack of wh-n to vement at S-structure in Japanese  , and its presence in Engbsh , interacts with these constraints to bar example8 like ( 6 ) in English ; see Lasnik ~ Salts . 
AcrEsDECOLING-92, NANTES , 2 . 3-28AO(rl " 1992633 ~ h : * ltca < lorder
Agreement lounding ~ CascAdjacettcys Whin Syntax a Pro-Dropmd Japanese parameter  settjn6s npec Pinal : -\+ Bpeclnitial , het ~ dnitial . 
hcadFinal:-\+head hfitial.
u ~ r(weak/bouudingNode(i2), boundingNode(np).
case Adjacency.
wh\]n , qyntlax : - fig proDrop , mpec Final : -\ + a peelnitial . 

headlnitial:-\+hend Final.

bounding Node(i2).

;-nocane Adjacency , :- no whln Synmxi ) roDrop . ___ As one can see from the figure , the system does correctly rccover the right l , F , a . sthelm ut one in snapshot . l lowever , it also ( surprisingly ) discovers three additional LFs , illustrating the power of the system to uncover alternative interpretations that a proper theory of context would have the job of ruling out  . Ignoring in ( liccs ~ they all have tiles an lct ~ ) rn : for what x , ' Faro is so angry about \[ the f~tct that pro obtained z\]llere the embedded subject  7hro h ~ been interchanged with the matrix subject pro  . It turns out that the sentence happens to bc ambiguous with respect to the two basic interl  ) rc ~ atiotts , zl , brcomplcteness , here ate the three variants of that correspond to the first three LFs reported l  ) y the parser . S . Miyagawa(i ) . c . ) informs us that the last two , given proper context , are in fact possible . These include . : (1) proise o referent with ko to (" fact "): s , i . e . , for what x , Tarois so att gry about \[ the fact that tim fact obtained x\]  ; (2) pry is coref crent with taro : for what z , Taro is so angry about \[ the fact that Taro obtained ~:\]  ; and (3) pry is free in the sentence : for what x , Taroisso & ngryal ) out\[thcfact that ( someonelse ) t ) btained x\] .  ~  4 Parsing Japanese : the computational effec ts of scrant bllng ~ pro-drop  , and phrase structure Next we turn to the investigation of the computalioaal differ cnee  , ~ between the two languages that we have explored , and show how to use the system in mJ exploratory mode I ~ o discover complexity differences between English and Japanese  . I a the discussion that foplows , we shall need to draw on comparisons between the complexity of different parses  . While this is adclicate matter , there arc two obvious metrics to use in comparing this parser's comt  ) lexity . The tirst is the total number of principle operations used to analyze a sentence-the munber of S-structures  , chain for l nations , ind cx-ings , tile case filter and otit cr constraint applications  , etc . We can treat these individually and tmawhole to give all account of the entire " search space " the parser moves thr  ( mgh to discow ~ ranalyses , l lowever , this is r This was pointed out by D , Peset Hky , and conlirmed by M . Salts . l lowever , t ) resumably thense of w a rather than 9a and intonational pauses could be exploited as a surface cue to rate out more gcnerally ambiguity in this exampt c and others like it  . Seel'bng and ller wick ( 1989 ) for a discuu-sion of how to integrate mtrfax : e cues into the principled ~ ased ~ ystem  . 
t This interpretation c~n be eliminated by it oposing sclcc-tional restriction  , on the possible " agents " of ok otter u ( letuusay t bat they muut be animate )  . 
~Itaving a parsing system that can recover all such linguistic alternatives i of interest in its own rigltt  , both to verify and correct the linguiutie theory , as well a8 enmlre that no possibilities are overlooked by human interpreters  . 
PRoc , OFCOLING-92, N^I~rEs , AUG , 2328, 1992
Principle-and-Parameters Par ~
Build LR Graph Language Op Status Option ~ Parsers Run Screen Sentences Time  Traein0 IRun Sentence ~ ( ExaMples ) e39 a .   .   .   . 
i e39a   7-~ro - ~ rJant-otr-nl Irm takoto-o ~ oon a , ~ tokotteruno LFt\[ C2CNP r ~ niJ-aoc \[01\[~2CNP taro J-no ~\[ liCvPCveCNvEs2Ct2 proCllEVp\[\]CvPCsPteJ-datCvICuet-B-P\]\[ v /  ( BGR ) t 2   0   1   4   1   3 \ [ Vireta \] sj 5\] I\]\[Itfl\]\]\[C\]\]\[N koto\]\]-acc3\[q\[Aov so ? ~ i l\[v ( ~ ( otte\]6\]fi \]\[ VtT\]\[II ( HOR ) 2\[v Iro\]7\]2\]\] \[Cno\]\]\]LF:\[CZ\[NP nanl\]-acc\[CI\ [IZ\[NPtaro\]-r loB\[  II\[VP\[VPtNP\[C2\[12 P~'O\[n\[vP\[\]\[VP\[SP tel-dot\[VI\[NPC -FFP\][vl  ( f l ~ R )   1   2   2   1  ~  1   2 \[ V lreta\]4\]4\]\]\]  \[  It2\]\] \[ C\]\]\[N kOto\]\]-~W~5\[V\[ADV ~ w~\[\]\[Vokotte\]\] 6\] \[ Vt 7\] \[ II ( ~ RI2tv ~ rt/\]?\] 2\]\] [cr ~\]\]\] LF : Cc2\[sP t ~ an \]- a ( ~ \[  CI\[12\[NP taro\]-t ~\[ II\[VP\[VP\[NPEC2\[12 pro\[II\[VP\[\]\[VP\[NP te\]-daL\[VI\[NPt- ~- P\]\[VI  ( P  ~ R )   1   2   0 t 4   1 Cv Ireta\]5\]5\]\]\]  \[  It3\]\] Ccl\]Cskoto\]- ace6 \[ vCAov~ot~i \] Cvokotte\] 7  \]  7 \] Creel Cl , ( mR ) 2 Cv Iru\]o\]2\]\] Cc~\]\]\]LF:\[ c2 \[NPaanl\]-ac?i\[el It2 ~ ro 2 ell\[vP\[vP\[NP\[ c2   \[12 the taro \] ~8   \[11 \[vP\[\]I\[VPCsPt~\]-dat 4  \[  v1 \[NPt-~-P\]IC vl ( f l ~ R )   3 \[vIreta\]\]\]\]\]tit\]\]\[C\]\]\[Nkoto\ ]\]-a ~ c\[vtAov~i \]\[ v~o~te\]\]\]\[ vt\]\[II  ( ~R ) \[vit'u\]\]\]\] ren~\]\]\] 55   3   6   77   8   2   82 
Ro ( . or e ) par ' ~ e ~ ~ h
Figure 1: Computer snapshot from Lasnik & Saito.
often not a good measure of the total times peut in analysis  . The second measure we use is more particular and precisely tailored to the specific backtracking -Lit design we have built to recover structural descriptions : we can count the total number of Lit finite-state control steps taken in recovering the S-structure  ( s ) for a given sentence ; indeed , this accmmts fortile bulk of pars-lugtime for those cases  , as in Japanese and many English sentences , where multiple quasi-S-structures are returned . Taken together , these two measures provide both a coarse and a more finegrained way of seeing what is hard or easy to compute  )  ?  5 Complexity of Japanese parsing Given this initial set of analyses  , let us no we xamine the complexity of Japanese sentence processing as compared to English  . To do this , we initially examined sentences that we thought would highligh the ease of Japanese relative to English  , namely , the " classic " English center-embedded vs . Japanese left-branching constructs from Kuno ( 1973 )  , e . g . , The cheese the rat the cat John keeps killed , : Taro-gaka He-iruncko-gako-rosilane zumi-ga On the conventional Chomsky-Miller account  , the English construction is very difficult to parse  , while the left-branching Japanese form is completely understandable  . Interestingly , as shown in figure 2 then mn ber of operations required to complete this parse correctly is enormous  , as one can see from the righthand column numbers that show the structures that are passed into and out of each principle module  . 
It at first appears that left-branching structures are definitely not simpler than the corresponding center-embedded examples  . Why should this be ? On a modern analysi such as the one adopted here  , recall that restrictive relative clauses , e . g . the rat the cat killed , are open sentences , and so contain an operator-variable structure coindexed with the rat  , roughly : ( l )\ [ NP\[NP the rat\]l\[epOp .   .   .   . the cat killed h\]\]l ? Note that these two are metrics that are stable across compile-cycles and different platforms  . This would be not true , of course , for simple parse times -- the obvious alternative  . 
where the empty operator ( Op ) is base-generated in an A-position and subsequently fronted by Move-c ~  ( Chomsky ,  1986:86) . 
Thus , the Japanese structures are center-embedded after a U--th cparser places a potcntially arbitrary string of empty Operators attile front of tile sentence  . Perhaps , then , the formal accounts of wily this sentence should be easy are incorrect  ; it is formally difficult but easy oil other grounds  . Of course , alternatively , the the-pryor parsing model could be incorrect , or perhaps it is scrambling , or prodrop , or the tlead-final character of the language makes such sentences difficult  . In the rest of this paper we focus on 3 attempts to discover the source of the cmnpl cxity . 
To investigate these questions , w cembarked on a series of optimization efforts that focused on the Spec positions of CP and the I lead-final character of tile language  , with the goal of making the Japanese as easy , or easier than , the corresponding English sentences or determining why we could not make it easier  . In all , we conducted three empirical tests : ( 1 ) using dummy nonterminals to " lift " information from the verb to the VP node  , to test the lIead-first/final hypothesis ;   ( 2 ) placing Spec of CP on the left rather than the right  , to test the center-embedding hypothesis ; and ( 3 ) building a " restricted " pseudo-Japanese that eliminated scrambling and frec prodrop  , while nollifting the information upaml to the left  , leaving the l lead-final character intact . We will next cover cash computer expcrime ut in turn  . Figure 3 gives a bar-graph summary of tim three experimental results in the form of times improvem cnt  ( reduction ) ill LR state creation . 
Optimization 1: Head-final information Our first optimization centers on the II ead-fiual phrase structure of Japanese  . With Heads at the end , valuable information ( subcategorization , etc . ) may bc unavailable at the time the parser is to make a particular decision  , tIowever , for our Litmachine , there is a wellknown programming language optimization : introduce dummy nonterminals on the left of a real nonterminal  , e . g . , VP --* X V NP , which , when reduced , call semantic action routines that can check the input stream for a particular property  ( say , tile presence of a noun arbitrarily far to the right  )  . Specifically , if verb ACRES DECOLING-92 , NANTES , 2328^0~'1992634 P Rec . OFCOLING-92, NANTES , AUG .  2328 . 1992 Princ , iple-e~nd-F % r'ome ~ Farser S_BuildL ~ firuph Languag=OoStalu ~ Ootlon ? Par == r  , ? ~ tm5c ~= oS = nt , anc ? ? lithel ~ cino~nte ~ eSelect nndR ~ Stn~a  , ~ aflgR~'raro-~)? . ?? . = eun*ko-#akoro et can ez~#-g=e=b . e = ?~=* u-~-FI\[CZEll CN . \[C = Op\[Cl\[l ?\[ X~\[?/OR af C\]\[II\[Np\[C ? O~3\[Ci  \[~\[~  ~\]4\[H\[YP\[VP\[B~e~\]a\[V ~\] S\]\[q t 6\] \[ IIS , & o~w ~- : Z . J ' " 7 f ~' t~s ~; T ' ~ l ~ an ~ tte ~ lt ~\[ 11 izc, . * ~ U---~---~-nt ~,\[-~, ~ p\]k . tt . 
? I\]hu81 Oct ,  9=4 ; 1 140J Gflh IIII JRY Hill 13137 CLPL-U~ER = ~ LllpKld , l  ~
FlUef ~ ~7........

Oenerator ~4 aa0ct ~
Figure 2: Tile parse of tile Japanese counterpart of the English center-embedded question  . ' I ~' acing out the lefthand fringe of the tree , note the string of empty operators , ms well as , on the right hand column , the large number of parser operations required to build this single correct LF as CO ml  ) arc d to English ( in the text )  . Still , a single parse is correctly returned . 
information occurs on the right we can of lline " lift " that information up to the VP node  , where it can then influence the Lit state transitions that are made when examining material to the left of the head  . For example , for each V subcategory , the LK machine will contain in effect a a new Lit state  ; the system will add a command to lookms far into the input as needed to determine whether to branch to this new state or another V subcategory state  . This is precisely tile mechanism we used to determine whether to insert an empty category or not in a flead-first language  . For instance , in Japanese relative clauses this is of importance because tile parser may get valuable information from the verb to determine whether a preceding NP belongs to that relative clause or not  . tile action and transition tables of the resulting Japanese machine  , which we will call " optimized , " will be far larger than its base case counterpart  ( more precisely : the action table is 3 times larger , or about 380K to 980K , while tile transition table is about twice as large  , 72K to 142K ) . 
The advantages accrued by this optimization are substantial  , 210 times better ; see the table below . ( This also holds across other sentences ; ee the bargraph summary at the end of the paper . ) The unoptimized number of LR state transitions grows astonishingly rapidly  . 
For example , the transitions needed to parse ce4 is exactly mush own--over 20 million of them , compared to 1 million for the optimized version )  1
Sentences : eel . The cheese was rotten ; e e2 . The cheese tile ratate was rotten ; ce 3 . The che~ether attile cat killedate was rotten . 
ce4 . The cheese the rat the cat John keep skilled at e was rotten  .   ( = l ~ aon snapshot )   ( See figure 2 for computer output of the corresponding
Japanese sentence.)
Total number of Litstate transitions Se , , t .   .   .   .   . IJP , ' ~ n ? p t " IJ l ', O , , t . IT i . . . . E . ~, ~ I\[I better ( E ') Jel\[232~1~--\[1, 9(6 . 1) 74 ff~1e2I 712 2I 1518 14 . 7(1 . 6) 243 1/~I 257,042 125/246\[10 . 18( . 19) 49791 20,360,664 966,114 ~ A ~( . 03) 3210 1_j The same basic trend also holds , though not as strongly , when we look at these and other sentences in terms of the total number of principle operations required  ; while we do not have space to review all of these here  , as an example , sentence ( 15 b ) takes 4126 operations in the base case , and 455 when optimized in this fashion ; while ce3 takes 1280 operations and 667 when optimized , respectively . 
ai We should point out that in all cases , about a two-thirds of these transitions occur before the LR machine reaches a point in the search space where the solutions are " clustered " enough that the remaining solutions do not take go much effort  . 
AcrEsDECOLING-92 , NANTES , 2328 Aour 1992635 PROC . OFCOLING-92, NANTES , AUG .  2328 ,   1992 Optimization 2: Spec of CP on the right A second obvious strategy is to remove the center-embedding itself  , llere there is a grammatical move we can make . Evidently , in Japanese the only elements that appear in Spec of CP are put thereby LF movement  . Thus , these elements can never be visible in this position on the surface  . If this is so , then there is really nothing to prevent us from placing just the Spec of CP on the right  , rather titan the left . This is an example of the " test bed " property of the system  ; this change takes two lines of code . Given this change , the resulting structures will have their Operators on the right  , rather than the left , and will not be center-embedded . 
In addition , in this test the parser will not take advantage of right hand information  , thus eliminating this a . sa possible source of speedup . 
Parsing complexity is reduced by this move , by a factor of just about one-half , if one considers either LR state transitions or principle operations  ; not . as good as the first optimization ; see below for some representative results . Also , with the most deeply center-embedded sentence the total number of principle operations actually is worse t it an in the base case  . Evidently we have not located the source of the parser's problems in center-embedding alone  . 
Complexlty for Spee on the right
Sentence LR trans . Total opseel 12232 ce 2493097 ce 3209 , 980721 ce416 , 290 , 6 67   12605 Optimization 3: Factoring out tim effects of scrambling arid pr0-drop While it appears that t lead ~ final information helps the most  , wenms t also remember that part of the complexity of Japanese is the result of frcescrambling and  pr0-drop   . To factor apart these effects , we ran a series of computer experimeuts on a quasi-Japanese grammar  , J * , ttlat was just like Japanese excepts crambling and prodrop were barred  . The changes were again simple to make : one change was automatic  , just turning off a parameter value , while the second involved 3 lines of hand-coding in the X"s chemast of orce the system to look for a lexical NP in DO  ( and IO ) positions l " urther , we did not optimize for righthand information ( so that the tlead-final character was left intact  )  . Of course , we now can riolonger parse sentences with scrambled direct objects  . 
The table below shows the results . This was the best optimization of all . Without scrambling , and hence no movement at all compared to English , the I lead-final quasi-Japanese was for the most part parsed  510 times more efficiently than English , and at worst ( for the triply-embedded sentence ) with three times fewer LR transitions and only about  30% more principle operations than English . Thus , this was even more efficient hantheright hand information optimized Japanese parser  .   ( The first column gives the number of LK transitions and the second gives the total munber of principle operations for this " no scramble /drop " version  , while the last two columns give the same information for English  . )
No scrambling/drop vs . Engllsh ~ e ~, Rt . . . . . . No . ops Eng . LR Eng . op seel \] . 03 .   32   745   109   ce2   \[274   88   2431   168   ce3   11241   445   4979   558   ce4  ~  3719   21  , 0742874 As before , with a short sentence , there is little difference between optimization mcthods  , but over a range of sentences and with longer sentences  , the no-scramble or prodrop optimization works better than any other  . 
Evidently , given the framework of assumptions we have made , the IleFtd-fnal character of Japanese does not hurt the most  ; rather , it is scrambling and prodrop that does , since if we remove these latter two effects we get the biggest improvement in parsing efficiency  . We can confirm this by looking at the Lt ~ transitions for the other sentences  ( lb ) - ( 18 b ) across methods , summarizing our tests . We can summarize the three experiments acro ~ q sentences in figure  3  . 
Summary of colnplexity across teats u
Sentence , opt . Opt . Spcc-Final No Scra-mble/drop ~-- ~6"   730   602   216   2b   ~4   790   957   298   311   3   289   185   103   4b I 422   307*   149   5b   t2   1051   878*   370 fib ~ 377   267   138   1511   955   19  , 998 11 , 205168 117b ~7178968527218 bi , 036 84 , 727 43 , 7 45   5306   6 Conclusions Given our limited set of test sentences  , our results must be correspondingly tentative . Nonetheless , we can draw several initial conclusions : * One can parse Japanese by parametrically varying a grammar  , nmc has expected . Tile limits of the method are theory-bound : we can accommodate just as much as we understand about Japanese syntax  . 
* Attempting to parse more than one language with the same grammar and parser carl quickly reveal what is wrong with one's theory for either language  . In our case , we discovered omissions in the implementation relating to Case transmission  , the Wh-Comp Requirement , and trace deletion , among other items . 
* A single parser suffices for very distinct languages  . 
The grammar is parameterized , but not the parser , confirming nmch recent other research in Japanese sentence processing cited in the introduction  . Japanese at first appears much more complex to parset it an corresponding English sentences  . We suggest , tentatively , that complexity is introduced by scrambling and omission of NPs  , rather than I lead-final properties . Unoptimized , the system is too slow . Some efficiency is obtained if one can " lift " information from the right for use in parsing with an Llt machine  . Frm na heuristics t and point , his suggests that strategies limiting what may appear in a scrambled position or dropped in a certain context will aid such art LR-based device more titan switching to a parser based presumably geared for a different branching direction  . 
? The prineiple-bmsed system affords a new and generally straightforward way to precisely explore different grammatical theories  , structural assumptions , and parsing methods and their computational consequences AcrEs DE  COLING-92  , NANTES , 2328 AOt'rr 1992636 I'ROC . OFCOLING-92, NAI~rES , AUG . 2328,1992i30-~25-i20-15-'LO-
LOlb2 bab 4b 5b 7b 15b 17bt8 bcolco2 co3e ~ , 4  . % tt ~, m , . ; \[\] Right-lured iafiwmttion \[\] Spoe CP tm fight *= complete part m not ob  ( ain ~ d\[\]Noit crtmbllngor prorhop Figure 3: A bargraph showing the improveme at in total LI1  . transitions when parsing Japanese xamples lb -18b   , and cel-ee 4 , compared against imoriginal base case unoptimized parser  , across tile 3 experiments described here . 
The horizontal line drawn at 1 . 0 indicates improvement over the base cause . 
in a precise way , without extensive handcoding . All of the experiments we tried took no more than a few lines of modification  . Of course , the difficult part is to come up with a universal set of principles in the first placc ~ so that in fact  , English looks just about like Japanese , and vice versa . 
7 References
Baltin , M . R . , amlA . S . Kroch ( eds . ), 1989 . Alternative Conceptions of Phrase Structure , The Univemity of
Chicago Press.
Chomsky , N . A . , 1986 . Knotoledgeo \] Language : Its Nature,
Origin , and Use . Prager.
Correa , N . , 1988 . Syntactic Analysis of English with respect to Government-binding Grammax  , Ph . D . dissertation,
Syracuse University.
Crocker , M . W . , 1989 . A Principle-Based System . for Syntactic Analysis , ( m . s . ) . 
Dorr , B . J . , 1987 . UNITRAN : A Principle-Based Appro~tch to Machine Translation  . S . M . thesis . MIT Department of Electrical Engineering and Computer Science  . 
Fong , S . & R . C . Berwick , 1989 . The computational in-plement a ~ tion of principle -based parsers  , blternational Workshop on Parsing Technologies . , Carnegie Mellon University , in M . Tomita ( ed ) Currentlssues in Parsing Technologies , Kluwer . 
Fong , S . , 1991 . Computational Properties of Principle-baaed Grammatical Theories  . Ph . D . , dissertation , M\[TDepartment of Computer Science and Electrical Engineering  . 
Frazier , L . , and K . Rayner , 1988 . Parameterizing the language processing system : Left-vs  . right-branching within and across languages . In J . tiawkias(ed . ) Ex-pluming Language Universals , llasi\[Blackwell , Oxford , pp .  247 279 . 
Hosokawa , I1 .  1991 . Syntactic difl : erences betwemt English and Japanese  . Georgetown Journal of Languages and
Linguistics , 1:4, 401-414.
lnoue , N . and Fodor , J . D . , 1991 . Information-paced processing of Japanese sentences  . Paper presented at the In-ternation M Workshop on Japanese Syntactic Processing  , Duke University . 
Johnson , M . , 1989 . Use of tile Knowledge of Language , Journal of Psyeholingulstic Research .  18(1) . 
Knno , S . , 1973 . \]' he Slruclure of the Japanese Language,
Cambridge , MA : MIT Press.
Lamdk , H . & M . Saito , 1984 . On the nature of proper government . Lir~guistich ~ quiry , 15:2 . 
Lasnik , II . & J . Uriagereka , 1988 . AC ' ourse in GB Syntax : Lectmves on Binding and Empty Categories  , Cambridge , MA : M1T Press . 
Mazuka , It . , 19911 . Processing of empty categories in Japanese . Manuscript , Duke University . 
Nagai , N . , 1991 . Paper presented at the International Conference on Japanese Sylttactic Processing  , l ) uke University . 
Sharp , ILM . , 1985 . A Model of Gramntar Based on Principles of ( ~ overnment at dl \] inding Theory . M . S . thesis . 
Department of Computer Science . University of British

Stabler , E . P . , Jr . , 1991 forthcoming . The Logical Approach to Syntax : Foundations , Specifications and Implementation so \] Theories of Government and Binding  . , Cambridge , MA : MIT Press . 
Tomita , M . , 1986 . E ~ icientParsing \] or Natural Language : A Fast Algorithm for Practical Stl stems  . Kluwer . 
Wehrli , E . , 1986 . A Government-Binding Parser ` for l ') ~ neh . 
Working Paper No . 48. University of Geneva.
ACTESDECOLING-92, NAm . Es . 2328^o ( rr 1992637I ) ROC . OFCOLING-92, NANTES , AUo .  2328 .  1992
