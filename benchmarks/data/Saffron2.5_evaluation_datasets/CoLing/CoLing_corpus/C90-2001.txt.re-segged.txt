A Grammar Combining Phrase Structure and Field Structure 
Lars Ahrenberg
Department of Computer and Information Sc ience 
Linkgping University
S-58t83 Linkgping , Sweden
emaihlah@ida.liu.se
Abstract
Agraanmart brmalism , Field and Category Gram-.
mar(FCG ) , is described , which beside constituent structure and functional structure recognizes a level of field structure  . It is argued that the formalism offers descriptive and computational advantages for the analysis of Scandinavian and other languages that distinguish clause types topologically  . It is also argued that the clear distinction between fields and constituents makes FCGs theoretically so under than other proposed field grammars  . A comparison is made of the word order rules and assumptions of FCGs with the partial order ip  , gs employed by GPSG and other models . 
1 Motivations for field structure
Descriptive grammatical works on Germanic languages often refer to notions such as field and  . schema , some early , major works being\[Dider46\] and\[Drach3 73 . Recently , \[ H . u e87\] and \[' Ibgeby88\] have argued that field grammars in Diderichs en's tradition are useful for the computational nalysis of Dan-  . 
ish . If they are right , the same is obviously true for the other Sc and in avian languages and possibly other 
Germanic languages as well.
A major motivation for field structure in the Sc and in avian languages is the correlation between the positioner a constituent and grammatical f mction  . For instance , a NP occuring after the finite verb but before : the sentence adverbs  , i . e . in the field that Diderichs entermed Ncksusf clt , is a subject , while NPs appearing after the sentence adverbs , in the In-dholds felt ( content field ) are objects . As main clauses have no surface VP-node consisting solely of the verb and its complements  , a configurational definition of subject , ; and objects is less appealing . 
There is a correlation also between positions and thematic functions  , the classical example being Diderichs en'sl' ~undament  ( foundation )  , the po--sition before the finite verb which holds thematically prominent constituents of various kinds  . 
A second motivation is that the word order regularities of ' clause types are better described if we haw : access to field structure  . In a phrases t , ruct , m'e grammar we either have to write a separater t ~ le  , or rule schema , for each clause type , or else introduce pew-erflfl rules such as transforn-mtions or recta-rules to  , capture differences and similarities . Fields t . rtact . ure can be used to express the common traits directly : the schema in figure  1 apply to virtually all Swedish clause types . * Moreover , variation can be accounted for in terms of constraints on what may occur i '  , ~ the fields and such constraints may be expressed Ly regular expressions  . ' Fh vs , the il ~ corporation of field structure to a formalism does not add to its co~Hpu-tational complexity  . 
2 Field structure vs . phrase structure It is obvious that schemas uchas that of figure  1 can be defined by contextfree rite rules each of which specifies a number of subfield-relations and a sequ ~ a ~- tial order for the subfields  . ~ l'he rules below togel her define the schema in figu  , ' el , which we name ? . 
(1) 2-, FNexF Cont F
NexF--+vnex
ContF ~ v ' ObjF adv
ObjF--+obj pobj comp
The simplest way of formalizing a field grammar is to define an appropriate set of ' rules of this kind and  , if we want to derive a functional structure , associate the rules and lexicaler , tries with l ' uncLio ~ . lalinformation . This is essentially the approach taken by \[ RueS7\] and by\[ Togeby88\]  . As a resul L the field notion is merged with the notion of constituer lt  . II . 
is indeed often said that an advantage of l ) id crich-sen's analysis is that it offers a 10 ett . ercoJ ~ stituem . 
analysis of Danish than , say , traditio ~ mlTC, . Tlds is not so , however . On the contrary , it . is one of the weaknesses of Diderichs en's work that the notions of fiehls and constituents are regularly confused  ( cf . 
1The schema in f igure 1 is a revised version of l ) klcrich sea's classical schema . For instance , the nexus field h ~ Lq been givel ~ two posit ions instead of three for reasons expl~tined in sectiol l  3  . 1 . 3 . 

Foundation ( F ) Nexusfield ( NexF ) Content_field ( ContF ) 
V  ~

Ivnexhann inte manage duotatt jaginte that I not harm managed 
ObjF--trgffahonom--see him--trgffahonom -- see him Figure  1: A schema for the Swedish clause with two analysed examples  . 
advtOagitoday ! idag today\[Telem 72 , Braunm86\]) . Instead field structure is better conceived of as a level that accounts for the linearization of independently defined constituents  . 
While such a conception of field structure is more restricted  , it is more motivated and equally amenable to formalization  . The formalism must deal with two types of information for a constituent  , however , its category and the field(s ) it occurs in . Also , we need to distinguish carefully the dominance relations for fields  ( supe , field ) and categories ( dominates ) as they differ in their logical properties , ttere only two important differences will be noted :  \[1\] Fields transmit expressions , categories don't . Given an expression , e , that is situated in a field , f , it will also be situated in every field that is a superfield off  . Conversely , fields generally allow multiple occurrences of constituents  ( incl . none ; cf . figure 1) , while categories categorize exactly one constituent at a time  . \[2\] The supet field-relation is nonrecursive , which means that schemas have a finite number of elements  . The dominates-rel-:~tion , on the other hand , allows recursiou in the usual way . 
3 Field-and-Category Grammars
Field-and-Category Grammars ( henceforth FCG ) may , with fimctional schemas included , be regarded as a generalization of Lexical -Functional Grammars \ [  LFG82\]  . There is then the usual division between two structura levels  , but as the surface level includes information about the position of a constituent in a relevant schema  , and not just category , we refer to it as a topological structure , or t-struct u , ~ . For tire purposes of this paper the f-structure may be taken as in LI?G  . 
At-structure for a simple sentence is il lust rated in figure  2  . The rules necessary for the generation of t -structures form a Basic FCG  . 
A schema is defined as a maximal field . A position is a terminal field . An identifier position is a position that admits an identifier of a phrase  , such as a lexical head . 
Categories are ordered by a subsumption relation.
An actual category is a category that does not subsume any other category  ; an abstract category is one

Harm duinte

NPE nexSAE nexInfSE comp
I /"\
ProNEn VE v ' NiE obj
PNEn Itriiffa Peter
Figure 2: A topological structure for the sentence tI an ndu intetraffaPeter ?  ( Didn't you manage to see Peter ? )  . Nodes are labelled CE p , where ( 3 indicates the category and p the position of the dominated string  . 
that does . Abstract categories express what is common to a class of actual categories  . 
A configuration is a triple \[ D , C , p \] where I ) is an actual category , C is an actual category or a word , and p is a position . A configuration corresponds to a branch of a local tree of at-structure  . D is the category of the dominating node , C the category of ~ t dominated node and p the position of the latter in the schema associated with the former  . Conversely , a local tree can be represented as a multiset of configurations that have a common first element  . For instance , the top local tree of figure 2 corresponds to the set \[ PolS , V , v\] , \[ PolS , NP , nex\] , \[ PolS , SeX , nex\] , \[ PolS , InfS , comp\] . Multisets are required in the general case as there may be several daughter  . ~ with the same category and position . 
3  . 1 Rule types 3 . 1 . 1 F ie ld s t ruc ture ru les Field structure rules define the internal structure of fields in terms of subfields  . In addition , they assign each position an occurrence index , stating the maximum number of fillers it takes . I will write p * to indicate a position with any number of fillers  , pn for a position with a maximum of n fillers , ( p ) for a position with one optional filler , and ~ implyp for a position with one obligatory filler  . The rules in (1) may be expanded as below , whereas implified rule for the noun phrase schema is also stated  . 

Notation Meaning xGp eGp
AGpwGp(A)Gp(w ) ep
A ' Cp pnm st not be empty p must be empty p must conttdnanApmust  , contain word wp may only contain an Ap may only contain word w p must  ; not contain an A Table 1: Basic topological constraints of a FCG . 
(2) E---,(F ) NexF Cont F
NexF + ( v ) nex *
ContF---,(v ') ObjF adv*
ObjF--~obj2 pobj * ( comp )   ( 3 ) H --+ ( det ) mod * nrel * 3 . 1 . 2 Category def in i t ions Category definitions define necessary properties of categories  . They may be written as 4-tuples ( C,C','\] . ' , F ) where C is defined as a subcategory of C ' meeting the topological constraints ' F  , and the functional constraints F . 
Basic topological constraint state what must or mayo?co_rin a specific position  . A list of basic topological constraints is found in table  1  . The element rl ' is a conjunction of such b~sic constraints  , or a schema symbol . In the latter case the definition includes a category-schema association  , which says that the category , and , by implication , all its subcategories , are linearized by the named schema . 
The other constraints give information about what occurs in specific positions of that schema  . 
' I'he functional constraints are written as conjunctions of attribute-w due assign lnents and value constraint  , < A single attribute name indicates that this attribut  . c " must have a value at L struct . ure . 
Some examples of category definitions are given below  . ' lbgether they define an inheritance hierarchy of constituent categories  , where properties of a category high up in the hierarchy are shared by categories below it  . Topological properties that are common to a set of actual categories are expressed at their commonances to  , ' s , and , in particular , by tile common schema they inherit . 
csal:(S ,  -  , E , Sul)jAPred AV form ) csa2:(NP ,  - -  , II , Numb AG end ) defl:deP2: def3:def4:detS:def6:deft : ( Main S , S , VE v , )( V2S , Main S , xGF , ---)( V1S , Main S , eCI " , ) ( PolS , V1S , NPO lex , Vform = Fin ) ( hnpS , V1S , NP-Gnex , Vfonn = hnp )( SubS , S , ( Comp ) ~_vAV cv ' , ~-) ( lntS , SubS , eG\["A(all ) CvANP~(Enex , 

For instance , in ( def4 ) a polar interrogative clauses ( I'olS ) is detined as a verb-first clause ( V1S )  , which in ( def3 ) is deiined as a main clause ( Main S )  , which in turn is defined as a clause ( S ) . Being a clause it . is linearized by E according to ( csal ) and its f-structure must have a subject , asernantic form and a verbal property . Being a main clause it has a verb in position v ( defl )  . Being a verb-first clause it has an empty foundation  . In distinction to other verb-first . 
clauses it has a finite verb form , and an expressed subject in position nex . 
3.1.3 Configuration rules
While category definitions state what nmstholdo F a given category  , configuration rules state what may hold of any category  . Each configuration of the language is defined by some configuration rule  . A configuration rule may be written as a list of the form  ( CS , F , i ) where CS is a description of a set of COll Iig -urations  , F is a conjunction of functional constraints and i is an occurrence index  . We take advantage of the category hierarchy and use abstract categorizes ill the description of configuration sets  . Three illustra-tions are given below : confl : ( \[ S , Nl ' , l "\] , ISUBJ = I , l ) conf2:(IS , NI ' , nex\] , \[SIIB . \] = I , 1) confa:(Is , SA , nex\] , 1= t , *) The arrows , Ianil . L are used ms in I , FC ; :' l'l J ( : up-arrow identifies the f-structure of the donlinating node of the configuration  , whereas the downarrow identifies the f-structure of the dominated aode  . 
The first two rules state the possible sub . \]ect configurations of Swedish . They apply t . oa I ! su\]~categoriesS and NP , unless this is contradicting ~ h , ' definitions of these categories . For instance ,   ( conf ! ) does not apply to a V1S as defined in ( de\["/ )  . 
The last two rules both define fillers of position ' nex ' without ordering them  . The third rule detil Jes an iterative configuration  , as indicated by its occurrence index . Thus , the subject is allowed to take . , diL ferent relative positions w r t the sentence adw ~' rbs in agreement with the facts illustrated in  (  , , I)-((3) . ll ! this way fields serve to define bol'ders % r l <  ) ca\]word or ( le , ' variation . 
(4) In att vark attenhog inteute.
lasl-nighl was lhe-cal hognolo ~ tl " Probably , the cat was n ' t outdoors last night " ( 5 ) In att varhogk atten inteute last night was nog the-cat  7~  . olo ~ lt (6) In att varnog intekatteuute . 
lasl-7~ight washog ~ olllle-caloul 333 . 1 . 4 Lexica l ru les A lexicM rule may be written on the form  ( w , C , T , F ) where the lexical item w is assigned a category , a ( usually null ) topological constraint and sometime-tional information  . Three illustrations are given in (7)-(9) . 
(7) ( hann , V ,  - -  , Pred='manage <( Subj)(X comp ) > '

AV form = F in A Tense = Pret ) (8) ( inte , SA ,  - -  , Pol=Neg ) (9) ( Peter , N ,  - -  , Pred='Peter '
A Numb = SgAG end=Utr ) 3 . 1 . 5 Wel l - fo rmedness cond i t ions In order to be wellformed an expression of a FCG must have both a wellformed t-structure and a wellformed L structure  . We omit the requirements of wellformed L structures as they can be taken to coincide with those of a LFG  . 
A topological structure , T , is welt-formed according to a FCG , G , if r the following condition holds : ( i ) Each node of T is assigned an actual category and every node apart  , from the top node is assigned a position ; ( ii ) Any local tree , L , of T , with top node category , C , satisfies the following conditions : ( a ) for each branch of L there is a configuration rule  , or a lexical rule , in G that licenses it ; ( b ) if C is nonterminal , there is a schema , ~ r , associated with C , such that the sequential order of the branches is in agreement with the sequential order of their positions in c ~  ;   ( c ) all restrictions on o-imposed by C in its definition are satisfied by L  . 
4 Properties of Basic FCGs
By removing all functional information from a FCG we obtain a Basic FCG  . It is the Basic FCG that is responsible for the expression of dominance and precedence relations in the grammar  , i . e . it has the same role as the phrase-structureules of a LFG  . 
This section is concerned with some interesting properties of Basic FCGs  . First I show that a Basic FCG is weakly equivalento a context-fi'e e grammar  . 
Let G be a Basic FCG . Let A he the set of actual categories , Z the set of schemas , and P the set of positions , all finite sets . For any CEA let L ( C ) denote the set of strings dominated by C . The language of G , L ( G ) is defined as a union of such sets for some suitable subset A ' CA  , e . g . by the set of subcategories of S . 
Let W be the set of words that occur in configuration rules and category definitions  . Let K be the set

For any a ES we may , by expansion of the relevant field structure rules  , derive a positional structure for c ,  . Call this structure % . For instance , from ( 2 ) we may derive a positional structure e > 2: ( F )   ( v ) nex * ( v ' ) obj2 pobj * ( comp ) adv * A positional structure can be given the form of a regular expression over P  . This is guaranteed , since fields are nonrecursive objects . 
Let Dheany actual category that is linearized by  ~  , and let p be a position that occurs in co . The category definitions associate with D and pa conjunction of topological conditions  , Dp , r , where each conjunct has one of the forms in table  1  . 
For given D and p the configuration rules allow us to derive the constituent strings that may occur in punder D  . There is only a finite number of applicable configuration rules  . Each rule gives a disjunction of actual categories and an occurrence index for that disjunction  . If all occurrence indices are finite , or if the occurrence index of p is finite , the constituent strings may be represented by a finite language over K  . If some occurrence indices are '*' , and p itself he , soccurrence index '*' , we may first form a finite sublanguage over K that represents all strings of nol > iterative constituent categories  , and then extend it by introducing the iterative constituents  . In either case , the result is a regular language over K . We call this language Lu , p . 
For instance , assuming that ( confl ) and ( conf2 ) are the only rules pertaining to position nex , and that NP has three actual subcategories , CNP , PNP and ProNP , we have L pots , n ~= Ls , n ~= SA * ( CNP + PNP + ProNP ) SA * . 
Given LD , v we want to derive the sublanguage of constituent strings that satisfy Dp  , ~ . Call this language LD , v , r . Consider first the primitive cases : 1 . If Dp , r = eEp then Lu , p , r = el . 
2. If Dp , T = xEp then Lu , v , T = Lu , p-e.
3 . If Dp , r = ACp where A is actual , then LD , p , r----LD , pNK*AK* . 
4 . If Dp , r = AEp where A is abstract , then LD , v , r = LD , pN(K*A1K*t . .J . . . UK * An K *) where A1, . . . , A , ~ are actual subcategories of A . 
5 . If Dp , , = ( A)Ep where A is actual , then LD , p , ~= Lu , vM(K*AK*Ue) . 
6 . If Dp , ~ = ( A ) Ep where A is abstract , then LD , p , r = LD , / ~( K * A1K*U ' " UK * A , ,K*Ue ) , where A1 ,   . . . , A , , are actual subcategories of A . 
7. If Dv , ~= A ' Ep then Lu , p , r =
Lu , / I(K * - K * AK *) 8 . If Dv , ~= wEp then LD , p , ~= LD , pV1K*wK * . 
9 . Ifg , , ,= ( w)ep then LD , v , r = LD , pN(K*wK*Ue) . 
In all cases LD , p , r is a regular set . As Dp , r in the general case is a conjunction of such primitive constraints  , it follows that LD , p , ~ , will always be a regular set over K . 
Let LD be the totality of constituent strings that D may dominate  . Then LD is obtained by substitution 44 of L . o , p , ~ for pine(, . As the class of regular sets is closed under substitution  , LI ) will also be a regular set over K . As D itself may occur in I , D , we may have recursive categories in I , ( D ) , however . In any case , L(D ) , and by implication , L(G ) , is a contextfree language . 
It is interesting to note that many simple contextfree languages cannot be given a simple Basic FCG  . 
l " or example , if a certain ca . tegory , C , takes one obligatory daughter , II , and two optional daughters A , B , according to the the Cl "- grant mar G1 , there is no Basic FOG for L ( G1 ) that has C as an actual category . 
( c : ~) c --. u
C-~IIA
C . . . . Bli
C --, At 1131 t " there is such a I'~CC ,, it . must employ at least/hree positions , since otherwise alternative orders must be allowed  . Ttms it takes three conliguratiol ~ rules pertaining to three diff c  . rent positions to account for lhestring\[A 1I B \] . But as these are independent hestrings\[Atl\ ] and  \[11 B\]ca , , also be generated , contradicting the assun~ption . 
In a Basic I " CG a category I ) e having as (2: in C , I must be abstract and its diff ( . ' rei~t realizations must be divided among ai ~tlHlt  ) er of actual sul ~ c v . teg(;ries . 
A Basic FCG weaklyeq ~ livaleutt . oG1 is ( i ; 2: ( C2) ( fsrl) . --,(pi ) p2 . ( p:t)(csa:l ) ( C ,  -  , o , )( cderl ) ( C ,   , nc-p ~ , ) ( crier : . )) ( Cl ,  (: , eC:-pli(A)C-ip3 , )( cdef3)(C2 , C , l ~ C l ; 1 A e ~ p \ [ ~ , ) ( cdef , l ) ((1:3 , C , AEplAI\]dI/I , ) ( co , ~fl )(\[(: ,  11 , p2\] ,   , 1) ( co . f e )(\[ c,A,pl\], . 1) ( eo . f3)(\[(: ,  ~ ,  ~1\] ,   , l ) ( conIq)(\[C , , A , p3\] ,   , 1) ( co , ~ ra)(\[c , J  ~ , i , : q ,   , l ) What languages can FCGs describe well ' , e Intuitively it . seems that complex coJl stituents that share a set of potential  ( lat~ghter should obey the same constraints as regards their relative order and occurrence  . In particular , the occurrence of one daughter should be independent of the occurrence of other daughters  . Where there is a difference in these prol)-ertie . s , there must be a categorial distinction in the grammar  , as the example a bow ? illustrales . We may call this property cat cgo'ry-dcpende T~lfi : cc demoting  . 
it , see . ms , however , that thi ' ~ property is significant for natural languages  , all easl\[or those , like the Germanic languages , t . hat distinguish clause t . ypes on topological grounds . 
5 F ie ld s t ruc ture and par t ia l o rder ings If the  ( surface ) syntactic structures of ' a natural language are specified by means of a contextfreegl ' all > mar a  . s in LI , 'G , there is no chance of expressing a ~ ly generalizations pertaining to word order  . I , I ; 'G admits a number of notational devices to facilitate the writing of c-structure rules  , but has made few claims about possible word order restrictions  . \[GPSG85\] , on the other hand , makes the strong claim that natural languages obey Exhaustive Constant Partial Ordering  ( ECPO )  , i . e . that the possible linearizations of a set . of sister constituents are the same in any local tree irrespective of the categories of the mother aud other sisters  . Such linearizations are expressed by means of partial orderings  , or LP-rules , of the fer n\

It is obvious that this assumption is more nat urally made in a framework that works with local trees I hat have only two or three branches than in a framework which employs fi at structures  , t : ' or instance , the existence of unmarked and inverted clauses is not contradicting the FCPO-hypothesis  , if the subject is regarded ~ Ls a sister of the finite verbouly in the inverted case  . l lowever , there are constructions that speak against it . as a universal , such as t . he order of object and verb in German main and subof dirlate clauses : Ich kauflce in Auto  ( Ibm , ghtacat ') vs . lc\]~babeei ~ . .4 , ~ to flck au fl ( i have a car bough 1:--1 have I ) ought a cat ' )  , and the order of verb partici- . 
pies and their complements in Swedish predicative and attributive constructions : Rapporlendr " b cat dlh lav B or  . q('Fhe report is ordered by Borg ) vs . De?av Borgbesl Mldarapporten ( The by Borgordered report = The report that Borg ordered  )  . These constructions are not problematic for FCGs , however , although they necessitate a categorial split . 
Although the number of categorial splis can bc many in a FCC  ;  , one would not like tim number of schemast . o1o every high . For a language like Swedish it seems possible to limittl  , e  descriptio J , to five schemas , one for each type ot'p vojectiot l(V , N , A , t ) ) and one for coordinated structures \[ Ahrenb89\] . 
LP-rules are used also infrante works which do not subscribe to the ECPO-property  , such as IIPSG\[PolSag87\] . l lowever , they need to be colnplemented by something , as they miss an important aspect of word order . As they apply to sister constituents , they fail to give any information on the position of a daughter relative to the phonological span of the mother  . For instance , as a speaker of English Ikt , ow that the definile article appears at the very beginning of an  N1   ) and that relative clauses appear at the end . Given a set of IA~-rules ordering detcrmil Lers , relative clauses and other NP-constituents we may possibly infer this information  , but this is around about way of doing it . . To express such facts dire . ctly we need a device that will impose a sequential  strut-5   5 ture on phonological spans , and it is t br this purpose that the topological schema is useful  . 
On the other hand partial orderings seem better suited to describe category-independent word order regularities  . Consider the case of complements to a head . In the Germanic languages the nor-real order would be the one expressed in  ( 10 ) : NP-complements precede PP-complements which precede verbal complements whatever the category of the head\[  GPSG85  , p .  110\] . 
(10) NP-~PP-~VP
The rule in ( 2 ) defining the complement field ( ObjF )  , repeated here for convenience , specifies three positions , one for bare objects , one for prepositional objects and one for verbal and adjectival complements  . 
ObjF--+obj2 pobj*(comp)
Even if we could appeal to the same or a similar field structure rule in the case of complement so the a  . djective , it seems natural in this case to explain the ordering in terms of the difference in category between different complements  . Thus , with the introduction of ( 1O ) ObjF could be regarded as at position , i . e . as a tern final of the schema in figure 1 . 
Note however that in a FCGLP-rules receive a slightly different interpretation  . They apply to positions rather than to local trees  . 
6 Concluding remarks
Current work on FCG includes the implementation of a head-driven  , bidirectional chart-parsing algorithm . The basic idea is to use fillers of identifier positions to trigger bottom-up redictions  . FCGs have the advantage that the search for topologically different  , alternative projections of a head or other identifier  , can be accomplished by a single active edge . 
On the other hand the category of an edge is often abstract  , and has to be determined on the basis of category definitions and the content of the edges that combined to introduce it  . 
Finally it should be stressed that while FCG is a variant of a LFG  , the idea of regarding the schemas of traditional field grammars as structures of par-tim information can of course be exploited in any unification-based formalism  . 
\[Bresn82\]J . Bresnan ( ed . ): The Mental Representation of Grammatical l ~ elalions  , The
MIT Press : Cambridge Mass.
\[ Braumn86\]K . Braunmtiller : Ilvor moderneer
P . Diderich senssmtnings an Myse?1\[II&A86\]pp .  77-98 . 
\[ Dider46\]P . Diderichsen : Element azr DaT * sk
Grammatik . Third edition . Copenhagen,

\[Drach37\]E . Drach : Grundge danken der Deulschen
Satzlehre . Frankfurt/M , Diesterweg ; reprint Darmstadt , Wiss . 
Buchgesellschaft , 1963.
\[GP scss\]G . Gazdar , E . Klein , G . Pullum and I . Sag : Generalized Phrase . 5' lr~zc & reGrammar . Oxford , Basil Blackwell , t985 . 
\[ USASS\]L . tlelt of t and a . E . Andersson ( eds . ): Scetningsskemaet og dets stilliny - 50 dr crier . Nydanske studier & ~ ahnen komm , lL-nikalions teori 1617 . Akademisk For lag . 

\[LrGS2\]R . M . Kaplan and J . Bresnan : Lexical-
Functional Grammar : A Formal System for Grammatical Representation  ,  . \[ a\[Bresn82\], pp .  173-281 . 
\[ PolSag87\]C . Pollard and I . A . Sag:\[nforwalio ~- Based Syntaza T~d Semantics . Volum . ei:
Fundamentals . CSLI Lecture Notes , No.
13. Stanford.
\[RueSr\]It . Rue : Danish field grammar in typed I~I ~ . OLOG . Proceedings of the Th . ird Cot > ference of the European Chapter of the ACL  , Copenhagen , April 13 , 1987:lt37-172 . 
\[ Telem 72\]U . Telenaan : OmPaul Diderich senssw > taktiska model l  . 1 Teleman , Ulf , 7' reztpl ;-s at serom grammalik . Student litteratur,
Lund , 33-57.
\[ Toge by 88\]O . Togeby : Parsing Danish Textill F ; u-rotra . Nordic Journal of Linyui , ; tics , Vol . 
11, Nos . 12, p . 175-191.
References\[Ahrenb89\]L . Ahrenberg : A formal field grammar . Research report LiTtI-IDA-89-46,
Link 6 pinguniversity , department of
Computer Science.

