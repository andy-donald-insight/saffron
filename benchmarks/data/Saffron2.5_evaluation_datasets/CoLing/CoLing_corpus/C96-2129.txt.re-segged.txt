Automatic Detection of Omissions in Translat ions 
I . Dan Melamed
Department of Computer ~ md Information Science
University of Pcnnsylwnia
Philadelphia , PA , \]91104, U.S.A.
melamed@unagi , c is . upenn , edu

A DOMIT is an algorithln for
Automatic Detection of OMissions in Translat ions  . The algorithm relies solely on geometrican a lysis of bitext maps and uses no linguis-tic information  . This property allows it to deal equally well with omissions that do not correspond to l inguistic units  , such as might result ti ' om word-processing mishaps  . 
A DOMIT has proven itself by discovering many errors in a hand-constructed gold standard for eval-uating bitext mapping algorithms  . 
Quantitative evaluation on simu-lated omissions showed that  , even with today's poor bitext mapping technology  , A DOMIT is a valuable quality control tool for translators and translation bureaus  . 
1 Introduction
Omissions in translations arise in several ways . A tired translator can accidentally skip a sentence or a paragraph in a large text  . Pressing a wrong key can cause a word processing system to delete several lines without warning  . Such anomalies can usnally be detected by carefnl proofreading  . 
However , price competition is forcing translation bureaus to cut down on this labor-intensive practice  . An automatic method of detecting omissions ( : an be a great help in maintaining translation quality  . 
A DOMIT is an algorithm for Automatic Detection of OMissions in Translations  . A DOMIT rests on principles of geometry , and uses no linguistic information . This property allows it to deal equally well with omissions that do not correspond to linguistic units  , such as might result from word-processing mishaps  . A DOMIT is limited only by the quality of the available bitext map  . 
The paper begins by describing the geometric properties of bitext maps  . These properties enable the Basic Method for detecting omissions  . 
Section 5 suggests how the omission detection technique can beembo died in a translators ' tool  . 
The main challenge to perfect omission detection is noise in bitext maps  , which is characterized in Section 6 . A DOMIT is a more robust variation of the Basic Method  . Section 7 explains how ADOMIT filters out some of the noise in bitext maps  . Section 8 demonstrates AI ) OMIT's performance aim its value as a quality control tool  . 
2 Bitext Maps
Any algorithm for detecting omissions in a translation must use a process of eliminatior l : It  ; must first decide which segments of the original text have corresponding segments in the translation  . 
This decision requires a detailed description of the correspondence between units of the original text  ; and milts of the translation . To un(ler-stand such correspondence , think of the original text and the translation as a single bitext  ( Hatris ,  1988) . A description of the correspondence between the two halves of the bitext is called a bitext map  . At least two methods for finding bitext maps have been described in tile literature  ( Church , 1993; Melamed ,  1996) . Both methods output a sequence of corresponding character positions in the two texts  . The novelty of ' the omission detection method presented in this paper Dies in analyzing these correspondence points geometrically  . 
A text and its translation can form the axes of a rectangular bitext space  , as in Figure 1 . The height and width of the rectangle correspond to the lengths of the two texts  , in characters . The lower leg corner of ttle rectangle represents the texts ' beginnings  . The upper right corner represents the texts ' ends  . If we know other corresponding character positions between the two texts  , we can plot them as points in the bitext space . The bitext map is the real-valued fnnc-lion obtained by interpolating successive points in the bitext space  . The bitext map between two texts that are translations of each other  ( mutual translations ) will be injective ( one to one )  . 
Bitext maps have another property that is crucial lbr detecting omissions in translations  . 
There is a very high correlation between the lengths of mutual translations  ( ' p = . 991) ( Gale & Church , 1991) . This implies that the slope of segments of the bitext map flmction tlne-tuates very little  . The slope of any segment of the of the lengths of l  , lm two texts . \[ n <) ther words , the slop\[; of ma . p segments has vel'y low val'ia/lge . 
3 The Basic Method
Omissions in translations give rise to distinctive l > atterns in \[> i text maps  , as illustrated in l ! ' igure I . 
' l ' he nearly horizont all ) art of the 1 ) itextinal > in . . Q 8 D . 
~3o='--
IIfie : > , i .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  "  .   .   .   .   .  " = 4  .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
Region A Region O RegionBx = character position in text  1 I , ' igure 1:Auomission , iubitex ! space . Rcgiou . sAaud Hco'rm spondlorcgion . sa and b , respectively , l ~ c flion 0 hasuo corresponding regiou outhevertical azis . 
region 0 takes up almost no parto\['the vertical axis . This region represents a section of the text on tit <'  , horizontal axis that has no corresponding section in the text on the ve  . rtie alaxis (, hevery definition of a nonlission . The slol > e betw <' en the endpoints of the region is unusually low  . An omission in the text on the horizonl : a laxis would man-liest itself ms a nearly verti <  ; al region in the bitext space . These It Illlslla\[slope <: onditions are the key to < letecting omissions  . 
(- liven a noisc-fl : ee bitext map , omissions are easy to detect . First , aI ) itext space is constructed by placing the original t <  ; xt on the y-axis , and the translation on the x- . axis . Second , the known points of correspondence are l > lotted in the l > i texts l > ace  , l + , a <: had , iacent pair or points t ) < ) un < lsa segment of ( , he bitext map . Any segment whoses h>l/e is unusually lowixa likely omission  . Ttd snotion can I > e made precise by specifying a slo I > eangle threshoht l  . So , third , segt-/ents with slopeanglea < t are flagged a . somitted segments . 
4 Noise-Free Bitext Maps
The only way to ensure tliat a bitext map in noise -fl : ee is to construct one by hand  . Simard et al ( 1992 ) hand-aligned corresponding sentences in two excerpts of tile Canadian I hmsards  ( parliamentary debate transcripts available in English and French  )  . l , ' or historical reasons , these l > i-texts are named " easy " and " hard " ill the literature  , q'h c sentence-based alignments were converted to character-based aligmnei ~ tsl > yno  (  , iug the corresponding character positions at the end of ca  . oh pair of aligned sentences . ' rhe result was two hand-constructed bitext maps  . Several re-sear <: hers have used these\[> articular bilc x tntaps  ; is a gold standard f ( > revahiating hitextmal>l > itlg and aligmneut algorithms  ( Simardel ; al . , 1992; (\] hutch , 1993; I ) agan et al , 19!)3; Melamed ,  19!)6) . 
Surprisingly , AI ) OMIT f'ouu < llnany errors in these hand-aligned / > i texts  , both in the alignment and in the original translation  . AI ) O M1T pro--cessed both halves of both I > i texts using slol > eangle thresholds From  5 ? to 200   , in increments of 5? . For e a <' h r u n , AI ) OMIT produced a list ( ) f the t>itext mal ls segm<mts whose slope angles we ret > elow the speci\[ied threshold /  ,  . The output for the French hall7   o1" the " easy " bitexl , , with t -: 15 ? , consisted of the following 10 items : 29175 ) to ( 26917 , 29176) 45647) to (42179 , 45648) 47794) to (44236 ,  47795) (26869 ,  (42075 ,  (44172 ,   ( 211071  ( 211725  ( 319179  ( 436118  ( 453064  ( 504626  ( 658098 230935 ) to ( 211379 231714 ) to ( 211795 348672 ) to ( 319207 479850 ) to ( 436163 499175 ) to ( 453116 556847 ) to ( 504663 726197 ) to ( 658225 231007 )  231715 )  348673 )  479857 )  499176 )  556848 )  726198 ) Each ordered pair is a coordinate in the hitexL space  ; each pair of coordinates delimits one emiL-tedse . gmenL\]i ; xamination of these L0 pairs o\['C , lara ( -tcl ? ra\[lgeSill the bitext revealed L hat ? 4 omitted segments pointed to omissions in the original translation  , ? domitted segment spoit H , ed to aligmnenter-roFs ~? 1 omitted segment pointed to an omission which apparently caused an Mignment error  ( i . e . the segment contained ouc of each ) , ?\[ omitted segment pointed to a piece of texl ; that was accidentally repeated in the original , bu ( , only translated once . 
With t = I0 ? ,  ! ) o \ [" the I0 segments b ~ the list still came up ; 8 out of 10 remained wit ; it / .  = 5 ? . Similar errors were discovered in tile other half of the " easy " bitext  , and in the " hard " bitext , including one omission of Jnore than 450 characters . Others egrne . nts appeared in the list For ~> 150 . None of the other segments were . outright omissions or misalignments . 
Howew'x , all of them corresponded to nonliteral translations or paraphrases  . For instance , with t = 20? , AI ) ( ) MI'F discovered an instance of " Why is the governlnent doing this ?"  (  ; ratlslatcdas " Pourquoi ? " measure ADOMIT's recall  . The human aligners marked omissions in the origin M translation by  10 alignments ( Gale & Church , 1991; lsabelle ,  1995) . ADOMIT did not ; use this information ; the algorithm has no notion of a line of text . However , a simple cross check showed that ADOMIT found all of the omissions  . The README file distributed with the bitcxts admitted that the " human aligners weren?t in falli-ble " and predicted " probably no more than five or so " alignment errors  . A DOMIT corroborated this prediction by finding exactly five alignment errors  . AI ) OMIT's recall on both kinds of errors implies that when tile tentrouble some segments were hand -corrected in the " easy " bitext  , the result was very likely the world's first noise-free bitext map  . 
5 A Translators ' Tool
As any translator knows , many omissions are intentional . Translations are seldom word for word . Metaphors and idioms usually cannot be translated literally  ; so , paraphrasing is common . Sometimes , a paraphrased translation is nmch shorter or much longer than the original ? Segments of the bitext map that represent such translations will have slope characteristics s in > ilar to omissions  , even though the translations nmy be perfectly valid  . These cases are termed intended omissions to distinguish them fl : om omission errors  . To be useful , the omission detection algorithm must be able to tell the difference between intended and unintended omissions  . 
Fortnnately , the two kinds of omissions have very different length distributions  . Intended omissions are seldom longer than a few words  , whereas accidental omissions are often on the of der of a sentence or more  . So , an easy automatic way to separate the accidental omissions from the intended omissions is to sort  ; all the omitted segments from longest to shortest  . The longer accidental omissions will float to the top of the sorted list  ;  . 
Translators can search for omissions after they finish a translation  , just like other writers run spelling checkers , after they finish writing . A translator who wants to correct omission errors can find them by scanning the sorted list of omitted segments Dora the top  , and examining the relevant regions of the bitext . Each time the list points to an accidental omission  , the translator ( ' an make the appropriate correction in the translation  . If the translation is reasonably complete , the accidental omissions will quickly stop appearing in the list and the correction process can stop  . 
Only the smallest errors of omission will remain.
6 The Problem of Noisy Maps
The results of l!\]xperiment ~ l demonstrate ADOMI ' F'st  ) oten tial . I lowever , such stellar performance is only possible with a nearly perfect bitext map  . Snch bitext maps rarely exist outside the laboratory  ; today's 1lest autonmtic methods for finding tlitext maps are far fl ' omperfect  ( Church , 1993; l ) agan et ah , 1993; Melamed ,  1996) . At least two kinds of map errors can interfere with omission detection  . One kind results in Sl ) urious omitted segments , while the other hides real omissions . 
I ! ' igure 2 shows hower roneous points in a bitext map can be indistinguishable from omitted segments  . When such errors occur in the map , //" true " bitext map ~ ~? erroneous \ o'mal ;  " " - -  . ~- , ? segment Figure 2: An undeleciable rror in lheb itea : t map . 
A real omission could resull in lhesa memappal -lern as lhese erroneous poinls  . 
A DOMIT cannot help but announce an omission where there is n't one  . This kind of map error is the main obstacle to the algorithr u's precision  . 
The other kind of map error is the main obstacle totile algorithm's recall  . A typical manifestation is illustrated in Figure 1  . The map points in Region O contradic the injective property of bitext maps  . Most of the points in Region O are probably noise  , because they map many positions on the x-axis to just a few positions on the y-axis  . Such spurious points break up large omitted segments into seqnences of small ones  . When the omitted segments are sorted by length for presentation to the translator  , the fragmented omitted segments will sink to the bottom of the list along with segments that correspond to small intended omissions  . The translator is likely to stop scanning the sorted list of omissions before reaching them  . 
7667 ADOMIT
AI ) OMIT alhwiates the fragmentation problem by finding and ignoring extralle OllSlnat  ) points . 
ACOul ) leof ( he finitions hell ) to exl ) lMn the technique . Recall that omitte ( l segments are ( lefine ( I with respect to a chosen slope angle threshold l : Ally segment of the bitext map with slope angle less than t is an omitted segment  . An omitted segt n ( m that contains extraneous t ) oint , s ( ' an beehara ( ' terized as a sequence of mininm lomitted segments  , intersl ) ersed with one or more , int crfer-lug segments . Amini in a lomit t (' . ds(', gm ( , . ntix a nonfitted segment between two adjae cnt points in the bitext map  . A maximal omitte ( 1 seg-m ( : nt is a nondtted segmen that is not a proper subsegmc'nt of another omitted segtlmnt  . Inter-ferlng segnmnts are std ) segtuents of maximal omitted segments with a slope m~gleat  ) ( ) v ( ' , Lit (: chosen threshold . IntertL ' ring segments are always del in fite . d by extraneous Inapl ) oinl ; s . If il , were not for interfering segments , the fragmenl , ation problem could be solved I ) y simply ( ; one a tenating a ( lja(-ent minimal omitteds egrne . ts , Using these finitions , the . prol ) leHt of re (: otm tru ( ; tiug maximal omitted segme . nts can be stated as follows : Which sequences of mimmal omitted segments re-  . 
suited fi'om fragmentation of a maximal omitteds ( ' . gment ? A maxint a lomitted segmeut Hnlsl;\]la , veaslop eanglet ) elow the chosen threshohl t . S % the\[)rob-h ; m ( : an be solved I ) y considering each I ) air of in in-imal omitted Seglllellt S , to S e ': e if the . slope anglel ) etween the starting point of the first and th (  ; end point el these colM is less than 1 . This brute \[' or eesolution requires ~: q ) l ) roximately ?" n , 2 comparisons . 
Since a large bitext may have tens of thousan ( ts of minimal omitted segments , a faster method is desirable . 
Theorem 1 suggests a fast algorithm to search \[' or pairs of minitrial omitted segments that arc \[' ar -the stal  ) art , and that may have resulted ffo , lI ' ragm (' . nt ~ tion of a maximal omitted segment . ' Fhe theorem is illustrated in Figure 3 . tt and 7' are mn ( unonics for " t ) ottom " and " top . " Th (' . or e in 1LegA belh . e array of all minimal omit lcd segments , sorled by/lhehorizon lalposilion of the left end poinl  . Lel H be a line in the bile . ~ l space , whose slope equals lhcslope of the main diagonal  , such thaialll hese qm . en : s in Alieabovetl . l , el , s belh clefteud poiut fffase , gm , r ' n l in A . 
tel:\[~bearaysla ' rting at , s with a slope angle equallo the chose ' , , lhrcshohl I . Letibe Ihci ~ ler,sc('lio'a,oJB and'i ~ . Let bbc the point o ' . 11 with the same horizon lalposilion as s . No'w , amamim . alomitted segm , enl starling at . ~ muslen datso'mepoi ' . l ciul he triangle A . s'ib . 
ProofSketch : sisde Jiucdas lheleftend poiul , so e must be lolhcrighl of s . By dc fini-lion of B , e must be a bovcH . If c were above "~', c . Iog_?,ii J~--dimain ', ' e
J ( pq ~ tomain diagonal ) /FI_x = character position in text 1 l " igm'c 3: At , , cJ\]icicnt search jot ' maximal omilted scgmenl , s . The array of minimal omilled segm(ul , slies above line 17 ,  . Any scqueucc of . segmenlsh tl'l-ing als , such lhall he slope angle of lhew hole sequence is less than l  , muslend also mepoinl (: in lhelriangle Asib , then lheslopeangle of segmen I , st would be , qrea : cr lhan the slope angle of 7' = l , so Seco , hl not be a nomilled segment . ElAI ) OMI'I ' exploits Theorem las follows . Each minimal omitted segtueutz h ~ A is considered i  . 
turn . Starting at z , AI ) OM\[T searches the array A for the last ( i . e . righl , most ) segtr tent whose right cml point e is in the triaugh '  . A ~ sg b . Usually , this segment-will bcz itself , in which case the single mininm lomitted segment is deemed a  , maximalomii , tex\[segment . Whene is not (-) lltiles . % l\[icmin imMomitted segmen\[ , as s , AI ) OM I'1' centare n ares all Cite segments between s and c to form a ma?imal omitted segment  . The search starting from SeglllOllt7 ,  (  ; all stop & 8 SOOll ~ tsitelle Ollllt ;   ( ws a segment with a right endpoint higher than i  , For us (' I ' ulvahms of t , ea (: hsearch will Sl ) a . tlonlyah and fulofean ( lidate(rodpoints . \]) roccs singl ;\[ mentire array Ai . this . umner produces the desh:ed set of maximal omitt (' , dseg\[nellts very quickly . 
8 Eva luat ion ' \[ b accurately evaluate a system for detec  ( ing omissions intra , nslations , it is uecessary to use alfi text with ma , nyomissions , whose locatio . s are known in advance . For perfect validity , the omissions should be those of a real translat , or , working ou a real translation , detected by a perfc('ti ) roof-rcader . \[\]n fortunately , first drafts of tra . sh , , io . s that had bee , , subj . d , edto(:ar,~r . l , ', ~ vision were not readily available . Therefore , theew dual , ion proee . eded by simulation . The adva , llrage of a simulation was complete control oww the lengths and relative positions of omissions  . This is important because the noise in a bitext map is mort likely  1  , oobs cureash or to tnissio , dlanalong one . 

The simulated omissions ' lengths were chosen to represent helengths of typical sentences and paragraphs in real texts  . A corpus of 61479 Le Monde paragraphs yielded a median French paragraph length of  553 characters . 1 had no corpus of French sentences , so I estimated the median French sentence length less directly  . A corpus of 43747 Wall , 5' trent Jo , ~rnal sentences yielded a median English sentence length of  126 characters . 
This number was multiplied by 1 . 103 , the ratio of text lengths in the " easy " bitext , to yield a median French sentence length of 139 . Of course , the lengths of sentences and paragraphs in other text genres will vary  . Then ledian lengths of sentences and paragraphs in this paper are  114 and 730 characters , respectively . Longer omission sarce asier to detect . 
The placement of silnulated omissions in the text was governed by the assumption that translators ' errors of omission occur independently fl : oI none another  . This assumption implied that it was reasonable to scatter the simulated omissions in the text using any meinoryless distribution  . 
Such a distributions implitied the experimental design  , because performance on a fixed number of omissions in one text would be the same as per -refinance on the same number of omissions cat -tered among multiple texts  . As a result , the bitext mapping algorithm had to be run only once per parameter set  , instead of separately for each of the 100 omissions in that parameter set . 
A usefll evaluation of any omission detection algorithm must take  . the human factor into account . A translator is unlikely to slog through along series of false omissions to make sure thai  ; there are no more true omissions in the translation  . Several consecutive false on fissions will de-ter the translator from searching any further  . On average , the more consecutive fMseomissions it takes for a translator to give up  , the more true omissions they will tind . Thus , recall is highly correlated with the amount of patience that a translator has  . Translator patience is one of the independent w ~ riables in this experiment  , quantified in terms of then mn be r of consecutive false omissions that the translator will tolerate  . 
Separate evMuations were carried out for the Basic Method and for AI  ) OMIT , and each method was evMuated separately on the two different omission lengths  . The 2x2 design necessitate dibm : repetitions of the following steps :  1  .   100 segments of the given length were deleted from the  1  , ? eneh Mf of the bitext . ' Pheposition of each simulated omission was randomly generated fl : omaun ilbrm distribution  , except that , to simplify subsequent evaluation , the omissions were spaced at least 1000 characters apart . 
2 . A hand-constructed bitext map was used to t lnd the segments in the English half of the bitext that corresponded to the deleted French segments  . For the purposes of the simulation , these English segment served as the " true " omitted segments  . 
3 . The SIMI . bitext mapping algorithm ( Melamed ,  1996 ) was used to find a map between the original English text and the French text  ; containing the simulated omissions . Note that SIMI cnn be used with or without a translation lexicon  . Use of a translation lexicon results in more accurate bitext maps  , which make omission detection easier . However , wide-coverage translation lexicons are rarely awfilable  . + tb make the evMuation more representative , SIMR was run without this resource . 
4 . The bitext map resulting froln Step 3 was fed into the Basic Method for detecting omissions  . The omitted segments flagged by the Basic Method we resorted in order of decreasing length  . 
5 . Each omitted segment in the output from Step 4 was compared to the list of true omitted segments from Step  2  . If any of the true omitted segments overlapped the flagged omitted segment  , the " true omissions " counter was incremented . Otherwise , the " false omissions " counter was incremented . An example of the resulting pattern of increments i shown in Figure  4  . 
6 . The pattern of increments was further analyzed to find the first point at which the "\[' a \] se omissions " counter was incremented  3 times in a row . The w flue of the " true on ; fissions " counterat that point represented the recall achieved by translators who give up after  3 consecutive false omissions . To measure the recall that would be achieved by more patient translators  , the " true omissions " counter was also recorded at the first occurrence of  4 and 5 consecutive false omissions . 
7 . Steps 1 to 6 were repeated 10 times , in order to measure 95% confidence intervMs . 
The low slope angle thresholds used in Section 4 are suboptimal in the presence of lna 1  ) noise , because much of the noise results in segments of very low slope  . The optimum value t -- 37 ow as determined using a separate development bitext  . With t frozen at the optimum value , recMl was measured on the corrected " easy " bitext  . 
Figures 5 and 6 plot the mean recall scores R ) r translators with different degrees of patience . 
AI ) OM\]T outperformed the Basic Method by up to 48 percentage points . AI ) OMIT is also more robust , as indicated by its shorter confidence intervals . Figure 6 shows that ADOMIT can hell ) translators catch more thall 90% of all paragraph-size olnissions , and more than one half of all sentence-size on fissions  . 
768 100 \[  .   .   .   .  \[  90+ I 8O   10   20   30   40   50   60   70   80   90   O0 true omissions Figure 4: An example of lheorder of " h " uc " and " false " omissions when s or l c d by l c n t f l h  . 
ltorizon lalruns correspond 1o conscculive " h'o missions in lheoul pul ; ' vcrlical runs correspond lo consecutive " false " omissions  . In Ibis < cam-ple , lhefirs l run of more than .   3 " faLse " omissions occurs only after 87 " true " omissions . 
1O0-!
IIo~m
E 90 i .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
80553: dharacter omissions 70 .   .   .   .   .   .   .   .   . !39: dharacter Qmission " 6 o ! , , 5o 711 ; : v : - : .   .   .  :: 20 - ? ~ -  .   , __i 5   4   3 consecutive false emissions tolerated by translator l?igtlre  5: Mean Basic Melhod recalls cor ' cs with 950X confidence intervals fin'simulaled translators with varying degrees of patience  . 
AD ( )MH ' is only limited by the quality of the input bitext map  . ' l ' he severity of this limits - Lion is yet t ; obedet ; ermined . This paper evalu--a ~ , od AI ) OM1 T on a pair of buig , tages for which SIMR ( ; nilreliably produce good bitext maps ( Melamed ,  1996) . SIMR will soon be tested on other language pairs . ADOMIT will become . ve . n more useful as better bitextnml ) pingtechnology becon \] es available . 
9 Conclusion
AI ) OMIT is the first pul ) lished aul , oin ~( , ic method for detecting omissions in translations . 
AI ) OMIT's performance is limited only by the accuracy of the input bitcxt real  )  . Given an accurate bitc'xt map , AI ) OMIT can reliably dcte('l ; event im smallest errors of omission . Even with today's poor bitext mapping technology , ADOMIT lit , ( Isa . 
large enough proportion of typical omissions to be of great practica J benefit  . Thet , e ( : hnique is easy to implement and easy to integrate into a transla-"-  80 II . c70~6050 go)
E553-dharacter omissions ! 39: gharacter omissions
Ii . . . . .

4 0 "'"" i 30  :  20  - ' - ~ - '  -5   4   3 consecutive false omissions tolerated by translator l  , ' igure 6: Mean AI ) OMIT'recall scores with 95~ confidence intervals for simuhttcd lrans lalors wilh varying degrees of palic ncc  . 
to r's routine . AI ) OMIT is a valuable qu , dity control tool for tra . nslators and translation bureatts . 

This research began while 1 was a visitor a ~ the ( \] eill , red'hmovatiotJenT cctutologics dcl ' lnformatioil in LavM  , C , and a . The problem of omission detection wa . s suggested to m c by 1, 31- . 
liott Macklovitch . I am grateful to the following people to t : commc  , nting on earlier drafts : Pierre Isabelh; , Miekey Chandrasekar , Mike Collins , Mil , chM ; trCltS , Adwaitlla J , na/mrkhi , B . Srinivas , and two a , nonylnotls reviewers . My work was par-daily fum hxl by AI ? , Ogrant I ) AAI , 03-89 ( ; 0031 PLUME aml by AIPA grants N00014-90-J-18fi3a . mlN(i6(\]0194 (76043 . 

K . W . Church , " Char_Mign : A Program for Aligning Paral M Texts at the Character Level  , "  31sl Annual Mcclin9 of lhcAssociation for " Com Fula-lional Ling ' uistics  , (; oluml ) us , OIl ,  119!)3 . 
1 . 1) ~ tgan , I . (? hutch & W . Gale , " lol)t , sl , Word Alignment for Machine Aided'l ' ranslation , " Workshop on Very Large (7 or pora , available from the A(JI , , 1993 . 
W . (\] ale & K . W . Clmrch , " A I h ; ogral ~ l for Aligning Sentctwes in Bilingual Corpora  , "  291h Annual Meeling of lhe Association \] or ComFula -lional Linguislics  , l~erk (' ley , (; A ,  1991 . 
B . Ilarris , " Bi-'l'cxt , a New Concept in Tr~msla-/ , i on Theory , " Language Monthly // 54 ,  \[988 . 
P.lsabcllc , personal communication , 1995.
Gernel ~ tc Approach to 1 . D . Melamed , " Ao " Mapping 13 il ; cxL Correspondence , " Coufc . rc' , ceo , Empirical Methods in Nalural Language Processing , Philadelphia , U . S . A , 1996 . 
M . Simard , G . I !' . Foster & I' . lsa \]) elle , " Using Cognates to Align Sentences in Bilingual Corpora  , " l " o ' urthln tcrnalioual(;o , Ocrc'nce on Thc-orclical and Methodologicallssnes in Machine 
Translalion , Montreal , ( Xumda , 1992.

