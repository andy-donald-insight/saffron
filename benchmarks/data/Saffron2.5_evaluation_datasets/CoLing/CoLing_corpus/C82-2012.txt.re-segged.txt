ADAPTIVEDIAL OGUE-THEBASISF ORPERSONAL COMPUTER SYSTEM 
Victor Briabrin
Computing Center , Academy of Sciences , Ho soow , USSR
1 . Personal Computer Systems ( POS ) represent nowadays a
signifte auttrend in the profession a ~ , and a mateur use of computers , in particular of mini-and micro computers ? We be-lieve that such systems must have the means for :  ( a ) knowledge representation about the problem donm / n  , the system itself and the partieular users  ; ( b ) man-n~chine interaction , taking benefits of both partners " a bili ties  ;   ( c ) access to application-oz-lented programs and data as well as to other computer systems ? Our experience with natural language quest  ion-anewer?n8 systems has proved that the share of . QAS users prefer r~n6 real RL is rather small . Among the reasons one can point out such features as inadequate heaviness and slowness of NL-proeessors  , their unportabll tty . These reasons , on one hand , and the appar-ent success of simple table - driven and production rule systems  , on the ether , have led us to the development of Adaptive Dia l-ogue System as a basis for PCS  , Our approach is based on the integration of 3 core components allowing an efficient system implementation within the limited micz ~ computer resources : the Object Base  ( OB ) constitute same dia for storing and man ipulation of systems ?  , problem-oz~lented and lexical obJects ; -the Adaptive Dialogue Monitor ( AI ~ ) provides the guidance - 55 -forman-computer comnm?oation through die ~ ogue processes !- the  P-4kach?ne   ( I ~ ) accomplishes the necessary operations support ing system sown be ha ~ ou ~ as well as the access to applied programs and data  . 
process in the system takes place within a cert~qn ~ ronment which is characterized by a set of mutu ~ lyaccessible objects and by in i tial dialogue process  . A dialogue processorD-urocess comprises a number of interconnected states and supports particular man-computer activity on ach ieving some goal  . Almost every stat ~ of D-process a coompl-ieh ~ ae~mpleact of com-mn?cat ~ with the user  , an ~ yzJ , ughie reply , performing associated actions and transit ing to another state  . Thus an analo ~ r could be drawn between D--p rocess and ATN  , with the important difference that D-process supports  oneoin8 d?e  ~ ogue with the user rather than an ~ ye is of p reentered st~-Lnee 
There are ) state types :
MENU- promptin8 the user to choose among e ~ ernative e ! A3EVAL -accepting the asked Ye ~ ue from the user ! ZVAL -getting computed value from external'p rogram  , By means of MENU and ~ KVALD-processiS communicating with the user?s terminal  , IVAL connects it with applied pro-8raew . Theeotions with ? n the states are expressed as  . strings of ~ perfor~tJ~predication of values  , manipulation of different objects , call ~ Jae / return ? ng to another D-processes , run nL ~ extern ~ programs etc . 
Adapti ~ rity is of prt ~ aa ~ concern in the presented approach since it ~ veethe user  , on one hand , the ability to subject the system to his particular needs ! on the other-to puth imself into an active or passive posit ion during some coa ~ mication process  . Adaptivity is provided by strict-ly follow in  8 one principle i any kind of system's acti ~Ltypertinent to man-computer oon zm ~ L cation must be controlled by definite objects whLch can be created and modified by the neme or other activities  . 
- 56 -2 . There are 3 basic k lnds of objects in the OBs system support ~  ( S-objects )   , problem-oriented ( PO-obJeote ) and le~tcal ( L-objects )   . Each of these kinds is further divided in to categories or types  . 
S-ob . teots hold the control over man , computer interaction and the ~ ocess to appl ied progrems and dBta  . They describe a z~rth ~ ngresiding or happez Ling in the system and therefore ~ recalled " descriptors "  . The following descriptors are of the most t , nportance :
DE-enwlronment descriptors
DP-dialogue process descriptors.
DS-dialogue state desoz~ptors
DX-program descriptors
DD-data descriptors
DG-dialogue scenario ' ~ ( " game " ) descriptors
DU-user descriptors
PO-ob . tects describe concepts , properties , relations and values allowing to build p roblem-oriented models  . PO-obJects are difterentiated by their ca tegories  ( typ~s ) : C-classes of physical objects : " count ry "  , " person " R-se~ti@relations : " negotia tion "  ,  '  , disarmament " V-structured value descrip tors : " date "  , " NATO " T-terminal value descriptors : " ATOM "  , " STRING " , " INTEGER " P-object properties substant iated by V and T-values ~" pop-lation "  , " b~thday " , " address " , " weight " CP-object properties substant iated by the other C-obJeotss " capital "  ( of country )   , " relatives " ( of person ) RP-semantic relations ar~entss " partic ipants "  ( of negotiat-ion )   , " place " , " goal " ( of any aoti wlty ) CI , B . I , Vl , TI-individual objects and actual values -subst-antiations of C  , R , V and T-object so For external represent at ion of objects we use a formalism of F-l~e developed for DILOS system  /1  /  . S~nple exemples : oapltal(CP):ISolty ; OF country-57-politician ( C ) : IS person ; from country ; post official-post official- poet  ( V ) : IS list ; 0 FATOM ; EL(president defense-minister .   .   . ) NATO(V ): IS list ; OF country ! EL ( Belgium Gr-Britain .   .   .   ) Weinberger ( CI ) : ISpolitician from USA ! post defense -minist-er defense-minister  ( TI ) : ISATOMjELOP official-post The problem domain model could be ~ x pressed in a fo reof conceptual semantic network  /2 /with the nodes represented by C , R , V and T-objects and the arcs labeled by P , CP and RP--objects ? Representation of actua lworld fragments would then have a form ofte rminal semantic network with CI  , RI , VI and TI-objects being the nodes , connected by P , CP and RP-arcs . 
L-obteots or " lexems " provide access to all other objects in the  0B using the words and phrases of problem - or iented natural language  ( I ~ OL )  . Each lexeme has external represent-ation ( . the name of L-object ) derived from the input word form by simple morphological transformation ? Each L-ob ject has special properties which serve fo r two purposes "  ( 1 ) pointing to other objects-denotations of the given lexeme and  ( 2  ) carrying ~ ammatical marks for effic ientPOL analysis  . 
Presently L-objects are divided into the following  10 categories : LN-lexl cal names of PO and S -objects LS-synonyms polnting to other L-objects LC-components of word combinations and idioms LQ-question tokens-pronouns and adverbs  ( " who " , " how " ) LJ-con~unctlons of different types ( " and " , " or " , " but ") LR-referen clal pronouns (" these " , " his " ) LP-prepositions with indication of implied semanticoases for different relations LD -" deflnitors " establishing paradlgmatlo relations between objects  (  . " is ", " denote ", " contatl n ")
LA-articles
X-ignored or unknown lexames - 58   -3o The system starts its operation by running initial D-process which  , first , makes acquaintance with particule ~ user and  , second , prompt shim with the main menu to choose anon8 several basic activities ! ( A ) filling the 0B with the new objects or modifying the old ones !  ( B ) entering particular problem-solvlng task ! ( C ) getting information on system components and processes  . 
In ( A ) one might concentrate on creating the new d ial-o~eschemata which is done by building new DP and DS-obJects  . 
This special kind of activity results in a new communication lansuage  ( sublauguage ) which might be immediately tested and used for practical needs  . Another kind of ( A ) is connected with the creation of P0 and L-objects . The user can do it two different w~s8 -by entering pattern-controlled express ions which define particular object categories - by calling special  D-pro0esses responsible for build in 8 appropz ~ lat ? objects . 
Although from the user's standpo in the seal ternatives differ in the share of man -machineaoti ~- lties  , both of them are bas-ed on the same rules having the general forms < pattern >\[= ~ cond ition > ~ ~ actions ~ pattern ~ defines the combination of object categor-ies accepted from the user  , no matter if they come sequential-ly ( one object per D-state ) or simultaneously-as one line of text . Optional Z condition ~ allows checking part icula ~ properties of the accepted ob~ects o The ~ actions ~ emend the old objects or c reate the new ones  . A simple rule might look as follb wlng = ? ( X"0 ~ CIm~C2 ) = ~ t ( X , " TP , " CP ) Put(X , " OP , C1)l~t(X , " IS , C2) l~t(C1 , X , C2 ) Such a rule can handle the expression : " pres ident of country is a politician " which might be entered in one sentence or -  59 -spread over several ASK VALI . The result would be crention of new CP-ob~eot " president " and modifyi ~ the C-object " country "  . 
In ( B ) the change of initiative can be softly controll-ed by the user in the sense that he should not apply special knowledge or feel any barriers when moving from one node of in teraction to another  . In any mode , however , & result of ADM operation is reflected in F-expression  /2 /which carries the semantic meaning of the input sentence  . 
Thus , for example , a phrase " Defense ministers of NAT0 met in the capital of France on October 18th " could be trans-formed into the following F-expressions  ( Meetings participants ( politician ( s ) : post defense-minister from ( country ( s ) = ELOF ~ ATO ) ) place ( capital=0F Francs ) time ( date=MOc to be rD18 ) Such an expression is directed to 1~ where it is interpreted with the result of c reating/pointing at some nodes in the te rminal semantic network thus representing the meaning of the entered text ? 
References=/1/NeAsaf ~ eva , A ? Borkovsky , Y . Briabrin , V . Ponon ~ rev , G . Senin . Knowledge Representation and Natural L~gel ~ rooes sing in DILOBoIn " The Problems of Applied Systems Development "  . Ed . A . Narin ' any . Novosibirsk , 1979 . 
/2/V . Briabrin : F - language - a Formalism for Knowledge Representation ithe Intelligent Dialo ~ ae System  . In " Applied Informatics ", V . 1, ed . Y . Savinkov , Moscow , 1981 . 

