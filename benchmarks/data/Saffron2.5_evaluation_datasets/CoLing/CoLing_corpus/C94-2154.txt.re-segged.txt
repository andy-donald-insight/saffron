TIIECORRECT ANDEFFICIENTIMI ) LI~',MI,N . \[A"'~TIONOF'APPI\[(() PRIATENESS
SPECIFI(:ATIONS FOR TYPF ; DFlgATURI"STRUCTUR\]~ , S
Dale Ge Memalm and Paul John I(ing *
Seminart ' iir Sprachwissenschaft , Uniw ' , rsitS~tTiibingent

in this pa , per , we argue tha , t type inferencing incorrectly implements a . pl ) rolwiate-ness specifica . tions for type d\[ea . ture structures , promote a combina . tion of l ; ypere solution and unfilling a , sa . correct a . n def ' ~ ticientMternative , and consider the expressive limits of this a . lterna . tive approa . ch . 
!\[' hroughout , we use feature cooccurence restrictions as il lust ration and linguistic motivation  . 
1 INTRODUCTION
Unification lbrm Mismsma . y be either untyped ( DCC~s , PATR-II ,  1 , F ( ; ) or typed ( np s G ) . Am~L , ior reason for adding types to ~ form a , lismisto express restrictions on fea . ture cooccurences a . sin ( ; l's (: :\[5\] in order to rule out nonexist a . nt yl ) es of objects . For example , there a . reno verbs which have the \[ km . ture+R . The simplest way to express such restrictions is by mea  . ns of a . na . ppropria . teness pa . r-timflmction Approp : Type ? Feat ~ Type . 
With such a . na . pl ) rol ) riatlenes specifica . -tionlrla . tly Sllch restrictioi , smay be expressed , though no restrictions involving reentrancies ma . y be expressed . 
In this pal)er , we will first in ?2 survey the range of type e on stra . ints tha . tma . y be expressed with just a . type hiera . rchy and *'\]' heresea . rchpl'eS(!lllL('dill , his ; paper was paytia . llysponsored hy'\[kfil projektB4"(;onsl . rahH . sonGrammarfl ~ rEfficientCk:neration " of the Soi  , der forschungs be reich 340 of the Deutsche\["orschungs-gemeinscha , f t . " VVe would also like to thank'l'hiloGStz for help h  , l comments outhcide as present . ed here . All mistakes a . rc of coll rs cour OW ll . 
IKI . Wilhehnstr . 113,)-721174Tfilfi,,ge,,(ler-ma . ny , rig , Kingg ' ~ sfs . nphil . uni-Iuebingen . de . 
a . nN ) propria . tenes specification . Then in ~3 , we discuss how such type consfronts linty be mainta  . inedunder unification as exemplilied in then a . tura . 1 language D~rs-ing/generation system ' . l'ro\]l\[7\] . 1 Unlike previous systems such as ALl , : , Troll does not employ a . ny type infereneing , inste ~ M , a , limited amount of named disjunction (\[11\] ,  \[12\] ,  \[6\] ) is introduced to record type resolution possibilities  . The a . l nount of dis-junction is a . l so kept small by the technique of unlilli , g described in \[9\] . This strategy a . ctua . llyma . inta . in sapl ) ropri~tteness conditions in some ca . ses in which a . type inferencing stra . tegy would fa . i l , l ) ' in Mly , in ?4 , we discuss the possibilities for gener-alizillg this a  . pl)roa . ch to ha . nd leabro ~ Merr ~ tnge of constra . ints , including constraints in w ) lving reentrancies . 
2 APPROPRIATENESS
FOR , MALISMS
As discussed iu Gerdemann , ~ King\[8\], one ca . nviewa . plrol)ria . teness CO\[lditions as ( lelining GPSG style fea , 1; tlrecooccurence re-strict : ions(FCRs ) . In \[8\], we divided FCRs into co , j , , ctive and di . q , , ~ ctive ct~sses . A conjunctive FCI/ . is a constra . int of the following for nl : i\['a . n object is of ; ~ cert ; fink in d then ill deserves certa . infea . tures with w dues of cert ~ till kinds AnFCI~stat : ing tha  , 2: a . verb must h~wev and Nt ' eatures with values A- and - respectively is a  . ll example of a . conjunctive FCI . A disjunctive I"CI . is of the form : lrl'he "\]' roll , qysl . em was implemented in Quintus Prolog by Dale ( ler demann and '\[' hilo ( \] Stz . 
950 if an object is of a . cel'taiukiud then it deservescerl ; a . in\[ca , 1; tll ' C~s with v Mues of certa . hikinds , or it deserves cerl . ahi(pei'ha . liSother ) fea . 1; ures\vil , hviii i ies ofter ra . in ( perlla . ps other ) kinds , or .   .   . 
(31:iti:leserw . ; si:erl ; a . in ( lmrhal ) Sother ) fea , 1; llreswil . hVi , l . \[ ll(~So\[certain(perha . psother)khi , < lsIlo::exa~\]nple , the following F (' , / . sl . a . t . iug tha , t inverCed verb sliltS1, lie a . uxili ; tries is disjunctive : a verb Ilitisl ; ha . rethe\['(~il . l . tll'(~sINV and AUX with va . l/iesda . IidI , - a . i it liL-, or -; Mid-respective l . y . 
Both o the seel ' illS or l , '(' , llsii HlyI ) (! expressed in a . foi'llla . ii Sllieui ployhi < ~ fiiiil . elia , rtia . \[ order ( Type , E ) otypest lldel'sub-8illnptioli > a , finite sel . Featofro; . / . t;tll . (~ s , and an a . pprol)ria . teness parl , ialrliil cl . i on Approp : Type X Feat-~Type . \[ uluitively ; thel , ypes for nla . lize I ; lie notionol " kinds + , j " objecl , tg : t , ' ill'ca . oh oile el , of tyl>et'i ~ < iM so of l ; Ylle L , i l , ll(\]Approp(l , f ) = lIill '(! ; i ('\ [ I object oF type t deserves\[eaA . urt ~ f wil . \] i:i . 
Vi . / . \] lleor type ft . ~@' ecall S/IC\]I it . \[ Ol'tll ; li-i Slllii , ii ; I , \]) l ) l " Opl'\]al , olio , ~/ fOl ' lllil\]i ~; lll .  (' , iLl ' - peliLel " , sAI , F , and ( , er deliia . i ; ill((i(~t,z'sTrollare ex:-t . niples oillill lenien l . a . Lionsoa , pF , ro \]) ria , Loliessorilla . \[iSlil,s . 
llowana . i)ln'oprhi . teness\[ornia Jisnlen-co<lesa conjunctive I : (' , R is ob\ . ' i <> us ~ bll ( . 
llOW it encodes a disjuiictive I "(' , 1 is less so . Aliexa . niplei \] usl ; ral ; esbest how it . is done . ~ Ul ) pOS 0 that F (', 1\[isl . al . esl . hal , ob- . ie cls(if type tdeser w!\[(!a . \[ . /ll'(!Sf ' and . q , I ) oth with boolea . I/w duesa . ll(I\['lll'l,\[lel'lllOF(~that the va . hies of faild giil/l Slal ~ r (! e , \[> is the disjunct \] w ! I " (111 . 
if a , u object is o\[typel then it deserw : sf with va . lue-I-and q with wdue +, or it deserw . ~sf with va . lue-a . nd9 with value-To0n code\[3> firstiul , rodLiCesul/l . yltes , t ~  ; + l . ll(\[l " of I(1EI/,1 .  ) , O11(!SUl)tyl)e\['()l'ea , ch disjuuctiu the cousequenl , of ' p . Then encode the \]' ea . tli\['e/wthl ~ . ~<' on (! il . illliSinl , he\[irstdisjunctILy putthlgApprop(t' ,   . /) : : ~- a , ndApprop(//~q ) -+ , and encode the I'ea-ture/value conditions in the second dis-juu  ( : t by putting Approp ( t ' , f ) =- . and
Approp(t ', g ) = ..'2
This approa , chIna , kestwoinll ) or t ; a , l l l , closed-world type assumptious a , bouL ( . he types t li~d ; Slll ) Slll Ile 11 oogher types ( hell Ce-forth species )  , l : irst , the p ; i . rtition condi-tiOII states tha . t for each type t , if a . nobject is ( 31' type t the u the object is of ex-ax-I . lyo11 (2 species subsulned by t . Second , the all-or-nothing cclnditions ta , test hat 1' (31' each species , qa . it dfea . turef , either ever yel " IIOol > , ie cl , or speciess deserves feature . #c . 3 Alla . l ) ltroltriM , eliess\[or li+ia . lisills lc\]la . sALl :, (\[2\],\[3\]) ti , ; t . l . does no tuie et both c . ou-ditions llla . yllOt;\]lroper\[yelcOdea , disjull ('- fivel " (: l / . For exaln ple , consider disjunc-tive I"CI . p . Ana . I)prl;)pria . l , elle SS\[ornia . l--iSlliI/lilyl/O(properly encode1 , hi~tt/a . lldt"i'el)rt , selil , MI a . lidoilly the disjuncl , sill the COll . qeqll(Hltor\[iwiLhoutthei ) a . rl , ition COll-d\]tion . < tilla . llln ' ol ) riill . en ess\[or lila . liSllll lia , yIIO l . llrOl ) erly encode the\[t ~ ii . l . llle/vii . hle (  :  ( lll-<liiriOii:dein and edliyem'h disjuncl , hithe CO li . ~t ! qllelil . op wilhoul , the a . i\[-Ol'-liot ; hiligc(m(til . ion . 
As indicat . eda . bove , AI , I . ; is iLIiexa . tl li ) leoit . f(n'liialiSlUI . ha . l , does it ( it in eel ; llol ; ho1 . hese closed worldaS , glllnlil , iOli . g . In AI+E : -/ . 
\['eli . l . tlr(~st . i ' ll Ct lile i . <4 won type difl ' for ea . charciit thete : + d . ures I . l'tlCl;tlr0 , if '1 , he SOtll ' ('( ~ node is labelled wil . htype / . , the targel ; node is lallelled with 1; ypel/a . lld the il . i'c is IM lelled with \[ ea . tlll'(~f1,lienApprop(/ . >  . f )\ [ l / . Furl . hernote > a\['eal , urt ~ strut ( tire is > l'ld sexanll ) h:I : ( JR is , for eXlmsil . or yl ) nrl ) oses , quilt simph ' . " l'hc prolilenio\[c . xpr(' . sshigF ( Jl /' s , however , isal ' Cal Iiu guisl . ici ) rol ) lc in . As noted I ) y Copcs tak c . ctal . \[4\], it . was in i possihl cI . oc . x press CV (' III hc . ~ilii\[)\]o M . for il is o\[l " ( JRs in l . hc . ii7c?tciid cd
VCI SiOII(it'AI.E.
'\[' h c basic principle of expressing l " Clls also exlends IoI "  ( ' , \[( siuvol viuglonger palhs . For example , to (: llSllt't : thai . for the type l , I . hepath(fg ) lakes a vahie subsuuied I ) y . % on enlust tirst hll , roducc the chaiu Approp(/ , f ) = . ,, Approp('a , g ) = . ~ . 
Silchilil . crlll Cdialc I . ' ~' l ) ltsCOllidll(!hll . rodll ceda . <-; parto\[a ( onilli\[al . iousl . age . .
4 Nob : I . hal . I hesc cl , >s< , dworld assuln plions art ' explicitly made in Pollard  , t ,  . Sag(rorthcoming)\[14\] . 
9 57 well-typable iff the feature structure subsumes a well-typed feature structure  , in ALl . : , type infereneing is employed to ensure that all feature structures are well-typable--in fact  , all feature structures are well typed . Unfortunately , well-typability is not sufficiento ensure that disjunctive FCRs are satisfied  . Consider , For exam-pie , our encoding of the disjunctive FCRp and suppose that  99 is the f e , ature structure t\[f :+ , 9 : - \ ]  . 90 is well-typed , and hence trivially well-typable . Unfortunately , 99 v belates the encoded disjunctive FCRp . The only way one could interpret ~ as wellformed By contrast  , the Troll system described in this paper has an etfeetive algorithm f <> r deciding wellformedness  , which is based on the idea of efficiently representing disjunctive possibilities within the features truetu  . re . Calla well-typed feature structure in which all nodes are labelled with species are solved feature structure and call a set of resolved feature structures that have the same underlying graph  ( that is , they differ only in their node labellings ) a disjunctive resolved feature structure . 
We write fS,~vf8 and ' D ~ . ) c$for the collections of feature structures , resolved feature structures and disjunctive resolved feature structures respectively  . Say that F'6"l~f $ is a resolva at of FCf , " ? ill ' F and . F' have the same underly in graph and F subsumes 1 '' l . Let taype resolution be the total flmction ~: f5" --+ DgfS such that 7~  ( 1 , ') is the set of all resolvants of li ' . 
Guided by the llartition and all-or-nothing coMitions  , King \[13\] has fOl'inti-lated a semantics of feature structures and developed a notion of a satisfiable feature structure such that  l'7 C . T $ is satisfial ~ leif\['7~(F ) 7~(7) . C , er demann , % King \[8\] have also shown that a feature strtlcture l\ ] leets all encoded FCRs if l " the feature structure is satisfiable  . The Troll system , which is based on this idea , effectively inq flements type resolution . 
Why does type resoht tion succeed where.
type inferencing fails ? Consider again the encoding of p and the feature structure  9~  . Loosely speaking , the appropriateness sl ) eeifieations for type tencode the part of p that sta  , test hat an object of tyl ) et deserves features f and g , both with boolean vahles . However , the appropriateness specifications for the speci -atesul  ) types t ' and t " of type tencode the part of p that states that these val-lies lnust agree  . Well-typability only considers species if forced to  . In the case of ~ , well-typability can be estahlished by consklering type t alone  , without the l ) artition condition forcing one to find a well -typed species subsumed hyt  . Consequently , well-tyl ) a hility overlooks the part of flexe hisively encoded by the ai  ) propri-atenesspecifications for t ' and t " . Type resolution , on the other hand , always considers species . Thus , type resolving 9o cannot overlook the part of pexclusively encoded by tile appropriatenesspecifica-tionsfort ' and t '  . 
3 MAINTAINING
APPROPRIATENESS
CONDITIONS l\[ow may these D ~ . TS be used illaninl-plenmntation ? A very important property of the class of " DT ~ fS is that they are closed under unification  , i . e . , if /" and
F'6D~f8 then FUF'6D'P vfS.4
Given this prol)erty , it would in principle lie possible to list the disjunctive resolved features l  ; ructures h/ani in plemen-tal ; i on with onl ; any additional type infer-01\]?hig   proc0dnre toma . hltahisatisfial fil-ity . It would , of course ~ tier be very of\[i-cieut1 . o work with such large disjunctions of featiil'e strt lctil res  . These disjune tiorls offea . ture structnres , however , have a singular l ) rol ) erty : all of the disjuncts have the same shape . The disjuncts differ only in the types labeling i ; he nodes . This prop-4Infa . ct . , it ~: ~ rl ~ I ) ~ SI ~ OW ~ that if t " a . nd1'"6 fS then " R ( F ) tJ1 " ( 1"' ) = " R ( FtOF ' )  . Uni/ication of sets off ca . ture structures is defined here ill the standard way : S  t2   , S "= 1"\[ I "' 6 S and l "" GS " and 1"  =  1"' H 1""  . 
958 (! rtya . llows a . disjult ctivofes olv ( , d featur ( , struct tire to I ) er(; l ) rose td , ( ~ dmoreet\[icieutly a , s~tsitlgleuntyl )( ~ dl'eatur('st . l'll(:l . llfeplusa , sel ; of d(;pondlmt node la . h(~liugs , which ca . n be further (; oml ) a , (: t ( ~ dusingmi , Nie(ldis . 
junction a . sin(' , ( ~ rdemann\[(i \] , I)i'~\['ret(:Fo\]'exanH)le , SUl)l)OS(~\v(~I , ,yl )(~ r(~solvc the \[ ea , lurcst , ructure t\[ , f ; bool , fl ; bool \] using our encoding of p . () he can ( rosily see tha . t this fea . tur(~strut:fur ( , has only two I'e solw l , nts , which ca , nI ) ecolla . ps(~diuto one fea , 1; urestrll : ttlro withllall V2dd\]sjunci . iona , s shown below : II ' ll ; 1\["'"'\] f : k , : :> f : ( It-)0:t-LU : J , u : ( It ) We now ha , voa ,  \[ ; (m Solml ) ly COml ) a (: ll ' q ) - resent a J ; i on hi which t . hol"(il , ha . slie(Hitl '; tllsl;I , t(~(\[iul , oa . Ila , ill (!( I(\[iS . \]llll(:l . ioli . I h , wO , V(H '> ( Hie should note tha , tfills dis . iun(:l ; ion is only l ) l'eSeUl ; b(~(:aats(~the\['oa J , tli'O ~ i . fa,\]l(lgha>l)l)en1:oI ) oFir(~s(HIt . Tilt ! S(!I (, atures would . eedl ; oIml ) res(mtilw(~wtween for chl<ej ( Jaxpcnl , ( H"s\[:7\]lcil , alw ( qli . yl ) iugr(xluiroti\]oilt ~ whhth,qa,y's1 . 1 ial\[(!al:ilr('sI . liala , l:ea . llowed ilillSt1) opres, . ml . , lllil . Iol . a\[well I . yping is , hifax : t > in coinl ) a . lib\]e ; villilypere solul , ioli ~ since I ; horelilil $' w(qlI ) o all in lill it ; ( ~ seLoftota , llyw ( , lliyl ) od I'e solvalil . sof ; 1l'(;a , Lllr(Jst\]'llcttir('~,For(~xa . llipi(~,a . llilli(lei ' . -Sl ) ocifiod lists tl ' u ( ' tlir ( ' couhlbe iT ( ~S ( )/v0 ( I 1 . o ; ~ list of length ( La . list of h:ngl . h1, el . c , , qhlce I , ota . I well I , yliingisliOti'(!quir(!(\[ , welm ~ yi~s well a . ctiw qyun\[il\[r0(lulid;lnt\['0a , tlires , 5 ill this (! X alli\[)l (!> i\[t , li('fail(l(7fo . a , tllrOS ; ~ l'e reliiovod , we a , lOlell wil , hlh ( , simple , disjunction if , /' ~ + which is (! quiv-a , lent , tol;\]leor(lillaJ'yl , Yl ) (' l . (; Thus , iulliis ca , so >\] lO(lisjtul cl , iona . tallix rc ! ( llliro ( l10 ( !11" force the I"CIL Allth ' , ttis requirc(Iistim ~ qntuil , ively , \[ eat , ui'csarcrodundauiitIlwirvalllCSart ' . eul , h'cl5 predict ald cfl'o uiih cap proluiaic . ross Sl > eCificatim, . .%'c GStz \[1)\], (' cr,lemam , \[7\] k,r ; I . IIlOl ; (' . \[ HXX:iHC for Ullllalioii . 
?\[ n this casc , il . would also have b(:mll ) ~> , ~ iblc to unlillLhcoi'i < eiuaiteal , lifeSll'tl < ltllcI ,   . I . ie I *' solviug . /Snforl , unai , e , ly , llmvcvcr , thisi ~; l . > i ; ihvay ~ . 
the (: asc , as C ; l l l ) (! S ( ! t'II in the\[ollowiug ( ! X alll\] ) lC:tj:+\]:>C/:+\]~~~' . 
as SUml ) tion tha . tt will only be ext(mdedI ) yunil'yingil with a . lm ther ( t ; Oml ) a . ct(~d)m(mll )(! ro\['"l ) '\] ? . Jr,_c, . 
This , h . w(wer , wa . sa . simple ca . seiu which a . I 1 of the named d is . jun (: tion could hore moved . It would not lmveI ) ('en i ) ossihle to relnov ( ' timfea . tur('sf ~ tll(Igif the st~17 , atu\['eshadI ) oen involve diure ( m-tranci ( + sofi\['tlt (  , selim . turesha . dha . dt:om-i)h+xva . lu('s,lugt+tlera . I , how over , our eXl)e-ri(!ll(:(~ha , sI ) ( ~( ql that , eV(;l!wil , livery(:()titpl('xtypehi(~ra , rchi(~sa . nd'(m , tur(;SLI'UC-l , lll'eS\[()1"liPS(i , very i ' ow named ( lisjunc-lions a , reintrodu('e(l . 7 q'hus ~ uuilica . 1; ionise ; ( merally uomore(~xp(msive tha . nunifica . -li , :) H with unlylm dl(mt . ur(~sl . fu(:l . ur('s . 
4 CONCLUSIONS\% havc~sh , : Y , vuinthisi ~ al ) , : ~ r tha . t the kind of conslraints , : ~ Xl ) r . t~ssihlo Ityapi ) Vol ) rh ~, l;o-r . ~ ssc~mdit . ionscall heimlf lemc' . ntedi Nai . ' actical . , . D , sle\]ne , ul ) loy in Ktyp , Mfeatur , :'~ st . ru(:t . uf ( , s and utdlica . Liona . sI . he I : , ritna . ryOl ) ( U'a , t , ic: , nont (>; t , l , ur <+ , '-; t , ruct , ure ~ . Ilutwhat . 
Of IIlOl'('COIII\[)I(~Nl;yp(~CC'IIH,F . ~ Lil I , , qit ~ v ' . ) l ', . ' h~y;r(~enl;ram:ies':\[ntro(IL ~ ciugree JH . ra . ncies illl . , ::< restralid . sallows E . ' the F,O~sihillty of d(~liNiu /,, recursiv cl . yl ), : ~ s ~ such a . s the ( lel in itkm of append in \[ I\] . (; lea\['lythere ~ olv;-~nl . ~, o\[such a . recursiv ( ~ l . yl ) (', couldNotI )( ~ l , reCOml filed a . sr , . ~ quiI ' oxlinTroll . 
Oue might , uew ' rtholoss , considm ' al-\[OWil\]l\[f ('( Hl ( , f a , ll ( ' y - ( ' O Ilst fah IS olll loll-recursiv ( qy defilt cdl . ypcs . A \]) ro /) leul still arises ; nant cly , ill hel'eSo\[va . itts of a Frail , till't1 . qll'tlCI411"(~ill(:ludcdsonic with apa . rticular r(~onll ' all (: ya . nds()Tn(~\viLh(',ul , then the(:, . ) mliti ( ) lliliad , a . II resc ) lva . uts ha . v(~th,:~sameshal)(~wouldm ) lon~e\['hold . () uev . , ottkll . her(q'or , . ~ no ( ~( li . oeml ) loy a moue COml ) l ( , x vorsion . r , a . med(lis . it , f,t:tio,(Ill\],\[12\], tit)I) . It . ig(i , . L(~sti, . malfl(~wh (' thef such a . d ditional ( : ( ) mpl(~xit . y would I ) ejustified to ' Our CXl ) ericl~ ( : c is derived l , ' imarily florates t-i . I"Ihc'l ' loll system(matat , her lar < e , e , ramul ; G for (' , (! l > lll ; lllimfii alv crhI > lHases , which was wiit-t('nI ) yI'h hard I lill richs a . dT sum:ko Na , kazawaaudi inl ) lclncut , cd by I ) clmar McuH_:J's . 
9 59 handle this limited class of reentrancy -constraints  . 
It seems then , that the class of constraints that can be expressed by appropriateness conditions corresponds closely to the class of constraints that can be efficiently pree ompiled  . We take this as a justification for appropriateness formalisms in general  . It makes sense to ~ d ) straet out the efficiently processable constraints and then allow another mechalfiSm  , such as attachments of definite clauses , to express more complex constraints . 
References\[1\]l\[asmnAit-Kaci.ANew Model of
Computation Based on a Calculus of
Type Subsum , ption . Phi ) thesis , University of Pennsylvania , 1985 . 
\[2\] Bob Carpenter . the Logic of "\]! qpedl;~ature , 5' tructurcs .   ( ~ambridgeq > acts in Theoretical Computer Science :2  . 
Cambridge University Press , 1992.
\[3\] Bob Carpenter . AI , E The Attribute
Logic Engine , U . ser'.s Guide , 1993.
\[4\] Ann Copestake , Antonio Saniilippo,
Ted Briscoe , and Valeria De Paiwl..
The ACQUILEXIAB : An introduction . In Tedl/riseoe , Valerial)e
Paiva , and Ann ( Jopesta.ke , editors,
Inheritance , Defaults , and the Lea:i-con . , pages 148-1163 . (,' ambridgeUI ), t993 . 
\[5\] Jochen Darre and Andrea.s Eisele.
Feature logic with disjunctive unification . In COLING90 vol , 2, pages 100-105, 1990 . 
\[6\] Gerald Gazdar , Ewan Klein , (~ eoffrey
Pullum , a . nd Iva . n Sag . Generalized
Phrase Structure G'romm , ar.lla.rvar(l
University Press , C'ambridge , Mass , 1985.
\[7\] Dale Gerdemann . Parsing and (; c ~ . -eration of UniJieationGram , roots . 
PhD thesis , University of Illinois , 11991 . Published as Beckman Institute Cognitive Science Technical Report  CS-91-06  . 
\[8\] l ) ale Cerdem~nn . Trolh Type resolution system , user's guide ,  \[994 . M~ut-half or tile Troll system implelnented by Dale Gerdemann & Thilo  G6tz  . 
\[9\] Dale Gerdemann and Paul John
King . Typed feature structures for expressing and computationally implementing feature cooccurence restrictions  . In Proceedings of ~ . Fach-tagun ( ider Sektion Computer-linguistik dc'r Deul sehen Gesell-seh  . aj ' tJ'~Tr,~'prachwis . ~ cnsehaft , pages 3339, 1993 . 
\[10\]ThiloGStz . A normal form for typed feature structures . Master's thesis,
Universit / it Tiibingen , 11993.
Itl\]John(~riffith . Di , @ metion and l'/f-ficient Processing of 1 , ' eature De-seription . ~ . I'hl ) thesis , Universit S~t
Tiibingen , i1994.' llmtative Title.
\[12\]l ) aul . John King . Tyl)ed feature structures as descriptions , 1994 . hithese proceedings . 
\[13\].h)hn T . Ma . xwell III and Ionahl M
Kapla . n . An overview of disjunctive constraints at is fa . ction . In lhvccedings of h~ternational Workshop on Pars - in  9 Te elmologies , pages 18-27 ,  1989 . 
\[14\]Carll'ollard and\[winSag.Head
Driven Phrase Structure Grammar.
CSI , I Lecture Notes . Chicago Univer-silly Press , C'hicago , forthcoming . 

