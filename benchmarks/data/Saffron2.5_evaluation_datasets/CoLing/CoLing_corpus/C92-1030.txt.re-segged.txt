An Empirical Study on Rule Granularity and
Unification Interleaving Toward an Efficient
Unification-Based Parsing System
Masaaki NAG NFA
ATR Interpreting Telephony Research Laborator i es  22 Hikaridai , Seikacho , Sorakugun , Kyoto 619-2 , JAI'ANnagata@atr-la . atr . co . jp
Abstract
This paper describes an empirical study on the optimal granularity of the phrase structure rules and the optimal strategy for interleaving CFG parsing with unification in order to implement an eltlcient unification-based parsing system  . We claim that using " medium-grained " CFG phrase structure rules  , which balance tile computational cost of CI?G parsing and unification  , are a cost-effective solution for making unification-based grammar both efficicnt and easy to maintain  . We also claim that " late unification " , which delays unification until a complete CI"G parse is found  , saves unnecessary copies of DAGs for irrelevant subparses and improves performance significantly  . The effectiveness of these methods was proved in an extensive xperiment  . The result show that , on average , the proposed system parses 3 . 5 times faster than our previous one . The grammar and the parser described in this paper are fully implemented and ased as the  . lapmmse analysis module in SL-TRANS , the speech-to-speech translation system of ATR . 
1 Introduction
Uuifieation-based framework bins been an area of active research in natural anguage processing  . Unification , wbich is the primary operation of ibis frame . -work , provides a kind of constraint-checking mechanism for nlerging vario as information sources  , sllc bas syntax , semantics , and pragmatics . The computational inefficiency of unification , however , precludestile development of large practical NLP systems  , although the framework has many attractiw ~ theoretical properties  . 
The efforts made to improve tile efficiency of a uriitication-ba  . sed parsing system can be classified into four categories  . 
? CFG parsing algorithm ? Graph unification algorithm ? Gran una representation ad organizati  ( m ? Interaction between CFG parsing and unilication There bave been wellknown efficient CFG parsing algorithms such as CKY\[A homid Ull Hnm  ,  77\] , Ear~ley\[Earley ,  70\] , CtIAffl ' ( Kay ,  80\] , eatd I , R\[Aho and Ullmaa L77\]\['t'omita ,  86\] . There have also been several recent in depth studies in to efficient graph unification algoritbms  , whose main concerns have been either avoiding irrelevant copies of l  ) AGs\[Karttunen and Kay , 85\]\[Pereira , 85\]\[Karttun . . . . 86\] \[ Wrob-lewski , 87\]\[Godden , 90\]\[Kogure , 90\]\[Tomabechi , 91\]\[E1 aele ,  91\] , or the exhaustive xpansion of disjunctions into their disjunctive normal forms \[ Kasper  , 87\]\[Eiselemadl ) Srre , 88\]\[Maxwell and Kaplmh89\]\[l ) arre and l~i , ~ ele , 90\] ickier , 901\[Nat . . . . . . 91\] . 
There has , however , been litth : discussion regarding the optimal representation fagrammar  , or linguistic knowledge , in the unification-based framework , from tile engineering point of view . Grammar organization is highly flexible , a stile unification-based framework uses two different forms of knowledge representation  ; atomic phrase structure rules and feature structure descriptions  . Method selection greatly at " facts both the computation a lelficieney and them aiu-tenauce cost of the system  . The reluL ~ also been little discussion regarding optimal interaction between the CFG parsing process and the unification process in unific at lon-based parsing  , which also greatly af ~ ct ~; overall performance . 
Here we introduce the notion of granularity , and suggest mcdium-gra~ued phrase structure rules  , in which morph ~ . syutactic specifications in the teature descriptious are expallded into phrase structure rules  . 
We claim that it reduce the computational loads of unification without intractably increasing tim l mulber of rules  , and it is optimalill tile sense that its at is ties both ett leiency and maintainability  . We also suggest late unification as another ~ lution to tim CO l  ) y-lug problem , as it avoids unnecessary copies of irrelevant subparses by delaying unification mt tila COln-ph : teCI  , 'G parse is found . 
In tile following sections , the design and iml ) lementatiun of timme dimn-grained phrase structure rules in explailm d  , then the implementation f the late uni : tication is illustrated  , antifinally the elfectiveness of the proposed n lethods is proven in experiments  . 
ACrF . SDECOLING-92 , NANTES , 2328 AO~rf 1992177 Pat ~ . OFCO t . lNG-92, NAN'ri ~ . S , Aua .  2328 ,   1992 Granularity of Phrase Constraints in Phrase Constraints in Nmnber of Phrase Structure Rules Structure \] Eules Feature Descriptions Structure Rules Extremely-Coarse-Grained weak very strong  .  1 ~ 10
Coarse-Grained medium strong 10~100
Medium-Grained strong medimn 100 ~1000
Fine-Grained very strong weak 1000
Table 1: Granularity of phrase structure rules characterized by tile number of rules and the strength of linguistic constraints in tile phrase structure rules aJtd the feature descriptions  2 The Granularity of Phrase
Structure Rules 2.1 Granularity
Phrase structure rule granularity has been introduced to refer to the amount of linguistic constraints specified in the atomic CFG phrase structures rules without annotations  . The rule granularity spectrum has been classified into four categories as shown in Table  1  , using the number of grammar rules msarues-sure . 
Unification-based grammars , in general , are characterized by a few general annotated pbrase structure rules  , and a lexicon with specific linguistic descriptions  . This is especially true for HPSG\[Pollard and Sag  , 87\] and JPSG\[Gunji ,  87\] , which are to be categorized as extremely-coarse grained  , as they drastically reduce then mnber of phrase structure rules into two for English and one for Japanese  , respectively . In these frameworks , the only role of the phrase structure rules is to provide a device for combining a head with its complement  . Most linguistic constraints are stored in the feature descriptions  . 
Coarse-grained rules have been characterized as a grammar consisting of at on fic phrase structure rules with medium constraints  , and feature descriptions with strong constraints  . Medium-grained rules have been characterized as a grammar consisting of atomic phrase structure rules witb strong constraints  , and feature descriptions with mediuln constraints  . Medium-grained rules differ from coarse-grained rules in that they include morpho~syntax in the phrase structure rules  , while coarse-grained rules include them in the feature descriptions  . This means that medium-grained rules are strong enough to derive syntactic structures from atomic phrase structure rules without feature descriptions  . 
Grammars for conventional NLP systems using simple or augmented CFG fall into the category of finegrained rules  , which represent most of linguistic constraints as CFG phrase structure rules  , and the number of rules usually amounts to an intractable number of several thousands for practical applications  . 
2  . 2 Ma inta inab i l i ty and E f f i c iency In unification-based framework  , a linguistic constraint cart either be described as atomic context-flee phrase structure rules  , or as feature descriptions in annotations and lexical entries  . As the number of atomic phrase structure rules decreases  , the number of feature descriptions increases . 
It is true that the lexieo-syntactic approach make stile granunar modular and improves its maintainability by reducing the number of rules  . However , it must be noted that the computational cost of disjunctive feature structure unification  , in the worst ease , is exponential in then mnber of disjunctions\[ Kasper  ,  87\] , where a stile cost of CFG parsing is o ( Ns ) in the input length N . Therefore , extreme rule reduction results in inefficiency . This overwhelms the benefits of the maintainability of the reduced number of rules since grammar development is essentially a trial -and-error process and requires a short turn around time  . However , the cost for CFG parsing also increases as the number of rules increases  . Therefore , we must chose tile granularity so that the reduction in unification cost outweigh stile increase in CFG parsing cost  , in order to gain overallet fieiency . 
3 The HPSG-Based Japanese

In this section , we illustrate the difference between " coarse -grained " rules and " medium-grained " rules using our HPSG-based spoken-style Japanese grarn -lnal'S as an exaluple  , We have developed two unification-based grammars with different granularity l  , which are essentially based on tIPSG and its application to Japanese  ( JPSG )  , for the analysis module\[Nagata and Kogure ,   90\] of an experimental Japanese-to-English speech-to -speech translation system  ( SL-TRANS ) \ [ Morimoto et al .  , 90\] . 
We have selected the " secretarial service of an international conference registration " as our task domain  , in which a conversation between a secretary and a questioner is carried out  . Tile Japanese grauunars ~ however , ~ trenot task-specific , but rather general-purpose Olle Sj which cover a wide range of pllen on l-IHistorically speaking  , we fil~t developed coarse-grained rules & lid then we nlallllally tl ' alsfonned them into medium -grldned rules for elicic ncy  . 
ACTESDECOL 1NG-92 , NA mes , 2328 hotyr 1992178 PRoc . OFCOLING-92, NANTES , AUG .  2328 , 1992 enaatruazly linguistic levels from syntax , and semantics , to pragmatics using typcd feature structure descriptions  . The linguistic phenomena covered in these grammars include : ? l  , ' undamental Constructions : causative , passive , benefactive , negation , interrogative , tc . , ? Control and Gaps : subject/object ontrol , ? Unbounded Dependencies : topic , relative , ? Word Order Variation and Ellipsis . 
3.1 Coarse-Grained Rules vs.
Medium-Grained Rules
The coarse-grained HPSG-based Japanese grammar has about  20 generalized phrase structure rules , while the medium-grained grarmnar has about 200 phrase structure rules . Bothgra , lnmars use the same lexicon with a vocabulary of about  400  . ~In the coarse-grained grarmnar , phrase structure rules only refer to the relative position l  ) etween the five basic syntactic ategories for Japanese : verb  ( V )  , noun(N ) , adverb ( ADV ) , postposition ( P ) , and attributive ( ATT ) . Most of the specific linguistic information is encoded as feature descriptions in either the annotation of the l  ) hrase structure rules or the lexical entries . In principle , there is no distinction as to whether a constituent is lexical or phrasal  , and no subcategories of the 5 basic categories . This contributes greatly to the reduction in the numbcr of phrase structure rules  , which results in better grammar maintainability . We present all the phrase structure rules of the coarse-grained Japanese grammar in 
Appendix A.
It has been noticed that the extensive use of dis- -junctions in feature descriptions  , which results from the reduction of the number of phrase structure rules  , is the main cause of incfficieney in the coarse -grained version of the grammar  . The three major sources of disjunctions are , lnorpho-syntactic specifications for diverse expressions in the final part of the sentence  , frecword order and ellipsis of verb complements ( ub-eat slashs crambling )  , and semantic interpretation of deep case and aspect  , where the first two particularly are the problems in spoken-style Japanese  . 
We have manually converted the coarse-grained phrase structure rules into medium-grained rules to reduce thc computational cost of unilication  . First , we divided each of the basic categories into several subcategories  . Then , we divided the coarse-grained phrase structure rules according to the subcategorics  . 
q b k e e I ) the gramma readable , however , we choose to leave the subcat slashs crambling and the semantic  2We also lave a alother vel ~ i Oll oftile gF ~ nlllal " fortile sam  , : 8tbCOll ) lls , whl cllisnsed fortile continuous peechl'ecogni -tion module\[Takez  . awael , ~ xl .  , 911 . It only imeaa to a alcCFG la31esp   a31d the \] lull l ~ r of rules ~ llOUllS to I nol ~ thall  2  , 0(~ , It is , th crefore ~ categol Jzed~-satin , grained gr ~ Htnar in our defiltition . 
interpretation undone , and nm de extensive f for ts to expand the morphosyntactic speeificatio as  . 
3 . 2 Example : Med ium-Gra ined Rules for P red icate Verb Phrases In this section  , we illustrate the process of transfofmarion using a predicate verb l  ) hrasc production rulc as an example . Japanese predicate phrases consist of a main verb followed by a sequence of auxiliaries a zld sentence final particles  . There is a nah no stotto-dimensional order of verbal constituents such as in Figurel  , which reflects the basic hierarchy of the
Japanese sentence structure.
Kernel verbs occur first in a predicate phrase sequence  . Voice auxiliaries precede all other auxiliaries , and within this category , the causative auxiliary ( sa)se , ' u precedes the passive auxiliary ( ra ) re~t . 
Aspect auxiliaries , such a . s the progressive auxiliary ( I e ) ivu precede modal auxiliaries ; rod follow voice auxiliaries . Modal auxiliaries are classified into two groups with respect othe relative order of negative and tense auxiliaries  . Mood 1 iue hldes the optative arl xiliaries , such as tai ( want ) , beki ( should/must ) , etc .   Mood2 includes the evidential or inferential auxiliaric such as rash ii  ( seem/look )  , kamoshirenai ( may ) , etc . Negative auxiliaries uai , u(not ) follow voice , aspect , and mood lauxiliaries , and precede tense and mood 2 auxiliaries . Tease auxiliaries la , da (- ed ) show irregular behavior . They follow the voice , aspect , mood 1 , and negative auxiliaries , and precede the mood 2 auxiliaries . They also can tollow the mood 2 auxiliaries . 
in the coarse-grained grammar , we provide a single phrase structure rule for the phcnomena  . 
v ~ ( vAUXV)O )
The order constraints between auxiliaries are specified in the annotution of rule  ( 1 ) and each lexical entry by the combination of tile syntactic features  , such as the synl headl subcat for preceding constituents  , tile synl headl coh for following constituents , and the syn\[headlroodl for the position of the constituent ~ in the verb phrase hierarchy  . For example , the causative auxiliary verb sern has the following  , feature bundles in its synhead lmod l feature . 
\[\[CAUS+\]\[DE hC -1 \[hSPC-\]\[DONT-\]\[OPTT-\]\[IEGT -\]\[PhST-\]lEWD-\]\[TENT-\]\[ PONT-\]\[POLT-AUX-\]\[INT~-\]\[SFP-I  - \ ] \[   SFP-2  - \ ] \[  SFP-3 -\]\] In converting the rule , first we have claasitied the verbal phrasal categories according to the hierar  . 
ehy , e . g . V-kernel , V-aspect , V-moodl , V-negt , V-mood 2 ~ and V-tease , then we have subcategorized the auxiliari ~ as shown in Table  2  . Thus , the coarse-grained phrase structure rule ( 1 ) is converted to the 32 medium-grained grammar rules in Appendix BACRES DE  COLING-92  . NANTES , 2328 AOt ~ W1992179 Prtoc . OFCOLING-92, NANTI~S , AUG .  2328 ,   1992 kernel < voice < aspect < moodl < negate < tense <   mood2 < tense ( sa ) seru ( te ) irutain aitarasiita ( ra ) reru ( te ) morauta garunda desuu masudarou Figurel : The predicate hierarchy of Japanese 



AUXV-dont causative auxiliary: ( sa ) sei'up assive auxiliary : ( ra ) reru aspect auxiliary : ( ~ e ) iru , O e ) a ( ubenef active auxiliary : ( le ) tnorau AUXV-opt top tative auxiliary : tai , beki
AUX % negt negative auxiliary : nai , n
AUXV-tense tense auxiliary : la , da
AUXV-evidevidential auxiliary : rashii , darou AUXV-copl copulative auxiliary : da , desu Table 2: Subcategories of auxiliaries in the medium -grained grammar  4 Interleaving CFG Parsing and Unification 4  . 1 Strategies for Evaluating Feature
Descriptions
Unification is an expensive operation , so the point of evaluating feature descriptions during CFG parsing has serious affects on the overall performance  . We have implemented two strategies for feature description evaluation : Early Unification  ( Step-by-step Strategy ) Featn redescriptions are evaluated step-by-step , at each rule invocation in the CFG parsing . 
Late Unification ( Pipeline Strategy ) Feature descriptions are evaluated when a complete CFG parse is found  . The " wellformedness " of a parse derived from atomic CFG rules is verified by evaluating associated feature descriptions  . 
The granularity of the phrase structnre rules is closely related to the proper selection of the evaluation strategy  . Since the atomic phrase structure rules ill the coarse-grained grammar are not so strong as to constrain syntactic structures  , we have to employ the early unification to avoid an nmber of irrelevant subparses which should have been eliminated by the evaluation of annotations  . I Iowever , since the atomic rules in the medium-grained grammar have detailed morphosyntax specifications  , they should be able to avoid irrelevant copies by using the late unification  . 
4.2 Implementing the Evaluation
Strategies
We have implemented the various evaluation strategies by doing additional house keeping in the underlying parser  . The parser used here is called the Typed ACTES DE  COLING-92  , NANTES , 2328 AOfYr 1992180 procedure Acp Continue ( chart ) begin if Satisfy Suspending Condition ? ( chart ) then return chart else
AcpContinue ( AcpOneStep ( chart ) ) end procedure AepOneStep ( chart ) begin pending edge = GetPending Edge ( chart ) 
AddEdge ( pending edge ) if EdgeActive ? ( pending edge ) then TryTo Continue Active Edge ( pending edge , chart ) else Try To Continueln active Edge ( pending edge , chart )
ProposeProductlons ( pending edge ) return chart end Figure 2: Iterative Rule Invocation in an Active
Chart Parsing Algorithm
Feature Structure Propagation Parser ( TFSP Parser ) \ [ Kogure ,  89\] , which is based on the active chart parsing algorithm\[Kay  ,   80\] and typed feature structure unification \[ A it - Kaci  ,  86\] . 
Tile active chart parser and the unification algorithm are implemented in Con  Sun4  , which is a 10-MIPS workstation . The unification algorithm is based oil nondestructive graph unification\[Wrob-lewski  ,  87\] , which we extend to treat negation , loop , type symbol subsumption relationships , and disjunc-tiou . Successive approximation \[ Kasper ,   87\] is used for disjunctive feature structure unification  . 
The Active chart parsing algorithm basically consists of chart initialization and iterative rule invocation  . The basic part of the iterative rule invocation is shown in Figure  2  . Acp Continue checks the suspending condition and calls rule invocation recur-sivcly  . AcpOne Step carries out a cycle of rule invocation which consists of getting a new pending edge  ( GetPending Edge )  , adding it to the chart ( Add Edge ) , combining active and in active edges ( Try To Continue-Active Edge/Try To Continueln active Edg e  )  , and proposing new edges ( Propose Productions ) . The parser stops ( Satisfy Suspending Condition ? ) when it finds an inactive edge whose starting and ending vertex are the leftmost and rightmost vertex of the chart  , respectively , and whose label is the start symbol of the granunar  . 
PROC . OFCOLING-92, NANTES , AUG .  2328 , 1992 In early unification , the feature descriptions are evaluated when the edges are combined  , while in late unification , they are evaluated iu the chart suspend-ing condition check only if tile clm rtsu spending condition bolds  . Delaying unification is implemented by adding a slot edge  . parse to the edge structure , which keeps a list of the pair of active aud in active edges constructing the edge  . If either or both of the argument feature structures of the unification have not been evaluated  , they are recursively evaluated to get the target feature structure  . 
It has to b cj ~ oted that some derivations that ter -mhmte when feature descriptions are evaluated  , may not terminate if they are ignored . For example , it is possible to write a rule for unbounded ependency like  ( 2 )  , in which m ~ element in tile subcat feature is moved to the slash feature  , to introduce slashed categories dynamically 3 . 

Ignoring feature descriptions in the rule may cause a alin finite loop  . Therefore , feature descriptions arc forced to be evaluated , when rules that cause a loop are encountered in late unification  . 
5 Experiment
Tile effectiveness of the strategies proposed in this paper call be judged by observing their behavior in practice  . We have tested the time behavior of pars-lug with respector ule granularity and interleaving strategy of CFG parsing and unification  . 85 sample sentences are used . These are selected from the sample subcorpus of ATR's dialogue corpus whose teu ~ kdornain is the " secretarial service of an international conference "  . The average length of the sample sentence si11 . 0 characters , and their maximum and minimum length are 2 and 28 characters , respectively . 
We have developed two 3al ) anese grammars of different granularity with ahnost the same coverage  . 
The coarse-grained rules consist of 22 generalized phrase structure rules with detailed ti ~  . ature description ill their annotations , while the medium-grained rules consist of 164 detailed phra . sestructure rules with less detailed feature descriptions  . Both grammars use the same lexicon with about 400 lexical cntries . We haw: , also implemented two different f cature descrilrtion evaluation modes in tile active chart parser  . ' file early unificalion cw durdion mode evah > atestile feature descriptions at each rule application  ( tile step-by-step strategy )  . The lateuni Jica * io , cval-ualio ~ mode , on the other hand , delays unification until a CU lnl ) lete syntactic structure is tk ~ undlly using the atomic phrase structure rules only  ( tile pipel in , ~ strategy ) . 
The average parsing tilne is shown ill Table :1 It shows that , on average , tilem(~diun>grainedglumSino/u . implelnentation , for eliciency l'e~ualls , w ~: gellot al ~" all the approl ) fiate combinations of sul ) cat and sl : tsl ~ in ~ ul V&IIC e , at ldkee I ) thert l ~ . sa disjunctive fe~ttt ll'estrttcLiil'O Aortas DE  COTING-92  , NAN TrS , 2328 ^ o?rr 1992 181
I/. uleGrmndarity
Unification Mode
Average Runtme
Relative Speed
Table 3: A w ~ ragc parsing time with respectograil-ularity and unification mode ~  0 
I:^Mmdlum , Early ???^? x axxxAx Figure 3: Comparison of Coarse-Grained I Lules and
Medimn-(-; rained Rules mar rules are 1 . 7 times more elllcient han the coarse grained rules ill the early unitcation mode  , and that tile late unification mode is 2 . 0 times more etncient than tile early unilieation mode with the medium ~ grained gramniar  . Moreover , when tile mediuul-grained grauuna rules and tile late unification modem'e combined  , tile new parser runs 3 . 5 times fmqter than till ' , l/revklu solle using the coarse-grained grammar rules and the early unities i on  .   4   6 Discussion The relationship between in lmt length and  1  ) arsing time with resl ) CC t to grammar gramllarity is shown ill Figure 3 . Ill general , timmedim ngrained ru/e . spertormed bet , ter than the coarse grained rules . This 13: lldency be COllles dearer , * is tile 8 elltelle el lg\] . hill ~ crelmes . This reslll Ls from the redllction of disjunc . .
tiw ! feature descriptions whose computational cost  in-4"1'm rq  ~ l ) l-Oach of st ~ Vill gillll eCc ~ ssilay c:o li ( ~s for ill-d ~! V ~ t la sub Dalai . -~,\] it aiI , % i . ~\] llgptot : ess ) ~, . l&tcIIIlil\[c#tt\]olliselthogonat\[tlt ~ lea \] lplo ~  ; hes , fsavingilltll:CeSS & lyc~pieSwithinaunif ies-lion in ' acess  , such a_s\[T , mla\[mchi , 9@The lcfmv , the ctfects ( ff speedup citii be multiplied . We haw~gdte ; tdy impleme ~ tedhis(lll~kqid ?: stltlCtiVeg ~ l , ~l ) ll Iltlii (: at iOll , & lidthel ) l * ~ illlillaly : XpeFilIl ~ llll ( ' Slllt shows that th , : \] ) ~l * er witllne wull iiel " rllt lsa\[lllOSlt wh : camta~st * Ls the one t'el  ) orte ( ill this l )  ; tl)el- . 
Paoc . el:COI , ING-92, NAm'ES , AUG .  2328 , 19921~01a Madlum , ~lyalf ~ l*I Atdiusa , Ls ~^ aa ^^ aa ^ aa ~* aa * 0 S t0 ~ S ~0  ~  30 Figure 4: Comparison of Early Unification and Late
Unification creases exponentially in the number of disjunctions  . 
However , we occasionally encounter sentences which are parsed faster using coarse-grained rules rather than medium-grained rules  . This is because the increase in the atomic CFG parsing cost exceeds the reduction of t be unification cost  . 
The relationship between input length and parsing time with respect to unification evaluation mode is shown in Figure  4  . This shows that the late unification mode is significantly more efficient hanthe early unification mode  . It also shows that the parsing time in the late unification mode seems to belmly nomial  ( not exponential ) in the input length , while that in the early unification mode varies widely and irregn-larly  . This is because the parsing time in tile late unification mode is mainly predominated by the cost of atomic CFG parsing byd claying unification  , whereas the parsing tiule in the early unification mode is mainly predominated by the cost of unification  . 
We have demonstrated tb ceffectiveness of combining medium-grained phrase structure rules with late unification  . Experiment results suggest that new prospective techniques for speeding upratification-based parsing exist  . 
The first is automatic transformation of phrase structure rules  , which converts disjunctions in the feature descriptions into atomic phrase structure rifles  . 
Some disjunctions such as subcat slashs crambling are so reguhu " that it seems possible to exl  ) and them into a set of CF (  ; rules using for lnali ) rocedures . If the grammar compiler can perform this kind of transformation automatically  , we can gain efficiency without losing grammar maintainability  . 
The second is feature-sensitive lazy unification.
Unilication is used for both huihling up a structure using inforn ratiou-propugat  , ion and blocking rule a F-plication using constraint-checking  . If the grammar compiler can separately output those features for constraint-checking such ~ syntacticll cat nrcs  , and those for information-propagation such as semantic rel  ) resental ; ions , irrelevant subparses can be pruned efficiently by evaluating the constraint-checking features first  . Unification is an associative and comnm-tative operation  , so the same results from the feature-sensitive lazy unification are assured  . 
The third is parallel implementation of a unification-based parser based on late unification  ( pipeline strategy )  . In early unification ( step-by-step strategy ) , it is hard to perform parsing in parallel because the CFG parsing process and the unification process depend strongly on each other  . However , both processes are completely separated in the pipeline strategy  . Therefore , it is easy to introduce the existing parallel algorithms to both CFG parsing and unification  . It is estimated that most feature descriptions can be evaluated in parallel  , at least , at the \] exical level , because unification-based grammars such as IIPSG derive phrase structure by iteratively propagating the local constraints  . 
7 Conclusion \] n this paper , we have proposed two techniques for implementing an efficient unification-based parsing system  , which , when combined , significantly improve the overall performance . The first is changing the granularity of the contextfree phrase structure rules into medium -grained rules  . This enables us to reduce the amount of unification for feature descriptions without intractably increasing the number of phrase structure rules  . The second is late unification in which the unification for feature descriptions is delayed until a complete CFG parse is found  . This saves unnecessary copies of feature structures which are wasted for irrelevant subparses  . 
We have tested the time behavior of the parsing system using two granunars of different granularity  ( coarse/medium ) and two different strategies for invoking unification  ( early/late )  . It is proved that , on average , late unification using medium-grained rules parses  3  . 5 times fester than the previous early unification using coarse-grained rules  . 

The author would like to thank Dr . l(urematsu , and all then , embers of A2'R huerpreting q'elephony Besearch I , al ) s . for their constant help m ) dfl't fitflfl discussions . 
References\[AhoeJldUllman , 77\]Aho , A . and Ulhnan , J . , Principles of
Compiler Design Addismi-Wesley , 1977.
\[ Ai't-Kaci , 86\]A ~' t-l(aci , lI . , " An Algebraic Semantias Ap-ploach to the Effective Resolution of Typel ~  ; quations , '' Journalo \] Theoretical Computer Science ~5 ,  1986 . 
\[Crater , 90\]Carter , D . , " Efficient Disjunctive Unification for \[~ ott onl-Up Paining  , " Proc . o \] COLIN (;-90, 1990 . 
\[I)Sn'e and l~iselc , 90\]DSn'e and Eisele , " Featm'e Logic whh Di@mctive Unification , " Proc . o \] COLING 90, 1990 . 
\[ Earley , 70\]Era'Icy , J . , " An Efficient ConLext-l , ' recParsing AIgor ithm , " AG'/~i ,  13 ,  ~ ,  1970 . 
\[Eisele and I ) Srre , 88\]Eisele , A . m , dD ~ rre , J . . " Unillcat . lon of Disjunctive Feature Descrlptions , " Promo \] ihe ~ Oth ACL ,  1988 . 
ACITe ~ qDE COLING-92 . NANTES , 2328^ofrr 1992182 PROC . OFCOLING-92, NANTES , AUG . 2328, 1992\[Emele , 91\]lgmele , M . , "/ Jnitlcation with Lazy Non-ltedun-dant Copying  , " Proc . o \] the $9 ih AUL , 1 . ~91 . 
\[Godden , 90\] Godden , K . , " l , azylhdfication , " Prec . of the ~8* hACL , 1990 . 
\[Gu*kii,87\]Clu*~ii,T . , Japanese Phrase Structure Grammar A Unification -Based Approach  , t ) o*x h , echt , lteidel ,  1987 . 
\[ K~sper , 87\] Kasper , It . , '% Unification Method for Disjunc-tive Feature Deacfipthms  , " Proc . of the ~5th ACL , 1987 . 
\[ Km~tunen , 86\] Karttunmt , L . , D-PATR - A l ) evelopment Environment for Unification-Bmsed Ormtnnara  , CSLI-8C~91 , 
CSLI , 1986.
\ [ Karttunenmid Kay , 85\] Karttunen , L . and Kay , M . , " Strut-time Shari*tg with Bin~as ? Trees , " Proc . o / the $3rd ACL , 1985 . 
\[Kay , 801Kay , M . , Algorithm Schemata and Data Slvuctures in Synlaeilc Proce ~ slnO  , Tedud calt leport CS l , -80q2 , Xerox PA It C ,  1980 . 
\[ Kogm ~, 89\] Kogure , K . , " Pruning dapmmse Spoken Sentence . ~ b~edonl IPS(l , " Prec . oJlheIWPT , 1989 . 
\[ log~i ~, 99\] Kogu ~, K . , " Strategic Leu . ylnerement M (3opy Graph Unification , " Proc . of COLING 90, 1999 . 
\[ Maxwellemd Kaplaa *, 89\] Maxwell , J . and Kaplan , 11 . , " An Overview of Disjtmctive ConstreJnt Satisfaction  , " Proc . 
oat fhe IWPT , 1989.
\[ Mozqmoto et al , 90\] Morimoto , T . et al , " Integration of Speedt Recognition altd Language ' roce a sing in SpokenL ~ ng n~g cTr mislatlon Synt et zl  ( 8 I/I'RANH )  , " llrac , of the
ICSLP , 1.990.
\[Nagatamid Kogure , 90\] Nagata , M . mMl < . ogm ~ e , K . , "\[\[ PSO~B ~ . sed Lattice Parser for Spoken Japanese in a Spoken I  , ~ngunge Tr ~ amlation System , " Prec . o \] ~ he9lh
ECAI , 1990.
\[Nakeato , 91\]Nakmm , M . , " Co~L~traint Projection : An Efficient ' Freatment of l  ) is jmlctive Feature l ) cscriptions , "
Proc . of 2gth A6'L , 1991.
\ [ Pereira , 85\] Perelra , l,' . , " A Stl~mtu~-Sharlng liepl~sent *~ tlon for \[ Jnitic  , ~tion-ltased lnnnM is nas , " Prec . o \] lhe23rd
AUL , 1985.
\[ Pollardmtd Sag , 87\] Pollard , (3 . and Sag , I . , An Information , -Based Syntax and Semantics , CSLIl , ecture Notes No .  13,
CS\[,I , 1987.
\[ T~kegawa et M . , 91\]Tak~zawa , T . et M . , " Linguistic G'on-strahtts for Continuous Speech llecognition in  ( h , al-Directed Di Mogue , " Prec . o\]I (,' ASSP-91, 1991 . 
\[ Tomabechi , 91\]Tomabedfi , ll . , " Quasi-Destmctlve Graph Unification , " Proc . of 29th ACL , 1991 . 
\[ Tomita , 86\]* fomita , M . , Efficient Parsin9 Jor Natural i , an 9uage : A Fast Algorithm for Practical System a , I(hlwer
Academic Puhlishms , 1986.
\[ Wroblewuki , 87\] Wroblewski , D . , " Nondestructive(;ra , hUnification , " Proe . othe6th AAAI , 1987 . 
Appendix
A Coarse-grained Gramn , ar
Rules for Japanese
The ll~k\[l/e of each rule is show lill IL he cOlnlllellt ~ where t  . hesu\[t ~ x-alL-ch , -coord means adjm ~ ction , COnlplenmntation . aim coordination , respectively . 
;  ;   ; Start Symbol start -> ( V ) j star ~ xute ;   ; ; ~0mt Phras ~ n -> ( a t t n ) ; att-n-a hxt->(pn ) ; p-n-a hit->(v:gtt ) ; v-i'n-chn->(vn ) ; w-at = a hit->(pit ) ; n-lt ~ coord ;   ;   ; Complox Ithd Coral ) erred IJ oult ~*-> ( n prefix zt ) n -> ( nnBu ~ fix )   ;   ;   ; Postpozitional Phrauop > ( n post p ) p -> ( vpout p ) p -> ( pl , oBtp );;; Adverbial ) ltx'~Soadv->(advpo . tp ) adv -> ( v ~ adv ) adv -> (~ t ~ adv) ;   ;   ; Vurb Phr~sov ~> ( pv)v . >(~ dvv) ;   ;   ; Prudicat ~ Verb Phra B ~ v -> ( vaux v ) v -> ( ~ tauxv ) v -> ( advaunt )   ;   ;   ; Verb In Zloctioltv -> ( v ~ t ~ v in ~ l ) aux v- )   ( all x v s t e ~ ~ inf l ) npre ~ ix-n-a hnn-a hit-ll surfix-ch
Ir-postp-ch*"pontp-chp " postp?chadv-postp-chv -fadv-chn-lady-oh  ; p " v " alty adv ~ v-a hv-aux v-chll-t tll X v-ch adv - ~ uxv-chv--ate=-in*lauxv-stom ~ infl 
B Medium-grained Rulesior
Jat ) anese Verb Phrases
The coarse-grained grammar rule ( 1 ) is converted to the following 32 medium-grMned ~ ; ramma rules . 
V-voice -> ( V-ko * a ~ el AUX g-volc ~
V-asp , t:t->(ADVAUXV-a~pc)
V-a ~ poct->(h Otlll V-dont)
V-moodl --> ( V-k~rl to l AUXV--ot , tt)
V ~ moodl -> ( V-voice AUIV ~ optt)
V-moodl-'>(V-a8puctAUXV-optt)
V'-ltegt > ( V ~ kexltt * lAOXV-lteg ?)
V-negt-->(V-voice AOXV-negt)
V ~ negt->(V-aspect hll\]\[V~z legt/
V-.m~gt.->(V-moodllUlV-negt)
V-tonue->(V-kernel AIJXV-tClltce)
V~t ~ Its e->(V = voi coAUlV-to It~e)
V-ton.~e->(V-aspect AUXV-t , its u)
V ~ toltse->(V-moo~1 AUX V ~ telI.~B)
V " t.nue->(V " n~gtAll JfV--tells e)
V-mood 2"> ( V-kelae \] hUXV-,!vid)
V'taood2->(V-voice hU~V'-evid)
V-mood 2-> ( V-aap ~ ct AUXV-evid)
V-mood 2-> ( V-moodl AU~V-evid)
V-mood 2-> ( V-negt AUXV-evid)
V--mood 2-> ( V-tolt Be AUXV-ovid)
V-tense->(V-mood2AO~V-tense)
AUAV voice "-> ( AUXV-caus)
AOIV ' voice ">( AUiV -' duac)
AUXV-voice ~> ( AIH\[V-caus AUlV-deac)
V->(V-kq ~ rnel)
V -> ( V-voice)
V->(V-aspect )
V -> ( V-moodl)
V -'> ( V-negt)
V > ( V refuse)
V ?> ( V-mood 2)
AcrEsDECOL 1NG-92 , NANTES , 2328 AOUT 1992 183 PRo(; . OFCOLING-92, NAN rES , AUU .  2328, 1992
