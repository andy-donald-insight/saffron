INDEPENDENT TRANS FERUSING GRAPHUNIFICATION
Lauri Carlson
Maria Vilkuna
Department of General Linguistics
University of Helsinki
Hallituskatu11
00100 Helsinki , Finland
I carls on@finuh.bitnet , viikuna@finuh.bitnet

We present a MT system that applies graph unification in transfer from English to Finnish  . The work described below is an outgrowth of a multilingual MT project initiated by the IBM in  1987 with the aim of studying multilingual translation using a common English language parser  . 
The transfer system presented here is independent of the parsing and generation modules  . Any source language parser can be used whose output can be expressed in a directed graph form  . The transfer system is responsible for generating target language phrase structure  . Target language word order and morphology are left to the generation modules  . 
The transfer system is lexically based . Transferules , presented in the form of bilingual graphs , are declarative statements of symmetric transfer elationships between words  , phrases or constructions in the two intertranslat -able languages  . 
Transfer is structure driven in that he transfer algorithm traverses the source language graph  , nondeterministically trying to apply the relevant transfer rules in the lexicon  . 
Each successful transfer yields a bilingual graph , whose target hmguage half is extracted and subjected to lineari-zation and morphological generation  . 
The main f ( y cus of attentioniour project is the development of the lexicon subsystem  . The lexicon system consisk ~ of separate transfer and monolingual lexicons and a common lexicon of language independent definitions  . 
Keywords : unification , machine translation , transfer , bilingual lexicon
I . Unification based transfer
Our approach is more transfer oriented than some other unification based approaches to MT  ( e . g . , Beaven and Whitelock 1988) . However , we argue , use of graph unification blurs the distinction between transfer and interlingua  . 
A feature structure representing a phrase will contain information at several levels of linguistic analysis ranging from lexical identity to logical argument sructure  . Transfer rules can express bilingual correspondences at any level of abstraction as well as across different levels of structure  . ( Cf . Kaplan & al .  1989 . ) A transfer rule in our sense can consist of an arbitrary pairing of lexical entries  , a complex correspondence across structures ( e . g . , " change " of grmnmatical construction i cluding part of speech assignments  )  , or a straightforward identification of arguments in logical form  . 
When the translation relation is best stated in language independent  ( semantic ) terms , transfer is trivial . Then monolingual lexicons , analysis and generation modules will do most of the work  . Thus , to what extent a given rule has the character of a genuine transfer rule will depend on the degree of similarity of the languages under translation in the relevant respect  . For instance , languages with similar tense systems can allow a straightforward identification of low level tense distinctions  . Low level transfer simplifies the tasks of analysis and generation and allows tighter control of the translation relation  . In particular , transfer idioms ( multiword equivalences ) can be stated directly without a detourthrough more abstract representations  . In this sense , unification based transfer fills out the space separating interlingua and transfer  . 
2. Parsing
Unlike approaches such as Kaplan & al (1989) , which produce bilingual descriptions in the course of parsing source language text  , transfer in our system has a completed parse as a starting point  . Currently , this parse is produced by a general-purpose parser  , PEG of IBMT . J . Watson Research Center ( Jensen 1986) , which is not unification-based . However , its output is close enough to a directed graph to ' allow conversion into the form required by the transfer system using a simple conversion interface  . 
It appears to us that this decoupling of parsing from transfer is as a femove  . Knowledge of the target language is not likely to influence ~  ) arsing of the source language in any significant fashion  . 
6013. lhetransfer system
Our Iransfer system consists of two modules . A decla-rative module defines translation correst ) on denees of individual phrases , structures and features . The information is given in bilingual ( or multilingual ) transfer dictionaries . 
An algorithmic modt deactually builds the correspondence structure out of the source language f-structure and the transfer dictionaries  . This component ensures that all necessary alternatives are considered and the relevant information is incorporated into a correct location in the correspondence structure  . 
We discuss these two modules in turn.
3.1. The transfer lexicon
A leading idea of the lexicon system is the separation of four different lexicons as follows: 
DGLEX ccT:X ~ Er

DGLEX is a lexicon of general linguistic definitions of terms  . There are two monoling tml lexicons , ELEX and FLEX , and a bilingual u ' ansfer lexicon , TFLEX . The monolingual lexicons depend on DGLEX , and TFLEX can refer to the other three . No further dependencies are allowed . This increases the independence btweentile component lexicons and makes them reusable for multilingual translation  . 
The descriptions in both monolingual lexicons are kept independent of one gm other and linguistically motivated  . 
Complex and adhoc statements belong in TFLEX ; it cannot be expected that all bilingual intertranslatability relation should follow linguistic generalizations  . Correspondingly , we may distinguish two kinds of multiword expressions  . Language-internal idioms ( e . g . , keep tabs in English ) are given in the monolingual lexicons , whereas the other type , which might be called " transfer idioms " , are referred mat the level of tnms fer entries only  ( e . g . , have access to , which translates into one Finnish verb ) . 
3.2. The specification language
The linguistic description language has two levels  , an internal representation in terms of attribute value graphs  , and a delinition language consisting of templates abbre-viating such graphs  . As examples of the latter , conskler the simple entries below . 
( i )   ( d~s cuss v slmple obj-e )   ( 2 )   ( keskustella vs Jmp Je ob\]-ela )   ( 3 )   ( d\]s cuss ( e ( @ e::discnss ) )  ( f ( @ f::keskusteila )   ) tra ) \[ E :\[ I , EX:Big

SUBJ:#3\[E:\[LEX:I\[T





CASE : EI , A

VCOMP:#4\[E :\[ LEX : DISCUSS


PREI):\[ARGI:#5\[E:\[LEX:*NONE*\]



ARG3:*NONE*\]





SUBJ:#5

PILED:\[ARGI:#5










Fig . 1: Simplified TFS it was discussed " ( next page ) The entries are from ELEX , FLEX , and TFLEX , respectively , and together they specify the transferelation between English discus  , ; ~ dits Finnish equivalent kes-kustella .   ( The transfer entry is shown expanded into graph form in fig  .  4 . ) The graph formalism we use is a standard attribute value unification formalism except for the use of cyclic graphs  . 
The graph specification language x tends the template language used in D-PATR in the following respects : ? Compile-time disjunction is included ? Parametric templates are included  3  . 3 . Transfer feature structures ( TFS ) The transfe relation between source and target language feature structures could be represented in different ways  . Separate feature structures could be set up for the source language and the target language  , and all explicit transfe relation between these two structures could be defined  ( Kaplan & al .  1989) . in our system , there is only one larger transfer feature structure  ( TFS ) which includes both feature structures and specifies the explici transfer relation for intertranslatable phrases of source and target languages  . 
The TFS contains extra levels of atributes for the soume and target lar ~ guag c  . Intertranslalable phrases form sub-descriptions which have two altributes  , one for each language . The values of these attributes are always trims-2   61  \ [  F:#10\[LEX:KESKUSTELLA 

THEMA:#3\[F :\[ LEX : SE




SUBJ:#5\[F:\[LEX:*NONE *


PRED:\[ARGI : #5




Fig .   2: Simplified Finnish FS of ' It was discussed ' lafions of each other  , and they may share values of common features and especially component phrases which  , in turn , are translations of each other . 
An example of a ~ anslation relation expressed in one feature structure is given in fig  .  1 . This structure contains the feature descriptions of both the English and Finnish sentences and coreferentia links that bind the corresponding units together  . 
Monolingual feature representations can be read off the bilingual one by omitting all attribt  , te-value pairs where \[ E:\[TENSE:#I\]

Fig . 3: Simple tense transfer rule \[ E :\[ LEX : DISCUSS

SUBJ:#2\[E:\[DUMMY:F\]\]
OBJ:#3\[F:\[CASE:ELA\]\]
PRED:\[ARGI:#2


F :\[ LEX : KES KUSTELLA



PRED:\[ARGI:#2

ARG3:*NONE*\]\]\]
Fig .   4: Partial transfer rule for " discuss "\[ E :\[ LEX :BE 

VCOMP:#5\[E:\[SUBJ:#2




SUBJ:\[F:\[LEX:*NONE *


NOMOBJ:T\]\]
Fig .   5: Simplified transfer rule for a gentless passive tile attribute is the name of tile other language  . The Finnish language subgraph of the previous example is given in fig  .  2 . 
3.4. Transfer rules
A transfer rule in this approach is formally just another transfer feature structure  , similar to the bilingual structure . It is a partial specification of an acceptable inter-translatability relation  . The rule is applied to a TFS by unifying it with a specified node in the " ITS  . The transfer process consists simply of adding of further information into a partially described instance of the transfer relation  . 
There is no formal distinction between lexical and grammatical transfer rules  . Examples of differentypes of rule are given in figures  35  . 
Some aspects of our linguistic description will be briefly described  . In monolingual lexicons , shills in grammatical function like the English active and passive are described as different I in kings of arguments to grammatical functions  , in this case , the subject and the object function . 
In transfer of complement-taking elements , we can then for the most part rely on the simple rule " equate arguments "  , which resulLs in correct bilingual corresponden -ces given the language-particular linkings  . For example , the verb disc~s(fig .  4 ) rakes as its second argument a direct object in English but an oblique complement in Finnish  , but this language-particular in formatkm need not be recapitulated in the transfer entry  . 
There are also translation equivalents whose arguments do not match  , and these receive slightly more complex transfer rules where argument equations are expressed separately  . 
Graph unification descriptions are particularly simple and effective where the relevant structures consist of predicates u~king a restricted number of unique argument types  , such as subject , object , or sentential complement . 
Adjuncts , which may have multiple instantiations for each head  , need a different reatment . Each of the adjuncts has a unique modifiend ( modif = the modified word )  , #1\[E :' T .   .   .   .   . o-t~z,X . mXAM ~ LE
CAT:NOUN
ADJT:#2\[E :\[ LEX : ADDITIONAL
CAT : ADJ
PRED:\[ARGI:#1
ARG2:*NONE':
ARG3:*NONE*\]
ADJT:\[E:\[CAT:ADV

MODIF : #I\]
F :\[ LEX : LISA
CAT:NOUN
ADJT:\[F : * NONE*\]
MODIF :  #i
NUM:SG\]\]

PERS : 3
F :\[ LEX : E SIMERKKI
CAT:NOUN\]\]
Fig .   6: Acyclic TFS 62   3 which it may share with other adjuncts . We allow adjuncts to point back to the modifiend so as to let transfer rules refer to properties of the rnodifi end  . This means that a TFS can be acyclic graph . This is illustrated in fig .  6 . 
4.~, ~ nero Hon
Since complex aspects of the transfer mapping are handled by the parser and the transfer system  , generation in our model remain simple . It involves a recursive sort of the lexical entxies of the target language and the generation of morphologically inflected forms from sets of morphological features  . 
The linearization component uses a set of unification based LP rules operating on information in the final Finnish feature structure  . Discourse-related information relevant to t linearization is included in the feature structure  . 
For Finnish subjectless clause types , we use a transferntle thai requires equation of rite English subject with the Finnish discourse function THEMA  . Depending on clause type , any one of the Finnish arguments may appear as a TI-iEMA  ( e . g . , " about it one-must discuss "; see fig . 
7) . The linearization rule then places the THEMA before the finite verb  , preserving , in effect , the characteristic information structure of the English sentence  . 
our experience . In conclusion , we survey the properties of graph unification that have proved valuable  . 
o Recursive structure of qTS : No limit to the complex ~ ity of an entry  . Multiword entries on a par with one word entries . 
Uniformity : Linguistic infommtion at different le ~vels represented in a uniform way  . Nodichotomy of lexical and structural transfer . 
Unification : Structure changing correspondences can be expressed through coindexing  . 
Subsumption : Inheritance of definitions allows making generalisations across entries and lexicons  . 
, Partial infornmtion : No requirement of complete ~ness of linguist c descriptions for transfer to work  . 
Disjunctions eliminated by underspecification . No need to make translation related sense distinctions in monolingual lexicons  . 
. Monotonicity : Entries remain valid when lexicon is extended and enriched  . Enables incremental refinement of individual entries and grammatical corre~spondences  . 
? Commutativity and associativity : Entries remain valid when entries or sense definitions are rearranged or regrouped  . 
IF:\[LEX:TAYTYA'must'
CAT : VERB
THEMA:#3 IF:\[LEX:SE'it'
CAT : PRON
CASE : ELA\]\]
VCOMP : # 9 \[ F : # i0 \[LEX : KESKUSTELLA'discuss'
CAT : VERB
THEMA : #3
SUBJ:#b\[F:\[LEX:*NONE*
SEN:\[I!UM:T\]\]\]
OBL:#3
VFORM : INFI
VOICF , : ACT\]\]
VFORM : FINITE
VOICE : ACT\]\]
Notes 1 Since unification-based transfer is monotonic , the assumption of completeness of input is not essential for us  . Nothing in principle rules out incremental transfer during parsing  . 

This research as been supported by IBM Finland . We thank Kimmo Koskenniemi for his insights at the system pl  , 'mning stage and to Krister Linddn for discussions on this paper  . 
Fig . 7: A Finnish impersonal . The maper colated from

Morphological generation ivolves production of Finnish inflected wordforms from morphological tags obtained from the Finnish feature strnctrue using Kosken-niemi's two-level morphological processor  . 
5 . Conclusion "\[' he choice of unification as a descriptive tool in develo--ping the transfer lexicon system has been productive in 

Beaven , J . L . -Whitelock , P . 1988: Machine Translation Using Isomorphic UCGs . Proceedings of COLING'88, Budapest . 
Jensen , K .   1986: PEG 1986: A Broad-coverage Computational Syntax of English . Technical Report , IBM
T . J . Watson Research Center.
Kaplan , R . -Netter , K . oWedekind , J . - Zaenen , A . 1989: Translation by Structural Correspondendes . Proceedings of the Fourth Conference of the European Chapter of ACL  , Manchester . 

