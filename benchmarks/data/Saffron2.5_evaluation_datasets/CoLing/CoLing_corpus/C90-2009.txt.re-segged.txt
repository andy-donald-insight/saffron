A Logic-Based Government-Binding Parser for Mandarin Chinese 
t ts in-Hs iCHEN
Department of Computer Science and Information Engineering 
National Taiwan University
Taipei , Taiwan 10764, R.O.C.
NTUTO46@TWN MOElO.BITNET

Mandarin Chinese is a highly flexible and context -sensitive language  . It is difficult to do the case marking and index assignment during the parsing of Chinese sentences  . This paper proposes a logic-based Government -Binding approach to treat this problem  . The grammar formalism is specified in a formal way  . Uniform treatments of movements , arbitrary number of movement nonterminals , automatic detection of grammar errors beforehand , and clear declarative semantics are its specific features  . Many common linguistic phenomena of Chinese sentences are represented with this for nmlism  . For example , topic comment structures , the ba-constructions , the bei-constructions , relative clause constructions , appositive clause constructions , and serial verb constructions . A simple pronot , n resolution is touched upon . The expressive capabilities and the design methodologies show this mechanism is also suitable for other flexible and context-sensitive languages  . 
1. Introduction
Chinese is a highly flexible language , The same meaning may be represented in many different Chinese patterns  . In other words , Chinese provides many ways for the native speakers to express their feelings  . For example , a sentence like " I have told Mr . Lee that they want these books " in English , we can form multiple different patterns in Chinese:  ( a ) ~ ~ i ~ ~\ [ np ~ ZlIs~f ~\] ~~- ~ ~1? I have to ld\[np Mr . Lee\]\[s that they want these books\] . 
( b)\[np-:~li , ~J~~-~~ti\[st ~ ~ ~ ~\] o\[tap Mr . Leeli , I have told ti\[s that they want these books\] . 
( c ) ~~= ~\[ np~qg ~\]\[ s\[np ~~: ~\] jI . ~\] ~ tj \] 0 I have told\[tap Mr . Lee\]\[s that\[np these books\]j they want tj \]  . 
( d)\[npi~li , ~ ~ ~ tiIs\[tap ~ ~ ~\] j 4~\ ] ~ tj \] o\[np Mr . Lee\]i , I have told ti\[s that\[np these books\]j they want tj\]  . 
( e)\[rip ~: ? i ~\] i , \[ tapi ~-~- ~\] j , ~ ~ i ~ ti\[s ~ t ~ tj \] o\[tap Mr . Lee\]i , \[ np these books\]j , I have told tiIs that they want tj\] . 
In reality , it shows the specific pattern : topic comment structure in Mandarin Chinese  . Topicalization may be deemed one of the movement transformations  . Examples ( b ) and ( c ) specify an object is moved to the topic position . Examples ( d ) and ( e ) are sentences with multiple topics . We can realize that the more predicates a sentence includes  , the more topic positions it has . 
And thus , the more complicated patterns may be generated . It is good for the language users , however , it is difficult to process this type of languages in computer  . 
Chinese is also a highly context-sensitive hm guage  . There are so many phenomena , e . g . index assigmnent , case marking , etc . , depending on the context information even within a Chinese sentence  . The index assignments in the topic comment pattern shown above explain this point  . Examples ( d ) attd ( e ) are legal interpretations . However , their bindings are different . 
The former is a serial binding , and the latter is a crossed binding . Serial binding is qot always true . For example , the index assignment cannot be * In p-Z'~-~Ji \] t=L = li  , \[ npLff . a:-~~lj,~\[J~-~d~i , . ' ~ tjIs~:~ti\]o*\[np Mr . Lee\]i , \[ tap these books\]j , I have to ldt j\[s that they want ti \] . 
This is because the object that someone to ld must be an animate  . Therefore , the index assignment , which is a necess , ' uystep toward correct interpretation of natural anguage sentences  , is difficult in computer . 
This paper proposes a Government-Binding approach to deal with these highly flexible and context -sensitive languages such as Mandarin Chinese  . It is organized as follows . Section 2 specifies the concepts of Government-Binding Theory  . 
Section 3 gives a fortnal definition of Government-Binding based logic grammars  . Section 4 demonstrates a Chinese parser from several context-sensitive constructions  , and touches on the simple pronoun resolution within a Chinese sentence  . Section 5 concludes the remarks . 
2. Government-Binding Theory
Government-Binding ( GB ) Theory/Chomsky 1981 , Sells 1985/is the descendant of Transformation Grammars/Radford 1981/  . Its simplified organization is shown in Figure 1 . Move-c ~ , which is a general operation , moves anything anywhere between d-structure and s -structure  , and between s-structure and logical foma . GB Theory includes a series of modules that contain constraints and principles which govern the movement transformation  . 
The Projection Principle preserves the syntactic information and the semantic information at each level  ( d-structure , s-structure , and logical form ) during the movement transformation . Trace Theory postulates that there exist various empty categories at various levels of mental representation  . 
48 1 1 . Projection Principled-structures-structure- logical form  2  . Empty Category 3 . Binding Theory
Fil ; ure 1. Government-Binding Theory
Thus , we must have the capabilities to verify the relationship between the moved constituent and the empty constituent  . GB Theory provide several mechanisms for the verification  . The Empty Category Principle ( ECP ) says " A trace must be properly governed . " That is , we must find some cx that c-commands the trace /3   . And cx binds / 3 iff ( a ) c , c-commands/3 , and ( b ) a and /3 are coindexed . Their definitions are based on C-Command Condition  . The C-Command Condition states the following : a c-eomman&/3 if and only if the first branch it , g  ~ , odedominating et alo dominates / 3 , and ct does not itsel J dominate t3 . 
It states a coreference rlation between a moved element and its mtce  . The Subjaeency Condition is given in the following : Any application of Move-e ~ may not cross more than one bounding node  . 
\[t specifies island consuaints on the moved constituents  . 
The Binding Theory/Sells 1985/shownbelow is used for simple pronoun resolution : ( Principle A ) An anaphor is bound in its Governing Category . 
(Principle B ) A pronominal is free in its Governing Category . 
( Principle C ) An R-expression is free.
Anaphors include reflexive and reciprocals , pronominals include pronouns , and R-expressions include all other noun phrases . 
3. A Government-Binding Based Logic Grammar
Formalism
The formal definition of Government-Binding based Logic Grammars  ( GBLGs ) is specified incrementally in the following . 
Definition 1 . A Government-Binding based Logic Grammar is a 6-tuple GBLG = ( T , 2 , B , S , C , R ) where : (1) T is the set of lexical terminals . Each lexical terminal is denoted by an atomic formula with lexical category as its predicate symbol  . 
(2), ' ~ is the set of nonterminals . Y = ZI'U~\]vk ) \] ~ Mk ) ~G where: ( a ) Zp is the set of phrasal nonterminals . Each phrasal nonterminal is represented by an atomic formula with phrasal category as its predicate symbol  . 
( b ) Y . V is the set of virtual nonterminals . Each virtual nonterminal is specified by an atomic formula  . 
(c ) Y . M is the set of movement nonterminals . A movement : nonterminal is one of the following two forms : 
A <<< B or B > > > A where AET k ) ~ p t 9~v , and
BE~V " \]~-7'LM and ~ RM denote the set of nonterminals A < < < B and the set of nonterminals B >>> A  , respectively . 
( d ) ~ G  is the set of goals . Each goal is denoted by a literal . 
(3) BC~p is the set of bounding nonterminals . A botm ding nonterminal is a phrasal nonterminal with bounding node as its predicate symbol  . 
(,4) SE~p is the start nonterminal.
(5 ) C is the set of logic connectives ' and ' and ' or ' that are denoted by '  , ' and ';' respectively . A grammar element is defined rccursiv cly in terms of logic connectives as follows:  ( a ) A lexical tm'minal LET is a grammar element . 
(b ) A phrasal nonterminal PE~p is a grammar element . 
(c ) A virtual nonterminal VE . ~v is a grammar element . 
(d ) A movement nonterminal M~~M is a grammar element  . 
( e ) A goat E ~ JG is a grammm " element.
(f ) If A and B are grammar elements , then ( A , B ) and ( A ; B ) are g , ammar elements . 
The first five types are called basic grammar elements  , and the last one is a compound grammar element . Let Gt and GE be the set of basic granma ar elements and the set of compound grammar elements  , respectively . 
(6) R is the set of production rules . A production rule is of the following form :
X0?-> XlClX2 C2 . . . C(m . l)Xm where X0 < ~ l , ,
XiEGE for 1_<i_<m , and
Cig2C for I ? i_<(m1).
It is obvious each production rule can be translated into a sequence of production rules with the logical operator ' and ' only  . 
An example written with this formalism is shown as follows  . It captures the relative clauses in English like " The man who heme t is a teacher  . "( rl)s-->np , vp . 
( r2) np--> pronoun.
( r3) np--> det , not m.
( r4) np-->det , noun , rel.
( r5) vp-.->tv , np.
( r6) vp-->tv , trace.
(rT ) vp --> iv.
( r8) rel-->tel pronoun << < trace,s.
where T = pronoun , det , noun , tv , iv , rel pronoun , ? p = s , np , vp , rel , ? v = trace , ~m = rel_pronot , n << < trace , and
B = s , np .
The rule ( r8 ) describes a constituent in phrase structures is extraposed to the rel pronoun position  . Which constituent may be moved from which position is specified by rule  ( r6 )  . 
Definition 2 . \]\[: or XE~p , YE~v and TR is a transitive relation , XTRY if ( 1 ) Xistile rule head of a production rule , and Y is a grammar clement in its nt lebody , or (2) Xistile rule head of a production rule , 1-Y . p is a grammar element in its rule body , and ITRY , or (3) there exist 11 ,  12  . . . . . and InE ~, p , such that XTR It 249
TR12TR ... TRInTRY.
The transitive relation TR is also a dominate relation  . This is because TR is a dominate relation between a phrasal non-temfinalnda virtual nonterminal  . 
Definition 3 . A production rule X0--> X1, X2 . .  .   .   . Xm ( where XiEGI for I < i < m ) is significant if it satisfies the extra restrictions :  ( 1 ) for any grammar element Xi = ( A <<< B ) E \] ~ LM , there must exist some Xj , i < j-<m , such that ( Xj , B ) ETR . 
(2 ) for any grammar element Xi = ( B > >> A ) E~RM'there must exist some Xj , 1_<j < i , such that ( Xj , B ) ETR . 
A logic grammar GBLG is significant if each production rule ER is significant  . The above sample grammar is significant for the following reasons :  ( 1 ) The rules ( rl )  -  ( r7 ) are significant trivially . 
(2) The rule tel-->rel pronoun << < trace , s is significant because there exists a transitive relation TR  1 such that sTR 1 vpTRl trace . 
Proposition 1 . The c-command condition is embedded implicitly in GBLGs if these grammars are significant  . 
Proof . For a significant production rule :
X0--> Xl , X2 . . . . . XmifXi = ( A <<< B ) E~LM then there must exist some Xj ( i < j < m )  , such that Xj dominates the virtual nonterminal B in the other production rule  . The phrasal nonterminal X 0 is the first branching node that dominates A and Xj  , and thus also dominates B . Therefore , Ac-commands B . X i = ( B > > > A ) E ~ RM has the similar behavior . 
This property can be used to check the con'ectness of granm was automatically before parsing  . 
Definition 4 . The transitive relation TR subjacency is a subset of TR and satisfies the restrictions : for XE ~ p  , YEY ~ V , XTR subjacency Y if XTRIlTR12TR . . . TRInTRY , and there does not exist more than one Ij such that ljEB  . 
Proposition 2 . A significant logic grammar is a restrictive context sensitive grammar  . This is because the truth value of a movement nonterminal depends on the appearance of a virtual non-temainal preceding or following it  . 
/ Chen 1988/ proposes a bottom-u parsing system for GBLGs . Figure 2 shows the execution of our sample grammar for the sentence " The man who heme t is a teacher "  . The label on the are indicates the step number during parsing  . The empty constituent trace is generated in phrase vp  , then passed to phrases , and finally cut in phrase rel . Comp , ' tred with other logic programming approaches /Matsumoto  1983  , McCord 1987 , Pereira 1981 , Stabler 1987/ , especially RLGs/Stabler 1987/ , GBLGs have the following features : ( 1 ) the uniform treatments of leftward movement and the rightward movement  ,   ( 2 ) the arbitrary number of movement nonterminals in the detman who  2   3 ww noun rel_gronoun cut trace 10~ np
Jhemettrace 4~6 ~ pronount vn pvp(trace) . \ x~tel . \~, , . .,'
I ~ cet6, ~
S is a teacher tv det noun np . . . . its ; ~ vp
Figure 2 . Sample Parsing the rule body ,   ( 3 ) automatic detection of grammar errors be fi ) reparsing . 
The former two features are useful to express the highly flexible languages like Chinese  . 
4 . A Chinese Parser 4 . 1 Topic-comment Structures Topic-comment s ructure is one of the specific features in Mandarin Chinese  . There are several interesting linguistic phenomena concerning these structures :  ( 1 ) Topic may be moved from the argument positions in the comment-as subject  , direct object , or indirect object . 
(2 ) Many categories may appear in the topic position , e . g . 
n ", s ', v ", or p " .
(3) There may be multiple topics in a sentence.
(4 ) The comment may not contain a constituent which is anaphorically related to the element in the topic  . 
Under the above observations , topic may be represented as : topic ( topic ( N2 bar ) , n2bar , Semanfic , Index , Case ) --> n2 bar(N2 bar , Semantic , Index , Case , Classifier) . 
The second argument of predicate topic specifies the phrasal category of the topic  , i . e . , n2 bar in this example . It is important fortile parser to decide whether the constituent may coindex with a trace  . 
Next , the production rules for generating sentences are shown as follows : s  1 bar ( s1 bar ( Topic 1 , Topic2 , S )) --> topic(Topic 1 , Cat 1 , S1 , I 1 , Case 1) < < < trace ( topic , info(Cat1 , S1 , I1 , Case 1)) , topic ( Topic 2 , Cat2 , S2 , I2 , Case 2) < < < trace ( topic , info(Cat2 , S2 , I2 , Case2)) , s(S ) . 
s1bar(s1 bar(Topic , S )) --> topic(Topic , Cat , S , I , Case ) < < < trace ( topic , info(Cat , S , I , Case )) , s(S ) . 
slbar(slbar(S )) --> s(S).
503()1' these three production rules , the first two define the " topie-comnrent " pattern  , and the last one is a rule without topic . 
Finally , the phrasal nonterminals is introduced.
s(s(N2bar , V2bar )) --> n2 bar(N2 bar , Semantic , lndex , Case , Classifier ) , v2 bar(V2 bar , Semantic , lndex , Case , subj , nonbei) . 
s(s(t(Case , lndex) , V2bar )) --> mtce(X , info(n2 bar , Semantic , lndex , Case )) , v2 bar(V2bt ~ r , Semantic , lndex , Case , subj , nonbei) . 
s(s(N2 bar,V2 bar )) -- . > n2 bar(N2 bar , S , I , C , Classifier ) < < < tracc(bei , info(n2bar , S , l , C )) , v2 bar(V2 bar , S1 , 11  , C1 , subj , bei) . 
s(s(t(C , l) , V2bar )) --> trace(lelative , info(n2 bar , S , I , C )) <<< I race(bmj ~ lo(n2bm , S , , , C )) , v2 bar(V2 bar , S1 , 11 , C1 , subj , bei) . 
s(s(V2bar )) --> v2 bu(V2 bar, .   .   .   .   .   .   . no subj nonbei ) . 
" llhe firsts rule is an or nutlcase , i . e . , no movement . Semantic denotes the semantic feature of tire head noun  , It must be unifiable with tt ~ e semantic feature prey dec by the matrix verb with the type tree matching/McCord  198'7/  . The same logical variable Case appears in the phrasal non-temfinals  n2bar and v2bar   . It means tire case of subjcct is assigned by tire maltix vcrb externally according to  0 -theory , The seconds rule captures one I?ftile movement transforn ralions-relativizatic m  , to piealizalion , ha-Irars\[oIIttion , or bci-transformaton An ( , ' errllor lllphFas ( ? is lllov cd via the fo Flr lCr operatiot l , \[ hlisii virtual noll-tern rinalt lTI (   ( : ( X in / (  ; (n2hdr , 5'emavtic , lnde . r , Cave )) i : ? left at the empty sile . It specific :; on b'n2 bar can appear herc , a ~ d what k i : I s i ) no ; . ' ements are not concerned . Tile semantic t ~ . : a ture and case arc confined by the matrix verb . The thirds rule deals with be iqrars t'om ~ tie  ~  . Vet example , ( The tiller i is arrested ti by , tire t'o \] ice . ) ~' hethief (') J\[' ;  \[ ; ~ ; ldxl'l ~') is mtalo . , q cal subject of v2 bar . The r~:al subject is tile object afbci(~:), i . e . , the police . Thus , at different group < S , I , C > of vaiab ! es is used . The ti2 baracts as the " . '  . . o , \] cc to fif ) / ) or or the subicct of lhe embedded sentence . 
" l ' he tol1I-I\]1   5" rtl ! ectlpItlrcs double movements for fill tl2bar   , l : or 3cG ~ irllIle ,   ( The thiefiar rested tibytire police escaped again  . ) A left-moved constituent (')\] ltN , ~\] x ~\] ' ~' , the thief ) is moved rightward furthermore . In this rule , two virtual nonterminals appear art both sides of movement operator ' <<<'  . Tim fifths nile describes those sentences without subject  . An atom no sut ) jins/cad of , wd . ~/, ~ pecilics Stl Clii silualioli . 
4.2 Nnt , nPhrase
Arlo/lrl phrase ca~lbea protlOtll ? ~ a simple noun  , or an oHnphls other elements that act as premodifiers of that noun  . 
Those clements are (1) classifier phrases , (2) associative phrases , and (3) modifying phrases . Only associative phrase , relative clause , and appositive clause at relisted in the t bllowing  . 
Associative phrase denotes two noun phrases are linked by a special Chinese word tie  ( ' f19' )  . For example , ~- t ~ ~ d ~ J . X . V \] ( the population of China ) . 
'Iherulen2 bar(n2 bar(A , N2bar) , Semantic , Index , Case , Classifier ) --> asc(A) , n2bar(N2 bar , Semantic , Index , Case , Chtssifier ) represents this constnmtion . The definition of associative clause is : asc ( asc ( N2bar , De )) --> n2 bar(N2 bar , Semantic , Index , Case , Classifier ) , * de(De ) . 
Both relative clause and appositive clause are nominalization it he form : nominalization + head noun  , and are defined as follows : ret(rel(S , De )) --> s(S ) , * de(De ) . 
app(app(S , De )) -.> s(S ),* de(De).
t to wever , they are different in the restricting the reference of tire head noun  . The head noun that are httive chmse modifies refers to some unspecified participant in the nominalization part  . l : or example , ( the former i whotig rows fluits ) ,  ' , rod 4lt ~\]' tJNti\[l' , J :/ k-~?i ( the fluits i that they growti) . 
The headuoun'Zk-~-' ( tire fruits ) refers to an empty constituent ( either subjcct or object ) in the relative clause . This type of constructions can be considered a rightward movement  . For appositive clause and head noun pair , tile head noun does not refer to any entity in the modifying clause  , i . e . , appositive clause , t ; or example , ; fJ~l'g~ItN::e:fl ' , JN ( the matter concerning our renting a house) . 
The nominalization , ~ . ~? lj ; fll . ~-~'  ( our renting it house ) serves as a complement to the head noun-:~' ( the matter )  . This type of constrllctiorrs cannot be regarded as a  111ovcrllerlt transformation . Two rules are specitied for them : n2 bar ( n2bar ( Re\] , N2bar) , S , I , C , Classifier ) - . .> rel(Rel ) , trace ( relative , in tb(n2 bar , S , I , C 1 )) > > > n2 bar(N2 bar , S , I , C , Classifier) . 
n2bar(n2bar(Atlp , N2bar) , S , I , C , Classifier ) --> app(App) , n2bar(N2 bar , S , I , C , Classifier) . 
The only difference between these two rules is a trace has to be found i " n rehltive clause  . Note the cases of the empty constituent and the overt constituent may be different in relative clause + head noun cotstrut/ion  . For tire sake of space , the nlbar is neglected in this paper . 
4.3 Verb Phrase
Different from a noun phrase , a verb phrase may have premodifiers and postmodifiers  . The preverbal specifiers are ha-phrases , bei-phrases , adverbial phrases , degree phrases , preposition phrases , quantifier phrases , aspect , and modal . 
The postverbal modifiers are semential constructions  , adverbial phrases , quantifier phzascs , classifier phrases , preposition alph , as es , and aspect . Only Serial Verb Constructions ( SVCs ) are abom to discuss in detail . The rule v2 bar(v2 bar(Va1 bar , Vb1 bar) , S , I , \[ Cl , C2\] , subj)-->v1bar(Va1 bar , S , I , C1 , subj ) , vlbar ( Vb1 bar , S , I , C2 , subj ) means two separate vents juxtaposed together , e . g . ~' J ~ iv'-~\]Iv'i~2-2J ~\] ( IIv ' bought a ticket \] and iv ' went in D . It is one of the SVCs . The two events have tile identical subject , but cases may be different . The other groups of SVCs are: ( 1 ) One verb phrase or clause serving as the direct object of another verb  , e . g . 
~~~2, ~1 ~ o(I want to go to school . ) ~ J ~ ~ I ~ , (\[~5~-~\] ~ o(I want him to go to school . ) (2) Pivotal constructions , e . g . 
451 ( I entrust him to take care of an affair . ) (3) Descriptive clauses , e . g . 
(She cooked a dish that I very much enjoyed eating  . ) Only the former two are considered . Tile verbs with first use are classified into t2 attd t3  , attd the verbs with the second use , i . e . , pivotal construction , are classified into t8 . It is not easy to define descriptive clauses with a rule or a new category  , e . g . 
POSSESSIVE/Yang 1987/ . This is because tile descriptive clause is optional  . Without this clause , the original sentence is acceptable too . Furthermore , many verbs may be used with the descriptive clauses  . 
The lowest level vl bar ( v ' ) touches on the uses of the subcategorization frames of the specified verb  . According to the frames and ECP , a virtual nonterminal trace is placed wherever it is needed  . For example , v1 bar(v1 bar(T l , N2bar) , Semantic , Index , Case , HasSubj)-->*t1(Tl , HasSubj:Semantic:Case , Semantic 1: Casel) , n2bar(N2 bar , Semantic l , lndex l , Casel , Classifier) . 
v1 bar(v1 bar(T1 , t(Case1 , Index 1)) , Semantic , Index , Case , tI as Subj)-->*tl(T1 , HasSubj:Semantic:Case , Semanticl : Casel) , trace(X , info(n2 bar , Semantic 1 , Indexl , Casel)) . 
v1 bar(v1 bar(T2 , pseudoS(e(Case1 , Index) , V2bar)) , 
Semantic , lndex , Case , subj)-->* t2(T2 , subj : Semantic : Case ) , v2 bar(V2 bar , Semantic , lndex , Case 1 , subj ) . 
The lexical category tl denotes transitive verb . Here , the trace may be generated by any movement transformation  . The third rule is for SVCs . Note v2 bar should have a subject and share it ( Index ) with the matrix verb . Thus , the semantic features of the two are the same . However , cases may be different . That is , one is assigned by the matrix verb , and the other one by the embedded verb . The rules for other lexical categories are omitted in this paper  . The details can refer to/Lin 1989/ . 
4.4 Ba-construction
Ba-construction is usually generated by ba -transformation  , which is one of the movemen transformations . Tile direct object is placed immediately after ' P2'   ( ba ) and before the verb like : subject ' ~' ( ba ) _direct ~ verb . 
For example , ~ J ~ ~ ,  -~)'~' , : N : i ~ l ~ ~ ti-\]"o(I sold all three books . ) tIowever , there is another pattern for ba-construction : subject '\]\[  . q ' ( ba ) ~ verb ~ . 
It is not constructed by movement transfom\]ation be can se some noun phrase appears after verb  , i . e . , ot!ject2 . For example , ~ J ~ U ~ ~ ! aZT = _: Z ~ o ( I ate three of apples . ) It shows a part-whole relation between object 1 and object 2  . 
In the well-performed parsing systems , all the two patterns must be treated . It is also easy to represent this construction with our formalism  . 
4.5 Bei-construction
Bei-construction is a familiar Chinese pattern like the following : nonn ~ ~ gU  ( bei ) noun phrase 2 verb . 
For example , ( The bird was let go ( by me ) . ) Bei-construction has disposal shown as below similar to ba-construction : ~ I ~ ~  I"1 ~? ~ l~T ~ I ~ I il ~ o ( That do or was kicked ( by na B ) and a hole is left . ) The rules in Section 4 . 1  ( topic comments ructure ) capture the above phenomena . 
4.6 Pronoun Resolution
Binding Theory can be rephrased in the following procedures  . Assume/3 is an anaphor , a pronominal , or an R-expression depending on which principle is used  . Each element/3 may have two sets : set of possible pairs and set offln possible pairs  . These two sets are denoted by possible-pair and impossible-pair espectively  , and are defined in the following : possible-pair ( B ) = aIcx can coindex with / 3 , impossible-pair ( /3  ) = aIca cannot coindex with 13 . 
( Principle A ) For an acceptable sentence , try to find some such that cais in /3 's Governing Category and c--commands /3  . Each a that is outside of this range should not have a coindex relationship with  13  . This principle defines two sets for /3 . For example , (* Mr . Lee is aid\[s that you sawy our selfi J .   ) possible-pair ( ' ~ l ' ) --'4 ~ g' ( possible-pair ( self ) = you )  , and impossible-pair (' l ~~') = ~5 ~ , *-~"' ( impossible-pair(self ) = Mr . Lee \]) . 
Both '4~;'( you ) and '~5 ~ J_~ . = '( Mr . Lee ) c-command ' ~ t ~' ( self) . The former is in the governing category of the reflexive ' ~ ~'  ( self )  , but the latter is outside . So the index assignment is not acceptable . 
(Principle B ) Those as that are in tile range of Governing Category and c-command  /3 should not coindex with /3  . 
This principle just says which as cannot be in the candidate set  . However , we cannot determine whether those cxs that are in its range and do not  c-command/3  , coindex with /3 or not . 
If such an a coindexes with /3 , it must satisfy other criteria , e . g . other binding principles , the same semantic feature , and so on . Thus , this principle says only the i , qmssible-pair . For example , *\[ s~i ~- ~ T~2i \] o(*\[sMr . Lee is a whim i \] .   ) impossible-pair ( ' tg ' )  = \[ ~ 3~ ~'   ( impossible-pair ( him ) = Mr . Lee ) . 
The phrase ~3~t5'-~ . '( Mr . Lee ) c-commands ' ~'( him ) , thus they cannot be coindexed based on Principle B  . Consider a ~ oth crexample : *\[ slgi ~ . .~, 71" ~ R-~i \ ] o (* \ [ sHei saw Mr . Leeil . ) The R-expressiort does not c-command the pronominal  . 
According to Principle B , we have no way to detemfine their binding relationship  . But if Principle C is applied , it can tell t , s the index assignment is wrong , ( Principle C ) For any caw here ac-commands/3 , aought not to have coindex relationship with/3 . This principle says nothing for those as that do not c-command  /3  . A set impossible-pair is defined from this principle  . For example , * ~ i ~\ [ s4~~-~T ~ i \] o ( * He is aid\[s that you saw Mr . Leei \] . ) 52 5 impossible-pair ( -'-4 ! g~3~~'~' )  =  " ( t ~' , ' gJ ~') ( impossible-pair ( Mr . Lee ) = he , you) . 
The pronominal ' ~' ( he ) c-commands ' ~-3~'35' ( Mr . Lee ), so they should have different indices . 
Based on these three principles , a postprocessing routine embedded in the parser is used to determine the coindex relationship between constituents from the parse tree  . The algorithm is sinai:de : Traverse the parse tree  , generate the relations possible-pair and impossible-pair  . If it is unknown up to now , are httion unknown is given temporarily . When a new relation possible-pair or impossible -pairs got  , use it to check all the unknown relations . Retrac the unknowns accordingly . 
Finally , assign the anaphors and pronominals suitable indices based on the relations possible-pair and ir twossible-pair  . 
5. Conclusion and Remarks
Many natural langt , ages are flexible and context-sensitive . 
Mandarin Chinese is a famous example . It is difficult to capture tile linguistic phenoinen a lot these languages in computer  . This paper adopts GB Theory to deal with this problcm  . According to GB Theory , the rule of ' move-a ' moves anything anywhere , and the universal princil ~ les operate interactively to rule out the illegal movements  . Thus , the only things shoukt be declared in tim grammar sree :  ( 1 ) which phrases are the possible mpty constituents ,   ( 2 ) which positions are their possible mp tysites ,   ( 3 ) which positions are their possible landing sites , (4) which phrasal categories are bounding nodes . 
In such cases , arobnst parser for n : t tural hm guages can be designed  . As an example , we represent many context-sensitive constructions in Mandarin Chinese  , and do case marking and index assignment for Chinese sentences  . An experime , mfl Chinese parser is running under the euvironments :  ( 1 ) Vax-I1/785 , (2) Quintus Prolog ,   ( 3 ) lexicon with about 200 words ( about 33K bytes )  , and ( 4 ) about 150 production rules ( about lI2K bytes )  . Besides movemen transformation , pronotm resolution is another index assignment . For well treatment o\[pronoun resolt , tion , the syntactic knowledge is not enough . This is because the Binding Theory tells us much the impossible pair  , but little the possible pair . Much more semantic information should be included . 
Moreover , our GB approach is also useft , 1 when we would like to compose logical formulae from their syntactic counterparts  . The idea is that the mapping between d-structure and s-struc  . ture , as well as between s-structure and logical form are treated in the similar way  . The movement transformation between d-structure and s-structure tells us the relationship anaong verb and its accoln panying arguments  . The skeleton of the given ' verb is defined in tile lexicon  , and base-generated in the d-structure . For example , ' N'(Subject , Object ) ( buy ( Subject , Object)) . 
The index assignment relates ~' ( book ) to the verb ' . ~:~ '  ( buy ) in the following sentence : ( There is one bcm ki that every student bought i . ) Because the variable of the type -~- ' ( book ) and the second argument of the template ' N' ( Subject , Object ) ( buy ( Subject , Object )) should be the same in the logical form , the index ( a unique integer ) can be changed into a variable , say X . That is , they share the same variable shown below : exist ( X , ' i ~'( X ) , for all ( Y , '-~ L'(Y ) , ' N'(Y , X ))) ( exist(X , book(X) , forall(Y , student(Y) , buy(Y , X)))) . 
The form tf latells us the SVO-SOV inversion in the logical tbrm  . This phenomenon can be added into our parser easily with our formalism  . The details concerning the logical interpretation fChinese sentences refer to/Chen  1989/  . 

Chcn , tI . 1t . , I . P . Lin and C . P . Wu ( 1988 ) ' A New Design of Prolog-hased Bottom-up Parsing System with Government-l : linding Theory  . ' Proceedings of tile 12th lnternatio ? ~ al Conference on Computational Lingtdstics  , pp . 

Chen , H . tl . (1989) ' The I , ogical Interpretation of Chinese Sentences . ' Computer Processing of Chinese attd Oriental
Languages 4(2, 3), pp . 171-184.
Chomsky , A . N . (1981) Lectures on Government-Binding . 
Foris Publication , Dordrecht , II othm d.
Lin , I . P . , S . F . IIuang , \[I . H . Chen and K . W . Chui ( 1989 )   77w Study qf the Knowledge Base in Mandarin Syntax ( ll )  . 
Project Report , Department of Computer Science and Information Engineering  , National Taiwan University , 
Taipei , Taiwan , R.O.C.
Matsumoto , Y . , 1 t . Tanaka , et al ( 1983 ) ' BUP : A Bottom-up Parser Embedded in Prolog . ' New Generation Computing 1(2), pp .  145-158 . 
McCord , M . C . (1987)' Natural Language Processing in Prolog . 'In : Walker , A .   ( Editor ) A Logical Approach to Expert Systems and Natural Language Process Mg  . 
Addison-Wesley Publishing Company , Inc . , pp .  291-402 . 
Pereira , F . (1981)' Extraposition Grammars . ' American Journal of Computational Liltguistics 7 ( 4 )  , pp .  243-256 . 
P , adford , A . (1981) Tratis Jbrmation Sytltax . The Cambridge\[Jniv crsity Press . 
Sells , P .   ( 1985 ) Lectures on Contemporary Syntactic Theories . Stanford , Centerfix ' the Study of l . anguage and

Stabler , E . P . , Jr . (1987) ' Restricting I , ogic Grammars with Government-Binding Theory . ' Computational Linguistics 13(1-2), pp .  110 . 
Yang , Y . (1987) ' Combining Prediction , Syntactic Analysis and Semantic Analysis in Chinese Sentence Analysis  . ' Proceedings of the l Othlnter rational Joint Conference on 
Artificial Intelligence , pp . 679-681.

