Word Boundary Identification from Phoneme Sequence Constraints in Automatic 
Continuous Speech Recognition
Jo ~ atha ~ tHARRING TON Gord on WATSON Maggie COOPER
The Centre for Speech Technology Research , University of Edinburgh , 80 South Bridge , Edinburgh
EH1 1HN , Scotland.

Th . spaper explores the extent o which phoneme sequence constralnt ' ~ can be used to identify word boundaries in coutinnous speech recog ~ fition  . The input consists of phonemic transcriptions ( without word boundaries indicated ) of 145 utterances produced by 1~espeaker . The constraints are derived by matching the complete set of  3 phonent e sequences that can occur ' across word boundaries to entries in large lexicons containing both citation and reduced h  ) rm pronunciations . Phonemic as similatoxy adjushnents across word boundaries are alse taken into account  . The results show that around 37% of all word boundaries can be correctly identified trom a knowledge of  . ~uch phoneme sequence contraints alone , and ~ hath is figure rises to 45% when a knowledge of one-and two-phoneme words and all legal  , word-initial and word-final , two-pit one loe sequences are taken into account . The possibility of including : ~ uch constraints intim architecture of a corrtinuous speech reeogniser is discussed  . 
I . Introduction
Ti Le identification of word boundaries fl'om continuous speech by human listeners depends  , in part , on an interaction between : prosodic , syntactic and semantic processing , Since , however , ~ his interaction is difficult to model in machines and since some prosodic variables  , uch as sentence stress patterns , are difficult to extract automatically from the acoustic waveform  , the identification of word bmmdaries must often be accomplished by different hinds of processing in continuous  , ~peeci Lreeognisers : one possibility ~ discussed in Lamel & Zue  ( 1984 ) and explored in this paper , depends on the incorporation of a knowledge of ' phoneme sequence constraints  , Phoneme sequence constraints are based on a knowledge of phoneme sequences which do not occur ! word-internally : for ' example  , since there are no words which end in/mg/~at ~ d since/mgl/does not occur word-internally  , a word boundary must occur after / m/ ( Lamel & Zue ,  1984) . Harrington , Johnson & Cooper ( 1987 ) showed that word boundary CVC sequences are often excluded word-internally in monomorphemic words if the pre - and post-vocali consonants are similar : thus  , /s NVN/(N==nasal) , /ClVl / , / fVp / , /g Vld , /zV , iJ , /shVsh/are all exchtded , or are at least extremely rare , word-internally in British English Received Pronunciation  ( top )  . In the study discussed b . ~ low , we extend the investigations of Lamel & Zuei ( 1984 ) anti1larrington et al ( 1987 ) by developing an algorithm for the autmmttic identification o ~" word boundaries from such sequences in a continuous speech recogniser  . 
In the Alvey Demonstrator continuous speech recogniser being developed at the Centre for Speech Technology Research  ( CSTR )  , Edinburgh University ( Figure 1) , the identification of word boundaries from a string of phonemes i accomplished by a chart -parsings ~ rategy which matches the lexicon from left-to-right against a string of phonemic symbols that are themselve ~ derived from the phonetic processing of the acoustic-waveform  . In this system , only cmnplete parsings of the phonemic units are passed to higher ' levels for syntactic and semantic processing  . The only possible parsing , therefore , of the phonemic string/tiiehing wi 1/is teaching + will , since there are noether paths which parse the entire string of phonemes  . 


Parameterised Acoustic Signal ~ bone ~ Rules honeme Stdngt liching wil 
Cba P~/rt-arsing StratecJy
TEACHINGTEE " teaching will
Fig .   1: A schematic outline of the components between acoustic waveform and lexical access in one of the continuou speech recognisers at Ed in burgh University  . 
The relationship between the identification of word boundaries fl ' ompiloneme sequence constraints and the chart-parsing strategy outlined above can be clarified with respect to Figure  1: at all points where the arcs do not overlap , it should be possible to in . ~erta word bour ~ dary from a knowledge of ptloneme sequence constraints  . Since , therefore , the only point at which the arcs are nonoverlapping is between/ng/and/w /  , phoneme sequence constraints stlould apply to insert a word boundary at that point  ( there being no monomorphemic words in the English language that contain a medial/ngw /  )  . At the same time , however , Figure 1 would seem to suggest that the prior " implementation f phoneme sequence constraints i superfluous  , since all word boundaries can he found frmn the chart-parsing strategy  . However , the application of phoneme sequence constraints may enable recovery when the chart-parsing strategy is unable to parse the phonemic string because of the incorrect : derivation of a particular phoneme  . Suppose , for example , that the acoustic-phonetic component incorrectly derives/elng/from the parameter is cd acoustic wave tbrm instead of / ing /  ( Figure 2 )  . 


TEE~~~oi 3   ng--3 w\]ij ERROR : cannot be parsed Fig .   2: The incorrect substitution of ~ oil for / i / makes the above sequence unparsable since/ch oi  ng7 occurs neither word-internally nor across word boundaries  . 

In this case , a left-to-right chart-parsing strategy would break of fat/ch/because / choing / is unparsable : there are no words that end in/chel /or begin with/elrig/and/el/is not usually corrsidered to be a word  ( aside from an exclamation ) in the English language . 
Since the strategy works from left-to-right , he phonemes which lie to the right of this error would also remain unparsed : thus will would not be derived frmn/wi  1/  , unless the chart-parsing strategy were modified in some way to be able to cope with this kind of error  . If , on the other hand , phoneme sequence constraints had been applied , a word boundary would have been inserted between / ng / and / w /  . This would enable immediate recovery from the kind of error described above : in this case  , if the chart-parsing strategy is unable to continue parsing phonemes at a particular point  ( from/ch/to/el/to/ng / ) it can continue parsing from the following word boundary  ( between/ng/and/w / ) that trod been automatically inserted by phoneme sequence constraints  . The prior application of phoneme sequence constraints  , therefore , breaks up a single string of phonemes into smaller units  , whicb , from the point of view of the left-to-right chart -parsing strategy  , are independent of each other . A byproduct of the prior insertion of word boundaries in this way is that the chart-parsing strategy could parse each of these units in paral lel  ( Figure 3 )  . 
Paramet ~ ~
Phonetic Rules , I , menithangks foosendi ~ ngmiidh@kopi@vyoolet@
Phoneme Sequence Constraint Processor #meni # thangks  #foose riding#n~i idh  ( ikopi@v  #yoolet@t Apply Chart-Parsing Strategy in Parallel/////#moni#thangka # foosendlng#miidh@kopi@v#yoolet@  . I . 
mn thanks for ndm\]'mehayse'gt ecopy of your lettev Fig  .   3: The prior application of phoneme sequence constraints would enable the chart-parsing strategy to apply in parallel from all the pre -identified word boundaries  . 
Such a parallel strategy may be computationally faster than one which parses the string strictly from left-to-right  . 
As in Harringt 0n & Johnstone (1988) , sentences transcribed by a trained phonetician are used as the input data  . 
The experiment does not take account , therefore , of any errors which may arise as a result of inaccuracies in the automatic extraction of the phonemes from the acoustic signal by the phonetic rule component of a continuous speech recogniser  . 
2 Method I2.1 Word boundary sequences
In order to identify phoneme sequences which are excluded word-internally  ( and which therefore signal the presence of a word boundary  )  , it is necessary to determine a priori the complete set of three phoneme sequences which can occur across word boundaries  . 
For this purpose , a ' Word-lexicon ' of the 23 , 000 most frequent words ( including many derivational and inflectional morphological variants and compounds  ) in part of the Lancaster-Oslo-Bergen corpus ( Johannson , Leech & Goodluck ,   1978 was used with each word keyed to one citation form and zero or more reduced form pronunciations  . The citation form entry , which is often identical to the one given in Gimson  ( 1984 )  , corresponds to a phonemicisation fan isolated production of the word at a moderately slow tempo  . The reduced forms include variant phonemieisations of the same words which might occur in faster speech productions  . In general , three different kinds of reduction rules are included : alternation rules in which segments deletion rules in which single segments may be deleted  ( / okshn/from/oksh@n / , auction ) ; and word-internal assimilation rules ( / gubbat / from/gudba ~/ , good by e ) . The rules do not take into account phonological assimilation across word boundaries  ( see Harrington , Laver & Cutting ( 1986 ) for further details of the reduction rules )  . The reduced forms were derived from the citation forms by rule using a software package running on Xerox-l  l00 workstations in Interlisp-D ( Cutting & Harrington ,  1986) . After the application of the reduction rules on the  23  , 000 word lexicon , around 70 , 000 reduced forms were derived ( on average , ttmrefore , each word is associated with 4 different pronunciations )  . 
In order to derive the complete set of possible three phoneme sequences that occur across word boundaries  , all final two phonemes ( PP # ) were paired with all initial phonemes ( #P ) of all citation and reduced forms , thus deriving the complete set of PP  #P sequences ( where P is any phoneme )  ; and all final phouenms ( P # ) were paired with the first two phonemes (  #PP ) of all citation and reduced forms thus deriving the complete set of P  #PP sequences  . This pairing operation produced a total of 62 , 670 different hree-phonemes quences . 
Subsequently , it was necessary to take into account some of the modifications to word boundary sequences which occur as a result of assimilatory processes ince  , as stated above , these were not included in the reduction rules . In order to take into account the realisation of / r / in phrase such as/dhe@raameni /  ( there are many ) and ' intrusive/rf ( /dhiiai di@riz / , the idea is ) , the sequences in ( 1 ) were paired with all word-initial vowel phonemes that occurred in the Word lexicon :  ( 1 ) /U@r , e@r , i@r , @ r , @@ r , oor , a ar/thus deriving , for example , /@ r#i/(measure is ) , /aar#au/(farout ) etc . In addition , /r / was paired with all  #VP sequences in the Word-lexicon where V is any word-initial vowel and P is any phoneme  . This pairing operation results in sequences such as/r#iz  , J ( measure is ) , /r  #aut\](far " out ) etc . 
In order to account for the assimilation of alveolars to bilabials preceding bilabials  , all PPt #sequences ( where P is any phoneme and Pt is one of / t , d , n /) were extracted from the Word-lexicon . Final/t\] , /d / , / n/were thn changed to / p/ , / b / and / m / respectively ( thus the PPt  #sequences / itt #/ , / itd #/ , / it n #/ were changed to / it p #/ , / itb #/ , /itm#f ) . The changed sequences were then paired with the labial consonants/p  , b , m , f , v , w / . This pairing operation produce sequences such as / itp  #b /  ( eat by )  , /onm  #f / ( shown few) , ~@@ m#w ~ ( burnwood ) . 
A similar procedure was used to take account of the instability of some of the alveolars before palatals and velars as shown in Table  1 below . 
/s/to/sh /: oosh#shsh#shuu ( horseshoe ) /zJ to/zh /: izh#shzh#shu@ ( issat'el/t/to/ch/:ach#yeh#yoo ( at your ) /d/to/jh / : ijh#yjh#yuu ( did you ) It/to/k/:aik#kk#kuh ( might come ) / dJ to / g / : i ig  #kg  #k 1 ( need cleaning ) / n/to/ng/:eng#kng#ka ( when can ) Table I : Sonm of the word boundary assimilation cases considered in the derivation of word boundary sequences  . 
Consideration was given to some deletion rules across word boundaries such as the deletion of the alveolar stop in/faa  . q#spiiclrt , ( fast speech ) . In this case , a coraplete list of three-phoneme sequences occurring word-finally was made from the Word -lexicon where the penultimate consonant was a fricative and the final consonant an alveolar stop  . The final alveolar stop was deleted and tile resulting two  . phoneme sequence wast mired with all members of iI ' P  ( thus/aast #/ ( j ' hst ) ->/ a as #/ ( first ) ->/ a as #" , ;/ , / b , s t speech ) . All wm'd boundary sequences which resulted frmn the inclusion of these assinfilation rules were added to the previously derived P#PP arm  I'P#1   ) sequences , thus producing a total of 69 , 819 wla'd boundary sequences . 
2 . 2 Word boundary sequences excluded word-lnl:m 'nally We new wished to determine which word boundary sequences do not oecm " word - internal ly  ( since the seenable tile automatic detection of a word boundary  )  , tlowcver , it is clear fi'om the phouolog3 literature ( Fudge , 1969; Cleruents & Keysm' ,  1983 ) that sequential constraints on phonemes are l to t upheld aeross many morpheme boundaries  . For example , it is well documented ( Rockey , t97a ) that mdy alveolar !; and palato-alvel . lars mayfi )\] low/au/(town , h)wl , couch) . Batretch a constraiot is no tupheld word intern v . llyacrosq then loFphetne boundary in a coln pollnd such a ~  ; eew &) y , /kauboil Similarly , /uuartl/does uot occur morpheme--internally , hut does occur in componnds such as throughout . Since the Word-lexicon include ~; compounds , sequences . ' in chas/an aut/would be considered to occm word -- internally alnd would the rel brc be excluded fl ' om the list of phmlemes eqoence coustraiuts that enable the autenmtic detection of a word b  ( madary fi'o mast ring of phonemes Bnt this has the unfortunat effect that a word boundary would not be inserted in the sequem : ethroughouter  , /thrau all t00/ . Since i Il fact we prefer word bo and a ) ' ies to be it , serted wherever possible , all coal potw-d~were removed from the Wet'd -lexicon  , m ; are snlt of which/uuau V wotd d be included as a possible phoneme sequence e on straiut  . Cousequeatly , we would expect a word bonn dary to be inserted in both throughouter and throughout  . This implies either that tL roughout must best m ' edits/thruu#aut / in the lexie ou which tile chart-parsing strategy matches against the phonemic string  , or else that morphoh ) gical rules must apply after the phoueme : m ( tuen cc constraint processor to \[' ell ~ . ove the medial  #in throughout . 
A similar argument applies to inflection alnt m ' pheme boundaries  . \[" or example , /nths/is excluded morphmneinternally hut does occm " a cross stem/inflectional suffix boundaries  ( months )  . 
For the reasons outlined above , morphoh ) gical variants with regnlar inflections ( plm ' ah ;  , present and past tense sufti?es ) were removed from the Word-lexicon . Exeludiag these inflectional morphological vm ' iants has the  ( undesizable ) effect that at ) oundary will be inserted between/th/an ( t / ~ in three months time , /thriilau hnth  #staim / . lIowcver , some inflectional morphological rules , which apply after the phoneme sequence constraiu ~ pr  ~  ) ces~q or , aedesigned to conver these boundaries into morpheme  ( M ) boundaries ( see section 4 below )  . 
Finally , it is also the ease that many sequences that are excluded monomorphemicully  ( e . g . /meisI ~ ) can occur word-internally in derived morphological variants  ( /konf@meish@n / , confirmation ) . A similar ease could be nlade for renmving derivational variants\[i '  ( uatim Word-lexicon and applying morphoh ) gieal rule storm a ovethe//t ) oun ( hu'y from sequence such as / konf@m / ? eish ( u )  . n/which would result after the applicatiou of the l  ) hlmeme sequence constraint processor . However , deri , /atioual variants were not removed , in part ducI ; othe complexity of the interaction between the inflectional and derivational nmr phological rules that would have to apply after word boundaries had been inserted automatically  . 
Only compounds and regular morphologically inflected variants were removed from the Word -lexicon  ; hence t brth , the resulting lexicon with such entries removed will be referred to as the Morpheme  . lcxicon . ' Uhe Morpheme-lexicon coutained around 12 , 0110 h ; xical entries alter the semori ) t to logl cal variants had been ~ elaoved from the 23  , 000 Word-lexicon . 
All word boundary sequences , including those which account for the ass in fi latory processes described in  2  . 1 , we replaced in one file and the medial word boundary symbol was removed  . After all duplicate entries had been renmved , the resulting filc was matched agains the Morpheme-lexiconi order to determine which boundary sequences do nutoccur ' morphenm'- internally  . The matching algorithm for this purpose was a UN iXs hell script run nin  , g . on a 12 mBM as seomp : it outputs the frequency with which the word boundary sequences occur word -irtternally in a given lexicou  . 
2 . 3 The word boundary identif ication a lgor i thm All word boundary sequences which did not occur ' umrpheme'-ini:ernally were compiled into a discrinfination tree in which  , working from left to right , common phonemes share identical branches . At the end of each branch , an instruction is included for where the boundary should be inserted if the : ~ equencc is found in an input l  ) honemic string ( Figure 4 )  . 

MAT Cllt REEAG AIN5 TPHONEME 5 r/ZING
PIP2PaIP , I1'5I'll 11711R ......
IN$t : RTANYBOUNDARIE$
PI 1'2 #P3P , l1'5 Pt~1'7118....
SHIFtWIN ~ OWONEPJIONEME
AND MATCIIT REEAGAINST PltONE MESTRING , , , I ; :::; :\] .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
Figure 4: The tn ' oeess by which the tree containing the ptm neme sequence constraints i matched against a phonemic input  . 
In the case of/dba / , tilt " example , the boundary must be inserted after/d\] , since there are no entries in the Morpheme Aexicon with final/db/  . t to wever , since there are entries that both end in / dh @/ and begin with /  ( a ) d / , /dh@d/cannot be unambiguously parsed : in this case a '?' is inserted after the first phoneme of the word boundary sequence  . /dh?@d/nmans , therefore , that awm ' dhoundary occurs either after / dh / , or after /@/ . 
For any given input phonemic string , the algorithm matches three phonemes at a time agains the tree  ( Figure 4 ) fi'om left . .to-right hrough the string . If they match , a boundary is inserted at the appropriate place . Subsequently , the fixed window of three phoneme shifts one phoneme to the right and the new sequence is matched in the same way  . Thus , the matching algm'ithm steps through the input string one phoneme at a time with a window width of three phonemes until the end of the string is reached  . 
Phonemic transcriptions ( excluding stress or boundary symbols ) were made hyatrained phonetician of 145 sentences produced by one lipspeaker . '\[' heaverage numbers of words per utterance and phonenms per word were  10  . 73 and 4 . 04 respectively . The sentence sw cve taken from a ' phonemically balanced'passage constructed f ~ r the speech recognition project at Edinburgh University  ; sentences from Section It of the Lancaster Oslo -Bergen corpus  ( Johannson , Leech and Goodluck ,  1978) ; and sentences fl'om a corpus of businessdic tation collected at CSTR  . The transcribed sentences , which clearly do not contain any errors that could have arisen as a result of phonetic processing of the acoustic waveform by a speech recognlser  , were input to the algorithm schematically outl ined in Figm'e  4  . 
2273. Results I
The statistics on the automatically inserted # boundaries are shown in Table If  . 
Target number of word . boundaries
Total number of inserted  #I ~ o ~ m dar lee 592"  #correctly inserted
Remainder 69 l~edaced forms net accounted for
Lexical items not accounted for 7\]
Corresponding to morpheme boundaries 44 . ~ Table II : Word boundaries automatically inserted in the  145 phonemically transcribed utterances . 
The results show that 523/1411 ( 37% ) of the target word boundaries were correctly detected  . However , there were 69 automatically inserted  #boundaries which did not correspond to word boundaries in the original utterances  . Of these ,   14 were incorrectly inserted because of the presence of reduced phonological forms in the utterances  ( e . g . / w@dh \] for with ) which we had failed to generate by rule ; and 7 were inserted because some words occurred in the utterances that had not been included in the Word -lexicon  ( most of these were proper names )  .   44  #boundaries were inserted at morpheme boundaries  , both in compounds ( / hau  #ev @/ for however ) and preceding inflectional suffixes ( /si'm#z/for seems )  . In the next section , some morphology rules ale described which attempt to conver the  #at stem/suffix boundaries in cases uchas/sim#Z\]into morpheme boundaries  . Finally , 244'?' were inserted at appropriate points ( i . e . for each/P ? QPJ , where/PQR/are phonemes , either/P  #QP , /or/PQ  #PJ occurred in the original utterances . The next section also describes rules for converting some of these '?' boundaries into definite  #boundaries  . 
4. Method II 4.1 Morphology rules
The phonemic strings with the word boundaries inserted by the matching algorithm in Figure  4 are input to a second stage of processing which uses four additional sources of knowledge :  PHON1 and PHON2   ( a list of all one and two phoneme words in the Morphology-lexicon  ) and  #PP and PP # ( a list of all legal word-initial and word-final two phoneme sequences  )  . Since these data are extracted from the Morphology-lexicon  , they take account of phonologically reduced variants  , but not the morphological variants that were excluded from the Word-lexicon  . 
The morphology rules test whether the two phonemes that occur to the right of an automatically inserted  #are legal with respect o  PHON1  , PHON2 ,  #PP and PP # . If they are not , the assumption is made that the  #occurs across a stem/inflectional morpheme boundary  . Morphological rules are then applied to shift the  #to the correct place  , if possible . Consider for example , the phrase boys and girls in . . . which , after the application of the first is tage of processing  , was analysed as: ( 2 ) boi  #zan?g@@l#zin The insertion of the word boundaries at this first stage of processing is attributable to the fact that neither/boiZ\] nor/g  . .@@ . .1 . .z / occurred in the Morphology-lexicon . Furthermore , since there are no words that begin with/elZ\] nor/1 z / , the relevant sequences would be stored as/boi # Z \] and /@@  1  #z / in the tree in Figure 4  . The following test is now performed on the two phonemes to the right of the first  #in  ( 2 ) :  ( 3 ) If/za / is not in  #PP rewrite/el#za/as/el Mz  #a / else rewrite/el#za/as/elM?za /  . 

Informally ,   ( 3 ) states that if/za/cannot begin words ( according to the Morphology-lexicon )  , /z/must be an inflectional suffix of the previous word : therefore place an'M'  ( morpheme boundary ) before/Z\] and shift the  #symbol to the right of/z\]  . Alternatively , if/za/does begin words in the Morphology -lexicon  , it is impossible to determine whether/z/is a plural suffix or the first phoneme of a following word  . In this case , M ? is used to denote these two possibilities : it is an abbreviation for either/el Mz  #Mor / el#za /  . In fact , since there are no words that begin with/za / , (2) is analysed as/Mz#a\] . A solution with M ? would occur if boys are were analysed at the first stage of processing as:  ( 4 ) boi  #zaasince in this case/Z\]can also be the first phoneme of a word  ( Csar . 
A test is often performed with respect o PHON1 and/or PHON2 rather than  #PP . This occurs in the following example , in which two  #symbols have been automatically inserted in close proximity at the first stage of processing :  ( 5 ) big in  #z@#taip # ( begins a type ) In this case , a test is made to determine whether/z@/occurs in  PHON2   ( i . e . whether it is is a two phoneme word . Since it is not , (5) is reanalysed as/b . ig in Mz #@  #taip #/ . 
The test in ( 3 ) above is only made if the structural description of phonemes to the left and right of the  #is met by certain conditions  . Specifically , the test is performed in contexts such as those given in Table IIL 
PASTTENSE p , k , f , th , s , sh#t(tapped , missed , wished ) voiced phonemes x cluding/d\]#d ( paved , seemed )
PLURAL S/PRESENTTENSE p , t , k , f , th#s(mats , picks , meets ) voiced phonemes x cluding/z , h , jh/#z(tabs , sings ) Table III : Some of the contexts in which the morpl mlogy rules apply  . 
4.2 Resolving Ambiguities
The four sets of data PHON 1 , PHON2 ,  #PP and PP #are also used to convert some '?' symbols into definite  ( # ) word boundaries . In order to resolve the hypothetical ambiguity / ABC ? DEF/  , for example , it is first expanded into the two possible cases it represents in  ( 7 ) and ( 8 ) below : ( 7 ) ABC  #DEF ( 8 ) A BCD  #EF An attempt is then made to prove that either  ( 7 ) or ( 8 ) is illegal ( on the basis that , if (7) is illegal , ABC ? DEF must correspond to the representation in ( 8 ) and vice versa )  .   ( 7 ) can be proved illegal if ( 9 ) is true : ( 9 ) Either C is not in PHON1 and BC is not in PP  #OrD is not in PHON1 and DE is not in  #PPAn in formal interpretation of  ( 9 ) is the following . If C is not a one-phoneme word , test whether BC is a legal two-phoneme sequence that can end words  ; if C is not a one-phoneme word and BC cannot end words  , then (7) must be illegal . Otherwise , if ( 7 ) i cannot be shown to be illegal on the basis of the phonemes that precede #  , the phonemes that follow #are considered . In this case if D is not a one-phoneme word and if " DE cannot begin a word  , (7) must be illegal . Otherwise ,   ( 7 ) cannot be shown to be illegal and so the following  ( similar test is applied to ( 8 ) :  ( 10 )   ( 8 ) is illegal if : Either D is not in PITON1 and CD is not in PP  #OrE is not in PHON1 and EF is not in  #PP . 
If neithm ' (7) nor (8) cat , be proved illegal , the '?' cannot be resolved into # . 
When two '?' symbols occur in close proximity , an expansion is made into for e " alternatives . If t : hree of the alternatives can be proved illegal  , both '?' symbols can be resolved as definite # symbols  . For exmnple , after the first stage of processing ,   ; aeasuring the gun was analysed as: ( 11 ) /me~hring#dh?@?guhn/This expamt : ~ into the following alternatives :  ( 12 ) /rnedlring#dh#@#guhn / . 
(13)/mee , hring#dh#@g#uhn / , (14) hnedtring#dh@ guhn / . 
(15) hnezhring#dh@#g#uhn/.
(12 ) and ( 13 ) nmst be illegal since hlh / is not a one- . phonenm word ( (13 ) is additionally illegal since /@ g / is not a possible two-phoneme word  )  .   ( 15 ) is illegal since / g / is not a one-t ) honeme word . Theretore ( 14 ) is the only possible analysis of ( 11 )  . 
This type of expansion into four possibilities is only made when  3 phm temes , or fewer , occur between the two '?' symbols : if more than three phonemes intervene  , the result of resolving both ? symbols together is the same as if each ? symbol were considered separately  . 
Finally , the example with two '?' symbols in ( 11 ) is extended to the general ease in which n '?' symbols occur in close proximity to one another  ( i . e . a series of n '?' symbols with 3 , or fewer , l ) homanes between successive '?' symbols ) . These expandi ~ to 2n alternatives . As in the example above , if 2n-lalter natives can be proved illegal , all r ~'?' symbols can be converted to  #symbols . 
4.3 Order of rules
After : the application of the first stage of the word boundary in  . .~ertion rules , expansion rules apply in which each '?' symbol is e~panded into two alternatives  . The morphology rules apply to each of these expanded alternatives and at all other points in the utterance at which their structural description is met  . 
Only after ~ ; he morphology rules have applied can any of the alternates be eliminated  . The morphology rules must apply before eliminat ing alternatives  , othm ' wise some alt m ' natives might be incorrectly eliminated  . This can be illustrated with the example boys and girls which  , after the first stage of processing , was analysed as/boi#zan?g@@1#z/ . This expands into: ( 16 ) boi#zan#g@@l#z ( 17 ) boi  #zang#@@l#z If the elimination rules applied prior to morphological rules  , both (16) and (17) would be eliminated , since/za / is not in  #PP ( and ( 17 ) is illegal since/ng/is not in PP # )  . I ~ , on the other hand , the morphology rules apply first ,   ( 18 ) and ( 19 ) would be derived from ( 16 ) and ( 17 ) respectively : ( 18 ) boi Mz  #an  #g@@lMz# ( 19 ) boi ~' fz#ang#@@lMz#Only ( 19 ) would be eliminated , on the grounds that/ng/is not a legal two -phoneme sequence occurring word-flnally  . 
A further illustration of the interaction between the expansion rules  , morphological rules and elimination of alternatives i shown in  ( 20 - 33 ) below . After the first stage of processing , months tie ( from a sentence in a gardening manual , ' after a few months , tie in more growth ' ) was analysed as/muhnth ? st?ai / . This expands to four alternatives : ( 20 ) muhnth#st #ai in ( 21 ) muhnth#stai  #in ( 22 ) muhnths  #t  #ai in ( 23 ) muhnths  #tai  #in Morphology rules are applied to the four alternatives :  ( 24 ) muhnth Ms  #t  #ai in ( 25 ) muhnth M?stai  #in ( 26 ) muhnths Mt  #ai in ( 27 ) muhnths M?tai  #in ( 25 ) and ( 27 ) are further expanded in totim two alternatives they represent  . This given a total of 6 alternatives : ( 28 ) muhnth Ms  #t  #ai in ( fl'om ( 24 ) )  ( 29 ) muhnth Ms  #tai  #in ( from ( 25 ) )  ( 30 ) muhnth#stai  #in ( from ( 25 ) )  ( 31 ) muhnths Mt  #ai in ( frmn ( 26 ) )  ( 32 ) muhnths Mt  #ai  #in ( from ( 27 ) ) ~' ( 33 ) muhnths  #tai  #in ( from ( 27 ) ) In el iminating the alternatives , a slight modification has to be made to the rules : rather than referring to two segments to the left and right of #  , they refer to the two segments to the left of an M symbol  ( if present ) and to two segments to the right of # . But the segments that intervene between an M and  #are ignored  . The following test would therefore be made to test the legality of  ( 29 ) :  ( 34 )   ( 29 ) is illegal if : l , \] ither/th / is not in PITON1 and/nth / is not in PP #
Or/tai / is not in P\[ION2
It is possible to eliminate ( 28 ) since / t / is not in PIION 1 .  (31) ,   ( 32 ) and ( 33 ) can be eliminated since/ths/does not occur in PP #  ( final/ths/occurring only across a stem /inflectional suffix boundary  )  . 
(29) and (30) remain , and are collapsed into one representation i ( 35 ) using the M?notation : ( 35 ) muhn thM ? stai  #inTim analysis shows therefore that/in uhn th?s t?ai/corresponds to either months tie in or months ty in  . 
5. Results II
The statistics on the automatically inserted # boundaries are shown in Table IV  . 
Target number of word-boundaries 14 11
Total number of inserted  #boundaries ? 690  #correctly inserted 645 
Remainder 45
Reduced forms not accotmted for 14
Lexlcal items not accounted for 10
Corresponding to morpheme boundaries 21
Table IV : Word boundaries automatically insm'ted after the application of the morphology  , expansion and elimination rules . 
; The results show that 645/1411 (45 . 7% ) of the target word boundaries were correctly detected  . This is an increase of around 9% compared with the result obtained prior to the application of the rules described in the preceding section  .   24  #boundaries were inserted at inappropriate points  , either because of the presence of had not derived by rule  , or because of lexical items that had not been included in the word-lexicon  . All 21 inserted  #symbols that corresponded to morpheme boundaries were inserted medially in compounds  ( e . g . how  #ever , there  #for e ) , while all automatically inserted  #symbols that had occurred at stem/inflectional suffix boundaries  ( /s . .i . .m . .# . .z / for seems ) were converted to M or M ? symbols using the morphology rules described above  . 
An approximate measure of the probability of a word boundary being incorrectly inserted can be made as follows  . 
Firstly , since it was our intention that the algorithm should insert  #symbols not only between words but also within compounds  , the target number of boundaries to be identified can be considered to be  1411   ( the number of word boundaries in the utterances ) plus 78 ( the number of boundaries occurring within compounds  )  , i ' . e .  1489 . 
Of these ( see Table IV ), 645+21 = 66 (44 . 7%) were correctly inserted . The probability of a word boundary being incorrectly inserted  , either as a result of a reduced form which was not derived by rule  , or because of the omission of a word from the
Word-lexicon , is given by : (36) (24/(666~-24) x100)% 6 . Discussion - - - 3 . 5% . 
This study has shown that around 45% of all word boundaries can be correctly identified from a knowledge of three-phonemes quences that occur across word boundaries but which do not occur word-internally together with a knowledge of one-and two-phoneme words and all two-phonemesquences that can begin and end words  . The result is based on hand-transcriptions which can be considered analogous to the phonemic strings that would be extracted automatically from the acoustic speech signal if the recogniser made no errors in this derivation  . 
A current area of investigation is to identify the set of phoneme sequences which occur neither " across a word boundary nor word-internally  . Such phoneme sequences can be easily obtained from the datasets discussed in this paper and they would enable errors to be detected in the acoustic-phonetic stage of processing in a continuous speech recogniser  . Some examples of these sequences are given in ( 37 ) :  ( 37 ) /1 zng / , / aadhl / , /ewn/For example , /ewn/must be illegal since it does not occur word-internally and because it does not occur across word boundaries  ( both/e#wrd and/ew#n/must be ruled out on the grounds that there are no words which end in / e/or/ew /  )  . The incorporation of this kind of knowledge would enable an error to be detected ff such a sequence we rederived automatically after the acoustic -phonetic stage of processing  . 
7. References
Clements G . N . & Keyser S . J . (1983) CV Phonology . A Generativ ~ Theory of the Syllable . MIT Press : Cambridge Mass . 
Cutting D . & Harrington J . M .   ( 1986 ) Phongram : a phonological rule interpreter . In ( Lawrence R . ed . ) Proceedings of the Institute of Acoustics ,  8 ,  461-469 . Institute of Acoustic : Edinburgh . 
Fudge E . C . (1969) Syllables . Journal of Linguistics 5, 253-286 . 
Gimson A . C .   ( 1984 ) English Pronouncing Dictionary ( Revised edition , originally compiled by D . Jones ) . Dent : London . 
Harrington J . M . & Johnstone A .  (1988 , in press ) The effects of equivalence classes on parsing phonemes into words in contiuuotm speech recognition  . Computer Speech & Language . 
Harrington J . M . , Johnson I . & Cooper M .   ( 1987 ) The applicatiot ~ of phoneme sequence constraints o word boundary identification in automatic  , on tinuous speech recognition . In ( Laver J . 8r . Jack M . 
eds . ) European Conference on Speech Technology , Vol .  1, 163-166 . 
Harrington J . M . , Laver J . & Cutting D .   ( 1986 ) Word-structure reduction rules in automatic , continuous peech recognition . In Proceedings of the Institute of Acoustics ( R . Lawrenceed . ) 8, 451-460 . Institute of Acoustics : Edinburgh . 
Johannson S . , Leech G . N . & Goodluck H .  ( , 1978 ) The Lancaeter-Oslo/Bergen Corpus of British English  . Department of
English , Oslo University.
Lamel L . & Zue V . W .   ( 1984 ) Properties of consonant sequences r within words and across word boundaries  . Proceeedings ICASSP 42 . 3 . 1 - 42 . 3 . 4 . 
Rockey D . (1973) Phonetic Lexicon . tiey den : Oxford . 
8. No~s
The CSTR Machine Readable Phonemic Alphabet for BP
Iplpea Igfan /11 lee~hi bead tv/van It ~ road
It ~ tea/th/think/w/win/w~uy/d ~ V_hen/y/y_oa/k/keyis/s_ing/m/man 
Igl gay I ~ zooin/name/ehlchew/sh/shoe/ ng/s-/ng/jh / ~ udge/zh/measur ~ / h / hatliil we Iol/totleilsta~li/hitIoo/ sa_ww laysigh ~ el headlu/could_  . . ~ oil toy / al had / uu / who / au / now / aal har_dI@/the/ou/go/i@/here/u@/sure / e@/there /@@/ first This research was supported by SERC grant number  GR/D29628 and is part of an Alvey funded project in continuous peech recognition  . Our thanks to John Laver and Briony Williams for many helpful comments in the preparation of this manuscript  . 

