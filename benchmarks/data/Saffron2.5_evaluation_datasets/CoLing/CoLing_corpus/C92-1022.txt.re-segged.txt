Chart Parsing of Robust Grmn mars *
Sebastian Goeser
gsr@dh dibml.bitnet
IBM Deutschl and GmbHoGADL
Hans-Klemm-Str .45
D-7030 Bfblingen
1 Introduction
Robustness is a formal behaviour of natural lang at age grammars to assign a best partial description to linguistic events wl tose strong description is inconsistent or cannot be constructed  . Events of this sort may be called defective with respecto a grammar fragment  . 
Defectiveness arises from the performance use that hn man beings make of language  . Since de-fectiveness can be seen as failure of linguistic description  , the principal way to robustnessia method to weaken these descriptions  . 
Robust parsing , then , is parsing of robust granmmrs : a parser is robust iff it has the ca-pabillty to interpret weak grammar fraKments correctly  . In this paper , I shall try to substantiate this claim by motivating a grammar dependent approach to robust parsing and then describing a chart parsing nlgorit brafor ro ~ bustg  .   .   .   .   .   .   .   .   . rs . Though only c ( on text ) f ( ree ) grammars will be adressed , there is an obvious extension of the algorithm to annotated  ( unification - ) grammars ( WACSG formalism , see Goeser 1900 ) along the lines of ( Shieber 198 ~ )  . 
Grammar based robustness tools have been explored in a variety of formalisms  , e . g . the metarule device within the ATN formalism ( Weischedel and Sondheimer 1898 )  , entity data structures in a case frame approach ( Hayes 1984 ) or the weak description approach in unification based grammars  ( Kudo et al 1988 , Goeser 1990) . Parsing cf grammars with ro-?The work reported has been done while the author received an LGF grnnt at the University of Stuttgart  . 
bustness features competes with algorithn fic approaches to robustness where parsing algorithms  ,   ( usually chart parsers except in Tomabechi and Tomita  ( 1988 ) where LR ( k ) parsing is advocated ) are extended to in-elude robustness features ( Mellish 1989 , Long 1988 ) and/or heuristics to handle defect cases ( Banger 1990 , Stock et al 1988) . 
Maybe the most critical issue in robust parsing is ambigatity  , which emerges when constituency is loosened to some cf substring analysis  . E . g . 
Mellish (1989) p .   .   .   .   . for acf gG the ( cf ) set PAR ( G ) which is the set of all strings contain ~ ing a sequence of nonempty substrings which is in the cf langqtage L  ( G ) IIn the worst case scenario where all these seqaences are in L  ( G )  , we get for a wEL ( G ) with an ambiguity k ( in G ) an exponential mbiguity of kx 2   I'1 as mx upper bound . Even in a non-worst cast , which should be the case of realistic cfgs , local ambiguities from substring analysis massively increase parsing time  . E . g . in the ( non-defective ) example 1 , the arcs a , b , care empirically valid while the arcs d , e are artefacts of m ~ algorithm parsing PAR(G ) . 
1See Goeser (1990) for a more formal discussion of

ACRESDE COLING-92 , NANTES , 2328 AO13T1992120 PROC . OFCOLING-92, NANTES , AUo . 2328, 1992 ( i )

Peter?1 a bring stat2bInice " 4gift,~toes
A Mary ? r
Reflecting syntactic defectiveness in acfgmetros to n-~sigq tia coxt figtlrational regular-Sty  . Obviously , there is syntactic defectivity which is syntactically nonregalar  , such as cor-raq~ted output from a speech recognition device  ( Tomabechi and Tomita 1988 ) ~ or global constituent breaks ( Goeser 1991 )  , which can be subjected to syntactic prefix analysis only  . 
On the other hand , there are spoken language constructions ( Lindgren 1987 , Goeser 1991 , Langer 1990 ) and various kinds of " fragmentary utterances " ( Cn rbonell and ltnyes 1983 ) that definitively show configurational properties . 
Let us look at ~ frequent spoken language construction called restart  , as in the Germml colpuse xmnple(2) ~ . ll . estarts follow a pattern < c ~/3 , , 4   /~3' > where the strings c ~ and 7 but not/5 and f ~' may be empty . The restart marker A is optional : in 67 from 96 restart smnples/3  , which mostly ends in a constitnent break , and /3' were separated phonologically by tone constancy , a short pause or without any marking at all 4 . Restarts are a kind of constituent coordination not a Uowing for ellipsis phenomena such as gapping  , left deletion , split coordination or sluicing . The ~ substring is usually dective and may indeed contain arbitrary noise ~ This mnt ~ riMwmy Jllow phonologl cM regulariliea  , of courlcs All coxplls evidence reported hereia psychothera-peutlc discourle frott~tire ULMER TEXTBANI  ( t  There for % I Janger ' l ( 19 Ofl ) rettar the mrkt lc steems empirically iltadequate in a afnratit pomtt date $ alyn-tactic restart marker  . 
( see e . g , example (3)) ~ (2) da\[isesd .   .   .   .   .   .   . dteinAthere\[isit then stillaAkmnmtnoch einanderesProblemhinzu \] comes yet another problem to-that \]  ( 3 ) der Peter\[hatkonnted as dieses de shalb the Peter\[has could the this therefore ehemaligen Lieferwagenformertruck 
A hat dasgek auft\], . 4 has it bought \] 2 ltee ursive partial string grammars Reenrslve partial string grammars  ( RPSGs ) are cfgs with a set of start symbols and with rules whose lefthand side may be indexed with the keyword SET  , SUB , or PAR . The SET index on a rule '! tits licenses the adjl metion of any start symbol to the right or left of its RHS string  . The SUB index licenses arbitrary terminal strings to the right or left of the indexed symbol's lexied projection  . The PAR index includes SUB and addition Mly licenses any terminal strings within this lexl cal projection  . 
( Left and right sided indices SETL , SUBL and SETII , SUBR , respeetively , are also in use ) . In a derivation relation -- ~ , for RPSGs an indexed symbol A , runifies with category A to give Aw Formally , SET adjnnetion participates in the cf derivation relation  , while SUB and PAI lare interpreted by a recursive generation function genoperating on derivations : where to is a derivation  , tits tree structure , Cat ; ~ d the set of indexed or non-indexed non-ternfnals and Lea : the set of terminals  . The x-ample deri * ation tree (4) shows , SET adjune-tion ( dotted llne ~ ) and areas where arbitrary tFor a more thorot ~ h dla cutllon of reitart * yn tax  , lee Goe 0er (1991) . 
ACRESDE COLING-92, NAN a1 . : S , 2328 AOOi " 1992121 PROC . OVCOTING-92, NAh"rES , AUO .  2328 , 1992 sabstrings m ' elicensed by an indexed node . 
Generally , local arbitrariness within a string may be rally modened with an RPSG  . Though finite cf ls a returned into infinite ones through RPSG indexing  , the syntactic description with RPSG is still configurational up to certain local adj nr tc tiorts  . 
3 Basic algorithm
As a parsing algorithm to start from , Earley's (1971) chart parser has been chosen , which h~-s a topdown component adaptable to the topdown percolation of irt dexinfornmtion  , and which guarantees a worst case complexity of O ( n  ~ ) even form naximal mbiguity . We use the declarative Earley variant inD/irre ( 1987 )  . For acf gG = < Cat , Lex , P ,   , qset > , where Cat is a set of nonterminals , Lezaset of terminals , Paset of rules and , q set a set of start symbols , it is charact , ;ri~ed by the fonowing predictor concept : * the predictor is a relation D  ( i , A ) Cn+xC , albetween a vertex i < n and artort-termirtal . ,4 . It is integrated into the completer and scanner components  ( see below )  , Tlf is has the advantage that no cyclic items i . e . items with an empty string of parsed symbols , have to be asserted to the chart . 
* initialization is the special predictor case
D(0, S ) where 6' is a start symbol.
Let V = CatULe : e , A --* , ~flEP and 0 < i < j ' < n . Chart\[i , j \] be the set of arcs between vertices i and j and ~ be the transitive cover of the derivation relation  . Then every item in the chart may be characterized by the following membership condition  6 which respects both topdown ( TD ) and bottom-up ( B U ) information . Remark that for the ( basis variant of the ) Earley algorithm , while item n rembership depends on topdown predictor information  , the acceptance of inpnt strings is independent of the predictor  ( Kilbury 1985 )  . 
A - - ~ . BcC , hortli , j \] iff ~ JecDSrre 198'T \[TD\]~SES setS-*~wO'~A ~ A\[BU\]~~~~~~~~~~~~~ , - ~ where ~5 ~ V~4 The RPSG variant 4 . 1 Item Concept h ~ the RPSG variant , items are represertted as
PROLOG facts item ( lumber , Lind , Jirtd , LRS,
Pazsod , To_Parso ~ R of List ) where item number , the-possibly indexed-lefthand symbol , the list of parsed symbols and the list of symbols yet to parse are wellknown item parts  . The variables Lind and Rind representile status of snb stringeneration to tlleleft and to the right of the Parsed string  , respectively . Lind  #Rind is possible ven for the SUB index , since items represent prefix information on a constituent  , whereas a PAR index always effects Lind--Rind . Partial string information from higher nodes , which is justified only within the appropriate derivation  , nmst be distinguished from SUB or PAR indexing of art item's LHS symbol  , which rt lways licences arbitrary substrings . To allow reconstructior t of a derivation , RefList records the pairs of items ( or pairs of rule and item , see below ) an item is completed from , or it equals lex for lexical items ' r . To state the chart membership con-dillon of the RPSG variant  , weg , ~ , eralize the hnction gent on at argnment pair of strings of terminals and possibly index edrt on -termirtals : gen*'W  4  ~  0  , l where gen * ( cq/~ ) =\] iff ~3 can be generated from c~lad ) The RPSG membership condition , then , is:
A~---~c~ . fiCChart\[i,j\]ifflion , teee , g . Doerre ( 198"/ ) for a discussion ACTESDECOLING-92 , NANTES , 2328 Aofrr 1992122 PROC . OFCOLING-92, NAr CrES , AUO .  2328 ,  1992  ( 4 ) = Peter':elf ~' ~ denPeter ~ gefaellt- - A ' interessiert die Schulese hr\[TD\]  3S Eb'set . , atle . *( S ,   ,   ,   , ?'; A , ~) = 1^where c ~ , fl , ,g ? (~ , , . ~)" 4  . 2 The Pred ic tor The predictor of the RPSG variant s is  , again , a relation over vertices and nou-tern finals . \] ha contrast to the basis variant , however , a null predictor would be incorrect for the RPSG variant  , since the acceptance of a string now depends on the substring information percolated by lhc predictor  . The . first predictor clause allows an " initialisation " for every vertex  . The second clause formulates the expectation of a nonterminal A  , I by an active item i . e . 
an item with a nonempty llst To-Parse , and the tltird the expectation by passive items with a SET index  . Clause 4 expects a start synd ) ol on the basis of left adjunction to a SET indexed symbol  . The following proposition , a proof of wbid ~ is available from the anthor , states the correctness of this predictor formalization  . 
.?en * ( S ,   , o "' ~ A , ~ g ) = 1 iffD(i , A , , ) for a S E Sseti , , , l4 . ~ The Completer The completer component integrates the predictor relation and the substring generation function and has two rules for right side and ~ see Appendix A for a complete formal characteri-t ~ a tion of the RPSG chart parser lefts ideml junction under a set-indexed symbol  . Given that the conditions in the if-clause ( and the lookahead condition , see below ) yield , tlte completer adds new items to the chart 9 ClanscI of the RPSG completer , is , up to the generation function instead of derivation  , equivalent to the completer of the basis vari-t ~ nt : Given a right sl depassive item  , it adds a new item both for a matching active item and for the prediction of an appropriate rules's LtlS symbol  . Tltus , nocyclic items have to be created . Furthermore , since RPSGs do not have productions , there is no need to handle cyclic items at all . Clause 2 does riglits ld-ndj nnc-lion of a start symbol i tem to a passive SET indexed item  . \]ht left a ~ unction according to clause 3 , the adjoined ( passive ) item can again be licensed both by another ( active or passive ) SET indexed item or by the predictor relation . 
4  . 4 Scanner and Lookahead ~ illCe tile scanller conlponellt l IIS ~ v ~-  ) ebeen as n lexical case of the completer ,   ) h ~ RPSGal-gorithm could be reduced to a single active completer component and the controlling relation D  ( Kilbury 1985 )  . Remark thaithescan-net alows for IIPSG rules with RtlS strings of terminals and non -term in Ms  . A partial looks-head of 1 , being applied to active items only , has proven advantageous in the basic variant ( DSrre 1987 )  . luthe RPSG variant , the length of the lookahead must be conditioned to the fact that zero or more nonderived but generated words may follow a given vertex  . The lookahead fails if , for the first To-Parse sym-The relation Fil ~cludes the operation ~  ) which pro-cedura ) ly asserts new items 2o the chrtttAcrEsDE COLING-92  , NANTES , 2328 ASSET 1992 123 PROC . Of COLING-92, NANTES . AUtL2328 , 1992 bol , there is no first derivable lexical item , that is accessible given the actual substring information  . 
Unfortunately , the scanner is not independent from this lookahead  , since , in many cases , the item licensed by a lookahead operation on too lexical item i is exactly the item licensing i within the predicto relation  . That is , from a procedural viewpoint of enterlng items into the chart  , the lookahead condition and the predictor block each other for certain lcxical items  . 
In this situation we decided to have a scanner without a predicto relation  , thus paying for lookahead with an increased local lexical ambiguity  . 
5 Status and Conclusion
The algorithm described has been implemented and tested as part of the WACSG system that is based on the Stuttgart LFG system  ( Eisele 1987 )  . 
Chart parsing of robust cfg zammars is a powerful method to cope with the confign rational aspects of defectiveness  . It is part of a major enterprise to reanalyze robustness not a so parsing problem but as a problem of weak linguistic description  . Therefore , any formal work on the linguistics of defectiveness can be expected to improve our methods of robust parsing  . 
6 Bibliography\[1\]Carboncll , J . and Hayes , P . : Recovery Strategies for Parsing Extragrammatica \] 
Language , in : AJCL 9, 34, 1983\[2\]D ~, Ere , J . : W citcrent wicklung des Earley-Algorithm us flit kontextfreie and ID/LP- 
Graanmatiken , Li Log-Report 28, IBM
Deutschland 1987\[~\] Earley , J . : An Efficient Context-free Parsing Algorithm , in : CACM 13 ,  2 , 1970\[4\] Goeser , S . : A linguistic Theory of Robust-hess , in : Proc . of COLING-13, Helsinki
Robustheit , Konstanz 1991\[6\] Hayes , P . J . : Entity-Oriented Parsing , in:
COLING-1O , Stanford 1984\[7\] Kilbury , J . : Chart Parsing and the Earley algorithm , in : Klenk , U . ( ed . ): Kon-textfreie Syntaxen und verw and te Sys-teme , Max Niemeyer , Tiibingen1985\[8\]K wasny , S . C . and and Sondhcimer , N . K . :
Relax ~ tlolt Techniques for Parsing Grammatically m -Formed Input  , in:
AJCL 7, 2, 1981\[9\] Lung , B . : Parsing Incomplete Sentences , in : Proc . COLING-12, Budapest 1988\[I0\]Langer , H . : Parsing Spoken Language , in:
Proc . COLING-13, Helsinki 1990\[II\]Mcllish , C . S . : Some Chart-Based Techniques for parsing HI -formed Input  , in:
Proc . ACL27, V~mcouver1987\[12\]Shieber,S . M . : Using Restriction to Ex-tend Parsing Algorithms for Complex 
Feature Based Formalisms , in : Proc.
ACL25, 1985\[I$\]Stock , O . , Falcone , R , Inslmnamo , P . : Island Parsing and Bidirectional Charts , in : Proc . COLING 12, Budapest 1988\[14\] Tomabechi , H . and Tomita , M . : The Integration of Unificotion-B~sed Pragmatics for Real-Time Understanding of Noisy Continuous Speech Input  , in : Proe . 
AAAI7, Saint Panl 1988.
\[I~\]UL MERTEXTBANK : A mach lne-readable corpus of spoken language from psychotherapeutic d scourse  , 
University of Uhn\[16\]Weischedel , R . M . and Sondhelmer , N . K . : Metarules as nB as is for Processing HI-
Formed Input , in : AJCL 9, 34, 1983
ACRESDE COLING-92 , NANTES , 2328 AO~1992124 PROC . OFCOLING-92, NANTES , AUG .  2328, 1992

Algorithm : An RPSG Chart Parser
Input : 1 . RPSG G=<Caq . a , Lez , P , Sseti . ~ 2 . string w : w l , .   . w , ,
Output : " accepted ", if S - - - - ~ . EChaet\[i,j\]where
S6Sseti . a and ffen*(a , w?'n ) =-1 condition(predictor):
Let D(i , A .) C_n+x Caq , ~ a
D(~,A . ) if r1 . ~ S~6Sset ~ . agen*(S ~, giA . ~) = 1 or 2 . ~ C ? ---~ . BxI56 Chart lj,k\]k<iA gen*(Bx,g~-tA . 6): 1 or 3 . 3C ssT ~ c ~ . 6Cha~t\[j,k\]k<i^3D (6Ssetl . affen+(D ?, ff~-kh,/5): I or 4 . 3SnESseti , ,a gen*(Sn , w "' iC ?~) --- tAA , r ~ S set i , ,a A 3CsRT ~/3 6 P condit ion ( Iookahead ) :
Let FCP ? ? n2.
F ( c , , , --, ~ . y , i , i ) i ~ 1 . ( tY : , or /9': B/5 and gen*(B , g~-J wt '~+ l ~) = t for B 6C at i . , l,j < k < n ) and 2 . C .   .   .   .   . fl'~Chartli,\]\]AcrEsDECOLING-92 . NANTES . 2328 AOt*rl "1992 125 PROC . OFCOLING-92 . NANTES , AUG .  2328 .   1992 method : ? scanner : For 0 < i < j  < n : if B ( - - - ~ wi'i + ~ w'wj-ldEP ( where w'CPP , , , uoder w'=e ) 9 en~(B ? , wid ) = I , then F (//~--+ wi , ~+lw'wS-~'? . , i , j ) and * completer : For 0_<i<j < I<n:i . if D(j , An ) and An-~B/3EP and ~= e)madB(-~7 . E Chart lk , 11 and genT ( a Bc , w ~'') = 1 , then F(A ~--~ c ~ B ~ . /3,1,1) ~ . if B~-~3" . EChnrt\[k,l\]mad
As ~ r - - ~ . EChart\[ij\]and then F(AsBr---~c~B ~ . , i , j)3 . if A,----*a . EChart\[i,j\]and(Bs~T--'/3 . 3'E Chart\[k , 1\]
D(l , Bs . ~r ) and /3=egen*(A , /J , wi't=1) , then F(Bs~e . ---* An/3 . ' r , i , 1)
BES set and gen*(aBc,u , ~, t),
A , ; ES set and or and BSr ~ T ~ . ' yEP ) and ACRESDECOLING-92, NANTES . 2328 AO~f1992126 PROC . or COLING-92, NANTES , AUG .  2328, 1992
