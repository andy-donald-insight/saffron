Non-directionality and Self-Assessment
in an Example-based System
Using Genetic Algorithms
Yves Lepage
Bahagian Sains Komputer , PP Sains Matc , natik & Sains Komputer , 
Universifi Sains Malaysia , IIgo0 Penang , Malaysia
email : lepage@cs.usm.jp
re , arch done at ATR Interpreting Telecommunications Research L  . abs,
Hi-Gari-dai22 , Seikacho , Sorakugun , 619-02 Kyoto , Japan

We show the application of an optimisation technique to natural language processing : genetic algorithms  , thanks to the definition of a data structure called board and a formal distance  . The system hms two interesting features : non -directionality  , whict ~ Ls more than hi-directionality , and self-assessment , independently of the inner knowledge . Results of experiments are presented and discussed  . 
Topleal paper : Software for NLP

The purpose of this article is to show that an engine b~ed on an optimisation tecl mique  , namely genetical-gorlthras , can perform NLP t~usks : analysis and generation in the frame of example-based approaches  . But more than that , the system we have built has interesting properties : ? it is truly nondirectional  , i . e . it performs more than bidirectional tasks ; ? it evaluates its results relatively to tile input  , and not relatively to its internal knowledge . 
Two original facts make this possible : ? the definition of a data structure  , called board which is in essence bidirectional . It is the Kssocia-tiou of a sentence pattern m~d its linguistic structure  ; ? the definition of a , distance on this data structure . 
1 Motivations 1 . 1 . Non-direetionality Ourm Mnmotivation was to design a system where not only the formalism but also the system engine is bidirectional  . In \[ Lepage 91\] , we sketched such an engine tbrarule-based al ) proach . 
From a theoretical point of view , such a system is also more interesting than a system where  , although the formalism would be bidirectional , analysis and genera-Lion would be separate modules resulting from different compilations  . 
In our sketch , a more general property than bi-direc-t:ionality mue  , ' go , ?:  , ro , > direclioTJagil ! l . IG directionality is just the property of executing analysis and generation with the same set of specifications  , whereas nou-directionality allows more : a complete sentence and its complete analysis can be built from a partial specification of the sentence and a partial description of tile associated structure  . 
1.2 Self-assessment
A second motivation lles in a flaw of rule-based systems using context-flee parsers  , which is that they often fail to deliver a solution for trivia\[reasons such ~ a word missing in a dictionary  . On the contrary , our system al . -ways delivers an output for any input , would the solution be " bad " . O\["course , this woukl be of no meaning if the quality of outputs wo tfid not beevahtated  . IIence , when delivering a solution , the system scores it . 
Some machine translation systems viewed as expert systems may return an evaluation of their work in terms of their knowledge  ( grammar ) \[ Tong89\] , some other may evaluate the result according to thesaurus cl~ssificatlon and statistical frequencies \[ Furuse and lida  92b1  , but all these methods are specific . If er e , on the contrary , the system delivers a score which is a formal distance between the input and the output  . Thus , it is independent of the linguistic representation chosen  ( dependency or constituency )  . '\[ Fhis is not the case of a proposal such as \[ llarrison el al  .  91\] . 
' 1?his score is a possible answer to the serious lack of assessment in natural language processing  , ~ mit , may apply to any other system , leading to reliable comparisons of in l ; rinsic performances 2 Realisation Genetic algorith , nsconstiL ~ ltea possible answer to tJie previous rnotivatior ~ s  . ' l ' hey are a collection of techniques for approaching the solution of optimisation problems \[ Cloldberg  89\]  . 
Ontim contrary to usual programndng techniques which handle only one object  , at . a time , genetic algorithms deal wit & a collection of individuals  , called a pop-ulatiou . For each individual , one can compute a funct . ion , called the filT + essflutction . Those individuals for which the fitness fm~ction is optim mn  , ' are the besli . ndividuals . 
From two individm ~ . ls , one can derive two Imwimli-vl dunls by cuttinv : lheu ! it lt ~ two pieces and gluing the cross over  . Some random modiIication of the children may occur  , accounting for mutalion to complete the genetic metaphor  . 
N ~ A Yl Nnza , va \] , ' ignre 1: I ~ rinciple of cross over T imprevious operation can be rel  ) eated over a population a number of times so that populations follow one another  . In thel, . ~t generalion , the best individuals are hope fidly solutions of the optimisation problem at hand  . 
In order to apply genetic algorithms to natural language processing  , one hms to determine : ? which data has to play the role of individuals  ; ? consequently , what a population will be ; ? for an individual , wlm t its fitness is ; ? in a population , how individuals are selected for cross over and how it is performed  ; ? how analysis and generation can be viewed as op -timisation problems on a population  . 
' l ? he meeting of our research interests with genetic a legorithrns is a consequence of wirious a wulable results  . 
Firstly , the need for linguistic specification of corn -pnter grammars led to the proposal of an original data structure called board  . This data structure is neutral with respect o a halys is and generation  . It will play the role of individuals . Boards rely on the data structure of forests , \[ br which it is possible to define across over method  . 
Secondly , timstream of exain l ) le-b~sed machine translation is now well -established and justifies considering a collection of already parsed sentences as a population \[ Sadler and Vendelmans  90\]  , \[ Sate and Nagao90\] . 
Finally , our recent work on distances , and especially on distances between uncompletely specified boards  , led llsto the idea of looking in a database for boards with the closest distance to a given board  . This is an optimisation l ) roblem and the tltness of anyboard will simply be atilnction of its distance to the given board  . 
In the following we will first describe the data structures used  . Then we will define the finlctions working on these data structures  . 
2 . 1  . Datastruet ; ures 2 . 1 . 1 Ind iv idua ls = Boards The board data structure \[Vauquois and Chaplmy  85\] w~s introduced ~ s an answer to the problem of specification of real-size graminars  . Aboard is the associa . 
tion of a text with its corresponding , linguistic structure . 
Moreover , constraints express the linguistic validity of the finegrained correspondences between different parts of the texts and of the structure \[ Better and Zaharin  88\]  , \[Zaliarin and Lepage 92\] . As I a particular case , projec-t . iw ~ constituency boards such as l , ' igure 2 verify these cons . raillts , Boards would be of littlense if they would not allow the description <  ) fpattei'lls , llence , Figure 3 is also a .   .   .   .   .   .   .   .   .   .   .   .   .   . l .   .   .   .   . 
mod ~ l NP VP
I ........ I....
pron AVP verb NP
I ..... I ....
~ dv det NP nou\[i

I i0un " Do you ~ lreedy h ~ ve ? registr ~ tion form ?" 
Figure 2: Aboard valid board . It is similar to Figure 2 , except that portions of the string and the tree have been replaced by variables  ( prefixed by a $ sign )  . These variable stand for tbrests , not only for trees--tile point is important . 
Because it is always better to look for a unified view of 
S ........... I.....
raod ~\]. NP7P\[.........I....
pron Svb NP . . . . . i . . .
de ~$ i ~ oun " I ) o you $ vb ~$ noun " gigure 3: Aboard with variables objects , the string part and tim tree part are considered to be of the same data type  , that of forest . As a matter of fact , a string is a forest with only o . l le level , and a tree is a forest with only one node on the highest level  . Now , as forests are the underlying data type , variables t and naturally for subforests . On the string side , considering Variables as forests is by far more interesting than if they would instantiate with one word only  . 
An interesting property about the board data structure  , and it is exactly why it has been devised , is that , because it is the association of a string ( the text ) and a ( linguistic ) tree , it is neutral with respect to the main natural language processing operations : i analysis  ( input : string , output : tree ); ? generation ( input : tree , output : string ) . 
2 . 1 . 2 PoI ) ulatlon = Datalmse of l ) oards Our database of sentences is that of ATR telephone conversations  . ' l?liese dialogues are telephone conversations for a scenario where somebody calls at secret ari  .   , to get , information about a coining conference he would like to at t t end  , l , ' igure 4 is an excerpt from tliese dialogues . 
Ilello.
-This is the Con/e , ' enee OJJice.
-Could ~ joutellme ( : bruit the attendance fee for the Conference ? If I at  , ply for the (2 on . ference now , how much is the atten & m cefee 7-Yes . At pvese~ltheotte*t dailee Jee is 35 , 000 yell per person . IS yellappbjne : ctmonth , it will be 40 , 000 ye F ~ . 
l , ' igure , 1: An excerpt\['roilltheA'\['IT , dialogues We kepl . I0 of these dialogueshiEnglish . ' l'h is rel ; rc'-,<;eliI,S')"" .  ,  . itg (' ll tell CeS of ';\' hich1 . '30 are dill'erelll .   . 

The linguistic structures corresponding to the previous sentences have been drawn by hand and scrupulously reviewed to ensure consistency  . They are syntactic on-stituency trees and are exactly projective  , which means that each leaf in the tree corresponds to a word in the sentence in the same order  . 
As for illustration , all the trees and sentences in this paper are extracted from our database of boards  . Some representational choices have been made to limit the number of morphosyntactic categories to  14   ( and phrase types to 7 ) and to keep projectivity by all means . 
2 . 2 Pnnetions 2 . 2 . 1 F i tness = D is tance between forests We define the fitness of an element in a population  ( set of boards ) ms the distance to a given input ( aboard ) to the system . In other words , we have to define a distance between boards . A simple idea is to take the sum of the distances between the strings on the one band  , and the trees on the other hand . As strings and trees are forests a distance on forests is required  . 
The definition of a distance on forests is given below  , with a , b being nodes , u , u  ~ , v ,   . v ~ being forests and . 
denoting concatenation of forests.
dist(a(u ') . u , b(v') . v ) = m/n(di~t(a(u') , e ) = di~t ( ~( , ,') , b ( , ,')) dis l ( a , b ) = dist(E , a ) := dist(a , E ) = di~t(a( , ,') , b ) + di~t(u , v ) , di ~ i(a(u') , e)"1-di~t(u , b(v') . v ), dist(Gb(u'))+di~t(a(u') . , , ,u )) < u , t(< , , ~) 4- < u ~( , ,' , ~-) dist(a , b)-I-dist(u ' , v ' ) 0 if a = b1 else ( replaeeme ) H )  1  ( insertion )  1  ( deletion ) It is a direct gener Misation of two classical distances on strings\[Wagner & Fischer  74\] and trees\[Selkow 77\]  . 
Both distances answer the correction problem : what is the minimal number of typing operations needed to transform one object into the other one ? In both distances and their generalisation to forests  , the typing operations are insertion , deletion and replacement An extension of the previous distance to forest patterns  ( i . e . forests containing variables ) has been presented in \[ Lepag et al .  92\] . It is no longer a metric , so We call it a proximity score . With this score , the distance between a variable and a constant object is zero by definition  . Figure 5 gives an illustration ( the unit is a one word or node difference )  . 
2 . 2 . 2 Crossover = Exchange of subfore . sts We turn now to cross over . The first question is how b,_ . .(Is a\]re selected in a population for crossover . 
It seems reasonable that those individuals with better fitness value should intervene more in the production of the next generation  . Along this line , the simple following law gives the probability of a boardi with fitness f l  ( some reciprocal of distance ) to be selected for cross over : f ~
Pi =
As for cross over itself , it has to be defined on strings and on trees . 
On strings , be they chromosomes or sequences of bii , s , cross over is generally performed as il hlstrated in Figure  1  . We could crossow ' . r sentences following this sitnplel , riit clple ( see Figure 6) . 
be : forecross over after cross over " Th ~ nk you vory much  . "" Thank you halp you . "" May I help you ? " ii Mtty Iverymtlch , "
Figure 6: Cross over on strings
But we insist on keeping the unity of data structure between strings and trees  . So , we translate string cross over into forest terms : it is the exchange of the sister forests of the cross over points  . This can be applied directly to trees , see Figure 7 . This technique is different from the exchange of subtrees ~ s proposed in\[Koza  92\]  . 
before cross over after cross over
SS . . . . . . . . . . . . . . . . .
VPA VP VP A VP ___ .   .   .   .    .   .   .   .   .   .   .    .   .   .   .   . _ * verb NPA VP ~ d v verb VP AVP edv
I-J -- Ipron adv verb ~ Padvi
Spron . . . . . . . . I . . . .
mod~l*NP VPS 1-- I . . . . . . . .
pronver bNP modal NP NP
II pron proll pron
Figure 7: Cross over on forests ( cross over points are marked by * ) Now , by keeping projectivity during cross over , only corresponding parts of strings and trees will be exchanged  . As a consequence , string cross over will allow exchange of rule r substrings  . To stunup , aboard obtained by cross over will give a partially valid description of a possibly ungrammatical sentence  ( see Figure 8 )  . 
before cross over 7 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  7   .   .   .   .    .   .   .   .   .  \]
IVPA VPI ._... ..__
I * verb NPA VP advJ\]pronadv\[ll "T bank you vory much  . " I . . . . . . . . . . . . . . . . . . . . . . . .
S ....... I .....
modal , ~ PVP--I -- proaver bNP pron " M~yI help you  . " ~ tercross over .   .   .   . I .   .   .   .   .   .   . 
VPA VP .   .   .   .   .    .   .   .   .   . _verb VPA VP adv . A - . verb NP~dv pronl " Thank help you very much . "  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
S .... I ....
modul NP NP pron pron " H ~ yI you."
Figure 8: Cross over on projective boards 2 . 2 . 3 Opt imisat ion prob len l = Closest board in database The system built for the experiment implements as hnplegenetic algoritlun  . The starting polnllation is a set , of example boards , i , e . complete seidences with their crmIplel , enssociated Ih ~ uisl , icsl , ' , ' uctures ,   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . i .   .   .   .   .   .  ;,  .   .   .   .   .   .   . 
III
AVPIAVP
AVPPPIAVP adv
I--I-II adv $1 NP\[~dv
II , qu ~. ntI
I " llot$2"l+q to t ; yet .  "  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 

SS
II
AVI'AVP . . . . . . I - -- I--disc :( ATP Pp AVP adv ) = 3
I--I-I adv $ lNI'~(Iv+\]+=3 qll&llt , list ; (" No ~ a 2" , " r Iot yet ; , ") = 0 l , ' igure 5: l ) istance between two boards If an input board is given to Cite system  , each board in the database of examples carl be assigned alitness score : its distance to the input board  . 
? When the input is a board where the Iingttistic tree is unknown  ( a variable )  , the output will be timclosest board containing the closest sentence with its  , associated tree . This is aldnd of analysis . 
.......I.....ImodalII'VP\]
Io-I--lpron verb ~ IP\[1El , ron 1
I " may I help you " " H ~ y I help you ? " I .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
input output ; ? When the input is a board where the string is unknown  ( a variable )  , the output will be the closest board containing the closes tree with its associated string  . This is a kind of gencralion . 

SS .   .   .   .   .   .   .   . I .   .   .   .   .   .   .   .   .   .   .   .   . I .   .   .   .   .   . 
modal NP VP modal NP VP pron verb NP pron verb NP
I1 noun pron "$1"" M~yI help you ?" .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
input output ? When the input is aboard where both the sentence and the linguistic tree are partially specified  ( they contain variables )  , the otlt l ) ttC will be Checlosest board containing a complete sentence and its con > plete associated linguistic structure  . 
SS_--I..........I......
$1lP7Pmod , , .1 NP VP
III . -I--pron $2 pronver bNP "13 help you $4" " flay I help you ?" .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
inpul ; output
We call tile last operatio \[ l 7lon-dircclioTlal comple-lion . In fact , analysis and generation are only par Cicuhu " cases of this operation  . For in . stance , analysis is 11011-directional completion for a board will + now ~ riable iuthe string part  , and aw ~ riable as the tree par C . 
For each operation above , the external behaviour of tlt + . ' system may be considered dilrerent , althot Lt , : h the interttal behavio , jr is exactly tiles an , ,~ . ! nal ', y('a . ' . , LCite . . o'Utlmt is a board , built from pieces of the database boards , and minimising the distance to the input , lC is important ostress the point that the in i ) ut never enters Che database of board : ;  . It is only used to compute Citetitness of each board in the database in each generation  . 
Figure 9 sunmlarise stile system and its functioning . 
ll -+
Input ? i , , , , oi/\i .   .   .   . JL . , ~_\ h ----~ li
I ~ l . . . .
Iml/MIIIm\[~3? ?, . inne ~ Rt lo , lI + . n +, . tlon ~ .   .   .   .   . u . ,2 . r . t to , 2j )

Figure 9: A scheme of the system 3 Exper hrmntatior ~ 3  . 1gXl)e . riments We tested the perl ' or nlall ce of the system ror analysis  , generation and nondirection a lemnple Cio ,  . 
For analysis ,   ; ~ board is extracted front the database ( call it reference board )  . A new board is built by associating tiles lming i ) arL of the reference board with a variable as its I  , reep are . It , be conles the in ImC\[ . othe sys-Cent . Of course , the reference board is eliminated from \[ , he databa . 'm . 
A Iirs Cineasure is given by + , he system itself : it : is ritefitness of the output  , which is the distance between tile output and tile input  . A second nleasure is tile distance I)eCwee . nI . he out lnll , and the reference board , which reofleets the absolut equaliCy of the output  . Moreov (! r , run-
Limes have been measured.
This procedure was carried out t breacll board of the ? la\[  , a base so Chataverage vahles ( : oH\]dI ) e ( ' o Illl ) llCe+\] . 
There were 225b,m'ds in the dal . aI > as , , of course , the tree part is kept in building tim input board  . Pot non-dl rectional completion , an uneomplete board is automatically built by inserting variables at random positions in the string and tree parts of the reference board  . 
3.2 R . esnlts
Analysis Analysis gives an average rror of about  9  . 2 elements relatively to the exact output after thirty generations  . The average number of elements ( nodes and words ) in a board is 24 . 5 , hence , the error rate is 38% , not a very good result . The fitness gives the average number of words wrong in the average string output by the system : around  3  . 2 words for a 8 . 5 word-long sentence . 
generation ~ ity time " ( in sec . ) 3 ~ . 6 ~ - - 1 - - TK g~-T . gf --6,,1 . 48I 13 . 09-8,~"-'-"---i2'4 . 60' T~g-13 . 26~---i,q1~is,o=-t . 13 ) 12 . 0715,82 Tg . I .   .   .   .   .   . 
21 3.92  11.39 16.7-1 24 I 3,68 \[ 10. 
3 4 . 64 \[ 9 . 49 8 . 1612: t . 56 ~5-ts . ;/~ is ~-------~753-18~--18 , 992 11 - - - F3a-t , 74 ~ i 9 . 17-424~197 a4-~-----~----T7~ . 3 ~- a ~" . , o . 9 - i--30--T71 a-F---VT~22 . ~TN on-direet : ional completion The following results must be considered  , as purely il htstrative , because the form of boards for nondirectional completioi:un're-P !' d"stricted  . As could be expected , because nop . . . . ~ s complete in the input , quality is worse than for analysis and generation  , although fitness appears to be quite good , 
IQU a II t V ) i n i ) . ,i l G F - -~ o 7gY - ~ 15 1--~-A , -Y-~u71------~T--7: ,   , ---7 7 , 40 12 , 90 15 . '~2 17 . 93 lg , 4718 . 95 20 . 0 l2 1 . '17 22,39 3 . , 3 Discussion We will now discuss the advantages and drawbacks of our system  . 
3.3.3. Non-dlre('tionallty
The general fimction of the system is to build a corn-plete sentence and its complete associated syntactic tree from a partially specified sentence and a partially specified tree  . Hence , an a\[ysis and generation turn out to lie only l /articular cases of this general operation  . This t'eatnre is what we called ares -directionality  . It is more general than hi-directionality . Until now , we are not aware of any m~tural language processing system having this property  . 
Frorn the applications point of view , non--directionali-ty allows one to envisage linguistically fotm dedediting operations  . For example , suppose we would like to replace refltnd the fee by pay * ltefe e back all over a text  . 
We would like tile operation to apply for any tense of the verb  . TimRlllowing I/oard could be used to retrieve all possible candidates  . It say stll at we wantaw ' . rbal phrase ( structural constraint ) and that tile substring fl ' . e must appear ( string constraint ) . Of course , to perform such an operation , we would not advise the use of genetic algorithms  .   . .
Iverb~1I
II
Irefund $ ~: feeI 3.3.2 Assessment
Because parts of the input ma~y be modified in tile on tput  , assess nlent is necessary . The system delivers a score which is not directly connected to the knowledge of the system  . 1I ; is the distance between tile input and the output  . Minimising this distance is precisely the ta . sk of the system . As this score is a theoretical metric between structures  , it is not'stud(to a particulare presen-tation . It conld be applied to evahlate similar systems using difl'erent representations  , for example dependency structures . 
3 . 3 . 3 Normalising efl ' ( m  ~ l ) espite the previous points , important criticisms can still head dressed to the current system  . 
l , ;xperiulenLs carried out with int/ut sentences from outside tile data base have shown that the system has a normalising ell'ect : otfl  ; puts are cast to resemble sen-fences and trees fronlthed at a base  . This is a neg ~ l . b . e effect if arree q0 ptltsyT stem is wanted . But , , it ' a \] a%e enough data base is built and if standardisation is re-qulred  , as is the ease with technical documents in many companies  , this may be seen as a positive feature . 
: 1.3. < I Colnimtai : ional limits
A classical criticism of genetic algorithm ( ' oncerlls heavy computation time . llere , it is proportional to the tmnlber of examples in the databaso ! This prevents us from using a big enough database for any reasonable-size  . 

As\['or spa(to . , ollriml > hmmntationfl . hesys l , enl re-lies on a ~ . ooll ) ox which makes extensiw . ' useol " dynamh : progral nl ~ 6!! g ( storing intermediate results to increase'speed )  . M . . . , Ioty ! ~ izcli : lfits are rapidly reached . Inibisi SSLIO . 
' lbrelned y1) oth these , problems we are envisaging porting our progrmns on a par Mlel machine  . This does not add anything from the theoretical point of view  , but genetic algorithms are obvious candida Les for p  ; cra\[leli-sation . 
Conclusion '\]) hisp;~perh~L ~; described t , heapplical , io I ~ of an optimisa-Li on technique to na Lural anguage processing tasks  , i . e . 
analysis and generation . '\[' hesys Le . m has been shown to haw ~ two interesLing prope . rties : no no direc Liona . lil . y , which is more than hi-directionality and self -assess lnent  . , independently of il ; sinternal knowledge . 
l~eferences\[Boitet and Zaharin 88\] Christian 13oix   . ? aml Zaharin

Representation trees and strhlg-tree corresl ) m-de Alces Proceedings of COLINU-8 , ~ , pp 5 , 0-0 d , \]) u- . 
dapest ., 1\]88.
\[(7; old berg89\]D~tvid1';.GoIdberg,
Geneic A OorilhmsiTt Search , Optimizalio ~ hand Machine Learning Addison Wesley Publishing Company  ,  1989 . 
\[ l Iarrison el al . 91\]P . Itarrison , S . Abney , t'; . P , b~ck , D . 
\[,' liekenger , C . Gdaniec , R . Grishman , 1) . /lin-die , 1 ~ . Ingria , M . Marcus , B . Santorini , T . 
Strzalkow skil ; valu M ; ing . qyntaxPerf(n'mance of l~a . r . qer /
Grammars of English
Proceedings of the Workshop onl Cvahtating Natural Language Processing Syslcms  , ACL ,  1991 , pp .  ?-? . 
\ [ gin : use and lida 921>\] Furuse Osaulu and Iida \ [ lito ~ dfi An Example- . based Method for Transfer-driven
Maehine Translation
F ' roceedings of the fourthlnterna Honal Conference on Theoretical end Mcthodologie alls s~es in Machine Translation  TMI-92  , pp 139-150 , 
Montrdal , 1992.
\[ i ( oz ~92\] John R . Koza
Genelic Pvogrammin\[I-Onlhe . Proyram vli~lg of Computers by Means of Nal ~ lral , Veleeliol ~ lVlI'?Press ,  1992 . 
\[ Lepageo , " Vves Lepage ? . : ring and Generating Contexl; . -gensi Livel , an-guages with Correst ) on deneeldentific at . ion
Grarn mm's
Proceedings of Ihe Pacific l?im . S'y ~ nposiu ~ uon Natural Lang ' uage Processing , Singapore , 
November 1991, pp . 256-263.
\[\[ , epage et al92\]Yw~sLepage , Furuse () samu and li & ~
Ilitoshilela ~ ; ionbetween ; tp ; ttl:ern-matching operat . ion and it distance : ( ) nt ; hepal , \[ l1; ore concile two approaches in Nal ; ur Ml , anguage ' rocee : ; singProceedings of lkel , ' irsl , ging a porc Internaliol tatCon J ? . rencco 7~ lnlelliflenl Systems, . qil/gglpor , ' . 
November 1992, Pl ) .513~5"~.
\[ Sadler and Vendehnans90\] Victor ~ adler and \] ~ on ald

Pilotiml delrlentation of a bilingual knowledge bank Proceedings of Colin  . /l-90, I\[elsinki , 1990, vol 3, pp . .'1,t9-4U ) 1 . 
\[S;~Lo and Nagao90\] Sat , oSal , oshi and Nagao Mako . o
Toward bAemory-based Translation
Proceedings of Colin\[I-90 , llels in ki ,  1990 , vol'2 , pp .  247-252 . 
\[ Selkow77\] S/; alfley M . Selkow
The'l'ree-to/lYeel;' , diLinglh ' oblemln Jbrmalion Processing Lellers , Vol . 6, No . ; , l ) e cember 1977, pp . 184 qg 6 . 
\[ q'ong89\]'I'ol>g boone Ch cong
AdaL ~ t-(h'iven coil ; rols l . r;t\[ . egyfor / ' ~ l'~tlllll3glr writing systems Machilte Translation ,  4( , 1) , December\[989 , pp . 

\[Vauquoi . s and Chal ) puy 85\]l \] ernard Vauquois and . qyl-viane (3 happuy . c-;t . at . i c l r l '; t l l t l l \] ; t r . '-; : & form a . lism Ibrt , he description of linguistic modeb ; l'r occe . dings of the Co , . Jkren . ce on Th coTrgical and Melhodological Issues in Mackine  7'ransla-lion   , (2olgaleUni'versi@ , llamilton , New York , 
Augttst ~.985, pp 298-322.
\[ Wagner & l , ' is cher 74\] Robert A . Wagner and Michaeld . Fischer The SL ring-to-St ; riug Correc@m Problem Jourual for lke Associa Hon of Compulin\[IMachinery  , Vol . 21, No . 1, Janu ~ try 1974, pp , 1(;~-173 . 
\[ZaharinamlbeI>age92\]Zaharin YusoffamlYw ' . sLel ) - ageOnI , he specification of ; xbs , racLlinguistoic strttc-tmes in formalisms for Machine Translation \[' roceedings of lhc lnlernationalb'ymposiumon  . 
Nat'ural Language Undersland in 9 and A1, pp 145-\[5 . 3, \[ izuka, . luly 1992 . 

