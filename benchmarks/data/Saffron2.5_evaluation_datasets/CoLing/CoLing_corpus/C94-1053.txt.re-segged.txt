rO ,, PlmmingArgumcnl ; l;iv0l-,xts
Xiaorong Hua.ng
Fachbereich Inforlnatik , Uniw : rsiti\[t , des S+ul , rlandes
6 ( i0d\] . Saarbriicken , ( l(~rlltTi , liy , et nail : huang~3cs . uni-sb . de
Abstract
This paper presents PI?OVF , I ? , I " fatext planner for argumentative texts . I~I~OVI'\]\]~II~nain feature is that it combines global hierarchical planning and llti -phmned organization of text with respect to local derivation relations in a complementary way  . The former splits the task of presenting a particular pronf into subtasks of llresenting sul  ) proot ~ . "\[' lielati , ersiln li\[al ; cs\]iow the next intermediate on chision to Iml ) resenl , ed is chosell under the guida . nceo\[the local \[' ocils . 
1. Introduction
This pall or presents a , text planner for l , h , ' w , rlmliz~t-tion of natural deduction ( ND ) st , yleproofs\[Gm , :Uq . 
Several similar attempi ; s can bel bull d in previous work . I ) eveloped before the era of NL genl ! ral . )) li , the system EXPOUND of D . ( Thesl . er\[ Che76\] call I > e characterized as an exatnl+le of direct translatio ' a : Although a sophisticated linearizatio ii is applied on the input ND proofs  , the steps are then I : ranslated loc-ally in a templated riven way  . NDi > rool : s were tested as input to a nearly version of the MUMI ~  , I , I '; sys-tern of D . McDonald\[McD83\] , the Irllain aim however , was to show the fl ~ asibility of the architecture . A more receit t attempt can be foiln d in ' l'l I\ [Nl  ( li ; ll . 
\[1'\]P93\] , whMI implements sew ~ ralinteresting but is ol-ated proof presentation strategies  , witliout giving ; l comprehensive underlying model . 
Our computational model can the relbre I > eviewed ; is the first serious attempt at a comprehensive conipu-tational model that produces a deqilate argillneill  , al , i w ~ t e ? l , sfrolnN\])si , yle proofs . The inaill nilllis I , +) sh + : , vhowexisting text planning techlliques Call\[ ) t ~ adapted for this particular apl ) iication , q ' otest its feasibility , this computational model is iml delilenl , edl it as ysl , enl called PROVERH . 
Most current NL text pialillers assiiltle thai , \[ ali-guage generation is planned I>eh ~ vior ~ tlid therefore adopt a hiera  . rchical platiliiligaplll ' oach\[Iiov 88 , Moo 89 , Da 192 , Rei 91\] . Nonetheless there ! is psycllolo-gical , ~vidence that language has a null plaluled , si~oti- . 
taneous aspect ms well\[Och79\] . Based on this ol~sei'va-l , ion , researchers have exploited organizing text with respect to some local relations  . Sibun\[ Sib90\] it nl +> merited a system generating descripticms for oltiects with a strong domains l  . ructure , such as houses , chips all d families . Once a discourse is st . ;i , l'l , ~;(I , local strlb-lures suggest the next objects awtilal fle  . \[ nstead of planning globally , short-ranges l ; rategies ~ trecnlpl~tyed tool'gallize~t short seglrl < ! lll  , or ' text . l ? ronia colll ) ltl , a-ti~mnl point of view , a hierarchical planner elaborates recursively on the initial commmiicatiw ~ goal mitil the Ihtal sult goals can be achieved by ++ l > plyivga prlmitiw ' ~ operator  . A text generator based on the local organization , in contrast , repeatedly chooses a part of the renmiNing t . ask and carries it out . 
The macro planner of \]' Ig OVER . B combines hier-arc Dical plan Tdng with local orga Mzation in a uniform planning framework  . ' the hierarchical planning is realized by so called top-do wup resentation operators that split the task of presenting a particular proof into subtasks of presenting subproofs  . While the overall planning mechanism follows the RS'l  . '-lmsed planning approach\[Moo 89 , Reigl\] , the Idaiming operators lilt ) recl <+ sely Feselllll le the schell Hl + taill schema -based phtnning\[  McK85  , Iqtr88\] . l \] ottom-up resentation Oilel'O , tOl'S ~ tl'(~(ll~vised to Sil/Itll ; t , e\[ , lietLlt pl , ~tlll l~dRS-i>ect; , where the next intermediate cotichlsion to lm presen Le dischosen under the gttidance of the localf c > cust nechanisnt in all lore SpOlt tarleous way  . ' Jil : ce top-dm dn operal , or senibody explicit coinnnnticative li Orlil S , they areai ' , wiys given a higher priority . Onlywheilliel ; op-dOW tlpr < ? selil ; atioit operator is a pl > licabh ;  , will a bot , to iil-ttp present , alien operator be chosen . 
This distinction betweeii plalllled all d illiplal trled presentation loads to aw  ; ry natural seglnenl ; a tion of the discourse in t . o an all ci ilional hierarchy , since , fol . .
h > will gt . he theory of ( . Irosz and Sidner\[CS86\] , there is + lOll+P-to-olle COl'l'esl ) Oltdellce betweel i the it itel it , iolial hierarrhy and the al ; tentional hierarchy . '\[' h is at l ; en-t , iemal hierarchy iv used to it lltke , r@Jz'enc choices for inference ilietliods and for previously presented inter-nimii at  , e conclusions , ' l ' he inference choices it l'l ~ the tllailt CO liCerll of the iliier oitllmner of PR  , OVl' . 'l ~ II ( see\[llua ) dlq) . 
2. ( hm text of Our Research
Tim text planner discussed hit his paper is the mac-ro planner of I'ROVI'H ~  , IJ , which translates machine-f<mmli wool's in sew ~ rM steps into u ~ t turallall gl  . lage . 
PI:OVEI ~ II adopts arc conslr'uc live approach : Once al ~ roof in am~u : hhie oriented for lnalist n is genel ' ~ d  ; cd in the proof dew dopn wnt envh ' on lnentfI--MKRP , a new proof ' l , hat , m <+ reresetnbles those found in mai ; h-enmt , icaltex . tl ) ooks is reconstructed\[lhla94a\] . The re-construcl , < ~ dproo\["is~t proof lT"ce , where proof nodes ave derived from their children by applying an infer-c'ncetnel  , hod(also called a justilical , ion ) . Most of the steps are justified by Lhe application of a definition u  ( ul ,  1 , , ,  *) , Ul EU Du , ulC(;'_~z~zl ) snl ) gr\[r , ' 1" mo ; ~_ r , , - - T -~ UUl ,   , EDs , ' gr(F '*) D , _i ! 1: , , ,  * 1 , , - - g l : I " - - ' " )2 - , rsol
Figure 1: An Examplelnlmt Proof or a theorem , the rest are justified by inference rules of the natural deduction  ( ND ) eal cuhls , such as the " Case " rule . Figure 1 is an examph ' , of a segment of a possible input proof , where some nodes are labeled for convenience . 
The justifications " Du " , " Dsubgr " , " Ds " , " Dg " , and " Tsol " stand for the definitions of unit element  , of subgroup , of subset , of group , and the theorem about solution , respectively . 
The input proof tree is also augmented with an ordered list of nodes  , being roots of subproofs planned in this order . The proof in Figure 1 is associated with the list : ( \[2\] , \[ a\] ,  \[4\] , \[ l \]) . 
3 . The Framework of the Macroplanner Tl , ema croplanner of PROVERB elaborates on com -municative goals  , selects and orders pieces of in for rl~a-tion to fullill these goals  . The output is an ordered sc'-quenee of proof communicative actiuteu ~ ions  ( PCAs )  . 
PCAs can be viewed as speech acts in our domain of application  . 
Planning Pramework
PROVERB combines the two abovementioned presentation modes by encoding communic at  . ion knowledge for both topdown planning and bottom -uppresentation in form of operators in a uniform planning framework  . Since topdown presentation operat-or sembody e ? plieit communicatiw ~ norms  , they are given a higher priority . Abotl . om-up presentation is chosen only when no topdown presentation operal  , or applies . The overall planning framework is realized by the fimction present  . Taking as in pul , a subproof , Present repeatedly executes a hasic planning cycle unl  , il the inlmt subproofise ouw ! yed . F , ach cycle carries out Olle presentation operal , or , where Present always tries first to choose and apply a topdown operator  , if impossible , a Imttom . -up opc : rator will he chosen . ~l ~ he function Present is first called wil . lt , he entire proof as the presentation task . The execution of a topdown presentation operator may generate subtasks by calling it recursively  . The discourse produced by each call to Present tbrms an attentioual unit  ( compare the subsection below )  . 
The Discourse Model and the A . ttentiomd Hierarchy The discourse carried out so far is recorded in a discourse model  . Rather than recording he semantic oh-jeets and their properties  , our discourse model consists basically of the part of the input proof tree which has already been conveyed  . The discourse model is also segmented into an allenlional hierarchy  , where , sub-proofs posted by a topdown presentation operators as subtasks constitute attentional units  . The . following are some notions useful for the formulation of the prese  , \] tation perators : ? Task is the subproof in the input proof whose presentation is the current task  . 
? Local focus is the intermediate conclusion lmst presented  , while the semantic objects involved in t ; helocal tbcus are called the focal centers . 
Proof Comlnunieativc , Acts
P( . ,'As are the primil ; ive actions plammd during the macro planning to achiew  . ? communical ; ivegoals . Like speech acts , PCAs can be defined in terms of the com -mmlicative goals they fulfill as well as tlu-qr possible verbalizations  . Based on an analysis of proofs in math-enuttical text l moks  , each PCA has as goal a combin-ation o17 the l bllowing sllh goals : 1  . CoI weying as t . ep of the deriwttion .  ' . Phe simplest \]' CA is the operator Derive . hlstantiated as be-(Derive Reasons : lag , 5' I , EIC--$2)
Intermediate-Results : nil
Derived-Formula : aG $ 2
Method : def-subset ) depending on the reference choices , a possible verbalization is given as following : " lb  ; cause a is a neh ' . ment of 51 and , % . 
is a subset of S , . , , according to the detin-ition of subset , a is an elelne/L t of S : ! . " 2 . I . Jpdates o\['I . he glob : d attentional structure . 
These I~C Assom , ' t . imes also convey ~ L partial plan for tim further l  ) resentation . IBl fects of this group of I'C As include : creal , ing new attentional units , setting up partially premises and the goal of a new unit  , closing t . he current unit , or l'e alloeal ; ing the attention of the reader from one attentional unit to another  . The PCA ( Begin-Cases Goal : l , ' ormula
Assumptions : ( AI ~)) creates two atteD . tional units with A and II as the assumptions , and Formula as the goal by produ-cing the verbalization : " Toprow " Formula  , let us consider the two cases by assuming A and B  . " Thirteen PCAs are currently employed in PRO-VEI?t3  . See\[Ilua 94b \] for more details . 

Structure of the Plamfing OI ) erators Although topdown and bottom-up presentation activities are of a eone el  ) tually dift~rent nature , the corresponding communication knowledge is uniformly encoded as presentation oper ' at or sil a planning framework  , similar to the plan operators in other generation systems\[  Hov88  , Moo 89 , Da 192 , ILeigl\] . In general , presentation operators map an original presentation task into a seqnenee of subtasks and finally into a sequence of PCAs  . All of then rhaw ~ the following four slots : ? P ro@a proof schema  , which characterizes the . 
syntactical structure of a proof segment for wllich this operator is designed  . It plays 1; t1( . ' role of the . 
goal slot in the tradition all ) lanning fran rework.
? Applicability Condition : apre(\[icate..
? Acts : a procedure which essentially carries out itseqtlellce of preself l  ; atioliacts . They are either primitive PCAs , or are recursive calls to the procedure Present for subproofs  . 
? Features : a list of features which helps to select the best of a set of a I  ) l ) licable operators . 
4 . Top-Down Planning'I'h is section elabor M ; es oil the colnlnt lnicative norms concerning how a proof to he presented can Im split into sitb proofs  , as well ~ us how the hierarchically-structured subprooN can liema plied onto some line ear order for presentation  . In contrast with operators employed in RST-b~se ( lplm uters that split goals according to the rhetorical structures  , our operators encode standard schemata for presenting proofs  , which (: oil-lain subgoals . The topdown presentation operators are roughly divided into two cate  . gories : ? schemata-based operators encoding complex schemata for the presentation of proofs of as l  ) e-cilie pattern ( twelve o1't lwm are currently i , ltcg-rated in PIgOVERII ) , ? general operators embodying general pr , ~senta-lionnorms , concerning splitting proofs and ordering subgoals . 
Ft-\[ , '(1i-(7i ~- rv-o ~" , ~ , , , ~: rL casl . :
Figure 2: A Schmmt Involving Cases
Let us first look at an operator devised tbr proof segments containing eases  . ' l ' he . e or reslmnding schenra of such a proof tree is shown in Figure  2  . Under two circumstances a writer lnay recognize that  11  (  ; is confronted with a proof segment containing cases  . First , when the snb proof that has the structure of l " igure  . 2 is the current presentation task , tested by ( task ? L1) 1 . 
Second , when the disjunction I , ' VG has just been presented in the bottom-up mode  , tested by ( local-\['octls"?L4) . Under both circumstances , a teammate-aliennor mmotiwttes the writer to First present the part leading to  1  , ' VG ( in the second case this subgoal has a h'eady been aehiew3d   )  , and then to proceed with the two cases . It enforces also that certain PCAs be used to mediat  . e between 1) arts of l ) roofs . This procedure is exactly captured by the presentation operator below  . 
Case-Implicit ? Proof : as given in lqgure 2 ? Applicability Condition : ( ( task ? LI ) V ( local-l ~ , ,' , s '?1;4)) A( , , oi , -conveyed(?L . , 7l~-,)) ? Acts : 1 . if ? L4 has not been conveyed , then l ) resenl ; '7174 ( subgoal1)2 . a PCA with the verbalization : " First , let us conside . r the first east . , by assuming F . " 3 . preselfl ; ? L2 ( subgoal2) 4 . a PCA wit , hthevm ' balization : " Next , we consider these . cond case by assuming (; . "5, presel , t'?La(subgoal3)(i . mark "71) 1 as conw . ye(l ? lL , atures : ( topdown compulsory implicit ) q'hefl ~ atm'e values can be divided into two groups : those characterizing the style  , of the 1; ext this operator produces , and those concerning other planning aspects . " Implicit " is a stylistie feature value , indicating that the splitting of the p , ' o of into the three subgoals is not made explicit . In its explicit dnal Case-Explicit a PCA is added to the beginning of the Acts slot  . , w l f i c h l ) r o ( h i e e . stim verbalization : " Toprow ~ Q , let us first prove FVG , and consider the two easessel ) arately . " The feature , wdue " CO ml sory " indicates thai . if the applical lility condition is satisfied , and the style of the Ol ) (~ r ; tl , : , r(:Oll\['orlnstotheghd ) alstyle the texl . planner is (: olr lruitted to , this operator should be chosen . Two weaker valso retlect the speci\[icii , y of plan operators : " speci\[ic " and " general " . 
( h , nerall ) resental . ion operators perform a simple task according to some general text organization principles  . They either ? enforce a linearization on subprool ~ to be presented  , or ? split the task of the presentation of a proof with ordereds nh proofs into sul  ) t . asks . 
tLabels stand fro " the ? m ' respond hlg nodes eral ordering strategy called minimal oad principle  . 
This principle predicates that a writer usually presents shorter branches be ibrelonger ones  . The argument of Levelt is rather simple : When one branch is chosen to be described first  , the writer has to have the choice node flagged in his memory for return  . If he follows the shorter branch first . , the duratiml of the load will be shorter . The e one rete operator is omitted . 
Note that , the subproofs being ordered are sub-proofs conceptually planned while the correspm  , ding proof is constructed . There are two other ordering operators based on general ordering principles : the local focus principle and the proof time order principle \[  IIua94b\]  . 
The invocation of an ordering operator is always followed by the invocation of a splitting operator  , which actually posts subgoals by calling the function Present with the ordered goals subsequently  . 
5. Bottom-up Presentation
The bottom-up resentation process simulates the un -planned part of proof presentation  . Instead of splitting presentation goals into subgoals according to standard schernata  , it follows the local derivation relation to find a next proof node or subproof to be presented  , in this sense , it is similar to the local organization techniques used in \[  Sib90\]  . When no topdown presentation operator applies , I~ROVI'2 RB chooses a bottom-up operator . 
The Local Focus
The node to be presented next is suggested by the mechanism of local focus  . Although logically any proof node having the local focus as a child could be choser l for the next step  , usually the one with the greatest semantic overlapping with the focolcenier's is preferred  . 
As mentioned above , focal centers are senmntic objects mentioned in the proof node which is the local focus  . This is based on the observation that if one has proved a property about some semantic obje  . cts , one tends to continue to talk about these particular objects before turning to new ohjects  . Let nsexamine the situation when the proof below is a wn  . iting I ~,' es e,,L-ation . 
j ~\]: or , , , b ) '\ [ a\] . 7-0( . , b)A:e(I , , . ) Assume that node\[1\] is the local focus , the set ; a , b are the focal centers ,   \[3\] is a previously presented node and node \[5\] is the current task . \[2\] is chosen as the next node to be presented , since it , does not ( re ) introduce any new semantic object and it . so verlap with the focal centers ( a , b ) is larger than those of\[4\](~) . 
The Bottom-Up Presentatioll Operators Under different circumstances the deriw H  , ion of the next-node is also presented in different ways  , The corresponding presentation knowledge is encoded as bottom-np presentation operators  . The one most fre-quent . ly used presents one . step of derivation :
Derlve . - Bottom-Up ? Proof : ? Nodel ~ . . . l?Node , ~? M ? Node n + l ? Applicability Condition : ? Node n +  1 is suggested by the focus mechar , is mas the next node , and ? No & a ,  . . . , ? Node , , are conveyed . 
? Acts : a PCA that conveys the fact that ? Node , +1 is derived from the premises ' ? Nod q ,  . . . , ? Noden by applying ? M . 
? Features : ( bottom-up general explicit detailed ) If the conclusion ? Node , + l , the premises and the method ? M are instantiated to a G  S1  , ( aG , 92 , S ~ GS . , ), defs'ubse . t respectively , the following w . ~ rbal-ization can be produced : " Since a is an element of S ~  , and $1 is a subset of S . , , a is an element of oe2 according to the definition of subset . " Alrivial suh proof may be presented as a single de-riwttion by ornitting the intermediate nodes  . ' this nezls . ubproof is also suggested by the local focus . This is sinmlated by a bottom-up operator called Simplify-Bottom-Up  . Currently seven bottom-up operators are it , l . egrated in PROVERB . 
6. Verbalization of PCAs
Macroplanning produces a sequence of PCAs . Our miero planner is restricted to the treatment of the ref-eremite choices for the inference methods and for the previously presented intermediate conclusions  . While the former depelMs on static salience relating l  , o the domain kuowledge , the latter is similar to subsequent refi . ' rences , and is the rel bresensitive to the context , in particular to it : s segmentation i to atten l , ional hierarchy . Dnetospace restrictions , we only show the following piece of a prc verbal message as an example  , he-i , lgaPCA enriched with reflq'encedmices for reason saml nn ! l  . hod by themicroplanner\[IluaDdh,IIua94b\] . 
(Derive Reasons : ( ( ( ELE aU ) explicit )   ( ( SUBSET U F ) omit ) )
Conclusion : ( ELEaF)
Method : ( Dof-Subsotomit))
Our surface generator TAG-GI'~N\[ Ki194\] produces the ul , terance : " Since a is an element of U , a is an element of F . " Notice , only the l'\[~as on labeled as " explicit " is verb-alized  . 
Finally , to demonstrate the type of proofs currently generated by PI~OVER  . B , below is the complete out-l ) ut\['ora proof constructed by f2-MKIIP : Thc , orem : Let /' ~ be a grou I ) and U a subgroup of F , if I and Iv are unit elements of F and U respectively  , then 1 = 1? : . 

Proof:
Let F be a group , U be a subgroup of / , ' ,   1 he a unit element of F and lube a unit element of U  . 
According to the definition of unit eleme , lt , Iur EU . 
Therefore there is an X , XCU . Now suppose that ~ tl is such an X . According to the definition of iln it . \[Che711\]element,ut*1u=ut . Since U is a subgrmt p of t : ', UCF . " lq terefore1 uEF . Similar lyul GF , since\[\[);,19'-'\] ul GU . Since F is a group , F is a semigroui ) . Becauseul * lcr = ul ,   1u is a solution of tile equation " l * X =\ [ EP93\] ul . Since 1 is a unit element of /", v x *1 = ul . Since 1 is a unit element of F,1CF . Because tq ~\[' , 1 is a solution of the equation ul * X = ul . Since F is a group , lry = 1 by the uniqueness of solution . This\[ Gen35\] conclusion is independent of the choice of the element ut  . \[ CS sq 7 . Conclusion and lhlture " Work\[ll ~ , vss\]This paper puts forward an architecture that comlfines several estahlished NL generation techniques adapted for a particular application  , namely the presentation of ND style proofs . We hope that this architecture is also of general interest beyond this particular application  . 
The most important feature of this model is that hierarchical planning and unplanned spontaneous presentation are integrated in an nitbrm framework  . 
~Ibp-down hierarchical planning views language gmmr-ation  , ' ~ splanned behavior . Bmsed on explicit colnn ! u-nicative knowledge n coded as schemata  , hierarchical planning splits a presentation task into sul~tasks  . Although our overall presentation mechanism has much in common with that of H  . ST-Imsed text plan m . ,rs , the\[I , :i\]9 , 1\] topdown planning operators contain mostly complex presentation schemata  , like those in schema-based plamfing . Since schemata-based planning covers only \[ Mct ) 83\] proofs of some particular structure , it is complenlen-ted by a mechanism called hottom -uppresentation  . 
Bottom-up presentation aims at simulating the un -planned part of proof presentation  , where , a proof node \[ McI ( . 85\] or a subproof a waiting present . ation is chosen as the next to he presented via the local derivation relations  .  \[  Moo89\] Since more than one such node is often available , the local focus mechanism is employed to single out  . the candidate having the strongest semantic links with the\[  Och7!J \] focal centers . The distinction between l~lanned and unplanned behavior enables a very natural segment-\[  ParS8\] a tion of the discourse into an attentional hierarchy  . 
This provide an appropriate basis for a discourse theory which handles reference choices \[ Iluagdb  .  \[  l'~ei91\] Compared with proofs found in mathematical textbooks  , the output of PROVERB is still to , tedious and inflexible . The tediousness i largely ascril ) edto\[ Sibg0\] the lack of plan level knowledge of the input proofs  , which distinguishes crucial steps from unimportant details  . Therefore , sophisticated plan recognition techniques are necessary  . The inflexibility of text currently produced is partly inherited from the schemata-based approach  , for which a finegrained plamfing in terms of single PCAs might he are medy  . It is also partly due to the fixed lexicon choice  , which we are currently reimpl cnmntiug . 
References\[Ilua 94a\]\[ltuag , ll , \]\[IIua94b\]l ) . Chester . The translation o\[formal proofs into English . Artificial Intelligence , 1976 . 
R . Dale . Generating Re/erring I'T x pressio , Js.
MVI " Press , 1092.
A . Edgar and P . .\] . Pelletier . Natural angnage explat ) llttiottoflla . Lllr ; tlde . dllctiolt proofs , in Pr'o e . of the first Conf . of the t ' aeqic Assoc . 
for Comp . Linguistics , 1993.
G . Qentzen . Untersuchungen ( iber das logische
Schliegen1. Math . Zeitsehrift , 1935.
B . J . Grosz and C . L . Sidaer . Attention , intentions , and the structure of discourse . Computational Liug . istics , 1986 . 
E . It . \ [ Iovy . (/ enerating Natural Language under Progm , tie Coustrints . L ; twrence Erlbaum
Associates , \[ Iillsd Me , 1988.
X . IIuang . Reconstructing proofs at the assertion h-'vel . In Proc . o \] l~th CADE , 199, 1, for th-e Oll litlg . 
X . II uitng . Pl~tnning Reference Choices for Ar-gumentatiw : ~ D : xts  . In Proe . of the 7th International Wo , ' kshol ~ on Natural Language Gen-e . ratiott , 199, 1, forthcoming . 
X . IIuang . A Reconstructive Approach to Human Oriented Proof P ~ vsentation  . PlID thesis , ( lniversitiit des Satarlatn des , (- lermally ,  1994 , forthcoming . 
A . Kilger . Using U'I'AQs for increment : d ; tnd parallel generatit m . Computation allntelli-\[lence , forthcoming ,  11994 . 
1) . l ) . McDonald . Natural language generation its ; tCOmlmt , ' ttion Mprn\[~leln . In Brady/llcrwick : Computational Models of Discourse  . MI'\] . " Press , 1983 . 
\[( . R . MeI(ec ~ wn . Te:L't ( ~ eneratlon , Cambridge
University Press , 1985.
J . I ) . Moore . A Reactive Approach to l:2xphm-ationi . Expertarm A doice-Gioin 9 Systems . 
PhD thesis , Univ . of California , 1989.
E . Ochs , I ' lamled ; tmlulq ) lanned discourse.
Synt . x and ?' em~mlies , 1979.
C . P ; tris . Taih ~ ring object descriptions to zt user's lew d of expert i :  ; e . Compulutional Lin-guisl . : s , 1988 . 
N . leithinger . Eine parallch ~ Architektur zurinkrententeller Dialogbe it riige  . Pill ) thesis , Uni-versitiities Saarlrtndes ,  1991 . 
P . Sibun . The loc ; tlorg,'tnization of text . In I ( . R . McKeowneta1, editors , Proc . of the 5th International Workshop on Natural Language ( ? ener . tion , 1990 . 

