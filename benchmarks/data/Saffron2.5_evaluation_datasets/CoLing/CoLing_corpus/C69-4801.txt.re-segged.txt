CONTEXTUAL GRAMMARS
-Solomon Marcus-
Ins Ututul de Matematica
Str , Mihal Eminescuo 47
Buchare St 9, ROMANIA
In the following , we shall introduce a type of generative grammars , called contextual grammars . They are not comparable with regular grammars - But every language generated by a contextual grammar is a context-?ree language  . Generalized contextual grammars are introduced , which may generate non-cox , -text-free languages . 
Let V be a finite non-void set ; Vlary . Every finite sequence of elements in ia called a vocn bu- 
V is said to be a string on V . Given a string x = ala2 .   .   . an , the number n is called the length of x . The string of length zero is called then tring and is denoted by r ~ J  . Any set of strings on V is called a language on V  . The set of all strings on V ( the null-string inclusively ) is called the universal language on V . 
Byan-we denote the string a . . . a , where a is iterated n times . 
Any ordered pair ( u , v ~ of strings on V_ is said to be a contex ~ on V  . The string x is admitted by the context < u , v > With respect to the language Lifu ~ GL . 
Let . ~ be a finite set of strings on the vocabulary V ~ and let@beafinites e@of contexts on V  . The triple ( v , ~ , ~)) (1) is said to be a contextual l ~ rammar ; V is the vocabulary of the grammar , ~ is the ba_s_e_of the grammar and ~ is the co m  ~  , --2-textual ccmoonent of the grammar . 
Let us denote by ~ the contextual grammar defined by  ( 1 )  . Oonsider the smallest language L on Vj fulfilling the following two  conditiom8   ( ~ JIz ~ and < u , v > ,  (~)  , th --~ = , L . 
The language L is said to be the lsm guage generated by the contextual grammar G  . This means that the language generated by G is the intersection of all languages Lful fill-ing the conai ~ ions  ( ~ ) and ( pj . 
A language ~ L is said to beae onte F ~ ual language if there exists a contextual grammar G which generates L  . 
Proposition i . Eyer ~ finite language is a cont ~ uallan -Proo__f  . Let V be a vocabulary and let ~ be a finite lan . 
guage on V . It is obvious that the contextual grammar ( V , L4j O ) , where 9 dauotes the void set of contexts , gauerates the language LI . The same language may be gamerated by means of the  . g ? contextual grammar ( V , I ~ , where is formed by the nu ~ contex ~ only . 
Two contextual grammars are called e~uivalemt if they gems-same language  . The grammars CV , LI , O ) and ( V , ~ , ~ rate the are equivalent , since they both generate the language ~ The converse of Proposition  1 is not true . Indeed , we have Proposition 2 . The universal language is a contextual language . 
ProOf . Let V = ~ al La2, .   .   . ~ ~ . De~ote by I~theumiver . 
Sallanguage on V . 'T . etusput ~" S ~ . ~ . ~ and t <~'' i ""
C-3-~, a ~ , , . . . s(~, ian>~It is easy to see that the grammar . 
( V , ~ generates the universal language on V.
Remarks . If we put , in the proofOf Proposition 2 , LI-V instead of h = ~' then the grammar ( V_ , h , @) does not ge-nerate the universal language on V , since the language it generates dDes not contain the nu/l-strlng  . 
In order to illustrate the activity of the grammar  ( V , ~ , ~ defined in the oflet consider the proof proposition  2  , US particular case when the vocabulary iSformed by two elements only : V =  ( a . b ~ . The general form of a string x on V is x = a ~ b ~a - ~ b ~  .   .   . a ~ b ~, where il , Jl , i2, j2, .   .   . , ~, j ~ are arbitra ~ non-negative integers . In order to generate the string x , we start with the null . string@@ and we apply il times the context ~ , a  ~ . The result of this operation is the string a 11 , to which we apply Jl times the context < ~ , b > and obtain the string al ~~ I . Now we applyi ~ times the context < ~ , a > , than J2 ti~es the context ~ , b _> and we continue so alternatively . ~hen,~dter2p-2 steps , we have obtained the
J = aibJlaib2 oooLP " ib-i , it is ply . ~ti~es ~ necontext ~@ , ~ and , to the string so obtained , j p times ~: e contex ~ ~ gb > , in order to generate completely Uhestring Xo Haskell Curry considered Ghelarlg ~ age L = abn ~   ( n = l , 2~ . .o ) as a model of ~ he set of natural numbers \[5~ o We call L the language of Curry . 
Prooosiuion 3 . The language of Curry is a contextual lan-gu ~ eo proof  . The considered language is generated by the grammar  ( V , LI , ~)  , where V = ~ a . b ~, I ~ = ~ a3-nd ~ ~< ~, b ~ . 
We recall that a language is Said to be regular if it may be generated by means of a finite a atom a $ on  ( or , equivalently , by means of a finite state grammar in the sense of Ohomsky  )  . 
Proposition 4 . There exis $ ~ a contextual language which is Proof  . Let us consider the language L = ~ a-n bn(n = l , 2 ,  . . . ) If we put V = a ? b , L1 = ~ ab ~ and ~~< a . b > , then it is easy to see that L is generated by the con~extuai grammar  ( V , LI ,  ~  . On the other hand , Lisn~t a regular language . This fact was assel~ed by Ghomsky in \[3~ and \[~\] , but the proof he gives is wrong . A correct proof of this assertion and a . discus-sion of Chomsky's proof were given in \[ ~ \]  . and ~ . 
Propositions 2 , 3 and # show that there are many infinite languages w~ioh are oontextual  . This fact may be explained by means of P~posi ~ ion  5  . If the set ~ is non-void and if the set ~ contains at least one  non-nu/1 contex ~ I ~ hen the contextual gram-ma___r_r ( V . Ll , ~~ enerates an infinite language . 
Proof . Since LA is non-void , we may find a string x be-@longing to ~ io Since contains  , at least one non-nu/\]context , @? let ~ u , v ~ be a non-null context belonging to . l ~ rom these assumptions , we infer that the strings , u2 xv2 ,   .  ? . , un~,, . .
are mutually distinc ~ and belong all to the language generated by the grammar  ( V , I ~ ,  )  . Thus , ~ his language is in finite . 
The converse of Proposition 5 is true . Indeed , we have //- 5-Proposition 6 . If the contextual 6 rammar(V , LI~gau ~ rates an infillite language , then ~ Ll . is non-void , whereas@c0n-rains a no ~- nult context . 
proof . Let L be the language generated by ~ V ) LI ~ . If is void , Lisvoid too , hence it cannot be infinite . If contains no non-null context , we have L = LI . But ~ disinany ease fl ni ~ e ; ~ hus , L is finite , in contradictiom With the hvpo-thesis . 
Since there are contextual language which are not regular  ( see Proposition 4 above )  , it would be interesting to establish whether all contextual languages are contextfreels ~ guages  . The amswer is affirmative : Proposition 7 . _E very contextua ~ lan ? . ua ~ e is a contextfree PrP ~ o of . Let b be a contextual language . If Lisfinite , it is a regular language . But i ~ is wellknowm that every regular language is a contextfree language  . Therefore , L is a contextfree language . No we let us suppose that L is in finite . 
Deao ~ e by G = ( V , ,L l , a contextual grammar which generates the language L  , In view of Proposition 6 , LI is non-void , whe-ream there exists an integer i , l~i ~ p , such that the con-~ext ~ ui , vi ~ is non-nu ~ Joe . at least one of the equalities ui = co , vi = ~ is false . Let us make a choice a ~ d suppose tha@~ . i ~ ~ Let L ~= x cA , xp_, .   .   . 9 ~ a and (~) = < ultVl >, ~ . , U , . ~,V . " y . We define a contextfree grammar ~) . .@ as follows . The terminal vocabulary of ~ is V . The nonterminal vocabulary of ~ contains one element only-denoted by S-which is  , of course , the axiom of the grammar ~ . The ter--6-minal ~ rules of ~' are,
S-->_x1, g--~xa ,
S.--*_X n whereas uhen on terminal rules are
S - - - > u ~ 5% v - i '
S ---) u qSv ~ ,
It is obvious tha ~ the number of terminal rules is equal to the number of strings in ~  , whereas the number of nonterminal rules is precisely the number of conuexts in ~  . Among the nonterminal rules , there is one at least which is nontrivial : it is the rule S---> UiSv ~  .   , where '*4 ~" It is not difficult to n rove that the grammar ~generates the given language L  . Indeed , the general form of a string in
L __ is where yGV and <~ i , V ~> E ~ for s = 1 , 2 ,  . . . ,p . 
In order to generate the considered string we begin by applying -- Jl $ imes She rule 
In this way , we obtain the expression h
The next step consists in applying J~2 times the rule v -7 -- a ~ , ~2 sv ~ . ~ . , which yields the expression
J  ~ Ja-Ja-J ~ s HaN1 ) t ~ . . ., -7! l
O ontinuing in this way , we arrive , after pression , ~ z " i a ~- is J ~-\] . J2  ~ aus1  ~ , a .   .   .   .   . '$1-"-%'i "'"~12" . % "
Vienow apply j . p times the rule and thus we obtain the expression  p1 steps , to the ex---Jp . ~  . ~!21  . Ja ': ll . J . l .  , . i2 . ujp-1~S--"Ull'~i2 . . . . ~- l . V ~ p~-l "" vi2-V-il where , by applying the terminal rule
S - - @ Z , the considered string is completely generated , Thus , we have proved that L is contained in the language generated by ~  , Conversely , let z be a string generated by ~ . The general form of this generation involves sev ( ral consecutive applications of nonterminal rules ( the number of these applications may be eventually equal to zero  ) followed by one and only one application of a terminal rule  . It is easy to see that the result of this generation ? is always a string of the form  ( 2 )  . 
Thus we have proved that the language generated by ~ is con-taiued in L  , In view of the precedim ~ eonsiderations , LiS precisely the language generated by ~ o Proposition  7 easily permits to obtain simple examples of .   .   .   .   . J -8 -languages which are not contextuall ~ guages . For instance , ~ hel~-~uage of Kleene ~ an ~( m=~ , 2 ,  . . . ) , the first example of an infinite language which is not regular  , is a very simple example of ~ contextual language  . It is enough to remark that the sequence ~ n2 ( ~ = 1 , 2 ,  . . . ) contains nO subsequaucewhioh is an infinite ari ~ hmebioprogression ~  ( We have ( n + l ) 2-n22 ~+ l and lira ( ~+ i ) =~ , therefore for every subsequence of ~ n2 the difi'erance of two conse-cutive terms has the limiu equal to + oo wh ~ n -@ ~  )  . But a result of \[4\] asserts , among others , that given am in finite contex~-f1~ee lan~guage L , the set of integers which represent the len~hs of the strings in L contains an infinite arithmetic progression  . It follows uhabb ~ Jelanguage of Kleene is not contextfree and  , in view of Pro-oosition 7 , it is not a conbex ~ ual language . T~sa-~~a~T ~@ low*~,~~h~-,~:3 . A , ~ . ? ~\ [ g'J,~,,#? . 
A natural question now arrises : Do there exist noncontextual languages a ~ ong contextfree languages  7 The affirmative answer follows fro ~ the following remark : The converse of Proposition  7 is not true . Indeed , we have Prooositiou 8 . There exists a . conte . ~- free language which is not a contextual language . 
Proof . Let V = ~ a,b ~ . In view of a theorem of Gru~Lkl ~~__ . - - - - - ~ there exists , for every positive integer_n ~ a contextfree language I ~ on V  , such that every contextfree grammar of I ~ contains at least n nonterminal symbols  . But , as we can see in the proof of Proposition 7 , every contextual language may be generated with a contextfree grammar containing only one non- ~erminal symbol  . Therefore , if _n~2 , ~ is not a contex ~ usll ~ guage . 
Proposition 8 suggests the natural question whe ~ bsr ~ bere exist regular languages which are not contextual lan~ages  . The ? I -9 -answer is affirmative : Pronosition 9- There exists a regular language which is not a contextual language  . 
Proof ~ Let us consider the laugaage L = abm-~c ~ a  . ~n ,) ~, n == 1, 2, . . . ), which was used b~H . B . Curry\[5\] , in order to descrl be the set of mathematical ( true or not ) propositions . This language is regular , since it can be generated by the rules S-->Abj Ac->Ab  , A . -- ~ Ba , B - -> CC . , G_--~~, C--~Db, . D_--~a , Weshall show that . L is not a contextual language , Tndeed , let us admit that the contra-ry holds and let G = < V  , ~ , ~> be a contextual grammar of L_2 Here , the gene_ . -alform of a string in L is ~""- us ~ Ix ~- ~ . . . vi = (3), wheas ( t = 1, 2, .   .   .   , =) where "'' , Pn are arbitrary positive integers . This means that ul , ~2, . . . 
. ? ----,_Un , Vl,Y2,- . . , v ~ in the expression ( 3 ) are formed only by those elements of V whnse number of occurences in the strings of L is unlimited  . Only h satisfies this requirement . It follows that in any string of . L both occurrences of s and the occurence of ~ are terms of the string x in  ( 3 )  . But this implies that the intermediate terms between the occurrences of a are terms of x  , hence we can find two strings y and , ml The string y is obvioasly . the null-string ~ othe form 1~ .   , hence " z such that , whereas z is of But m may be here an arbitrary positive integer  . Therefore , since-lo-X6~ , it follows that ~ is an infinites e ~ of m trimgs . This fact contradicts the assus ~ tion concern_tug G!v  , is ~ tacon textual language and Proposition 9 is proved . 
The contextual grammars may be generalized in order to ge-nerate some lauguages which are not contextfree  . 
A generalized contextual ~ r ~ mmar is a quadruple G  =~   ,   , L2 ,  ~  , where V , LI and ~ have the same meal ~ gas in bhe definition of a contextual grammar  , whereas J'2 is a finite set of strings on the vocabulary V . We define the language LG generabed by G in the following way : Y ~ is a language on Va~dxe ~ if and only if we may e ~ press x in the form  . - where z ~, y ~ Le , < ui , Yi > ~ for i : 1, 2, . . . , n  and pl , P2, . . . , pn , pare positive integers such that pl+P2 . .,~n=p . 
Every language generated by a generalized contextual grammar is said to be a generalized contextualls nguage  . 
I ~ , in the delini ~ ion of G , we take L~=~c ~ , G is equivalent ~ oa contextual grammar ! the lang  ,   . % is then precisely the language generated by the contextual grammar ~ V  , LI  ~ . In_deed , the general form of a string in the contextual language generated by ~ Y ~ LA  , ~ isl
P ~ a PnPaP2Pl proyed ~ roposition lo . \] ~ eryoontex ~ ual language ~ sa ~ eneralized contextual lan~uaKe  , -ll-We may consider a conte ~ ual grammar as a parbicular case of generalized contextual grammar  ,   . by ideat if yimg the contextual grammar ~?'~1~ with the generalized contextual grammam ~ , V , ,~ , " It is interesting to point out that some t ~ imes a cont~ual language may be easy generated by a generalized contextual grammar which is not a contextual grammar  . For instance , let . us con-sider the l ~ . ~ eL = (~= ( ~ X , 2, . . . )  . ~~ is , or the proof of ProDosition A , L is a contextual language . We map ge-nerate L by the generalized contextual grammar  ( which is not a co = textual ~ r ~ a ~ ) <v , h ~ > , where v : ~ , b ,   . Li_-\[c ~, ~= Ibm , ~=\ [ a , ~ . It is known that , ~_ is not re-S~L % ag . We ma~give a similar example , wi~ha language which is regular . In this respect letus consider the language of G ~x~V~  . ~ . 
In view of Proposition 5 , it is a contextual language . It is a regular language too ~ since it may be generated by the regular gramm ~ r contain ~~ he following two rules : q--~Sb and S-->a  . 
Now let us consider the generalized contextual grammar < ~ i ' This grammar generates the language of Curlew  , but if ' is not a centext , ~algran ~ nar . 
~owletus show that generalized contextual languages are an effective generalization of contextual languages  . 
Propo . sition ii . There_existsa_gen=e=~iaed_gA~ntextua ! language which is ~ IQ ~ ae on ~ ext~sl language  ,  ~  , Let us consider the language T , = ? an_b . n  ~ . . n  ( n:=-l,2, .   4 It is known that this language is not contextfree  ( see , ? or instance , 66\]  , p . ~) . 7 nview of Proposition 7 , every contextual- 12 -language is a contextfree language ; hence ~~ is not a con . 
textual language . Now let us consider the generalized contextual gr ~m ~ G=<V  , ~ , ~2 , ~> ,   . here v =?~,~,~~,,~~ and ~~(~ a > ~ . It is easy to see that G generate ? theie a-guage L  . 
Yrom the proof of Propositionll it follows immediately  ; Proposition 12 . There exists a ~ eneralized contextual langu_~e which is not a ~  . nnteYt-f ~ ee language . 
We may no wask whether the converse of Proposition  12 is true . The answer is given by Proposition 13 . There exists a context-free ~ a ~ e ~ even a regular language  , ~ which is . , not a generalized contextual ! ~ ua ~ e . - ~ P  #o of . We may consider the language L = ~ sbmc_abn-(~ , n == 1 , 2 ,  . . . ) used in the proof of Proposition 9 . It was showed in the proof of Proposition 9 that L is regular . Let us admit that ~ is a generalized contextual language  . Given a string x in L , its representation is of the form
PlP2 PnPP~P2Pl~m ~ : uiu ~ . . . .~ n . .~ . y'v . "  . . . v2vi where ~ ui , vi ~ ~( i = 1 . . . . , n ) , ZG ~, y~L2,pl+ . . . + pn = pendG = ~ V , L 1 , L  ~ , ~ is the gr smmar of L . By a reasoning similar to " that used in the proof of Proposition  9  , we find that for every positive integer m there exists a string z in \] iI such that z = abmcab s  ~  , where s is a non . negative integer , depending mfm . Butthls means that ~ e ontain ~ infinitely ma ~ strips  . This fact con . . . 
tradicts the definition of a generalized context u ~grammar  . It /
L- 13 -follows that L is not a generalized contextual language  , It is to be expected ~ hate very generalized contextual language is a contex~-s~itive language  . But the construction of the corresponding context -sensitive grammar seems to be very complicated  , if we thin ~ to the generation of the language ~ u  . A . ~reider has introduced a new type of grammars , called gralam at lkl ) and defined i ~ neighborhood ~ ira ~ . L ~ ars(okrestnostnye ' the following way(\[4o) ; see ~4\] . Our presentation is somewhat different ) . Given a finite set V called vocabulary , two strings x and y on V , and a context < u , v > on V , We say that the pair ~ u . v > , y ) is a neighborhood of y with respect to x if we can find two strings z and w  , such that x = zu ~ v w . 
Every pair of theior ~~< u , v > ,  ~\]  , where ~ u , v > is a context on ~ , Whereasy is a string on V , is called a neighborhood on V . Let us consider an element e which does not belong to V  ; G will be called the bo~3 dary element . A neighborhood grammar is a triple of the form ~ V  , e , ~  , where V is a vocabulary , is the boundary element and ~ is a finite set of neighborhoods on the vocabulary VU  ( e . Let L beal ~ a guage on V .   2e say that L is generated by the considered neighborhood grammar if ~ i every string x of the form x = ~ ye  ( with ymL )   . and only in such string s-there ~ ists in ~ , f are very ter aai of X = ~ la2 . . . as , a neighborhood of ai with respect to x . 
Neighborhood gray , mrs are closely related to the notion of context , since this notion occurs in the definition of a neighborhood  . There is another notion , due to Ja . p . L . Vasilev ski ~ and -14-~ . V . Ghom~ak6v ( see ~ here fermnce in ~2\] , p , ~ o ) , whiche ~ lains this fact . Following these authors , a grammar of contexts ( this name is imp_roper , since no context occurs among its objects ) is a triple < V , e , 9>  , where . V and@have the s-memeaning as in the definition of a neighborhood grammar  , whereas Q is a finite set of strings on the vocabulary  Vt3e ~? This grammar generates the language_L on V in the following way:  x6 if and only if for every string y and a ~ y strings z and w for which there exist strings u and v such that@x@==uzyuv we have either l  ) y = rasp , where sEQ , whereas the strings m and p may be eventually or 2  )   ( ~ x @= ury nt , where qr = z , nt = w madry n is a string belong ~ g to Q . 
A string belonging to Q is said to be closed from t ~ le ~  ( from the right ) if its first ( last ) term is @ . A string belonging to Q is said to be ~ if it is closed bosh from the left and f~m the right  . 
A grammar of contexts is said ~ obek-bounded if every non-closed string of _~ is of length_k  , whereas every Clesed string of ~ is of length not greater than _kj An important theorem of Bor?~ev asserts the equivalance between languages generated by neighborhood grammars and lan- guages generated by k-bounded grammars of con~s  ( ~?3 , p . 4o) . 
Since grammars of contexts and contextual grammars have some similarities in their definitions  , it is Interesting to esta-blish more ~ xac~ly the relation b ~ een them  . 
v-15-
Proposition 14 . There exists a contextual language ~ hiohis regular  , but which is not a neighborhood language . 
Proof . Let us consider the language L = ~ a~n ~ ( n = l,2, . . . ) . 
This language is regular , since it is generated by the regular grammar consisting in the rules S~~a  , T--->U a , U---> Ta , - - -> a , where ~ is the start symbol , La ~ is the terminal vocabulary , whereas S , T , U is the non-terlainal vocabulary . Let us consider the contextual gramnu ~ rG = ~ a , CO , ~ a , a>~ . 
I@is easy to see that G generates the language ~ $ therefore 
L is a contextual language.
We shall show that L is not a neighborhood language  . In this respect , our method will be the following . We shall consider all systems of possible neighborhoods of the terms of ~ hestring  0aae and we shall showt ~ at every such sysbem is either a system of a eighborhoods of the ~ erms of every string Cane  ( n == 2 , 3 , 4 ,  . . . ) or it is not a system of nei@\]borhoods of the terms  0t the string e a@e . It is easy to see that the first ~ erm of the string@aa@admits~he following neighborhoods  :   1   ) e , 2) Ca , 3) @ a a , ~) e a a ~ . The second term has the neigh-borhoo as : l)G_a , ~)-a ~) a a , 4) ~ e . , 5) e_a_a , 6) e_~a e . 
The neighborhoods of the third term are : i)e@a ,   . 2) a a , -~) a , ~)_a e , 5) e a a 8, 6)_a aE) . The lass term has the neighborhoods-1) 8 , 2)_a ~_ , 3) a a@_ , 4)@ a a ~ . The no-ration_u_xv . represents hier the neighbor h ~ d<u,v >, x . 
It is easy to see that the fourth neighborhood of the firs ~ and of the lass term c~tb'ea neighborhood of e with respect@o@  g48   . On Sheotherhand , a is a neighborhood of . a a with respect to e a ~@ for every n = 1, 2, .   .   .   . It follows that no- 16 -neighborhood grammar of L = ~ a2ZX   3 may contain one of Sheneigh . 
borhoods_0a2@, Q a2 ~ and a . Thus , if a neighborhood grammar of \] ~ exists , it contains at leas~one neighborhood from every group of the following four groups of neighborhoods : ~  )  _0  , _ ~ a , _ea 2 . 
~) e_a , _aa , _aae , G~a , ~. aa O.
b')6~-~, aa , .. aO , ea_a ~, agO.
We shall consider all possible combinations betweau a neighborhood of the group ~ and a neighborhood of the group E  . By mn we shall denote the combination formed by them  . th neighborhood of ~ and the nth neighborhood of ~   . It is easy to see Chate very neighborhood grammar containing one of the combinations  12  ,  22 ,  23 ,  25 ,   42 generates a language whiohe ontain ~ every string an with n $  2  . On the other hand ~ every neighborhood grammar containing one of the combinations ll  ,  13 ,  14 ,  15 ,  21 ,  24 ,  31 ,  32 ,  33 ,  ~  ,  35 ,  41 ,  43 ,  44 ,  45 ,  51 ,  52 ,  53 ,  5~ ,   55 generates a language which either does not contain the string a  4 or contains every string an with n ~ 2  ?  ( This depends on the fact if the neighborhoods aa or a a belong or not to the considered neighborhood grammar  )  . Thus , there exists no neighborhood grammar which generates the language  ~2n   3  . 
But the definition of ( generalized ) contextual grammars , though adequate to the investigation of the generative power of purely contextual operations  , does not correspond to ~ he situation existing in real  ( natural or artificial ) l ~ guages , where every string is admired only by some contexts and ever yo ~ u ~/-  17 -admits only some strings . Let us try to obtain a type of grammar corresponding to this more complex situation  . We define a con___y-textual grammar with choice as a system G_=<V  , L , ~  , ~ o > , where V , L1 and ~ are the objects of a contextual grammar , whereas is a mappi ~ defined on the universal language on V and havi ~ the values in the set of subsets of ~  . We define the language generated by G as the smallest language L having the  follow-1 ? ~ Llx ~ L 2 ? ing properties : If x , ! If ye L , < u , y > 6~( y ) and Z&~l , then u ~ L , zv ~ L and ~ L . Thus , every strin ~ chooses some contexts and every context chooses some strings  . We define a contextual language with choice a language which is generated by a contextual grammar wit~oioe  . The investigation of these grammars and languages would better show the generative power of contextual operations  , in a manner which corresponds to the situation existing in real languages  . 

References i . Y . BAR-HILLEL , ~ I . PEEL ~, E . SHA~R : On formal properties of simole phrase structure grammars  . Zei~schrift fur Phonetik , Sorachwissensc ~ aft und ~ ommunikatio ~ forechung , vol . 14,1961, p . 145-172 . 
2 . V . B . BOP ~ EV : Okrest no stn ~ egram ~ a tiki . Nau~o-Techni ~ eskaja Informacija , Serija 2 ,  1967 , ~ o . ll , p . 39-41 . 
3 . N . GHO~SKY : Three models for the description of language  . IRE Transactions on Information Theory , IT-2 ,  3 , 1956 , p . ll~-12@ . 
4 . N . ~O~KY : Syntactic Structures ~ Gravenhage , 1957 . 
5 . H . CURRY : Some logical aspects of ~ ra ~ matical structure  , pro-eeedings of the Symposium in Applied ~ a thematics  , vol . 12 , S ~ ructure of language and its mathematical aspects  , Amer ~ ath . 
~ oc ., 1961, p . 56-68.
6 . S . GI~SBURG : The mathe ~ atical ~ heo~f contextfree languages  . 
~cGraw-Hill Book Company , New York , 1966.
7 . J  ~ XA : On a classification of context-fre ~lauguages  . 
Kybernetika , vol.3, me.l , 1967, p . 22-29.
8 . S . ~ CUS : Gramatici ~ i automate finite . Editura Academiei
R.P.R ., Bucure ~ ti , 196@.
9 . S . ~ AR~JS : Su ~_les grammaires & unhombred ' ~ tats fini  . Ca . 
hiers delin ~ uistiqueth@orique et appliqu ~% vole ~ , 196~ , p , ~W~-~&@ . 
io , Ju , A . ~REIDER : 0 krest no s~naja model jazy ka , Tru ~8 impozium a pO primenen i jamporo ~ . daju ~ iohgrammatik , Tar~u , sept jabr ~1967 . 
ii . Ju . A . ~REIDER : Topologi ~ eskiemod ~ lldazvka . Vsesojuzz ~ yistitu $ nau ~ noiitechni ~ eskoi informacii  , ~ oscou , 1968 . 
