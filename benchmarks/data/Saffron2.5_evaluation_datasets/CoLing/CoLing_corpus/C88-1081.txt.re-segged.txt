Representing Regularities in the Metaphoric Lexicon 
James H . MARTIN
Berkeley Artificial Intelligence Research
Computer Science Division
University of California
Berkeley , California


This paper describes a system for representing knowledge about conventional metaphors for use by natural language analysis  , generation and acquisition systems . A system of hierarchically related structured association si used  . These associations are implemented as a part of the KODIAK representation language  . Particular attention is paid in this paper to representational mechanisms that can capture generalizations over the system of conventional metaphors as a whole  . 
1. Introduction
The most commonly occurring words in English display a wide range of metaphorically motivated meanings  . A knowledge representation system capable of representing these meanings must satisfy two competing requirements  . The first requirement is that it must be capable of representing the specific details of each lexicalized metaphor  . More precisely it must provide enough knowledge to permit he easy recognition and interpretation of a particular use when it is encountered  . 
The second requirement is that the representation must capture the relevant generalizations manifested by the system of metaphors underlying the lexicon taken as a whole  . The system therefore must represent both highly specific facts and capture systematic generalizations  . 
2. Conventional Metaphors
A conventional metaphor ( Lakoff and Johnson 1980 ) consists of source and target concepts . The target concept is the concept that is actually under consideration  . The source specifies the concepts in terms of which the target concept is being viewed  . When we refer to metaphoric knowledge we mean explicit knowledge of the conventional associations between various source and target domains  . These associations are a conventional part of the language  . 
The first requirement therefore is that the representation must be able to capture individual metaphors as concepts consisting of sets of associations between source and target concepts  . Consider example (1) , (1) How can Ikilla process ? This example , from the UNIX domain , involves the conventional metaphor that tokill an ongoing process means to terminate it  . The target concepts involve computer processes and the actions that terminate them  . The source concept is that of the action of causing a living thing to die  . The metaphor consists of the source , target and the set of associations linking them . The associations specify the correspondences between the source and target concepts  . In this example they must specify that : the concept kill corresponds to terminate  , the victim of the killing is the process terminated and that the killer is the agent of the termination  . 
3. Metaphorical Regularities
It is not enough for the representation to simply account for each individual conventional metaphor in the lexicon  . The set of metaphorical word senses in the language taken as a *" I hilre search was sponsored in part by the Defense Advance Research Plojeets Agency  ( DOD )  , A1 paOr der No .  4871 , Monitored by Space and Naval Warfare Systems Command under Contract No  . N00039-84-C-0089 . 
whole exhibits a number of regularities that must be accounted for  . This paper will consider two of the most important regularities  . The first is the metaphoric use of different words motivated by a single underlying metaphor  . The second regularity has to do with the use of the single words with metaphors that exhibit various degrees of similarity  . 
Consider the following examples.
(2) Mary has a cold.
(3) John gave Mary a cold.
(4) Mary got a cold from John.
The various uses of the verbs have , give and get in these xam-ples are not instances of isolated metaphors  . They all , arise from a common conventional metaphor centered around the idea of state as possession  . This metaphor entails to be in an infected state is to possess a disease  . The transfer metaphor underlying ( 3 ) and ( 4 ) is a natural extension to the core possession metaphor  . In the source domain , the concepts giving and getting are events that result in a having  . In the same way the concept infecting leads to an infected state  . Therefore the metaphor infection-is-transfer follows coherently from the core possession metaphor and the structure of the source and target concepts  . The representation should efficiently capture the fact that coherent underlying metaphors give rise to surface metaphors that may involve several closely connected words  . 
Now consider these xamples.
(5) John gave Mary a cold.
(6) John gave Mary the flu.
(7) Mary gave John a good idea.
(8) Mary gave John a cold.
The similarity of examples ( 5 ) and ( 6 ) is clearly a result of the application of the same metaphor to two closely connected target concepts  ( infection with either a cold or the flu )  . The transfer metaphor in this case is at a level of abstraction that subsumes both of these examples  . The representation must therefore permit the representation of metaphors at an  , appropriate lvel of abstraction . 
Examples ( 7 ) and ( 8 ) are however not in the same kind of close similarity relationship  . The metaphors underlying these examples have completely dissimilar target concepts  . 
Nevertheless they do exhibit an underlying structural similarity  . In both cases an abstract effect upon a person is viewed as a transfer of an abstract concepto the effected person by the agent responsible for the effect  . A finegrained representation involving the hierarchical sharing of subparts will be used to capture this more distant similarity and still permit the representation f the distinc target concepts  . 
The following sections will introduce the various mechanisms that will be used to both represent the specific details of individual metaphors and capture the necessary generalizations and regularities  . 
4. Representational Details
The representation language used to capture conventional metaphoric knowledge is KODIAK  ( Wilensky 1986 )  . 
KODIAK is an extended semantic net language in the spirit of KL-ONE  ( Braehman 1985 )  . The use of structured associations been successfnlly applied to the following tasks : natural language generation  ( Jacobs 1985 )  , text understanding ( Norvig 1986 , Jacobs 1987 ) and the acquisition of new word senses ( Martin 198'7 )  . 
In the following sections , pieces of a KODIAK knowledge base are shown with a graphic representation  . For the purposes of this paper it is sufficient to understand that rectangles represent coherent concepts that can stand on their own  . These are called absolutes . Concepts in circles are called as oectuals . As nectuals are contents that are meaningful only relative to a related absolute  . Absolutes are connected to the lraspectuals via an S  ( Slot ) link . Aspectuals are given type information via the C ( Constrains ) link that indicate the kind of concept ha~can fill this aspectual  . Arcs labelled D ( Dominate ) area kind of ISA oi " inheritance link . For a more indepth description of KODIAK and this graphical representation see 
Norvig (1987).
4.1. Representing Single Metaphors
Figure 1 shows the KODIAK representation ftile source domain fror a  ( 1 )  . It states that a killing is a kind of act i on with a result that is a death-event which is in turn an event  . The kili-victlm of the killing is an inherited role from action indicating that the kill-v ictim is effected by the action  . The kill-victim is constrained to be a L iving-thing and the killer must be an anlmate-agent  . Finally the equate links require that the kill -victlm must be the same as the tiler participant of filed eath-event  . 

Figure h Killing
Figure 2 shows the corresponding concepts from tile target domain  . It states that a terminate-action-processiate rminate-process which is a kind of action  . The term lnated-proeess role is an inherited role specifying the patient of the action  . Tile result of the action is a terminate- process-effect which is a kind of terminate -event  . 
Finally the terminated-process is equated to the terminated-process-event of the terminate-process -effect  , This is analogous to the relationship between the kill-vict lm and the diet shown in Figure  1  . 
What is needed is a way of associating the appropriate source and larget concepts  . Such an association is realized in KODIAK by using a relation called a metaphor-map  . A metaphor-map is a kind of VIEW relation whose aspectuals specify con'esponding source and target concepts  . AVIEW is a primitive KODIAK relation that permits a limited inheritance between concepts without requiring a strict ISA relationship  . 
Metaphor maps are needed to link all the core source concepts in Fignre  1 to their counterparts in the target domain . In particular the killing maps to the terminate -action  , the kill-victim maps to the terminated-process , the killer maps to the actor of the terminate -action and the result of the killing maps to the result of the terminating  . It is the cooccurrence of all these maps that constitutes the conventional metaphor that terminating a process can be viewed as \[ Terrmn !  ) AcuoaS\[Process\]
Figure 2: Terminating a killing.
This conventional cooccurrence of a set of metaphorical associations i called a metaphor -sense  . A metaphor-sense is imply a KODIAK concept hat ties together a coherent set of metaphorical maps  . A metaphor-sense can participate in an unspecified number of component-map relations  . A component-map relation is a kind of component -association relation that holds between a metaphor-sense and a metaphor-map  . Figure 3 shows the metaphor-sense kJ_3 . 1-term?nate-metaphor that ties together all the metaphor-maps underlying example  ( 1 )  . 
To a significant extent metaphor-senses are the minimal meaning-bearing unit of conventional metaphors  . Metaphor-maps represent the building blocks out of which meaningful metaphor-senses are constructed  . The metaphor-sense represents helevel at which one would say that there is a conventional metaphor that to terminate something is tokill it  . 
This level of representation will frequently con : espond to a single metaphorical word sense  . 
4.2. Representing Extended Metaphors
As illustrated above with examples ( 2 ) through ( 4 ) it is frequently the case that a single core metaphor is the basis for the extended metaphorical use of a number of related words  . 
Consider the following exmnples.
(9) John gave Mary a cold.
(10) Mary has a cold.
A metaphor-sense accounting for ( 9 ) with the concepts underlying tile word give is shown in Figure  4  . This metaphor-sense represents the conventional metaphor that to infect can be viewed as a transfer  . The relevant maps to this discussion are the give e-infected  , given-cold , and the give-res-inf-result mappings . These mappings represent the ideas that recipient of the giving is viewed as the newly infected person  , ' the given thing is viewed as the cold and the result of tile giving is the result of the infecting action  . 
Now consider the schema underlying ( 7 ) as shown it , Figure 5 . In this case the have r is the person with all infection  , the cold is theth ! ng had and the having corresponds to the state of being infected  . 
Figure 6 shows the combined source concepts from the have -a-cold and give-a-cold schemas  . This diagram is adapted from Norvig (1987) . In it we can see how the source concepts from these two schemas are closely connected  . In particular : the giving-result is constrained to be a kind of having  ( one that results from a giving )  , the give e of the giving is equated to the hayer of the give e-has-given having  . Finally the given-thing is equated to the had of this same having  . Therefore all of the source concepts of the have -cold schem are either equated to or constrain concepts in the give-cold schema  . A similar analysis follows for the target domain of infection  . 
" ~  . . . . . . . i .   . . . Id/\[infec!-wilh-cotd ~ give-infect-cold ~// ~   , , vor , o0o ? " givc-res-inf-res
Figure 4: Give-A-Cold
Having ~ H.ve . C.1, L_.\]~/~B ? ing-lnf~ed\]~"~s
Figure 5: Have-A-Cold
A given metaphol ~ caluse must meet the following requirements to be considered an extended use of a more tim-damental core metaphor  . 
? The extended sense must contain all the core metaphorical associations a a subset of its own associations  . 
3 98 ? The source and target concepts of the additional associations must be closely connected to the source and target concepts specified by the core associations  . 
? The new source and target concepts must be connected to the core source and targets in a coherent manner  . 
Figure 7 shows the extension relationship between the core metaphor have-cold and tile extended sense give -cold  . 
In this diagram we see that the component metaphor maps from the core sense are shared and specialized by the extended sense  . This section will consider exactly how this instance of an extended sense meets each of the given extension require  . .
ments . This example will be used to illustrate in general the mechanisms that are used to accomplish metaphor extension  . 
Figure 6: Giving and Having
Therfietaphor-map representing the fact that a have r plays the role of the infected  , the hayer-infected map , appears twice in the extended sense , once as the giver-infector and again as the give e-infected  . The giver of the giving maps to the infector ; this matches the core map since the giver is equated to be a kind of haver  . This core map is " also used to represent the fact that the give e is also this kind of hayer as a result of the giving  . The next map to consider from the core is the having-infected map  . This map also appears twice in the extended sense  . The first use is in the give-res-inf-resmap . This map indicates that the result of the giving , a having by the give e , plays the role of the result of the infecting , an infection of the infected person . It is therefore a specialized map from a having to an infected state  . It appears again in the . . . . . . . _J .   .   .   . _G ~- c~m_____ .   .   .   .   .   .   . Ii ~ ze ~ Jld_ .   .   .   . 
' -...........\[ J "-<-__--
Givell-Cold 1
Figure 7: Flaving Extending to Giving . qive-pre--\[nf-premtaphor map . This map indicates that yea have to have a cold before you can give it to anyone  . This is again basically a map from a having to an infected state  . 
The final map to consideristile core had-cold metaphor-map  . 
This map appears once in the extended sense as the given -- co  . l . dmetaphor . 
The links between the shared maps in the extended sense and them alls in the core sense are shown simply as individaal D links  . In fact the specialization of a metaphor-map is a more complex suuctur cd association ivolving the specialization feach of the components  . The tbllowing section on metaphor hierm vhies will go into the details of how this is actually accomplished  . At this point it is sufficient to say that the first extension  requi0ement is satisfied if all of the metaphor-maps in the core ? xist in the extension as specializations  . 
The second requireruent tbrextension is that tile source and target components of the extended sense must be closely connected to die concepts specified by the core  . Figure 6 shows that this is clearly fulfilled in this case ill the source domain  . 
The concepts in the source domain of tile extended sense are all either exlnated to  , imruediately dominated by or related by a single relation to the concepts in the source of the core domain  . 
The same is true in the target domain . In general the second reqnirement will be satisfied if the extended concepts are related to the core by these types of close association  . 
The final reqnirement speeifies that file extended concepts be consistent extensions from both the source and target domain of the core metaphor  . This is met in this case by rite result relations in both the source at td tat'get  . On the source side the giving is related to the having fi ' or n the core by a result relation  . This is shown in the abbreviated slot form in Figure  6 by the cj : ~_ vin w , -result slot . This relation is inherited from the more general category of action and indicates that are snlt of a giving is a having  . The satne analysis holds for the target dom Mn . The result of an infecting is a state called being-infected  . These states are shown as the target concepts ill Figures  4 arm 5  . The last requh'ement is satisfied if the same relationship holds between the corem~d extended concepts in both the source at ld target domains  . 
4.3, Metal ~ horlc M Hierarchies
Metaphor-maps and ruetaphor-senses are both fifll -fledged KODIAK concepts and can the refbre be arranged in abs~action hierarchies  . The use of hierarchies will be the primary mechanismnsed to a eeom  , t for the similarities and differences among convention alruelaphors  . This use of abstraction hierarchies to capture regularities in the lexicon is similar to that described in Fass  ( 1988 )  . The following section will show how the various similarities  ; and differences among conventional metaphors follow directly froru the relations among metaphor-  . m!:,ps . 
Consider again the k . t . tl-proees smap from(i ) . This is a mapping from a concept constrained to be a living thing to a tat'get concept that is not a living thing  . This is a manifestation of a more general metaphor that allows us to view nonliving things in W  , rms of living things for the purpose of explaining ortm derstanding fleir behavior in terms of living things  . Examples ( 11 ) through ( 14 ) from Lakoff and Johnson ( 1980 ) all contain specialized instances of this general metaphor  . 
(11) Inflation is eating up our savings.
(12) Those ideas died along time ago.
(13) He is the father of modern quatltum mechanics . 
(14) Those ideas won't yield any fruit.
Exatnple ( 11 ) is motivated by the metaphor that tile reduction in savings caused by inflation can be viewed as inflation consuming the savings  . Inflation is therefore viewed as an animal that can consume things  . Example ( 12 ) contains a metaphor dealing with the duration of ideas  . When an idea is no longer held or believed it has died  . At a more specific level we have an idea filling the role of the diet of a death-ev ~  . ~ nt as in Figure 3 . This role has the similar constraint as the kil l-victim of  ( 1 ) that it be a liv . t . ns-th in q . In a similat " way as ( 1 ) a set of interrelated rnctaphor-maps link the source domain of death to the target domain of ideas and their duration  . In particular there is a metaphor-map from the dier to a concept that is not alive  . 
Example ( 13 ) contains the notion that the creation of an idea is a birth-event at d that the originator of the idea plays the role of the father in the birth event with the clvate dideaplaying role of the child  . Once again in this metaphor there is a metaphor -map from a concep that is not a living thing  ( the created idea ) to a role that must be one ( the child being born )  . 
This metaphor-map , however , is more specific since tile constraint is not only to be a living thing but to be truman  . Finally example ( 14 ) contains the notion that an idea can produce new ideas  . This is metaphorically structured as a plant producing new fi'uit  . In this case an idea is viewed as a specific kind of living thing  , aphmt , What ( 1 ) and ( 11 ) through ( 14 ) till have in common i , ; the idea that an abstract concept like a process or idea can be viewed as a living thing to explain some aspect of its nature  . 
They differ in the particular kind of living- . thing that is used and in the role that it plays . These similarities and differences result in specific metaphor-maps in each particular case  . What is needed is a mechattism that can capt m'e the commonalitics and differences at nong these various metaphor-maps  . 
This mechanism is provided by tile general inheritance mechanisms provided by KODIAK  . Metaphor-mal~s that share properties are dominated by more absu ' act parent maps thai capture the commonalities among the children  . The source and target a speetuals of the parent map are constrained by concepts that are more abstract than and dominate the constrainers on the children ' source and target a specmals  . Figure 8 illustrates this situation with the maps from examples from  ( 1 ) and ( 11 ) through ( 14 )  . 
The top half of Fignre 8 shows the hierarchical relationships among the maps underlying the above examples  . They all converge on the abstract ruetaphor-map representing the idea of viewing a non-living -thing as a living-thing  . The two metaphor-maps in the dotted box are expanded in the bottom half of the diagram to show the exact details of the inheritane e links  . In this expansion we can see that the idea-a ~'~- -living-thing metaphor-map dominates the forgotten -idea-as-diet map  . In the parent map the idea-as ~ target a speetua \] is constrained to hean idea  . The living-thing-as-source a speetual is constrained to be all ving-thing  . 
In the forgotten-idea-as-dier we see that the inherited source aspectual is specialized by being consu'ained by the diet aspectual of the death-event  . The inherited target aspectual is fit rther specialized by being constrained by the 
I , . ~.,,^ c ,, As , (6)
IFor . otten Ideal ~? ~-- l ~ rmlnated-l'roc~tss ? , ~s(4) I~~~~"~ L--s~a_J
Idea\[~"NCIdea-As-Livlng-Thing_

K ~ For ~ otten-Idea-As-Diei.
~ Thing

Figure 8: Metaphor-map Hierarchy forgotten-idea aspectual  . The constraining aspectuals , forgotten-ide and diet satisfy the appropriate inheritance restriction since they in turn are constrained by idea and living-th ing respectively  . It is typically the case that the source and target aspectuals of metaphor-maps at the bottom of the metaphor hierarchy are constrained by aspectuals of some specific context  . More abstract metaphors tend to have their aspectuals constrained by less specific absolutes  . 
Ca reful examination of Figure 8 reveals that the metaphor-maps are actually being specialized in different ways  . Consider the process-as-living-thing specialization of the non-living-thing-as -living-thing  . In this case the metaphor-map is specialized on the basis of the target concept  . The generic a tegory non-living-thing is replaced by process  . In the case of the non-living-thing-as- plant mapping the specialization is done on the basis of the source concept  . The metaphor-map hierarchy may therefore contain specializations based either the source or target aspectuals or both  . 
Metaphor-maps may also participate in multiple inheritance  . Consider the idea-as-anira alandidea-as-plant maps  , These maps inheritheir respective specializations from multiple parents  . The details for the idea-as-animal map are shown in Figure  9  . In this diagram we can see that this map has two parents the idea-as-living-thing map and the non-living-thing-as-animal map  . Its source and target aspectuals are each dominated by the both of the corresponding aspectuals from each parent  . The multiple-inheritance mechanism assigns only the most specific constrainer to the lower child aspectuals  . In this case the source aspectual is constrained to be an animal  , which is the more specific than living-th ing  . In the same way the target is constrained to be an idea rather than the more abstract non-living -thing  . In this way the idea-as-animal map is created by specializing different parts of the two parent maps  . 
Figure 9: Multiple Inheritance 4 . 4 . Representing Metaphorical Similarities Consider the relationship between the metaphors underlying  ( 15 ) and ( 16 )  . 
(15) Mary gave John a good idea.
(16) Mary gave John a cold.
These examples do not involve metaphors with overlapping scope nor are they related in a strictly hierarchical fashion  . Nevertheless they do to have a structural similarity that should be reflected in the representation  . 
In particular note that both contain a map that represents one  , ( a disease and an idea . ) Both contain the notion that transfer epresents some change of state with respect othe metaphorical object  . The point of these examples is that the metaphor schemas underlying examples  ( 15 ) and ( 16 ) contain individual component maps that are similar  . This similarity is accounted for by the hierarchical relationship among the component maps in each schema  . Figure 10 shows some of the relevant relationships between these schemas that accounts for their similarity  .   ( Note that for the sake of readability most of the maps in each schem are omitted from this figure  . ) This figure illustrates the building block relationship between metaphor-maps and schemas  . In the give-an-idea schema two maps are shown . The give-tell map is dominated by the communicate-as-transfer map which in turn is dominated by the act-upon-as-transfer  ( Jacobs 1985 ) map . The act-upon-as-transfer map is a map representing a general metaphor that allows abstract events with participants to be viewed as transfer-events where some participant receives or donates some metaphorical object  . The given-idea map is dominated by the idea-as -object map which is in turn donfinated by the non -object-as-object map  . This metaphor map reflects the widespread use of reification in our conceptual system  . 
Similarly in the give-a-disease schema two maps are shown  . The given-disease map is dominated by the disease-a:3-objeet map . This in turn is a sibling of the idea-as-eb ject map since they both have the non-object-as -object mapping as a parent  . Finally the qlve-infoct map is dominated by the infect-as-transfer map which like the co~nmunicate-as-transfe ~: map is dominated by the act-up on-as-tr~nsfer mapping  . 
Figure 10 illustrates the somewhat more distant relationship between the schemas underlying  ( 15 ) and ( 16 )  . They involve the same source domain with completely separate target domains  . The domains of communication and infections are not related in any meaningful way in the hierarchy  . They do not shamany close meaningful parent categories  . For this reason there : can be no abstract metaphors chema dominating both-of the schemas in question  . However the similarity of the two schemas is accounted for by the hierarchical structure of the component maps and the sharing of maps with common parents  . 
5. Summary
An adequate representation f knowledge about the conventional metaphors in a language must meet two requirements  . It must capture the exact details of individual metaphors to permit efficient recognition and interpretation  . In addition it should reflec the regularities of the system of conventional metaphors as a whole  . In particular the extension of core metaphors to extended sense should arise naturally from the structure of the metaphor and the structure of the source and target domains  . This paper has described a system of representing conventional metaphors that efficiently meets these requirements  . 

Brachman , J . & Schmohe , J . G .   ( 1985 ) An overview of tile KL-ONE representation system . Cognitive Science , 9, 171--216 . 
Fass , D .  (1988) . Collative Semantics : A semantics for natural language processing  . , Report No . MCCS-88-118 , Computing Research Laboratory , New Mexico State University , Las Cruces . 
Jacobs , P .  (1985) . A knowledge-based approach to language production  . Doctoral Dissertation , Computer Science Division Report No . UCB/CSD 86/254, University of
California , Berkeley , CA.
Jacohs , P .  (1987) . A knowledge framework for natural language analysis  . Proceedings of the Tenthlnterp , a ~ tional Joint Conference on Art ~ cial Intelligence  . Milan,
Italy : Morgan Kaufmann.
Lakoff , G . & Johnson , M .  (1980) . Metaphors We Live By . Chicago , IL : University of Chicago Press . 
Martin , J .  (1987) . The acquisition of polysemy . Proceedings of the Fourth International Workshop on Machine Learning  . Irvine , CA : Morgan Kaufmann Martin , J .  (1987) . Understanding new metaphors . Proceedings of the Tenth International Joint Conference on Artificial Intelligence  . Milan , Italy : Morgan Kaufmann . 
Norvig , P .  (1986) . A unified theory of inference for text understanding  . Doctoral Dissertation , Computer Science Division Report No . UCB/CSD 87/339, University of
California , Berkeley , CA.
Wilensky , R .  (1986) . Some problems and proposals for knowledge representation  . Technical Report No . 
UCB/CSD 86/294 . Berkeley , CA : University of California , Berkeley , Computer Science Division . 
o , j0 o.l IAo , o.A , Tror\]
Figure ' t0: Giving Metaphors
