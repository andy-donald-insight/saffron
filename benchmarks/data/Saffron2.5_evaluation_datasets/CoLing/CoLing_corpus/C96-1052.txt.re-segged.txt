A Computational Model of Incremental
Utterance Production in Task-Oriented Dia logues 
Kohji Dohsaka
NTT Basic Research Laboratories
31 Morinosato-wakamiya,
Atsugi , Kanagawa , 243-01 Japan
dohsaka@atom.brl.ntt.jp
Akira Shimazu
NTT Basic Research Laboratories
31 Morinosato-wakamiya,
Atsugi , Kanagawa , 243-01 Japan
shimazu@atom.brl.ntt.jp

This paper presents a comtmtational model of incremental utterance production in task-oriented ialogues  . This model incrementally produces utter-antesto propose the solution of a given problem  , while simultaneously solving the problem in a stepwise manner  . Even when the solution has been partially determined  , this model starts utterances to satisfy time constraints where pauses in mid-utterance must not exceed a certain length  . The results of an analysis of discourse structure in a dialogue corpus are presented and the fine structure of discourse that contributes to the incremental strategy of utterance production is described  . This model utilizes such a discourse structure to incrementally produce utterances constituting a discourse  . Pragmatic on straints are exploited to guarantee the relevance of discourses  , which are evaluated by an utterance simulation experiment  . 
1 Introduction
Dialogues occur in realtime and so are susceptible to time constraints  . For example , dialogue participants must produce utterances undertime constraints where pauses in mid -utterance must not exceed a certain length  . Moreover , participants are inference-limited ( Walker and Rainbow 1994 )  . Due to time constraints and limits in ilffer - ence  , dialogue participants cannot help producing utterances incrementally  . Incremental utterance production is characterized like this : speakers produce utterances while deliberating what to say ~ and refine what they will say while articulating the first part of their utterances  . 
The incremental strategy of utterance production plays a crucial role in spoken dialogues in two respects  . First , it helps speakers to satisfy time constraints on pauses  . This is crucial since lengthy pauses imply the transition of a turn from the current speaker to others  . Second , it helps hearers to easily understand utterances ince it enables the piece meal transmission of information  . 
This paper presents a computational model of incremental utterance production in task-oriented dialogues  . This model produces utterances to propose the solution of a given problem while simultaneously solving the problem in a stepwise manner  . 
To satisfy time constraints on pauses , this model starts utterances even when the solution has not been fully determined and refines on the solution during the articulation of utterances  . 
We present the results of an analysis of discourse structure in a corpus of Japanese task-oriented dialogues and show that the fine structure of discourse prevails in spoken dialogues and the predominant discourse structure contributes to the increment M strategy  . Based on such a discourse structure , this model incrementally produces utterances constituting a discourse  . However , the incremental strategy is subject to generating irrelevant discourses  . To guarantee the relevance of discourses , this model utilizes pragmatic constraints and a context model  , which are evaluated in an utterance simulation experiment  . 
2 Related Research
Recent studies of human speech production ( Levelt 1989 ) show that human speakers frequet at ly use the incremental strategy of utterance production  . This paper is concerned with a computational model of incremental utterance production  . 
Computational models for the incremental syntactic formulation of a sentence were proposed  ( Kempen and Hoen Kamp 1987 ; DeSmedt and Kempen 1991) . Although incremental syntactic formulation is an important issue  , we do not address this here . 
POPEL is a parallel and incremental natural language generation system  ( Finkler and Schauder 1992 ; Reithinger 1992) . In POPEL , the " what to say " component determines the content to be generated and gradually carries it over to the " how to say " component  , which formulates a sentence incrementally . POPEL can generate dis-
PN to COl'ULA go ( to Theiiko-is hid a station )   ( go )   ( 3 ) so kode basunan desuga / ~ to then bus COI ' ULA FIId  , I , ; I((thenb . s )   ( ullm )   ( d ) morinosato-aoyama-ikitoiu < hal > basuga
PN namet Ibtls Su II . I am-node/exist-CAUSAl ,   ( as there is a Iresitamed morinosato-aoyama-iki )   ( 5 ) soreninotte-moratte/<hal>itOBJgc'ton ( get ( ) it it )   ( Note : < hal>shows that the dialogue partner inserts an utterance to provide acknowledgnmnt  . ) Figure 1: Part of transcription of dialogue courses using e on textuM information  , t lowever , itd ( les not allow for the line structure ( ) f discourse prevailing in st ) oken di Mogues . Wel ) resent a eomlmtational model of incremental utterancel  ) roduetion using the line structure of discourse . 
Carletta , Caley , and Isard ( 1993 ) proi ) osed an architecture for time-constrained la . nguage production . As for phenomena peculiar tost ) oken dialogues , they focused on tle sil ; ? Ltionan ( lself-tel ) air . 
Although our model ca , n1 ) roduce filler terms and repair prior utterances , our chief concern is the tine structure of spoken discourse  , which is closely related to incremental utterance pro  ( tnction . 
3 Discourse Structure Analysis
We analyzed the discourse structure in a corpus of task-orientediah  ) gues , which were collected by the folh ) wing method . The subjects were ninety native Japaims e . In each diah ) gue , two subjects , N and E , were ~ Lsked to converse by telephone to lind a solution to the l  ) roblem of how N could get from one place to another  . Subjects were chosen such that E had enough knowledge to solve the problem but N did not  . Eigilty dialogues were recorded and transcribed . Fifteen dialogues were randomly chosen for analysis  . The discourse structure was analyzed in terms of information units and discourse relations  . 
a . 1 Ana lyz ing i n fo rmat ion un i t s Speakers organize tile information to t  ) e conveyed to information units ( Halliday 1994 )  , which are the units for traits mission of information  . The information units ( IKs for short ) are regarded as minilnal components of discourse structure  . We assume that IUs a , rerealized by grammatical lie-vices : a clause realizes an  1 U , an inteljectory word realizes an 1U , and a tiller term shows the end of an IU . Figure 1 shows pa . rt of the transcription of a dialogue where a diahlgue participant prol  ) oses a domMnl ) lan . Tile symbol "/" separates the IUs . 
Table 1: Frequency distribution for information units
Clause 929
Interjectory word 665
PP or NP 279
Conjun(:tion 84
Sequence of PPs or NPs 41
Others 14
Total 2012
Tal ) le 1 shows the frequency distribution for tim / ~ ramnlatiea \]  ( : a tegoric's of IU , where NP and I'P mean noun 1 ) hrase and 1 ) ostl ) ositional phrase .  ' . \[' heaveragenmn ber of NPs in an IU as a clause , NP , Pl ' , or sequen (- e of NPs and Pl?s is 1 . 01 in the tifteen dialogues . The vm ' iane e is 0 . 28 . 
This reslflt indicates that small IUs are frequently used  . For example , althougil IU ( 1 ) in Figure 1 descril ) es only a part of a domain action , it is regarded as ail IUsiil . ceithasae ( / pula ( " desu " ) an ( 1 a sentenee-linal t ) article ( " ne " )  . 
3 . 2 Ana lyz ing d i scourse re la t ions Discourse relations between adjacent discourse segments w  (  ,  . reexamined . A ( liscourse segment is an IU or a sequence of IUs . For discourse re-ta . tions , we here a dot ) ted those used in Rhetori- ( : al Structure Theory ( M~nn and Thomt ) son 1988 ) and tlere followed Hovy ( 1993 ) to classify them into semantic and interpersonal ones  . Figure 2 shows discourse relations tllat appear in the discourse displayed in Figure  1  . The small IUs are hierarchically related . This results ill the fine structure of diseom : se . 
Table 2 show stile frequency distributions for discourse relations in tile fifteen diak  ) gues . Let us consider the role that tile l ) redominant relations , Elaboration , Circumstance , and Motivation , l ) lay in tile inereinental strategy of utterancet ) roduction . * First , Elaboration is exploited to describe domain actions  , states or objects in a piece meal fashion . 
Elaboration enable speakers to distribute the content to be conveyed among different lUs  . '_P tf is relation is useful for the incremental strategy since it allows speakers to begin uttering even when the content has not been fully determined  . 
Second , Circumstance is the relation between two segments  , a nucleus and a satellite . Them > eleus describes a domain action or state . The satellite describes the circumstances where them > cleusis interpreted  , such as the preconditions of a domain action . There are 41 cases where the satellite describes a precondition of a domain action  , which amounts to 68% of all cases . The constituents of a domain action are often referred to in its preconditions  . We see ~ typical ease in tile relation l ) etween ( 4 ) and ( 5 ) in Figure 1 .   ( 5 ) describes the action of getting on a bus and ( 4 )   de-1We found no directreh ~ tionship between Sequence and the increme  . nt ~ d strategy . 

Sequence/Circumstance , Motivation /
Elaboration Elaboration ( 1 )   ( 2 )   ( 3 )   ( 4 )   ( 5 ) Figure 2: Discourse relations in Figure 1 Table 2: Distribution for discourse relations
Elaboration 305
Sequence 74
Cirucumstance 60
Result 25
Condition 25
Purpose 2
Contrast 1 ( a ) Semantic relations
Motivation \[ il Background



Enablement ( b ) Interpersonal relations scribes the existentional status of the busms the precondition of the action  . By utilizing this relation , speakers can distribute the content of a domain action between two IUs  . They can pick up a constituent of an action and describe it before describing the whole content of the action  . Thus Circumstance is useful for the incremental strategy  . 
Finally , Motivation is mainly used for describing a domain action as a nucleus and motivating addressees to adopt the action by presenting a fact as a satellite  . In typical cases , speakers motivate addressees to adopt an action by asserting that its precondition is satisfied  . In such cases , Motivation occurs together with Circumstance and contributes to the increment a  . 1 strategy in the same way as Circumstance . 
4 The Model
As shown in Figure 3 , this model is composed of five modules : a problem solver  , an utterance planner , an utterance controller , a text-to-speech on-verter , and a pause monitor . The problem solver makes domain plans that solve a given problem  . 
The utterance planner makes utterance plans to propose domain plans  . Pragmatic on straints and a context model are used to generate relevant discourses  . According to utterance plans , the utterance controller sends linguistic expressions totile text-to-speech converter  . The pause monitor watches the length of pauses and signals the utterance planner and controller when the pause length exceeds a given length  . 
These modules work in parallel . Both domain plans and utterance plans are made in a stepwise manner using the hierarchical planning mechanism  ( Russel and Norvig 1995: Chap . 12) . This model starts to make an utterance plan before a fully determine domain plan has been obtained  . 
When a pause exceeds the time limit , the utterance planner sends the utterance controller an ut- 
Input : a domain problem
Parallel Modules/\[ProlflcnlSolvcr\]\[~f Pragmatic ~' ~ k  , , ConstraintsJ domain plans ~ .   . /"\]\[- Utterance Planner \] i Context Model utterance plans 
Utterance Controller expressions
Output : utterances
Figure 3: Model overviewterence plan obtained within the time limit  . A domain plan is refined during the planning and ar-ticulaton of utterances  . Based on a refined domain plan , the utterance plan is replanned . When the utterance controller is not given utterance plans within the time limit  , it produces a filler term . 
5 Pragmatic Constraints
Pragmatic constraints are required to guarantee the relewmce of discourses  . This model exploits the following pragmatic on straints  . 
(cl ) Avoid conveying redundant information.
( ( :2 ) Pronominalize objects in the focus of attention ( Grosz and Sidner 1986 )  . 
( c3) Be relevant according to the attention M state . 
?\[' he context model records the information that has been conveyed and tracks the attentional state  . For example , consider the domain action of moving from one location  11 to another 12  . To describe such a domain action with verbs such as " iku  ( go ) " , It must be in focus . Otherwise , the description is irrelevant . After such an action has been described , 12 is in the focus . Moreover , any object marked as a topic becomes a focused one  . 
6 Problem Solving
We outline the problem solver using a sample problem of how to move from the Musashino Center to the Atsugi Center on the map in Figure  4  . 
Tile problem solver first makes an abstract domain plan  , which is a sequence of three action sel , a2 , and a3 : moving from the Musashino Center to the nearest station by bus  , moving to the station nearest he Atsugi Center , and then moving to the Atsugi Center by bus . This plan is written as ( rl ) . The contents of these actions are written as ( r2 )  . Expression cont(X , Y ) means that the content of X is represented as a set Y of literals  . 
(rl ) plan(\[el , a2 , a3\]) ( r2) cont(al , type ( el , move ) , source ( el , xl ) , manner ( el , x2) , dest(al , x3)) cont(xl , type(M , building ) , named ( xl , " musashinosenta ~")) eont(x2 , type(x2 , bus ))
Mitaka Kichijoji W "" ~ . . . ~ hinjukuj . ~- Shimokitazawa/x " Zo 0 au L4
Atsugi Center
Figure 4: Sample map cont(x3 , type(x3 , station ) , nearest ( x3 , xl )) cont(a2 , type(a2 , move ) , source ( a 2 , x3) , dest(a2 , x4)) cont(a a , type ( a3 , in ove ) , source ( a3 , x4) , mn . er(a3 , xS ) , det(a3 , x 6)) cont(x 4 , type(x4 , station ) , nemest(x4 , x 6)) cont(x5 , type(x5 , bus )) cont(x6 , tytte(x6 , building ) , named ( x6 , " atsugisentaa " )   ) The problem solver tries to make a more concrete plan  . When more tha , none domain 1) lan is possible , it choose stile domain i ) lant hat requires the shortest execution time . In this domain , the domain plan is a sequence of actions a/t , a5 ,   a6 and aT : moving from the Musashino Center to Kichi-jojistation by bus  , moving to Shimokitaza wastation by tile Inokashira IAne  , moving to Aiko-ishida station by the Odakyu Line , ~md then moving to the Atsugi Center by bus . Part of the content of this plan is represented as follows  . 
( r3) phm(\[a4 , a5 , a6 , a71) ( r4) cont(a4 , type(M , move ) , source ( a 4 , xl ) , manner ( a 4 , x2) , dest(a4 , x 7)) cont(xT , type(xT , station ) , named ( x7 , " kichijoji ")) . . . . . .
7 Utterance Planning
An utterance plan is a sequence of coln mnnieative actions that achieves a communicative goal  . It is refined in a stepwise manner . A sequence of surface communicative actions corresponding to the uttering of linguistic ext  ) ressions is finally planned . 
7.1 Communicative goals
Generation systems engaging in dialogues must record communicative goals related to communicative actions  ( Moore and Paris 1994 )  . Communicative goals used here are : ? persuaded -plan  ( P ) : dialogue partner is per-shaded to adopt dommn plan P  . 
? persuaded-act ( A ) : dialogue partner is persuaded to adopt domain action A  . 
? described-event(E , C , At ) : domain event E is described as an event having content Can  ( tattitude At toward E is also described . 
? d c . scribed-obj(O ,  6 ) : domain object O is described~s an object having content C  . 
? dcscribcd-them . a-rel(l ? ~ , O , E ): thematic relation It is described , which domain object O bears to domain event E . 
When the domain t ) lan(rl ) is obtained , ( r5) is given as the initiM communicative goal . 
(1"5) persuade A-plan(\[al , a2a3\])7 . 2 Surface coinmunicative actions Sllrfa ( ; ecommnnicativ ( , actions used here are : ? sv . rf acc-desc-cvent(E , C , At ): utter expression stO descrit)e , domain event EiLq all event having content C and des  ( -ribe attitude At toward E . 
? surface-desc-obj(O , C , It ) : utterexpressions to describe do in a in object O as an object having content C and bearing then mtic relation R to a certain event  . 
7 . 3 P lann ing ut terances based on t i le fine s t ructure of discourse An utterance pbm is elaborated using action schemat and decomposition methods  . An action schema consists of an action description  , applicability constraints and an effe(:t . 2 It defines a communicative action . A decomposition ie tho ( l consists of an action description , applieal ) ility constraints and a plan . It specifies how an action is decoln posed to a detailed phm  . 
The following schema ( r6) defines the commu-nic ; t tive action of proI ) osing a domain plan by using Sequence . The decomposition method ( rT ) specifies how the ~ mtion is decomposed to a sequence of finer actions  . : ~(1"6) Aet ( propose-acts-in-seq(*P),
Constr:plan(.P ),
Effect : persuaded-plan ( * P )   )   ( r7 ) Decomp ( propose-acts-in-seq ( \[* Actl*Rest\] )  , 
Constr : * Rest ?\[\],
Plan:\[aehieve(persuaded-aet(*Act)) , propose-acts-in-scq ( * Rest )  \]  ) In these representations , achieve ( P ) designates an action that achieves goal P . Notation\[HIL\]specifies a list , where H is the head of the list and L is the rest  . Symbols starting with "*" represent variables . By applying ( r6 ) and ( r7 ) to the initial communicative goal ( rS )  , the following utterance plan is obtained : ( r8 ) achieve ( pers , laded-act(l )) , achieve ( persuaded-act(a2)) , achieve ( persuaded-act(a3)) . 
2 In this paper , we do not consider a precondition for an action schema  . 
a We have omitted other method to avoid intinite reeursive application of the method  ( r7 )  . 
307 ( r9) Act ( propose-act@A) , Effect : persuad cd-act ( * A )   )   ( r l 0 ) Decomp ( proposc-act ( * A )  , Constr:cont ( , A , * C ) , Plan:achicvc(dcscribcd-cvcnt( , A ,   , C , proposal ) )  ( rl1 ) Act ( describc-cvcnt-by-elaboration (  , E , * C , * At ) , Effect : described-cvcnt ( , E , * C , * At ) )  ( r12 ) Decomp ( describc-event-by-elaboration (   , E , * C , * At ) , Constr :* The maE*CA*Thcma = . . \[* R , * E , *0\]A*R ? typeAcont(*O , ObjC ) A * Rest=*C -* The maplan :\ [ chie ( descrcd-obj (   , O , * ObjC )) , * R ,  *0 , * E )) , ach , iee(dscied-ee , t ( , E ,   , Ret ,   , At )   )  \]  )   ( r13 ) Act ( describe-obj-with-th cma ( * O , * C , * R , * E ) , Effect : dcscribcd-obj(*O , * C ) A described-the ma-rcl ( , R ,  *0 , *E )) ( r14) Decoinp(dcscribe-obj-with-th crna ( , O , * C , * R , * E ) , Plan : surface-desc-obj ( , O , * C , * R )) ( r15) Act(dcscribc-cvcnt-type( , E , * C , * At ) , Constr : * C = type(*E , * T ) , Effect : describcd-cvcnt ( , E , * C , * At )) ( r16) De ~ comp(describc-event-type( , E , * C , * At ) , Plan : surface-desc-event (* E , * C , * At ) ) Figure 5: Action schemat and decomposition methods for proposing domain action  ( r8 ) is decomposed by applying the action schemat and decomposition method shown in Figure  5  . These schemata define communicative actions for proposing a domain action while elaborating the content of the action in a stepwise manner  . They reflect the results of a discourse structure analysis  , which show that speakers tend to distribute the constituents of a domain action into different IUs by using EI  , ABORATION . In ( r12), notation F(X , 17, . . . ) = . . \[ F , X , Y , . . . \] is used for decomposing term F(X,Y , . . . ) into relation F and arguments X , Y , . . . .
When domain objects are linguistically realized by the surfaee-desc-obj in  ( r14 )  , pragmatic on-straint ( c2 ) is exploited to t ) ronominalize focused objects . In addition , according to constraint ( c3) , the objects that are not in focus need to be top i -ealized if they must be in focus  . 
By applying these schemata to the first action in ( r8 )  , the following utterance plan is obtained . 
Thematic relations are chosen in default order when  ( r12 ) is applied . 
( r17) surface-desc-obj(xl , type(xl , building ) , named ( x1 , " mnsashinosentaa ") , source ) , surface-desc-obj(x2 , type(x2 , bus ) , manner ) , surface-desc-obj(x3 , type(x3 , station ) , nearest(xa , xl ) , dest ) , surface-desc-event ( al , type(a1 , move ) , proposal ) . 
According to utterance plan ( r17) , this model can start the following utterances to satisfy the time constraints before Obtaining a concrete domain plan such as  ( r3 )  . 
(ul ) musashinosentaakara-wa desune /
PN from-Topic COPULA ( from the Musashino Center ) basude/mo ~ ori-no-ekima de/iki masu/busby nearest station to go  ( by bus )   ( to the nearest station )   ( go ) For brevity , we have omitted action schemata and decomposition methods for utterance planning using MOTIVATION and CIRCUM STANCE  . 
7.4 Replanning utterance plans
While planning and articulating utterances using an abstract domain plan  , a more concrete domain plan is being made . When a more concrete domain plan is obtained , an utterance plan is re-planned . For example , consider the case where a concrete domain plan , ( r3) , is obtained during the production of utterance ( ul )  . The following utterance plan is replanned : ( r18 ) surface-desc-obj ( xl , type(x1 , building ) , named ( M , " nmsa shinosentaa ") , source ) , surface-desc-obj(x2 , type(x2 , bus ) , manner ) , surface-desc-obj(x7 , type(x7 , station ) , named ( x7 , " kichijoji ") , dest ) , surface-desc-event ( a 4 , type(a4 , move ) , proposal ) . 
We assume that plan ( r18 ) is obtained when this model finishes uttering " moyori-no-eki made " in utterance  ( ul )  . Then ( ul ) is interrupted and utterances follow based on ( r18 )  . Consequently , the following utterances are produced : ( u2 ) musashinosentaakara-wa desune /
PN from-Toplc COPULA ( from the Musashino Center ) basude/moyori-no-eki made/bus by nearest station to  ( by bus )   ( to the nearest station ) kichijojimade desune/ikimasu /
PN to COPULA go ( to Kichijoji station )   ( go ) In the above , the redundant information is not restated according to pragmatic on straint  @1  )  . 
Self-repair occurs : " moyori-no-ekimade " is replaced by " kichijojimade "  . 
8 Experiments
This model has been implemented in Common Lisp . A logical constraint unification sys-tern ( Nakano 1991 ) is used in the planners . The domain planner includes 18 action schemat and 16 decomposition methods . The utterance plan-
PN front-Topic , COPULA ( from the Musashino Center )   ( e2 ) ~to Kichijoji made/dete-ku dasai /
FILI , F , I~PN to go-t ) le~se ( crm to Kichijojistation )   ( please go )  @3 ) ~ to desunes or e karainokashira-sende
FILLER then PN by ( erm then by the Inokast fira Line )   ( e4 ) odakyu-senhi/norika ete /
PN for change ( (: hange train for the Odakyu Line ) basude/moyori-no-eki made/bus by nearest station to  ( by Ires )   ( to the nearest station ) desune/shimokitazawamade /
COI'UI , APN to ( to Shimokitaza wastation ) aiko-ishidama de/ikimasu / . . . . . 
PN togo ( to Aiko-ishidastation ) ( go)
Figure 6: Discourse generated by implemented systemner includes  16 action schemat and 16 decomposition methods . We ewduated pragmatic on-straints in an utterance simulation experiment  , where discourses generate . d with the constraints were contpared with those generated without them  . A map including 120 h ) cation such as station and 25 rail road lines w~s used . The pause length limit was () . 5 see . 
When pragmatic on straints were used , this implemented systeIn generated relevant discourses  . 
Figure 6 shows the discourse generated when the problem of in oving frol Il the Mus~ksliino Center to the Atsugi Center was given  . Filler terms such as g to were produced to satisfy the time constraints  . 
Pragmatic on straint ( el ) was used ill(e2) , ~Uq explained in section 7 . 4 . Constraint ( c2 ) was used to zero-proImminalize stations in the focus of attention  . Constraint ( e3 ) was used in ( (:1 ) to top-icalize the Musashino Center . Topicalization was also used in other cases where the system must shift the focus of attention to the location already described in the preceding discourse  . Such cases happened when the system started utter -antes based on an abstract domain I  ) lan , took along time to obtain a more concrete plan , and then elaborated on a route from a location that was not in focus based on the concrete plan  . With outprt ~ gmatic constraints , the system generated irrelevant and excessively redundant discourses  . 
9 Conclusion
We presented a computational model of producing utterances incrementally so as not to make excessively long pauses  . We presented the results of an an Mysis of discourse structure and showed that speakers frequently use small information units and exploit the fine structure of discourse that contributes to the increlnent M production strategy  . This model can utilize such a discourse structure to incrementally produce utterances according to pragmatic on straints  . These were ewdu-ated by an utterance simulation experiment  . 

Carletta , Jean ; Caley , Richard ; and Isard , Stephen . 
itte/go(go ) (1993) . A system architecture for simulating time -constrained language production  . Research Paper
It CRC/RP-43, University of Edinburgh.
I ) eSmedt , Koenraad , and Keinpen , Gerard .  (1991) . 
Segment grammar : A for nmlism for incremental sentence generation  , in Natural Language Gen-e Tnlion in Arti Jieial Intelligence and Computational Linguistics  . Edited by Cdcile L . Paris , William R . Swartout , and William C . Mann ,
Khlwer Academic Publishers , 329-349.
Finkler , ~ Volfgang , and Schauder , Ann .  (1992) . Effects of increment M output on increment M naturalan-guage generation  , htProc . of 10th ECAI , 505-507 . 
Grosz , Barbara J . , and Sidner , Candace L .  (1986) . Attention ~ intentions ~ and the structure of discourse  . 
Computational Linguistics , 12, 175-204.
l I all iday , M . A . K .  (1994) . An Introduction to l , ' unc-lional Grammar . Fdward Arnold . 
\] lovy , F , duard II .  (\] 993) . Automate discourse generation using discourse structure relations  . Artificial
Intelligence , 63, 34t-385.
Kempen , Gerard , and Iloenkamp , Edward .  (1987) . An incremental procedural grammar for sentence formulation  . Cognitive Science , 11, 201-258 . 
Levelt , Willem J . M .  (1989) . Speaking : Prom Intentions to Articulation . The MIT Press . 
Mann , William C . , and Tholn I ) son , Sandra A .  (1988) . 
Rhetorical structure theory : Towards a functional theory of text organizatiou  . Text , 8(3), 243-281 . 
Moore , Johanna D . , and Paris , Cdcile L .  (1994) . Planning text for advisory dialogues : capturing intention alaim rhetorical information  . Computational
Linguistics , 19(4), 651-694.
Nakano , Mikio .  (1991) . Constraint projection : An ettl-cient treatment of disjunctive feature descriptions  . 
In Proc . of 29th ACL , 307-314.
Reithinger , Norbert .  (1992) . The performance of an increment M generation for multi-mod M dialog contributions  . In Aspects of Automated Natural Language Generation  . Edited by Robert Dale , Ell-uardtlovy , l ) iet marRSsner , and Oliviero Stock , 
Springer-Verlag , 263-276.
Russel , Stuart , and Norvig , Peter .  (1995) . Artificial Intelligence : A Modern Approach . Prentice II all . 
Walker , Marilyn A . , and Rainbow , Owen .  (1994) . The role of cognitive modeling in achieving communicative intentions  . In Proe . of 7th International Conference on Natural Language Generation  . 

