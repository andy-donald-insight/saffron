ONCOMPUTATION ALSENTENCEG ENERATION FROMLOGICAL FORM 
Juen-tin Wang
Institut fur Angew and te Informatik , TU Berlin

This paper describes some computational and l in guistical mechanisms in our program writ ten in SIMULA to generate natural language sentences from their underlying logical st ructures in an extended predicate logic  . After the presentation of the augumented logical formalism to deal with illocut ionary acts  , we explain then the basic devices used in the generation process : semiotic interpret at ion  , orders of quantifications or derivation a l constraints  , the referen-tial property of variables and the Leibniz-Frege idea  . Examples from system output will be given . 
1. Introduction
Logical form is one ot the most used notions in philosophy  , logic and linguis-tics . It goes back at least to Aristote-les in his linguistical and logical analysis of natura l language sentences  . 
This direct reference to the immediate sentence form which has been characteri-stic for the logic of syllogism remains unchanged throughout the whole period of scholastic logic until the develop-ment of the formal pred icate logic  . Sin-ce then , this logical formalism , with or without variation and modific at ion  , has been widely used in the linguistic philosophy to analyse and study the natural language  . And it is then the resulted representations in logical formalism which will be taken as the logical form of the analyzed natural language sentences  . This changed notion of logical form can be found everywhere in the tractatus of Carnap  , Quine , Geach , Hintikka and many others . And this notion of logical form will be now used universally  . In recent times , a lot of logically minded lingui-ts like Lakoff  , Harman , Keenan and Kar-t tunen have even attempted to put logical form into the relationship with the notion of deep structure in connection with Chomsky ~ theory of generative gra-mmar  . They hold the view that the seman-tical representation of natural language sentences can be obtained from the formal logical st ructures and that these semantical represent at ions can be adap-ted as a basis for sysntactica l genera-tion of natural language sentences  . 
However , this school of generative grammar has not given any constructive demonstration of their assertions  . 
In this paper we do not concern with the quest i on whether this theory  , the so-called generative semantics , will yield a true grammar theory or a genuine theory of the semantics of natural language  . 
We are rather motivated by real needs.
We have already at our disposal a ques-tion- answering database system which uses essentia lly the language of predicate logic as the formal query language  . 
We need to know how to express these logical forms in natural language sentences  . And Since we have to do with a question-answer ing system  , we need not only to treat logical forms underly ing indicative sentences but  , more important , the logical structures which have been used by the system as the represent a -  , tions for interrogative sentences . In the following we present at first the extended logical formalism  . We describe then the conceptions and princip les being used in implementation  . The program is written in SIMULA . 
2  . Logical formalism as semantical rep -resentation of natural language sentences The logical formalism which we have used to represent the sentence structure of a natural language is in its essence a many-sorted language of predicate logic  . 
In the conception of representation we have adopted some ideas from the speech act theory of Austin and Searle  . Accor-ding to this theory , the utterance of any sentences in a natural language is characteristically per forming at least three distinct kinds of acts :  ( 1 ) the uttering of words , (2) referring and pre-dicating , (3) stating , questioning , commanding , promising , etc . The notion of referring and predicating should be thus detached from the notions of such speech acts as asserting  , questioning , commanding , etc .   , since the same reference and predication can occur in the performance of different complete speech acts  . In taking account of this distinc-tion between proposition and illocutio-nary act we make one addition to the usual logical formalism  . We let the pro---405--pos itional part be represented by the usual logical expression  . In addition , we have an auxiliary component to represent the different illocutionary acts  . 
This additional component will be connected with the left end of the logical expression by a convention sign "="  , which , by the way , should not be read as " equal " . A detailed description of this extended logical formalism ' is given in Habel  , Schmidt and Schweppe (1977) . Some examples can be given as follows:
Assertions :/ true /= . all . x2( . ex . x3(city(x3) . eq . 
" ~ okyo ~. and . take place city(x2, x3))) ( I)
Requests ( Wh-questions ): conference ( x2) = . ex . x3(city(x3) . eq . 
" Tokyo .   . and . take place city(x2, x3)) (2) yesno questions := . all . x2( . ex . x3(city(x3) . eq : ~ okyo" . and . take place city(x2 , x3 )   ) )  ( 3 ) The illocutionary indicators like " con -ference  ( x2 ) "  , which is itself a name function , can be compared with the designator of Woods ( 1968 ) in his query language formalism . In general , several such illocutionary indicators can be a llowed at the same time  ; they could then lead to the representation of mul-tiple questions as discussed by Hinti- kka  . Here , however , we leave the question open , whether this proposed logical formalism as a representation symbol is miscomplete and adequate for natural language  . For example , we do not consi~der whether WHY-and HOW-quest ion can also be treated in the same framework  . 
It is obvous that this proposal for the semantica l representation of natural language sentences does not follow Chomsky " s theory  , according to which interrogative sentences should be deri-ved from non-interrogative ones by the application of optional t rans formations  . 
This approach has rather some affinity with the suggestion of Ajdukiewicz  ( 1928 ) who has described the logical structure of a question as consisting of senten-tial matr ix  ( a sentence with one or more of its components rep laced by variables  ) preceded by an interrogative operator " for what x "  ( or " for what x , y , z ,  . . . "  , if the matrix has more than one freevari- able  )  . In such cases , we can take illo-cutionary indicators as in terrogative operators in the sense of A jdukiewicz  . 
The proposed way of giving semantical representations both to indicative and quest ion sentences seems to have some advantages  . Above all , it enable us to deal with question sentences di rectly without using the somehow artific i al method to paraphrase them as indicative sentences or spistemic statements  , as suggested by Hintikka . Anyway , the suggested kind of semantical represent a-t ion of question sentences receives a quite natural set-theoretical interpretation  . For example , the form ( 2 ) used for request corresponds to the meaning of the set expression :  x2 I ex . x3(city(x3) " Tokyo " and . eq . QOI take place city(x2, x3))
J (4)
In such cases , the interrogative operators function as quant ifiers  ; they bind free variables and thus transform con-ditions exhibited in sentential matr ix into complete closed forms  . 
3. Examples
In order to let the reader have a rough impress ion of what the system can accom-plish at the present stage  , we give below at first some output examples , before we step into the scattered des-crition of the conceptions and princi-ples to be used  . The examples taken from output consists of pairs of a given logical form and its corresponding natural language sentence generated  . 
/true /= . all . x2( . ex . x3(city(x3) . eq . 
" Tokyo '. and . take place city(x2, x3)))
EVERY MEETING WILL BE HELDINTHE
CITY ' ~ okyo "/ true /= . all . x1( . ex . x2(( . ex . x3 ( make-journey city(xl , x3) . and . city(x3) . eq . 
" tokyo ')). imp . ( take part(xl , x2))))
EVERYBODY WHOMAKE SAJOURNEY TO THE
CITY'~OKYO"TAKES PARTATSOMEMEETING person ( xl ) = . ex . x2(( . ex . x4(take place-country(x2, x4) . and . country ( x4) . eq . 
" japan ')). and . ( take part(xl , x2)))
WHOTAKES PARTATTHEMEETING WHICH
TAKES PLACE INTHECOUNTRY " JAPAN " conference ( x2 ) = . ex . x3(city(x3) . eq . 
" tokyo '. and . take place city(x2, x3))
WHICHMEETINGS WILLBEHELDINTHE
CITY"TOKYO " person(xl ) = . ex . x2 ( conference ( x2) . eq . 
" colling-8o ' . and .  (  . ex . x3 ( take place-city(x2, x3) . and . city(x3) . eq . ' tokyo ')) . and . give lecture conf(xl , x2))
WHOGIVES ALECTURE ATTHECONFERENCE " COLLING-8o "WHICH TAKE SPLACE INTHE
CITY"TOKYO " country(x4) = . ex . x2 ( take place country ( x2, x4) . and . conference ( x2) . eq . c?lling-80")
INWHICHCOUNTRIES WILL THEMEETING ---406--"COLLING-8o'BE HELD person ( xl ) = . ex . x3(city(x3) . eq . ' tokyo " . and .  (  . ex . x2 ( take place city(x2, x3) . and . 
conference ( x2) . eq . ' colling-8o')) . and . 
travel to city(xl , x3))
WHOTRAVEL STOTHECITY"TOKYO'IN
WHICHTHEMEETING"COLLING-8o " TAKES
PLACE person(xl ) = . ex . x2(( . ex . x4 ( take place co-untry(x2, x4) . and . country ( x4) . eq . ' japan ")) . and . ( take part(xl , x2)))
WHOTAKES PARTATTHEMEETING WHICH
TAKES PLACE INTHECOUNTRY " JAPAN " 4 . Semiotic interpretation as sentence gener at ion basis Let us proceed to consider the devices for sentence generation from the underlying logical structure  . Essentially the generation process will be based on the semiotic interpretation  , called by Scholz and Hasenjaeger , of the predica-tes and functions used in the logical structure  . Some of them are listed as follows:
Predicates : take part(xl , x2 ) = def person xl takes part at meeting x2 take place city ( xl , x2 ) = defmeeting xl will be held in city x2 take place country ( xl , x2 ) = defmeeting xl takes place in country x2 make journey city ( xl , x2) = def person xl makes a journey to city x2
Functions : city(x ) . eq . y = def the name of city x is y conference ( x ) . eq . y = def the name of meeting x is y pezson(x ) . eq . y = def the name of person x is y The semiotic interpretation strings are the building basis for surface sentences  . In this respect these miotic inter-pretation of predicate may be comparable with the under lying string in the gene-ration tree or phrase -marker which is assumed both in the theory of Chomsky and in the theory of Montague as well  . 
If we look at its actual form more clos-ely , the strings given as semiotic inter-pretat ions differ in one essential point from the underlying strings adopted in the school of generative grammar  . 
The underlying string in the deep structure for grammatical transformation contains no var iable as used in the logic  . 
On the ground of this essential differ-ence we can make no direct comparison between our approach and that of genera-tive semantics  . 
At the disposal of semiotic interpreta-tions of predicates and functions  , we could already in principle implement a program to generate somehow quasinatural language sentences from the given logical structures  . All what we need to do is to follow the type of reading the logical formula which we have been taught at the class room  . We have been taught , for example , to read the following logical structure/t rue /=  . all . x2( . ex . x3(city(x3) . eq . 
" tokyo ' . and . take place city(x2 , x3 )   )   ) as : for every meeting x2 it holds : there is a city x3  , for which it hold : the name of city x3 is " tokyo " and meeting x2 will be held in city x3 This might be considered as a quasinatural language sentence formulation  . It has above all the advantage of being universa l to the extent that it can be applied to every kind of logical structures  . And actually a program has worked in this style  ( Habel , Schmidt , Schweppe 1977) . However , this kind of formulation is not the usual surface sentence and it is also not so in tell igible as it could  . We need therefore to find out an alternative which might give us a simple and natural fo rmulation  . For eample , the logical form given above has the meaning which can be expressed simply as : " Every meet ing will be held in the city " Tokyo "" It contains no formal logical quantifiers and no free or bounded variables  . We describe below some main methods and princ iples which we have used to achieve the gener at ion of such surface sentences computationally  . 
5 . Quantification order and derivational constraint The problem of quantifiers constitutes one of major obstacles in the computa-tional sentence generation from logical structures  . As is well known , the order of different quantifiers has an influ-ence on the mean il ~ g of the expression whether it is in the case of natural language or it is in the case of  predi---407-cate logic . Thus , Peirce has already po-inted out that the sentences " some woman is a dored by whatever spaniard may exist " and " whatever spaniard my exist a dores some woman " have quite diffe rent meanings  . Hintikka and Lakoff have made the same observa -tion in their analysis of natural language  ( but it seems that Chomsky has overlooked this fact in his formulation of Passive-trans formation  )   . This phenomenon that the order in which un iversal and particular quantifier occur is mate-rial for the meaning is even more obvious in the language of predicate logic  . 
Let us consider as example the pre-dicate person visit city  ( x , y ) with the assigned semiotic interpretation : person x visits city y 
The two logical expressions . ail . xl ( . ex . x2 ( person visit city(xl , x2))) . ex . x2( . all . xl ( person visit city(xl , x2 ) ) ) which differs from each other just in the order of quantification means quited if ferently  . In the process of sentence generation from logical structure we can thus not simply take the semiotic inter-pretation string and subst it ute for its variables the corresponding types of quantifiers  . In other words , the opera-tion of " quantifier-lowering "   , as Lakoff has called it , cannot be applied in all cases without pert inent differentiation  . 
In our example , it can be applied in the first case and yields the correct sentence : " every person visits some city " However  , its direct application would lead rather to incorrect sentence in respect to these c and logical form  . It has rather the meaning " some city will be v is ited by every person " The regularity for the possibility of substitution can be perceived if we look at the semiotic in terp retation string and consider the patterns of the follow-ing logical forms together :  . all . x1( . ex . x2 . ex . x1( . all . x2 person visit city(xl , x2) person visit city(xl , x2)

.a l l . x2( . ex . xl . ex . x2( . all . xl person visit city(xl , x2) person visit city(xl , x2) It is then obvious that only in cases , while the order of logical quantifiers is in the same sequence in which the corresponding var iables occur in the given semiotic interpret at ion  , the operation of quantifier-lowering can be directly carried out  . And it yields correct sentences . In other cases such as in ( II ) , it is without measures not possible . 
This kind of regularity has been also observed by Lakoff in his discussion of the notion of derivational  ; it occurs in the transformational derivat ion of surface sentences from the underlying deep structures  . Without going into the details of his final modifications  , the derivational constraint means roughly like this : if one quantifier commands another in underlying structure  , then that quantifier must be leftmost in surface structure  . He uses the derivational constraint as a means to rule outcerta-in kind of transform at ional generation of incorrect surface sentences  . Our aim is , however , not to block out but to obtain correct and mean ingful surface sentences from meaningful logical structures  . We thus try to find out means so that the condi tion of derivational constraint can always  , or at least to a large part , be fulfilled . For this purpose we introduce the notion of the associated forms of these miotic inter-pretat ion of the given predicate  . We add for example to the original semiotic interpretation " person x visits city y " its associated form like  ( 5 ) " city y will be visited by person x " ( 6 )  . 
It will be simply stored . Independence on the orders of quantifiers the corresponding semiotic interpretation str ing will be selected  . By this additional means , correct sentences could then be computational ly generated from the lo-gical pattersment ioned in  ( II )  . 
The same problem occurs with the trea-tment of logical structures underlying Wh-questions  ( which , who , etc . ,)  . In our conception and in accordance also with the theory of H in tikk a  , the interrogative operators has the quant if ication nature  . 
They subject thus to the same derivat-ional constraints  . We use thus the asso-ciated semiotic in terp retation strings in the required cases  . By this means , we can generate computationally from the logical structures person  ( xl ) = . all . x2(person visit city(xl , x2)) city(x2) = . all . xl ( person visit city(xl , x2--408 ) ) the fo l lowing in ter rogat ive sentences respectively : " Whovisits every city "  , " Which cities will be visited by every person " It is of interest to note that with this device the topic of interrogative sentences has been treated and solved for thes implecases at the same time  . In general , the device of associated forms of these miotic interpretation  , which from the linguistical viewpo intre late to each other transformationally  , will be extensively used . Among others , it will be applied in the treatment of there lative sentences  . In other words , asso-ciated form like " who makes a journey to city y " will be stored together with the given interpreted predicate  ; and this asso-ciated for ~~ ill be used eventually for relative sentence format ion  . We return to this problem below . 
6 . Referential property of variable , relative sentence generation and and property of connectivity In computational sentence generation from the underlying logical st ructure we make an extensive use of the reference nature of the variables  . Variables have been called by Quine as pronouns of logic and mathematics  . The referen-tial character will be used by us as a kind of red thread in building up the composed sentences  . This feature shows clearly in generating sentences with relative clauses  . Let us consider as example the logical st ructure person  ( xl ) = . ex . x2(( . ex . x4(take place-country(x2, x4) . and . country ( x4) . eq . 
" japan ')). and . ( take part(xl , x2)))
The variable xl in the interrogative operator  , namely person ( xl ) , indicates the topic of the question concerned . 
This topic is in general specified by the composition of predicates and func-tions in a certain way which is expres-sed by the logical matrix  . The generation of the corresponding inter rogative sentence means to express verbally this composition of predicates and functions after the given prescription in matrix  . 
In making use of the referential pro-perty of variavles  , it is seen that the topic will be character i zed at first by the predicate take part  ( xl , x2 ) On this ground its associated form of semiotic interpretation  , namely " who takes part at meeting x2" will be used as the main building component of the question sentence to be generated  . By means of the variable , we can find that this predicate take part(xl , x2 ) is connected directly with the predicate take place country  ( x2 , x4) . 
In other words , the variable x2 contain-ed in the predicate take part ( xl , x2 ) is in its turn specified by the predica-te take place country  ( x2 , x4) . We use thus in consideration of its modifica -tion character the corresponding associ- ated form of semiotic interpretation  , namely " which takes place in country x4" to build up the relative clause . In the same way , we find that the variable x4 contained in the predicate take place country ( x2 , x4 ) is referred by the name function country ( x4 )   , whose function value indicates the name Japan . This constant will be thus inser-ted at the place  x4  . The termination of these connecting and insert ing processes lead then to the generation of the sentence " Who takes part at the meeting which takes place in the country " Japan '" In connect ion with the referential feature of variab lesit is of interest to note that all the logical structures which we have used in our question-ans-wering system shows are markab le property which we have called the property of connectivity  . A logical structure is called to have the property of connec-tivity  , if in the case where it contains more than one predicate or function each of its predicates ~ d functions shares some argument with others  , i . e , has common variables with other functions or predicates  . 
It is on the ground of the property of this connectivity that we can even let the program processing under certain circumstances bedr iven by variables  , such as explained just above . On the contrary , let us consider the following logical structure :/ true /=  . ex . x1( . ex . x2( . ex . x3(city(x3) . eq . " tokyo ' . or . take part(xl , x2))))
Since the function city ( x3 ) and the predicate take part ( xl , x2) do not share any common argument , this logical form --409--does not have the defined property of connectivi t y  . Its corresponding surface sentence can therefore not be computed by the process driven by variables ? Ins-tead  , a different procedure must be applied . At present stage , we let , however , such types of sentences out of our consider at ion  . 
The usefulness of variables is not exhausted in relative sentence generation  . 
In general , we intend to use it to differentiate the varied patterns of the logical forms concerned  . And as a result of this differentiation , sentences of varied patterns will be generated  . Let us consider the following simple logical form : person  ( xl ) = . ex . x2 ( take part(xl , x2) . and . 
give lecture conf(xl , x2))
For such pattern , no attempt to generate relative sentence wil l be made  . Instead , it tries to express the surface sentence as fol lows : " Who takes part at some meeting and gives a lecture at this meeting " Our program is thus in trying to discern as much of logical patterns as possible  . 
It works after them.
7 . Categorical and hypothetical sentences , idea of Leibniz and Frege In our computational sentence generation we have made use of an old idea  , which goes back at least to an observation made by Leibnizinh is famous nouve au essa is surl ~ ntendement humain  . In the classical logic , one is customed namely to divide the judgements or assertional indicative sentences into three major types : categorical  , hypothetical and dis-junctive Leibniz has remarked that in some cases an actual hypotheti cal judgement can be expressed in a categorial form  . This regularity is discussed also by Frege on the relation between auxiliary sentences  ( Beis ~ tze ) and conditional sentences ( Beding ung s s ~ t ze ) in his essay 0 berSinn und Bedeutung . According to Frege the cinditional or hypothetical sentence " Wenneine Zahlkle inerals I und gr ~ Beralsoist  , so is tauchihr Quadratkleinerals Iund gr6Ber als
O " can be expressed in a categorial form : " Das Quadrateiner Zahl  , diek leinerals I and gr ~ Beralsoist , is tkle-inerals I und gr ~ Beralso "
In our system design , we have adopted this old conception . From the underlying logical implication structure its surface sentence will not be generated in hypothetical  , but rather in categorial form . ' This approach has its practical and stylist ic advantages  . It can be seen in consideration of the fol lowing logical form :/ true /=  . all . xl ( . ex . x2(( . ex . x3 ( make journey city(xl , x3) . and . city(x3) ? eq . " tokyo ")) . imp . ( take part(xl , x2)))) . 
In following this line of thought , the corresponding surface sentence will be generated by the system as follows : " Everybody who makes a journey to the city ' ~ okyo " takes part at some meeting " It is natural and simple  . For its gene-ration we need no more addition a l methods than the ones which have been at our d is posal : the quantifier-lowering and formation of relative sentence  . The only thing which we must take care of is to choose the semiotic interpretation str-ing of the conclusion rather than that of antecedent as the main building component  . Otherwise , the meaning would be distorted . 
The usefulness of this conception of Leibniz and Frege consists for our purpose  , above all , in the fact that it can be even extended to the t reatment of logical structures for interrog at ive sentences  . Without using this idea , the surface sentences to be computationally generated would have a cumber some look  . 
This feature may appear clearly , if we try to deal with the following simple logical structure : conference  ( x2 ) = . all . xl(( . ex . x3 ( make journey city(xl , x3) . and . city(x3) . eq . ' tokyo ')) . imp . ( take part(xl , x2 ) ) ) It is a logical form underlying an in-ter rogative sentence  ; it contains the logical form mentioned just above almost as component  . In combination of this Leibniz-Frege idea with the other principles like referentia l property of variables  , topic handling and formation of relative sentence which we have des-cribed above the system yields then without other detour the in terrogative sentence : " Which meetings will be visited by everyone who makes a journey to the city " Tokyo ""  --410--8  . General remark and discussion We have above described some main conceptions and princip lesup on which we have built up the program  . The system works essentially after logical patterns  , after certain features of logical structures such as connectivity  , the occu-rence of implication sign and so on . It is thus properties-oriented and not syntax-driven  . It is needless to say that our program cannot deal with all kinds of logical structures  . This is also not our original aim , besides the fact that , as Chomsky makes remark about the nature of deep structures  , not all logical structure can underly or have a meaningful surface sentence  . From the right beginning we have confined our self to just a specified set of logical stru-ctures used as a formal query language  . 
It is remarkable that for such a set of logical forms certain regularities and patterns can be generally established and be used to generate meaningful surface sentences computat ionally  . The progress will depend to a large extent on the careful observation of logical patterns and insightful linguistic analyses  . 
9. References
Frege , G .: uber Sinn und Bedeutung , Ztschr.f.
Philos.u . philos . Kritik , NF 1oo , 1892.
Habel , Ch . , Schmidt , A . , Schweppe , H . : On automatic paraphrasing of natural language expressions  , Semantic Network project report 3/77 ,  1977 , 
TU Berlin.
Hintikka , J.:
The semantics of questions and the questions of semantics  , Amsterdam , 
North-Holland , 1976.
Lakoff , G.
On generative semantics , in : D.D.
Steinberg et al eds .): Semantics,
Cambridge , uni . press , 1971
Searle , J.R.:
Speech acts , Cambridge , 1969.

