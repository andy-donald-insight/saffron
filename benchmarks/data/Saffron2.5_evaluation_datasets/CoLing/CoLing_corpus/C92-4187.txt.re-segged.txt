First Results of a French Linguistic
Development Environment
L . Bouchard ( GIREIL ) L . Emirkanian ( cIREIL)D . Estival 0 ssco)
C . Fay-Varnier ( CRIN ) C . Fou quer6 ( LIBN)(\] . Prigent ( CNFT-L . ~aon)
P . Zweigenbaum ( INSERM-U104)
1 Introduction : EGL
The EGL ( Enviroimement de Gdnie Linguistique ) project started in 1989 , with the proposal to create a linguistic software development environment containing a computational treatment of  1  ; ' leachgrmmltar JIts three main objectives were to allow research groups working in NLP : m to develop and test both generall ' Yenc bgraamtmrs and specific linguistic an Myses for that bm guage  , ? to test new parsers mtd to compare several parsers in a uniform setting  , and * to have at their disposal an ~ ma-lyzer / generator for French  , easy to maim rain and to port to other domains . 
t The EGL project involves 6 different partners : * GIREIL : Universit6 dn Qu6bee h . Montr ? ! al , D6 partement Math-Into , Montr6al Qu6bec , Case Postale 8888 - Succursale A-H3C 3P8 , 
CANADA . < lhb@mips1 . info . uqam . ca > , < le@mipsl . uqam . ca :> ? ISSCO : Universit 6 de Gen~ve , 54 rtedesAca-cias , CI\[-1227 Gen~ve . 
< estival@divsuu . unige . ch > eCRIN : Campus Scientifique , BP 239 , P-54506
Vandoeuvre-l&s-Nuncy Cedex.
< Christine . Fay@loria . fr > ? LIPN : Universit 6Paris-Nord , F-93430 Villeta-neuse . < ef@lipn . univ-parisl 3 . fr>?CNET-Lunnion:Route de Tr6gastel,BP40,
P-22301 Lannion Cedex.
< prigentg@lannion . cnet . fr2>? INSERM-U 194:91 Bddel'tt Spital , P-75634 Paris Cedex 13 . < zweig@frsim 51 . bitnet > It was supported by the Association pour la Coopdration Culture lleet Technique and by the French Programme PRC Communication Homme -Machine  . Development of the GPSG grammar of bYeneh was also supported by grants from the SSRC of Canada  ( grant #410-89-1469 ) and the FCAR of Quebec ( grants #89-EQ-4213 and #92-ER-1198 )  . 
Independently of a particular application , the envirolmmnt must be usable both as a component in a system making use of an existing syntactic database  , a ald as a development environment for new syntact ic treatments of the language  . The first phase of the EGL project was partly based oil a critical evaluation of existing work  ( in particular GDE\[1\] )  , e at d defined a general architecture with the following modules : * parser  , ? basic gramnmr , * testsuite database , o lexicon , ? develolmmntm , 'mageluent tools , * graphie ' alutilities . 
The initial grmmitatical formalism chosen was that of unification-based gralmnar and three main linguistic frameworks are taken into a c -comlt in F~G ~: GPSG  \[11\]  , Lt " G\[16\] and FUG\[17\]) . The parser is based on tile general principle of a chart  ; different attalyzers for the tliffer eut for xm disms can be integrated into the system by making retereuce to that model and by including specitien lethods for the types of objects they tmmipulate  . Tilebasic an Myzer is a revised version of the GDF parser  \[8\]  ; two LFG parsers are being iutegrated , and a FUG parser is planned . 
The French test suite and the grarmnax are both already fairly well developed  . The basic gramum r provided with the envirormaent is the keystone of the whole system  . It allows using the environment directly ~ md without further work  , samalso serves as a test bench for the computa-t ional solutions to liugt fistic problel rLs  . 
'\] ? he test suite serves as a guideline fortile coverage of  ( system-provided or user-defined ) grarmnars , to test whether they accept an independently established corpus of written sentences which exemplify then miulinguistic problems anti phenonmna of the language  . 
ACRESDECO1JNG-92, NANqE . S . 2328 not'yr19921I77l'aoc,ov COLING-92 . NANTES , AUG .  2328 .   1992 Wt file defining a French lexicon was not one of the main objectives of the project  , having a lexicon is an mmvoidable requirement for testing grammars and analyzers and the treatment of lexical information became an important coin -ponent of the work  . The need to access a single lexicon required a study of the normalization of lexical information which led to interesting questions about the reusability of syntactic features  . 
Detining development managementools turned out to pose challenging theoretical problems  . The History component keeps track of grammar development and modification  , and is complementary to the Coherence component which validates a state of the grasm ttar  . The Generation component allows the linguist o test limit cases in the grammar  , both from tile point of view of analysis complexity and in order to check over generation  . 
We start our description with the module making the system usable as a development tool for linguistic software  , i . e . the set of grapt fical utilities for the visual representation ftile grammar  , the analysis process and the results . 
2 User environment
EGL lets the user parazneterize execution and control commands  , explore their results , amt visualize and edit lexicai and syntactic knowledge  . 
In contrast with earlier approadle such as \[4\] , wet l fink that user interface standards are now sufficiently ilmture to allow reasonably portable software to be developed  , and most of these frmc-tions are part of a graphical user interface running under X-window Motif  . The EGL graphical user interface is best illustrated with the parsing tools  , wtfich are directed towards both the grean-mar developer and the parser developer  . The user can select a sentence , control parser execution , mtd explore the results . During parsing , the user can display the chart and watch it evolved ynanfically  . The agenda of a waiting chart tasks can also be displayed and manipulated  . Tiffs allows the parser developer to e~cperiment mann-ally with chart parsing strategies before integrating them into the parser  . 
After parsing ~ the grammar developer can display the relevant structures  ( derivation trees , feature structures , rules used , etc . ) and navigate through them . The whole user interface behaves as a structure inspector  , or hypertext-style browser , with displays and limks tailored to the linguistic needs and habits of ti~e user  . 
3 Development Management Tools
Besides the test suite elaborated for the project , three validation tools contribute to grammar development : het Iistury  , Coiterenee and Generation components . As the test suite and the ftistory components are described in detail elsewhere  \[5\]  , we will spend more time on the Coherence and Generation components  . They are both based upon a formalism which is common to GPSG  , LFG and FUG , and thus able to include all tile data and constraints of those three frameworks  . In this way , EGL goes beyond previous projects such as \[8 ,   7\] and provides a common tool for various frameworks . 
AgT ~ mmar consists of four sets ( category , ( ID -) rule , LP-rule and metarule ) . 2 Each set includes both data and principles . A principle is a constraint that must apply everywhere mid which defines the admissible data  . 
A category ( I , F , A ) is represented as: 3 eA categorial identifier I , which is a symbol identifying the category . 
A formula / ~' , which defines constraints applicable to the category  . These are deduced from the rule that generated the category  , or from principles . The allowed predicates are : standard D , constrained D ~ , default 3d deduction ; standard -- , constrained = % , default-attnification ; negation - , , ration /' , and disjtmction Y . 
? An attribute-w due structure A . A value may be atomic or complex ( itself an attribute-value structure )  . It can be de-dared explicitly ( with constants ) or implicitly ( referring to another value in the structure , thus allowing data sharing ) . 
Local trees stem fronl rewrite rules , 4 constrained by LP-rules and principles , The precedence constraints can be mentioned in the right hand side of a rule inside the rule as well as a principle via precedence rules  . This expressive power ( ' allowing " formalism mixing " ) facilitates 2An ( ID- ) rule is a regular expression constructed from an Immediate I  ) ominanee rule with Linear
Precedence constraints.
a Each element of a structure or a category can be omitted  ; in that case , it is considered a variable . 
4These are themselves defined with metarules.
5This is the way to express the Foot Feature Principle  , Head Feature Convention , etc . of GPSG . 
AcrEsDECOL 1NG-92, NA/VI ~ . .S . 2328 AOt ~ l19921178 PRoC . ov COLING-92 . NAN'rJ~s . AUG . 2328,1992 grannnax development . Two exaauples :
LFG ( rewrite rule ) : ( P , ,)* I , ( NP , $0 . SUJ::$1,)
A2, ( VP , $0:$2,\[TRANS-\])
GPSG(default constraint ) : ( , ,\[ V + , N 1 )-) a( , ,\[ VFORM V , PASS--\]) Them , ' dn prot demin the Coherence coinpo-nent is that of salisfia bilit ~  , ls there any valid parse with the user's graznmar ? Besides satisfi-ability  , some questions are of great interest from a linguistic point of view  , e . g . sufficiency and necessity of all the data . A grammar must be structurally coherent , and we say that a grarn-mariscoherent iff it satisfies : on on-cyclicity : there is no cyclic point  . 
, non-redtmdancy : A is red midant w . r . t . Binagrammar Siff SA has the stone strong generative capacity as SB  . 
non-superffifity : A is superfluous in SiffSaml SA have the same strong generative capacity  . 
accessibil Jty-co accessibility : data is accessible  ( resp . coarcessible ) iff used at least once in generation ( resp . a parse ) . 
We have shown 12\] that cyclicity , redundancy , ' rod superfluity are subproblems of accessibility : an accessibility algorittun can be used as a necessary condition for the three other problems  , lita contextfree granmlar , linguistic coherence can be tested locally . Therefore , a first pass applies to a contextfree paxt of the grar unmr  ( without data shaxing nor nonmonotonicaton fic formulas  )  . A second , global , pass uses label propagation , where labels are defined by constraints . We are also investigating a clique method to treat accessibility in a trartahle way  \[9  ,  2\] . 
The inputs to the Generation component are the following constraints : s on the graummr : specification of obligatory  , forbidden or cooccurrent rules , ? ontern final nodes : specification of complex structures that detern fine terminal nodes types  , ? oniuitial structures : specification of incomplete parse trees  . 
These parameterizations were easily included into tlm formalisnt  , but problems occur with tire algorithm itself , which chart Mgoritlmls are insufficient to deal with  . Three agendas take care of postmodification f nodes in incomplete trees  , thus extending Slffeber's algorithm\[21 ,  18\] . 
4 Linguistic Descriptions 4 . 1 Gralntnar "\] ; he development of tim GPSG granunax for 1 , ~ renchcaube traced through three steps . 
First , we implemented a demonstration groammar\[12\] , patterned altertile English granunar described in the GDF  , User Manu M\[8\] . In terms of coverage , tiffs French grammar cau handle some simple questions  , wtfich required the definition of two additional nmta rules  , ht terms of gralm nar-writing style , following a suggestion of \[22 , pp . 115-t19\] , we detine the person feature intemps of two tf fnary feat m ' es  , EGO said PTC ( participant ) . Finally , agreement is an mch more pervasive phenontenon in French than in English  , and ntaaly more eases nmst be taken into ar-comit : adjective/noun  , determiner/noun , adjectival predicate , arid the past participle . 
As a second step , we developed a GPSG-based I , ' rend ~ grauunax " . along the lines of the \]: ~ iI-glish gratn nmr described in  \[15\]  . Although the linguistic coverage is sinf flax in both of them  , the l ' arench graumla X is only loosely patterned after the Enghshone  . . Its development was broken into subtasks according to the types of constituents encountered  ( AI ' , NP , VP . . . ) as well as to the types of specific linguistic problems to be accounted fl ~ r  ( e . g . agreement , comparatives and coordination ) , lugener M , the rides in our graxmuaxaxed riven by lexicM infornmtion : wett ms model our computational grammaxontim results of current linguistic theory  . 
Our treatment of agreement is fairly complete \[13\]  . For example , we can handle complex color adjectives ( desrobes vertboute ille , " bottle-green dresses ") , predicate APs ( los robess on treties , " the dresses are green ") , midpast participles ( lesd tudiantes queles policiers out matraqu~es , "the students that the police beat up ") . 
Tim treatment of VPs is extensive \[14\] attd includes the positioning of clitics \[3\] and of negation . l , exical VI iteius are used to handle complex tenses  , ~ Ld the positioning of negation mid certain adverbs  . We strived to ndnhiffze then untber of lexical II ) -rules and tackletim problem of " categoriM distortion "  \[20\]   ( in particular , the granunarca : u account or complement subcategorization alternations in a systematic way  )  . 
The treatment of 1qPs was found to cause At : IEs DE COLING-92  , NAt CI'ES . 2328 AOt ~ l19921179 PROC . oF COLING-92 . NANIT . S . Auo .  2328 . 1992 more serious problems . Although we were able to pattern our treatment of modifiers after  \[15\]  , that of specifiers is more problematic\[19\] . It has rapidly become clear that semantic information is necessary for a satisfactory solution  . Thus , the third step is to enrich our morphosyntactic grammar with a semantic omponent  \[6\]  . 
4.2 Lexicon
A lexical database is obviously necessary to perform any test on gramm_  , 3rs and parsers . 
Defining a French lexicon within the GPSG for -realism was not one of our goals but  , in parallel to the syntactic database , we had to construct a lexicon couched in a formalism compatible with different grammars and with enough coverage to be useful  . Like the grammar provided with the environments this lexicon can be taken as is  , or be replaced by the users . We eventually settled on ( automatically ) transforming the information present in an already existing dictionary  ( the CNET lexicon ) to serve as the lexical database .  6 4 . 3 Normal iz ing Lexical In fo rmat ion In building a linguistic environment which is both French specific and usable by separate users with independently built systems  , we knew that these would require lexical information to be presented in different ways  . However , with the assumption that all of the lexical information ec-essary for the various syntactic analyses is actually present in the lexicon provided with EGL  , we make the hypothesis that the content of this information is common to the various systems  . 
Since an increasing number of grammatical formalisms put a large part of the linguistic description in the lexicon  , we are interested in the nature and complexity of lexical entries  , in the division of information between grammar and lexicon  , in the representation f the syntactic information in the lexicon  , as well as in the use of texical information i the grammar  . Normalizing this information thus became an important part of the linguistic aspect of the project : the features in the preexisting lexicon had to be transformed to serve as the basis for a " neutral " lexicon  , Which must be usable by grammars not written in the same framework as that of the CNET  . 
eThc CNET lexicon has more than 55000 entries defined with 200 keywords . The lexicon is transformed into minimal automata with quasi-linear time complexity for access  . The compactness of the automatal lows them to be resident in core memory  . 
First , a correspondence was established between the syntactic and morphosyntactic features of the CNET lexicon and the features required in systems created by members of the project : the GIREIL grammar  ; the LN-2-3 granlmar ( INSI ~ . ~RM ); the ELU grammar ( ISSCO) . From the list of features used by each of them , we extracted those that pertain to the lexicon . We only considered attributes required by the grammars at the lexical level  , thus discarding the features which represent information that cml only be evaluate during processing  , i . e . 
which cannot be present in a lexical entry ( e.g.
VEUT-AUX-COMPOSE on a complex verbal form for LN-2-3  , or REL on a nominal form in ELU ) . Since all three systems adopt to some extent a lexicallst approach midinclude a large amount of syntactic information in the lexicon  , this division required a detailed interpretation f their internal workings  . 
Conversely , although morphological nalysis is most often performed in a separate component  ( i . e . inflected forms do not constitute separate lexical entries  )  , morphological information is included in our normalization  , because that infor-marion must be present on the lexeme serving as starting points for the syntactic analysis  . 
We then put in correspondence the lexical features of the various systems  ; here again , it was necessary to interprethe way they are actually used  ( e . g . in the representation fref lexive constructions ) . The normalization of the morphosyntactic features required in these three grammars can now be extended to other grammatical analyses through the more general list of features established for the mapping which allows each system to recover in the lexicon the information it needs to perform an analysis  . 
5 Conclusion
While French has been the object of relatively extensive research in computational linguistics  , no extensive formal description of that language has been integrated in a linguisticallymotivated development environment  . The EGL project is part of a growing trend towards a wider linguistic coverage coupled with greater flexibility  . 
Designing a linguistic development environment requires making sonic fundamental choices about the grartmlatical for lnalism  , and the evaluation of competing formalisms depends on assumptions in lposed by the task at hand  ( corn-ACTE~DECOLING-92 . NANT ~, 2328^O ~' 1992 1180 PROC . OVCOLING-92, NANTES , AUO .  2328 , 1992 plexity , detern fiuls m , performance degradation in case of unfore seen input  , use and integration of semantic information ) . The use of NL as a medimn for communication between loan and nmchine renders desirable the adaptability of an NLP system to various l inguistic for lnalisms  . 
However , if automatic information processing projects now more often include an NL component  , that component is generally " closed " a~td unmodifiable : few systems are designed to provide the syntactic analysis of natural language texts or to be usable in various contexts  . 7In EGL , several of the modules nmy be reused outside of the grammatical form a fisln chosen for our own l inguistic description  . This basic reqrfire-ment of system design can have important consequences when we want to tai lor the system to applications where thel inguistic domain is limited  , which is the case in most natural laalguage interface applications  . As a design tool , EGL makes it possible to see simultaneously arul to manipulate asily each of its components  . 
References\[14\]\[1\]Baldy,B . and A . de Sousa ( 1989 ) ALVEY : uned ~ ude informatique pour la comprd hension des  \[15\] md can is mesdel ' aualyse syntazique azds surla th doriedes Grammaires Syntagmatiques Gdndralisdes  . 
Rapport de Recherche , LIPN.
2\]Belabbas , A .   ( 1991 ) Cohdrence des grammaires \[16\] ddcrivantle Langage Natural . Rapport de DEA,

\[3\]B~s,G .   ( 1988 ) " Clitique set constructions topi-calls & as dans une grammal reGPSG du franqais "  . 
In G . B~s&C . b~t ch sed s . Lezique e ~ paraphrase\[17\]pp .  55-81 . Lille : Presses universitaires de Lille . 
\[4\] Boguraev , B . J . Carroll , T . Briscoe and C . Grover ( 1988 ) " Software Support for Practical Grammar Development  . " Proceedings of the 12th In- \[18\] te ~ aiional Conference on Computational Linguistics  ( COLING )  , Budapest , pp .  54-57 . \[19\]\[5\] Bouchard , L . It . , L . Emirkanian , D . Estival , C . 
Fay-Varrder , C . Fouquet ~, G . Prigent and P . Zweigenbaum ( 1992 ) "EGL : al~ench Linguistic Devel- \[20\] opment Environment " . Natural Language Processing and its Applications , Avign on 92 . \[21\]\[6\]Bouchard , L . H . and L . Emirkanian ( 1991 ) Semantic Interpretation in the Grammar Development Environmenl  . Working Paper , GIREIL,

7The systems developed in France which have been studied in  \[10\] are all concerned with more than the syntactic treatment of the language  . 
\[7\] Carpenter , tL and C . Pollard (1991) " Inclusion , Disjointness and Choice : The Logic of Linguistic Classification  . " Proceedings of the 29th Annual Meeting of the Association for Computa -tronal Linguistics  , Berkeley . 
\[8\] Carroll , J , B . Boguraev , C . Grover and T . Briscoe ( 1988 ) A Development Environment for Large Natural Language Grammars  . Tceh . Report 127 , Computer Laboratory , University of Cambridge . 
\[9\] Dechter , R . and J . Pearl ( 1989 ) " Tree Clustering for Constraint Networks . " Artificial Intelligence , 38(3), pp .  353-366 . 
\[10\] Fay-Varuier , C . , C . Fou quer6,G . Prigent et P . 
Zweigenbaum ( 1991 ) Compara is on desyt ~ rues d ' analyse syntazique du fran~ais : Donn deset Commeniaires  . Journ ~ es Nationales du PRC-CHM,

\[11\]Gazdar , G . , E . Klein , G . Pullum and I . Sag (1985) Generalized Phrase Structure Grammar . 
Cambridge : Harvard University Press.
\[12\]GIREIL ( 1990a ) "nr~ve description de lagram-matte " pocimir " dufran ~ ais '  . Rapport de re-cherche . UQAM . 
\[13\]GIRE1L ( 1990b ) "Grammaire minimal edel ' ac-cord " . Rapport de recherche . UQAM . 
GIREIL ( 1991 ) " Lastructured usyntagme verbale af ran?ais " . Rapport de recherche . UQAM . 
Grover , C . , T . Briscoe , J . Carroll and B . Bogu-racy ( 1989 ) 2' he Alvey Natural Language Tools Grammar ( Second Release )  . Tech . Report 162 . 
Computer Laboratory , University of Cambridge.
Kaplan , It . and J . Bresnan ( 1982 ) " Lexical-fuuc-tional grammar : A formal system for grammatical representation "  . In The Mental Representation of Graramatical Relations  . J . Bresnan , ed . 
Cambridge : MIT Press.
Kay , M .  (1982) . " Parsing in Functional Unification Grammar " . In Natural Language Parsing , D . Dowty , L . Karttunen and A . Zwicky , ads . 
Cambridge : Cambridge University Press.
Le Barzic , J . P . (1991) Gdndration paramdtr de multi-for mahs me . Rapport de DEA , LIPN . 
Milner , J . -C .   ( 1978 ) Dela syntaze dl ' interprdta-tion : Quantit ds , insultes , ezclamations . Paris:
Editions du Scull.
Mitner , J . -C . (1989) Introduction hus escienced ulan gage . Paris : Editions du Seuil . 
Shiel)er , S . , G . van Noord , R . C . Moore , and F . C . N . Pereira (1989) . " A Semantic-Head-Driven Generation Algorithm for Unification-Based Formalisms '  . Proceedings of the 27th Annual Meeting of the Association for Compula ?mnal Linguistics  , Vancouver , pp .  7 17 . 
\[22\] Tesni & re , L . (1988) Eldments de syntazes true-tnrale . ( DeuxJ ~ me ~! dition revue et corrig de . Cin-quinine impression ) . Paris : Klincksieck . 
ACTESDECOLING-92, NAN q\]iS . 2328 Ao ( rr 19921181 l ) uo ~: . OFCOLING-92, N^l'crEs,AUG .  2328 .  1992
