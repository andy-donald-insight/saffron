Uniform Recognition tbrAcyclic Context-Sensitive Grammars is 
Nil'-complete
F , rikA arts *
l/.escarch Institute for L~mguagc&Speech
Trans10
3512 JK Utrecht
The Netherlands
Abstract
Context-sensitive grammars in which each rule is of the for lnaZfl--~  ( -* Tf lare acyclic if the associated contextfree grammar with the rules Z ~  3' is acyclic . The problem whether an intmt string is in the language generated by an acyclic context -sensitive grammar is NP-conlplete  . 

One of the most wellknown classifications of rewrite grammars is the Chomsky hierarchy  . 
Grammars and languages ~ Lre of type 3 ( regular) , type 2 ( contextfree ) , type 1 ( context-sensitive ) or of type 0 ( unrestricted )  . It is easy to decide whether a string is intile language generated by a regular or  ( : on text-free gralntnar . For context- . free grammars input strings can be re ( : ogmzed in a time that is polynomiM in the length of the input string as well as in the length of the grammar  . Earley\[197 ( I\]ha . s shown at ) ound of O ( \[GI2na ) where G is the size of the grammar and n the length of the inlmt string  , l/ . ecogni-lion for context-sensitive graln mars is harder : it is PSPACE-complete\[Gareyaa M Johnson  ,  1979\] , referring to \[ Kuroda , 1964\] and\[Karp , 1972 t . 
II . ecognition of type 0 hulguages is und ccid at ) le ( see e . g . Lewis and Papadimitriou\[1981\]) . 
The area between contextfree grammars and context -sensitive grammars is interesting for two rea  . sons . First , people have tried to describe natural languages with rewrite grammars  . Context-free grammars do not seem power full enough to descrihe natural languages  . Context-free grammars generate contextfree languages  . Natural * The author was sponsored by project NF 102/62-356   ( ' Structur M and Semantic Parallels in Natural Languages and Programming Languages '  )  , flm ded by the Netherlands Organization for the Advancement of l\[escarch  ( NWO )  . 
languages are probal ) ly not contextfree . The eounter examples of sentences that caal not be described with a contextfree grammar are always a bitartifieiah Very big subparts of nat-Il Eal languages are contextfree  . A grammar for natur M languages has to be only a bit stronger than contextfree  . That's why we are interested in grammars that are between contextfree and context-sensitive  . 
The second pective is the one of efficient proeessability  , lua contextfree model , sentences can be processed ellMently . In a context-sensitive one , they cannot . It is very interesting to know where the border lies : in which models sentences can be processed efficiently and in which ones they 
Call not '?
Intile 60's and 70's , attempts have been made to put restrictions on context-sensitive grammars in order to generate context-fl-eelmt guages  . Ex-a : mples are Book\[1972\[ , till ) bard \[1974\] and Gins-burgaud Greibaeh \[1966 I . Baker \[1974\] has shown that these methods come down to tile same more or less  . They all block the use of e on tex ~ to pass information through the string  . Book\[1973\] gives ; mow ~ r view of atteHtpts to generate context-flee languages with non-context-free grammars  . 
How to restrict permutative grammars in order to generate contextfree languages is described in 
MiLkkinen\[1985\].
t'eters3r . and Ritchie \[1973\] proposed a lin-guistic Mlymotivated chaatge in the definition of the notion grammar  . Subsequent replacements in a string are relflaced by node admissibility constraints in the parse trees of sentences in a con  ( ext . -flee grammar . However , this formalism leads to generation of contextfree  1  , 'mguages too . 
The approach of restricting ramlnax such that they generate context-tree languages does not seem interesting from the natural language perspective nor fi'o ~ l the efficiency perspective  . ThcAcrl , : sDECOLING-92 , NANTES , 2328 AO()I19921157~RO?O:COI . ING92 NnNIES , AUG .  2328 ,   1992 oMy advantages of tlf is kind of restrictions lie in the possibilty to describe a contextfree language in a different way  , which may be easier for some purpose . 
Another argument a gMnst blocking information \[/3aker   , \]974\] is the problem of unbounde depen-dencies . Unbounde dependencies are dependencies over an ml boundedistance  . Wh-mov cment is an exam I ) le of it . The number of unbounded e-pendencies in natur M hm guage is  ( almost ) always restricted . Models that restrict the amount of information that can be sent seem to come closer to models of humm L language than models restrict the distance overwl fich information can be sent  . 
In the 70's and 80's attention has shifted to the perspective of efficient processing  . Context-sensitive grammars have been restricted so that complexity of recognition lies somewhere between  7  ) SPAC $ and T ' . Book \[1978\] has shown that for linear time context -sensitive grammars recog-nition is NP-complete ven for  ( some ) fixed grammars . l~lrthermore there is a result that recog-nition for growing context-sensitive grammars is t  ) olynomial fort Lxed grammars \[ Dalflhaus and Warmuth  , t986\] . This article also tries to define a border between early-eflicient and just-efficient nmdels  . 
We can define the notions uniform ( or universal ) recognition and recognition for a fixed grammar as follows  . 
UNIFOR MRECOGNITION
INSTANCE : A grammar G and a string w.
QUESTION : Is w in the language generated by G ? The grammar  , as wellms the input string are inputs for the problem  ( these two types of input are easily confused ! )  . The uniform recognition prob-lena is one problem . 
There are infinitely many other problems :
Suppose we have a grammar G.
RECOGNITIONFOR , FIXEDGRAM-
MARG
INSTANCE : A string w.
QUESTION : Is w in the language generated by Gv Things are getting even more difficult when we saythings fikc : " For every grammar GRECOG-NIT IONFORFD  ( EDGRAMM ARG .   .   .  "  . The difference between uniform recognition and recog-nition for all fixed G can be il lust rated with an example from Barton Jr  . , Berwick and l~istad\[1987\] . They show that uniform recognition for unordered contextfree grammar  ( UCFG ) can be done in time O ( 21C ; In3) . It has not been shown that them fi form recognition problem is in  3  ? . For every G , however , tile fixed recognition problem can be solved in t imeO  ( n3 ) and all these problems are in 7~ . Barton Jr . , Berwick and Ristad \[1987\] show the problem to be polynomial for any fixed grammar by a compilation step  . The UCFG is compiled into a big contextfree grammar  . They use this grammar and the Earley algorithm in order to prove a polynomial bound  . Just forgetting about the grammar size ( replacing IGI by a con-stasl t ) gives a polynomial bound too . It is not clear why Barton Jr . , Berwick and Ristad \[1987\] always associate the fixed grarn mar problem with compilation  ( cf . their pp . 2730,64-79 and 202-206) . 
This article is about uniform recognition for one type of restricted context-sensitive grammars  , the acyclie context sensitive grammars ( ACSG's ) . We prove it to be NP-complete . This means they are as complex as the Agreement Grammars and the Unordered CFG's of Barton Jr  . , Berwick and Ristad\[1987\] . A CSG's are the pure rewrite grammars in this group  . They fit in the Chomskyhi ~ erarchy . 
The Uniform Recognition Problem



One might ask when we can use a cycfic context -sensitive grammars  . One can use them everywhere where one wants to use context-sensitive granlmars  . But one has to be careful : cycles are not allowed  . This property of acyclicity can be checked easily  1  . For most purposes one does not need cycles at all  . One field where context-sensitive grammars can be used is e  . g . morphology . Characters in a word are often changed when 1 It is much easier than checking whether a CSG is t ~ linear time CSG as defined by Book  \[1978\]  . One has to reason about length of possible derivations  . In ACSG , derivations a . t'e short as a result of their acyclicity . 
ACnT ~ SDECOIJNG-92, NAIgfES , 2 . 3-28 ao ~ r19921158PRO(: . OFCOLlNG-92, N^r?ll~s , AuG . 2328,1992 some suffix is added . These changes in a word are context-sensitive a ald can be described by a context-sensitiv c grammar  . Once a character is changed , we normally do not want to change it back , the grammax we use is an acych cone . 
The complexity of recognition for ACSG is lower thm t in the unrestricted case  ( CSG , with complexity PSPACE ) because we restrict the amount of information that can be passed through the sentence  . The number of messages that e ~' ut be sent is l imited  ( and we do not block the messages by barriers as in Baker  \[1974\]  ! )  . In the unre-stricted case we can send messages that leave no trace  . E . g . after a message that changes 0~s in tol~s we can send a message that does the reverse  . 
In sending a message from one position in the sentence to another ~ the intermediate symbols are not chazlged  . In fact they are changed twice : back and forth . With a cycll ccontext-sensitive grammars , this is not possible . Every messages leaves a trace a at d the amount of information that ca~t be sent  , is restricted by the gr~munar . 
Definitions
A grammar is a 4-tuple , G = ( V , E , R , S ) , where V is a set of symbols , : ECV is the set of terminal symbols . RCV~xV * is a relation defined on strings . Elements of_Rarc called rules . SEV\is the start symbol . 
A grammar is context-sensitive if each rule is of the form a Zfl---*  ?~7fl where Z ff V\E ; c ? , /~ , 7GV *; 75 Le . A gran Lmaris contextfree if each rule is of the form Z-~  3' where ZCV\ ; TEV * . 
Derivability ( -% ) between strings is defined as follows : uc~v ~ uflv  ( u , v , c* , flEV *) iff ( ~ , fl ) ER . 
The transitive closure of -% is denoted by = L ~ . The transitive rett cxive closure of =4- is denoted by : ~ . The language generated by G is defined ms
L(G ) = wEE*IS~w.
A derivation of a string ~ is a sequence of str ing szl  , x2 ,   .   .   . , x , ~ with x a = S , for " all i (1 < i < n )
X i=2-Xi + l and X n = ~.
A context-free grammar is acyclic if there is no ZEV\E such that Z~+Z  . This imphes that there is no string a EV * such that cr ~ a  . 
We can map a context-sensitive grammar G onto its associated contextfree grammar G~as follows : If G is  ( V , E , R , S ) then G'is(V , E , R ' , S ) where for every rule a Zfl-~oe TflER there is a rule Z - ~  7 ffRr . There axe no other rules in RI . 
Note that the associated grammar does not con-ta in empty productions  . 
We cefll Gaey cliciff the associated context-f leegrammar C is a cycll c  . 
The notation we use for context-sensitive rules is ms follows : the rule a Zfl---*ceTfliswri tten as Z-~\[all\[a ~\]  .   .   . iakl3'\[flllL 621 .   .   . \[ fill with ~: C~la2 . . . ? ~ k and fl = fllfl 2 . . . fll , ai , fljEV(l<i<k,l<j_<l) . 
An example of a context-sensitive grammar with the corresponding context-flee rules is : context-sensitive rules context-free part  1  -~  \[0\]   2   1  ~  2   0-~ i \[21   0  -~  1   2  -  ,   \[1\]   0   2  -~  0 This context M sensitive grammar is cyclic . Ir is able to permute (' s and its,
Recognition is NP-complete
UNIFOR MRECOGNITION FOR
ACY CLIC CONTEXT-SENSITIVE

INSTANCE : An a cyehccontext-sensitive grammar G =   ( V , Z , R , S ) and a string wGE * . 
QUESTION : Is w in the language generated by G ? The proof can be found in A arts  \[1991b  \] . To prove that it is in NP wc have to prove that derivations illACSG'saa'e short  ( have polynomial length )  . T iffs follows from the fact that deriva-tions in context-free grammars have polynomial length  . Derivations in an acyclie CSG are identical with derivations in the associated contextfree grammar  . The proof of NP-hardness is more complicated . The known NP-hard problem 3SAT can be reduced to UNIFOR MRECOGNITION for ACSG . Any 3SAT formula can be translated in a grammar and an input for ACSG-recogultion  . 
AcrEsDECOLING-92 , NANTES , 2328 Aour 19921159 PROc , O1: COLING-92 . NAbrl'ES , AUG .  2328, 1992
Recognizing Power
Any contextfree grammar can be transformed into antacyclic contextfree grammar without loss of recognizing power  . A cycle can be removed by introduction of a new symbol  . This symbol rewrites to any member of the cycle . Any contextfree grammar with empty productions can bcchanged into a contextfree grammar without empty productions that recognizes the same language  . There's one exception here : languages containing the empty string cannot be generated  . 
Any acyclic contextfree grammar with ontempty productions i an acyclic context-sensitive granl -mar  . Therefore , A CSG's recognize all contextfree 10alguages that do not contain the empty word . 
Furthermore , acyclic context-sensitive grana-mars recognize languages that are not contextfree  . One example is the language anb2~c ** In > 1 This language is recognized by the grammar ( " X " is an outernf in M ) : X ~\[ A\]ABB\[B\]B-~\[A\]X\[X\ ] A  -4a x-~IX\]BB\[B\]B- . \[B\]X\[XlB-~bX- , \[X\]Bn C\[C\]~~\[B\]X\[C\] C ~ e 
S-~ABBC
A derivation of " AABBBBCC "

A X B B C C ~ A A B B B B C C ~ a a b b b c c .
With the pumping lemma one caal prove that the l ~tbmage is not contextfree  . 

We have proved that UNIFORMRECOGNI-
TIONFOR . ACYCLICCONTEXT-SENSITIVE
Gf\[AMMAR is NP-complete . It turns out to be important for complexity of recognition with context-sensitive grammars whether sending information leaves a trace  . 
We have reduced 3SAT to the uniform recognition problem for a cyclic context-sensitive grammars  . Every 3SAT formula results in a different grammar . Probably it is not possible to construct an acyclic context-sensitive grammar that recognizes all  3SAT formulas . My conjecture is that ACSG-recognition is not NP -hard for any fixed grammar  . If this is not true , there would exist a grammar that recognizes all 3SAT formulas . For this grammar the recognition problem would be NP-hard  . In such a grammar , not every 3SAT variable is encoded in a different symbol in the grammar  . The variables are numbered and their numbers are encoded in sequences of O's and l'se  . g .   . A grammar that recognizes all 3SAT for-muta's must be able to compare such sequences . 
It must e . g . be able to recognize tile language wwIw ? V * . If w is a number , two numbers are compared . Context-sensitive grammars can recognize ww . Some can even recognize all 3SAT formula's . 
A CSG's are not that strong . They cannot even recognize ww . Any ACSG can compare only a fixed number of characters  ( only fixed amounts of information cazt be sent )  . Therefore my conjecture is that the recognition problem for any fixed grammar is not so hard : it 's polynomial  . Chart parsers for ACSG have been designed and implemented\[Aarts  ,  1991\] . They recognize inputs for many hard grammars in polynomial time  . It is hard to prove , however , that they run in polynomial time for every grammar  . If it could be proved , complexity of ACSG-recognition is similar to complexity of UCFG-recognition : NP-complete for the uniform case and a known algorithm that runs in time something like O  ( 21 GIna ) )  ( polynomial in n but not in G )  . 
The polynmnial bound ( which has not been proved yet ) would be an explanation of the fact that humans can process language fllcicntly  . Humans have a fixed grammar in mind which does not change  . The complexity of recognition with a fixed grammar should be compared with the speed of human language processing  . The arguments of Barton Jr . , Berwick and Ristad \[1987\] against this are based on two kinds of arguments . The first has to do with compilation or preprocessing  . 
We have polynomial bounds without compilation or preprocessing  ( just fix IGD . These arguments do not seem to hold . The other ones have to do with language acq ~ fisition  . When a child is learning a language , the grammars he uses is changing . 
At every sentence utterance or understanding the graramar seems to be fixed  . The difference between uniform recognition and recognition for any fixed grammar is that small that we cannot draw conclusions about what kind of processing children perform when learning a language  . 
AcrEsDECOLING-92 , NAbr rES , 2328^O~q"19921160 PROC . OFCOLING-92, NAh'rES , AUG .  2328, 1992

I want to thank Peter van Erode Boa . s , Reinhard Muskens , Mart Trautwein and TheoJansen for their comments on carher versions of this paper  . 
References
Aarts , E . , Itecognition for Acychc Context-Sensitive Grammars is probably Polynomial for Fixed Grammars  , Tillmrg University , ITK Research Memono . 8,199 L . 
Aarts , E.,
Uniform Recognition for AcychcContext-
Sensitive Grazumars is NP-complete , paper presented at Computing Science in the
Netherlands , Amstcrdam , 19911).
Baker , B . S . , Non-context-Free Grammars Generating Context -Frec Languages  , Inform . 
and Control , 24, 231-246, 1974.
Barton Jr . , G . E . , R . C . Berwick ~ ldE . S . Ristad , Computational complexity and natu-rM language , MIT Press , Cambridge , MA ,  1987 . 
Book , R . V . , Terminal context in context-sensitive gramanars , SIAM J . Comput . , 1, 2030, 1972 . 
Book , R . V . , On the Structure of Context-Sensitive Grammars , lnternat . J . Comput . 
lnform . Sci ., 2, 129139, 1973.
Book , R . V . , On the Complexity of Formal Grain-mars , Acta/nform . , 9,171 181, 1978 . 
Dahlhaus , E . and M . K . Warmuth , Membershil ) for Growing Context-Sensitive Grammars Is Polynomial  , lnternat . J . Comput . 1n-form . Sci . , 33,456--472, 1986 . 
Earley , J . , An Efficient ContextFree Parsing Algorithm , Comm . ACM , 13(2), 94-102,
Feb . 1970.
( ~ arey , M . R . azt dD . S . Johnson , Computers and lntractabillty : AC ~ uide to the Theory of NP-Completeness  , W . H . Freemall and Company , Sanl ~ rancisco , CA , 1979 . 
Ginsburg , S . and S . A . Greibach , Mappings which Preserve Context Sensitive Languages  , /n-form . and Control , 9, 563-582, 1966 . 
Hibbard , T.N ., Context-Limited Grammars , J.
Assoc . Comput . Mach ., 21(3), 446-453,
July 1974.
Karl ), R . M . , Reducibihty among combinato-rim problems , in CompleJdty of Computer
Computations , edited by R . E . Miller and J . W . Thatcher , pp . 85-103, Plenum
Press , New York , 1972.
Kuroda , S . o Y . , Classes of Languages and Linear ?
Bounded Automata , / n form . and Control , 7, 207-223, 1964 . 
Lewis , H . R . and C . H . Papadlmitriou , Elements of the theory of computation , Prentice-
Hall , Englewood Cliffs , NJ , 1981.
M?kklnen , E . , On Permntative Gra~nmars Generating ContextFree Lang ~ tag cs  , BIT ,  25 ,  604-610 ,  1985 . 
Peters Jr . , P . S . madR . W . Ritchie , Context-
Sensitive Immediate Constituent Analysis : ContextFree Languages Revisited  , 
Math . Systems Theory , 6(4), 324-333, 1973.
AcrF . s DECOLl NG-92 , NAMES , 2328 AOr~q'19921161 PRO(: . OFCOLING-92, NANteS . AUG .  2328, 1992
