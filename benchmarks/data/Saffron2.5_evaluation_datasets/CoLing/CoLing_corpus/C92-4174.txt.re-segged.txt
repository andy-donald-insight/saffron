DIRECTPARSING WITH METARUI~ES
Wilhelm WEIS WEBER , Susanne PREUB
Technical University of Berlin
Institute for Software and Thcx ) retical Computer Science
Project KIT-FAST , Sekr . FR 512
Franklinstr . 28/29, D-1000 Berlin 10
Email : ww@kit . es . tu-berlin . de and preuss@kit . cs . tu-berlin . de

In this paper we argue for the direct application of metarules ill the parsing prlx  ; ess and intrurluce a slight restriction on metarules  . This restriction relies ml theoretical results alx m the tern filuation of term-rewrite systems and does not retinue tile expressive power of metarules as much as previous restrictions  . We prove the termination for a ~ t of metarnles used in our German gramnlar and show\[low nleta rules can be integrated into the parer  . 
1 Introduction 1tie metarules within the theory of Genendized Phrase Structure Grammar  ( GPSG ) are a very interesting device to express generalizations on a basic set of immediate dominance  ( ID ) rules . A short introduction to the theory of metarules i given in the following section  . Metarules are used to generate an object gnanmar fom a set of basic ID rules  . One of the first discussions about the application time of metarules within the GPSG theory  , which has strongly in lhlenced the succeeding research ill this field  , has been published by \[ Thompson 821 . In his article Thompson argued fi ~ rapplying the metarules all at once in a preprocessing step  ( compile-tilneapplication )  . However , our parer applies file metarules during tile parsing process  ( runtime a Pldication or direct application )  . A discussion why we prefer file direct application is given in section  3  . No matter when tile metarules are applied to tile basic set of ID rules  , we have to care fortile termination of the recursive application of metarules  . \[ Thompson 82\] made a propo ~ l to guarantee trmination by the definition of a Finite Closure  ( FC )  . This approach restricts the application of nlctarul c such that one metarule can only be applied once in the derivation of an ID rule and prevents it from recnrsive al  ) l ) licatiou . This restriction has been taken over by the authors of \[ G~daretIll  . 85\] and they gave a furthe restriction . They restricted the application of nteta rules to lexical ID rules  , even though they knew that this restriction ulay prove to Ix  ; incompatible with the descriptive lx ) wer needed for natural language gramnmrs ( p .  59) . But we think that there is nu need to restric the application of meka rules only to lexical ID rules  , even if there are proposals to elimi~mtefile u ~ of metarules and to use lexical rules like in LFG and HPSG  ( see\[Jacobs on 87\] )  . But to do so with GPSG would involve crucial changes u ~ tile theory  , and therefore we preserved file metarule component illour machine translation  ( MT ) system a ml tried to find an adequate criterion h ) ltile termination of mela rules . In our approach die granlnlar writer is lice to decide whether a metarule is to be applied to lexical 
ID rules or to another type of rule.
Tile Finite Closure ( FC ) is too restricive , \[ w . ,cause in some cases ( seetile examples of IUszkoreit 87\] and \[ G~daretill . 851 intile sections 3 and 4, respectively ) re . cursive application is needed . In section 4 we present all alternative constraint on die basis of results in the lield of term-rewriting  . " l-lais constraint is less restrictive than the FC  . It ' allows for the definition of recursive metarules which may be applied freely and guarantees the termination  . In section 5 the metarules of the German GPSG grammar used in our MT system are outlined and  , with the help of the constraint in section 4 , we show that their application is terminating . 
hisection 6 we give an outline of how to modify the parsing process in a way that n retarules can be applied directly rather than at compile-time  . In the last section we draws on reconclusions for future work in this field  . 
2 Metarules in GPSG
Metamles are one of file most criticize devices of the GPSG lonnal is nl  . GPSG is a grmnmar fomvalism that states mostol ils generalizations on the level of local trees  . Mela rules were introduced to capture generalizations on tilemt of  1D rules . An ID rule state stiled ( )ulinance relation bctweA~n tile mother category and aumltiset of  ( laughter categories in a local tree with ( )ut fixing the linear precedence relation of tile ( laughters . ID rules have the following to rrent :
Co ) - ~ Cl , C2 . . . . . C ~
Mela rutes define a relation on ID rules . They have the lollowing tk~rlnat : ' in putll ) rule scheme ' ~' output ID rule scheme ' and can be read as : If tile ~ t of \[ D rules contains an ID rule which is nlatched by ' input ID rule scheme '  , then it also contains an Ill rule that matches ' output ID nilese heule '  , where the feature SlW . cifications of the input ID rnleare tanled over to file output ID rule if not specilied otherwise by the mela rule  , For example the metamle VP\[-PAS\]--~W , NP\[acc\]~VP\[+PAS\]--)W ,   ( PPI by \] ) states the connection between active and passive , where W is a vltriablc ranging over a ( possibly empty ) nmltiset of categories . The major point of criticism againstm cumdes is tlm t they increase the generative power of GPSG illan undesirable way when they are recursively applicable  , because this may lead to arl in finite set of ID rules  . The resulting grammar need not be contextfree . Ill order to remedy the situation , suggestions of varying radicality were made . 
The pruposal of \[ Thompson 82\] and \ [ Gazdar et al 85\]  , which tries to maintain metarules , was simply to apply an leul rule ill most once in the generation of an ID rule  . 
This stipulation is somewhats range , because it allows for recursive metarules and just prevents them from being applied recnrsively  . 
\ [ Kilbury 861 suggested to eliminate nleta rules by using category co~K  ; cnrrence restrictions . 
The most radical prolxls alwas to dispense with metarules  . Bntouraim was to stay within the ti'amework of GPSG  , and it would be a loss to dispense with mela rules  , beeanse GPSG formulates for example valency of verbs and other constituents on the level of ID rules aud nm'ta rules are the means to capture generalisations on diat level  . 
For this rca . son we formalize the properties of metarules that terulhiate recursive application and state ACTES I  ) ECOLING-92 , NANTI . : S , 2328 AOL'I1992 l1l1I ) ROC . Of U . OLING-92 . NANTES , Au(i .  2328 ,   1992 them as a condition that a set of metarules narst fulfil  . 
Metarules can then be applied freely.
3 Application time
There are two possibilities for the time to apply the metarules  . The first is to compile the basic set of ID rules  ( compile-time application ) in a preprocessing step . Thomps on calls it all-at-once approach . The other possibility is to apply the metarules during the parsing process  ( runtime application or direct application )  , which Thompsoo calls as-needed approach . 
Thomps on argued for the compile-time application because the direct application of metarules has the following disadvantages  ( see\['/homlrson82\]:p . 5 ) :  ( 1 ) If a metarule can be applied to an ID rule during the parsing process  , the metarule has to be applied again when the ~ meID rule is involved in the same or a subsequent parse  . 
(2 ) To store the structures generated by ID rules which are the result of the application of a metarnle is just another instanoe of the compile -time application  . 
(3 ) Derivations of ID rt des of length greater than one  , i . e . ID rules which are the results of applying more than one metarule to one basic ID rule  , will rapidly expand the . search slmme . 
In order to look a little bit closer to Thompson's arguments and to stay on his line  , we presuppose that a kind of topdown parsing method is used and there aren basic ID rules and mID rules  , generated by the . application of the metarules . 
Wheulooking to argument (1) , we see that it is an argument lorther an-time approach  . If the metarules are applied at compile-time a huge set of ID rules is compiled from the basic set  . For exanlple if we would apply the metarules of our MT system  ( see section 5 ) to our basic set of 80 ID rules at compile-time , wc wo nld get about 240 ID rules in the object grammar . 
Let us assume that some category C has to be expanded m~d there are iID rules in our grammar with mother category C  . In the compile-time approach the parser would have to check  ( n + m ) /n * iID rules on average , whereas in the runtime approach iID rules and ( n + m ) /umet and es ( ( n+m ) /n + i rules ) have to be checked for application to these ID rules  . In the normal case that are less than in the compile-time approach  . 
Argument ( 2 ) is indeed an argument for the runtime approach . Let as again consider the above example and each of the iID rules hasd daughters on average  . 
If the category C is expanded according to all ID rules  , in the worst case ( n + m ) / n*d*i ( partial ) structures have to hestored ou average in the compile-time approach  . 
These structures are very similar , because in general the metarules modify the ID rules slightly  . The runtime approach can make use of this fact and stores only approximately d*i  ( partial ) structures and additionally ( n + m ) /n * is tructures after the application of the metarules  . That makes ( ( n+m ) /n+d ) * is n-netures to be stored in the runtime approach  . The common parts of die ID rules generated by metarules need not to be stored  , that are ( n + m ) /n* ( d-1 ) * i-d*i partial structures less . For example if n = 80 , m = 160 , d = 3 and i = 10 then Ot is would mean that on average 30 partial structures less have to he stored for the corresponding constituent  . 
Conceruing argument (3),\[Barton et al87\]: p . 2 26 showed that the computation of the Finite Closure  ( FC ) of a GPSGG with xID rules and y metarules can increase the number of the ID rules worse than exponentially  , namely from x to more than X2y , i . e . 
there is no difference between the compile-time and runtime approach  . 
In order to sum up flt is discussion , we can say that there is no difference in complexity between the com-plile-time and file runtime approach with respect to the arguments in \[' ll tompson  821  . The direct approach is even preferable to the eomplile time approach when looking at the arguments  ( 1 ) and ( 2 )  , which are indeed arguments for direct application of metarules  . 
There is another argument for direct application of metarules  . The FC in \[' ll tomps on 82\] states that every metarule can apply at most once in the derivation of any given object grammar rule from one basic rule  . An example for the recursive application of a metarule has been proposed in \[ Uszkoreit  87\]: p . 145 in his German grammar . It makes the adverbial phrase ( AdvP ) a sister node of the verb and its arguments : V2\[-AUX \]--~ V , W~V2\[-AUX\]--~V , W , AdvP This metarule is to solve the problem that adverbial phrases can be interspersed freely among the arguments of the verb and the number of AdvPs in a verb phrase is not limited  ( but it is finite ) and the metarule has to be applied recursively . This fact would rule out the definition of this metarule with respect o the definition of the FC wltich has been adopted also in \[ Gazdar et al  85\] to avoid the production of an infinite number of ID rules  . Uszkoreitried to circumvent the l ~ rublem in redefining the above metarule such that it fits the requirements of the FC  . It employs the Kleene star operator : . 
V2\[-AUX\]-+V , W := ~ V2\[-AUX\]--~V , W , AdvP * This change of the memrule is not uecessary if the metarules are applied directly during the parsing process and the above mela rule without he Kleene star can be applied freely  , because the termination is determined by tile finiteness of the input string  . 
4 Termination
No matter whether the metarules are applied irectly or at compile-time  , we have to cam for the termination . 
We think that the restriction on the application of metarules imposed by the Finite Closure  ( FC ) is too strong . That may have crucial consequences for some metarnles  . Look for example at the Complement Omission Metarule from the English grammar in \[ G~daret al  85\]  , which is \[+ N , BAR1\]--~N ? , W := 2 , \[+ N , BAR1\]--~N ? . This metarule deletes optional complements of nouns  . For example the noun gift may have two optional prepositional phrases as complements  , i . e . NI~No , ( PP\[of \]), ( PP\[to\]) . The prepositions of add to a refixed but either of the PPs or both may be left out : the gift  , the gift of John , the gift to Paul , the gift of John to Paul . The above metarule only allows for the gift and the gift of John to Paul  , because it deletes all complements of the noun . The correct me " ta rule would be :\[+ N , BAR1\]--~N ? , X , W : : :* , \[+ N , BAR1\]--~Nd , W\[( ; ~dar et al 85\] have not been able to define this metarule , because it has to be applied recarsively add the FC does not allow recursive application  . For this reason we decided to define another constraint which is not so restrictive  . 
As it Iresturned out , most of the metarules which have been defined within the fragment of English in \[ Gazdar et al  85\] or of German ( see the . section below for a more detailed diseussion ) are or can be defined in a ACRESDECOI . 1NG-92, NANIES , 2328AO~r19921l12PRO(: . OFCOLING-92, NANTES , AUG .  2328 ,   1992 way that guarantees rite termination of the recursive application of metarules  . In order to prove the termination , some research results within the field of term -rewriting can be applied  ( see\[Dershowitz 82 and 85\] for general results and \[ Weisweber 89\]  , \ [ We is we-bet/llanen ~ hild 901 and \ [ Weisweber 92\] for an application to map piugs within machiue translation  )  . 
ID rules can be viewed as tenns and metarales can be viewed as term-rewrite rules  , because they derive one ID rule from another . A set of term-rewrite rulester ufinates if an ordering '>' on the terms of the lefthand and right hand sides  ( lhs and rhs , respectively ) of the rewrite rules can be defined . This may be a quantitative ordering , e . g . a category occuring on the lhs of a metarule is deleted on its rhs  , or a qualitative ordering , e . g . art operator precedeuce . We think that a mixture of both types of orderings is needed to prove the termination of sets of metarules  . If a qualitative and a quantitative ordering are merged  , the resulting ordering guarantees termination ( see\[Dershowi ~82 and 85\] )  . The operator precedence that is nsed in our MT system is in fact a precedence ordering on feature values occurring a trite categories of the lhs and rhs of the metarules  . 
Termination condition for metarule application For every metarulelhs : :> rhs  , Ihs > rhs . lhs > rhs ( it a daughter category occn rriug on the lhsis deleted on the rhs and/or  ( it ) an operator precedence > or . on feature values occurring at the categories of the lhs and rhs can lye defined  , which is not contradictory for the whole set of metarules and  ( iii ) every variable for ( multisets of ) categories occurring on the rhsocctws on the lhs . 
Melarnles have to fulfil the conditions ( it and ( iii ) or ( it ) attd ( iii )  . The condition ( it is a quantitative ordering and the termination of mela rules which fulfil  ( it is obvious , because very time such a meuu ' alc is applied one category is deleted aud the number of daughter categories in an ID rule is finite  . 
The condition ( it ) is a qualitative orderiug . The termination of metarules which fulfil ( it ) is not as obvious as in ( it . It means that a feature value of a category h , ' ts to be changed and there must not be another mela rule  , which reverses the change of this feature value . It allows \[ brnothaviug to delete categories , addiug categories or adding values to a list , which may be a feature value , on the rhs of a metarule , if a feature value is changed on another category  . This is the reason why we decided to impose cotttrol on the definition of metarules and not to move away frum such devices  , as recent research iuc output ational linguistics does  . If a metarul cfulfils condition ( it ) it cannot be applied for a second time iua derivation of an ID rule  , because once a feature value has been cluanged it will never be reversed and the metarule will not be applicable again  , qhis part of the termination condition simulates the tenninatiou condition of the FC  . 
~ lhecondition ( iii ) prohibits the introdnetion or doubling of variables for  ( mnltisets of ) categories on the rhs . 
Thus the termination of a certain set of metarules can be guaranteed  , iff for all metarules either the metarule deletes a category occuring on its Ihs and/or a non-con -tradicting precedence on operators  ( feature values of the categories occurring iuthe metarule  ) can be defined and all variables occurring on the rhs occur on the lhs  . 
q t ~ e application of the termination condition is demonstrated with the mela rules for Germm ~ in the next  . section . 
5 Metarules for German
Our GPSG syutax of German is based on the grammar developed in \[ Uszkoreit  87\]  . We assume a fi at structure for the verb and its complements including the subject  . Sube a tegorization of verbs is staled in ID rules of the following form:  V3   "4' V ?\[ SUBCAT ( ~ n \] , C1 . . . . . C . .
V 3 is a ~ ntential category and SUBCAT f ~ means the fixed value for the subeategorization feature in the  1D rule with n arguments , but for every sube a tegorization there is a seperate rule  . The subject of main verbs is included in the rhs of the rule  . Unlike Uszkoreit's approach we do not add the subject othe complements of a verb phrase via metarule application but reduce a sentential category to a verb phrase and delete the subject  . The following Subject Deletion Metarule fulfils the termination cott ditions  ( i ) and ( iii )  , because it deletes the category DP\[nom\] . t
Subject Deletion Metarule:
V3\[-AUXI--~V ?, W,DP nom\]
V2\[-AUX\]-~V ?, W
Additionally , the operator precedence ' BAR 3' > oP ' BAt/2' has to be defined , because the feature BAR at them other category is changed on the rhs  . This additional definition is needed in order to get a non-contradicting set of operator preeexlence definitions out of the whole set of mcta rules in the grammar  . 
" lheSlash " fermination Metarule is responsible for ending  ( or from the bottom-up view , for the introduction of ) a long distance relationship that is handled in GPSG via the category-valued feature SLASIt  . Unlike \[ Gazdar et al 85\] we do art t have a trace . Traces cause problents in fi at structures without fixed word order  , becau ~ there are multiple analyses that are only different with respect to the position of the trace  . 
SlashTermination Metarules i
V3\[-AUX \] ~. V0,W,X2
V3\[-AUX , SLASHX2\]--)V ?, W
V ~\[- AUX\]-~V ?, W,V3
V31-AUX , SLASHV3\]-). V ?, W.
Here the tenninatiot L conditions ( it and ( iii ) areal ~ fulfilled , because a category of the rhs of the ID rule is deleted  . The operator precedence definitions are ' SLASH ~ , 2 > o ~ , ' SLASHX2' and ' SLASH ~'> oP'SLASHV 9' , respectively . 
" lt~e Extraposition Metarule handles complement sentences and infinitive constructions that we treat as dislocated when they appear in the fianl position of a sentence  . Another category-vahted fature , SLASHI , is The category DP is a determiner phrase according to the X-Bar-Schema in the Government and Binding Theory  . 
' F ~' means that the feature F has the value ' ~' ( see\[Busemann/Hauenschikl 88\] and \[ Busemaan/Hauen-s child 89\]  )  . This is equivalent to file notation-\[F\]of\ [Gazdar et at  .   85\] mad means that the value for F is always undefined  , i . e . the corresponding category does not take a value for F  . " lqmvalue '7' is sw~ially treated by the unification and the feature instaariation principles  . 
AcrEsDECOLING-92, NA1 Vn: . s , 2328 not ', ~ r19921113 PROC . OFCOL1NG92, NANTES . Anti . 2328,1992 introduced for them . The feature specification-COH ( erent ) marks categories that can be extraposed . 
This metarule fulfils the termination conditions ( i ) and ( iii ) and ' SLASH1 ~'> op ' SLASH1 X\[-COH\]'has to be defined . 
Extraposition Metarule:
V3---)V ?, W,X\[-COH\]
V3\[SLASH1XI-COH\]\]~V ?, W
The metarule for passive is an example in which the termination conditions  ( ii ) and ( iii ) are necessary , because no category is deleted and an optional prepositio ~ ml phrase is introduced that replaces the accusative determiner phrase : 
Passive Metarule:
V3\[-PAS\]-~Vo,W,DP\[acc\]
V3\[+PASI-~V ?, W,(PP\[von\]).
Here the change of the feature specification of PAS at the mother category can be used for terminating melarule application and we have to define ' - PAS ' > or  , '+ PAS'3 and " DP\[acc\]>o PPP\[vonl " . 4 The Auxiliary Metarule is similar to the Passive Metarule in that feature values of some categories are changed and the termination conditions  ( ii ) and ( iii ) are fulfilled . Here it is the BAR level of the mother and V3-daughter that are lowered in analogy to to the Subject Deletion Metarule  . The operator precedence to be defined is ' BAR 3' > oe ' BAR 2'  , which already has been defined in connection with that metarule  . 
Aux Uiary Metarule:
V3\[+AUX\]--4 . V 0 , V3~VPI+AUX\]--4V ? , VPAS we have seen , the Subject Deletion , the SlashTermination and the Extraposition Metarule fulfil the criterion of deleting a category on the rhs of the  1D rule ; the Passive and the Auxiliary Metarule change feature values at the categories  . For all metarules a non-contradictory set of operator precedences can be defined and the application of the whole set of metanfies will terminate in every case  . 
Even the AdvP-metarule in section 3 proposed by \[ Uszkoreit 87\] can be treated when theme'tarules are applied directly  , because we can give a proof for its termination , which is guaranteed by the finite length of the input string in connection with direct application  . 
This is another argument for the direct application of metarales  . 
6 The parsing process
In our parser , which is a part of an experimental machine translation system  ( see\[We is weber87\] for a 3Treating passive , one has to say a word about semantics . 
We do not adopt the semantics of \[ Gazdar et al 85\] because of its shortcomings ( ee\[Urn bach87\] )  , but developed a semantic level of our own that captures file functor argument sructures  ( FAS , see\[Busemann/Hau-enschild 891 and \[ Hanan ~ hild/Umbach 88\]  ) of sentences and is derived from the syntactic struc nl revia term-rewrite rules  . Here an explicit assignment of semantic roles to complements of verbs takes place that is dependent on the subcategorization f the verb and its voice  . 
4 In this case we have to define a procedence for all feature values which are changed  . 
detailed description of file parser without direct application of metandes  )  , the metarules are defined according to the following scheme : 
Co ~ Co , W , Cd ~ C6 ~ C ~ , W,(C ~)
Co , Cc and Cdarc categories and W is a variable for a  ( possibly empty ) multiset of categories . The categories C6 and C~correspond to Co and Co , respectively , in terms of Gazdaretat .  85\] . The category C~can be viewed as a condition category for the application of the metarule  . Cd is the category which is to be deleted or modified  . This is indicated by the brackets arround C ~ , If Cd is to be deleted , C , ~ is left out on the rhs of the metarule . If Cd is to be modified , Cd is replaced by C,~ . 
The feature values of the categories are cospecified on the lhs and rhs of a metarule  , if not specified otherwise . 
This causes the values to be carried over to the rhs  . If the metarule should only be applied to lexical ID rules as proposed in \[ Gazdareta !  .  85\] , the category Cc has to be I he lexical head with respect to Co  . 
The proof for the termination of . sets of such metarules is simple . At first we look at the case in which C~is deleted  , then the termination condition ( i ) holds . 
The second case is that the category CA is replaced by the category C  , ~ and the number of categories in ot reduced . Now the termination condition ( ii ) has to be applied and at least one feature value of the categories Co  , C  ~ , ~ UmW has to be changed , which must not be reversed by another metarule . 
The termination condition ( iii ) holds in every case , because the variable W occurs on both sides of the metarule  . 
In order to apply the metarules directly during the parsing process  , all the categories of an ID rule , which are matched by the multiset C ~ , , , t . -) mW , have to be collected by the parser . This is done for example by the Completer of the modified Earley algorithut  ( see\[Earley 70\] , \[Shieber84\] , \ [ Kilbury 84\] and\[IMirre/Momma85\]) . Suppose the Completer tries to complete with the in active edge  ( C  ~ , i , j , T ' , ~) , which is spanning li'om node i to node j of the chart  , where ~' is a multiset of daughter categories which have already been analysed and the remainder  , i . e . the tnultiset of daughter categories still to be analysed  , is empty and C , ~ is the mother category of the ID rule , which is licensing this edge . M is the ~ t of metarules . 
If ( Co , h,j,(x . \[~) is an inactived ge and ~ Cc , W , C , ~ :=: , C ; ~ ~ C ~ , W ) ~ M and \[ Cd ~ and fee(~t . .Jm 1~ then the Completer introduces a new inactive edge  ( C ; ~ , h , j , ( Z'm ) and computes its closure . The category C ~ in O~t . .3~ ~ is replaced by C~ . 
If ( Co , h , i , ? z-13) is an inactivedge and ( C0~C ~ , W , Cd::~C6~C'o , W , C , ~) ~ M and
C~c ~ L)m ~ and
CdED and
C ~ is consistent to the categories in ~/ C , lm with respect to linear precedence then the Completer introduces a new edge  ( C6 , h , j . 0 ? u , , , ( C~~-~/C , jm ) and the category C ~ in O~t . J ~13 is replaced by C ~ . If the remainder\[~/Cd , , =   m then the closure of this edge has to be computed  . 
The advantage of direct parsing with melarules is an increase of efficiency  , because all the inactive edges which are licensed by ID rules in droduced by metarules need not to be stored seperately and the number of inactive edges generated by the Earley parer is reduced considerably  . 
ACRESDI~COL1NG-92, NAN'IX . S , 2328 Ao(rr 19921114I'ROC . Ol : COLING-92, NANTES , AUG .  2328 ,   1992 Another interesting approach to direct parsing with metamles  , in which the metarules are treated as special kinds of contextfree roles  , is presented in \[ Kay 83\] . 
7 Conclusion
Metarules are an interesting device to expressome important generalizations on phrase structure rules of a uatural language granlmar  . If they are used in preprocessing to compile a huge set of rules out of a small set of basic ones  , file parsing process may become very inefficient , because it has to care for the set of basic rules and additionally for the rules which have been derived from them and are very similar to the basic ones  . When metarules are applied directly during the parsing process  , only the set of basic rules in connection with them ct a rules have to be considered by the parser  . This reduces the set of intermediate ~ fiutions ( in activedges ) to be stored considerably . 
lu order to apply mE tarul cs directly , it has to be guaranteed that the given set of meturules will temlinate if all metarules fulfil the tcrraination criterion in section  4  . We gavctile termination proof for the metarules of our German grammar in secd on  5  . We think that with file help of this criterion the termination of every relevant set of io ela rules can be proven  , because a metarule is defined to change something in an ID rule  , either to delete a category , to modify Sonic feature values , to add a category or to do a combination of all . With the termination criterion it is possible to construct a device which automatically proves the -termination of a given set of metarules  . This algorithm computes the set of operator precedences from the feature values which are changed on the categories of a metarule  . 
To enable the parser to process metarules like Uszko-reit'stor AdvPs in section  3  , which add categories to basic ID rules and for which the termination can be proven  , will be suhject to future work . 
8 References\[Barton et al87\]: G . ~lward Barton , Robert C . 
Berwick and Eric Sven Ristad : " Computational Complexity and Natural Language "  , MIT Press , Cambridge ( Massachusetts ) , London ~ ngl and ) 1987\[Basemann/Hauenschild88\]:S . Busemann , Ch . 
Hauense hild : " A Constructive View of GPSG or How to Make it Work "  , in : Prcxzs . of Coling 88, Budapest 1988, pp . 7782\[Basemann/Hauen~hild89\]:S . Busemann , Ch . 
Hauenschild : " From FAS Representudons to GPSG Structures "  , in : S . Busemann , Ch . Hauenschild and C . 
Ombach ( eds . ): " Views of the Syntax/Semantics Interface " , in : Precs . of the Workshop " GPSG mid Semantics " , KIT-Report 74 , Technical University of
Berlin 1989, pp . 17-43\[Dershowitz82\]:N . Dershowitz : " Orderings for Term-RE writing Systems "  , Thcorelical Computer Science 17 (1982) , North-Holland , pp . 279-301\[Dershowitz85\]:N . Dershowi ~: " Termination ", in : G . Goos , J . Hartmanis ( eds . ): " Rewriting Techniques and Applications " , LNCS 202 , Dijon , France 1985 , pp . 
180-224\[Drrre/Momma85\]:J . D0rfe , S . Momma : " Mtxlifikation endes Earley-Algorithmus undihre Verw endnngffir ID/LP-Grammatiken "  , Mmarscript of the Institute for Computational Language Proce  , ssing ( IMS ) atate University of Stuttgart 1985 IEarley 70\]: J . Earley : " An Efficient ContextFree Parsing Algorithm "  , Communications of the ACM 13(2) 1970 , pp . 94-102\[Gazdar et al85\]:G . G ~ dar , E . Klein , G . Pullum and I . Sag : " Generalized Phrase Structure Grammar ",
Oxford , Blackwell 1985\[Hauenschild/Umbach88\]:Ch . tlauenschild , C . 
Umbach : " Funktor-Argument-Struktur , Die~tz semantische Rpraseutatious-und Transfere beneim Projekt KIT-FAST "  , iu : J . Schlitz ( ed . ) : " Workshop Semantiktrod Transfer " , EUROTRA-D Working Papers No . 6, Saarbr ~ icken 1988, pp . 1635 IJacob ~ u 871: P . Ja cobson : Review of \[ Gazdar et al 85\] , in : Linguistics and Philosophy 10 ,  1987 , pp . 
389-426\[Kay83\]:M . Kay : " When Meta-rules are not Meta-rules " , in : K . SparckJones . Y . Wilks ( eds . ) : " Auto-matte Natural Language l ' arsing " , Ellis Horwood Limite . d , West Sussex , England 1983, pp . 94-117\[Kilbury84\]:J . Kilbury : " Earley-basierte Algorithmen fiir direktes Parsenmit ID/LP-Grummatiken "  , KIT-Report 16 , Technical University of Berlin 1984 \[Kilhury 86\]: J . Kilbury : " Category Coocurrenee Restrictions and the Elimination of Metarules "  , in : Procs . of Coling 86, Bonn 1986, pp . 5055\[Shieber84\]:S . M . Shieber : " Direct Parsing of ID/LP Grammars " , Linguistics aod Philomphy 71984 , pp . 
135-154\[Thomt ) son8 21:H . Thompson : " Handling Mela rules in a Parer for GPSG "  , I ) . A . I . Research Paper No .  175,
University of Edinburgh\[Umbach87\]:C . Umbach : " Zur semantischen Interpretation in der T be orieder GPSG "  , KIT-lAB 19 , 
Technical University of Berlin 1987.
\[Uszkoreit87\]:H . Uszkoreit : " Word Order mid Constituent Structure in German "  , CSLI Lecture Notes
Nmnber 8 , Stanlord University 1987\[Weisweber87\]:W . We is weber : " E in Domin mlz-Chart Parser fiir generali sierte Phrasenstruktnr grammatiken "  , KIT-Report 45 , Technical University of Berlin 1987 \[ Weisweber 89\]: W . We is weber : " Transfer in Machine Translation by Non-Confluent Term-Rewrite Systems "  , in : Procs . of the 13th German Workshop on Artificial Intelligence ( GWAI-89 )  , Eringerfeld , September 1989 , pp . 264-269\[Wc is weber/Hauenschild 90\]: W . Weisweber , Ch . 
tlauens child : " A model of Multi-Level Transfer for Machine Translation and Its Partial Realization "  , KIT-Report 77 , Technical University of Berlin 1990 and to appear in : Procs . of the Seminar " Computers &
Translation '89" , Tiflis1989\[Weisweber92\]:W . We is we bev . " Term-Rewriting as a Basis for a Uniform Architecture in Machine Translation "  , in : Procs . of Coling 92, Nantes 1992 A clv:s DECOLING . 92 . NAIC rES , 2328 hot'rr 19921!15t'Jtoc: . O1: COLING-92, NANTEs , AUO .  2328 .  1992
