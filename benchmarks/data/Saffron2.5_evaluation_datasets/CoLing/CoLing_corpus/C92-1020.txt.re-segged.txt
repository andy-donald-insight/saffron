On the Satisfiability of Complex Constraints
Luis Damas
Universidade do Porto , Ruado Campo Alegre 823 , 4000 Porto , Portugal
Giovanni B . Varile
CEC , 2920 Luxembourg , Luxembourg
Abstract
The main problem arising from the use of complex constraints in Computational Linguists is due to the NP-hardness of checking whether a given set of constraints is a tisfiable and  , in the affirmative case , of generating the set of minimal models which satisfy the constraints  . In this " paper we show how the CLG approach to rewriting constraints while constructing a partial model can greatly reduce the size of the original constraints and thus contribute to reduce the computational problem  . 
1 Introduction
Most of the more recent formalisms in Computational Linguistics involve complex constraints  , i . e . involving either disjunction or and negation of equality constraints\[  Kay85  , KB 82 , 

From a practical point of view , the main problem arising from the introduction of complex constraints is due to the NP-hardness of checking whether a given set of constraints is satisfiable and  , in the affirmative case , of generating tile set of minimal models which satisfy thcconstraints  . 
Since the NP-hardness of the problem tends to manifest in practical applications in adra ~ matic way there were several proposals of algorithms to minimize this problem \[  Kas87  , ED 88 , 

However , in our opinion , any practical approach to the problem should rely on applying an exponential satisfaction algorithm asseldom as possible and also  , when that cannot be avoided , to reduce as much as possible the size of tile input formulae to which the algorithm is applied  . 
A classical way in which one can reduce the size of input formulae is by factoring  , i . e . expressing it as a conjunction of smaller formulae which do not have variables in common  . As a matter of fact if instead of checking the satisfiability of a formula of length nk we check the satisfiability of n formulae of size k we are gaining an exponential reduction in time  . This strategy is also explored in \[ MK 91\] . 
Another way of reducing the size of input formulae which has been used in CLG implementations \ [  DV89  , BDM Vg 0 , DMV glb\] , and which can be combined with the previous approaches  , is to build a partial model of the input formula and to apply the algorithm to the remaining constraints  . Since in many cases this is able to do away with all the constraints this also achieves the goal of using the exponential satisfaction algorithm asseldom as possible  . This method can also be seen as a generalization of steps  1 and 2 of the algorithm described in \[ Kas87\]  , while avoiding some of its pitfalls . 
In this paper we start by showing , by translating to the feature logics context he methods for first order terms introduced in \[  DMV91a   , DMV 91b\] , how the CLG approach to rewriting constraints while constructing a partial model can greatly reduce the size of the original constraints and thus contribute to reduce the corn-putational problem  . 
After that will review the notion of factorization for feature logic formulae showing under which conditions it can be done  . 
2 An example
From an intuitive point of view , our approach attempts to explore the fact that complex constraints arising from combining descriptions of linguistic objects  , tend to take the form of a large conjunction of smaller constraints  . 
To illnstrate this approach we will use the following example from \[  MK91\] originated by conjoining the agreement features of the lexi-AcrEsDE  COLING-92  . NANTES , 2328 AOr 3T199210 gPROC . OFCOLING-92, NANTES . AUG .  2328 , 1992 eal information for tim German words die and

\[(feas ~) = , ~ omv ( /ease ) = acc\]^\[\[ ( fgend ) = fernA ( f num ) = sg\]V ( fsum ) = pt\]^ ( faend ) = mase ^ ( fpers )  = 3 ^ \[\[ ( f num ) = sg ^ ( lease ) ? gen\]V\[ ( f num ) = pl ^ ( f case ) ? dat\]\] ( 1 ) By looking at the top equality conjuncts in as it will be slmwn in the next section  , is equivalent to the satisfiability of (1) . However we should point out that the above process  , wt fieh takes at most quadratic time since , by using adequate data structures , each rewrite can be done in linear time and the number of rewrites is limited by the size of the for nmla  , has succeed in drastically reducing the size of the original formula  . 
3 A rewriting system ( 1 ) we can conclude that any model of ( 1 ) is In this section we iutrodue e are writing system  , subsumed by which is essentially an adaptation to feature gend = mase\]f = iv  .   .   .   . aj ( '~ ) Using this information and the standard axioms of Feature Logics we can rewrite  ( 1 ) as follows\[ ( f case ) = nor a V ( fease ) = ace\]A\[\[falseA ( f num ) = sg\]V ( f n ~ , n ) : pl\]^trueAtrueA\[\[(f .   .   .   . ) = sgA(f .   .   .   . ) 7kBen\]V\[(f , , ur . ) = plA(f e ~ s e )? , tall \] ( a ) which , by using the standard rules of Propositional Calculus  , can be simplified to \[ ( f case ) = noru V ( lease ) = ace\]A ( fsum ) = pl^\[\[ ( f . um ) = sg^(fease)?ge . \] V\[(fnun , ) = plm(fease ) ? datl\](4) Again , froin the atomic top conjunct in ( 4 ) we can refine ( 2 ) to obtain\[gend=mase\]f=/p ~ ,   . s--3/(5)
Inure=pt Jafter which ( 4 ) reduces to \[ ( : case ) = sort , V ( f ease) .   .   .   .   .  \] ^  ( fease )  #ant ( 6 ) Since 11o atomic top conjunct remains we would now have to resort to the exponent iM algorithm to cheek the satisfiability of  ( 6 )  , which , structures of the one presented in \[ DMV91a \] for constraints Oil first order terms . 
The purpose of this rewriting system is to for -nlalize the rewriting process illustrated in thc previous section  . The rules of the rewriting system , whidt are justified by theorems of the logic underlying feature structures  , have been dcsign cd with the aim of bringing out conjunctions to the top while avoiding more than a linear growth of the size of constraints  . 
T c ~ formalize the rewriting system we will use Feature Logics\[  Smo89\] and its notation . Thus we will use a and b to denote atoms , f to denote a feature name , x and y to denote variables and and t to denote either an atomora variable  . 
We start by recalling the notion of solved feature clause of \[  Smo89\] which is the feature logic w ~ rsion of the standarde finition of solved form \[  lier30  , Mah 88\] . 
A set of formulae C is said to be a solved feature clause if it satisfies the following conditions :   1  . every constraint in 6' has one of the following forms : fx-s , fx\[ , x = s , x~s2 . if x :- s is in C then x occurs exactly once in
C3 . iff x-s and fx-t are in C then s = t 4 . iff xI is in C , then C contains no constraint fx-s5 . if x~s is in C , then x?s . 
Smolk a a \] so shows that any satisfiable set C of , possibly negated , atomic formulae can be reduced to solved form by using the following simplification rules  , which again are the feature logic version of l lerbrand's rules for solving sets of equations of first order terms : AcrEsDE  COL1NG-92  , NANTES , 2328 Aotrr 1992109 PROC . OFCOLING-92 . NANTES , AUG .  2328, 1992 1 . x--s)LIC ---* x"-sU\[s/x\]Ci f?~k .   .   .   . Ixoccurs in C2, a--'=uc-,='----aUC3 . fx--s,fx--tUC---*fx--s,s--fUC4 . s-suC ~ C5 . SaTuC ~ C7 . at buC -* C if ut b . 
We call a solved feature clause positive iff it includes only constraints of the form fx-s and x-s  . 
We can now make precise the notion of partial model used in the previousection as a positive solved feature clause  . ?4 . 
Note that the form required for A~is essentially the one produced by an unification algorithm for feature structures  . 
Given a set of constraints C we say that a feature clause C ~ is a minimal model of C if every model of Cr is a model of C and no proper subset of C ~ satisfies this condition  . 
From Theorem 5 . 6 of \[ Smo89\] we can conclude that for any C there is a finite uumber of minimal models of C  . 
" \]2he aim of the CLG rewriting system is to produce from a set of constraints Coa partial model  . ? 4 and a smaller set of constraints C such that any minimal model of Co can be obtained by conjoining  ( i . e . " unifying ") a minimal model of C with . ~ and moreover for any minimal model of C the reunion AdUC is satisfiable  . 
We start by defining a set of rewriting rules ~ for terms and constraints : z-*~t if x =' tE  34 bx---+~x-b fa-t--~false fxT ~ Mfalse if fx-IC  3d a--b---*~falset-t ~ ~ ruefx-s~t-sif fx-IE  34 ~ true --*~4 false ~ false ~ true ~ C~C ~ ( CvC ' )  ~  . ~ ~ CA ~ C'
CA true -* ~ C
CA false -.2 ~ false
CV true - - - + A ~ true
CV false-.~,~C
We now define a rewriting system for pairs (34 , 17 ) by first closing C under ---* s~4 and then using the following rules ( M , cu false ) - ~( rut , e , ~)( M , Cutrue )) ~ (34 , C ) (34 , cu~-s ) ~ (34 v~-s , C ) (34 , cu/z-t)--(34 ufz-'-t , c ) with the convention that after each application of one of the rewrite rules the new partial model is reduced to solved tbrm and the resulting set of constraints i closed nmler ~ M  . 
As in \[ DMV91a \] the rewrite process could be extended to use negated atomic constraints in 

We will now sketch the proof of the claims made above about the rc writing system  . 
We will first argue that if given an initial set of constraints Cowe apply the rewriting system to  ( ~ , Co ) to obtain 34 , Cthen Co ( . . . . . . . precisely the conjunct of all the constraints in Co  ) is equivalent to 3 . 4 UC . As a matter of fact this follows from the fact that each rewrite rule is associated with a similar meta-theorem of l:irstOr der Logic and/or the axioms of Feature Log-its  . 
As for the other property of the rewriting system , namely that the minimal models of Co are obtained by conjoining NI with those of C  , we will only sketch the argument of the proof which follows from the fact that if some minimal model C ' of C was inconsistent witl ~  . M then , after reducing C to disjunctive form , at least one of the disjunctions muld subsume C ~ and thus should be inconsistent with  A4 while admiring itself a model . Now , since every atomic formula occurring ill the disjunction already occurcd in C it is possible to derive a contradiction with the hypothesis that C was closed under -- ~ M  . 
To see this we notice that each disjunct in the disjunctive form of C can be regarded as feature clause C '  . Now if A4 UC " was unsatisfiable then some sequence of simplification rules should lead to a clash  . Now , noticing that any atomic formula in C"umst already be present in C  , it is easy to check that any sequence of simplification rules would involve only for nm-lae from C " and a clash with a formula in  f14 would thus be impossible . 
4 On the fac tor i za t ion o f feature const ra in ts Although tile rewriting system introduced in tile previous section can be seen as a factorization of tile original constraint it is also important  , in accordance with tile discussion in the introduction  , to further factorizing tile con-Acres DE COLING-92  , NANTES , 2328 hOt~T1992110 PgOC . OFCOLING-92, NawrEs , Auo .  2328 ,   1992 straint produced before an exponential satisfaction algorithm is a pi  ) licd . 
Now given a conjunction CAC'of feature constraints it is easy to provc  , using argum cnts similar to the ones used in th c previuu section  , that a sufficient condition for tim conjunction to be satisliablciff each of the conjunets is independently satisfiable  , can be expressed ms follows : 1 . any variable x which occurs in C in an atolnic formula x--sors--a : does not occur in C ' and vlce-versa  2  . for every variable x and feature f such that fx occurs in C  , / x doesnnt occur in C ' and vice versa . 
Note that given a conjunctiw ~ wet of constraints it is possible to l  ) artition it into miidmal disjoint sets satisfying the  . conditions above in quadratic time . 
Using the above criteria results in achievillg the objective described in \[  MK91\] of separating not only the treatment of constraints dealing with completely in del  ) end cnt linguistic descriptions but also of independent phenomena for the same the\[ iaguistic descriptions  . 
5 Conclusions\[DMV 91b\]\[DVSg\]\[El ) aS\]\[ oaw86\] Tim strategy for handling complex constraints described in this paper has I  ) een successfully put to use in ditl~rent CLG implementations  . 
One of the adwm tag cs of using a rewrite sys-\[ I\[cr30\] tcm is that it is easily extended to other atomic constraints like the ones in CLG  ( 2 ) dealing with lists . Similarly it can bcadapted to cope with the extensions to feature constraints proposed \[  Job91\] in\[ Joh9i\]  . 
References\[Kas87\]\[BDMV 9O\]Sergio Balari , Luis Damas , Nehna
Moreira , and Giovanni I1. Varile.
CLG : Constraint logic grammars.
Inll . Karlgrcn , editor , P~vceediugs of the 13th htternutional Confer-cuce on Computa ~ ioual Linguistics\[  Kay85\]   ( COLING )  , volume 3 , pages 712 , llels in ki ,  1990 . 
\[ DMV 91a \] Luisl ) amas , Nelma Moreira , and
Giovanni B . Varilc . The forlnal and processing models of CLG . In Fiifth
Coufereucc of the Emopea a Chap = ter of the Association for Computational Linguistics  , pages 173-178 , 
Berlin , 1991.
Luis Damns , Nelma Moreira , and
Giovamd B . Varile . CLG-a general logic grammar formalism , ht Pro-ceediugs of the Workshop on Con-straiut Propagation and Linguistic 
Description , forthcoming , Iugano,
Switzcrlan(l , 1991.
Luisl ) ama , s and Giovanni B . Var-tie . CLG : A grammar formalism based oll constraint resolution  . 
In l '; . M . Morgado and J . P . Martitm , editors , EPIA89, volume 390 of
Lecture Notes in Artificial Intelligence , pages 175-186 . Springer Verlag , 1989 . 
A . Eisete and J . D 6 r r e . Unification of disjunctive feature descriptions . 
In ~6th Annual Meeting of the Association \[ or Computational Linguistics  , Buffalo , New York ,  1988 . 
Barbara Grosz , Karen Sparck
Jones , and Bomty \], ynn Webber , editors . Readings in Natural Language Processing . Morgan Ka/ff-mann , 1986 . 
Jacquesllerbrand . Recherches surlatheovie deladgmoustration , 7' h~sedeDoctorat . Univ . Paris,
Paris , 1930.
Mark Johnson . Features and formulae . Computational Linguistics , 17(2), 1991 . 
ILT . Kasper . A unification metbod for disjm~etive t ; eature deseril ) tions . 
In 25th Annual Meeting of the Association for Computational Linguistics  , Stanford , CA ,  1987 . 
Martin Kay . l > arsing in fimc-tional unification grammar . Inl ) avid It . Dowty , I , auri Karttunen , and Arnold M . Zwicky , editors,
Natural Language Parsing . Ellisllor wood/Wiley , 1985 . also appears in \[ GJW86\] . 
AcrEsDECOL 1NG-92 , NANTES , 2328 AOI ~' I'1992111 PROC . OFCOLING-92 . NANTI':S . AUG .  2328 .   1992  \[  KB82\]  \[  Mah88\]  \[  MK91\]  \[  P887\]  \[  Smo89\] 
R . Kaplan and J . Bresban . Lexical functional grammar : A formal system for grammatical representation  . In Joan Bresnan , editor , The Mental Representation of
Grammatical Relations . MIT Press , 1982.
Michael J . Mailer . Complete a . x-iomatizations of the algebras of finite , rational and in finite trees . 
Technical report , IBM Thomas J.
Watson Research Center , P . O . Box 704, York towntleights , NY 10598,
U.S . A ., 1988.
John T . Maxwell and Ronald M.
Kaplan . A method for disjunctive constraint satisfaction . In Masaru
Tomita , editor , Current Issues in
Parsing Technology . Kluwer Academic Publishers , 1991 . 
Carl Pollard and Ivan Sag . \[ n-formation Based Syntax : and Semantics , Volume 1 , Fundamentals , volume 13 . Center for the Study of Language and Information Stanford  ,  1987 . 

Smolka . Feature constraint logics for unification grammars  . Technical report , IBM Wissensch a fliches Zen-trum , Institut fiir Wissens basierte
Systeme , 1989. IWBS Report 93.
AcrEsDECOLING-92 , NANTES , 2328 AO't ~ T1992112 PROC . OFCOLING-92, NANTES , AUO .  2328, 1992
