Knowledge Representation and Semantics in a Complex Domain: 
The UNIX Natural Language Help System GOETHE
Gerhard Heyer , Ralf Kese , Frank Oenfig , Friedrich Dudda
OLIVETTID.O.R.-TARESEARCHLAB
TATRIUM PH-ADLERAG
Fiirther str . 21.2
8500 Nuremberg ( West Germany)
1 Abstract
Natural language help systems for complex domains requirc  , in our view , an integration of semantic representation and knowledge base in order to adequately and efficiently deal with cognitively misconceived user in-  . 
put . We present such an integration by way of the notiml of a frame-semae ~ tics that has been implemented for the purposes of a natural anguage help system for UNIX  . 
2 Introduction
It is commonly agreedihat natural language systems fox " semantically rich domains require a level of sema~tic representation i order to provide for a sufficiently deep processing of the natural language input  . 
The level of semantic representation is sometimes called a representation of lingu-istic knowledge  . In addition , a natural language help system also requires alo ~ owledge base of the application domain in order to answer the requests for domain specific help  . The level of knowledge representation is sometimes called a representation of world knowledge  . Most present day natural language processings y , ' stems , including , amongst others , SRI's CoreI_ , anguage Engine ( Alshawi et . al . 1986), ESPRITI project ACORD ( Bezet . al .  1990) , and the UNIX natural language help systems UNIX -Consultant  ( Wilensky et . al . 1988), SINIX-Consultant ( Wahlster et . al . 1988), and AQUA ( Ouilici et . al .  1986) , keep the two levels of representation distinct . In addition , there usually is no feedback of information between the semantic representation and the knowledge base  . Thus , parsing is supposed to result in a complete semantic representation of the user input which then is passed on totilt knowledge base manager for further processing  . This kind of architecture follows a strategy , that can be called stepwise processing . We claim that for complex domains this kind of approach is inadequate because it ig  , mrcs the user's cognitive misconceptions about the particular application  . Instead , we wish to argue that at least with respect to semantics and knowledge representation in atural language help systems anh ~ tegmted approach should be preferred  , in the approach we advocate , semantics and knowledge representation interact to correct  ( or complete ) a possibly incorrect ( or incomplete ) semantic representation . The mechanism by which this is achieved is based on the notion of a fi'ame-sem and cs  ( cf . Heyer et . al . 1988, tlausser 1989) . We demonstrate our " integrated approach with examples from GOETHE  , a natural language help system for UNIX as a complex domain  . 
GOETHE ( cf . Kese/Oe mig 1 . 989 ) has been developed together with OLIVETTIAI Center  , Ivrea , and Tecsicl AILab , Rome , for
UNIXV on the OLIVETTILSX 30xx Compu-ter Series . The present prototype includes a protocol for monitoring user's actions and has the natural language mode of interaction fully integrated into a graphical 
Desk Top under Inter Views ( based olla cooperation with Fraunho fer Society , Stuttgart ) , thus allowing also fordeictic natural language and graphical interactions  . 
It covers all of UNIX'file handling , containing a static knowledge base of more than 70 UNIX programs . It is written in
Quintus-PROLOG and C , and takes by average less than 10 seconds for generating an answer to a user's request  . 
3 61   3 Requirements on Knowledge Representation and Semantics for a 
UNiX natural language help system
It is the task of the knowledge base in a UNIX natural language help system to serve as a baals for correctly and adequately answering a user's questions in one of the following situations :  ( 1 ) the user needs to know a UNIX cormn and , or series of commands in order to carry out a certain i : ask  ,   ( 2 ) hch assent off a IJNIX command and the system has resulted in a different  . qa\[e ! banhe expected , or (3) he wants to gc . tirff crmalion about a UNIX command . Ing, . mcr ~ fl , ! hi:;' , , , ' ill require two knowledge ~ , : ) urces : 5' laEcknowledge about UNIX as a co\]!c ; c tion of possible , man-machine interactions , and dynamic knowledge about the respc'cl . i- , eUNIXst:ate(in particular , i-node ~ a ~ d the associated files with their permissions  )  , the u . -, ~: t . . . . . sactions , and the i '"' . . . . . . " r~:actions ( in particular , error ': ~ l . , ~ ill , ~ messages ) , it is the task of the semantic representation to provide  , t . . ,'~ c knowledge base manager wi:\[t a corrc . ct and adequate semantic representation of \[ he user's input Si\[ll\[ff\[Ion  )   ( in-~spccii!ic : '' There basically are two strat ? oies  . .:,  . available at this point . 
() q ~ . he (: rena ~ . : d , adhering to the idea that c~-occur ~ en : e . . . ,,~,  . . ns va,so for missing : . cu-, . : t , gq , . : . cc2 d to be treated as real res ! ricio ~ u ,, p . , ; :- ibly even as syntactic : c . <tric:ions(('homsky ! 965) , we can insist that ; :' there is a semantic representation ~> fan input sentence at all  , it will be COITCC lzl~clc'ot ? , \])IU . e ~- :' O . ,  . ~ respect to the domain e , f . q ) p ! ication ) . He . nee , the system will "' tat ! ~ X ) provide ~\[ I1 ; & nswer to a user's\[tildez ,  . her CqtlCSt~t .   .   .   . D ~ rases his question in a correct and comp ! ctc way  . On the other hand , cooccurrence restrictions may not be ~ ak6'n as ; real restrictions but rather as scnzezmic d@z , /ts which may be over-written by additional knowledge base itf formatic  . , n . Fhis allows for a much more use > friendly and cooperative natural language processing  , but requires that these : nanticre ' presentation is closely tied to  ) -' d' . e know edge base . 
For the purpost : sel ! the GOETHE system , we have opted for the second alternative , because the cognitive misconceptions a user may have about UNIX not only cause him to invoke the help system  , but also cause him in most cases to phrase his questions  ~1 the way he does : If the system is presented with a semantically incorrect question  , this is to be taken as an indication , that the user needs help , and a reminder that he better rephrase his question in a correct way will not be of much use to him  . Of course , it would have also been possible to relaxtile syntactic cooccurrence restrictions  . In effect , however , this would have resulted in a duplication of knowledge base information in the lexicon  . The second alternative , therefore , not only appears to be the more adequate , but also the more efficient solution . 
4 Frame Semantics
Output of the parser in GOETHE is a possibly incorrect  , or incomplete , semantic representation where the meaning of tile individual-and predicate-constants of tile logical representation are represented as frame -theoreticicons  ( Hcyer et . al .  :19881) . 
We call this kind of semantic representation flame -semantics  , or database-semantics ( Hausser 1989) . Taking the frame representation of UN\[X ( including attached proce-dares and , additionally , the protocolled history ) as the context-model relative to which a user's input is interpreted  , this flame-semantics allows for a simple and efficient processing of a semantic representation for correction  , completion , or the retrieval of the requested information via the knowledge base manager  . As an illustration , consider the following examples : 1 ) " How can I edit a text named'test "?"\[ q word ( how )  , \[ action ( edit) , line ( file ) , attr(name , test )\]\]\] sorted by date ! "\[ qword(why-not) , \[ action ( show) , \[ so ( directory) , attr(narne , test dir )\] , \[mo ( file ) , quant(all )\] , attr(name , _) , app(descending , attr(date , _ ) )\]\]  ( Note that " list directory "=" show all files " ; " so "= source object , " too "= main object , " attr "= attribute) . 
Why : search for afl ' a mere presenting a program in the history and compare the used commands with the intended goal with respect o identities Why -not : search for a flame representing a program in the history and compare the used commands with the intended goal with respect to differences  . 

In these lists ( which might equally be represented as trees )  , each argument points to a frame in the UNIX knowledge base  . 
Semantic processing then basically consists of successively unifying each of these frames  ( where the predicates are slots in the frame referred to by the respective mother-node  )  . 
In case the unification of a set of frames fails , GOET ttEtries a number of heuristics to act fieve unification  , including : Identifi-catior ,  .   ( identifying the referents of proper names as denoting a file  , a directory , a
UNIX command , a nowner , or a group ) , generalisation ( taking . : he frame-generali-sation of the ( first ) action node as a candidate for unification )  , and precondition-checlc ( checking whether existence of a file , ownership , and read- , write- , execution-rights are fulfilled a :; required ) . 
Once a set of frames is consistent , retri ~: ving the answer to a request is stirred by the frames for How  , Why , and Why-not , always appearing on the toplevel node of the ' ~ emantic representation  . These frames can be understood as representing strategies for searching the knowledge base as follows : ltow:Search for a frame with a goal component containing a special command entry Alshawi et  . al .  1986 , " Feasibility Study for a Research Prograrmne in Natural-language Procesosing "  , SRI International , 
Cambridge , \]986.
Bezet . at . 1990, " Construction and
Interrogation of Knowledge-Bases using
Natural Language Text and Graphics :
ESPRIT Project 393, ACORD . Final Report ",
Springer Verlag , 1990 ( in print).
Chomsky 1965 , " Aspects of the Theory of Syntax " , M . I . T . Press , 1965 . 
Hausser 1989 , " Computation of Language " , Springer Verlag ,  1989 . 
Heyer et . al . 1988, " Specification of the
KB-Manager : A Frame-Extension of DRSs for Supporting Conceptual Reasoning "  , ACORD Project , Deliverable T5 . 4, 1988 . 
Ralf Kese , Frank Oenfig 1989, " GOETHE :
Eink on text sensitives Beratungs system fiJ r
UNIX ", LDV-Forum , Vol . 6, 1989.
A . E . Quilici , M . G . Dyer , M . Flowers ,  1986 , " AQUA : An intelligent UNIXAdvisor " , Proceedings of the 7th European Conference on Artificial Intelligence ( ECAI )  ,  1986 , 

W . Wah ! ster , M . Hecking , C . Kemke ,  1988 , " SC : Ein in intelligentes Hilfe system far SINIX " , in : Gollan , Paul , Schmitt ( eds . ):' In-novative Informations infrastrukturen ",
Informatik-Fachberichte Nr . 184, 1988.
R . Wilensky , D . Chin , M . Luria , J . Martin,
J . Mayfield , D . Wu : " The Berkeley UNIX
Consultant Project " , Computational Linguistics , Vo 1 . 14, No . 4, 1988 . 

