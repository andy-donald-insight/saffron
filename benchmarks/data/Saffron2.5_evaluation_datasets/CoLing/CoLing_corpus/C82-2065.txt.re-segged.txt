LESK:ALANGUAGE SYNT ~ TIZING NATURALL ANGUAGE , COMPUTER
LANG UAGE AND LOGIC
Douglas Skuce
Dept . of Computer Science , University of Ottawa , Ottawa , 
Ontario , Canada
Introduction
LESK ( Language for Exactly 3 tatl ~ Knowledge ) is intend-ed to bridge the considerable gap between natural language  ( I ~ L )  , computer lan6uage(CL ) and log~tc . It is desirable to do so for the follow ing reason  . To implement any non-trivial computer system for some problem domain  , one must first have a very clear understand ing of the domain concepts  . Usually the implementors do not have this knowledge  , and must struggle to obtain it from the domain experts  , who are usually not comput-er experts . Hence a means of precise and efficient knowledge expression would be very useful  . No such tool exists today and we therefore seek to develop one  . LESK is a first approx-imation to such a medium for knowledge capture  . 
Anyone who has participated in the design of any system where knowledge transfer from exper ts was involved will appre-~cl are the need for such a tool  . The existlng tools are the following : ~ L , mathematical concepts and notation , computer concepts and notation , plus as sorted devices llked ls 4~ams , plctures , models , etc . By farthema jortool is NL however , which is unfortunately very poorly used by most paople  , part-icularly recent university @ ~ aduates . The most frequentez Tors include the use of undefined term lno lo@~  , synonyms or homon ~ ns ( whose status as such must be guessed )  , unclear syntax , logical-262-errors ( such as outright contradictions )   , undefined relations between concepts , and s?mp ~ elack of good organization ? LESK fo rces the user to express him/her selfiziways designed to minimize such errors  . ATRSK system ( an interactive program wh?ch " understands " LESK  ) would further reduce such error so
Criteria for LESK
LESK should a ) be readable by most university graduates in science  , medicine , law or business , forezmn pleb ) be writable by most people with a basic knowledge of set theory  , logic end computers ' ; o ) have a simple semantics expressible in fir st-order logic ~ d  ) belmplementable using artificial intel ligence techniques ! e  ) be sufficiently general to be usable in the subjects of interest to those listed in a  )   . 
The present design of LESK has been shown to meet all of these criteria  . 
~ asi~n of~sK
LESK should be viewed as a language for making assert-ions about sets  , tuples , sequences , functions , relations , procedures and others ~ nple mathematical concepts using an Enslish-like syntax  ( many other NLs could be used ! translat-i on of LESK-based knowledge should be easier than translation of NL  )  . The user declares words or phrases either exp licitly or ~ nplioitly to be nouns  ( or noun-like )   , adjectives , pre-positions , or verbs ( other categories have not been necess-ary )   . Nouns and noun phrases denote sets , stative verbs denote relations , action verbs denote procedures , and preposit-ions denote case relations . The syntax is a compromise bet-ween b-L , CT , and logo . All constructs have a simple f~rst--o rder logic interpretation  . 
An example ( whose spirit should warm the heart of those who despair of ever understanding the regu lations of their-  263 -institution ) follows . LESK primitives are in lower case . We first illustrate ~ oundeo ! arations . ( N . B . In the final paper , this example will be greatly expanded and explained  . ) every PERSON : - has I NAME - has I integer called their AGE-has IADD RESS end  , every STUDENT : kinds : IK ; LL-TIHE- , PART-TIME-kinds : UNDERGRADUATE- , GRADUATE --!- is a PERSON !- is ENROLTR~INI DEGREE PROGRAM !- is a STUDENTIN  1 FACULTY , SCHOOL or DEPART MeNt !- has 1 ACADEMICRECORD end . 
every ACADEMICRECORD of a STUDENTX :- has 1 FACULTY , SCHOOL or DE~T!-has 0 or more COURSECREDITS!-has 0 or more COURSESECTIONS called the COURSES-BEING-
TAKENBYX end ? every COURSECREDIT : - is a pai r ~ X  , Y ~ where X is a COURSE , 
Y is a LETTERGRADE end,
We illustrate next two stative verb declarations : aSTUDENTX is ENROLLEDIN a COURSESECTIONY iff - 
X is on the ENROLLMENTLIST of Y .
a STUDENTX is a STUDENTIN aFACULTY , SCHOOL or DEPART MENTY iff : - 264 -?- the FACULTY , SCHOOL or DEPART MENT of the ACA DEMIC
RECORD of X .
Finally , we illustrate an action verb declar at ion : To ENROLLaSTUDENTXIN a COURSESECTION Ys preconds for each PREREQUISITEZ of Y there is a COURSECREDIT ~ Z  , M > on the ACADEMICRECORD of X such that M is a PASSING GRADE ~ 
X has PAID the FEE of Y adds negates delete : procedure : add X to the ENROLLMENTLIST of Y ! add Y to the COURSESBE INGTAKENBYX end  . 
Conc ~ udin ~ Remarks
LESK has been used to describe neurophysiolog ical knowledge  , electrical circuits , PASCAL , the Canadian census data-base , and university regulations . A partial implementation has been developed in DEC  10 PROLOG . ALESK system should be capable of answering any question  ( expressed in LESK ) which a person could answer from the same LESK knowledge base  . This clearly requires both deductive and database komponents  . 
Systems now exist which combine these two ! it remains the re-foreto add the LESK component  , which is our eventual goal . 

