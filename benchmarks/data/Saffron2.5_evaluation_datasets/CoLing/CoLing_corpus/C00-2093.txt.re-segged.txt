Planning texts by constraint satisfaction
Richard Power
Information Technology Research Institute
University of Brighton
Lewes Road
Brighton BN24GJ , UI,:
Richard . Power : ~_itri.bton.ac.uk
Abstract
A method is de . scribed by which arhetorical-structure tree can be realized by a text structure made up of sections  , paragraphs , sentences , vertical lists , mid other textual patterns , with discourse connectives added ( in the correct positions ) to mark rhetorical relations . We show that text-structuring can be formulated as a Constraint Satisfaction Problem  , so that all solutions rest ) ecting constraints on text-structure formation and struct u  , ' alcompatibility can be efficiently generated . Of the many so hl-tions generated by this method , some are stylistically preferable to others ; we show how further constraints can be applied in order to select the best versions  . Finally , we discuss some extension such as the generation of indented text structures  . 
1 Introduction
Much recent work on language generation ( I-tosner and Stede , 1992; Hovy , 1993; Mellish et al ,  1998 ) has made use of discourse representations based on Rhetorical Structure Theory  ( RST )   ( Mann and Thompson ,  1988) . Interest has focussed in particular on the problem of buihting a rhetorical str'uct~tre  ( RS ) which organizes elementary propositions him ' -archically by means of RST relations  (  . NIarcu , 1996) . 
There has been less attention to a second problem in text plmming  , that of realizing the RS by ate : rtstruct . uT'e(TS ) , in which the material in the RS is distributed among I  ) aragraphs , entences , verticalists , etc . , perhaps linked up by discourse connectives such as ' since ' and ' however '  . This task , which we will call text structuring , is typically addressed through a microplanning phase that determines the content of successive sentences  . However , docmnents of realistic complexity require richer TSs including  , for example , verticalists , subsections , and clause sep-arated by semicolons . 
We describe in this pat ) or a text-structuring system that has been developed within ICONOCLAST  1   , a project which investigates applications of constraint-based reasoning in Natural Language Generatiou IICONOCI  . AST is supt ) orted by the UI < . l ~ ngineering and Physical Sciencest / . esearch Council EPSI (':) Grant 1,77102 . 
concession approve ( fda , elixir-plus ) cause banlf da , elixir ) contain ( elixir , gestodene )
Fignre 1: Rhetorical structure using as subject-n latter the domain of medical information leaflets  . Following Scott and de Souza (1990) , we represent rhetorical structure by graphs like figure  1  , in which non-tern final nodes rel ) re-sentRST relations , terminal nodes represent propositions , and linear order is unspecified ( for regularity , the nucleus is arbitrarily presented on the left of the satellite  )  . One of many possible TSs realizing this IS is shown in figure  2  , au ordered tree in which nodes are labelled with % ext-categories '  ( Nunberg ,  1990) ; the terminal nodes hold either discourse connectives  ( which owing to their interaction with text structure have already been selected  ) or l ) ropositions ( to be realized in their turn during tactical generation  )  . After passing this TS to the tactical generator , we might obtain the . following OUtlmt2: The FDAbansElixir since it contains gesto . -dene ; however , the FDA approves Elixir Plus . 
Part of the interest of the prol ) lem is that RS and TS are not always isomorphic ; this will be illustrated later by an alternative TS realizing figure  1   ( figure 6b )  . 
Our goal in ICONOCLAST has been to explore the huge variety of ways in which an RS can be conveyed  , noting stylistic reasons why one version might be preferred to another  , with the eventual aim of providing a system in which the user enjoys finegrained control over style as well as content  . These requirements ( ' anllot be met by a text structurer ~ q'he content of the example si of course fictional  . 
642 senlcnce text-clause text-clause
Icxl-phrase lexl-phrast ~ lexl-phl as ? tcxl- phnlse I  , a a(i  ~ la . elixir)/~"1 . . . . . . . . '?1" el,Ill o ve(lila , elixil-llhls)
Iexl-phrase texl-phlase " since " conlain ( elixir , geslodene )
Figure 2: Text structure that merely returns one or two sat is factory solutions  , relying I ) erhaps on a library of schemas . We need a method for enulnerating all the candidate solutions that  ( : an be coinl ) osed froln a given set of text-categories . Bya'candi ( late ' we mean a solution that correctly realizes the RS without violating text-st ructure formation rules  ; it may nevertheless be stylistically in el ) t . Having generated a set of can-didate text ; structures , the ICONO ( ILAST system evaluates them through rules that detect stylistic tlaws  , and on this basis re:ranges them in an order of prefer-en  ( : e . We will discuss stylistic evaluation brMly , but the focus of the paper is the 1 ) roblem of enum (  ; rating solutions . 
2 Formation rules
A text structur (' is defined in ICONOCI , AST as all ordered tree ill which each node has a text-t ' a tegory  ( ' O:ml ) rising two t~atur (  , snamed TI , ;X'I'-I , I , ; VEI , and IN-I ) ENTATION . Vahtes of TEXT-I , EVI , ; I ~ are tel ) resented by in l ; egers in the range 0 . .LMo :,,; these ~ may lie in-terl)rete . d in various ways , lint w (! will asst tllle here that LMa , = 4 aim that integers are t ) aired with descriptive labels as follows : 0 t (  ; xt-i ) hrase 1 text-clause 2 text-sentence 3 tlar a graph 4 section The meanings of ' section ' and: paragral  ) h ' are the usual ones , excellt that section titles are ignored : a section is simt  ) ly a sequence of one or more I ) ara-graphs . Following Nunberg (1990) , : text-sentenee'denotes a unit normally Imnetuated with a capital letter and a flfll stop  ; this is distinguished froin the syntactic concept of ' senten  ( ' e ' , which depends on syntactic formation rules . Thus the following paragraph consists of three text-sentences which contain  , respectively , one , zero , and two syntactic sentences : He entered the room  . l ) is a ster . The safe was ol ) en and the money had gone . 
A ( ; ext-clause is a unit that would nornmlly be Imne -tuated with a semicolon  ; the text-sentence you are now reading contains two text-clauses  , buttile see-end semicolon does not appear because it has been ' absorbed ' into the flfll -stop that marks the whole text-sentence  . Wil ; hina text-clause , hierarchy is determined by syntax rather than text-struct m'e  , so all units within a text-clause are assigned the minimal 
TI~XT-LF , VEI ~ of zero.
The tmrt ) ose of INDENTATION is to allow indented text structures likelmlteted lists  ; the feature takes values in the range 0 ,  1 ,  2  .   .   .   , where unindented text has INDI , ~NTATION ~ ( )~ ? a list i tem has INI ) ENTATION = l?a list item within a list item has  1NI  ) ENTA-
TION - - - ~2 and so forth . To siml ) lit~y the presentation , we will assume for now that all nodes have INI ) ENTAT1ON = 0 , so that text-categories are distinguished only by 

intormally , a text structure is wellformed if it re-sl ) ects the hierarchy of textua levels , so that sections are coml/osed of paragraphs , i ) aragraphs of text-sentences , at l(lso forth . An examt ) leofal lill-formed stru ( : ture would be one in which a text-sentence , contained a paragrat)h ; such a structure can occur only when the . paragrat ) his indented--a possibility we are excluding here  . Formally , the text-structure tbr-mation rules are as follows:  1  . A text structure is an ordered tree in which each node i has a TEX'F-LEN q ~  , I , Lii Iltherange

2 . If a node p has a ( laughter node d , then pmust have a'I'EXT-IA , ;Xfl . ; L Ollerallk higher than d , unlesst ) oth no ( leshave the minimal level 0 . In other words , either ( a ) Lv = L , ; + l , or ( b ) Lv = Ld = 0 ( From this it follows that any nodes that are sisters must have the stone level  . ) 3 . All terminal nodes must have tilt : minimal
TIqXT-LEVEI , of 0.
In most al ) l ) lications it would also in a kesense to set a lower limit on the root node  . For instance , we might at ) I ) ly the constraint L , ? . oot_> 2 to ensure that the whole text is at least a text -sentence  . 
3 Compatibility
As well as being a welM ' or med text structure , a can-didate solution must realize a rhetorical structure ' correctly '  , in a sense that we need to mak (: precise . 
Roughly , a correct solution should satist ~ y three coil -ditions : all timelementary propositions in tile RS  ; they may also contain discourse connectives expressing rhetorical relations in tile RS  , although for some relations discourse commctives are optional  . 
2 . The TS must respect rules of syntax when it combines propositions and discourse connectives within a text-clause  ; t br instance , a conjunction such as ' but ' linking two text -phrases must be coordinated with tile second one  . 
3 . Tile TS must be structurally compatible with the RS  . 
The first two conditions are straightforward , but what is meant by ' structural compatibility ' ? We suggest the crucial criterion should be as follows : any grouping of the elementary propositions in the TS must also occur in the RS  . In other words , the text-strncturer is allowed to eliminate groupings  , but not to add any . More formally : ? If a node in tile TS dominates terminal nodes expressing a set of elementary propositions  , there nmst be a corresponding node in the RS dominating the same set of propositions  . 
? Tile converse does not hold : for instance , an RS of the form R1 ( R2(pi , p2) , p3 ) can be realized by a paragraph of three sentences  , one for each proposition , even though this TS contains no node dominatill g the propositions  ( Pl and P2 ) that are grouped by R2 . However , when this happens , the propositions grouped to gettmr in the I7 ( Snmst remain consecutive in the TS ; solutions in which Pacomes in between Pl and P2 are prot fibited . 
4 Generating solutions
Our procedure for generating candidate solutions is based on a technique for formulating text structuring as a constTvdnt satisfaction pTvblem  ( CSP )   ( Henten-ryck ,  1989) . In general , a CSP is characterized by tim following elements : ? A set of variables  V1  . .I/'N . 
? For each variable l/i , a finite domain Di of possible values . 
? A set of constraints on the w flues of the variables  .   ( For integer domains these often use'greater than ' and ' less than '  ; other domains usually rely on ' equal ' or ' unequal '  . ) A solution assigns to each variable 17/ a value fl ' omits domain Di while respecting all constraints  . Depending on tile constraints , there may be multiple solutions , or there may be no solution at all . 
The difficulty in formulating a configuration task as a CSP is that we usually do not know in advance how many variables the solution will contain  . 
Problems of this kind are sometimes called dynamic  ( Deehter and Dechter ,  1988) , because the set of relevant variables changes as the search for a solution progresses  . The solution in figure 2 , for examl)le , has nine TS nodes , each bearing a TEXT-LEVEL variable ; different realizations of the same RS might have more nodes  , or fewer . However , we have found that all candidate solutions can be generated by assigning four variables  ( TEXT-LEVEL , INI ) ENTATION ~ ORDER and CONNECTIVE ) to each node of rhetorical structure , so obtaining a partial description that determines a unique TS  . Intuitively , the idea is that this description should specify a subset of the nodes in the target TS  ; further nodes are then added , by a deterministic procedure , in order to satisfy the for-nlation rules and accommodate any discourse con--nectives  . 
cause ban(fda , elixir ) contain ( elixir , gestodene ) ( b )
TEXT-LEVI ~ L = 0..4
ORDER = t,2cause
TEXT-LEVEL = 3 ban(fda , elixir ) contain ( elixir , gestodene )
TEXT-LEVEL = 0..4\]
ORDER = 1, 2
Figure 3: Adding solution variables
As an introduction to this nmthod , we will begin by working through a very simple example  . Suppose that our aim is to find all TSs that realize the IS in figure  3a in a paragraph , without using discourse connectives or indentation  . 
Create solution variables
The first step is to add TEXT-LEVEL and Oa-DER variables to each RS node  . Since ORDER represent stile linear position of a text span in relation to its sisters  , it can be omitted fi-om the root . 
Assign domains
Each variable is assigned a finite domain of pos -sine values  ( figure 3b )  . For TEXT-LEVEI . variables , tile donlain is O . .LMax ; for ORI)Ell variables it is 1 . .N , where N is the number of sisters . Since we have decided that the whole text I , I . ~ VEL Oll the root directly ( assigning it the w flue 3 )  . 
Apply constraints
Constraints over the solution variables are now applied  . Informally , these are as follows : the root node should have a higher TEXT-LF  . VEI . 
than its daughters ; sister nodes should have the same vahms for TEXT -LIg VEL but different values -' or ORDER  ; and since the ' cause ' relation is not marked by a discourse connective  , its arguments ( the two prot ) ositions ) cannot be realized by text-t ) hrases ( the result would be syntactically ill-formed ) --- in otlm r words , they must have TI~XT-LEVEL ?0 . Collectively , these constraints reduce the TEXT-LEVEL domains for timterminal nodes to  1  , 2 . 
Enumerate solutions
The solution scan IIOW been mnerated by computing all combinations of values that respect tile constraints  . One example of a solution is shown ill figure 4a . 
Compute eomplete text structures
For each solution , a complete TS cantie corn-tinted by adding any nodes that are required by the text-structure formation rules  ( figure 4b )  . 

TEXT-LEVEL = 3 ( a ) NUCL"/~SS~'ELLITE/\ban ( fda , elixir ) contain ( elixir , gestodene )
TEXT-LEVEL = 1TEXT-LEVEI ~ = 1
ORI ) ER = 2ORDIR = I paragraph ( 3 ) sentence ( 2 ) text-clause ( 1 ) text-clause ( 1 ) text-phrase ( 0 ) text-phrase ( 0 ) contain ( elixir , gesto dene ) ban(fda , elixir )
Figure 4: Completing a solution
In this simple case there are just four solutions , since tile TEXT-LEVI . 3I , and ORI)EI/ . variables oil the nucleus both have the domains 1 , 2 , and any setting of these variables fixes the corresponding variables on tiles at ellite  . Here are texts that might result from the four solutions  ( L and O represent ' FEXT-LI , 3 VEL and ORDER ; N and S represent nucleus and satellite):
LN = 1, ON = 1, Ls = 1, Os = 2
Elixir is banned by the FDA ; it contains gesto-(lelle . 
LN=1 , ON = 2 , L s=1 , O s=1 ( figure 4) E lixir contain sgesto dene ; it is banned by the

LN = 2, ON = 1, Ls = 2, Os = 2
Elixir is banned by tile FDA . It contains gesto-(telle . 
LN=2,ON=2,Ls=2,0 s=l
Elixir contains gesto dene.It is banned by the

The method for including discourse connectives has been described elsewhere  ( Power et al ,  1999) . 
Briefly , the lexical entry for a discourse connective must specify its syntactic category  ( at present we cover subordinating conjunctions , coordinating conjunctions and conjuuctiv c adverbs  ) and whether it is realized Oil the nucleus or the satellite  . For example , the relation cause can be marked by the subordinating conjunction ' since '  ( realized on timsatellite ) or the coi\imlctive adverb ' consequently ' ( realized on the nucleus ) -- among others . The choice of discourse connective strongly coustrain stile values of q'EXT-I~EVEL gild ORDI  , ~ , R for tile arguments of tile relation . If cause is expressed by ' since ' , the argu-merits may occur in any order , but they must be text-ptlrases : Since Elixir contains gesto dene  , it is banned by the FDA . 
Elixir is 1 ) armed by the FDA since it contains gestoden e . 
 #Elixirisbanne . d by the FDA ; since it contains gest oden e . 
 #E lixir is banned by the FI ) A . Since i ~ contain sgesto dene . 
If instead cause is expressed by : cousequently ' , the satellite nulst be placed before tile nucleus  , and uu-less tim style is very informal tile argument should have TEXT-I  , I~VEI , values above texl ; -t ) hrase : E lixir contains gesto dene ; consequently , it is brained by the FDA . 
Elixir is banned by the FDA . Consequently , it contains gestodene . 
~ Elixir is banned by the FDA , consequently it contains gest oden e . 
5 Constraints
We now state the text-structuring constraints precisely  , including the feature CONNECTIVE but still onlitting INI  ) ENTATION . Before applying ttlese constraints , finite domains are assigned to each tlS node i :
TEXT-LEVEl , Li-----0..LMa : ~
OI1) EI0i~-I ... N ( for N sisters)
TEXT-LEVEI ~ = 4
CONNECTIVE = 0, all hough , however
J\approve ( ilia , elixir qflus ) cause TI~XT-I~EVEL = 0 . .4 TEXT-LEVEL = 0 . .4
ORDER = 1, 2ORDER = 1, 2
CONNECTIVE = 0 CONNECTIVE = 0 , since , consequently
NUCL)~J ~ ELLITE/\ban(fda , elixir ) contain ( elixir , gesto dene ) TEXT-LEVEL = 0 . .4 TEXT-LEVEL =  O . .4
ORDER = 1, 2ORDER = 1, 2
CONNECTIVE = 0 CONNECTIVE = 0
Figure 5: Domain assigmnents
CONNECTIVE Oil the node cause ( figure 3a)Ci = ~ , since , consequently ; on a proposition ode , Ci = 0 . The value ~1 represents the option of using no discourse connective  . 
As an example , possible domain assigmnents for figure 1 are shown in figure 5  . The constraints are as follows:
Root Domination
The TEXT-LEVEL of the root node r must exceed that of any daughter d  . 
Lv > Ld
Parental Domination
Tile TEXT-LEVE l , of " a parent node pInust be equal to or greater thantile TIgXT-I  , EVEL of any daughter d . 
Lp >_ Ld
Sister Equality
If nodes a and b are descended from the same parent  , they must have the same TEXT-LEVEL . 
La = - Lb
Sister Order
If nodes a and b are descended fi'om the same parent  , they must have different values of OR-

O~?O ~ ,
Argument Order
If Cv is a coordinating conjmlction or conjunctive adverb  , the argument d ( nucleus or satellite ) on which the connective will be realised ( according to its lexical entry ) nmst have Od = 2 . 
Subordinating Conjunction Level
If Cv is a subordinating conjunction , any daughter node ( t ( expressing an argument of the relation ) must have Ld = O . 
Conjunctive Adverb Level
If Up is a conjunctive adverb , ally daughter node d ( expressing an argument of the relation ) must have Ld > 0 . 
Umnarked Level
If a relation is unmarked ( C p = 0 ) any daughter node d ( expressing an argument of the relation ) must have Ld > 0 . 
6 Completing the text structure conccssioll
TEXT-I , EVEI , = 4
CONNI ! CTIV li = how ov tw
NUCI,'~SS~AtI~,I,ITE
J \ ilp prtwc(fda , elixir-plus ) cause
TliXT-I , liVl'l , =2' lX'l'-I , liVlil ,  = 2
OH)F,R=2 ORIJER = 1
CONNE ( YI'IVI != ( 1CONNI ! CTIV li = consequently NUCI , EJSU~~N~qSA(a)/~1 , 11  , I'I'E banIfda , elixir ) contail l(?lixil , gcslod Clle ) TI~XT-I , EVI~I , = 2T liXT d , liVlil ,  = 2
ORDER = 2ORI)ER = 1
CONN liCTIVE=0CONN liCTIVE = 0(b)
I cxt-scntcncc(2)

I cxt-chu is c(1)
I lexl-phrasc((1) coiliaill(clixh , g cs to doll O ) section (4)
I paragraph (3)
ICxt-sclltell ?0 (2) t't . ' xl-SCll\[Oilct~12)
IIt cxl-clause ( I ) text-clause ( I ) text-phrase ( 0 ) text-phrase ( 0 ) " cOI~k'qtlelllIy .   .   .   . hO WC VCI " text-phrase ( 0 ) text-phrase ( 0 ) ban ( fda , elixir ) all prov ? ( fda , elixir-phls )
Figure 6: Conlpleting the TS
The algorit : hm for completing the TS cannot be described fully here  , trot as an exnmple we connnent Oll how the solution in figure  6a yields the TS ill figure fib . 
? If a parent is more than one level above its daughters  ( Lp-Ld > 1 )  , extra nodes are added beneath t imparent to bridgetile gap--hence the paragraph node in figure  6b  . 
? If a parent has the same level as its daughters ( L p = L d )  , the daughters are raised to replace timt ) arent . Thus in figure 6b , the paragraph has three sentences , and a rhetorical grouping has been left unrealized iutheTS  . Of course the reader might infer the intended RS from other evidence  ( e . g . semantic plausibility ) . 
? If a terminal node i has a level above text -phrase  ( Li > 0 )  , a chain of nodes is added to bring it ' down to earth '  ( e . g . the chain below the first text-sentence in figure  6b  )  . 
646 ? Discourse connectives are t ) assed down to the text > clause ill which they should be realized  . 
This is decide ( l ( i ) by l ) assing the connective to the aI ) l ) ropriate argument ( nucleus or satellite )  , according to its lexical entry , and ( it ) by thereafter 1) as sing it ; downtotile first constituent if the argument is complex  ( Power et al ,  1999) . 
After tactical generation , we might obtain tile following ( rather poor ) result : E lixir contains gesto dene . Consequently , it ; is banned by the FDA . I to wever , the FDA ap-proves Elixir Phls . 
7 Style
Having designed a procedure tha . t will generate all text structures meeting mininm l standards of colrectness  , we need to at ) l ) lyfl lrther constraints ill order to eliminate solutions that are stylistically eccen-tricor at least ill-suited to the l  ) Url ) ose at hand . 
In ICONOCI , AS'I' , this call be done in two ways : ? If a stylistic ( lefect is regarded as fatal , it is exchlded 1 ) yahard constraint on the so hltion variables , so that TSs with tiffs defect are never generated . 
? If a stylistic defect is regar ( ted as nonfatal ( i . e . 
unwelcome trot sometimes necessary ) , it is 1) e-nalize (1 , by a sot ; (; constraint , during a subsequent evaluation t ) hase iil which the enunmrated solutions m'e ordered from best to worst  . 
The user caniml ) osestylistic1) retL'r (' , n (: es by switching hard constraints on/off , and also by weigllting soft constraints ( i . e . determining the imt ) or tanc(~of non-fat ; al ( lefects ) . 
We cannot discuss stylistic control in detail here  , trotwe will give on b . or two examples for each type of constraint . 
IIARI ) CONSTIAINTS
Multil ) le text-clauses : r\[k ) obtain an infornml style without semicolons , senten ( ' esc ( mtaining more than one text-clause ( : all l ) eavoided by ilnt ) osing the constraint Li?1 on all nodes i . 
Nuelens-satellite order : For some rhetorical relations it in W l  ) e al ) l ) ropriate to fix the linear order of nucleus and satellite  ; for instmme , the satellite of a background relation shoul ( 1 precede the nucleus . This Call1) Censured by a constraint Os = 1 . on the satellite node S . 
SOFTCONSTRAINTS
Rhetorie algrouping : Failure to exl ) ressarhetorical grout ) tag can be treated as a defect .   ( This is one reason why the TSill figure 6b is poor . ) Oversimple paragraph : A paragraph c ( mtaining only one text-sentence can lxe treated as a tie-feet  . 
8 Extensions
Our method allows an exhaustive mnneration of solutions  , but only within a nelen mntary ti'a . nmwork tbrrepresenting rhetorical and textual structure  . We hot ) e to gradually extend this frmnework to cover many phenon mna that are currently excluded : ? Since its inlmt takes the form of a rhetorical structure tree  , the text ; strueturer inherits ally limitations of RST as a description of rhetorical organization  . 
? We cover only three types of discourse commc -tive  ( subordillating conjmmtion , coordinating conjunction , conjuctive adverb ) . 
? At present here is no treatment of titles.
? There is no treatment of relative clauses , which ( : allbeelnt ) loyed for exami ) le to realize the elaboration relation ( Scott ; and de Souza ,  1990):
Zovirax , which contains the antiviral agentacic lovir , is a smooth white cretan . 
? There is no treatinent of propositions that are expressed parenthetically  . 
Zovirax , since it ; is for you only , should never be given to other l ) atients . 
Zo virax should never be given to other pall ( mrs ( the medicine is for you only )  . 
? We have omitted the colou-expansion pattern ( Nunl ) erg ,  1 . 990 ) and some other features in th leneing i ) unctuation ( emi ) hasis , quotation marks , parentheses ) . 
? We have not covered the integration of text with tloating items like diagrams  , tal)les , or boxes . 
Two extensions that have already been iml ) lemented are indentation and centering . We have exl ) lained here how indentation is represented in text structure  ; the relevant constraints will be described elsewhere  . Centering has been incorporated by assigning backward and forward centers to all  1  ) rot ) osition sill acomt ) leted TS bc for c generating the wording ; in this way , centering transitions can be evahlated before tactical generation begins  , and TSs yielding good c ( mtimlity of reference can be i ) referred ( Kibbleaud Power ,  1999) . 
To use our approach ill 1) ractical applications , one must address the 1 ) roblem that the number of e and i- ( late solutions increase sexi ) onentially with the con > plexity of the rhetorical structure --- measured  , for exanll ) le , by the mmfl ) er of elementary propositions . 
lilinformal trials we find that the numl ) er of solutions is roughly 5 g -1 for all input with N propositions ; this means that even for a short passage containing n dozen propositions  , the text t ) lanner would lind about 50 million solutions satisfying the hards teins no alternative to sacrificing lobalot  ) timality in the interests of efficiency . One option is to use a statistical optimization method such as a genetic algorithm  ( Mellish et al ,  1998) . In ICONOCLAST we have preferred a method of partial optimization i which the the text -structuring problem is split into parts  , so that at each stage only a manageable part of the total solution is constructed  . For instance , when planning a patient information leaflet , the semantic material could first be distributed among sections  , then perhaps among t ) aragraphs , thus spawn-ing many small-scale text-structuring problems for which the search spaces would be measured in hundreds rather than billions  . 

A . Dechter and R . Dechter .  1988 . Belief maintenance in dynamic constraint networks  . In Proceedings of NCAI-AAAI . American Association for Artificial Intelligence . 
P . Van Hentenryck .  1989 . Constraint Satisfaction in Logic Programming . MIT Press , Cambridge,

E . Hovy .  1993 . Automatic discourse generation using discourse structure relations  . Artificial Intelligence , 63:341-386 . 
R . Kibble and R . Power .  1999 . Using centering theory to plan coherentexts . In Proceedings of the 12th Amsterdam Colloquium . Institute for Logic , Language and Computation , University of Amsterdam . 
W . Mann and S . Thompson .  1988 . Rhetorical structure theory : towards a functional theory of text organization  . Text , 8(3):243-281 . 
D . Marcu .  1996 . Building up rhetorical structure trees . In Proceedings of AAAI-96 . American Association for Artificial In mlligence . 
C . Mellish , A . Knott , J . Oberlander , and M . O'Donnell .  1998 . Experiments using stochastic search for text planning  . In Prv cecdings of IWNLG-98 , Niagara-on-the-Lake , Canada . Association for Comtmtational Linguistics . 
G . Nunberg .  1990 . The Linguistics of Punctuation . 
CSLI , Stanford , USA.
R . Power , C . Doran , and D . Scott .  1999 . Generating embedded is course markers from rhetorical structure  . In Proceedings of the European Workshop on Natural Languag c Generation  , pages 30-38 , Toulouse , France . 
D . Rosner and M . Stede .  1992 . Customizing RST for the automatic production of technical manuals  . In R . Dale , C . Mellish , and M . Zock , editors , Aspects of Automatic Natural Language Generation , Levico , Italy . 
D . Scott and C . deSouza .  1990 . Getting the message across in RST-based text generation  . In R . Dale , C . Mellish , and M . Zock , editors , Current Research in Natural Language Generation . Cognitive Science Series , Academic Press . 

