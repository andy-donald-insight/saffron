Adjuncts and the Processing of Lexical Rules
Gertjan van Noord and Gosse Bouma
BCNRUG Groningen
vannoord , gosse0let.rug.n\].

The standard HPSG analysis of Germanic verb clusters cannot explain the observed narrow -scope readings of adjuncts in such verb clusters  . 
We present an extension of the HPSG analysis that accounts for the systematic ambiguity of the scope of adjuncts in verb cluster constructions  , by treating adjuncts as members of the sul ) eatlist . The extension uses power-Nlreeur sive lexical rules  , implemented as complex constraints . We show how'delayed evaluation ' teeh M ques from constrMnt-loglc programming can be used to process such lexical rules  . 
1 Problem Description 1 . 1 Dutch Verb C lus ters Consider the following Dutch subordinate sentences  . 
(1 ) datArie wilslapen that Arie wants to-sleep ( 2 ) datArie Bob wils laan that Arie Bob wants to-hit that Arie wants to hit l/ot  )   ( 3 )  *  ( latArie Bob wils lapen that Arie Bob wants to -sleep that Arie wants to sleeplloh  ( 4 ) * datArie wil Bobslaan ( 5 ) datArie Bob cade autjes wilg even that Arie Bob presents want to-give that Arie wants to give presents to Bob  ( 6 ) * datArie Bob wilcadeaut jes geven datArie wil Bobca  ( leaut jesgeven ( 7 ) datArie Bobzou moeten kunnen will enknssen that Arie Bob should must can want to-kiss that Arie should be able to want to kiss 

The examples 13 indicate that in l ) utch the arguments of a main verb can be realized to the left of an intervening auxiliary verb  , such as a mod Mverl ) . Furthermore the sentences in d-6 indicate that in such constructions the arguments must  1  ) erealized to the left of the auxiliary verbs . In 7 it is illustrated that the recanheany numl ) er of auxiliaries . 
1 . 2 The I IPSG ana lys i s o f verb - c lus ters The now standard analysis within t\[PSG of such verb -clusters i based oil ideas from Categorial Grammar  ( cf . for example Moortgat ( 1988 ) ) and defined within the HPSG flame-work by IIinrichs and Nakazawa  ( 1989 )  . In this analysis auxiliary verbs subcategorize for an unsaturated verb phrase and for the com -pleinents that are not yet realized by this verb -l  ) hrase . In other words , the arguments of the embedded verl ) -phrase are inherited by the auxiliary . 
For example , the auxiliary ' wil'might be defined as in Iigure  1  . If we assume an ai ) plica-tion rule that produces flat vp-structures , then we obtain the derivation in figure 2 for timin finite verb phrase ( 8 )   .   .   . Arieboeken wilk unnengeven 1 . 3 P rob lems w i th the scope o f adjuncts A major problem that this analysis faces is the possibillity of narrow-scope readings illtile lez : ariele ~: boeken le:r  , : witdir : left j ,  / /  , ': left l , sc : ( P , R , L , J ) sc:(R , I ,   , J ) . ~c : ( L , J ) dir : right pdir : rightR Figure 2: The parse tree fortile verb phrase %' i et ) oeken wilk unnengeven ' . 

VERBAL\[1seml,~clqfso . : argl:Subj soa-arg:Obj\[w , ntnAt , 1 sere : Objsc: ( s ~ tbjl semlindez : SjlxIA ) sc : A
Figure 1: The modal auxiliary ' wil'.
case of adjuncts . For example , the following Dutch subordinate sentences are all systematically ambiguous between a wide-scope reading  ( adjunct modilies tile event introduced by the auxiliary  ) or a narrow-scope reading ( adjunct modi % s the event introduced by the main verb  )  . 
(9 ) datArievandaagBob wilslaan that Arie today Bob want to-hit that Arie wants to hit II ob today  ( 10 ) datArie hot artike lopt ljd probeer de , optest llrent hat Arie the article on time tried to send that Arie tried to send the article in time  ( 11 ) datArie Bob devronwen meteen verreklj kerzag bekljken that Arie Bob the women with the telescopes awlook-at that Aries aw Bob looking at the women with the telescope Firstly note that tile treatment of adjuncts as presented in Pollard and Sag  ( in press )  , cannot be maintained a . sit simply fails to derive any of these sentences because the introduction of adjuncts is only possible as sisters of saturated elements  . The fact that ~ trguments and adjuncts can come interspersed  ( at least in language such as Dutch and German ) is not accounted for . 
A straightforw ~ ml solution to this problem is presented in Kasper  ( in prepar ~ tion )  . Here ad-jmwts and arguments are all sisters to a head  . 
Tim argument should satisfy the subcat requirements of this hea  . d-the adjuncts modify the semantics of the head ( via are cnr sively defined a . djuncts principle ) . 
The main I ) rol ) lem for this treatment of a d- . iuncts is that it cannot explain the narrow-scope readings observed above  , if adjuncts modify the . head of the phrase they are part of then we will only obtain the wide-scope rea  , d-ings . 
If we assume , on the other hand , that a d- . jnncts are oil the subcat list ; , then we will obtain both readings straightforwardly  . Intilen arrow-scope case tile adjunct is on the snb cat list of the embedded w ~ r b  , and then inherited by the matrix w . ~ rb . In the wide-scope case tilt adjunct simply is on the subcat list of the matrix verb  . in the next section we present a treatment of adjuncts in which each adjunct is subcategorized for  . Byme , ms of lexical rules we are able to obtain the . effect that there can be any mmfl ) er of adjuncts . We also sketch how the semantics of modification might be delined  . 
2572 Adjuncts as Arguments 2 . 1 Adding adjuncts The previous section presented an argument that VP modifiers are selected for by the verb  . 
Note that this is in line with earlier analyses of adjuncts in HPSG  ( Pollard and Sag ,  1987 ) which where abandoned as it was unclear how the semantic ontribution of adjuncts could be defined  . 
II ere we propose a solution in which adjuncts are members of the subcat list  , just like ordinary arguments . The difference between arguments and adjuncts is that adjuncts are ' added ' to a subcat list by a lexical rule that operates recursively  .   1 Such a lexical rule might for example be stated as in figure  3  . 
Note that in this rule the construction of the semantics of a modified verb phrase is still taken care of by a rood feature on the adjunct  , containing a valandarg attribute . The arg attribute is unified with the ' incoming ' semantics of the verb phrase without the adjunct  . 
The val attribute is the resulting semantics of the verb phrase including the adjunct  . This allows the following treatment of the semantics of modification  2  , cf . figure 4 . 
We are now in a position to explain the observed ambiguity of adjuncts in verb-cluster constructions  . Cf . :  ( 12 ) dat Arie Bob van daag wilk us sen that Arie Bob today want sto-kiss In the narrow-scoperading tim adjunct is first added to the sube at list of ' kussen ' and then passed ou to the subcat list of the auxiliary verb  . In the wide-scope reading the adjunct is added to the subcat list of the auxiliary wM ~  . 
The final instantiations of the auxiliary ' wil ' for both readings are given iu figure  5  . 
2.2 Discussion
A further problem concerning the syntax of adjuncts is posed by the fact that adjuncts can take part in unbounde dependency construe-lions  . Lexical treatments of the kind presented in Pollard and Sag  ( in press )  , chapter 9 assume that a lexlcal rule is responsible for ' moving ' lcf  . Miller ( 1992 ) for a similar suggestions concerning French . 
2 inspired by Kasper ( in preparation ) an element from the subcat list to the slash list  . Such an account predicts that adjuncts caunot take part in such unbounde depen-dency constructions  . In Pollard and Sag ( in press ) , chapter 9 a special rule is introduced to account for those cases where adjuncts do take part in UI  ) Cs . '\[' he treatmen that we propose for adjuncts obviates the need for such an ' adhoc'rule  . 
Clearly many details concerning the syntax of adjuncts are left untouched here  , such as the quite subtle restrictions in word -order possibilities of certain adjuncts with respect to arguments and with respect to other adjimcts  . In the current framework linguistic insights concerning these issues could be expressed as constraints on the resulting subcategorization list  ( e . g . by means of LP-constraints ) . 
lit should also be stressed that treating adjuncts and arguments on a par on the level of subcategorization does not imply that observe <\[ differences in the behavi <  ) r of adjuncts and arguments could not be handled in the proposed framework  . For example the difference of adjuncts and arguments in the case of left dislocation in Dutch  ( exemplified in 1316 ) can be treated by a lexica \] rule that oper ~ tes on the subcat list before adjuncts are added  . 
(13) Devoor stelling duurteenuur
Timshow takes an hour ( l , l ) l '; enuur , dat duurt devo or stelling ( 15 ) Arieen Bobwandeleneenuur
Arie and Bol ) wall < an hour (16) * l " enuur , datwandelen Arieen Bob 3 Processing Lexical Rules 3  . 1 Lexical Rules as Constraints on
Lexical Categories
Rather than formalizing the ' add-adjuncts ' rule as a lexical rule we propose to use recursive constraints on lexical categories  . Such lexical constraints are then processed using delaye dew duation techniques  , a Such an approach is more promising than an offline approach that precomputes the effect a Refer to Carpenter  ( 1991 ) for a proof of Turil Lg equivalence of simple eategorial grammar with recur-slve lexical rules  . 

VERBAL 1 s c : P ? S : ~ sere : Sere 0
VI , ; RBAI , sc:l' . ( wod:ar~l:Sem~)) . Sva/:Sere . N(?'G q , : ~ O Ill Figure 3: A lexieal rule that adds a single adjunct to the sul  ) cat list of > t verb . In the . case of n~uljuncts the rule applies n times . 
RI,~STI1 . ~ . 1) V Ell . nIAL arglnuc:\[~ttod:val\[nuc:\[ resh " qI*o a:Q\] 
OP_ . AI)Vt , ; RIIIAL arg:Soam~d:va"nu clI , '~ , ~ t , ":0 Figure 4: A restrictive , adverbial and a nolm rator a ( lverl ) ial . Restrictive adverbials ( such as locatives and time adverbials ) will generally be encoded as presented , where R0 is a meta-wu'iable that is instantiated by the restriction introduced by the adjunct  . Operator ~ ulverblals ( such as causatives ) on the other hand introduce their own quantified state of aft ' airs  . Such ml verbials generally are encoded as in the following examph '  , of the adverbial ' to ewdlig ' ( accidentally ) . Adw . ,rbials of the first type add a restriction to the semantics of the verb  ;   ; Ldwn ' bials of the second type introduce a new scope of modification  . 
of lexical rules by compil ~ tion of the lexicon , as it is unclear how recursive lexical rules can be treated in such an architecture  ( especially sinces Ollle recursive rules e : ut easily lead to an infinite number of lexical entries  , e . g . tlle adjuncts rule ) . 
Another alternative is to consider lexical rules as ' ordinary ' unary rules  . If this technique , is applied for the lexical rules we have envisaged here  , then ( unary ) derivations with unbounded length have to be <: mlside t'ed  . 
\] f we formalize lexieal rules as ( oomph , x ) constraints on lexical categories then we are able to use delayed evaluation techniques for such constraints  . 
Assume that the ' underlying ' feature structure of a verb is given by a definition of ' stem '  ( e . g . as the example of ' wil'abow ' . , or as the example of a simple transitive verb such as ' kussen '  ( to-kiss ) in figure 6 )  . 
Such a feature-structure is not the actual category of the verb--rather this category is define  . d with complexe on straints with re . 
speet to this baseform . \] lere the constraint that adds adjuncts to the subc : tt list has our 
VE ItBAI , /\[" ? U "\] sc:s,:,,,:a . , )\[ ou . \] subj:sere:AIscml , , , clqf . so a : kisser : A1 kissed A ' 2 l ; ' igure(i : ( h ~ . tet , ; or y for ' kussen'(toIdss ) special attention , but there , is also a constraint tha . t adds as nbj < ' . ct to the subeat list ( as part of the in\[lection constraint for finite verbs  ) and a constrain that pushes an element from the sube at list to slash  ( to trea , tutll ) ounded epen-dencies along the lines of eh a . pter 9 of Pollard and Sag(inpress )), etc . Thus a \] exical entry might be defilm das in ligure  7  . 
\] , exical rules are regarded as ( complex ) con-strah ~ tsill l ; his framework because it allows an imple . mentation using delayed evaluation techniques from logic progrannning  . The idea is sc : ( E , tI ) sc : ( lea::kussen'dir:rightlee::wil

VERBAL sc : ( II ) sc : ( lex:kussendir:right leawillea:vandaag , lea::bob , lez:ariedir:leftEdir:lefttl dir:left \[ N?N  1 \[? uN\] , lez:vandaag , lex : bob , lez:ariedir:left dir:leftlIdir:left ) Figure 5: The finM instantiation of the moda . l for both the narrow - and the wide-scope reading of the sentence ~ Arie Bob van daag wilk us sen '  . Int it (' , narrow-scope rending the adverbial occurs both on the subeat list of the embedded verb and on the sube at list of the matrix verb--indicating that the embedded verb introduced the adjunct  . In the wide-scope reading the adverb only occurs on the subcat list of the matrix verb  . 
lexicM_entry(A):-stem(B ) , add_adj(B , C ) , inflection ( C , D ) , push_slash(D , A ) . 
inflection (
VE nBAL"\]FINITE phon:Pphon:P ( 9" t " se : Se'sc : Sc .   ( Subj )   ) ' subj:Subj subj:Subj Figure 7: A lexical entry is defined with respect to a base form using complex constraints  . 
Subject addition is a constraint associated with finite inflection  . 
that a certain constraint is only ( partially ) evaluated if ' enough ' information is available to do so successfully  . As a relatively simple example we consider the constrain that is responsible for adding a sul  ) ject as the last element on a subcat list of finite verbs  . As a lexical rule we might define : \[ FINITE 1 subj:Subj ==>\[ sc:St .   ( Subj )  \]  8C : Sc If we use constraints the definition can be given as in figure  7  , as part of the constraint associated with finite morphology  . Note that the two approaches are not equivalent . If we use lexical rules then we have to make sure that the add-subject rule should be applied only once  , and only for finite verbs . As a constraint we simply call the constraint once at the appropriate position  . 
The concatenation constraint ( associated with the ~ dot ' notation ) is defined as usual : concat ( 0  , A , a ) . 
e one at (( BIC ) , A , ( II\]D )) :- concat(C , A , l )) . 
If this constraint a pi ) lies on a category of which the subcat list is not yet fully specified  ( for example because we do not yet know how many adjuncts have been added to this list  ) then we cannot yet compute the resulting subcat list  . 
The constrMnt can be suimessfully applied if either one of the subcat lists is instmttiated : then we obtain a finite miml  ) er of i ) osslble so-hltions to the . colistraint . 
The relation add_adj recursively descends through a subcategorization list and at each position either adds or does not add an adjunct  ( of the appropriate type )  . Its definition is given in figure 8 . Note that it is assumed in this definition that the scope of  ( operator-type ) adverbials is given by the order in which they are put in in the subcategorization list  , i . e . in the obliqueness order . 44 Cf . Kasper ( i , , preparation ) for discussion of this point , also in rehttion with adjm , cts that introduce q muttiflers . Note that in our approach dilR . ' rent possibilities can be defined . 

ISIGN\]SIGN1 add_adj ( sc:Asc:Jsere:B'sere:K ) :-subj:Subj subj:Subj add_adj ( A , JB , K ) . 
~ dd-~dj(0,A,a).
add_adj (( CID ) , ( ClE ) , A , n ) :- add_adj(D , E , A , B ) . 
add_adj(A , ( rood:arg:Bw , l : l , ; add_adj(A , D , I , ; , C ) . 
ID ), 1~, C ) :-
Figure 8: Definite clause specification of ' add_adj ' constraint  . 
3.2 Delayed evaluation
For our current purposes , the co-routining facilities offered by Sicstns Prolog are powerful enough to implement a delayed evaluation strategy for the cases discussed al  ) ove . For each constraint we decl are the conditions for evMuating a constraint of that type by means of a block declaration  . For example the con-cat constraint is associated with a declaration : '- block cone at  (  -  ,  ?  ,  - )  . 
This declaration says that evaluation of a c~dl to concat should be delayed if both the Iirst and third arguments are currently variable  ( uninstantiated , of type " to P ) . It is clear fr <> m the definition of concat that if these arguments are instantiated then we can evahm  . te the constraint in a topdown manner without risking non-termination  , l !' ,  . g , the goal concat((A , B ) , C , D ) succeeds by insta . ntiating
Dasthelist(A , I\]\]C).
Note that block declarations apply recursively . If tit ( : third argument o a call to con-eat is instantiated as a list with a wu'iahle tail  , then the evaluation of the recursive al ) l ) lication of that go at might be blocked ; e . g . ew duation of the goat co , ~ . ~( A , ( Sj ), < nit >) s . e,' . oeds either with both A and C instantiated as the empty list and by unifying Sj  ; rodB , or with A instantiated as the list ( l \]\[ l ) ) for which the constraint concat ( D , ( Sj ) , C ) has to be satis-tied . Similarly , for each of the other constraints we decl are the conditions under which the con-stra  . in t can be ewluated . For the add_adj constraint we define : "- block add_adj  ( ? ,  -  ,  7 ,  7) . 
One may wonder whether in such a , n architecture enough information will ever become available to allow the evaluation of any of the constraints  , hi general such aprol ) lemmay surface : the parser then finishe . sa derivation with a large collection of constraints that it is not ~ dlowed to evaluate - and hence it is not clear whether the sentence associated with that derivation is in fad  ; gramm ~ tical ( as there . 
may 1) eno solutions to these constraints).
The strategy we have used success fitl/y so far is to use the structure hypothesized by the pars m ' as a ' generator ' of information  . For example , given that the parser hypothesizes the al ) plication of rules , and hence of certain in-stmttiations of the sul ) cat list of the ( lexic M ) head of such rules , this provides information on the subcat-list of lexical categories  . Keep--ing in mind the definition of a lexical entry as in figure  7 we then are able to ewfluate each of the constraints O  ) l the w due of the subcat list in t l , rn , starting with the push_slash constraint , up through the inflection and add_adj constraints  . Thusra . ther than using the con-sir . tints as q ) uilders ' of subcat-lists the constraints : ~ re evaluated by checking whether a subcat-list hypothesized by the parser can be related to a sat  ) cat-list provided by a verb-stein , in other words , the \[1GW of information in the definition of I e : ~ : ical_entry is not as the order of constraints might suggest  ( froln top to 1 ) ottom ) but rath t , r the other way around ( from hot to m to top ) . 
4 Final remarks
We illustrated that recursive lexic~d constraints might be useful from a linguistic per-spectiw ~  . If lexlc~d rules are formalized as cot ni ) lexcot/strahlt sol ) \] exica \] categories then methods from logicl ) rogl : amtning can be used to imtflement such constraints  . 
Note that complex CG , lstraints and delaye deva . huttion techniques are also useful in other areas of linguistic desciptlon  . For example . 
we used the same methods to deline and pro-method may also be applied to implement 
IIPSG's binding theory.
As a test case we improved upon the IIPSG analysis of  ( Germanic ) verb clusters and adjuncts by treating adjuncts as categories that are on the subcat list by virtue of a complex constraint  . The fragment that has been implemented with the methods described is much larger than the discussion in the previousec-tions suggest  , but includes treatments of extra-position , ipp , modal inversion , participium inversion , the third construction , partial-vp top-icalisation , particle verbs , verb-second , subject raising , subject control , raising-to-object , object control and clitic climbing in Dutch . 

Bob Carpenter . The generative power of cat-egoriM grammars and head-driven phrase structure grammars with lexical rules  . Computational Linguistics , 17(3):301-313, 1991 . 
Erhard Hinrichs and Tsuneko Nakazawa.
Flipped out : AU Xingerman . In Papers f~vm the 25th Annual Regional Meeting of the Chicago Linguistic Society  , pages 187-202 . Chicago Linguistics Society , Chicago , 1989 . 
Robert Kasper . Adjuncts in them it telfel d . Ill John Nerbonne , Klaus Netter , and C~trl Pollard , editors , German Grammar in IIPSG , Lecture Note Series . CSLI , Stanford , in preparation . 
Philil ) Miller . Clitics and Constituents in Phrase Structure Grammar  . Garland , New
York , 1992.
Michael Moortgat . Categorial Investigations.
PhD thesis , University of Amsterdam , 1988.
Carl Pollard and Ivan Sag . Information Based Syntax and Semantics , Volume 1 . Center for the Study of Language and Information
Stanford , 1987.
Carl Pollard and Ivan Sag . l\[ead-driven Phrase Structure Grammar . Center for the Study of Language and Information Stun-ford  , in press . 

