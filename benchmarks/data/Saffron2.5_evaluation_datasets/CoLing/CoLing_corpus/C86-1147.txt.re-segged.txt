Translation by Understanding : A Machine Translation Sy  , i ; tem LUTE
Hirosato NOMURA , Shozo NAITO , Yasuhiro KATAGIRI , and Aldra SHI MAZ U
NTT Basic Research Laboratories , Masashino-shi , Tokyo ,  180 , Japan

This pal ) or presents a linguistic model for language understanding and describes its application to an experimental machine translation system called LUTE  . The language understanding model is an interactive model between the memory structure and a text  . The memory structure is hierarchical and represented in a frame-network  . Linguistic and nonlinguistic knowledge is stored and the result of understanding the text is assimilated into the memory structure  . Tim understanding process is interactive in that the text invokes knowledge and the understanding procedure in tcrprots the text by using that knowledge  . A linguistic model , called the Extended Case Structure model , is defined by adopting three kinds of information : structure  , relation and concept . 
These three are used rccursively and iteratively as the basis for memory organization  . These principles are applied to the design and implementation f the LUTE which translates Japanese into English and vice versa  . 
1. Introdue timl
Since the early 1970s , a variety of approaches to language understanding have been proposed  . In particular , the importance of knowledge organization has been emphasized  , and linguistically structured knowledge such as Script  \[11 and knowledge representation frameworks such as Frame  \[2\] and Semantic Network \[31 have been proposed . At the santo time , the linguistic approach as been adopted to reveal the discourse structure  , the cognitive approach has attempted to explain phenomena such as focus  , topic and intention , and the formal semantic approach has been used to establish semantics based on timlogical model theory  . 
We propose an interactive model between the memory structure and the text  ( or utterance ) as a language understanding model . In the model , knowledge stored in the memory structure plays the principal role such that the text invokes knowledge and the understanding system interprets the text using that knowledge  . The knowledge consists of linguistic knowledge and nonlinguistic knowledge  . They are closely related each other and incorporated into the memory structure simultaneously  . As a result of understanding , the system as similate stile meaning structure of the text into its memory structure  . The bases for representing the knowledge are structure  , relation and concept which are the fundamental cmnponents for constructing and representing the memory structure including the meaning structure rasentence  . For the purpose oI'clear definition of linguistic information  , a linguistic model , called the Extended Case Structure model ( ECS ) , which is capable of treating the structures of complex sentences  , is provided . 
These principles have been applied to the design of a new version of the experimental machine translation system called LUTE  ( Language Understander , Translator and Editor )\[4\] . This paper deals mainly with the current JapaneseEnglish version of LUTE  ( LUTE-JE versiom l )  \ [5 \ ]  . LUTE has following processing characteristics : 1 ) Not only syntactic but also semantic relations ( dependencies ) between modifiers and modificants are analyzed simultaneously  .  2 ) All kinds of information such as syntactic patterns  , meaning structures , lexical items , and knowledge are represented in a uniform framework  , called a Frame-Network .  3 ) Analysis produces a ~ most plausible meaning struct m'e'based on the prediction of syntactic structures and the integration of semantic structures  .  4 ) Transfer is realized as a general fl'amework for manipulation g the frame network  . 
2 . Language Understanding Model 2 . 1 Memory Organization Knowledge can be organized into various memory structures depending on the type of knowledge  . The Mestructures are usually hierarchical and consist of three layers  ; 1) longterm memory , 2) discourse memory , and 3) episodic memory ( or shortter memory ) . 
Long-term memory stores knowledge such as dictionaries  , grammars , experiences , cmn mon-sense knowledge , expert knowledge , and procedural knowledge such as how to infm " a fact from a collection of facts  . Knowledge also contains recta-level knowledge such as knowledge about he characteristics of knowledge and then sage of it  . 
Discourse memory stores knowledge concerning the situation as an environment of utterances  , and the history of understandings such as " Who is the author ?"  , " What is the topic ?" , and " What is the purpose of the discourse segment ?"  , Episodic memory steres the meaning structure of the ongoing segment of the text and its construction is the main issue in the discussion of sentence analysis  . 
The memory model described above can be applied to account for a number of linguistic phenomena  . For example , the difference between two Japanese anaphoric expressions " ono  (  7? ~ )  , , and " ano (  ~ ? ) )"  ( both expressions correspond to the determiner " the " in most English contexts  ) is explained by using the memory structure model as follows : a referent of the noun modified by " so no " is found in tile discourse memory  , and a referent of the noun modified by " ano " is found in the longter memory  . 
2.2 Basis for Memory Organization
The memory is constructed by assembling three kinds of basic elements  ; 1) structure , 2) relation and 3) concept . Structure is a packet of memory organization . A variety of structures can be used to represent linguistic knowledge  , the situation of utterance , and the meaning structure of a sentence . Concept is associated with structures which include all kinds of constituent structures  ; words , phrases , sentences , etc . Hence , this definition of concept , in a sense , is language-dependent . There are two kinds of concepts , semantic categories and word meanings . Thus a word and its meaning are strictly distinguished  . Relation integrate structures to form a compomld structure  . Examples of compound structures are compound norms  , ease structures , and complex sentences . There are several kinds of relation such as casc relations  , conjunctive relations and taxonomic relations between semantic ategories  . 
2.3 Understanding Process
In the understanding process , operation such as matching , searching , deletion , replacement , integration , and generation are executed in the memory structures  . For example , in a morphological analysis process , using their literal expressions as search keys , the search for words to be identified is made using lexical entries in the dictionary  , and in the case analysis process , a search is made for case instances that match prototype cases in ease frames  . 
As understanding proceeds , the essence of episodic memory is assimilated into discourse memory and the essence of discourse memory is assimilated into longterm emory  . Discourse memory ( longter memory ) is not simply an accumulation of the contents of episodic memory  ( discourse memory )  , but is a structured memory coherently organized from the episodic memory  ( discourse memory )  . 
As a prelimlnary model of discourse memory , we define a Local Scene Frame ( LSF ) , which is a collection of cases and predicates in preceding sentences already analysed  . LSF is partly viewed as describing a ~ nted case structure n to del ~ FL  .   .   .   .   . E11 ! PS is .   .   .   .   .   .  / '  .   . ___ Pr e2   up_p2 sitlon ___/ q Complex Sell ten costructure ( Extended case structure model ) Fr .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
t .   .   .   .   .   .   .   . ___ c2~i2~2~t;2 ~_ .   .   .   .   .   .   .   .   .   .   .   . d-~Unit sent . . . . . . tructure F L c?_'~p-?u'~'Ln ?<-'"- J \[ Y , _ , ,b_o a_a ~ a~ . _o ,_~ t_~,_~_\] .   .   .   .   . 
Simple sentence structure iL ~ .  _  . __t,_No_<kq a_~__J t .   .   .   .   .   .   .   .   .   .   .  , ,  . uot .   .   .   . ? i
Fig .   1 Extended Case Structure Model situation in which the utterance is carried out  . Information in the LSF is used for filling in missing cases  , and resolving anaphora . A discussion of the detailed procedure for the assimilation would be beyond the scope of this paper  . 
3 . Extended Case Structure Model 3 . 1 Genera l F ramework The Extended Case Structure Model  ( ECS ) is a linguistic model for representing the meaning structures of the text  . Thus the ECS presents a representation scheme for the episodic memory  . Figure 1 shows its fundamental construction . The traditional case structure ( Fillmore an type ) is a structure for a unit sentence which consists mainly of relations between ouns and a verb  . This is not sufficient ore present structures of real sentences which sometimes have complex noun phrases  , compound sentences , etc . Also , the ECS has to have facilities for representing other structures involving relations between a noun and a noun  , a verb and a verb , etc . The ECS has been designed to integrate those structures into one linguistic model  . Its nature is hierarchical as to the compoundness of constituents  , iterative as to conjunction , and recursive as to embedding . Using these formalisms , the syntactic and semantic structures of sentences can be represented uniformly and correctly  . 
3.2 Semantic Structure in ECS
There are two types of semantic structurcs , composite and primitive structures . A cmn posite structure is made by integrating semantic structures using semantic relations  . A primitive structure , by definition , cannot be divided into further substructures . In general , a single word corresponds to a primitive structure  , and a phrase corresponds to a composite structure  . Since syntactic information can also contribute to define meaning structures  , each semantic structure simultaneously incorporates not only meaning information but also syntactic information  . 
We do not assume a language-independent uiversal semantic representation  . Thus , it is necessary to define a proper ECS for each language : Japanese ECS  ( J-ECS ) \[6\] for Japanese language and English ECS ( E-ECS ) \[7\] for English language . In the translation process from Japanese into English  , the analysis procedure generates a J-ECS for a Japanese sentence  , and the transfer procedure generates an E-ECS corresponding to the J-ECS  . 
3.3 Semantic Relation in ECS
Senmntic relation connects semantic structures and builds a larger semantic structure  , ranging from a word structure to a sentence structure  . Figure 2 shows types of semantic relations , and each of them can be explained briefly as fellows :  1  ) Noun relation : Relationship between nouns ; Examples are whole-part , upper-lower , possession , material , etc . 
2 ) Case relation : Relationship between a case element and a predicate  ; Examples are object , agent , instrument , place , etc . 
622 3 ) Embedded relation : Relationship between an embedded sentence and a noun phrase  , which can be categorized into three types ; a ) case re'lation between a modified noun phrase and the predicate iu a modifier embedded sentence  , b ) noun relation between a modified noun phrase and a noun phrase in a modifier embedded sentence  , and c ) an appositive or subsidiary relation between a modified noun phrase and a modifier embedded sentence  . 
4 ) Conjunctive relation : Relationship between sentences  ; Examples are cause-result , ime-advance , assumption , etc . 
3.4 Concept in ECS
Concepts are associated with structures mentioned above  . Among them , concepts associated with word structures represent word meanings which appear when the words are used in a sentence  . A word meaning is represented by principal concepts  , supplen mntary concepts , and their semantic dependencies . Principal and supplementary concepts are dcfined by using semantic ategories  , and prepared for nouns , adverbs , verbs , adjective-verbs and modalities as shown in Figure  3  . Semantic dependencies are defined by using semantic relation fi'ames and semantic structure frames  . Semantic categories , semantic relation fi'amcs and semantic structure frames have the following characteristics :  1  ) There are two types of concepts : prototype and instance  . Prototypes play a part of selectional constraint to define semantic dependency structures  . Instances how an assimilated structure which satisfies the selectienal constraints  . 
2 ) They shows semantic commonness and analogy between two structures  . This allows the system to share information and to provide facilities for paraphrase  .  3 ) Semantic ategories make tipa hierarchical structure  . This provides the system with inheritance ability and information sharing  . 
4 . Dictionaries , Knowledge and Their Representation 4 . 1 Dict ionary There are two typos of dictionaries in LUTE  . Mono-liugual dictionaries are used in analysis and generation  , while bMingual dictionaries are used in transfer . Monolingual dictionaries have the following information about words and concepts :  1  ) tIow the word is expressed ,  2 ) how the word is used in the syntax of a sentence , and 3) what concept the word corresponds to . Bilingual dictionaries has information on the correspondence of concepts in two different languages  , and will be explained in section 6 .   ( Note that concepts are defined here by associating structures which are generally language dependent  . ) Figure 4 shows the contents of a word dictionary . 
A word meaning can be regarded as an entry to the conceptual knowledge description  . The LUTE dictionaries contain the following semantic information :  1  ) Semantic category ( for word meanings ) : Principal concepts associated with the word meaning  . Those for nouns and adverbs are used as selectional constraints in semantic relation analysis  . 
Those for predicates are used to analyse modality . 
2 ) Casefi'ame ( for predicate word meanings ) : Constraints and case relations which are applied to construct unit sentence semantic structures  . There are three types of ease frames : intrinsic for each predicate word nmaning  , common for several predicate word meanings , optional for outer ease relations . 
3 ) Noun relation frame ( for noun word meanings ) : Constraints and semantic relationships which ace applied to construct semantic structures made up of two nouns  . Case frames are also used as aldnd of object relation frames for predicate-type nouns  . 
4 ) Event relation frame ( for predicate word meanings ) : Constraints and semantic relationships to be applied to construct complex sentence semantic structures  . An example is the relation between the verb in a main clause and the verb in a subordinate clause  . 
5 ) Heuristics ( for semantic ategories and relation fi'ames ) : This is used for resolving ambiguity of semantic categories  , semantic relations , and semantic structures by linguistic information such N ~ oun-ielalot ~  .   .   .   . tri~ci ; on ca~se~rel--ati ~ on ; get:a-ctio~n ~ objec~t--actio ~ i-nst--ru--n , e , ;t~ ; ctio~n-'-Categories for-~ouns-a~lda verbs::  =  , - ~ a-ture ~ m-a-teriT ; ilnstri , , , ~;~ , ii .   .   .   . 
time-action location-action destination-action source-aetim ~ co-object-action manner-I society organization \[ cultllreibumanlaction l state \ [ number l degree lenmtion laction frequecy-action object-state action-location action-time action-result action-time l location abstract l concrete animate J plant I others degree I state ' object property-object possessor-object number-object material-object Categories for verbs : := voice active statlve movemental I transitional \] Iota  , on-object object . property object-element object-number object -location species-emotional I thinking perceptual existential judgen lental non-willing object lreative-location Io cat on-specificatio ~ time-specification human-relation noun-voic e ::= passive l affected-passive possible l sponraneous causative \] petfective I cative : := moment all continual suffix prefix-noun\[ parallell others Case relation : := OBJECT TYPE METHOD-TYPED fRECTION-TYPEJ TIME-SPACE -TYPE  1 stative : := ~ teiru\[-teiru Categories fo radlectives and adjective-verbs : := SUPPLEMENT-TYPE IMODIFICATION-TYPE  0 gJECT-TYPE ::= object Ico-object\[statem ent-object J compared-object I seconds ry-object I theme Jagent\[experiencer METHOD-TYPE : := method I instrument I material \[ element I cause DIRECTION-TYPE : := source Idestination I purpose I result \] giver I recipient 
TIME-SPACE-TYPE : := location J time
SUPPLEMENT-TYPE ::= Ocasion content role contrast region MODIFICATION-TYPE : := manner\[frequency degreet bingrate I number emphasis I truetf Embedded relation : := case relation \] relation that modified noun phrase modify case instance in tJmenl bedded sentence lapposition  . Event-result Conunctive relation : := condition right-affirmative causel purposel right assumption\[contrary-assumption contrary -affirmative l juxtaposition introducron pallar et me-relation before simultaneous after continuation limite cl-continuation l during I examplil T cation selection interrogative -contentslcitationlexplanationlspecificlnlinimal  . 
limit proportion degree I limit stative I characted stk\]relational I emotional Categor ies for modalities : := aspect : := beghlning just-before-beginning I just-after  . beginning I continuous I repetitive I perfective \ ] just-before  . perfective I just-after-perfective I perfecrive -state I others tense : := past present future modal : := negation possibility necessarity obligation I necessity I inevitability I favorability \[ sufficiency I guess I affirmative \] confidential-guessIuncertahl-affirn lative estimation guess uncertain-guess lhears ayl intention willingness I plan hope try causative secood-pels on command interrogative request I pernlission invitation third-person lcausative \] request I passive I spontanity \[ benefactive \[polite I respect Io  , hersmanner : := limited degree\[extreme-e xamplel stress lexan \] plification \] parallel l addition l selection uncertainty distinction others Fig  . 2 Semantic Relations Fig .   3 Semantic Categories as preference over several semantic relations  , semantic relation fillers , and remaining semantic relation fi'ames not yet filled  . 
4.2 Knowledge
Both comnmn . -sense knowledge and expert dmowledge are constructed using basic elements such as concepts  , ' elations and structures as well as linguistic structures  . Thus the non-lingulst lcknowledge manipulated in LUTI  , ; is not represented in a simple database fl ' amework but rather incorporated into the memory structure  . 
Althoughre . troy language processing systems use the term " knowledge " rather vaguely  , LU\[\['Itl gives a concrete form to knowledge in the sense of franmmet works corresponding to word meanings  . The current version of I , UTE defines the following types of knowledge in terms of semantic relations :  1  ) Concept Relation : Relations such as hyponymy , synonymy , antonymy , whole-part , and possession . One example is " whole-part " rehttion between " densha  (   ; ~ ii '-') ( train ) " and " made (~) ( window ) " . ( A window can be a parter a train . ) 2 ) Event State Relation : Relations between two events or between an event and a state  . One example is " subsidiary situation " relation that " nioi  ( ~ ~  )   ( smell ) " results from " yaku ( ' l ' ) '~ <  )   ( grill ) " . 
3) Meteknowledge : This is used for reasoning , such as in traversing the concept networks , and checMng semantic consistency according to concept networks  . 
4.3 Frame-Network
All information manipulated in LUTE is represented in a uniform frameworlt  , called a Frame-Network . F , ach type of lictiouary infer-marion such as semantic ategory  , case frame , noun relation frame , Entry Information ( Kanji-Code , Root-Form ) It actic I ~ form a ~ ion ( Part-of-~peeeh . Co~jugat~om type)\]on in_3 ? ? ? ? .   . 
-- IObi ~ cta ~, at , o , , ~ .   .   .   .  1~  .   .   . IObject Relation F .   .   .   . S\] --1 E ~ entaelation Framel\]"??\[Eventaelatio ~ F .   .   .   . t\]Fig ' . 4 Contents of dictionary ( nlono-lingual ) and event relation fi'ame is represented by frames with correspondlng frame names  . These fi'amcs consist of subframes representing semantic relation information  . Slots of a frame which represents semantic relation infermation contain information such as semantic category and cast particles stipulating the semantic relation  . An idiomatic expression between a noun and a verb is represented by a co-relation fi'ame  . This is the convention for sharing case slots in case Dames to yield an effective processing for case analysis and selection of word meaning  . These frames are also provided for each noun . 
II curisties are defined as methods ( daemons ) infl ' ames . The concept relation of knowledge can be represented by inheritance and semantic relation slots of noun relation fl ' ames  . Event state relation is represented by event -object relation fl ' ames  , and expressed in a word meaning of the e or responding noun  . Using this relation f Fame , semantic relations in a phrase , " Sakanaweyakunioi ( , ( rE";t'~~~ , ) ( Smell of fish grilling ) " can be analysed . Me , a-knowledge is represented as a procedure for unifying frames to select a word meaning  , inheritance mechanism , and methods in frames as well as heuristics . 
5 . Extended Case Analysis l , ' , x tended Case Analysis ( F , CA ) builds the meaning structure of a sentence which is expressed by timfi'ame work based on ECS  . The ECA integrates both syntactic and semantic analysis using Structure Patterns  . Analysis proceeds in , ~tmanner ill which , topdown structure prediction and bottom-up structure integration are intertwined  . 
Viewing the analysis from the standpoint of the activation of l cnowledge  , an expression activates a word , a word activates a word meaning , a word meaning activates concepts , and coneel)ts activate concept relations . We will describe the prccedure for analyzing Japanese sentences in the following sections  . 
5. lF low and Control in ECA
It is assumed here that the morphological analysis process has already segmented a sentence into a sequence of words  . The ECA procedure can be explained roughly as follows  . First , the ECA predicts a sentence structure in a topdown manner using Structure Patterns  . Second , it analyzes semantic structures for the predicted sentence structure using Semantic Structure Frames  , which describe constraints for integrating the substructures  . Finally , those substructures are integrated into a bigger structure  . These procedures are performed recursively for each level of constituent construction until an integrated meaning structure is obtained for the entire sentence  . When information concerning semantic structure frames or knowledge is missing  , the ECA does not attempt on m kea unique integrated meaning structure  . Rather it utilizes a variety of heuristics , thus making it possible to order multiple possible meaning structures in terms of likelihood or plausibility based on a score given to each meanings trueture  . A roughout line of this analysis is presented in Figure  5  . 
6 23 syntactic prediction meaning integration \[ unit structure \] ~  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . \[ unit structure ~\ [ phrase_ . __~structure ~- .   .   .   .   .   .   .   .   .   .   . ~ ~ phrasetructure\[~ord structure l --- ~ word  , tru~t  ~ , ~l
Fig . g Rough sketch of analysis flowt I is torieal information  , including both the success and failure of the processing  , is stored so that the ECA can avoid analyzing the same sequence of substructures in the backtracking process  . 
5.2 Structure Pattern
A structure pattern is a package of knowledge for predleting syntactic constructions between pairs of modifiers and modifieants among the constituent structures of a sentence  . Based on this prediction , an analysis procedure is invoked to analyze their semantic structures  . If this analysis succeeds , the modifier/modificant pair is integrated into a new unified structure  . 
Structure patterns are assigned to each structure type in the ECS  . An example of structure patterns for a unit sentence is shown in Figure  6  . 
A structure patterneen slsts of three parts : 1 ) the condition for applying the pattern , 2) the procedure for semantic structure analysis , and 3) newly integrated structure type . The first part describes whether this structure pattern can be applied to the structure sequence  . The second part performs a semantic relation analysis of the structure sequence which satisfy the above condition  . 
The third part describes the structure type to be produced by the above procedure  . A structure pattern might be viewed as a context fi'e egram nmr  ( CFG ) rule augmented with a semantic relation analysis . In this case , the condition part corresponds to the righthand side of the CFG rule  , the integrated structure type part corresponds to the left hand side of it  , and the procedure part can be seen as a procedure to derive the lefthand side from the righthand side  . 
5.3 Semantic Strueture Analysis
For each constituent construction predicted , the semantic relation between modifier and modifieant in the construction is analyzed using semantic relation frames  . Depending on the differences in structure types of the modifier h nodifieant pair  , different types of semantic relations can be analyzed  . In addition , the word meanings of the word structure and the categories for the integrated structure can also be analyzed  . 
Semantic relation analysis can be explained by the analogy of a key and key-hole  . A modifieant has a number of possible key-holes , and a modifier can be regarded as the keywhich can match it  . The procedure is to search for the best matching key hole for the key  . The shapes of keys and key-holes are determined by syntactic  ( case particles ) and semantic ( semantic ategory ) information . 
The score given to the integrated structure represents the degree of syntactic and semantic mismatch recognized in the integration process  . It is represented by a two-dimensional vectm ' , whose first argument is for syntantic mismatch , and second is for semantic mismatch . At each stage of analysis , if syntactic on straint is not pattern-name : usent-pattern-1 variables : ( case-instance case-particle sequence usent ) structure : structure-class = usent substructures : substructure :  substructure-label1  =  sub1 structure-class=case patterns = (  . case-instance ( restrict > case-particle case-particle p ) ) substructure : substructure-label2  =  sub2 structure-class = usent patterns = (  . sequence ( restrict > usent usent p ) ) semantic-analysis-function : ( case-analysis subl sub2 ) Fig . 6 Example of Structure Pattern ( Unit Sentence ) The argument with the prefix symbol * can match any n anlber of elements  , and the argument with the prefix symbol > can match a single lement  . 
624 satisfied , two points are added to the syntactic mismatch score  , and if it is satisfied by modal particles , one 1-mint is added to it . As for semantice on . ~traints , if they are not satisfied , two points are added to the semantic mismatch score  , and if they are satisfied through inheritance of semantic ategories  , one point is added to it . 
5.4 Case Analysis
Case analysis is the process of matching a ease instance and prototype ases in the case fl'ame and of selecting the best matched prototype case  . Then , the value of the case relation between the case instance and the predicate is determined to be the case relation of the selected prototype case  . 
A modifier element may have co-case slots . It is true that some modifiers are strongly associated with partlcular word meanings of predicate words  . I " or example , a verb " hiku ( iJI <)" has multiple meanings , and its exact meaning in a sentence is determined when it occurs simultaneously with object cases such as " kaze we hiku  ( ~ JN~~l < )   ( catch a cold ) " , " j is howehiku ( ~~ q~"~"~J\[< )   ( consult a dictionary ) " ancl " denwawehiku ( 7E ;  , ~ , ~ ~ I <) ( establish a telephone service ) " . When a modifier element definitely determines the word meaning of a modifieant element  , it is not efficient otest all possible word meanings of the modificant  . Therefore , if the same case slot is shared by both a modifier and a modific ant element  , the meaning which shares this same case slot is selected as the word meaning of both elements without analysing another possibilities  . 
5.5 Modality analysis\[8\]
The classification of modality information and the procedure for analysing thmn have presented in the reference thus we will describe here only the outline  . Modality analysis consists of the following three modules combined with case analysis and conjunctive analysis :  ( l ) Pro-ease-analysis : A modality which causes a change in the case structure is analyzed at this stage  . The case frame to be assigned to the predicate is modified by utilizing the result of this analysis before starting the ease analysis  . As for semantically ambiguous auxiliary verbs which are also related to the modification of the case structure  , their role is only predicted at this stage , and after case analysis , the likelihood of the prediction is evaluated . 
(2 ) Post-ease-analysis : A medaiity whose analysis requires case structure information is analysed at this stage as follows : a  ) If the category of the modality expression is unique  , this category is assigned to then maning structure  . 
b ) If a daem on ( a procedure to resolve ambiguities using heuristics  ) is attached to the modality expression , it performs the following three tasks : i ) disambiguating the category of then mdality word , ii ) determining the operational scope of the modality  , iii ) adding the implicative meaning caused by the modality word  . 
(3 ) Post-conjune tive-analysls : Following the conjunctive analysis between the subordinate clause and the main clause  , this module is activated to determine whether the medality in the main clause also operates on the subordinate clause  . For negation in the main clause , the transfer of negation is considered . ' resting whether or not the modifier event is subsidiary to the oceure nee of the main event is accomplished using the semantic relation frames assigned to the predicate of the main clause  . 
5.6 Determination of Word Meaning
Word meaning is an entry fl'mn a word to the conceptual network consisting of dictionary information and knowledge  . Since a word has multiple word meanings , it is possible that the word might have multiple entries  . The information available for the determination of word meaning is the accumulated situation  ( discourse information ) and the accumulated word meanings ( accumulated concepts )  . If no such information is available , a default value is borrowed as the most likely word meaning  . In the early stage of semantic relation analysis , tentative word meanings are assumed . These word meanings may not be accurate because they have heen determined solely by the local analysis  . It is possihle that some of the rejected meanings at this stage might be more a dequete as the exact word meanings for a given word in the context of the entire sentence  . Therefore , the system must retain all possible word meanings as candidates so that it can change the meanings after obtaining enough information to determine the exact meaning  . 
5.7 Determination of Category
At the st ; tge of building a meaning structure for a sentence  , categories for each constituent structure are also deterlnined  . 
Categories for a structure are usually the same as the categories of the head constituent  . But if a structure is exoe entrie , categories for the structure can be obtained by some operation on its constituent substructures  . For example , tile category for " omochano heitai ( Sg/5~~' ) 3 ~ t  ~ )   ( a toy soldier ) " is non-animate , although the category of " heitai ( > fgIN )   ( a soldier ) " ishmnan ( therefore , animate ) . 
In order to determine the categories of asmnant ically an a big v to us structure or a exoe entrie structure  , an attached procedure is invoked . 
For example , the Japanese noun " tame ( ? d & ) " is ambiguous because it has two categories , purpose and cause . To resolve this ambiguity , a daemon is invoked after the noun phrase containing " tame " is analyzed  . ' Phi , . ; daemon performs tile following heuristics : 1 ) If " tame " is followed lay both a ease particle " ni  ( l . =)" and a modal particle " ha (12) " ( that is , in ease of " tameuiha ( & a5 l = I ~)" form ) , the category is determined to be " purpose " . 
2 ) If " tame'i succeeded lay an embedded sentence and the predicate shows a perfective aspect  ( that is , the end part of tile embedded sentence contains the auxiliary verb " ta  ( t : ) " or " teiru ( -C ~' 7 o ) " )  , or the semantic ategory of the predicate is " state "  , the category is determined to be " cause " . 
3) Otherwise , " purpose " .
6. Transfer 6.1 Transfer Functions
Discrepancies among ECS's for different languages arise for several reasons  . One is essential in nature . We believe that syntactic information should be preserved as far as possible in FCS  . But semantically equivalent information is often realized differently in the syntax of different languages  . Conceputual systems are also different in different language communities  . These differences must be reflcct cd in BCS's . 
Transfer process should fill these gaps between the ECS's of two different languages  . At the transfer stage from Japanese to English , structures , relations and concepts in J-ECS arc transferred into those ing-ECS  . Since concepts and relations are integrated into structures  , the transfer of concepts and relations is performed at the same time as the transfer of structures  . 
6.2 Transfer of elements of ECS
In the course of the transfer processes , ECS's in the source language are converted by reeur sively traversing original structures from top nodes  , and creating corresponding target structures . So , the transfer process consists of transfering components of the ECS's  , i . e . , concepts that make up the ECS and relations which hold among them  . 
1 3ut there are cases which don't suit this scheme well  , and hence require special treatment . They are idiosyncratic to \ [ exical items and specific procedures have to be triggered by certain concepts included in the original struct m ' es  . Idiosyncratic transformations include : 1 ) delctlon : certain structures in the source structures are deleted and no counterpart structures are embodied in target structures  ; for example , e omt ~ ound structures are transferred into primitives truetures  , as in the transfer from " Sakanawetsuru ( , (( t ~"$"; . , . o ) " in Japanese to " fish " inl'haglish ,  2 ) addition : certain structures I hat have no counterpart in the source structures are added to target structures  ; for example , primitive structures In ' ot rans ferred into compound structures  , as in tim transfer from " Samid are ( . ItJ\]H:i ) " in Japanese into " early summerain " in English  , and 3) modifieation: . ~ ; our cestructures are non-trivially changed in the process of transfer  , as in the transfer 5'om Japanese adjective sentence " Jisuugae el ( : -~: ~\] / ~ gv , ) " into Plnglish " There are . . . " sentence structure , or types of input and output are different , as in the transfer from Japanese phrase " . . . suru to M ( . . . -4" ZaII ~' i , )"  ( " time " case instance ) into the English subordinate clause construetion " Whel ~  . . . " . 
The transferef concepts consists of 1 ) transfer of semantic categories , and 2) transfer of word meanings . A transfer dictionary for a pair of languages is prepared to give information on the e or respondence bt ween concepts in hoth languages  . An entry of the dictionary consists eratriad or fi'alnes  , that is , a source concept fi'ame , a target concept flame , and a mediating frame . Since concept correspondence is in general not one-to-one  , there may be several target concepts given one source concept and vice versa  . Mediating fi'ames can provide infm'mation on conditions to make it possible to choose auaong alternatives  . Concepts that would trigger idiosyncratic procedm : eslmve the information in the dictionary in the form of transferules  . 
Transfer of relations consists of transfer of four types of relations described in  3  . 3 . Correspondence information is also placed in the transfer dictionary  . But inforlnation on case relation transfer are stored as verbal concepts  , since they might be specific to individual verbs or classes of verbs  . 
6.3 Transfer process
The transfer process is essentially a manipulation offl'ame networks  . A rule-based system was devised to facilitate easy specification of the complex pattern of network manipulations  . Au example of the transferule is shown in Figure  7  . Similar to structure patterns , a transfer rule consists of three parts : a matching part  , execution part , and a return part . The matching part specifies the conditions under which the rule should be invoked  . It also contains variables , which are bound during matching process and the information will be passed to and used in the later stage when the matching is successful  . The execution part specifies the transfer of substructures and concepts  , value assignment o the variables , fnrther conditional branching , and other operations . Lisp code can he invoked in this part . The return part specifies the target structure that has to be construeted and returned on the basis of tile application of the entire rule  . 
(defrule J:USENT ( if ( self = ( J:USENT ( *verb ( varj-verb ) )*meaning ( varj-mns ) ) ( *mdaity ( varjmd ) ) ( * cases  restj  cases )  ) )  ( i-verb ~ ( J:WOR , D ( * stem-pos ( optional ( vat j-stem-type ) ) )   ) ) then lexec uocal r-toO ~ rest e-modif ) )  LISP ( cond ( l-stem-type ( set qr-fun#' ( lambda ( t-frm )   ( is a * t-ffm'T : noun-verb ) )  ( send*j-mns'put : '$ restriction r-fun ) ) ) )  ( j-mns->e-mns )   ( j-mod->e-mod )   ( ( ( for-all j-cases ) -> e-cases )   ( LISP ( and j-stem-ty Ro ( send*j-runs ' remove : $ restriction r-fun ) )  ( set qe-modi ( map can #' ( Eambda ( q )   ( and ( is a * q'E : Modifier-Clause )   ( neons q ) ) ) e-cases ) ) \[ setq e-cases ( subtract e-case se-modif ) )  )   ( if ( LIS Pe-modif ) then ( exec ( return ( ! E:CSENT e-csent ) ) where ( e-csent = ( E:CSENT ( * main ( !E : Predicate e-pred ) )  ( * mod\]fier-clausee-modif ) ) )   ( e-prod1 = ( E : Predl cate ( meaning e-runs )   ( modahtye-mod )   ( cases e-cases ) ) ) ) else ( exec ( return ( \[ E : Predicate e-pred 2 ) )  ,   , ? where ( e-pred2 = ( E : Predicate ( meaning e-mns )   ( modality e-mod )   ( cases e-cases ) ) ) ) ) ) ) ) Fig . 7 Example of transferule ( Unit sentence ) which adopts an " object-oriented " style of implementation for the frame network manipulation i the transfer process  . Transfer rules specifying how the network should he handled are written for each type of struct m ' es  . These are converted into executable forms , and attached to class frames of the structure as methods  . When the top node of the input ECS is given a " transfer " message  , corresponding methods in the class frame , to the instances of which the top node belongs , will be invoked and handle the network as is specified in the original rules  . 
7. LUTE Experiments
The LUTE is an experimental machine translation system between Japanese and English developed by applying ~ he investigations mentioned above  . The dictionary of each language has about 3000 entries . It has been implemented on a Symbell csL is p -machine by using ZetaI  , is p . The size of the system is 850KB of programs and 4MB of dictionaries and knowledge , LUTE was not deveIoped for practical use but to provide a part of the computer environment  , RESOLUTE ( Recl procal Envlronment for the Studyo_f Language  . Understander , ~ J_'ranslator & Editor) , on which theoretical works concerning computational linguistics can be examined  . As a result , IZ/"~SOLUTE contains many facilities form an -machine interaction via a multiwindow screen and consists mainly of a frame editor and facilities for conducting program executing  . In this environment , it is possible to pertbrm translation experiments such as analyzing texts  , transfering the meaning structures , generating phrases and sentences , developlng dictionaries , editing knowledge base and examining programs both separately and simultaneously  . For example , IUTE can regenerate a sentence of the
GBJg&glii ; ~? ti ~ l!~'lti~l ! ., i <) ib ~ .
lilffili~i ~ TqJgl@~5ILTZI)~b ~ .
~l ~ I/l  #ll ~ ~ iT@III@i5 15tll ) ~ b ~ .
source language , while showing the deleted parts in the source sentence  , from a meaning structure produced by the analysis of a source sentence  . Also , any intermediate representation can be modified to examine the transfer and generation as a whole or apart  . 
Since all of the data are represented in a frame network  , this environment system provides a general fi ' amework for frame-manipulation facilities  . A snapshot of the translation experiment is shown in Figure  8  . 
References\[1\]S chank , R . C . , and Abelson , tLP . Scripts , Plcms , Gor Es , and
Undertanding , LEA , t977.
\[2\] Minsky , M . L . , A Framework for Representing Knowledge , in The Psychology of Computer Vision , Winstonted J , McGrawliill ,  1975 . 
\[3\] Quill)an , M . , R , Semantic Memory , in Semantic\[nyorraatio ~ Processing , Min skyted . ), MIT Press , 1968 . 
\[4\] Nomura , II . , Towards the tIigh Ability Machine Translation , Joint Japancsed ' ~ urop can Work Shop on Machine Translation  , 
Nov . 1983.
\[51 Nomura , II . , I!' , xperimental Machine Translation Systems LUTI : , , Second Joint Japanese European Work Shop on Machine 
Translation , Dee . 1985.
\[6\] Shimazn , A . , Naito , S . , and Nomura , lI . , Japanese Language Semantic Analyzer based on an Extended Case Frame Model  , Proceedings of the International Joint Conference on Artificial 
Intelligence , Aug . 1983.
\[7\] ilda , lI . , Ogura , K . , and Nomura , tI . , A Case Analysis Method Cooperating with ATNG and its Application to Machine Translation  , Proceed h~gs of the \] 0th Interim ) tonal Conference on Computation all , inguisties , July 1984 . 
\[81 Naito , S . , Sblmazu , A . , and Nomura , i1 . , Classification of Modality Function and its Application to Japanense I  , anguage Analysis , Preeeedings of Association for Colnputational
Linguistics Conference , July 1985.
The child acquired the + cunc~p t of " ~ aSSo The child can solve the problem  . 
The child that acquired the cmmept uf mass can solve the problem  . 
The child that acquired the concept of mass c\ [In solve the_problem  , 
T2""' ? XY'"I
J 2USENT-99 -----* INSTANCE-OFSURLUEJ ~ USEMTXOLRSS ** VERB~qRLUE  JRNORD-583  -  IMSTRNCE-139 \]* CASE-CONVERSION ~ VRLUEREMTAI
J RORSE-361   1CASES SVRLUE JRSRSE-332 * MODRLITY - ~ J2MODRLITY-20 * SCORE ~ . (22) dL27 E . %oot
M~In . ~ t\]n~t
E~VERB-38* IRSTAMCE-OFIE20RSE-32 Remove . ~* POS:IMSTAMCE-OFNodify*MODRLITYCopy " atlon * MEANING * NAME Move  , MRRKER-I#STAMCE~E~e~xT\]i ~ Eqx*CASES* IMSTRMSEE ~ ~  6 n * UNFILLEO-INDISP * MRRKER-CmEGORYE ditOaemon Hack ~: Ty ~ QFILE ~  ervln9   LUTE-3600-4 Fig . 8 Snapshot of an experiment on the LUTE
