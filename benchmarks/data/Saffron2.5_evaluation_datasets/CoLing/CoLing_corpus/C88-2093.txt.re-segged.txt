Why implement o ~- ~ , ~~ fP ~ actic : fl NLP Systems Cannet Wail
fe ~' Li ~ guis ~ ie Th ~; or ~ cs
Remnrh.s and ' lr hescs
~) ie ~ marRecs ~ mr
c/o Project , GENES ~ S
GWI )0'4, ~)(~ livostro:~5
~) 6100D ~ vmstadt
W (;, u$(\]ermany
A ) The r~is no doubt ~ the idea of taking an acc < , ptedling ~ is ticghee . < ff ( lt ) a ~ the basi ~ of ~ he : L ~% ~ l ca ~ entation of ~ practical natara \]\]  , angu~gc~pz'ecessing(n\] . p ) system is ve ) ' fatix : active , , But t In rea l i ty there are no . I . iztguistic the o : < J , es available that may be , ' , ~ . imp\] . y " takenf:com the shelf " and applied in such a  woy0 
Some ~: easons for \[:. him
There is often a mismatch between the \]? roblems dealt with extensively in a given \]  , in guJstic theory and their frequency of cccr ~ rencei\[~real data ? On the other hand the chosen linguistic theory OKgran ~ aarmay tell you only little or nothing a botrt phenomena that are pm " edomina  . nt in your application ( e . g . large nominal 9 roups in technical texts ) , - ~ Practical systems need a substantial if : c , ot co~ap \] eytecoverage of the syntax of the nl they a yebui \]  . P for ? ~\[ ~ . general the language f <' agm < ants covered by l inguistic theories a  . renot ~ u ~_ f\[\[icJ . ent?- . Even if you a ~: eable to sta ~: t with . ~tructures . in accordance with a \] , inguistic theory when building a practical n\] . p system you will . have to augment the form a \] . is m~e , g 0 as soon as you have to prec@ssreal data and not only textbook cases a lot of conventional n\ ] a terial has to be taken into account as we\]  . l : format of dates ~ measurements ~ etc . 
.- )  , inguistic theories very often have been eztensively applied to problems ' taken from a specific nat ~ a \] language  ( in most cases . ~ F . nglish ) ~ To transfer those theories to other \] . anguages with different problems may be hard ( if not impossible )  . 
B ) Another difference between theoretical and ongineering problems lies in the fact'that bui lding a practical nlp system always forces you to take a lot of additional constraints into account that are negligeable from a theorist's viewpoint : 
Fo ~: the implementation , usage and maintenance of practical nlp systems dedicated software tools are needed e  . g . fox editing , debugging and update of grammars and lexica . 
Practical nlp systems are often evaluated by users  ( and ~: efereem ) that are non-linguists . 
,According to our exper ience those people tend to take"mupe ~' fi  . cial " aspects ' that have little OK no relevance for linguists as a basin for their judgements  ; eog ? i foK if ' not a system fo ~: German is able to handle umlauts correct \]  . yor how you may type into a system for japanese , Practical nlp ~- ymterns inevitably need a substantial \]  . exicon and - due to the generativeness of nl with respect to vocabulary-additional techniques for handling unknown lexical items  . 
C ) Someef the abeve helds especially fo ~: wo~kin nlgene ~ oation : - Linguistic theories are pr imarily concerned with aspects of  ( syntactic ) analysis ?\[ ~ omeef the hard problems for analysis  ( e0 g , ~?\[ I ? attacument ) are not equally problem at : i , c in generation . 
In general nl generation is an interdiscipl in ary task involving a lot of non  , ? linguistic decisions ~ D ) Theorists tend to ~' est ~ cict the istapp ~' oaches to the very techniques available with i ~ their theories  . In practical nlp systems it may be fruitful to f : ceely combine elea ~ ent ~ f ~ om distinct " Zinguistic schools " ~' the morphosyntactic frontend generator FREGE\[Emele  87\] is a case in point : ) ? REGE takes functional grammatical structures comparable to those from LFG\[Kaplan ~ B : cesnan  82\] ~ as input and working structures but provides means to specify constituent ordering as l in ear precedence relations similar to GPSG\[ Gazdar et a\]  . , 82\] o E ) What about the fol lowing analogy ; ~ #he relation between theoretical , linguistics and " language engineering " should parallel that between mathematics and  ( civil ) engineering ? F ) Linguistic theory might profit from problems attacked in practical systems as well because  ( as with mathematics and problems in engineering ) these problems may gi ~ emotivation for future research  . Practical wo ~: kinmu \], tilingual generation . ~, i . eo attempts to generate different languages from the same semantic structures-may for example give a new perspective fox ' work in contrastive linguistics ? To sum up  ; One should not wait fbr theoretical solutions since theory might not attack some problems unti l they are of practical relevance  . 
References \[ Emele 87\] ~ nele , M ? (1987) : " FREGE . . Ein ob J ektor ient ierter FRont-End-GEnerator " ~ in  K0 Morik ( Ed . ) "  GWAI-87 o-llth German Workshop on A~ctificial Intell igence " ~ Proceedings 
Springext-Verlag\[Gazdar et al85\]Gazdar,G . , ~: . Klein ~ G . 
Pullum & I . Sag ( 1985 ) ~" Generalized Phrase Structure Grau ~ ar " ~ Can ~ ridge ~ Ha~v ' ard 
University Press\[Kaplan ~ Bresnan82\]Kaplan , R . & J , Bresnan ( 1982 ) : " Lexical Functional Granuna ~' ~ A Formal System for Grammatical Representation " ~ in B : cesnan ~ J  . ( ed ?) (1982) . ~" The Mental Representation of Gra~m~atical Relations " r 
Cambridge ( Mass .): MIT Press
