
SERGEBOISVERT-ANDI~DUGAS-DENISEBI'LANGER
OBLING : A TESTER.
FOILTR`ANS FOR MATION AL'GK AMMAKS
~. INTRODUCTION
Transformational grammars have developed with recent research in linguistics  . They appear to be a powerful and explicit device for characterizing the description of sentences  ; they also meet conditions of adequacy that can be applied to check that a sentence  , or a set of rules , is wellformed . 
A transformational grammar tester is part of a strategy for the selection of a wellformed grammar matching the database  . To put it more explicitly , a tester of this sort should provide the linguist a class of the possible grammars which concerns precisely the linguistic theory  . These grammars have the form given by CUOMSKY in Aspects  ( see bibliogra IShy )  . 
2. GENERAL DESCRIPTION OF THE SYSTEM
O~UNO is a . program for dealing with the structures of the French language : it performs the verification of phrase structure rules  , the derivation of sentences according to the transformational component and the graphic illustration of the intermediate or final structures  . 
In the program , UNG is the routine that controls all the subroutines and the matching of the input structures with those allowed by the phrase structure rules  . If the matching is impossible , a comment is Acknowledgments . This work was supported in part by Canada Council of Arts grants  @69-0404 and @71-0819  . 
We are also indebted to the staff of the Computer Center of the  Universit4 du Qu4-bec  ~  Montr4al for providing computing facilities , and giving this project high priority . 
David Sankoff , of the Universit 4 de Montr6al , is also responsible for the first version of the tree editing program  , l ~ in a Uy , Joss dyne G4 rard help ed de bugging linguistic rules . 
122 SERGEBOIS VERT-ANDIL~DUGAS-DENISEBI ~ , / ANGERieeIIIItiIeletl Iilllll el Il Il Illll ~: o:  .  -*:- :
I i e e e e ~ .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~>  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 9= ~ z ?*, 0, ? ~ o: .   .   .   .   . ~ Z .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~ go
D ~ Ooa OOU d3 N1 zo .   . ~~3z O . ~ Zok 9b-O . ~3J
AT do : r = : ~ o0~3 qD_~?::u.0.tkNNN

U ~ ~ Uj ~( ~ ~ Z D ~ - ZNU d~d O
NWZDU ~
Fig . 1. Tree for an input sentence
OBLING : A TESTERFORTRANS FOR MATION ALGRAMMARS 123 made . Otherwise , the output gives the graphicillustration of the tree for this sentence  , or the input structures are immediately processed using transformational rules  . For example , General transformational rues are operated by a number of subroutines of which the main are explained hereafter  . 
3. GENERAL CAPACITIES OF THE SYSTEM
The system OBLING is divided into four parts : a main program LING  , the service subroutines , the phrase structure grammar tester and the transformational grammar testers  . LING and the service subroutines are stored in the central memory while the two grammars testers operate on disks  . 
The main program invokes the various linguistic rules and controls the application of these rules to the database structure  ( s ) or the derived structure ( s )  . The service subroutines are called by the routines concerning the application of the transformational rules and work in parallel with LING during the processing  . 
Phrase structure grammar tester " LING
Service ISubroutines ( processing memories ) 4--1~' grammar testers
Fig .  2 . The OBLING system 4 . SPECIFICCA PABILITIES OF THE PROGRAMLING The program LING will first initialize the working areas  . Then , it loads and operates the program V ~ rl CATEU ~ which  , after the reading and the verification of the input data  , returns control to LINe . 
1 24 SERGEBOISVERT-ANDI~DUGAS-DENISE BELANGER ZING will then load and execute  , using an overlay technique , the small control program scYcHQ1 , CYCLIQ2 .   .   .   . , cYcLIQi . Each of these handles , in conjunction with HNG , the mapping on the input structure of a fixed number of transformation rules  . In the current version of the program , cYctI Q1 deals with the linguistic transformational rules T1 to Ts included , cY cr IQ2 the rules To to T10 included , etc . The total number of these control programs cY crI Q depends on the memory space allowed  ; processing is most efficient if the number of these control programs is as small as possible  . 
5 . INFOR MATION PATTERN BETWEEN LING AND VERIFICATEUR When VERI~CATEUR  ( the phrase structure grammar tester ) is in memory , the structure to be analysed is read from the standard input unit  ( punched cards ) and is processed by the subroutine Cr~RB ~ to
LING v
V ~ ICATBD ~ c'z cLiqO?T
CKARBREARBRE verification printing of syntagmatic of the tree rules Fig  .  3 . The Vm~L~CAWSU a program ( see figure 1 for updated tree and structure ) OBLING : A TESTERFORTRANS FOR MATION ALGRAMMARS 125 be validated . This subroutine first checks if the phrase structure is consistent  , then call supeke which tests the names of the constituents describing the structure  ; finally , it compares this structure with those allowed by the phrase structure rules  . 
When errors are discovere during the processing , various sorts of comments are printed and followed if possible by a partial or full tree of the sentence  . When updating is done , the tree is printed and the program VER rFACATEUR passes control to LING  . The following illustrations concern first , the program VERIHCATEUR and second , an example of an updated tree and structure . 
6 . INFOR MATION PATTERN BETWEENLING AND THE TRANSFOR MATIONAL 
GRAM MAR TESTERS
Each time LING receives the control from VERIFICATEUR  , that is , when no further errors have been detected , it loops in order to call successively the monitors CYCLIql  .   .   .   .   , CYCLIQ9 which contain up 45 different rules ; we suppose that we are working now with a specific version of a grammar  . 
The first of these monitors has the following structure  . 
Transformational rule #1
Transformational rule #2
Transformational rule #3
Transformational rule #4
Transformational rule #5
Fig . 4. The cYcLIQ1 program
When CYCLIQ 1 gets control , it is botm d to the application of 7'1 ,  ?  . . , Ts which correspond to the first five transformational rules  ; then control is switched to LING which calls cYCLI  Q2  . The programs CYCLIqn process cyclic rules and the output structure is the input structure for the following rule  . When all the cyclic rules have been applied to the input structure  , LING starts over again at CYCLIQ1 . If no modifications 126 SERGEBOIS VERT-ANDR~DUGAS-DENISE BI~LANGER to the already processed structures occur  , or if new errors are discovered , control returns to LING . 
After all the cyclic rules have been applied , the post-cyclic rules are processed in a similar manner : cY cuqA comprises the first five post -cyclic rules CYCLIQ ~  , the five following , and so on . 
This chart illustrates the general interaction between the programs for the processing of cyclic or post-cyclic rules  . 
I_cYcI.tQ1cYcuQ2
CYCI , IQ 9
CYCLIQA

CYCLIQB cYC ~ iQiI

Fig .  5 . Flow of Control between control programs under the direction of LInG  7  . SERVICE SUBROUTINES They are implemented within the main monitor ZING  . All but a few of these subroutines are called during the execution of the routines corresponding to the  88 rules , that is during the phrase structure analysis or the mapping of n structures  . 
A short description of the main subroutines follows : ^ R  ~  ( tree )  . 
This subroutine is responsible for printing the tree  . At the input , we find a vector D of ND elements which represent she tree  . The horizontal distance for printing is calculated along with the total number and the relative position of these nodes  ; the vertical one is fixed . 
OBLING : A TESTERFORTRANS FOR MATION ALGRAMMARS
For example , fACHE ~2#
NOMRREDENOEUDS
NOMBREDENOEUDS
CHA/NE 1=$O ( . I ) 2 = LED ( 213 = ND ( 3 ) 4= VO (  ~ ) 5=$ D ( 5\]6=$D (  6 ) 7 = PRPD (  7 ) 8= OIJE O (  8 ) g : LEO (  91
I0 = ND ( IO ) 11 = VO ( ll 12 =$ D ( 12 ) 13: DETD ( 13 ) 14: DET 0 ( 14 ) 15: GND ( iS ) 16 = GVD ( 16 ) 17 = CD ( 17 ) 18 = GNO ( 18 ) 19 = GVD ( lg ) ~0 = PO ( ~ O ) ~ I = PD ( 21 = 2'0 = 13 = 15 = 16 = 20 = 21 = 17 = 17 = 16 = 18  ) = Ig=21 = 15 = 18 = 20 = 20 = 21 = 21 = - I ) =- IREGLE SIGNORFES SURDEN AND Et AIJ CUNES Fig . 6a . Representation f the tree in memory 7 . 1 . OT~(Remove) . 
This subroutine is needed when nodes are erased ; another subroutine , NEW TgF_~willerase the nodes . In the example below , oxv sets D (6) , D (7) , 9 (13) to zero , and NEWTREE erases nodes numbered 6 , 7 and 13 . 
If node 12 was also erased , OT ~ and NEWT ~ E would have erased node 28 automatically . The same holds for the node 32 , where all the nodes between 6 and 13 would have beenerased . 
7.2. DFER , DFERX , GFER , GFERX.
Except for a few details , these four subroutines do the same work . 
For example , Dr ~ RX\[I , J \] is applied to a structure J that has to be mov-ed to the right under a dominating node LAs illustrated below  , Dr ~ Rx\[31 ,   30\] moves the structure headed by 30 to the right under the node 128 SERGEBOIS VERT-AND REDUG AS-DENISEB ~ LANGER .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~  . 

IJ --: .   .   .   .   . ~ g .   .   .   .   .   .   .   .   .   .   .   .   .  9~ : :  .   .   .   .   .   .   .   .   .   .   .   . ~m : .   .   .   .   . ~ g .   .   .   .   .   .   .   .   .   .   .   .  ~ ~  .   .   .   .   .   .   .   .   .   .   .   .   . ~ z ? ? ? ? ? ? ~ : .   .   .   .   . ~ ~ w .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~  . 
~ Z ~ Z U wz mz ~ w z ~ ~ z ~ z m
Fig . 6b . Corresponding printed tree
OBLING : A TESTERFORTRANS FOR MATION ALGRAMMARS 129   .   .   .   .   .   .   .  ,  .   .   .   .   .   .   .  ,  .   .  ,  .   .   .   .   . ~  .   .   .   .   .   .   .   .  ,  .   .   .   .   . ~  . ~, ?????, cu ~ W ~ ud ~: .  "  .   .   .   .   .   .   .   .  ?  .   .   . o .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  ~  . 
=>  . ~> g ~ .   .   .   .   .   .   .   .   .   .   .   .   . ~ z  ~ zow .   .   .   .   .  '  . ~: ~ J .   .   .   .   .   .  ~ :  .   .   .   .   .  ~  .   .   .   .   .   .   .   .   .   .   .   .   . 9 ~? o .   .   .   . ~  .   .   .   .   .   .  ,  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  ,  .   .   . ~> Fig . 7a . Sample tree before OTE and NE wra ~ apply ~ z ~ wz ~ z ~ w z w z w z ~ o ~ w O ~ d  3NI 

O ~ Do H~N ~ ZD ~ ION
N~ddOD
HN ?

JI ? + o=~Do06 d
II~NN'I0~
O~DO 3~d   dO0 ~ AV~I"~~zz~dN"c~o 130 SERGEBOISVERT-ANDP~DUGAS-DENISE BELANGER ,   .   .   .   .   .   .   .   .  ,  .   .   .   .   .   .  ,  .   .   .   .   .   .   .  ,  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~ , 8~
U-?oo . oo ~ . oo * o ? --~: .   .   .   .   .   .   .   .   .   .   .   .  ~  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~ elost $    eset 0  teQoo ?"" ?" o ? ? o ? ?" Z ? ? ??? oJo:????oz ?????  . ~ :  .   .   .   .   . h ~ o : e .   .   .   .   .   . go .   .   .   .   .   .   .   .   .   .   .   . ~ o ??? . ??~?????--~? ? o .  ? ? , ? ? ? ? ' ? ?  .   .   .   .   .   .   .  ? ? ?  .  ? ? ? ,  .   .   .   .   .   .   .   .   .   .   .  ?  .   .   .   .  ?  . ? ?> m .   .   .   .   .  ? 0 ? ?  .   .   .   .  ?  .   .   .   .   .   .   .  , ? ?  .  ? ? ? ?  . ?*0 o?2~z **? ? .  ? ~ ? ? ? ? ? ? ? , ? ?  .   .  ? ?  , ???? o ??? ? o , ? ? o ,   , o ? -? , o , ~? ? o .  , ? ,  .   .  ? ? ,  .   .  ?  .   . o .  ?  .   .   .  ,  . oo . , ~~? q~L0 tn>uz
NgC Wgh.w
DX~02 ~ uu08 d
J N r a . = ~.. = oc : ~ o=-II cz
Frld0~3u ~. JmsnN
ION ado 0 . ~--uo . 3 Z : ~- d03 ~0 . N , u - ~-, x ~ .   . ~ h . ZNO " ~ cxo .   . ~-~ wl ??? ? oliN "? ~ NI cc~x'?W-Jcc II 
B-o . o_ngd~D ~> O_:E0 CGN Dr-o . J ~ : guJo_HnN : ? o . i . --  . ~ ~ u . x : ON
H~d,o3~d~dO:g:~~0dO3?~uJ.J~c
EZZo.~zzo--I +
O~D ? WWZDbJ.JO:_J,Xb.C~O.
Fig . 7b . Sample tree where oT\]~ and N~WTREB have applied OBLING : A TESTERFORTRANS FOR MATION ALGRAMMARS  131   31  .   ( Node 31 was created by rule T2 and DF~R was applied on the re-suiting tree ) \[ I ,  / \]
DFERX\[;r,j\]
GFR\[1, J\]
GRX\[I , j \] makes node J then ext younger brother of node I makes node J the youngest son of node I makes node J the next older brother of node I makes node J the oldests on in node I The general technique for these four subroutines i the following  . 
Before modification , the tree is copied in another area of memory . 
All the terminal nodes identified with the structure J take the place of the terminal nodes identified with the structure L Then  , the terminal nodes of I are requested in the copied structure and parsed with their dominating nonterminal nodes at the right place  . Gr  ~ R , permits the new numbering of the sequence and , if necessary , prunes the tree . 
In the example illustrated below ( Fig . 9a and 9b ) , Gr ~ R\[14 , 13\] is applied and node CPL ( 13 ) has been attached to node 16 , the father of node 14 . If GF~RX\[14 , 13\] had been specified , node CPL would have been attache directly to node  14  , rather than the father of node 14 . 
7.3. INTERV,
This subroutine is used for the permutation of 2 structures . For example , INT ~ RV . \[ I , J \] where I = 24 and J = 28 gives rise to the structural change illustrated below  . 
7.4. INSERT.
This subroutine is used for the insertion of a new terminal node  ; for example , INSERT\[4 , 1HE , 1HT , 1HR ,   9\] introduces node with name ETR which becomes a new so n of node  9  . 
7.5. Other subroutines.
There is a number of other subroutines concerning condition spec-ified within a rule  , such as the presence or absence of a node or of a feature in the whole structure  , the logical restrictions of loose equality or strict equality  . 
1 32 SERGEBOISVERT-ANDR~DUGAS-DENISEB\] ~L AlqGER  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . S . 
. ? ? o * ~ ? * ? ~ o ? i ~ ? ? ? ? * ? ? ~ ? ? * ? ? ~ Z ?  ,  ? ? ? ? ~ ? ?  ,  ? ? ?  .  ? ? ? ? ? ? ? ?  . ~??~~ W~?,??????* .  ? ? ? ?  .   . ???*???*? ?~? ~ W : ??~?????? .  ? ? ? ? ? ? ? ? ? ? ? * * ? ? ? ~  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~  . 
.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~ ? ? ? ?  . ???-????~ z : .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  ~ . ~ oi .   .   .   .   .   .   .   .   .   .   .   . 
.  .   .  ?  .  ~  .  ? ,  .  ,  .  ,  .   .  ? ? ~  .   .   .   .   .  ?  .   .   .   .  > ? ?  .  ?  .   .   .   .   .   .  ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? *  . z .   .   .   .   .   . ~_~~ ~~ :~> ~ ~ Z ~ W0~t dO ~ ~ g~3NI
II 177 d


H~d = l~d~ldO ? ~ wz~w ~ o . -INI?o-0-N 33flTd
IO HunbJz ~ h2.-J ~ N~d ~ o.o_
Od04"c3~a~zza-~x:~zo ~ codO3 ~ .   . ~- a:Q . ~  . - e ~? ? j ? ? .   .   . - aAVm~w~2w

Fig . 8a . Sample tree before GFER applied OBLING ~ A TESTER FOR TRANS FOR MATION ALGRAM MARS  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  ~  . 
d8 .   .   .   .   .   .  ~ * ~  .   .   .   .   .   . g ~> .   .   .   .   .   .   .   .   .   .   .   .  "~> :  .   .   .   .   .   .   .   .   .   .   .   .   . ~ z .   .   .   .   .   . ~ g ? : .  ,  .  ,  .  ~  .   .  ,  . o , ~ . 
: -- z ? ? ? ? ? ? m(?o ? ? ? ? ? ? ~ o ; . , - w .  ? ? ? ?  .  ? , ? ?  .  ? ? ? ,  . j .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~ ,~ :  . ~  .   .   .   .   .   .   .   .   .   .   .   .  ~ . ~  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 0  .   .   .   .   .   .   .   .   .   .   . ~  . 
. , ?  .  ?  .  , , ~  .  , ~ , , , ? , ~ , ~ , ?  .   .  , , , ~  .   .   .  ,  .  ?  .  ~  .   .   .   .   .   . ~g ~???, ??~? ?0?,??? .  , ? ? ? , ? ? ? ?  .  ? , ? ? ?  .   , ? mm ??? ,  ? ? ?  ,  ?  ,  ?  ,  ? ? ?  ,  ?  ,  ?  ,  ? ? ?  ,  ? ? ? ? ? ? ?  ,  ? ? ? ?  ,   ,   ,  ?  , ~ ~ z ~ z ~ z ~ - z ~ z ~ or -
OBd ? 4NI , oII
H3 . - I+H A Noz~ol OW3~d ~0 . oo . ( ~< P .   . ~ o(J = 0 zd OO . ~ IAV30"eUNO "
HN~*3NI o~x ~ oII0 ~ Ldz~W,J ~' . J ? : ~ h . ( l . ~1~3_4 fVld ~ AN

O~Z ~ OH ~ dh JZ ~ ~ J . Ja:~"~?~h . a . o . 3 ~ d~dOdO3,O~AV30"+o~-~oNO '* . -I ? ~ u .  0 .  0 . HN "

Fig . 8b . Sample tree where Grsa has applied 134 SERGEBOIS VERT-ANDRI~DUGAS-DENISEB ~ LANGER .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  , ? ,  .   .   .   .   .   .  ,  .   .   .   .   .   .   .   .   .   . 9~ :  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 9 ~ ? ~ ~ m ~ Z o O ~ l d
JNI
IInq d?ck ~ RNe . . . ozc , ~, ~ . ~ zw~g3aa~dO0=~dO3 . ~ t , . cLcL~AV 30"
Q.t-.-(.,.~O . ~2--)--ZNO"
O.C30.?J~v-.J0?J~~HN*
NH " ~ O_N ? U .   . ~  . : ~ o-AI " e3 oz~ha ~ zh4ha
Fig . 9a . Input structure
OBLING : A TESTERFORTRANS FOR MATION ALGRAMMARS 135 ~ i . i le ~ e e e e e $ l s e e e e e e e e e e ~ e , e , eee , e e ,   ,  ?  ,  ~ ?  ,   ,   , le , e , ? ? ~ Z ~ z .   .   .   .   .   .   .   .   .   .   .  -  . ~ z
II?-g . . . . . . . ~ . . . . . .
~ ? , ~? ? ? , 1 ? ?? , , ? ? ,  .   .  ? ~ ~ , ? ? ? , ?  .  , ? ? ? ,  . ?1 ~ ozJ ~ z
II~z~W33~z~wz~Id
WnN8~d3~d
HdOdO3-~AV30?

Fig . 9b . Output structure after cFm~has applied 136 SERGEBOIS VERT-ANDI~DUGAS-DENISE BIIL ANGER .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  ,  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~ ,
I i
J . ~ :  .   .   .   .  ~  .   .   .   .   .   .   . o ~? ~ .   .   .   .   .   .   .   .   .   .   .  ~ ?~ :  .   .   .   .   .   .  ~ ? ~ :  .   .   .   .   .  ~ :  . ~ ~ ?  .   .  ?  .   .  ,~  . 0 ,~?  .   .  ?  . ? mz ??~??? ,  ~ ?  ,  ? ?  ,   ,  ? ?  ,   ,   ,  ' ?  ,   ,  ~  ,  ~  ,  ? ? ?  .  , , , ? , ? , , , ?  .  ~
Fig . lOa . Input structure
O~d4 N\]
TTnq d
HnNzoH
HHd*dOC )0~:~0 ~ IAV
NO "_~ I.
'-) ~_N ? b -. ~- o:~no "






IOH~d3~d~dO
OBLING : A TESTER PORTRANS FOR MATION ALGRAMMARS  @@i@Ii@@I@@@@@Ii@I@ioII  iI@i Ii@I@Ii@kUII ~ leo ~ $ e ~ I o o $ o i @$ ~  .   .   .   .   .   . g .   .   .   .   .   .   .   .   .   .   .   .   . o , . ~  .   .   .   .   .   . ~ g .   .   .   .   .  ~  .   .   .   .   .   .   .   .   .   .   .   . R~~d

M-!~ed .  , , ?  .   .   .  ?  .  ,  .  , ,  .  ?  . , , , ?~ zo ~ .   .   . ~  .   . No .  , ?  .  , ~  .  ,  .   .   .   .  ? ?  .  ,  .  ?  .   .   .  ? ?  .  ?  .  , ,  . 
.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~> , ? ? ? ? ? ? ? ~ ?  .  ? ? ? ? ? ? ? ? ?  .  ? ? , , ?  . ??????? ~ z .  " -~ " ' ' - ? ? ? " ? " ' ' ' ' ? " ? " " " " " " " ? ' '~  .   .   .   .   .  ,  .   .  , , ?  .   .  ,  .   .   .   .   .   .   .   .   .   .   .  , ?  .   .   .  ,  .  - , ,  .   .   .   .   .   . ~? m2~N zm+
O~DO?moz ~ wzww~08 d ..4 NI
II
F m q d
IOnk4~d38d8dOdO : )
SAY 30"
NO "8N ?
NH " 4I-
FIO"dN "08 d3NI
II
H 3../f)ld

HSd 38,:ttldOdO3dAY :)0"4.





Fig . lob . Output structure after ~ ? r ~ v has applied 138 SERGEBOISVERT-ANDl~DUGAS-DENISEB\]~LANGER  :   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~ u_??,,*, ?0, ?, o$1,$1,,, .   .   .   .  ?  .   .   .   .   .   .   .   . ~ z > . 
m ~ Z .  ? , - , , , : ~ "  .   .   .  ?  .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ~, + oxx ~ O

Fig . 11 a . Insertion of a node ( before )
OBLING " ATESTERFORTRANS FOR MATION ALGRAMMARS 139   .  ? ?  .   .   .   .  ? ? , ,  .   .   .   .   .   .   .   .   .  ~  .  , , ,  .   .   .   .   .   .  ,  .   .   .   .   .  ~  .  =  . 
*** e e e o e o $ o o e ~ o e ~ x t n m o ~ o ~ ~ Z ~ W Z ~ S ~ Wm ??? 
Fig . 1lb . Insertion of a node ( after )   140 SERGEBOISVERT-ANDRI~DUGAS-DENISE BELANGER 8  . CONCLUSIONSOBJ-mC is a system which has been implemented in low-levelt OR-TeNIV for the CDC  6400  . It occupies 55,000s 60-bit words of memory . 
It has about 7000 lines of comments and instructions . 

N . CHOMSKY , Aspects of the Theory of syntax , Cambridge ( Mass . ), 1965 . 
A . Ducas , et al , Description syntaxique ~ l/mentaire du franfais inspir ~ desth/ories transformationnelles  , Montr6al ,  1969 . 
J . FIUE DM ~ , A Computer Model of Trans-formational Grammar , New York ,  1971 . 
D . LIEBER MAN , ( ed ), Specification and
Utilization of a Transformational Grammar , Yorktown Heights(N . Y . ), 1966 . 
D.L.LotrD ~, W.J . SCHO~N ~, TOT:
A Transformational Grammar Tester , in Proc . Spring Joint Computer Conference , Part I ,  1968 , pp .  385-393 . 
R . PETRICK , A Recognition Procedure for
Transformational Grammars , Ph.-D.
Dissertation , Cambridge ( Mass .), 1965.
J.R . Ross , A proposed rule of tree-pruning,
NSF-17, Computation Laboratory,
Harvard University , IV (1966), pp.

A.M .7. WICKY , J.FRIED MAN ,\] 3. HALL,
D.E.W.~a.g.F.R,The MrrRE Syntactic
Analysis Procedure for Transformational
Grammars , in Proc . Fall Joint Computer
Conference , Vol . 27, Pt . 1, 1965, pp.


