O . Abstract *
FROM COGRAM TO ALCO(~RAM :
TOWARI ) ACONTROLLEI ) ENGI , ISI\]f (; RAMMARCIIECKER
GEERTADRIAENS\[1, 2\] I ) IRKSCIlREIlRS\[21
\[11 Siemens-Nix dorf Software (' . enter LiSge , Ruedes Foric . s2 , 4020 Liege , Belgium \ [21 University of 1 , eaven Ceuter for Couqmtation all . iuguistics , Maria-There , siastra at 21 , 3000 Leaven , Belgium geert@et . kuleuven . ac . b c In this l ~ q ) er we describe the roots of ControUed English ( CE )  , the analysis of several existing CE grammars , the development of a wcll-lbunded lS0-rule CE grammar ( COGRAM )  , the elaboration of an algorithmic variant ( ALCOGRAM ) as a basis for NLP applications , the use of ALCOGRAM in a CAI program teaching writers how to use it effectively  , aud the preparatory study into a Controlled English grammar and style clmcker within a desk to publishing  ( ITI ~ ) ) environmeut . 
1. Introduction
The use of controlled or simplified languages for text writing is a controversial matter  , maiuly because it is felt as an attack of the writer's frec x lom of expression  . 
Still , we see more and more attempts to introduce control and simplification in file text writing process  , mostly integrated within intelligentext processing environments and complex NLP appieations such as machine translation  ( see 2 . for an short overview ) . There are at least two types of motivation that Imveledus and other researchers to pursuing this matter with renewed interesLFirst  , experience with largescale NLP applications that should be capable of handling a wide rouge of inputs  ( in our case , the METALMT system , used for the translation of technical and administrative txt  . s ) has shown that there are limits to fine-tuniug big grammars to handle semi-grammatical or otherwise badly written sentences  . The degree of complexity added to an already complex NLP grammar tends to lead to a deterioration fover all translation quality and  ( where relevant ) speed . On the other hand , simple pre-editing tools that e . g . help splitup overly long seuteuces into shorter mills  ( a very mildway of simplifying the inpu 0 have proved to lead to amazing improvements in output quality for the application of METAL in administrative txt translation  ( Deprez 1991 )  . In general , the avoidance of lexical , syntactic and stylistic ambiguities i believed to make machine translation or other NLP applications easier  . 
Second , there is a growing need in international industrial environments for standardizatiou and simplification of written commnnieation  ; the experience is that the language used in industrial documents such as manuals needs a thorough revision to be used efficiently by both native and  ( especially ) nonnative writers and readers . To ensure that the language of technical documents i unambiguous  , well-strnctured , economical and easily translatable , controlled language has been though to be the solution  , be it that this solution is The research reported m this paper It as been funded by 
Alcatel Bell in the period 1989-1991.
often proprietary to a company and hence difficult to access by the NLP re  , arch conmamity . 
In this paper , we report litongoing lesearch and development nfaCnll tollcdL:nglish graluular for technical documenlatioii  ( ctm rsl ; n laterlal and systems do cun lenlatiou ) ill the are + ( of telecomnninl cation . We started by examining three representative controlled grammars  ( AECMA , Ericsson , IBM ) . Fimling themiucmnplete and defective in numy ways  , we developed our own controlled gf anluar , COGRAM . Since such a paper gumnuar is riot the most motivaling of texts l br technical writers to use in tht:writing prtg:ess  , we dccided to restructure it in an algorithurie way  ( ALCOGRAM ) with an eyeto using it in a cmn pnter-aided language learning tooltonia moteanthititms grammar and style checking program  . The first application is finish ( ~laml currently being lest cd at the Alcatel-B cll company  , We ; ire ) alwdcsiguiug the checker for operation within the Interleaf I  ) TI'environment , which a h ca dy of l k ; rs integrated lud in mntaty lexical control . 
But let us stall by givilt gashm-t overview oi the history and current application  ( if controlled English iuthe NLP research ; rod the industrial communities . 
2. The rnots of Contrnlled English
The foundation lotmostel the current CEumnnals wa  . '- ; laid by the Catel pillar TractmCompany ( Peoria , Illinois , USA ) in the mido 1960s . This company ( currently still active in the CE field ) introduced Cater pillar Fundamental English ( CFE )  , on which two significant derivatives , i . e . Smart'st'lain Euglish PMgram ( PEP ) and White's International Laugnage l~nSc~ving and Maintenance  ( II ~ SAM ) were based . PEI ' gave birth to grammars used by Clark , Rnckwell International , and ltyster , while II , SAM can be considered the root of gramntars nscd by AECMA  ( Ass ( v , : ia don Eurol C , ~ enne de Constractears de Mat ( . ' ~ iciA ( ~ rospatial ) , IBM , Rank Xerox , and Ericssmt Telecramuuniea Lioas . Nowadays , actmsid crablenn mlr ~: l of variants of Cm flrolled English can be in md in many corporations  . In the USA , Boeing successlnlly uses an elaborate Simplified English Checker  ( SEC ) to control air craft maintenancer porls ( Wojcikctal ,  1990) . The Xerox Corporation uses Systran and ALPS in conjunction with a Controlled English input  ( Kingscott ,  1990) . In rile UK , Perkins Engiues introduced Pelk ins Approved Clear English  ( PACE ) to simplify their publications and to aid translation  , whether carried out by conventional or computer -aided methods  ( Pyre ,  1988) . At Woll ~ mn College in Cambridge E . Johnson developed Airspeak and Seaspeak , both restricted languages . Police speak is currently being developed tnACrEs DI  . : COLING-92 , NANI a!S , 2328 AO ( , q'1992595 I'ROC . O ~: CO l , ING-92, NANqI!s , Air(i .  23-21; , 1992 developed Airspeak and Seaspcak , both restricted languages . Police speak is currently being developed to enable fast and accurate communication with the French counterparts when the Channel Tunnel opens in  1993   ( Jackson ,  1990) . In the Netherlands , the BSO/DLT machine-based translation project also benefits from the linguistic confines and standardization fterminology  ( Vander Korst ,  1986) . In the French TITUS system , controlled language ( " Langage Documentaire Canonique " ) is used to improve machine translation of abstracts of technical papers on textile fabrics  ( Ducrot 1984 )  . 



Clark , Rockwell , Hyster


AECMA , IBM , Rank Xerox,
Ericsson , Boeing SE , Perkins
Engines , BSO , fDLT
Fig .  1 . The Controlled English heritage tree Since the abovementioned grammars have been adapted to the individual needs of each company  , they might-to some extent-differ from one another  . Unfortunately , we were not able to get bold of any grammar of the PEP branch  . Despite this limitation , three of the abovementioned grammars , namely AECMA , Ericsson English , and the IBM manual were taken as the starting point from which our research and development in the domain of CE could evolve  . 
3, Preliminary linguistic study
Although our study of 3 CE grammars does not claim to be exhaustive , it does reveal the structural dissimilarities between the AECMA  , Ericsson , and IBM grammars . 
Moreover , it underscores some of the qualities and deficiencies of each manual Concerning spelling  , syntax , style , and other information such as completeness and readability  . Whereas the English used in all three grammars is good  , the grammars differ in structure overtly . The following subsections summarize the study ( Lemmens 1989:10 )  . 
3.1 Spelling
Spelling word list new words allowed free compounding spelling checker 
AECMAERICS SONIBM yes yes yes no no no no no no no yes 
Grid1: Spelling
As to the lexical organization , all three manuals contain a controlled vocabulary list  . In particular , Erics son English uses a two-leve lexicon : Level 1 documents may only contain those lexical items that are marked  1  , whereas Level 2 documents can be edited using a more extended vocabulary  . In the IBM word list a marginal "!" symbol indicates that " the word has some restriction  , either a restriction to one meaning or a caution that the word is not at eight-gradelvel and should only be used with care  . " Other words are preceded by a marginal " X " indicating " a word to be avoided "  . 
All the words used in the three grammars must conform to the spelling used in the word lists  . EE prefers British spelling , whereas AECMA consistently uses American spelling rules as prescribed in the Webster dictionary  . 
Obviously , as they were inspired by individual heritage and international business matters  , each of these companies have taken pragmatic decisions that match their internal organization  . 
To check lexical terminology and spelling in its documents  , IBM supports its writers by means of three computer-assisted instruction programs : WORD 
CHECKERII , SPELL370, and PROOF.
The AECMA grammar reveals a remarkable degree of lexical flexibility : " Besides the words in the dictionary  , the writer can also use those words which he decides belong to one of two categories : either Technical Names or Manufacturing Processes "  ( AECMA : iv )  . 
Nevertheless , controlled rules tell whether or not a term belongs to the field of Technical Words or a Manufacturing Processes  . "Inhouse preferences " can be " defined in your company's house rules  , or by your editors " ( AECMA : vi ) . In a controlled grammar , however , you cannot deliberately add new meanings to the vocabulary list  , and transfer words from one lexical category to another  , e . g . the Erics songrammar demands that no new lexical items may be listed  , unless the Erics son Standards Department gives permission to do so  . Similar authority holds for the IBM DPPG Customer and Service Information  . Nevertheless , Erics son describes a special procedure for using non-listed words : " If you need to use a new word that is useful only in a very specialized context  , give a definition of the word in EE , in the document that you a rewriting . If you need to give several definitions in the document  , make an alphabetical list of the definitions at the end of the document "  ( EE : 8 )  . The IBM grammar restricts the use of new words heavily  . Writers can , if really necessary , use X-marked words , provided they have been defined and even illustrated in every line where they might be encountered for the first time  , and preferably in a glossary , as well . All three manuals allow noun clusters or compounds  , if the number of nouns making up the cluster does not exceed three  . 
Adding prefixes or suffixes to items listed in the lexicon is also not allowed  . 
3.2 Syntax
Syntax AECMAERICS SONIBM verb forms restricted restricted restricted subclause nothing limited very little grammar checker no no no tense distribution nothing nothing nothing linguistic basis weak weak weak descriptive little little little 
Grid2: Syntax
AcrEsDECOLING-92 , NANTI~S , 2328 AOUT 1992596 PROC . OFCOLING-92 . NANTES . AUt3 .  2328 . 1992 As to syntax control , Erics son English states that " the two fundamental principles of writing are : the memfing must be clear  ; the language must be simple " ( EE : 8) . 
Ericsson , AECMA , and IBM control more or less identical grammatical milts  , not with slanding each company has its own way of simplifying syntax  . All three grammars control verb to rms , but AECMA Simplified English ( SE ) does not allow either a gerund or a participle . EE only allows gerunds (" EE uses-ing words . . . as nouns to describe activities " ) and it " doe+s not use present participles or the continuous tenses "  . 
IBM in its turnlets file present participle function either as an adjective or as a noun  . 
3.3 Style
Style AECMAERICS SONIBM punctuation basic nothing basic sentence structure +/- little little paragraph structure basic nothing nothing 
Grid3: Style
Next to some element aryules of imnctuation coutrol  , the EE grammar does not lbcus on stylistic control  . 
AECMA Simplified English refers to some panctlmtion  , and it discusses sentence lngth , paragraph length , aml structure . IBM has a speciM Information Developmem Guidelines manual called " STYLE "  . It goes without saying that uniformity of style and layout eahances the overall quality of documents in coutrol lext language  . 
3.4. Miscellaneous
Other information AECMAERICS SONIBM checklist no no no completeness nou ono readability +/- ok good 
Grid 4: other iut on natio a
At times , one of the three grammars prol?lses . . besides a rule of control - valuable information  , which cannot be found ill the other two grammars . The AECMA grammar , for example , instrncts the writer how to change a passive sentence into an active one and states that no verbs should be left out to reduce rite sentence length  . In addition , one particular grammar sometimes does not contain a rule of control which file two others have : file Erics songrammar does not refer to control of articles  ; AECMA and IBM do not take into accouut subordinate clauses  ( except for controlling file participial adverbial subclause  )  . Still , although individually focusing on syntax control , all three manuals are incomplete : since EE considers but a few aspects of subordinate clause control  , the grammar eveals insufficiency and incompleteness  . " llmre are no satisfactory answers to questions uchas : What alx mt gapping and elliptic structures ? How about using zero-relative markers and zero-connectives ? Are sentential relative clauses allowed ? Caunominal relatives be used ? Tire rules of control are vague as  , hlr instance , in the EE statement " A comma divides a sentence into its a at matcompoueuts and makes it easier to read "  . What does " aataral COlnl Rr UPA IIIS " in eau ? Numerous examples of rules fllat are not well -defined or vague instructions indubitably cause confusion and lead to grmnmatical nt is takes  . 
3.. ~ Coll cllSi () ll
First of all , we concluded that " lheliuguistic l ( madation of these manuals are at times very weak : over simplification soth ~ nlemls to linguistic inaccuracies  ; frequently linguistic structures are not covered ; the instrnctious are at times vagtve , ' rod ambiguous ; and ol/en the rules disregard liuguistic reality "   ( Lemmens 1989: ill . 
Secoudly , in all three graim nars there is a lack of clear distinction between descriptive aud normative principles  . There is uo specification whether the sructmes to be avoided are uugrannnatical or simply non  . .coutrolled . Typical of tile three grammar sidienolmative " IX  ) not use " uleaning " Avoid " . Seldom-if ever-is dl is phrase used to show that the writer should not use a construction be can ~ it is ungrammatical  . For exanlple , tile rules for distributing " when " mid " if " do not laention file iucon ' eet use of " when " in conditional subclauses  . 
Moreover , sometimes descriptive information tw_ . ds to be included , e . g . alisto\[alternative constructious ill connu on English not to be used by the writers  . 
Onfortmtately , to guide the writiug of descriptive documents the rules set forth by the a hove ~ utentioned gralmums Imvetobe violated regularly  . To write a new CE gramnmrac lear distinction between the tales h  ) reditiug , on the one hand , basic instructive technical documents , aud , outhe other hand , " higher-level " descriptive docnments ( EEl . evel 1 and 2) will be tequhed . 
Consequently , " . . . it is not salficient o construct a new grmn marhy just melting together the three graummrs  , as was mentioned earlier . The new grammar should also be linguistically welL founded  , unambiguous , and , where necessary , descriptively a deqmlte "0 , ennnens 1989: I1) . 
4. Organization of the COGRAM project
Since the develolnuent ill the Controlled English grammar  ( C ( KIRAM ) o as it will be pre~nted in this pallet '- iiiaiuly consisls of two colnlJone lilS  , a word list and a grauuuar , a two-dimensional strategy has to be take u into iu : connt  . 
Outile one haud , alind to d lexical database is being develut ~ xl . A basic wold list containing 2000 terms has been constituted to Irensed in computer-aided language learning exercises  . Receudy , this list has been extended to a vocabulary package of approximately  50110 words . 
Moreover , auother 1000 tee huical Ix : ruls were added to make the e on trulted vocabulary mole complete  . Oathe other hand , rile fiehl of Controlled English has been studied to geacmle a select it mofad ~ uate granutlar rules tlmt pertain to multiple aspects of technical writing : lexical structures  , syntactic patterns , arid stylistic l (' . atnics . 
Both the lexical dalalmseaudtile grammar need to be integrated into a powerhd tool tiJ r writers  . To ensure that an inrodue tiou of the grammar at a company will ACRES  DECOLING-92  , NANTES , 2328 ho fzr 1992597t'ltoc , ol : (; OI , ING92 , NANTES , AUG .  2328 ,   1992 take place without many users psychologically objecting to Controlled English  , we have thought of illustrating the grammar rules by means of straight-to-the-point examples  , all taken f?om the users ' field of intelest . 
5. The Controlled Gramnrar ( COGRAM)
The development of COGRAM bas been partly directex l by a three foldivision into a lexical  , syntactic , and stylistic component . Most of the COGRAM rules can be characterized by the following three models : " Do not use X "  , " Use only X " , and " Avoid X " . At times " Do not use X"-rules are complemented with alternative suggestions  . Secondly , the difference between " Do not use " orules and " Avoid " ~ rules is fundamentaliu COGRAM  . " Donotuse "- rules mean " You must not use " , whereas the " Avoid " orules denote " Try not to use "  . 
Some cnlcial remarks to be made here are : How is each tylm of rule related to the others ? To what extent do they J~ed to complementoue another and how ? Unl brtunately  , a dilemma makes an adequate solution even more complicated  . On the one hand , from a pedagogic point of view it is not useful to add all nou-controlled lbmrs to complement a " Use only "- rule  . All grammar rules should be kept as simple as possible  . 
Moreover , file addition of non-controlled torms may cause coufosion on the side of the users  ; they might heeuticed to use non-controlled forms  . On the other hand , in view of NLP applications , it is necessary to consider all correct ( + ) and in con'ect ( - ) usages to develop a powerful grammar checker . The problems tlmt arise in regard to the modeling of rnles result from tile inability of exactly determining the users ' knowledge of non -controlled but correct English  , and Controlled English : What should the level of ram-controlled English be before one starc ~ mastering COGRAM ? In the following sections we will focus on each component internls of descriptive approach  , linguistic foundations , and structural organization . Each compooent will lie illustrated by a few COGRA Mexmuplcs  . 
5.1 COGRAM : The Icxical component
To guarantee that COGRAM would systematically cover all major lexical categories in English  , the grammatical division by Leech and Svartvik was taken as a starting point  . To create the initial frame of the grammar all ten lexical categories as described in tile Communicative Grammar of English  ( Leech 1987:307 ) were divided into four major word classes ( nouns , main verbs , adjectives , adverbs ) and six minor classes ( auxiliaries , pronouns , determiners , conjunctions , prepositions , and interjectious ) . All the rules applying to these categories were methodically brought together into the lexical component  . 
F , x . 1: Avoid splitting infinitives , unless the emphasision rite adverb . 
BOMtries t0accurate lylJ  ~ all the subassenth lies . 
+ BOMtries ~ all the subassemblies accurately.
Ex . 2: Use short infinitives of regular action verbs . 
Makeao hoto coov of the CAD graph.
+2~?d .. OA the CAD graph.
Ex .   3 : Use " a " before a noun beginning with a consonant sound for nonspecific reference  . 
Store all numerical information in database program  . 
+ Store all munerical inlormation in a database program  . 
5.2 COGRAM : The syntactic component
Beside the lexical component , a syntactic module , which controls coordination , subordination , tense , and aspect describes Controlled English sentence patterns  . It should be mentioned that during the development of the controlled syntax  , two computer-assisted writing programs , Grammatik 4 ( Reference Software International 1989 ) and Right Writer ( RightSoftInc . 
1987) , were analyzed to weigh pros and cons with respect to controlled syntactic patterns  . 
Ex .   4 : Write all instructions in a chronological order . 
Press the buttonon your fight , after you have set the switch to the middle . 
+ Set the switch to the middle . Press the button on yoar righ LEx .   5 : Do not use a participle to introduce an adverbial clause  . 
MIC manufacturing , electroplate the housings.
+ ~,~, . . MIC manufacturing to electroplate the housings . 
Ex . 6: Use only because , never since in a subclause of reason . 
a DBCS manages the System 12 database , physical storage is transparent to the users . 
+ ~ aDBCS manages the System 12 database , physical storage is transparent to the users . 
5.3 COGRAM : The stylistic component
The third subsection in the grammar comprises controlled punctuation and layout rules to organize textual material efficiently  . Extensive study of Kirkman's manual on punctuation added to the insight into the facilities of style control as well  ( Kirkman 1983 )  . 
Ex .   7 : Use a question mark only at the end of a direct question  . 
+ Is the component single-sourced or multisource ~ ? Ac : l~s~l~COI  . ING-92, NA ~ rES . 2328 At ) (; r1992598 PROC . OFCOLING-92 . NANTES , AUG .  2328, 1992
Ex .8: Do not divide words.
Ex . 9: Expound major tOlfiCS , restrict minra topics . 
6 . Test in t , and evaluating the prototype The prototype version of COGRAM comprised approximately  100 rules . To test file efficieucy of the prototype , we analyzed a technical text sample of 450 lines ( Schreurs 1989 )  . Because of its linguistic resemblance with other te Chltical text files this ~  , gment might be a suitable representation ( if the crucial grammatical problems to be discnssed  . 
In the Appendix , we show a shorte XC elpt front the uncontrolled base text next to its control k'xl cou ater pa~t ~ A preliminary remark involves the seniautics of the terminology  . During the revision of the smnple file several incomprehensible terms aud phrases had to Ix : decoded  . Since most linguist ~ are not technical experts , an irreproachable semantic revision couhl not be guaranteed  . This is a semanlic problcm ~ aud thus beyond the scope of this lexicosyntactic analysis  . 
Nonetheless , the English of the sample text had been revised ~ thoroughly as possible to test our prototypicy et controlled English grammar  . 
6 . 1 Summary of the sample text aaalysis In the ~ mple of  187 sentences 452 iuaccuracies wetc traced . This means more thau two errors per ~ ntellce on average  . Sixty-three percent are Controlled English mistakes  , 37% are common English errors . As to non-controlled English the lexical component reveal :  ; n noteworthy lack of precision : 17 % of all mistakes art ' , lexical , another 13 % cover spelling co'ors and in cotrcct abbreviations  . Concerning Controlled English 17 % nlall in accuracies pertained to punctuation : over use of brackets and slashes  , lack of clear tahular layouts and imprecise organisation of titles  . In additiou , the dispensable use of passive sentences that can easily ix ~  , active and the huge amount of wordiness ace other major problems  ,  6 . 2l ) is cussio a After examining rite analysis of the sample text throng h the COGRAM prototype  , we conclmled that the grammar was still incomplete and uot powelful enough to transform technical prose into fully controlled documents  . Ttle results , us shown above , do not reflect the linguistic contents of the docmneut in a realistic way  . Obviously , because tile roles of the proUity pewer e not explicit enough  , a lot of conslxnctions that were acceptable in Controlled English were flagged negatively  . The rule " Put a period at the cud of each syntactic unit "  , for instance , was not accn rateuong h . 11 led to flagging of all titles , heading , mid subheadings , which obvionsly do not end with a period . 
Consequently , the number of punctuation mistakes should be considered with can  ( ion . 
In general , this test exercise led to better controlled definitions of technical tcrms  ( the lexical compouent )  , and to more efficient , clearer and well-illustrated rules ( the syntacit ccomlx men 0 . 
7 . Au Idgol ' it hutic ( : or e ( trolled grammar After a number of ul~ated versions  , the invention and classilication of 150 grammatical rules ( COGRAM 1 . 0 It ) could function as a solid in lrastiucture from which auewst ng c in the development toward a grammar and style chc~kercan emerge : the organization of an algorithmic on  ( foiled grammar ( ALCOGRAM )  . The question to be answered i are gard to the logical organization of the ut ' ~ w grammar is twofold  . First , cau we keep I hethret M ' ol division ( lexical , syn"tactic , stylistic ) unchanged when storing 150 rules of control into role algorithm ? Secondly , hownmch will an algorithmics h'netn reaffect the adequate interaction aurong the componenls ?' lk  ) find a suitable solulion to the above-mentioaed questions  , the following tmragt'aphs will deal with tim internal structure of the 
AI~fY_RqRAM modules.
7 ol ALCO (; RAM : Algorithlnie Controlled
Grammar o?F ', laglish
With a neyeto NLI ' applicalions of COGRAM ( being just a line ~ mlisi of carefully designed rules  )  , a different organization of the rules had to be developed  . 
AI~COGRAMi ~ notamer eblcud of conveational coutrolled  /4xammar rules ; it is an algorithmieally organized grammml hat consists of fourm  ( xlule ~ seach cC , vcrillg particular asl ~ CkSo\[tile process of controlled w ~ iting  . ' l'hroa~hits division AI~COGRAM does not only operate at the word or sentence lvel  , but also takes into co ) ( side ) alienthe text u ' . ,fl orgauizafion of technical documents ; guided thai , storming ~ ules should be regarded as an initial text md infrastructure gradually evolving ttlward couitolled text  10rmat standards . 
The fimr-block swuctur cnfAI , CtKiRAM constitutes the el ) reofcoai ~' ollexl writing . ) Tulging from " conciseness " ovcl " exha- . textnality "11) " lay(m(and puoctnation " , lit ( ) Liter words , each level ill the grammar covers ~ vctalide as typical ot conholl cd writing  , which-in their hunarc ) c present cd by n \[ uunbt : r of lexieal , extm4extnal , nd stylemles . 
' /  . Ltt ? vepavattn'y Textual Control Algorithm ( PTCA ) Carehd Ic . dcouhol implies spt ~ cilicado of the initial stage  , from witch the limit exlaml exactly defined steps huve to be taken  . This starting point is to Ix ' . situated within aptet anatoiy phase , i . e ~ before the actual text is writteu . Wheltaie chnical wliter wants to write a text , guided brainstorming would be the solution to avoids nperliciality fioiutht ~ initial Vfiutin the process of wr ii in f  ;  . ~ n is segnt c . t of the algorithm is labeled Prep at z~h , y Textual Control Al ~ . or ithm ( PTCA ) . The tel'CA may entailiu hoductoly coutrol , coitla ' olthrough adequacy , w ~ it in ~ , control , paragraph control , aud cxanq , ic ~ muol , lit add it km , it generates a textual limnei ~! v , hk : hlh~z syntactic . COlnpOleltC ~ I opt , rate adequately . 
E : ~ . lO : Define ethnic alterats and acl'onymsilla ( lvla?c , l'mvideRtpafatelists of diemiull ppeadic~s . 
7 . /\[ . ? , FJy~ltl , letie Coidrol Algorithm ( SEA ) ALq'ESDI!COLING-92 , NAt'cres , 2328 AOUr 1992599iqt(~c , oJ:CO1 , llq(3 . .92, NAN rv;s , AlJo .  7%28 . 1992 The Syntactic Control Algorithm ( SCA ) controls , at a second stage , syntax in terms of sentence length , coordination and subordination , tense and aspect , A variety of syntactic units i . e . titles and headings , statements , direct and indirect questions are prepared for lexical control  . 
Ex . 11: single actions.
+ 7.1.3 Lexical
Write one instruction per sentence for
Inser the disk . Entery our pass word.
Control Algorithm ( LCA)
At the third stage , the Lexical Control Algorithm ( LCA ) operates on all major and minor classes : noun control  , verb control , adjective control , adverb control , auxiliary control , pronoun control , conjunction control , proposition control , and interjection control . The output of the LCA is a controlled lexicosyntactic unit  . 
Ex . 12: Avoid gender-specific language . Use a more neutral term . 
For information , contact our local salesman or sales woman . 
+ For information , contact our local sales manaeer ,  7 . 1 . 4 Micro Control Algorithm ( MCA ) Stage four aims at controlling particular micro features of the lexicosyntactic unit  , The Micro Control Algorithm ( MCA ) includes a . o . numeric control , reference control , series control , omission control , crucial term control , expression control . 
Ex .   13 : Use words for a number when it is the first word in the sentence  . 
+ v $_g ~ galggd lengineers developed a new high -quality expert system  . 
7 . 2 ALCOGRAM : General algorithmic structure In comparison to the paper grammar and its derivatives  , the three-block structure could not be kept unchanged : the stylistic component is not a separate unit in the algorithmic grammar  ; control of punctuation and style has been accurately merged into the textual  , syntactic , lexical , and micro control subdivisions . Moreover , the answer to our second question can thus be formulated : the link between the PTCA  , SCA , LCA , and MCA is definitely more compact , even more structured , and , as to the integration of the stylistic component into the algorithmic frame  , more functional . 
7.3. Flow chart example of ALCOGRAM
The following algorithmic sample has been taken from the SCA  . This part of ALCOGRAM controls adverbial subclauses  . If the users answer the questions generated by the algorithm correctly  , they will be given suggestions on how to control their adverbial subclaase  . 
What ~ of subordinate clause ?1 . adverbialz , relative J . nominal

What type of adverbial subclause ?
I 1 . time 2 . purpose 3 . condition 4 . reason 5 . concession 6 . result I7 . place !
What kind of condition ? . /- x , 1 . positive 2 . negative

Use unless
Fig , 4 Algorithmic grammar flow chart 7 . 4 ALCOGRAM & NLP applications : present and future  7  . 4 . 1 . Computer-aided Language Learning ( CALL ) When the controlled grammar ( COGRAM ) has been structured according to strict algorithmic principles  ( ALCOGRAM )  , the notion of applying a computer in the process of technical writing  ( CAI ) is obviously close . Consequently , a three-level ( beginner-intermediate - exper0 computer program has been developed that guides the writer through the algorithm by asking questions and giving suggestions on how to control a specific item  . The user can also retrieve information about linguistic terminology from the database by means of a popup-window  . The entire algorithm-25 files (2 , 5Mb ) which may run from MS-WINDOWS's Enhanced Mode- has been programmed and compiled in CLIPPER  , and linked by PLINK86 for IBM compatible 386 SXPersonal Computers . It is currently being tested at the Alcatel-Bell company in Belgium  , to assess both its completeness and usefulness as well as its degree of acceptance by technical writers  . 
7.4.2 Grammar/style checking
After the assessment period of the Controlled Grammar via the CALL application  , the next more ambitious tep will be the development of an intelligent grammar and style checking program for Controlled Language  . We are currently designing the ALCOGRAM checker in such a way that it can be fully integrated with the Interleaf DTP environment  ( which already contains a Lisp-based rudimentary lexical control  componen0  . It should be able to transform non-controlled lexicosyntactic units into controlled ones without substantially affecting the semantic ontent of the units  ( cp . Wojcik et al 1990) . Since the development of parsers and grammars for NLP application sia costly enterprise  , we will be looking at the potential integration of the METALMT grammar for English into our checker  . Experiments in style checking of German and Spanish using the METAL analysis grammars and the Frame Maker DTP environment in the context of the Translator's Workbench ESPRIT project  ( Thurmair 1990a/b ) have yielded promising results which we might use as a starting point  . 
AcrEsDeCOLING-92 , NA WrEs , 2328 no ( rr 1992600 PROC . oi:COLING-92 . Nnwres , AUG .  2328, 1992

Non-controlled input sample
Automatic test circuits
Special test tone circuits are often for eseen . When the test circuit is called , a test tone with the proper transmit level is returned  . When many circuits have to be tested the use of automatic test circuits is recommended  . They candial the preset number to connecto the special test tone circuit in the distant exchange  , and test each circuit for noise , transmission level , signalling , and answer supervision . The faulty circuits can be printed out , or alarm can be given to the technician . The test can be made not only from exchange to exchange  , but also throught and emex changes to the terminating exchange  . 
The automatic test circuit can also be used to test the LD equipmen L 
Controlled OU tlmt sample
Automatic test circuits
Special test tone circuits are often for eseen . When the test circuit is called , a test tone with the proper transmit level is returned  . When many circuits need a test , we recommend automatic test circuits . 
These circuits can : dial the preset number to reach the special test tone circuit in the distant exchange  ; test each circuit for noise , transmission level , signalling , and answer supervision . 
One can print the faulty circuits , or alarm the technician . 
One can do the test not only from exchange to exchange  , but also throught and emex changes to the terminating exchange  . One can also use the automatic test circuit to test the LD equipment  . 
Bibliography
Adriaens G . & Schreurs D .   ( 1990 ) -Controlled English ( CE ) : from COGRAM to ALCOGRAM ( presented at " Computers and Writing lIl " , Edinburgh 1990) . Leuven,
Center for Computational Linguistics.
AECMA ( 1988 ) -A Guide for the Preparation of Aircraft Maintenance Documentation in the Aerospace Maintenance Language  . AECMAS implified English,

Beeken J .   ( 1990 ) -CONST : Computer Instructed Writing Techniques ( presented at " Computers and Writing III" , Edinburgh 1990) . Leuven , Department of

Deprez F .   ( 1991 ) -TARZAN : pre - and postediting tools for rite METAL system in the administrative domain  . 
METAL documentation.
Ericsson (1983) - English Writer's Guide . Stockholm,
Ericsson Group.
IBM (1989) - Information Development Guidelines , " Content " , " Online Information " , Vocabularies for Customers and Service Information "  , " Style " . 
Jackson T . (1990) - Less is more , article in " Electric
Word "#19.
Kingscott G .   ( 1991 ) -Applications of Machine Translation : Study for the Commission of European 
Communities , Praetorius Limited.
Kirkman J .   ( 1983 ) -Point on Punctuation for Scientific and Technical Writing  . South Glamorgan : John
Kirkman Communication Consultancy.
Lemmens M .   ( 1989 ) -Controlled English Project-Preliminary Research  . Leuven , Department of

PymP . J .   ( 1988 ) -Prc-editing and the use of simplified writing for MT : an engineer's experience of operating an MT system  , ASLIB . 
PymP . J . (1990) - Simplified English and Machine
Translation , Perkins Engines UK.
Schreurs D . (1989a)-COGRAM , Controlled Grammar 1 . 0 . Leuven , Department of Linguistics . 
Sehreurs D .   ( 1989b ) -Grammatical Analysis of a DATACOM 2 sample through the Controlled English
Grammar COGRAM . Leuven , Department of

Schreurs D . (1990a ) - ALCOGRAM , Algorithmic Controlled Grammar 1 . 0 . Leuven , Center for
Computational Linguistics.
Schreurs D .   ( 1990b ) -Testing of teu Alcatel-Bell Abstracts through the Computer-controlled Interactive Algorithmic Grammar ALCOGRAM  . Leuven , Center for Computational Linguistics . 
Thurmal rG .   ( 1990a ) -Parsing for Grammar and Style Checking . In Proceedings of the 13th International Conference on Computational Linguistics  ( Helsinki 1990 )  , Volume II ,  356-370 . 
Thurmair G .   ( 1990b ) -Style Checking in TWB ( Translator's Workbench )  . Munich : Siemens-Nix dor f . 
Vander Korst B . (1986) - A Dependency Syntax for
English . Utrecht , BSO Research.
Wojcik R . , Hoard J . & Holzhauser K .   ( 1990a ) -On Creating a Practical Simplified English Checker  . 
Washington : Boeing Computer Services.
Wojcik R . , Hoard J . & Holzhauser K .   ( 1990b ) -An automated grammar and style checker for writers of SE  . 
Washington : Boeing Computer Services.
AcrEsDECOLING-92 , NANTES , 2328 AOt \] T1992601 PROC . OFCOLING-92, NANTES , Aua .  2 . 3-28, 1992
