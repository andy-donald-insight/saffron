I . REL English in Terms of Modern Linguisti cs 
REL , a Rapidly Extensible Language System , is an
integrated information system operating in conversational inter- 
action with the computer . It is intended for work with large or
small databases by means of highly individualized languages  . The architecture of REL is based on theoretical assumptions about human information dynamics\[I  \]  , among them the expanding process of conceptualization in working with data  , and the idiosyncratic language use of the individual workers  . The result of these assumptions is a system which allows the construction of highly individualized languages which are closely knit with the structure of the data and which can be rapidly extended and augmented with new concepts and structures through a facile definitional capability  . The REL language processor is designed to accommodate a variety of languages whose structural charaCter-istics may be considerably divergent  . 
The REL English is one of the languages within the REL system  . It is intended to facilitate sophisticated work with computers without the need for mastering programming languages  . 

The structural power of REL English matches the extremely flexible organization of data in ring forms  . Extensions of the basic REL English language can be achieved either through "  ,  . __ defining new concepts and structures in terms of the existing ones or through add i tion of new rules  . 
The REL dialect and idiolects
English is our primary mode of verbal communication  , therefore everyone has the right to know what someone else means by it  . We use the term " English " in its most ord in ary sense  , i . e . 
we bear in mind the fact that there really is no one English lan-guage  . Rather , the tern ~ English refers to as many idio lects as there are speakers  , these idiolects being grouped into dialec ts  . 
The REL English is one such dialect . It shares with natural lan-guage also the characteristic of being  , in its design and function-ing , a conglome rate of idiolects , which we call versions . 
Thompson's design philosophy of REL\[Z\] defines the theoretical basis for the assumption of individual  , idiolectal approach to the use of informat ion  . 
REL English as a formal language The second basic characteristic is that REL English is a formal language  . The characteristics of English as a fo rmallanguage are discussed in an earlier paper  \[3\]  . The central thesis of that paper is that Eng lish becomes a formal language when the sub ject matter which it talks about is limi ted to material whose interrelationships are specifiable in a limited number of p recisely structured categories  . It is the type of matter itself that p roduces the necessary limitations  . Natural language encompasses a multitude of formal languages and it is the complexities of the memory structures on which natural language can and does operate that account for the complexities  , flexibility and richness of natural language  . These latter give rise to the notorious problem of ambiguities in natural language analysis  . 
Arn biguities
What about ambiguities in REL English ? The purpose of I~EL English grammar is to prov ideal anguage facilitating work with computers  . It is thus assumed that the language is used for a specific purpose in a specific context  . Allowance for ambiguities at the phrase leve l  , with subsequent disambiguition through context  , is a powerful mechanism in a language . It is this aspect of ambiguity we wish to inc lude  . 
Ambiguities , in the general case and in our case , are due to different semantic interpret at ions  ( data structuration ) arising from different deep struc tures  . Ambiguous constructions are of two main types -   ( 1 ) those which are structurally ambiguous , e . g .   , ' Bostonships " is ambiguous over all relat ions existing between " Boston " and " ships "   ( builtin Boston , with home port in Boston , etc .  ) ; and ( Z ) those which are semantically ambiguous , e . g .   , ~location of King " if " King " can refer both to Captain King and the can be resolved by the specification of the relation  , those of the second type by inclusion of la rger context  . Chomsky's well-known example of an ambiguou sentence " Flying planes can be dangerous " is of the first type  ; Katz and Fodor's " bachelor " is of the second type  . The purpose of REL sentence analysis is not to find all possible interpretations of ambiguou sentences irrespective of context  . Rather , the purpose is maximal disambiguation where such disambiguation is possible in terms of semantic interpreta-tion  , providing for the preservation of ambiguit ies present in memory structures if the syntactic form of the query is ambiguous  . 
Nature of restrictions
How does our English compare with English as discussed by modern linguists ? On the level of surface structure  , they are essentially the same . Some more complex transformationally der ived strings  , such as certain forms of elipsis are not handled as yet  . However , most of the common forms are treated in as t raight-forward manner  . Although some constructions which can be fo rmed in natural conversational English are not provided in the basic English package  , such deficiencies can to a large extent be over-come by the capability for definit ional extension provided by the system  . 
The level of deep structure presents more prob lems  . As syntactic analysis which constitutes the input to semantic analysis  , both in Chomsky's\[4\] terms and ours . What is the nature of this semantic in terp retation ? In the general case  , little is known . In our case , as in most types of computer analysis , interpretation is in terms of the internal forms of organization of the data in memory  . To the extent that the constituents of deeps t ructure can be directly correlated with corresponding structures in the data  , semantic analysis , and there-fore sentence analysis , can be carried to completion . 
It is important to distinguish , in this regard , between two quite distinct though rela ted ways in which language use can be restri cted  . The first is by the ways in which the data is organized  , that is the structural forms used and the in ter linkages which are formed for the manipu lation of these structures  . This type we will call " structural " restrictions  . The second is by restrictions of the sub ject matter  , or the universe of discourse ; this we will call " dis-course " rest rictions  . When one restricts the universe of di scourse to a body of material which is natura lly formal or has been formal-ized  , one often tacitly accepts the structura l restrictions thus im- 
Iposed . To the uninitiated , it may appear that it is the discouse limit a tions and not the implied structural lim itations that make the material amenable to machine analysis  . However , it is the estab-data structural forms , rather than discourse restrictions that make computer processing of the semantic component possible  . Any content area whose data is organized into these given structural forms can be equal ly efficiently processed by a system establishing such interrelationships  . 
The restrictions on REL English area function of the first type of restrict ions  , i . e . , structural restrictions . Not all deep structures found in natural Eng lish are brought out by our analysis  , because constituents of these deep struc tures do not correspond to structural rela tions in the organization of our data  . 
For instance , " collections of boys " and " boys ' collections " are considered synonyn ~ ous  , although they are not in English . Consider : " At the fair , Isaw collections of boys . " and " At the fair , I saw boys ' collections . " Finally , a limitation in reverse , as it were , is the fact that we have emphasized the inclus ion of grammatical strings rather than at tending to strict insistence on grammat icallty  . 
Organization of the I%EL English grammars The REL English grammar consists of a syntact i c component and a semantic component  . The syntactic component consists of a We are indebted to Norton Greenfeld for many valuab leinsights and comments as well as for the excellent programming of a large portion of the current English rules  . 
6 set of rewrite rules , context-free and general , which build the deep structure Phrase- markers in the form of kernel sentences  , and a number of transformationai rules . The semantic component con-sists of semantic transformation rules acting on the memorys truc-tures of the databases  . The language processor , described in detail in the accompanying paper \[5\]  , builds a sentence analysis Phrase-marker . The sentence is interpreted by successive application of the corresponding semantic transformations in accordance with the parsing  . The application of semantic rules to the constituents of a complex phrase produces the interpretation of the phrase or  , if the phrase is semantically meaningless , an indication of that to the language processor . 
The parts of speech of REL English are given in Figure I  , together with examples . These parts of speech are inclusive terms for syntactic classes  ( labels on the parsing tree )  , and semantic categories ( memory structures ) . 
Function words , e . g . , al__!l,o__ff , wha_ . ___tt , are distinct from referent words ; the former are empty in the sense of not being associated with memory structures  . Other aspects of the grarn rnar , namely features , name and relation modification , verbs , clauses , 
I quantifiers and conjunctions , are discussed in detail in the remair der of the paper  . 
II . REL Data Structures
Structural Power of Language and Structural Power of Data 
Organization
The case of English as a programming language against other programming languages needs a defense  . There are obvious justi-fications . For a user for whom the computer is only a too l facili-tating interaction with his data  , English , being his natural mode of language communic at ion  , is a medium allowing maximum concen-trat ion on the problem itself by minimizing the need for concern with the medium  . The flexibility of natural-like language augmented by the extensibility of such a language provides a means for facile manipulation of existing data struc tures and for new concept for ma-tion  . We believe that a deeper justification l ies in the relationship between languages t ructure and data structuration  . There must exist a correspondence between the power of language and the power of data organ ization  . Given the following extreme alternatives :   1  ) highly formatted data 2 ) powerfully structured data 1 ) formatted desirable language 2 ) powerfully structured undesirable language the  1  )  - 1 ) and 2 )  - 2 ) combinations are optimal . 
undesirable desirable
The use of a flexible , rich language for work with highly format ted data introduces too many alternatives and ambiguities which may actually lower ef fi-ciency  . Conversely , the use of a formatted language for work with powerfully structured data precludes full and efficient exploitation of the organ ization of the data by imposing a restric ted medium of access  . 
RinG Structure of REL English Data Bases S ince effective communication requires the maximization of information  , the structuration of the process must be a compromise between the communicating entities -- in our case  , the human user and the computer . Ring structures are a very flexible med ium  , suitable for the organization of data on which natural language operates and formali zed enough to be amenable to manipulation by computer programs  . \[6\] The semantic component of REL English , mentioned above , consists of the interpretation part of the rules of grammar  . 
interpretation rules constitute checks on the ring structures  . 
take as our database the following envi ronment : l  ) 
Z ) 3) 4)

Let us
There are threeships : l ~ aru , Pinta and Nina . 
The respective locations of theses hips are : Boston  , 
Boston and New York.
Boston , New York and Chicago are cities.
The respective populations of these cities are  3205  , 11366 and 6689 , in thousands . 
Figures Z and 3 illustrate howring structures contain this environment  . Let us follow the serings . Links from the SHI Pring lead to Maru , Pinta and Nina . The arrow at intersection points on the SHI Pring pointing down and on the Maru  , Pinta and N in a pointing up indicate the class- member relationship : Pinta is a member of the class SHIP  . This exemplifies ring structures which relate classes of objects and individual objects  . The other type of ring structure are binary re lations between rings  . If we follow now the link from the Pintar ing through the location ring  , we reach the Bostonring . 
The relation of location holds between P in ta and Boston  , thus , in predicate notation , we can say : location ( Pinta , Boston ) . The symbols 0 ,   1 and 2 refer to the order in this relationship . 
Number relations , such as population , relate aring to a number : population ( Boston ,  3205) . They exist as links within the respective rings to which they refer  . However , the numerical data itself is in the ring to which it applies  . Thus one finds a referent to population on the Bostonring  ; and associated with the referent to popula tion is the data entry  . 
The structural methods used to handle the t ime aspects of time-related data are not di scussed in this paper for reasons of space  . 
Ring structures are also built during analysis of sentences and undone on their completion  . Thus in the processing of the sentence : l0 What are the locations of ships ? the semant ic transformation associated with the ' N - ~ R of N ' rule will build a scratch r ing of all locations of ships  , in the particular case at hand , Boston and New York . This scratchring will be inter-rela ted to the database in the same manner as perman entrings and thus will participate in further analysis in a straightfo rwardway  . 
Upon completion of the analysis and response to the given sentence  , the links to this scratchring and the sc ratch ring itself will be deleted from other rings of the database  . 
A second type of scratchring is a number r ing  , that is a ring all of whose entries are numerical data  . \] For example , the phrase : ' populations of cities ' wi ll result in the creation of such a number r ing containing the numbers  3205  ,  11366 ,  6689 . The syntactic result of ' population of c ities ' has part of speech U  , and the number ring feature ( discussed below ) designates the character of the under-lyings tructure  . 
Rules such as ' U - ~ average U ' , or ' U-~sum of U ' apply to number rings . New data can be entered simply from the conso le  , for example that the Santa Maria is aship located in Boston:def:Santa Maria := name I 
The Santa Maria is as hip'.
The location of the Santa Maria is Boston ~ Th is will result in the creation of a ring for Santa Maria and a 
Features and Their Functions
Features constitute an important and power fu l mechanism in REL  . We use the term in the general Cbomsky sense \[4\]  , but with some significant modific at ions  . Some aspects of the operation of features from the point of view of the language processor are dis-cussed in  \[5\]  . Summarily , the role of features is subcategorization , determination of syntactic constructions and order of syntactic groupings  . 
( a ) There are only two semantic features in the present REL English  . The tense character of the verb is a feature as s igned to the individual lexical item  . The feature distinguishing a number ring f roma number is assigned to a data structure which in a sense is also treated as a lexica litemin sentence analysis  . 
Co ) Morphemic features subcategorize syntactical lyparts of speech  . These include the Nominative/Possessive and Singular/Plural subcategorizations of Nouns and Relations  ; and the Singular and Participle subeategor izations of Verbs  . Morphemic features often function as precedence markers as well  . Thus checks on Nora . /Poss . and Sing . /Plural features force the following pars ing :  (   (   ( small ( computers ) )' )   ( word size ) ) excluding such parsings as : ( small (   (   ( computers ) ' )   ( word size ) ) ) used as an auxilary . Once set , it signals other routines to appropri-ate ly handle subject and object  , essentially keying the passive trans-fo rmation  . The negation feature on the verb is set by " not " and its contracted forms  . 
( d ) Precedence features . The remaining features determine the applicab ility of rules and the order of their appl ication to form syntactic groupings  . OnN and R they are : determiner--which prevents further modification e  . g . the the ball , big the ball , are excluded . 
phrasal--which prevents the application of certain morphemic rules to a syntactical ly modified phrase  . 
pre-modification and post-modifica tion--which cause the following consti tuent analysis : e  . g .   ( the ( dentist ( so n of ( Sally Smith ) ) ) ) not : ( ( ( the dentist ) son ) of ( Sally Smith ) ) They a lso a re used to ma inta in para l le l construction in conjunctive phrases  . 
e . g .   ( ( JohnWs son ) and ( Mary's daughter )   ) not : John's ( son and ( Mary's daughter )   ) while: ( Mary's ( uncles and aunts ) ) not : (   ( Mary ' suncles ) and aunts ) On the V phrases , right modification and subject features play a modification must be completed before the subject can go on  . 
e . g .   ( John ( ( ( will marry ) Joan ) before 1970 ) ) not : (   ( John ( will ( marry Joan ) )  ) before 1970 ) The importance of precedence features is that they sharply curtail redundant parsings  . Thus the rules :
N-~Ns N-~NN
N-~N's N-~theN gives even parsings of the phrase ' the boy's dogs '  . The feature checks eliminate all but one , namely : ( the (( boy's ) ( dogs ))) . Since these feature checks are made by the parser at the earliest possible moment  , they provide a very efficient and effect ive control on redundancy  . 
14 f .
III . Building of Linguistic Structures
Name Modification
A " name " refers to a class or the individua l members of a class in the ring structured database  , a " relation " to a binary predicate . 
Name modification constructions consist of a name as head and one or more modifiers  . Modifiers are : determiners , relations , and other names . 
The indefinite and definite articles comprise the first class  . 
Their functions are complex , and an adequate discussion would go beyond the scope of this paper  . 
Relations can function as pre-modifiers and post-modifiers  . 
Accordingly , there are two different syntactic const ructions  , which we treat in REL as synonymous : " locat ion of John " and " John's location "  . 
Figures 4 and 5 illustrate the application of such ru les  . 
Relation Modification
We distinguish between two types of relat ions  , primitive and complex . A primitive R directly designates an associated ring structure  . A complex R designates a list structure consisting of constructions which build a complex relationship out of primitive ones  . The process of building this list struc ture is referred to as together with grammar rules for relation modification  . Semantic transformations for name modification rules recursively resolve this list structure  . For example , in the analysis of the phrase :
John's male child's location " Male child's location " gives rise to the cornplex R : composition\[modification\[male  , child \] , location \] . 
Then the name modification rule is applied to : " John's R "  , whose semantic transformation expands the complex R  , developing the location of each " male ( child of John ) " . 
Relation modification plays an important role in definitions of complex concepts  . It is employed widelyine levating lanEuages beyond the base level of primitive relationships  . This can be exemplified in family relationship situations  . For instance , given the " parent " and " identity 9' relations as primitive , the following series of definitions introduces the relation " uncle ": def:child : converse of parent def:son:male child clef:sibling: child of parent and not identity def:bro ther : male sibling def:uncle : brother of parent Relation modification also p lays an important role in building complex definitions involving number relations such as area  , GNP , salary , etc . Consider the definition : Complex relations of this sort function in such expressions as " Average per capita area of nations "  . 
The Verb
We are accustomed to the traditional definition saying that a verb denotes an action or a state : an action is performed by a nactor  ( subject ) on an object , a state is a momentarily or permanently frozen action between subjects and objects  . Thus , an action , in this inclusive sense , is characterized by ( i ) the aspect of beginning , ending , duration or momentariness ; ( Z ) by its situation in time , and (3) by referring to subjects and objects . Two groups of verbs may be distinguished : those referring to a relation between subjects and objects  , and those which establish a connection between them  . The relation expressed by a verb constitutes ( and is here referred to as ) its ' predicate ' ; such verbs are called relation verbs . Relation verbs also express temporal aspects of a relation  . Typical relation verbs are " arrive " and " leave  "  ; both refer to the relation of ' location ' ; " arrive " refers to the beginning of the existence of this relation  , and " leave " to its ending . For instance , " John left Boston " means that the relation of ' location ' existing between John and Boston came to an end  . Verbs which express a connection between subjects and objects are referred to as copulas  , e . g . " is " in " John is a boy " . 
The copula itself constitutes the predicate.
171. Relation Verbs
Each of the four following sentences contains , in surface structure , a different verb . 
(1) John arrived in Boston.
( ii ) John left Boston.
( iii ) John lived in Boston.
( iv ) John is residing in Boston.
The underlying structure of these sentences is identical : ' location  ( John , Boston ) ' , except for the temporal aspect of this relat ion : beginning in  ( i )  , ending in ( ii ) , momentariness in ( iii ) and duration in ( iv ) . In REL English , the temporal aspect is denoted by the ' tense character ' feature  . 
Verbs are introduced through language extens ion  . They are defined in terms of a relation and a tense character  . The relation must denote an already exist ingring structure  . Thus , given the relation of " location " , the verb " arrive " is defined by : def:ar rive : verb  ( location ,  1) . 
A verb is internally represented as a " verb table "  , with part of speech V . In the verb table for " arrive " , ' location ' is entered as predicate and '1' as tense character , indicating beginning . 
Initially , the verb table is assigned the present tense , or ' now-hess ' . This can he subsequently modified by verb morphology  , 
Z . Copula verbs
Copula verbs have a verb table which has a copula predicate and  ( at present ) no tense character . The copulas are : " is " , " are " , " was " , " were " , and their contracted negatives . For example , the rule ' C -* was n't ' will result in the creation of a verb table with a copula predicate  , time equal to past , and the feature of negation . 
3. Verb table modification
The elements of a verb table correspond to the elements of a kernel clause  ( i . e . one with a single deep structure Phrase -marker  )   . 
They are : subject , predicate , object , tense character , and times t l , t2 . The subjects and objects of the kernel may be N  ( names ) and U ( numbers . The predicate is a relation . The types of the tense character are discussed above  . The times on a verb table indicate a point or interval within the span bounded by past  ( 0 ) and future ( ~ )  . 
Thet 1 and t 2 either both specify a single point or bind an interval of time in which the event in d icated by the clause takes place  . 
REL verbs are marked by three regular inflect ional mor-phemes : past tense  , past participle , and 3rd person singular . 
The function of inflectional morphemes and auxiliary verbs is twofold : modific at ion of the original time in the verb table and setting of syntactic features  . For example , the past tense morpheme and the auxiliary " did " modify t  1 to be past , thus establishing the time fiest 2 to be future , thus establishing t1 = now , t2 == ;   3 rd person singular and auxiliaries " has " and " does " set the singular feature  . 
Time modifiers ( M ) further modify the verb table . They origi-nate from prepositional time phrases  , e . g . " before 1960 ~ v , and sub-ordinate clauses , e . g . " before John arrived in Boston N . The times of the original verb table ( or as modified through the past morpheme and /or auxiliaries  ) are further modified so as to be in accord with time modifiers  . Thus , in the sentence " Will John arrive before 19707   , t the verb table for " arrive " hast l , t2-now ; modification by " will " changest 2 to ' ~' ; modification by " before 1970 ' ~ changest 2 to '1970'   , thus resulting in the intersected time in terval ' between now and  1970'   . 
Subjects and objects are inserted in the verb table upon appli-cation of the rules  :   ( i ) V -* NV ( rule putting subject on )   ( ii ) V-*VN ( rule putting object on )   ( iii ) V-*V by N . 
These rules also check whether the passive feature is on  ( set by copulas forming passives )  , and if it is , rule(i ) converts the N into an object ; rule(ii ) converts the N into a subject ; rule ( iii ) applies only if the passive feature is on and converts the N into a subject  . 
Number subjects and objects do not participate in the passive trans-Negation is handled by a feature on the verb table  . It is set by rules processing " not " with copulas  , both in isolation and contracted , and rules processing " not " with verbs . They differ syntactically in the posit ion of " not "  . If the negative feature is already set by a pre-vious rule  , the result is positive ( i . e . double negatives turn into a positive ) . 
Let us consider an example of verb table accumulation  ( figure 7 )  . The development of the verb table shows the successive modifi-cation due to the verb rules which have applied  . The parsings reflect the use of features wh ich eliminate some possible parsings which are incorrect or irrelevant to the analysi s  , and determine the order of parsing . 
Clause Processing
The accumulated verb table constitutes the input to the clause processing routine  . The verb table may be either complete , i . e . 
have all its positions filled , or else have subjects or objects missing . 
The clause processor completes the verb table if necessary  , and returns it together with a list of t imes for which the clause holds  , and another list of times for which it does no ~ hold  . The results of the clause processor are subsequently used by the sentence rules to produce output  , or by the subordinate clause rules . 

Sentences are clauses plus sentence delimite rs--in REL English  , these are initial capital letters , and terminal question mark or exclamation mark  . Accordingly , we distinguish two types of sentences , questions which interrogate the data , and commands which modify it . 
The rules for handling questions are : ( S stands for sentence , 
K for capital letter )   ( i ) S-*KV ? Did Stanmarry Jill before 1950? ( ii ) S-*K what/whoV ? Who are the Smiths'chi ldren ?  ( iii ) S--KM ? When did John arrive ? Rule ( i ) results in a yes/no output depending on whether the relation holds at the spec if ied time  . Suppose the verb table is given us predicate spouse subject St an object Jill tense character begint  1   0 t 2   1950 Suppose also the data show that Stanmarried Jillin  1948  . Since 1948 is within the time interval '0 to 1950'   , the answer will be affirmative If the input is a negative question  , we use the time for which the relation does not hold  . 
The output of rule ( ii ) is one or more Ns . These are supplied by the clause processing routine as either subjects or objects  . In example ( ii ), subjects are supplied . 

The output of rule ( iii ) is a time ( or time list ) at which the relation indicated in the verb table holds  . 
The output may be ambiguous . For example , " Did Smith live in New York ?" would resu lt in both " yes " and " no " as ambiguous output if " Smith " referred to one Smith who did and another who did not live in New York  . " Who is Stan's sister ?" would have ambiguous answers if Stan had more than ones i ster  . 
The output is a Vacuous Description if there is no valid seman-tic analysis of the query  . For example in the sentence , "What is the income of the present king of F rance ? " the phrase " present king of France " is a vacuous description in terms of our data if the data contains factual information on present-day France  . This aspect of the analysis is not expli cated here for lack of space  . 
The second type of sentences , commands , are used for adding or deleting data . The rules and corresponding examples are : ( i ) S-~KV  ~ John is a boy ~ Sally lived in Bostonafter  1950!   ( ii ) S-~KR of V ~ The location of Sally was Bostonafter  1950'  . 

The income of John is 10000 ~
The data is deleted if the verb table has the negative feature set  . 
There are two restrictions on the above ru les : the subject of the table in  ( ii ) must be a copula . 
The structure of the input sentence determines the structural relations to be establi shed between items in the data  . 
Subordinate clauses modify some item in another clause  , or another clause as a whole . In REL English , clauses of the first type are always rela tive clauses  ; they are introduced by the pronouns " who " , " which " , " that " , " whom " and " whose " . Clauses modifying other clauses are temporal clauses introduced by " before "  , " after " and " when " , and result in time modification . 
Examples of relative clauses : ( i ) N - ~ N who V Did the boy who left Boston marry
Jill ? ( ii ) N -* N that VW as Bost on the city that Johnle f t ?  ( iii ) N-*N whose RVD id the boy whose father left Boston marry Jill ? Verb tables represent ing relative clauses are completed using the noun which the clause modifies  . Thus in ( i ) the N is used as the subject of the verb tab le  , in ( ii ) either as subject or object . In ( iii ) the N for which the relation R holds is used as subject or object  . 
Parallel to the above rules are rules with a comma preceding the relative pronoun  . However , the rules with commas apply only For instance  , " parents of boys who left Boston " can be ambiguous  ; in our English , the relative clause refers to " boys " , while in " parents of boys , whole ftBost on " the relative clause re fers to " parents "  . 
Examples of temporal clauses : ( i ) M-~before V Did John marry Jill before Ji ll left 
Boston ? ( ii ) M " ~ when V What was John's income when Stanl ived in Boston ? The output of rule  ( i ) is a time modifier with the time in tervalt  1  =  0  , t 2 = date specified by the subordinate clause . In the subsequent analysis these times are compared with the times on the main clause in the same way as time modifiers such as " be for e  1960  . " For instance , let us assume that John married Jillin 1950 and that Jillleft Boston in 1955  . The output of rule ( i ) will now be the interval '0 to 1955 ~ and the times to be intersected are '0 to 1955' and 1950: o .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . ? The result is , obviously , a " yes " answer . The output of rule ( ii ) is a tense modifier with the time in tervalt  1 - t 2 -date specified by the subordinate clause . 
Quantifiers
By " quantifiers " we refer to " all " , " some " , " how many " , " what " , " each " and " no " . Phrases containing such words are of i aggregates and more abstract concepts  . 
Some examples are:
Did some Smith who lived in New York move to Boston ? How many Smiths have an income greater than  12000? What was the average between 1950 and 1960 of the incomes of each Smith ? In such sentences  , a class of objects is considered . The sentence constitutes a condition on each element of this class  , the condition depending on the particula rquantifier  . Consider in detail the example : " Is Boston the location of all men ? " To answer this question  , each man must be considered in turn . We apply the term generation to this kind of a process  . As each man is generated in turn , say man . , the sentence " Is Bost on the location of man . ?" must be processed . If the answer to all cases is " yes " , then the original question is answered aff irmatively  ; otherwise , it is answered negatively . In the case of the " some ' ~ generator , the answer would be affirmative if at leas tone of theme n lives in Boston  . For the question " What men live in Boston ? , i the answer is the list of menfor whom the clause " man  . lives in Boston " holds . 

Several generators can be nested in a sentence . An example is : ~' Each Smith lived in what c ities ? " In general  , the nesting of generators poses difficult and challenging problems  . Although we adequate treatment must be defer red to a separate publication because of the ir complexity  . 
Conjunctions
Conjunction of R's was discussed above under relation modifi-cation  . Conjunction of N's and V's setup generators according to the following rules  : 
NGE-~NJN
NGEJ-~N , NJ
VGE-~VJN
VGEJ-~V , VJ where the GE subscript indicates a generated phrase  . If the J-phrase is " and " , the generator is an " all " generator ; if the J-phrase is " or " , the generator is a " some " generator . An example is given in figure 8 . 

IV . A Few Inclusive Examples > ~ hat was the average betwe-en  196h and now of the incomes of eac ~ woman who has not married ?  .   .   .   .   .   .   .   .   .   .   . Sd~-Smi ~ l ~ .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  ~  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . i .   .   .   .   . 
Sally Smith 10,892 . 3c .   .   .   .   .   .   .   .   .   .   .   . > ~ ach--Jone ~- liVe~-i-h-~Qh ~ C-Cit Y - whe ~- ~ iII  -~6n~-~-F iV e ~ .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
in Los Angeles ? ~ ary $ ~ a-#tin Jones Boston
Jack Jones Boston .   .   .   .   .   .   .   .   . ~ iiI ' dories Smith .   .   .   .   .   .   .   .   .   .   .   . L6SAG ~ eies .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
do hnJones Boston .   .   .   .   .   .   .   .   .   .   . > ~ id-Staft-Smitll'marry-d\[\ ] i -  J86 ~- ana-i-f ~- T6-   L~-~6gg le %? .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
Yes > l ~ hat were the incomes of Steve Smith's parents after Steve Smith arrived ?  . . :  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
.  .   .   .   .   . dill dories Smith-"h , b-O0 August up to December ,  1962  .   .   .   .   .   .   .   .   . 0 from 195 . 3 . _ . t! . p_t_o_ . d_une__I_9 . 69  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
.  .   .   .   .   .   .   .   .   .   .   . Si : an S 6~ith 8,000 Au E . ust up to December ,  1962 9 , 000 in 196310 , 000 from 196 hup to 1967 . 11,000 from . 1967 .   . L ~ p .   .   . t;o_dune . .\]: . _9_fi9 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
-> When Wastile number 0 f Siliiths equal to 5? 
AMBIGUOUS OUTPUT : . . . .  .   .   .   .   .   .   .   .   .   .   .   . ( i -) .   .   .   . AU~dgt-1938--to-Sei~te , hber-~i95G .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
(2) September 1958 to l . ' ~ ay 1960 . . . . . . . . . . . . . . . . . > t~l~n--aid-e E61~- -Jd~gs-\]-i -~6- -ih--E~l-~-city ? John Jones Boston 1930 to June 1959   .   .   .   .   .   .   . di \]\] Jones Smith .   .   .   .   .   .   .   .   .   . New York . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . SePte . n ~ - Ser i-9-5-5--t~o-A-l~r - ~ Los Angeles dune 1961 to dune\ ]95   (  . 
.  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  -  .   .   .   .   .   .   .   .   .   .   .   .   .   .   . Bostoti . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ~ J-Liiy i937- - t~o - - K6~, t i s t i (-
JackJones Boston 1935 to June 1969 .   .   .   .   .  ~ . ~ ie ~-- I ~ 6 ~ tlii--d 6~i ~- E .   .   .   .   .   .   .   .   .   . i ~ i5s to n-i-93-0--t-6-Ji ~-5-61969 .   .   .   .   .   .   .   .   .   . >4 ef : . in the .   . _"19 hO"s ~ . be ! we_en . .'_?_1_9_h()!' . _ a . gd_lQ . .y_ea i s _a_i~t_e . r__-!_9_90_'_'_ .   .   .   .   .   .   .   .   .   .   .   .   .   . 

> What was Stan Smith's income in the 1960s ? .   .   .   .   .   .   .   .   .   . 6, 000 iil 1960 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  ~  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 
8  , 000 from 1961 up to 1963"--"~- , -'~'00"-TS-~
I 0,000 from I96 hup to 1967 .   .   .   .   .   .   .   .   .   .   .   .   .   .  11  , 000 ftoni "196"7-dp " to "; J-6h-6-19-69 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . 

Z8 .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .  7  .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   .   . '"\[1\]\[z\]\[3\]

Thompson , F . B . , " The Dynamics of Information , " . Quarterly Review ( in press ) . 
Thompson , F . B , , et al .   , "REL : A Rapidly Extensible Language System , " Proc . National ACNI Conf . , August 1969 ( in press ) . 
Thompson , F . B . , " English for the Computer , " Proc . AFIPSF all Joint Comp . Conf . , Z9(1966), 349-356 . 
\[4\] Chomsky , N .   , Aspects of the Theor ~ of Syntax , B/l IT Press ,  1965 . 

Lockemann , P . C . , Thompson , F . B . , REL : A Rapidly Extensible System , I : The REL Language Processor . 
Craig , J . A . , Berezner , S . C . , Carney , H . C . , Longyear , C . 
R .   , " DEACON : Direct English Access and Cont rol  , " Proc . 
AFIPSF all Joint Comp . Conf .  , 29 (1966), 365-380 . 
. i










Name name relation verb table copula con junction time time modifier number sentence 
Examples boy , John , the location of John location , father , age arrive , has lived is , ~ vas and , or
January 1960 before January 1960 between now and 1970   5Z   ,  61 . 34
John is a boy !
Is Johnaboy ?
Figure 1 Parts of Speecht-
O . /" i "- . __)/"~\/\x'///?J , ,, IcL .  -  .   .   .   . Z .  , - ~ / " ~  . , . . E v ~ \ ~ w m ! -- ~ > z r I . ~to ~ Io \"~~ k "~~(""-" , t ' "/\\\" , 7/ / ~ , \\//2I0"%~~~)~~ ,   , -/ o , '~~ , ,\ \ / " ~ I - \ \ / \1 \_\ \ \ // \ \ ~ ~ /// , //%\/I , ,~ , / ~\ X I / //\\\ I/I/ ,  _/~  . : t ', , 1f , . ,\l :, iI ~ ~1~,,~
II ?? I ~. ~~- ~ ou
II)r~i ~ o9g.
?2 ~ mm  ~ , . ~ O
O~o a
UU 22
NN
N ~ g0 ? u~s ~ ~ g





O , -- i
N ! i.to ..0 o
Uo , .0" ~ o-.
ok ~ ho
Nm~~0,'~O~U
Zl
Q~kkooi ~ Zo . ~ 0 ~  . ~ ~ uo0 ~ ~ ~ . ~ . ~ o ~ ~ ~ ~ ~ ~ ~ ~ . ~o ~00 ~00k
Uku
UoU


Zo composition conjunction disjunction modification relative negation converse 
R  ~ RR
R  ~ RJR
R~NR
R ~ R but not R
R ~ converse of Rson's location uncles and aunts uncles or aunts boyfriend uncles but not a unts converse of parent 
Pv ( for number relations ) sum difference product quotient
R ~ R + R
R . ~ R-R
R  ~ R  ~; R
R--R/R direct salaries plus over head payra te * hours worked 
GNP/population
Figure 6 Complex Relation Constructions

V 11 !
I 9% /% /! 71

F5. I~J ? Nw-r~-~,o4
Sue will have divorced John before 1970
Verb Table predicate subject object tense character t  1 tz participle feature/spouse endnOW now offend on end off end 
John end
Jobnendoff
IIs pouse

John end off
Figure 7Verb Table Accumulation ( generator resolution ) ~' CE "% ~ E ( nested all and some generators )  !
NGE ( some generator)
IVN v NY NN r " i ~_ . ~_ , , ~_~_, ~ , - -~ ~ ,  . ,  .  - - - - -  , Stanlived in Boston and married the daughter of Jill or the aunt of Mary ? 

Figure 8 Example of Conjunctions
