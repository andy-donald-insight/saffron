TREEGRAMMARS (=4-GRAMMARS)
-Gladky A . V . ( Novosibirsk ) ~ Melt ~ ukI . A . ( Moscow ) -
i . This paper suggests a new kind of formalg rammar  ( hereafter called
A-grammar S ) which in some respects is closely related to Chomsky's 
grammars but differs from these in that it is meant to process trees  ( in the sense of graph theory ) and not to process strings as Chomsky'sg rammars do  . More precisely , we aim at a type of grammar with rewriting rules of the ' X ~ Y " where X and Y are t rees  ( N . B . : with no linear order imposed on their nodes ~  )   . 
Linguistically , the trees under consideration are dependency ( not phrase structure ) trees representing natural sentences at d if ferent levels of " depth ": roughly speak ing  , " surface " syntax ,   , ' deep " syntax , semantics . 
A-grammars are designed to be used not for generating sentences but rather for trans forming given trees into other trees  ; this covers transi-tions from one abst ract representation of a natural sentence to another  ( deeper or more superficial ) representation of the same sentence as well as transitions from an abstract represent at ion of one sentence to a represent a-tion on the same level of another sentence  , synonymous to the given One . 
The conversion of a ~ ready ~ surface tree in to an actual sentence-a conver-sion consis ting of a  ) inflexion and b ) determination of word order-must be carried out by some autonomous device not included in the conception of 
A-grammar.
f ~ l "__* . ~ from the GreekcJ ? v ~@ poV(tree) . 
~'~ . The limit at lons of place and time prevent us from comparing tree grammars with those of Chomsky as well as from referring too ther works dealing with more or less an a logous matters  , such as studies by M . Arapow and V . Bor-schtschow ; G . Veillon , J . Veyrunes and B . Vauquois ; Ch , Hockett ; and others . 
The authors are glad to acknowledge here the fr i endly help and useful sugges-tions by O  . S . Kulagina and A . Y . Dikovsky . 
All shortcomings in the paper are , of course , ours . 
The A-grammar embodies an attempt to formal i zethelinguistic " Meaning ~ Text Model " described  , e . g . , in Ill . In this model , the starting point for producing a sentence is a detailed semantic descript ion of its meaning conceived as a rather involved graph  ( not merely a tree ) consisting of " semantic atoms " and " semantic links " connecting them  . The semantic description is generated outs ide of the linguistic model and constitu test he input of that model  ; it is then subsequently " lingualized " ( anglicized , russianized etc .   ) by means of formally specified transform at ions : i  ) extracting from the given semantic descr iption  ( of a family of synonymous sentences conveying the meaning repretsented by that descript ion  ) the deepest admissible tree-like struc tures  ;  2 ) proceeding in a multi-step fashion from the deeper trees to the more superficial ones  ;  3 ) linearizing the most superficial syntact ic trees  ( with simul-taneous inflexion where needed  ) to produce actual sentences . The n-grammars deal with the second phase of this  . process only . 
Z . We shall consider trees with labelled branches  ; nodes are not labelled . 
The labels can be interpreted as names of the types of syntactic link at the correspond ing level  . For brevity~ssake such trees will here be referred to just as " trees "  . 
A tree is called minimal if all its nodes  , except the root , are terminal ( i . e . , with no branches growing out of them ) . A tree with but one node is called an empty tree and is denoted as ?  . The composition of trees is defined as fo llows : let to  , tl , t2 ,   .   .   .   . tn be trees , and let into some nodes aI , a  ~ ,   .   .   .   . an ( not necessarily pairwise different ) be marked . Then the result of the composi-tion of the tree to with the trees t l  , t2 ,   .   .   .   , to will be any tree isomorphic to the t ree which can be obtained from to by identi fying the roots of the trees t l  , t2 ,   .   .   . , tn  with the nodes c~I , a2, .   .   . , an , respectively into . 
The composition of to in which the nodes al , a2 ,   .   .   .   . an are marked with tl , t2 .   .   .   .   . tn is den?ted T = C(to ; ? I , ce 2, .   .   .   . anltI , t2 .   .   .   .   . in )( i )

A tree is a subtree of T if T can be represented as : T--C  ( To ; a01C(t ; a , , ~  .   .   .   .   . alTI'T2 .   .   .   . T . ))( Z ) where a0 is a terminal node of TO , and ce ~ , c~2 .   .   .   .   . an are petition less enumera-tion of all nodes of t  . 
Now , an elementary transform a tign ( ET ) of trees is an ordered triple < tl ,  ~ , f > , where t 1 and t2are trees and f is a mapping of the set of all nodes of t  1 into the set of all nodes of t 2   . Instead of < tl , t2 , f > , we shall write t1~t21f . The tree Tf is said to be the result of the application of the ET tl = t  2 If to the tree T if T and T t can be represented in the form : and T = C  ( T 0 ; o ~01 C(-tl ; eq , oe 2 .   .   .   .   . ? YnlT1, T2 .   .   .   .   . Tn )) (3) T ' = C(To ; C~o/C(tl ; f(c ~ l) , f(o:2) .   .   .   .   . f(c~n)\[~, T2 .   .   .   .   . Ta )   )   ( 4 ) where cr0 is a terminal node of To , and c~1 , cr2 .   .   .   .   . ~ n a repetion less enumera-tion of all nodes of t  1   . Informally , an application of certain ET to a tree T con-sists of the substituting of t  2 for an occurence of t 1 in T ; if ~ ( a node of tI ) is mapped on 8 ( a node of t2 )   , i . e .   , B = f(d) , then all " untouched " nodes of T " pending " from ce are transferred to B with the same labels on corresponding branches  . 
Example : E
Let tl = ~// ~ , t2 = a/~dG and let f be specified
HI as follows : f(A ) = E , f(B ) = H , f(D ) = F . Then , applying the ET t ~ ~1 f to the treeuwe can obtain the tree i
Kad

Wd,~sR
T contains three occurences of t ; the replaced one is the subtree of T with the nodes M  , N , O , Q . 
3 . A syntactic A-grammar is an ordered pair P = < V  , n > where V is a finite set of symbols ( branch labels ) and a finite set of ETIss called rules of g rammar r  . A derivation in a syntactic A-grammar is a finite sequence of trees where each subsequent tree is obtainable from the preceding one by application of an ETo f n  . A treet I is derivable from T in F'if there exists a derivation in ~ beginning w it hT and ending with TIF or linguistic applications  , it may prove to be of interest to define some specific types of syntactic A- grammars  . 
A syntactic A-grammar will be called exp ~nding if each rule it contains has in its left side no more nodes than in its right  . 
An expanding syntactich-grammar will be called minimal if in each of its rules of the form " t  1 ~ t 2 \[f " the trees tI and t 2 can be represented in the form t , = c (%; %1 c(~;~ ,  ~  .   .   .   .   .  ~ \[ ~,  . ~  .   .   .   .   .  ?  . )) (5) and t2 = c(r-o ; ~ olC(v ; f(~,), f(~) .   .   .   .   . f ( ~ . ) l ~, ~ .   .   .   . ~ o )) (6) where 1) ~ is a minimal tree , Z ) ~1 ,  ~2  .   .   .   .   . ~ n is a repetition less enume-ration of a ll nodes of ~  , 3) a ~ is the root of ~ , 4) f(etI ) , f(~2) .   .   .   .   . f(Ctn ) are pairwise different , 5) f(c?2) , f(a ~3) .   .   .   .   . f(O/n ) are terminal nodes of , 6) for ever y i = Z ,  3  .   .   .   .   . n the label on the branch of ~ ending in coinc ides with the label on the branch of Vending inf  ( c?i )   ,  7 ) for all nodes of t differing from ~ I , c~2 .   .   .   .   . cln , the mapping is identical . 
A minimal expanding syntactic A-grammar wi ll be called context-free if in the express ions  ( 5 ) and ( 6 ) the trees ~ r0 ,  ~  ,   , % r2 .   .   .   .   . ~nare unity trees . 
4 . Linguistic considerations dealt with in " Meaning ~ - ~ Text Model "  ( see , e . g .   ,  \[ 1 \ ]  ) imply the introduction of a subset of ETIs , ~2ecial elementary transformations ( SET fs )   . ASET is an ET of one of the following three types : i  1  ) Splitting of one node-a transformation of the form A  . => Ba*"C where either f(A ) = Borf(A ) = C . 
Notation : A = a(B , C)\[f(A ) = B and A~a(B , C ~ ia(A ) = C . 
Z ) Transfer of one node-a transformation of the form pA 
EF in both cases f(A ) = D , I(B ) = E , f(C ) = F ( Notation : a(A , B ) . b(B,C)~a(D,E) . b(D , F ) and a(A,B ) . b(A,C)a(D,E) . b(E,F )) . 
3 ) Lumping two nodes into one-a transformation of the form 
B ~ C ~ A , where f(B ) = f(C ) = A
Notation : a(B,C ) = A.
Let t ~ ~ t 2 \[f be an ET and let M be a set of ETIs . Then the statement " The ETt 1 = t 2 If can be simulated by ETIs of M " means that there exists some finite sequence m  1   , m2 ,   .   .   .   . mn of ET's in M such that for any trees T and TI where TI can be obtained from T by apptl cation of the ET tl~t  2 \[f the tree TI can be obtained from T by app lying m  1   , m2 .   .   .   .   . mnint and em . 
Theorem t . Any elementary transformation can bes imulated by special elementary transform at ions  . 
5 . For the representation of natural sequences it is reasonable to assume not arbitrary syntactic trees but rather a subset of those -namely  , those with limited branching . The precise meaning of limited branching i s as follows : for each branch label a ~ there is fixed an integer ni such that each node can be a starting pp in tatmoat for nibranches labelled ai  . The trees meeting this restriction are called  ( n1 , n2 .   .   .   .   . nk ) . -regular ( k being the number of different branch labe ls  )   ; for brevity we shall call these trees s imply regular trees  . 
Now , a slight modification of the notion of the application of an ET suggests itself : if we suppose that the trees T and TI in  ( 3 )  -  ( 4 ) are regular , we need consider only ET~s with regular lef t and right sides  ; such ETIs will also be called regular . 
A regular syntactich-grammar is an ordered triple < V  ,  ~ , \[1 > , where V = ~ a1 , a2 .   .   .   .   . ak\] is a finite set of symbols ( branch labels )   , ~ is a mapping of V into the set of positive integers  ( for every a EV the integer C ( a ) being the maximum number of branches label led a which can grow out of any single node  ) and s is a finite set of ( ~ ( a1 )   , ~( a2) .   .   .   .   . ~( ak )) - regular

The set of aliregular syntactic A-grammars may be divided into hierarchical subsets which are fully analogous to the corresponding subsets of the syntactic A-grammars as defined above  . Special elementary trans . 
formations ( SETrs ) can be defined here too.
Theorem I to Any(r ~, n2 .   .   .   .   , nk ) -regular elementary transfor-mation can be simulated by  ( n1 , n2 .   .   .   .   . nk , 1)-regular SETIs' . 
.  . Theorem 2 . a ) If nl + .   .   . + nk~3 or if n1 + .   .   . + nk = I , then any ( nl , n2, .   .   .   , nk ) - regular ET can be simulated by ( nt , n2 .   .   .   .   . nk )_ regular
SET is.
b ) There exists (1 , l ) -regular and ( 2  ) -regular ETIs which cannot be simulated by ( i , l ) -regular and ( Z ) -regular SET~s respectively . 
6 . If a regularity characteristics ( n1 , n2 .   .   .   .   . nk ) is fixed on the basis of Some empirical ( linguistic ) evidence , then a " universal syntax " can be constructed as an abstract calculus of all possible syntactic structures and all possible t ransformations of these  . Choosing (1 ,  1 , l ,  1 ,  10 ,  1  ) -regula-rity * as a first approximation to the deep syntactic description of natural languages  , we obtain a universal ( t ,  1 ,  1 ,  1 ,  10 , 1)-regular A-grammar ,  <% , ~ u , i l ~ > , where V~=In 1 , a2 .   .   .   .   . a ~ is the set of types of deep syntactic connect ions and where ~ o  ( a  ~ )  = ~ ( a2 )  = ~0 ( a3 )  = ~ . ( a4) = g~(a6) = 1; ~ Jas ) = 10 . 
consists of the following 80 rules : l ) 12" splitting " rules of the form AT ai ( B ' C ) \[ f ( A ) = B and A ~ ai ( B , C)\[f(A ) = C(i = i .   .   .   .   .  6 )  2 ) 62" transfer " rules of the form ai ( A ' B )   . aj(B,C ) ~ ai(D,E) . ai(D , F ) and ai(A,B ) . ai(A,C ) = ai(D,E) . ai(E , Iv ) ;  * ) The description of deep syntax suggested in \[ i \] is mean there  .   6 types of syntactic connections are different iated and interpreted as follows : connect ions  1 through 4 link a predicate with its arguments ( only predicates with no more than 4 places are considered )   , connection 5 formalizes the general attributive rela- tion  , and connection 6 expresses coordination ; a node can be a starting point for only one branch of each of types t  ,  2 ,  3 ,  4 , 6 and for several branches of type 5 ( we have set the number of the latter at 10 as a sufficient upper limit )   . 
The set of all regular syntactic A-grammars may be divided into hierarchical subsets which are fully analogous to the correspond ing subsets of the syntactic A-grammars as defined above  . Special elementary trans-formations ( SETIs ) can be defined here too . 
Theorem 1', Any(r ~, n2, .   .   .   , nk ) -regular elementary transfor-mation can be simulated by  ( n1 , n2 .   .   .   .   . nk , l)-regular SET's' . 
Theorem Z . a ) If n1 + .   .   . + nk~3 or if n1 + .   .   . + nk = 1, then any ( nl , n2, .   .   .   , nk ) - regular ET can be simulated by ( n1 , n2 .   .   .   .   . nk ) - regular
SET's .
b ) There exists ( I , l ) -regular and ( 2 ) -regular E'T's which cannot be simulated by ( i , i ) - regular and (2) . regular SETIs respectively . 
6 . If a regularity characteristics ( n ! , n2 .   .   .   .   , nk ) is fixed on the basis of some empirical ( linguistic ) evidence , then a " universal syntax " can be constructed as an abstract calculus of all possible syntactic structures and all possible t ransformations of these  . Choosing (1 ,  1 ,  1 , l , i0 ,  1  ) -regula-rity * as a first approximat i onto the deep syntactic description of natural languages  , we obtain a universal (1 , l ,  1 ,  1 ,  10 , 1)-regular A-grammar , < V  ~ , ~ u , i l ~ > , where Vu = \[ a1 , a2 .   .   .   .   . a ~ is the set of types of deep syntac-tic connections and where consists of the follow ing  80 rules : I ) IZ " splitting " rules of the form A ~ ai ( B , C)\[f(A ) = Ban__~dA  ~ a~(B , C ) lf(A ) : C(i = 1 .   .   .   .   . 6)2)62" transfer " rules of the form ai(A , B ) . aj(B,C ) ~ ai(D,E) . ai(D,F)an__!a~(A,B ) . ai(A,C ) ~ a,(D,E) . aj(E ,  ~)  ;  * ) The description of deep syntax suggested in \[ i \] is mean there  .   6 types of syn-tactic connections are diffe rentiated and interpreted as follows: connections  1 through 4 link a predicate with its arguments ( only predicates with no more than 4 places are considered )   , connection 5 formalizes the general attributive rela - tion  , and connection 6 expresses coordination ; a node can be a starting point for only one branch of each of types  1  ,  2 ,  3 ,  4 , 6 and for several branches of type 5 ( we have set the number of the latter at tO as a sufficient upper limit  )   . 
here i , j = I .   .   .   .   . 6 and either i ~ j or i = j = 5 . 
3)6 " lumping " rules of the form ai(A . B ) ~ C(i = I .   .   .   .   .  6) . 
7 . It may be useful , in view of possible linguistic applica tions  , to consider also such regular trees where the branches as well as the nodes are label led filled regular trees  . The node labels may be interpreted as character ized lexeme ~ i  . e .   , symbols denoting words , idioms and so-called lexical functions wi th morphological subscripts attached to them  ( ~i \] , p .  186 ) The notion of regu-larET and that of regular syntactic A-grammar can in an obvious manner be modified accordingly  . As a result , we obtain regular lexico-syntactic ~ grammars  . For these grammars ( seep .  67 ) we can define SET ts of the types ' ~ splitt ing '  , ' transfer " and " lumping Hina manner an a logous to the one above  ; in addition another type of SET must be in t roduced :  4  ) Hrenarning " of a node-a transformation of the form ?~?  , where w i and v ~ are node labels . 
If SETIs are understood as transformations of the types I  -4   , the theorems iI and Z will hold also forth is case  . 
Z~o ~ oBc ~ AK , Me . , rz ~ yKHA0ce MeHT ~ uecKo~c~nTese . - Upo 6 ~ eKuR ~6ep HeT ~ Bmn .  18 1967, 177 ~ ~38 . 
