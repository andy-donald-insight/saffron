Knowledge integration in a robust and efficient
morpho-syntactic analyzer for French t
Louisette Emirkanian
D6p . delinguistique

Lorne H . Bouchard
D6p.demath6matique set d'infonnatique
Universit 6 du Qu 6 be ch MontrEal
C.P .8888, Succur sale " A "
Montr6al , QC
Canada H3C 3P8
R15320@UQAM . BITNET
We present a morphosyntactic analyzer for French which is capable of automatically detecting and of correcting  ( automatically or with user help ) spelling mistakes , agreement errors and certain frequently encountered syntactic errors  . Emphasizing the specific language knowledge that is used  , we describe the major subtasks of this analyzer : word categorization by dictionary lookup and spelling correction  , construction of a parse tree or of a forest of parse trees  , correction of syntactic and morphological errors by processing the parse tree  . The spelling corrector module is designed to help correct he spelling mistakes of a French novice  , as opposed to those of an experienced typist . The syntax analysis module is driven by an empirical grammar for French and is based on the work of Tomita  . The presentation is based on the design and implementation faprototype of the system which is written in L is p for the Mac into sh computer  . 
1. INTRODUCTION
Our goal is to construct a morphosyntactic analyzer for French which is capable of automatically detecting and of correcting  ( automatically or with help from the user ) spelling mistakes , agreement errors and the most important syntax errors  . This system could be used to analyze word processor output  , for example . 
Since our main goal is to implement a robust and efficient analyzer for French  , we have designed a system which can detect errors as opposed to one which can only process wellformed input  . 
A number of systems for English text analysis have been developed  . The Writer's Workbench/Frase 1983/is a collection of tools developed at AT&T's Bell Laboratories : the two most important ones address proofreading and style analysis  . The EPISTLE project/Miller , Heidorn & Jensen 1981/is a vast project undertaken at IBM's Thomas J . Watson research laboratory , the long term goal of which is to develop a system which not only supports writing  , but also text understanding . 
WANDAH/Friedman 1984/ , a system that was developed at UCLA , comprises three subsystems : a word processor designed to support interactive composition  , tools to assist composition and tools to help in the editing and the revising phases  . 
These systems are difficul to adapto French since they are based on knowledgg which is specific to English  . Furthermore , in these systems the gnowledge is rarely represented xplicitly : indeed  , the knowledge/has most often been " compiled " for reasons of efficiency j Thus  , these systems cannot easily reason about the knowledge they have  . /- The ~ ovel feature of our system is that it is based on an integration at different levels of the knowledge of French  . This knowledge is represented xplicitly in the system and the system keeps track of the decisions it has made  , which will allow it not only to justify its decisions but also to reason about its reasoning  . 
The main problem is in the integration of knowledge of the language  , knowledge which is at different levels : knowledge of orthography/Catach  1980/  , of traditional grammar/Lenouveau Bescherelle 1980//Grevisse   1969/  , of syntax/Grevisse 1969//Gross1975//Boons , Guillet & Lecl~re 1976/and also of the most frequently encountered errors /Catach  , Duprez & Legris 1980 // Class & Hor ~ , uelin 1979//La fontaine , Dubuisson & " ~ Research ftlnded by the Social Sciences Research Council of  . . . . . 
Canada ( SSRC Cgrantno . 410-85-1360).
Emirkanian 1982/ . In order to be able to use such ka , owledge , it must on the one hand be made operation alndit must on the other hand be orchestrated  . 
In our system , these sources of knowledge are used as follows . 
Each sentence of the text is split up into words . Each wordi . ~ categorized by dictionary lookup ; knowledge of French orthography is represented as a collection of correction rules  . An efficient parser , driven by a contextfree grammar , builds a parse tree oi " a forest of parse trees in the case of ambiguity  . This parser is deterministic in the sense that it blocks as so on as an error i  . ~ detected . The parser can recall the spelling correct or , if need be ,  . 
Then , knowledge of the subcategorization f French verbs allows the system to eliminate automatically certain ambiguities and to detect and correct many errors  . Finally , the user is consulted whenever the system cannot intervene  . 
Before presenting the system in depth , we must emphasize that the system we have designed is intended to assist at the knowledge level and not at the competencelvel  . It is not designed as a tool to improve written communication skills  . 
The main subtasks of the system are as fo Uows : word categorization by dictionary lookup and spelling col ~ rection  , construction of a parse tree or of a forest of parse trees in cases of ambiguity  , correction of syntax errors , detection and co~xection of morphological errors by processing the parseu'ee  . 
We shall now examine these three phases.
2. WORDCATEGORIZATION ANDSPELLING
CORRECTION 2 . 1 Classification of spelling mistakes We have adopted Catach's classification/Catach  , Duprez & Legris 1980/from where we also borrow the examples . She distinguishes phonetic errors ( * puplier instead of publier )  , from phonogrammic errors ( the user knows the sound without knowing the transcription  ) some of which can modify the phonic value of a word  ( * g drir instead of gudrir , * o is is instead of o as is ) whilst others do not change the phonic value ( * pharmatie instead of pharmacie )  . In addition to these two types of errors , she identifies morphogrammic errors ( caused by faulty knowledge of non-phonetic orthography  ) in grammatical elements ( number agreement , for example ) or in lexical elements ( * enter remant instead of enterrement , * a brit instead of a bri , for example ) , confusion of lexieal homophones ( vain/vin ) or grammatical homophones ( on/ont )  , problems with ideograms ( punctuation , for example ) and finally problems with nonfunctional letters which are derived  , for example , from the Greek origin of a word ( * t datre instead of the atre )  . 
We have excluded from our area of investigation , all phonetic errors , that is errors which can be caused by faulty prommciation  . 
On the other hand , our system can handle all the phonograrmnic errors  . Morphogrammic errors in grammatical elements are detecte during the later morphological nalys is phase  . Errors in lexical morphemes are conecte during this phase  , as well as errors which are due to the existence of nonfunctional letters  . As for problems with homophones , grammatical homophones are detecte during the parsing or the syntax analysis phases  , but only some lexical homophones are detected during these phases : we can correct vain/vin but not chant/champ  , since these elements , in addition to being homophones , belong to the same lexical categot ? . The sem , 3nfic knowledge available in ore " system is not sufficient to resolve this ambiguity  . 
Regarding spelling mistakes , phonogrammic errors ( i . e . , those due to the transcription of sounds ) are the most frequent in French , mainly because of the problems caused by the phonic/graphic con'espondence  . For example , the sound\[o \] can be wxitten in many ways : au  , aud ( at the end of a word ) , eau , etc . 
This is not the ease in English/Peterson 1980/ , where the main spelling mistake seem to be due to random insertions or  . ~uppressions of letters , substitution of a letter for another o1" transposition f two letters . We call these rrors " typographical " e ~ rors : we will not discuss them fresher in this paper  . 
2.2 The E~ietionary
Our system is based on two dictionaries , a dictionary of stems and a dictionaly of endings  . Associated with a stem , in the stem dictionary , is . ~ ; to red a pointer to a list of one or more endings which are stored in the endings dictionary  . In this way , our system can handle all inflected forms efficiently  , as well as the numerous exceptions . Based on a suggestion by Knuth/Knuth 1973/ , a trie is used to index the stem dictionary . Diacritical signs are removed from the letters when the trie is constructed and also when a word is looked up in the trie  . Indeed , the letters modified by the diacritical signs are only stored in the leaves of the trie  . 
This allows our system to handle accent errors , a common spelling mistake , very efficiently . 
Instead of storing " chame au " , " chame aux " , ehamelle " and " ch , ' unelles " in the dictionary , we only store the common form " chino -" in the stem dictionary together with its lexical category  . 
We also store there , as pointers to the endings dictionary , the corresponding rules for constructing the number and genderendings and any additional syntactic or semantic nformation  , as requited . 
2.3 The lookup algorithm
The word to be looked up is scanned from left to right : each letter  , strippe ~ l of its diacritical sign if need be , controls the walking of the stem trie until a leaf is reached  . Associated with the leaf , we find the lexical category and the ending rules for the stem  . Remafifing letters of the word are looked up in the list of endings associated with the stem : the entry corresponding to an ending records  , for example , the number and gender of nouns and adjectives o1' the person , time and mood of the verbs which have this ending  ( the endings lists contain all possiblendings of the verhs/Lenouveau Bese herelle  1980/  )  . The most important ending errors are also recorded in the endings lists  . Using this information , the system can detect and correct at this level ending errors : for exa!nple  , * chevals instead of chevaux , * eloux instead of clous . 
A block during trie traversal signals the detection of a spelling mistake :  . The context of the letter esponsible for the block is used mindex a large set of rewrite rules  , called correction m h ' , s , which are derived mainly from the phonic/graphic transcription rules of Freuch/Catach  , Duprez & I_egris 1980/ . These rules characterize the knowledge of French orthography which is used to comec the spelling error  . 
2?4 The correction algorithm
Although these to feorrection rules is mostly based on the phonic/graphic transcription rules of French  , certain rules are not based on such a strict correspondence at all since the programs can also  , for example , conect * enuito ennui and * gdrir to gudrir . 
Wl , enaleafisfinally reached , the rule or rules which were applied to unblock the walk in the trie are used to correct he misspelt word  . 
In addition to substitution rules , we have a set of roles which are used only on the ending of a word  . These rules are applied before the substitution rules  . For example , for the word * blan the system proposes blanc , and for the word * trosit proposes trots , trop and trot , as can be seen in Fig .  1 . 
FlchlorEdlt looF~li~trosLoxiquei:i ~ glri ~ . S~J nt . Cari'ectan It
I
J'oi3 roots ~ rioo $ proposer ...
> trot . . . ~i /, trot?'~'~i I hojrophe ~- s~--!
Fig . 1
If the user is not satisfied with a correction , the system can , upon request , propose another in some cases . For example , in response to the word * vi the system proposes vie  ( the noun ) and if the user requests another correction , it then proposes the two verbs voir and vivreas can be seen in Fig  .  2 , since the stem , or one of the stems , of these verbs matches the word * vi . The user may conjugate these verbs using our Conjugueur tool  , as can be seen in Fig .  3 . 
li ~ Flchler Edition F ~ r ~ ti ' ~ Lorii qoeli ~ gioIt . Si~ . t . Corroclloo ~ l
IIF_-N ? ~- IR . . . . .
Correction . . . . . . . . . . .
> Oi ...
< S'aglt--llduverbe ~ vlvre >>? ~"( ~ Che , '( here , ,cm '(~ ~ ~
Fig . 2? ~ Flcher Edition Feri ~ trosLexlquoR ~ glefl . Sgot . Correctlo . .u "~ vlvre \] \ [ \ ] pronomionl ~ onoir ~ Ir . parfalt P . zlnlplo~mplo ~ ctirtoul,~Po . ~ ~ a_/~t ~ nel IIn it I ! refnrroo 2e for me\]~t . o . , olno . , eal~gJ ~ UOUSvl ncdZ~-~\[EIlls\[,;;h~i . i-P\[~ . ! ~_\[BESCIIERELLE
Fig . 3 block point , the correction algolithm must move the block point back and thus performs a systematic search of the dictionary  , backtracking upon failure . Indeed , for the word entent espelt * antent e , the first block point is just after the second n since antenais and antenne ' are in our dictionary/Robert  1967/  . 
The size of the dictionary and of the set of correction rules is large  . The system uses simple metrics as heuristics /Romanycia & Pelletier  1985/in order to filter the set of correction rules and reduce the search space  . The selected rules are analyzed and those that do not increase trie penetration depth or those that do not allow the system to move forward in a word  ( simple metrics of progress towards the goal of accounting for all the letters in a word  ) are rejected . Note that the expectations of the dictionary , represented as a trie , also effectively constrain the search space . 
2.5 Word categorization
At this point , a word can have been assigned a single lexical category  , as for example cahier : NIF- , etc . \] . The word can also be assigned a wrong category , as for example in il * pin : N\[F- , etc . \] which was written instead of ilpeint . Finally , a word can be assigned many categories ( case of lexical ambiguity )  , as for example ilvent e : N\[F + , etc . \]/ V\[present 3 rd person of indicative/subjunctive \] . 
3. CONSTRUCTION OF APARSET REEOROFA

We have compiled an emph-ical grammar of written French which is described by a contextfree grammar  . Our parser is based on the work of Tomita/Tomita 1986//Tomita   1987/  . In a Tomita parser , a general purpose parsing procedure is driven by a parsing table which is generated mechanically from the contextfree grammar of the language to be parsed  . Tomita's main contribution has been to propose the use of a graph-structured stack which allows the parser to handle multiple structural ambiguities efficiently  . We use YACC/Johnson 1983/ , aLALR ( 1 ) parsing table generator available in UNIX to automatically generate the parsing table which drives the general parsing procedure  . When generating the parsing tables , YACC detects and sign' , ds cases of sn ~ uctural ambiguity . 
Many cases can arise in parsing French.
Consider first the case when a word has been assigned multiple categories  . Some of the ambiguities can be resolved by considering the expectations of the grammar  . Consider the word court which can be an adjective  , an adverb , a noun or a verb . If court is found in the context il :\[ ProC1\] court : Adj/Adv/N/V \[3 rd person singular , etc . \] , the grammar accepts only the verb at this point . Similarly the word une which can be a determinant  , a noun or a pronoun can automatically be reduced to noun in the contextilal ulauned ujournal  . 
Consider now the case when the parser cannot derive a parse tree : based on the hypothesis that there may be a spelling error which caused an erroneous category to be assigned  , the parser calls the spelling correet or to revise the spelling of a word and hence the category assigned to it  . In the case of the previous example il * pin , of the spelling alternatives for p in , only peint , the verb , is retained since pain is no more possible in this context hanp in  . 
Indeed , in our grammar of the sentence only a verb or another clitic pronoun may appear after a clitic pronoun  . Similarly , in the sentence il s * on apport dlelivre , * on will be corrected to on t . 
The parser efficiently constructs a parse tree or a forest of parse trees which account for the sentence  . In a Tomita parser , the forest of parse trees is represented by a data structure analogous to a chart/Winograd  1983/  , which allows for " local ambiguity packing " . 
4. ANALY SISO FTHE PARSET REEOR FOREST
A forest of parse trees can be produced in classical cases of structural mbiguity such as in Pierre expddie desporce laines de Chine  . The two parse trees generated for this sentence can be seen in Fig  . 4 and 5 . The bracketed Lisp representation f these trees can be found in Fig  . 6 and 7 . 
SCs nSuc
In UCS n
II
Pierreu conj det nsp
III exp ~ die desporce laines prepsn
II den


Fig . 4
S : Csn
In

Pierres vcuc $ nue onj det n
III expg die despore elain exsp prepsn
II den

Chine ( sc
Fig .  5  ( sn ( n " Pierre " ) )  ( svc ( vc ( vconj " expEdie " ) )  ( sn ( det " des " )   ( n " porcelaines " )   ( sp ( prep " de " )   ( sn ( n " Chine " ) ) ) ) ) )
Fig .  6  ( so ( sn ( n " Pierre " ) )  ( svc ( vc ( vconj " exptdie " ) )  ( sn ( det " des " )   ( n " porcelaines " ) )  ( sp ( prep " de " )   ( sn ( n " Chine " ) ) ) ) ) 
Fig . 716 ~
A forest of parse trees can also be caused by cases of lexical ambiguity such as ilveutle boucher  . In many cases , only some of the trees in the forest need be retained  , since the system can automatically clear the forest  . For example , although two parse trees are constructed for the sentence Jean n ' ap as ? f fectu de lancer  ( lancer could be an infinitive verb or a noun )  , or dy the tree with lancer categorized as a noun is retained  , as shown in Fig .  8 . 
( So ( sn ( n " Jean " ) )  ( svc ( sadv ( adv " n " ) )  ( auxc " a " )   ( sadv ( adv " p as " ) )  ( vc ( vpp " effect u 6" ) )  ( sn ( det"de " )   ( n " lancer " ) ) ) )
Fig . 8
At this level , the subcategorization of the verb is of great help : this information is also stored in the dictionary of course  . For example , effectuer does not allow an infinitive phrase as a complement  . Simih'trly , in the sentence il a remarqud Marie arri wmtd tottte allure  , Marie arrivant d to ute all ure could be an adverbial plwase  , Marie could be the object of remarquer and arriwmt dtorte allure could be mlad verbial phrase  , finally Marie arrivant d to t ,  . teallure could be the object of remarquer . The first hypothesis ( uee ) is rejected since remar quer is subcategorized as requiring a di:  , : cct complement . 
Sub-categori: ; ations used to clear the forest of trees , Fig .  912 , resulting from the analysis of the sentence il pensed l'enviede 
Pauldes'eurichir.
( so ( spro ( l?ro-qu " il " ) )  ( sve ( vc ( vconj " pense " ) )  ( sp ( prep "/ t " )   ( sn ( det "1" )   ( n " envie " )   ( sp ( prep " de " )   ( sn ( n " Paul " )   ( si ( prep " de " )   ( svinf ( procl " s " )   ( vinf " enriehir " ) ) ) ) ) ) ) ) ) 
Fig .  9  ( sc ( spro ( pro-qu " il " ) )  ( svc ( vc ( vconj " pense " ) )  ( sp (  , prep "~" )   ( sn ( det'T' )   ( n " envie " )   ( sp ( prep " de " )   ( sn ( n " Paul " ) ) )   ( si ( prep " de " )   ( svinf ( procl " s " )   ( vinf " enrichir " ) ) ) ) ) ) ) 
Fig .  10  ( s e ( spro ( pro-qu " il " ) )  ( svc ( ve ( vconj " pense " ) )  ( sp ( prep " h . " )   ( sn ( det'T' )   ( n " envie " )   ( sp ( prep " de " )   ( sn ( n " Paul " ) ) ) ) )   ( si ( prep " de " )   ( svinf ( procl " s " )   ( vinf " enrichir " ) ) ) ) ) 
Fig .  11  ( spro ( pro-qu " il " ) )  ( svc ( vc ( vconj " pense " ) )  ( sp ( prep " , ?' )   ( sn ( dot'T' )   ( n " envie " ) ) )   ( sp ( prep " de " )   ( sn ( n " Paul " )   ( si ( prep " de " )   ( svinf ( procl " s " )   ( vinf " enrichir " ) ) ) ) ) ) )   ( s e
Fig . 12
The subcategorization nformation for the verb penser allows us to eliminate the lrees of Fig  . 11 and 12 . Since Paul cannot be subcategorized by an infinitive sentence  , aspeur can be ( lapeur des'en richir ) , the tree in Fig . 9 can also be eliminated . The only remaining analysis is the tree in Fig .  10 . 
Verb subcategorization also allows the system to COXTeCt some spelling mistakes at this stage  . For example , the sentence * il panse que Marie viendra will be corrected to ilpen seque Mc wievien dra since panser does not accept a completiv c  . 
Similarly , in ilva * ouil veut , * ou is corrected toot ~ . At this level we also correct , using information stored in the dictionary , an error of the type * quoique tu discs , je partiraitoqu /) iq ttetu discs , je partirai , since the subcategorization f dire is not satisfied in the first case  . It is also verb subcategorization information which allows us to conect certain trees and improve others  . 
Consider the case of con'ecting au'ee . For the sentence , il punit quiment , i ~ fitially quiment is labelled as a sentence connected to the verb punir  . Then , the sentence quirnent is relabelled as a noun phrase  . 
Consider now the case where the subcategorization allows us to improve a tree  . In the sentence Pier relira unliv recetten uit , cetten uit initially labelled noun phrase , will be relabe I led adverbial phrase sincelire cannot be subcategorized by two noun phrases  , as nommer can be , for example . 
5. CORRECTING SYNTAXERRORS AND
AGREEMENTERRORS
Experience has shown that syntactic errors are relatively infrequent  . For example , in a study of the syntax of primary school students/Dubuisson & Emirkanian  1982a//Dubuisson & Emirkanian 1982b  / , out of 6580 communication uits , only 79 (1 . 2%) were found to be ungrammatical . The unit of communication is equivalent to what the traditional gratm narcalls the sentence  , that is the root sentence and any embedded sentences/Loban  1976/  . We observed/La fontain e , Dubuisson of subordination (53% of the errors ) , the use of complex relative clauses in particular  ( 24 cases out of 42 )  . Children also have problems with multiple embeddings : in general when they connect an embedded sentence to another  , the resulting sentence is ungrammatical , the main sentence being absent or incomplete . 
The other problems are related to coordination , to constituent mobility and to the use of clitic pronouns where we observed a strong influence from the oral  . 
As for relative clauses , we counted nonstandard clauses as ungrammatical , though they follow rules as do the standard relative clauses  . Lafille que jete parle et la filleque je parle avec are examples of non-staudar delative clauses whilst the sentence * lafi Ue dont que jet e parle is ungrammatical We have chosen for now to focus our attention on two of these problems : complex relative clauses and sequences of clitics  . As part of a previous research project , we developed algorithms for handling complex relative clauses/Emirkanian & Bouchard  1987/ and sequences of elitics/Emirkanian & Bouchard 1985/  . For the sentence lafille queje parle , the syntax correction algorithm proposes lafille dequi/dont/de la quelle/avecqui lave claquelle/d qui/c ~ la quelle je parle  . On the other hand , in response to the sentence lafille quejete parle  , the algorithm proposes dont , dequi and delaquelle as possible choices . Again it is the subcategorization of the verb which gives us a handle on the problems with sequences of clitic pronouns  . The program con'ects * jelu iaide to jel ' aide , for example . However , in most cases , only an error is reported , the system is unable to correct the error since it cannot identify precisely tile referent of the clitic  . 
* J'y donne and * jelui donne are examples of ungrammatical sentences  ; the system cannot propose with certainty the missing clitics : it will propose lalui  , lelui , etc . . , in the first case and lelui , lalui , luien , etc . ., in the second case . 
During morphological nalys is , based on the information gleaned fi'om the dictionary  , the information collected in the parse tree and the agreement rules of French  , the system isolates the noun phrases and checks to see if the agreement rules for number and gender have been appIied  . It then checks for agreement between the subject and the verb  . Note that , for example , in the case of * les bell eschame aux , the system proposes both lesbe aux chame aux and lesbelleschamelles  . In response to the sentence * le professeur explique lalemonaux ~ ldvedela classes  , the system proposes le professeur explique la leq on aux dl dves de la classe  , aux dldves des classes , ~l ' ~ ldve de la classe and also dl '  #ldvedes classes  , even if , based on our knowledge of the world , we know that the last answer is less probable . 
The agreement rules which we have formalized , some of which are recorded in the dictionary , allow our system to correct he errors most frequently found in written text/Leb run  1980/ /Pelchat 1980/  . These errors are due , in particular for number agreement , to semantic interferences or to the proximity of other elements : for example  , * ilveut~tretrd sriches instead of Uveut dtretrds riche  , * jeles voient instead of jelesvo is and * Michelnous donnent desbon bons instead of Michel nous donne des bonbons  . 
Finally , note that certain lexieal ambiguities ( there are relatively few remaining at this stage ) could be resolved here : for example , this is the case for lechouetteangla is , but lachoue tteanglaise still remains ambiguous . 
6. CONCLUSION
The automatic or rection of French text is a major project  . 
Knowledge at many different levels must be integrated and coordinated in the system  . Only the construction of a prototype can attest to the success of such an integration  . We have developed a prototype of the correction program in LISP on a Macintosh Plus  . The behavior of the final system will be refined by weighting the rules according to their utility  . Statistics gathered from many different users will help us tune the general behavior of the system whilst statistics gathered for a given user will allow us to tune the behavior of the system to the problems specific to that user  . 

Boons , J . P . , A . Guillet & Ch . Lecl ~ re ( 1976 ) Lastructure desphrases implesenfranqa is , Gen~ve , Droz , 377 p . 
Catach , N . (1980) L ' orthographefi ' an qaise , Paris , Nathan , 334 p . 
Catach , N . , D . Duprez & M . Legris (1980) L'en seignement del ' orthographe , Paris , Nathan , 96 p . 
Clas , A . & J . P . Horguelin (1979) Le franqais , langue desaffaires , 2e Edition , MontrEal , McGraw Hill , 391 p . 
Dubuisson C . & L . Emirkanian (1982a ) , ' Complexifieation syntaxique del ' Ecritau primaire '  , Revuedel ' Association Qu Eb E coise de Linguistique  , vol . 1, nOl-2, pp .  61-73 . 
Dubuisson , C . & L . Emirkanian ( 1982b ) ' Acquisition des relative set implications pEdagogiques '  , In : Lefebvre , C1 . ( ed . ): La syntaxe comparEe du fran~ais standard et populaire : approches formellet fonctionnelle  , Gouvernement du QuEbec , Office de la langue fran ~ aise , pp .  367-397 . 
Emirkanian , L . & L . H . Bouchard ( 1985 ) ' Conception etr Ealisation d ' und idacticiels ur les pronoms per sonnels '  , Bulletinde I'A POP , vol . III , nO3, pp .  1013 . 
Emirkanian L . & L . H . Bouchard ( 1987 ) ' Conceptione tr Ealisation de logiciels : vers une plus grande integration des connaissances de lalangue '  , Revue Qu Eb Eeoise de Linguistique , vol . 16, nO2, pp . 189-221 . 
Frase , L . T .   ( 1983 ) The Unix Writer's Workbench Software : Rationale and Design '  , Bell System Technical Journal , pp . 

Fried~nan , M .   ( 1984 ) ' WANDAH : Writing-aid and Author's Helper ' , Prospectus , University of California Los Angeles , 26 p . 
Grevisse , M . (1969) Lebon usage , 9eEdition , Gembloux,
Duculot , 1228p.
Gross , M . (1975) ME tho desen syntaxe , Paris , Hermann , 414 p . 
Johnson , S . C . (1983) ' YACC : Yet Another Compiler-Compiler ' , Unix Programmer's Manual , vol . 2, New York , Holt Rinehart and Winston , pp .  353-387 . 
Kauth , D . E .   ( 1973 ) The Art of Computer Programming : Volume 3 /Sorting and Searching , Reading MA , Addison-Wesley , 722 pLafontaine , L . , C . Dubuisson & L . Emirkanian ( 1982 ) '" Fots ' avoir Eerire ": les phrase smal construites dans lest extes d'enfants du primaire  '  , Revuedel ' Assoeiation Qu Eb Eeoise de
Linguistique , vol . 2, nO2,, pp . 8190.
Lenouveau Beschere Ue (1980) I-L ' art de conjuguer . Dictionnaire de 12000 verbes , MontrEal , Hurtubise HMH , 158 p . 
Lebrun , M .   ( 1980 ) ' Leph Enom~ned'accordetles interferences sEmantiques '  , Recherchessurl ' acquisition del ' orthographe , 
Gouveruement du QuEbec , pp . 31-81.
Loban , W .   ( 1976 ) ' Language development : kindergarten through grade twelve '  , NCTE Research report nOl 8 . 

Miller , L . A . , G . E . Heidorn and K . Jensen ( 1981 ) ' Text-Critiquing with the EPISTLE System : an author's aid to better syntax '  , AFJPS Conference Proceedings , pp .  649-655 . 
Pelchat , R .  0980 ) ' Uncas particulier d ' accord par proximit 6' , Recherches urracquisition der orthographe , Gouvernement du Qu 6 be c , pp .  99-114 . 
Peterson , J . L .   ( 1980 ) ' Computer Programs for Detecting and Correcting Spelling Errors '  , Comm . of the ACM , pp .  676-687 . 
Robert , P . (1967) Dictionnaire , Paris , Le Robert , 1970 p . 
Romanycia , M . H . & F . J . Pelletier (1985) ' What is a heuristic ?' , Computational Intelligence , vol . 1, pp .  4758 . 
Tomita , M . (1986) Efficient Parsing for Natural Language,
Boston , Kluwer , 201p.
Tomita , M .   ( 1987 ) ' An Efficient Augmented-Context-Free Parsing Algorithm '  , Computational Linguistics , vol . 13, n ? l-2, pp .  3146 . 
Winograd , T . (1983) Language as a Cognitive Process , Volume I : Syntax , Reading MA , Addison-Wesley , 640 p . 

