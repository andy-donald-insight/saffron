ADAPTATION OF MONTAGUE GRA/k4MAR TO THEREQUIREMENTS OF QUESTION-ANS WERING
S.P . J . Landsbergen
Philips Research Laboratories
Eindhoven-The Netherlands
Abstract
In this paper a new version of Montague Grammar ( MG ) is developed , which is suitable for application in question -answering systems  . 
The general framework for the definition of syntax and semantics described in Montague's' Universal Grammar ' is taken as starting-point  . This framework provides an elegant way of defining an interpretation for a natural language  ( NL ) : by means of a syntax-directed translation into a logical language for which an interpretation is defined directly  . 
In the question-answering system PHLIQAi\[i\] NL questions are interpreted by translating them into a logical language  , the Data Base Language , for which an interpretation is defin-ed by the database  . The similarity of this setup with the Montaguef ramework is obvious  . 
At first sight a QA system like this can be viewed as an application of MG  . However , a closer look reveals that for this application MG has to be adapted in two ways  . 
Adaptationi . MG is a generative formalism.
It generates NL sentences and their logical forms ' in parallel '  . In a QA system a parser is needed : an effective procedure which assigns to an input question the syntactic structure that is required for the translation into the logical language  . The MG framework has to be chang-ed in such a way that for each grammar within that framework a parser can be defined  . 
Adaptation Z . The logical language used in MG contains a term for every referential word  . 
The Data Base Language of a QA system is restricted in this respect  , which is caused by the fact that the database only contains knowledge about a restricted subject-domain  . Therefore the translation from NL into the Data Base Language is partial  . An extension of MG is needed which shows how a subset of NL sentences can be interpreted by means of a translation into a restricted logical language  . 
Adaptation g is only briefly discussed here , as it results in a framework which has already been described extensively in \[ I\]  . 
The main part of this paper is devoted to adaptation I  . A new syntactic framework is proposed , which can be summarized as follows . 
-The syntactic rules ( M-rules ) op . erate on labeled trees ( or equivalently : labeled bracketings ) instead of strings as in MG . Successful application of M-rules-starting with basic terms-leads to a surface tree of a sentence  . 
(This kind of extension of MG has already been proposed by Partee and others  , for different reasons than for making parsing possible  ) -A contextfree grammar G cf defines the class Lcf of trees that are allowed as arguments and results of the M-rules  . So the class of surface trees defined by the M-ru les is a subset of Lcf  . 
-An M-rule Ri is a pair < Ci , Ai > ; where C i is a condition on n-tuples of trees < t I  .   .   .   .   , tn > and Ai is an action , applicable to any tuple for which Ci holds , and delivering a tree t . 
Each rule Rimus to bey the following conditions :   ( i ) Ci and Ai are effective procedures . 
( ii ) From ~ i an inverse rule RfI = < C~I , A ~ I > can be derived such that C\[ 1 and A\[ 1 are effective procedures and : Ci ( < tI .   .   .   .   . tn >) --- ~ C~1(Ai(<tl .   .   .   . tn >))
Cil ( t ) ---=-~ Ci ( A  ~ l ( t ) )  ( iii ) t is bigger ( has more nodes ) than any ti in the tuple < tI .   .   .   .   . tn > . 
Special , simple , cases of M-rules are the contextfree rules of G cf  . 
For this type of grammar a parser can be designed which operates in two steps : i  ) an ordinary contextfree parser , based on Gcf , which assigns surface trees to sentences . 
Z ) a procedure that applies inverse M-rules in a topdown fashion to these surface trees  . 
The parser is successful for a given sentence if a surface tree can be assigned to it by I  ) and if this surface structure can be broken down into basic expressions by procedure Z  )  . 
In that case the resulting derivation structure of M-rules is input for the translation into the logical language  . 

It is proved that such a parser is an effective procedure and that it assigns to a sentence exactly those syntactic structures that the generative rules would assign  . The proof is first given for a finite set of rules and is then extended to grammars with rule -schemes defining an infinite set of rules  . Rule-schemes are needed because the grammar contains an infinite set of syntactic variables  . The reservation has to be made that the parser generates only one of the infinitely many derivations of a sentence that differ only in their choice of varfables  . 
The power of the new framework is discussed.
It is shown how Montague's PTQ grammar might be reformulated in it  . The parser is compared with the parser written by Friedman and Warren for that grammar  . 
Finally , conditions are discussed that have to be added to the framework in order to make an effective translation into natural language possible  . 
\[ i \] W . J . H . J . Bronnenberg et al-The ques-tion-answering system PHLIQAI  . 
To appear in L . Bolc ( ed .): Natural
Language Question Answering Systems.
Carl Hanser Verlag , Mfinchen ~ Wien;
Macmillan , London.

