Concept clustering and knowledge integration from a 
children's dictionary
Caroline Barri ; ~ rean ( II , ? edl'opowich
School of ( k ) nqmting S(:iencc , Si\]n(ml , ' rascrUlliv crsity
l ~ urnaby , l ~ C , (; n . nada , V 5 A 1 S 6

Abstract
Knowledge structures called Concel ) t
(? lustering Knowledge (\] raphs ( CCKGs )
are introduced along with a process for their construction from a machine readable dictionary  . C ( 3K ( \]s contain multiple concepts interrelated through multi-l  ) le semantic relations together forming a semantic duster represented by a con-  . 
ceptual graph .   '1'he knowledge acquisition is performed on a children 's first dictionary  . The concepts in w ) lved are general and typical of adaily lidconw ' a'sa-lion  . A collection of conceptual clusters together can lbrm the basis of a lexical knowledge base  , where each C'( , ' l(( . ~ contains a limited nnmber of highly connected words giving use fid information about a particular domain or situation  . 
it Introduction
When constructing al , exieal Knowledge Ilase (1 , KB ) useful for Naturall , anguage Processing , the source of information from which knowledge is acquired and the structuring of this information within the LKB are two key issues  . Machine Readable Dictionaries ( MIH ) s ) are a goods our ( : e of lexical information and have been shown to beal  ) plical ) le to the task of I , KIIC Oll Struction ( l ) ol a . nctal . , 1993; Calzolari , t992; Copestake , \[990; Wilks et al , 1989; Byrd et al ,  1987) . Often though , a localist approaeh is adopted whereby the words are kept in alphabetical order with some representation of their definitions in the form of a template or feature structure  . F , fl brt in find-lug cormections between words is seen in work on automatic extraction of sem~mtic relations Dora MRI  ) s ( Ahlswede and Evens , 1988; Alshawi , 1989; Montemagrfi and Vandorwende ,  19!32) . Additionally , effort in finding words that are close semantically is seen by the current interest in statistical techniques for word clustering  , looking at ( -o-occurrences of words in text corpora or dictionaries  ( Church and I Ianks , 1989; Wilks et al , 1989; Brown et al , 11992; l'ereira et al ,  11995) . 
Inspired by research in the . areas of semantic relations , semantic distance , concept clustering , and using ( , once Itual ( Jialhs ( Sowa , 1984) as our knowledge representation , we introduce ( ; once pt (? lustering In owledge Graphs ( CCKGs ) . Each ( JCKG will start as a Conceptual Graph representation of a trigger word and will expaud following a search algorit  , hm to incorporate related words and ibrma C ' once pt Cn  , s( , er . The concept chls-tcr in itself is interesting for tasks such as word disambiguation  , but the C(~K(\]will give more to that cluster . It will give the relations between the words , making the graph in some aspects similar to a script  ( Schank and Abelson ,  11975) . l lowever , a CCK ( I is generated automatic Mly and does not rely on prin  , itives but on an unlimited number of concel)ts , showing objects , persons , and actions interacting with each other . This interaction will be set , within almr tieular domain , and the trigger word should be a keyword of the domain to represent  .   11' that process would be done for the whole dictionary  , we would obtain anl , l(II divided into multiple clusters of words , each represented by a CCK(\] . Then during text processing f in : example , a portion of text could be analyzed using the appropriate CCK  ( \] to lind implicit relations and hell ) understanding the text . 
Our source of knowledge is the Americ ~ miter-itage First I  ) ictionary t which contains 1800 entries aml is designed for children of a gesix to eight  . 
lit is made for yom ~ gl ) eople learning the structure and the basic w ) cabulary of their language . In comparison , an adult's dictiouary is more of a reference tool which assumes knowledge of a large basic vocabulary  , while a learner's dictionary assumes at limited vocabulary but still some very sophisticated concepts  . Using a children's dictionary allows us to restrict our vocabulary  , but still work on general knowledge about day to day  ( : Oil--cel ) tS and actions . 
In the folk ) wing sections , we first present the lCopy right @1994 by\[IoughtonMiftlinCompany . 
Reproduced by permission h'om TIlEAMERICAN
ItERITAGI '; FIRSTDIC'I ? IONAIlY.
5 5 transformation steps from the definitions into conceptual graphs  , then we elaborate on the integration process , and finally , we close with a discussion . 
2 Transforming definitions
Our definitions may contain up to three general types of information  , as shown in the examples in
Figure 1.
? description : This contains genus/differentia information  . Such information is frequently used for noun taxonomy construction  ( Byrd et al . , 1987; Klavans et al , 1990; Barri ~ re and
Popowich , To appear August 1996).
? general knowledge or usage : This gives information usefl flindaily life  , like how to use an object , what it is made of , what it look sllke , etc . 
? specific example : This presents a typical situation using the word defined and it involves specific persons and actions  . 
Cereal is a kind of food . \[ description \] Many cereals are made from corn  , wheat , or rice . \[ usage\]Most people eatce real with milk in a bowl  . \[ usage\]Asia is what is left after something burns  . \[ usage \] It is a soft gray powder . \[ description \] Ray watched his father clean the ashes out of the fire place  . 

Figure 1: Example of definitions
The information given by the description and general knowledge will be used to perform the knowledge integration proposed in section  3  . The specific examples are excluded as they tend to involve specific concepts not always deeply related to the word defined  . 
Our processing of the definitions results in the construction of a special type of conceptual graph which we call a temporary graph  . The set of relations used in temporary graphs come from three sources  . Table 1 shows some examples for each type . 
1 . the set of closed class words , ex : of , to , in , and ; 2 . relations extracted via defining formulase x : part of  , made-of , instrument ; defining formulas correspond to phrasal patterns that occur often through the dictionary suggesting particular semantic relations  ( ix . A is a part of B ) ( Ahlswede and Evens , 1988; Dolan et al ,  1993) . 
3 . the relations that are extracted from the syntactic structure of a sentence  , ex : subject , object , goal , attribute , modifier . 
As some relations are defined using the closed class words  , and many of those words are ambiguous , the resulting graph will itself be ambiguous . 
This is the main reason for calling our graphs temporary as we assume a conceptual graph  , the ultimate goal of our translation process , should contain a restricted set of well-defined and non-ambiguou semantic relations  . For example , by can be a relation of manner ( by chewing ) , time ( by noon ) or place ( by the door ) . By keeping the preposition itself within the temporary graph  , we delay the ambiguity resolution process until we have gathered more information and we even hopefully avoid the decision process as the ambiguity might later be resolved by the integration process itself  . 
1 . closed class words temporary I~raphnp:np\[A\] , prep\[Bl , np\[C\]\[A\]-> ( B ) ->\[ C \] apple on the table\[apple\]-> ( on ) ->\[ table\]2 . defining formulas
A is used to B
A is a part of B
A is a place where B3 . syntactic patterns : np\[A\],vp\[B\]
John eat svp:vp\[A\] , inf_vp\[B\]eat to grow temporary graph\[B\]-  >  ( instrument ) ->\[ A \]\[ A \] -> ( part of ) ->\[B\]\[Bl -> ( loc ) ->\[ A \] temporary graph\[B\]-> ( agent ) ->\[ h\]\[eat\]-> ( agent ) ->\[ John \]\[ A \] -> ( goal ) ->\[ B\]\[eat\]-> ( goal ) ->\[ grow\]Table 1: Examples of relations found in sentences and their corresponding temporary graphs  3 Knowledge integration This section describes how given a trigger word  , we perform a series of forward and backward searches in the dictionary to build a CCKG containing useful information pertaining to the trigger word and to closely related words  . The primary building blocks for the CCKG are the temporary graphs built from the dictionary definitions of those words using our transformation process mentioned in the previous section  . Those temporary graphs express similar or related ideas in different ways and with different levels of detail  . 
As we will try toput all this information together into one large graph  , we must first find what information the various temporary graphs have in common and then join them around this common knowledge  . 
To help us build this CCKG and perform our integration process  , we assume two main knowledge structures are available  , a concept hierarchy and a relation hierarchy , and we assume the exis-tance of some graph operations  . The concept hierarchy concentrates on nouns and verbs as they account for three quarters of the dictionary definitions  . It has been constructed automatically according to the techniques described in  ( Barri~re and Popowich , To appear August 1996) . The relation hierarchy was constructed manually . A rich hierarchical structure between the set of relations is essential to the graph matching operations we use for the integration phase  . 
As we are using the conceptual graph formalism to represent our definitions  , we can use the graph t , wo operations we will need are the maximal common subgraph algorithm and the maximal join algorithm  . 
3.1. Maximal common subgraph
The maximal common subgraph between two graphs consists of finding a subgraph of tile first graph that is isomorphic to a subgraph of these e -ond graph  . In our case , we cannot often expect to find two graphs that contain an identical subgral  ) h with the exact same relations and concepts . Ideas cart be expressed in many ways and we therefore need a more relaxed matching schema  . We describe a few elements of this " relaxation " process and illustrate them by an example in Figure  2  . 
(1 ) John makes a nice drawing on a piece of paper with the pen  . 
\[ make\]-> ( sub ) ->\[ John \] -> ( obj ) ->\[ drawing\]-> ( nit ) ->\[ nice\]-> ( on ) ->\[ piece\]-> ( or ) ->\[ paper\]-> ( with ) ->\[ pen\] ( 2 ) John uses the big crayon to draw rapidly on the paper  . 
\[ ( haw\]-> ( sub ) ->\[ Johnl -> ( on ) ->\[ paper\]-> ( inst .   .   .   .   .   .   .   . t)->\[crayon\]->(manner)->\[rapidly\]
MAXIMAl , COMMONSUBGRAPn:\[make ( draw ) \]- > ( sub ) ->\[ John \] -> ( obj ) ->\[ drawing\]-> ( on ) ->\[ piece\]-> ( of ) ->\[ paper\]-> ( instrument ) ->\[ label-11 ~ method l ~ elation subsumption
Predictable meaning Mdft nelation tr~nsitivity graph l\]  graph2 pell cr ~ yoll with instrument drawing dr ~ w piece of paper p ~ per 
MAXIMAL JOIN :\[ make ( draw ) \]- > ( sub ) ->\[ John \] -> ( obj ) ->\[ drawing\]-> ( art ) ->\[ nice\]-> ( o . ) ->\[ piece\]->(of ) ->\[ paper l -> ( inst .   .   .   .   .   . t)->\[l~b ? l-1\]->( .   .   .   .   .   .   .   .   .   ) ->\[ rapidly \] Figure 2: Example of " relaxed " maximal commons ui ) graph and maximal join algorithms Semantic dis tance between concepts  . In the maximal common subgraph algorithm proposed by  ( Sow %: 1984 )  , two concepts ( C1 , CY ) could be matched if ones nbsumed the other in the concept hierarchy  . We can relax that criteria to match two concepts when a third concept C which subsumes  C1 and C2 has a high enough degree of informativeness ( Resnik ,  1995) . The concept hierarchy can be useful in many cases  , but it is generated from the dictionary and might not be complete nough to find all similar concepts  . 
In the example of Figure 2 , when using tile concept hierarchy to establish the similarity between pen and cray on  , we find that ; one is a subclass of lool and the other of wax , both then are sub-stoned by the general concept something  . We have reached the root of the noun tree in the concept hierarchy and this would give a similarity of  0 based on the informativeness notion . 
We extend the subsumption notion to the graphs . Iustead of finding a concept that sub-sulnest wo concepts  , we will try finding a common subgraph that subsumes the graph representation of both concepts  . In our example , pen and crayon have a common subgraph\[write\] ->  ( inst ) ->~ . The notion of semantic distance can be seen as the informativeness of the subsuming graph  . The re-suiting maximal comlnons nb graph as shown in Figure  2 contains the concept label-1  . This label is associated to a covert category ~ s presented in  ( Barri~re and Popowich , To appear August 1996) . 
We carl update tile concept hierarchy and add this  label-1 as a subclass of something and a superclass of pen and crayon  . It expresses a concept of " writing instrument " . 

Relation subsmnption . Since we have a relation hierarchy in addition to our concept hierarchy  , we can similarly use subsumption to match two relations  . Ini , ' igure 2 , with is subsumed by instrument , and by lnapping them , we disant biguate wilh from corresponding to another semantic relation  , such as possession or accompaniment . This is a case where a narn biguons preposition left in the temporary graph is resolved by the integration process  . 
Predictable meaning shift . A set of lexical implication rules were developed by  ( Ostler and Atkins , 1992) for relating word senses . Based on them , we are developing a set of graph matching rules . Figure 2 exemplifies one of the ln where two graphs containing the same word  ( or morphologically related )  , here draw and drawing , used as different parts of speech can be related . 
Relation transitivity . Some relations , like part of , in , from can be transitive . For example , we can map a graph that contains a concept A in a certain relation to concept B onto another graph where concept A is in the same relation with a part or a piece of B as exemplified in Figure  2  . Transitivity in relations is in itself a challenging area of study  ( Cruse , 1986) and we have only begun to explore it . 
3.2 Maximal join
The basic operation for the integration of temporary graphs is the maximal join operation where a union of two graphs is formed around their maximal common subgraph using the most specific concepts of each  . We just saw how to relax the maximal common subgraph operation and we will perform the join around that " relaxed " subgraph  . 
Figure 2 shows the result of the maximal join.
The join operation allows us to bring new con -ccpts into a graph by finding relations with ex -between existing concepts  . 
3.3 Integration process
Given the concept hierarchy , relation hierarchy and graph matching operations , we now describe the two major steps required to integrate all the temporary graphs into a CCKG  . 
TRIGGER . PHASE . Start with a central word , a keyword for the subject of interest that becomes the trigger word  . The temporary graph built from the trigger word forms the initial CCKG  . To expand its meaning , we want to look at the important concepts involved and use their respective temporary graphs to extend our initial graph  . We deem words in the definition to be important if they have a large semantic weight  . 
2 . ' he semantic weight of a word or its informativeness can be related to its frequency  ( l~esnik ,  1995) . Itere , we calculate the number of occurrence of each word within the definitions of nouns and verbs in our dictionary  . The most frequent word " a " occurs 2600 times among a total of 38000 word occurrences . Only 1% of the words occur more than 130 times ,   5% occur more than 30 times but over 60% occur less than 5 times . 
Ordering the dictionary words in terms of decreasing number of occurrences  , the top 10% of these words account for 75% of word occurrences . 
For our current investigation , we propose this as the division between semantically significant words  , and semantically insignificant ones . So a word from the dictionary is deemed to be semantically significant if it occurs less than  17 times . 
Note that constraining the number of semantically significant words is important in limiting the exploration process t br constructing the concept cluster  , as we shall so on see . 
Trigger forward : Find the semantically significant words fi ' om the CCKG  , and join their respective temporary graphs to the initial 

Trigger backward : Find all the words in the dictionary that use the trigger word in their definition and join their respective temporary graphs to the CCKG  . 
Instead of a single trigger word , we now have a cluster of words that are related through the CCKG  . Those words , form the concept cluster . 
EXPANSION PHASE . We try finding words in the dictionary containing many concepts identical to the ones already present in the CCKG but perhaps interacting through different relations allowing us to create additional links within the set of concepts present in the CCKG  . Our goal is to create a more interconnected graph rather thans prouting from a particular concept  . For this reason , we establish a graph matching threshold to decide whether we will join a new graph to the CCKG being built  . We set this threshold empirically : the maximal common subgraph between the CCKG and the new temporary graph must contain at least three concepts connected through two relations  . 
Expansion forward : For each semantically significant word in the CCKG  , not already part of the concept cluster , find the maximal common subgraph between its temporary graph and the CCKG  . If matching surpasses the graph matching threshold  , perform integration ( maximal join operation ) and add the word in the concept cluster . Continue forward until no changes are made . 
Expansion backward : Find words in the dictionary whose definitions contain the semantically significant words from the concept cluster  . For each possible new word , find the maximal common subgraph between its temporary graph and the CCKG  . Again , if matching is over the graph matching threshold , perform integration and add the word to the concept cluster  . Continue until no changes are made . 
We can set a limit to the number of steps in the expansion phase to ensure its termination  . I low-ever in practice , M'tertwoor three steps forward or backward , the maximal common subgraphs between the new graphs and CCKG do not exceed the graph matching threshold and thus are not added to the cluster  , terminating the expansion . 
3.4 Example of integration
Figure 3 shows the starting point of an integration process with the trigger word  ( TW ) lelter , its definition , its temporary graph ( TG ) , the concept cluster ( CC ) containing only the trigger word , and the CCKG being the same as the temporary graph  . Then we show the trigger forward phase . 
The number of occurences ( NOte ) of each word present in the definition of letter is given  . Using the criteria described in the previous section  , only the word message is a semantically significant word  ( SSW )  . We then see the definition of message , the new concept cluster and the resulting

The trigger backward phase , would incorporate the temporary graphs for address  , mail , post office and stamp . The expansion forward phase would further add the temporary graphs for the semantically significant words : send  , package during the first step and then would terminate with the second step as no more semantically significant words not yet explored have a maximal common subgraph with the CCKG that exceeds the graph matching threshold  . The expansion backward would finally add the temporary graphs for card and note  , again terminating after two steps . 

The resulting cluster is : letter , message , address , mail , post office , stamp , send , package , card , note . The resulting CCKG shows the interaction between those concepts which smn ma-rizes general knowledge about lnow we use those concepts together in ada  . ily conversation : we go to the post office to mail letters  , or packages ; we write letters , notes and cards to send to peo I ) le through the mail , etc . I laving such clusters and such knowledge of the relationship between words as part of our lexical knowledge base can be usefl fl to understand or even generate a text containing the concepts involved in the cluster  . 
S'I'All.'I'INGPOIN'F :
TW : letter
Def : A letter is a message you write on paper  , 
TG : same as CCKG
CO : letter
CCKG:\[write\]-> ( obj ) ->\[ message ( lettr ) \] - >  ( subj ) ->\[ per .   .   .   . : you \] -> ( on ) ->\[> q , e,'l
Tll.IGGE tI~I ! ' OItWAI/.D :
NOtes : you:280, paper:42, write:31, message : 7
SSWs : message l_)ef:Aln (' . ssage is a group of words that is sent l'l ' Olll  ( ) lie person to ; ~ . Ilothel ' . 
Many peoples endnms sages through the mail.
(; C : letter , message
CCKG:\[word:group ( message ( letter )   ) \]<@~ bj ) <-\[ write \]-> ( sub ) ->\[ person : you \] -> ( o , ) ->\[ l , ~ per\]<-(obj ) <-\[ . . . . .  11->( . ~ . bj)->\[pe ~" . . . . . . . . . . . . y \] - > ( f ro l / l ) - > \[ pe .   .   .   .   .   .   .   .   .   .   . \]->( to ) ->\[ I .   .   .   .   .   .   .   .   .   .   .   .   .   . the r\]-> ( through ) ->\[ mail I Fignre 3: i Digger forward from letter . 
4 Discussion'l'lu : ough this paper , we showed the multiple steps leading us to tile building of Concept Clustering Knowledge Graphs  ( CCKGs )  . Those knowledge structm:es arc built within the Lexical Knowledge Base  ( LKB )  , integrating l nultiple parts of the I , Kt ~ around a particular concepto form a clus . -ter and express the multiple relations among the words in that cluster  . The CCKGs could be either permanent or temporary structures depending on the  . applicatkm using the LKB . For example , for a text understanding tusk , we can build beforehand the CCKGs corresponding to one or multiple keywords from the text  . Once built , the CCKGs will help us in our comprehension ad disambiguation of the text  . 
By using the Americanlh ; ritage First l ) ictio-narya~sour source of lexical information , we were able to restrict our vocabulary to result ill a project of reasonable size  , dealing with general knowledge about ( lay today concepts and actions . 
The ideas explored using this dictionary can be extended to other dictionaries as well  , but the task might be corne more complex as the defilfitions in adult's dictionaries are not as clear and usage oriented  . In fact , an LKBl miltfl'oma children's dictionary could be seen as a starting point from which we could extend our acquisition of knowledge using text corpora or other dictionaries  . Certainly , if we euv is age applications trying to understand children'stories or help in child education  , a corpora of texts for children would be a good source of information to extend our LKB  . 
The graph operations ( maximM commous ubgraph and maximal join ) defined on conceptual graphs , antiadapted here , play an important role in our integration process toward a final CCKG  . 
Graph matching was also suggested as an alterna - tiw  ; to taxonomic search when trying to establish semantic similarity between concepts  . As well , by putting a threshohl on the graph matching process  , we were able to limit the expansion of our clustering  , as we can decide and justify the incorporation of a new concept into a particular cluster  . 
Many aspects of the concept clustering and knowledge integration processes have already been implemented and it will so on be possible to test the techniques on different rigger words using different thresholds to see how they effect the quality of the clusters  . 
(~lustering is often seen as a statistical operation that puts together words " somehow " related  . 
ltere , we give a meaning to their clustering , we tint\[and show the connections between concepts  , and by doing so , we build more than a cluster oF words . We build a knowledge graph where the concepts interact with each other giving impelt aut implicit information that will be useful for 
Natural Language Processing tusks.
5 Acknowledgments i\['his research was supported by the Institute for Robotics and Intelligent Systems  . The autlnors would like to thank the anonymous referees for their comments and suggestions  , and Petr Kubon for his many comments on the paper . 
References
T . Ahlswede and M . Evens .  1988 . Generating a relational lexicon from a machine -readable dictionary  . International Jowrn M of Lexicography , 1l(3):214237 . 
II . A \] shawi .  1989 . Analysing tile dictionary def-inil . ions . In 1 ~ . Boguraev and T . llriscoe , editors , Compulalional Lexicography for Natural Language Processing  , chapter 7 , pages 153-170 . 
Long , nan(\]reapIlKl , imited.
C . Barri6re and F . Popowich . Toapl ) ear , August 1996 . Building a noun taxonomy from a chil-
G Steborg , Sweden.
P . Brown , V . J . Della Pietra , P . V . deSouza , J . C . 
Lai , and I . L . Mercer .  1992 . Class-based n-grain models of natural language . Computational Linguistics , 18(4):467-480 . 
R . J . Byrd , N . Calzolari , M . Chodorow , J . Klavans , M . Neff , and O . Rizk .  1987 . Tools and methods for computational lexieology . Computational Linguistics , 13(3-4):219-240 . 
N . Calzolari .  1992 . Acquiring and representing semantic information i a lexical knowledge base  . 
In J . Pustejovsky and S . Bergler , editors , Lexical Semantics and Knowledge Representation : First SIGLEX Workshop  , chapter 16 , pages 235-244 . Springer-Verlag . 
K . Church and P . Hanks .  1989 . Word association norms , mutual information and lexicography . In Proceedings of the 27lh Annual meeting of the Association for Computational Linguistics  , pages 76-83 , Vancouver , B C . 
A . A . Copestake .  1990 . An approach to building the hierarchical element of a lexical knowledge base from a machine readable dictionary  , in Proceedings of the Workshop on Inheritance in Natural Language Processing  , 7' ilburg . 
D.A . Cruse . 1986. Lexical Semantics . Cambridge
University Press.
W . Dolan , L . Vanderwende , and S . D . Richardson .  1993 . Automatically deriving structured knowledge bases from online dictionaries  . In The First Conference of the Pacific Association for Computational Linguistics  , pages 514 , II arbour Center , Campus of SFU , Vancouver , 

J . Klavans , M . S . Chodorow , and N . Wacholder . 
1990 . From dictionary to knowledge base via taxonomy . In P~vceedings of the 6th Annual Conference of the UWC entre for the New OED : Electronic Text Research  , pages 110-132 . 
S . Montemagni and L . Vanderwende .  1992 . Structural patterns vs . string patterns for extracting semantic information from dictionaries  . In Proc . of the 14o~COLING , pages 546-552,
Nantes , France.
N . Ostler and B . T . S . Atkins .  1992 . Predictable meaning shift : Some linguistic properties of lexical implication rules  . In J . Pustejovsky and S . Bergler , editors , Lexical Semantics and Knowledge Representation : First S\[GLEX Workshop  , chapter 7 , pages 87-100 . Springer-

17 . Pereira , N . Tishby , and L . Lee .  1995 . Distributional clustering of english words . In Proc . of the 33th ACL , Cambridge , MA . 
P . Resnik .  1995 . Using information contento evaluate semantic similarity in a taxonomy  . In Proc . of the 14th IJCAL volume 1 , pages 448-453 , Montreal , Canada . 
R . Schank and FL . Abelson .  1975 . Scripts , plans and knowledge . In Advance papers 4th Intl . 
Joint Conf . Artificial Intelligence.
J . Sowa .  1984 . Conceptual Structures in Mind and Machines . Addison-Wesley . 
Y . Wilks , D . Fass , GMGuo , J . McDonald , T . Plate , and B . Slator .  1989 . A tractable machine dictionary as a resource for computational semantics  . In Bran Boguraev and Ted Briseoe , editors , Computational Lexicography for Natural Language Processing  , chapter 9 , pages 193-231 . Longman Group UK Limited . 

