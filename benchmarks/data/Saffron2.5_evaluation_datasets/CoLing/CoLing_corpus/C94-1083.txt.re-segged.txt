CATEGORIAL GRAMMARAND DISCOURSEREPRESENTATION THEORY 
Reinhard Muskens
Institute for Language Technology and Artificial Intelligence  ( ITK ) 
PO Box 90153 , 5000 LE , Tilburg , The Netherlands , R . A . Muskens@kub . nl

In this paper it is shown how simple texts that can be parsed in a Lambek Categorial Grammar can also automatically be provided with a semantics in the form of a Discourse Representation Structure in the sense of Kamp  \[1981\]  . The assignment of meanings to texts uses the Curry-Howard-Van 
Benthem correspondence.
O . INTRODUCTION
In Van Benthem \[1986\] it was observed that the Curry-Howard correspondence between proofs and lamt x laterms can be used to obtain a very elegant and principled match between Lambek Categorial Grammar and Montague Semantics  . 
Each proof in the gambek calculus is matched with a lambdate rm in this approach  , and VanBen them shows how this lambda term can be interpreted as a recipe for obtaining the meaning of the expression that corresponds to the conclusion of the Lambek proof from the meanings of its constituent parts  . 
Usually the semantics that is obtained in this way is an extensional variant of the semantics given in Montague  \[1973\]   ( Hendriks \[1993\] sketches how the method can be generalized for the full intensional fi'agment  )  . However , it is generally acknowledged nowadays that the empirical coverage of classical Montague Grammar falls short in some important respects  . Research in semantics in the last fifteen years or so has increasingly been concerned with a set of puzzles for which Montague's original system does not seem to provide us with adequate answers  . The puzzles I am referring to have to do with the intricacies of anaphoric linking  . What is the mechanism behind ordinary cross -sentential naphora  , as in ' Harry has a cat . He feeds it '? Is it essentially the same mechanism as the one that is at work in the case of temporal anaphora ? I low is it possible that in Geach's notorious ' donkey ' sentences  , uchas ' If a farmer owns a donkey , he beats it ' , the noun phrase ' a farmer ' is linked to the anaphoric pronoun'it'without its having scope over the conditional and why is it that the noun phrase is interpreted as a universal quanti -tier  , not as an existential one ? While it has turned out rather fi ' uitless to stt  , dythese and similar questions within classical Montague Grammar  ( MG )  , they can be studied profitably within the framework of Discourse Representation Theory  ( DRT , see Heim\[1982 ,  1983\] , Kamp\[1981\] , Kamp & Reyle\[1993\]) . 
This semantic theory offers interesting analyses of tile phenomena that were mentioned above and many researchers in the field now adopt some form of DRT as the formalism underlying their semantical investigations  . 
But the shift of paradigm seems to have its drawbacks too  . Barwise\[1987\] and Rooth\[198711 , for example , observe that the new theory does not give us the nice unified account of norm phrases as generalized quantifiers that Monta-gut's approach had to offer and it is also clear from Ka  , n1 ) & Reyle \[1993\] that the standard DRT treatment of coordination in arbitrary categories cannot claim the elegance of the Montagovian treatment  . For the purposes of this paper a third consequence of the paradigm shift is important  . The Curry-Howard-Van Benthem method of providing l ~ ml be k proofs with meanings requires that meanings be expressed as typed lambda terms  . Since this is not the case in standard DRT , the latter has no natural interface with Lambek Catego  , ' ialGrammar . 
It seems then that the niceties of MG and DRT have a complementary distribution and that con -siderabl cadvantages could be gained from merging the two  , provided that the best of both worlds can be retained in the merge  . In fact the last eight years have witnessed a growing convergence between the two sem:mtic frameworks  . The articles by Barwise and Rooth that were mentioned above are early examples of this trend  . 
Other important examples are Zeew~t\[1989\] and
Groenendijk & Stokhof\[1990, 1991\].
None of these l ) a pers gives the combination of DRT and type logic that is needed for attaching the first to Lambek 's calculus  , but in Muskens\[forthcoming \] it was shown how the necessary fusion can be obtained  . The essential obserwttion is that the meanings of DRT's discourse representation structures  ( boxes ) are first order definable relations . They can thus be expressed within first order logic and within the first order part of ordinary type logic  ( i . e . the logic that was described in Church\[1940\] , Gallin\[197511 and Andrews\[1986\]) . This allows us to nl-nsl-sLxL in I-nn , n\st-s17 L\]n , ( n\s)/n , ni-s\[/R\]n , ( n\s)/nt-s/nsI"sn , ( n\s)ln , ( sln)\sks\[\L\]\[\\]~:1(n\s)ln , ( sln)\sVn\sCH~ells/(n\s ) , ( n\s)/n , ( s/n)\sFs(s/(n\s ))/ on , or , ( n\s)/n , ( s/n)\s F s
St " SIlL\]\[IL\[
IlL\](s/(n\s )) I on , cn , ( n\s ) In , (( sIn)\s)Icn , cnF-sfig .  1 . Prooflor'ama , ta do resI two nlan'treat noun phrases as expressions of a siilgle type  ( a generalized kind of generalized quantifiers ) and to have a simple rule for coordination in arbitrary categories  ( see Muskens\[forthcoming \] for It discussion of the latter  )  . In this paper we build on the result and show how the system can also be attached to Lambek Categorial Granun  , 'tr . 
The rest of the paper consists of five main scc - tions  . The first takes us from English to l ~ ambek proofs and the second takes us from Lambek proofs to semantical recipes  . After the third section has described how wc can emulate boxes in type logic  , the fourth will take us from semantical recipes to lx  ) xes and tile fifth from boxes to truth conditions . 
1. FROMENGLISIITOL AMBEKPROOFS
I shall assume familiarity with I~tmbck's calculus and rehearse only its most elementary features  . 
Starting with itset of basic categoric . v , which for tile purposes of this paper will be txt  , s , n , cn ( for texts , sentences , names and common nouns ) , we define it category to be either a basic category or anything of one of the forms a/b or b\a  , where a and b are categories . A sequent is an expression 7" l-c , where T is a not > empty finite sequence of categories  ( the antecedent ) and c ( the succedent ) is a category . A sequent is provable if it can be proved with the help of the following 
Gentzen rules.
~\[ AX\]cL-c
T t-I > U > a , V F c
U , alb , T , Vt-c
Tt-bU , a , Vl-c
U , T , b\a , Vt-c
I/L\]\[\L\]"s:bl_-a_\[/RI
Tl-albb , ' rl-a
IX*el7"l-b\a
An example of a proof in this calculus is given in fig  .  1 , where it is shown that ( s/(n\s ))/ on , cn , ( n\s)/n , (( s/n)\s)/cn , cn-s is a provable sequent . If the categories in the antecedent of this sequent are assigned to the words ' a '  , ' man ' , ' adores ' , ' It ' and ' woman'respectively , wcC all interpre the derivability of tile given sequent  , ' is saying that these words , in this order , belong to the category s . 
2. FROMLA MBEK PROOFSTO
SEMANTICALI~I,~CIPES
Proof theory teaches us that there is a close co , -respondence between proofs and lanlt ) daterms . 
The lambda term which corresponds to a given proof can be obtained with the help of the socalled Curry-l toward correspondence  . Van Bcn them \[1986\] observed that the lambda term that we get in this way also gives us a COlTCS pOn-dence between L : unbekproofs on the one hand and the intended meanings of the resulting expressions on the other  . In the present exposition of the Curry-I loward -Van Benthem correspondence Ish  ; dl follow the setup and also tile notational conventions of I lendriks  111993\]  . For more Cxl ) lanation , the reader is rcferred to this work , to VanBenthenl\[1986 ,  1988 , 1991\[ and to
Moortgat\[198811.
The idea behind the correspondence is that we match each rule in the Lambek calcuh is with a correspondings envintic rnle and that  , for each p , ' o of , we build an isomorphic tree of semantic sequenls , which we define as expressions "/" F-Y , where 7" is a seq t , ence of variables and y is a hunbdate rm with exactly the variables in  7" free . 
The semantic rules that are to match the rules of ?   v1-v   P1-P\[\L \] v ' 1- v'v , 1""1-t '"( v)\[/Z , \] v , R , v'1-R(v')(v)\[/R\]v , RFZv ' . R(v')(v)p'1-p'v,R,QFQ(3 . v, . R(v , ) iv )),\[\ L\]\[\R\]
R , 0F Zv . O(Z v '. R(v ' Xv))
Q ', & QFQ'(Zv . Q(Xv ' . R(v')(v ))) p"1-p"\[/L\]\[/L\]P'1-P'D , P , R , Q1-D(P ) ( Xv . Q(Xv ' . R(v ')( v ))) l/L\]D , P , R , D ' , P'1-D(P ) ( Zv . D '( l ") ( Zv ' . R(v ')( v ))) fig .  2 . Semantic tree for ' a manadores a woman'the Lambek calculus above are as follows  .   ( Tiletermy\[u := w ( fl ) \] is meant to denote the result of substituting w ( fl ) for u in 7 . ) ~,\[ AX\]x1-x ~' Fflv ',, ~ v'1-r, . . . ., , ~, ' L / L \ ]
U , w , 7, V'1-flu := wq/)\]7f'k ~ u', .   , v'kr "\ L\]u' , T ' , w , V ' 1-r\[; , :=  , , , qj)\]t 7" , v1-a\[IRI)"1-Zv . 
v,T'1-a\[\R\]
T'1-Zv . a
Note that axioms and the rules l/L\] and \[~ L\] introduce new free variables  . With respecto these some conditions hold . The first of these is that only variables that do not already occur elsewhere in the tree may be introduced  . To state the second condition , we assume that some fixed function TYPE from categories to semantic types is given  , such that TYPE ( a/b ) = " rYP g ( b\a )  =  ( TYPE ( b )  , TYPI ~ a)) . The condition requires that the variablcx in an axiom x  1- x must be of TYPE ( c ) if x 1- x corresponds to c ~ c in the Lambek proof . Also , the variable w that is introduced in l/L\] ( \[\ L\] ) must be of ( TYPE ( b )  , TYPE(a )) , where a/b ( b\a ) is the active category in the corresponding sequent  . 
With the help of these rules we can now build a tree of semantic sequents that is isomorphic to the Lambek proof in fig  . I ; it is shown in fig .  2 . 
The semantic sequent at the root of this tree gives us a recipe to compute the meaning of ' a manadores a woman ' once we are given the meanings of its constituting words  . Let us suppose momentarily that the translation of the determiner'a'is given as the term  ZI"XP3x  ( P' ( x ) ^ P ( x ) ) of type ( et ) ( ( et ) t ) and that the remaining words are translated as the terms man  , a dores and woman of types el , e(et ) and et respectively , then substituting ZP'ZP3x ( P' ( x ) ^ P ( x ) ) for D and for D ' in the succedent and substituting man  , a dores and woman for P , R and 1" gives us a lambda term that readily , ' educes to the sentence 3x(man(x )^
By ( woman(y )^ a dores(y )( x)).
The same recipe will assign a meaning to any sentence that consists of a determiner followed by a noun  , a transitive verb , a determiner and a noun ( in that order ) , provided that meanings for these words are given . For example , if we translate the word ' no ' as ZP ' XP ~ qx ( l " ( x ) ^ P ( x ) ) and ' every ' as ZPgvPVx ( P' ( x )  --- , P ( x )) , substitute tile first term for D , the second for D ' , and man , a dores and woman for P , R and P ' as before , we get a term that is equivalento--3x ( man ( x ) ^ Vy ( woman ( y )  -- , a dore s(y )( x ))) , the translation of ' nomalladores every womiul ' . 
3. BOXESINTY PELOGIC
In this section I will show that there is a natural way to emtflate tile DRT language ill tile first-or-d cr part of type logic  , provided that we adopt a few axioms . This possibility to view DP , T as being a fragnaent of ordinary type logic will enable us to define our interface between Catcgorial 
Grammar and DRT in the next section,
We shall have four types of primitive objects in our logic : apart from the ordinary cabbages and kings sort of entities  ( type e ) and the two truth values ( type t ) we shall also allow for what i woukllike to call pige on-holes or registers  ( typen ) and for states ( types )  . Pigeon-holes , which are the things that are denoted by discourse referents  , may be thought of as small chunks of space that can contain exactly one object  ( whatever its size )  . States may be thought of as a list of the current inhabitants of all pigeot > holcs  . States arc very much like the program states that theoretical the current values of all variables in a given program at some stage of its execution  . 
In order to be able to impose the necessary structure on our m~xlels  , we shall let V be some fixed nonlogical constant of type ~  ( s e ) and denote the inhabitant of pige on hole u in state i with the type e term V  ( u ) (0 . We define i \[ uI . . . unl \] to be short for Vv((li Ir ? VA . . . AIt n*V ) ~ V(v)(i ) = V('e)(\]')) , a term which expresses that states i and j differ at most in uI  . . . . . un ; i\[\]j will stand fortile formula V v ( V ( v ) ( i ) = V ( v ) (\] ) ) . We impose the following axioms . 
AX1ViVvV x3j(i\[v\]\]^V(v)(\])=x)
AX2ViVj(i\[\]\]---*i = j)
A X3 It ~ It " for each two different dise on rse referents  ( constants of type ~ ) u and u'AX1 requires that for each state , each pige on hole and each object , there must be a second state that is just like the first one  , except that the given object is an occupant of the given pige on hole  .   AX2 says that two states cannot be different if they agree in all pige on-holes  .   AX3 makes sure that different discourse referents refer to different pi-ge on-holes  , so that an update on one discourse referent will not result in a change in some other discourse referent's value  . 
Type logic enriched with these three first-order nonlogical axioms has the very useful property that it allows us to have at k ~ rm of the ' unselective binding ' that seems to be omnipresent in natural language  ( see Lewis\[1975\] )  . Since states correspond to lists of items , quantifying over states corresponds to quantifying over such lists  . The following lemma gives a precise formulation of this phenomenon  ; it has an elementary proof . 
UNSELF , CI'IVEBINDINGLEMMA . Let Ul . . . . . unbe constants of type ~, let xl . . . . . xn be distinct variables of type e , let q ~ be a formula that does not contain j and let qo ' be the result of the simultaneous substitution of V  ( ttl ) ( j ) for Xl and . . . and
V ( un )( j ) for x nine p , then:
I = AxVi (3j ( i\[to . . . . . unYAtD ) ~ ~ Xl . . . ~ X n q ~) I = A x V i ( V j ( i \ [ u , . . . . . u , ,\] j-,"q )) -,-, " Vxl . . . Vx , , q ) ) We now come to the enmlation of the DRT language in type logic  . Let us fix some types variable i and define ( tOt =  V ( u ) ( i ) for each discourse referent ( constant of type J ~ ) u and ( / ) i = t for each type e term t , and let us a gree to write l'w for X/l'(@ , " rlRT2 for t ~ . . i ( R ( 171 l ' ~ ( " f2 )  \]"  ) i  ~ ) is v2 for ) d ( (v/ ) "= ( v2 )   , if 1' is it term of type e t , R is a term of type e ( et ) and the z's are either discourse referents or terms of type e  . This gives us our basic conditions of the DRT language as terms of types t  . In order to have complex conditions and boxes as well  , we shall write not ? for , a . i- , 3jO(O0) , ? or ' It for M3j ( O(i ) ( j ) vff*(O(J )) , q ' ~ lit for ) dVj ( O(i ) ( \]) - - + 3 k ~ P ( j ) ( k)) , \[ ul . . . u ,, Ib . . . . . y , ,,\[ for ZiZj(itu, . . . . . u , , ljAyIQ/)A . . . A ' gin(J )) , O ; q , r for MZf\]k(O(i ) ( k)^ql(k)(\])) . 
Ilere ? and qJ stand for any tc , ' m of types ( st ) , which shall be the type we associate with boxes , : rod they's stand for conditions , terms of types t . 
\[ttl . " It ,, \] Yl . . . . . Ym\]will be our linear notation for standard DRT boxes and the last clause elnbodies an addition to the standard DRT language : in order to be able to give conlpositional translations tO naturaliln gu'lge expressions and texts  , we borrow the sequencing operator ' ; ' from the usual imperative programming hm guages and stipulate that a sequence of boxes is again a box  . The following useful lemma is easily seen to hold . 
MI-k ~ GINGLEMMA . If / ~' do not occur in any of ~ , "thenI=^x\[/iIg\[:\]/rIg'\]=I/i if ' Ig ?\] T impresent emulation of DRT in type logic should be compared with tile semantics for DRT given in Groenen dijk & Stokhof  \]199l  \] . While Groenen dijk & Stokhofgiw ; a Tarski definition for DRT in terms of set theory and thus interpret the object DRT language in a metalanguage  , the clauses given above are simply abbreviations on the object level of standard type logic  . Apart from this difference , tile chmses given above and tile clauses given by Oroenen dijk & Stokhofa retnueh the same  . 
4. FROMSEM ANTICRECIPESTO

Now that we have the DRT language as it part of type logic  , connecting l~ambck proofs for sen-tenccs and texts with Discourse Representation be done is to define a function TYPE of the kind described in section  3 and to specify a lexicon for some fragment of English  . The general mechanism that assigns meanings to proofs will then take care of the rest  . The category-to-type function TYPE is defined as follows  . WYPE(txt)TYPE(s ) = s(s0 , TYPE(n ) = ~ and TYPE(cn ) = z(s(st)) , while TYPE(a/b ) = TYPE(b\a ) = ( TYPE(b) , TYPE ( a ) ) in accordance with our previous requirement , It is handy to abbreviate a type of the format (   .   .   . ( ctn(s(st )) . . . ) as\[a , .   .   . a , ,\] , so that the type of a sentence now becomes\[1 ( abox ! )  , the type of a common noun\[or \] and so on . 
In Table 1 the lexicon for a limited fragment of English is given  . The sentences in this fragment are indexed as in Barwise  \[1987\]: possible antecedents with superscripts , anaphors with subscripts . The second column assigns one or two categories to each word in the first column  , the third column lists the types that correspond to these categories according to the function TYPE and the last column gives each word a translation of this type  . Here P is a variable of type \ [ or \] , P and q are variables of type\[\] , and v is a variable of type ~ r . 
Let us see how this immediately provides us with a semantics  . We have seen before that our Lambek analysis of ( 1 ) provides us with a semantic recipe that is reprinted as  ( 2 ) below . If we substitute the translation of a 1 , AP'ZP(\[uI1\] ; P'(Ul ) ; P ( Ul )   ) for D in the succedent of ( 2 ) and substitute Av\[\[manv \] for P , we get alambda term that after a few conversions reduces to  ( 3 )  . 
This can be reduced somewhat further , for now the merging lemma applies , and we get (4) . 
Proceeding further in this way , we obtain (5) , the desired translation of (1) . 
(I ) AI manadoresa = woman(2)D , P , R , D " I"F D(l')(Av . D'(l")(Zv' . le(v3(v ))) (3) ZP(\[Ul\[\] ; \[Imanit1\] ; D ' ( P ') ( Zv ' . R(v)(ul )) (4) ZP(\[ullmanUl\];D'(P')(Zv' . R(v3(u ~))) (5)\[U1tt2Imanu1 , womanu > uI adoresu2\] ( 6 ) Every ~ manadoresa2 woman ( 7 ) \[ I\[ , tl\[ , , , a .   , 1 , 1\[a = I woma , , u > u \] adores u2\] \] (8) D , P , R , D ; 1"~- D'(l")(Xv' . D(P)(Zv . R(v')(v ))) (9)\[ U2\[woman 112 , \[ttllman11l\]:=?"\[Iuladoresu2\]\] ( 10 ) A~manadoresa2 woman . Sh % abhors him1 (1l)\[ItIIt2\[mattIt1 , womal ttt2 , It Iadoresu2 , u2 abhors 111\] ( 12 ) If a ~ manbores a 2 wo mans he = ignores him I ( 13 ) \[I\['11u21'''a"ul , woma , u > u ~ bores ' u2\]  \[  tu2 ignore sul\]\] The same semantical recipe can be used to obtain a translation fo  , " sentence (6) . we find it in (7) . 
But ( 1 ) and ( 6 ) have alternative derivations in the Lambek calculus too  . Some of these lead to semantical recipes equivalent to  ( 2 )  . but others lead
EXPR . CATEGORIESTYPEa " ( s/ ( n\s ) ) / en \[\[~\] D \]\] ( ( s / n ) \ s ) / cnno " ( s/ ( n ' , s ) ) / cn ( ( s / n ) \ s ) /cn every " ( s/ ( n\s )   ) / cn ( ( s / n ) \ s ) / cn
Mary nS/ ( n\s )   ( s/n ) \ shens I ( n\s ) \[\[ or\]\]himn ( s/n ) \ sII=\[1 who ( cn\cn )  /  ( n\s ) \[\[~ r\]\[zc\]or\]mancn\[or\]stinks n\s\[or \] adores  ( n\s ) In \[ xx\]if ( s/s ) / s\[\[\]\[\]\]s\ ( txt/s ) \[\[\]\[\] ltxt\ ( txt/s ) and s\ ( s/s ) or s\ ( s/s ) 

AP'ZI'(\[u , , \[1 ; l"(u , ); l'(u , ))\[\[ or\]E or\]\]Z/"ZI'\[I , , ot(\[u , , 171 ; P'(u , ,) ; P(u , ,))\] \[\[ or\]D \]\] AP'ZI'\[I \[ ( Iu , , 1\] ; l"(a , ,)) -=> l'(a , ,)\] \[\[ or \]\] AP(\[un I u , is mary \]; P ( un )) ~( l'(u , ,) )
Zl ' ( l'(u , ,))
Zl ") a ' Xv(l'(v ); l"(v))
Zv\[\[ms , v\]/ , v\[Istinksv\])~v ? ~ v\[Ivadoresv'\]
Ipq\[lp~q\]tl)q(p ; q)\[\[\]\[\]\] ; wq(p ; q)\[\[\]\[\]\]~wq\[Iporq\]
Table 1 . The Lexicon planation consult Hendriks\[1993\]) . If we apply this recipe to the translations of the words in  ( 6 )  , we obtain (9) . the interpretation of the sentence in which a = woman has a widescope specific reading and is available for anaphoric reference from positions later in the text  . 
I leave it to the reader to verify that the little text in  ( 10 ) translates as ( 11 ) by the same method ( note that the stop separating tile first and second sentence si lexical is cd as an item of category s\  ( txt/s ) ) , and that (12) translates as (13) . A reader who has worked himself through one or two of these examples will be happy to learn from Moortgat  \[11988\] that there are relatively fast Prolog programs that automatically find all semantic recipes for a given sentence  . 
5. FROMBOXESTOTRUTll
CONDITIONS
Wc now have a way to provide the expressio , ls of our fragm cnt automatically with Discourse Representation Structures which denote relations between states  , but of course wear calso interested in the truth conditions of a given text  . These we equate with the domain of the relation that is denoted by its box translation  ( as is done in
Groenen dijk & Stokhof\[11991\]).
Theoretically , if we are in the possession of a box (/) , we also have its truth conditions , since these are denoted by the first-oMerter ln xiqj  ( q ) (i ) (j ) ) . 
but in practice , reducing the last term to some manageable first -order term may be a less than trivial task  . Therefore we define an algorithmic function that can do the job for us  . The function given will in fact be a slight extension of as in lilar function defined in Kamp & Reyle  \[1993\]  . 
First some technicalities . Define a dr ( ~) , the set of active discourse referents of a box ~1 )  , by a dr(\[iiI'-\])=/i and adr((D ; Ill ) = adr(qOUadr(~lO . Let us define llt/u \] l , tile substitution of the type etermt for the discourse referent u in the construct of the tx  ) x hm guage F , , by letting it / ttlu = t and \ [ t / u \ ] u ' = u ' if a '  , u ; for type eter lnst'Welet\[t/U\]t '= t  '  . For complex constructs It/I \[1I ' is defined as follows . 
I . t/u\]l'v : Pit~u\]v\[tIulvlRv 2 : lltIu\]vlR\[tIu\]v 2 \[t/u \] ( v1 is ~ c2 ) =\[ t/Ill'IT 1 iSllt / u\]*'2 \[ tlu\]not@=not\[tlu\]?\[tlul ( q , or ~ P ) =\[ tlul ? or\[tlu\]~l/\[t/ul ( q ' ~ i p ) =\[ t/u\]q~\[t/u\[~l/ifuCadr ( qO\[tlu\] ( q ' ~ tl0 = ltlu\]4 ) = ~ ll/ifuGadr ( @ ) lt/u\]\[~IY ~ .   .   .   .   . h , ,\] = lift\]\[t/Ulrl . . . . . 14/ulh , , lifuq ~ ~\[ it / . \]\[ Ftlh . . . . . y , , ; l =\[ ~ lY ~ . . . . . Y , , , \] if uUftlit/Ul(?;~I*):\[t / , \]( I );\[ t/u\]~I/ifue ~ adr((b)
It ~ u\]((P ; ip ) = 17/u\]q) ; Illifu ~ adr ( q 0 The next definition gives our translation function  1" from boxes and coMitions to first-order formulae . The wuiable x that is appearing in the sixth and eighthchmscs is supposed to be fresh in both cases  , i . e . it is defined to be the first variable in sonic fixe do Mering that does not occur  ( at all ) in q ) or int l * . Note that the sequencing operation ; is associative : q ,   ; ( q / ; ~) is equivalent with ( q ~ ; lit ) ; E for all q ) , q / and ~ . This lneans that wc may assume that all boxes are either of the form\[Ft\]\]\]  ; ( Poroftim for m\[ii \]?'\] . We shall use the form IF/:q ) to cover both cases , thus allowing the possibility that q~is clnply , if ~1 ~ is elnpty , q ~ ~ . . q/denotes Ill . 
( p4~:p(@
O:fl , h: , ) ~: R(~:~ll(T2) t1(T1 is ~2)' t = (1 ; 1 ) " =  ( ' V2 ) "  ( not q ) )f = -~ ( q ) ) l ( 4 ) or list q ) t'vIpl ( (\[ . ii\[~;1;40~q , ) rVx(lx/ul((\[Ft\]~ ;  \]  ; @ ~ qO ) t((\[Irz .   .   .   .   . ~,, 1; ?): ~ qO *=(), jt .  ^  .   .   . ^ h . r )_ , . (( b ::> ~ I /) t(I . // I ~-\]; q ,)- r = 3x ( lx / . \](\[/// l ~ 7\]; q , )) l(\[\[Y s . . . . . 7,,, 1; q , ) l = y/lA . . . Aymrnrill By way of examl)le , the reader may verify that the fttnction 1" sends ( 10 ) to ( 11 )  . 
(14)\[\[\[ ul"2Ima . ul , wo manu 2 , u1 bores " 2\[\[\] u2 ig no resul\]\] ( 15 ) Vx rr2 ( (man ( xl ) ^ woman ( x2 ) ^ bores ( xl ) (x2 )   ) ~ ignores ( x2 ) ( Xl )   ) It is clear that the function ~ is algoritlunic : at each stage in tile reduction of a box or condition it is determined what step should be taken  . The folk ) wing tl ~ eorem , which has a surprisingly te ~ dious proof , says that the function does what it is intended to do  . 

TIIEOREM . For all conditions y and boxes 05:
I = A ? ~ m *= M3j ( q~(i )(,/))
I = AX/3t/i/I".~\]t

Andrews , P . B .:1986, An Introduction to
Mathematical Logic and Type Theory : to
Truth through Proof , Academic Press,
Orlando , Florida.
Barwise , J . : 1987 , Noun Phrases , Generalized Quantifiers and Anaphora , in P . G ', irdenfors ( ed . ), Generalized Quantifiers , Reidel,
Dordrecht , 1-29.
Van Benthem , J.F.A.K .:1986, Essays in Logical
Semantics , Reidel , Dordrecht.
Van Benthem , J.F.A.K .:1988, The Lambek
Calculus , in : R.E . Oehrle , E . Bach and D.
Wheeler ( eds . ) ,  1988 , Categorial Grammars and Natural Language Structures  , Reidel , 

Van Benthem , J.F.A . K .:1991, Language in
Action , North-Holland , Amsterdam.
Church , A . : 1940 , A Formulation of the Simple Theory of Types , The Journal of Symbolic
Logic 5, 56-68.
Gallin , D . : 1975 , Intensional and Higher-Order Modal logic , North-Holland , Amsterdam . 
Groenendijk , J . and Stokhof , M . : 1990, Dynamic Montague Grammar , in L . K , ' ihm in and L . 
Pdlos ( eds .), Papers from the SecoJrd
Symposium on Logic attd Language,
Akaddmiai Kiad6, Budapest , 3-48.
Groenendijk , J . and Stokhof , M . : 1991 , Dynamic Predicate Logic , Linguistics and t'hilosophy 14 , 39-100 . 
Heim , I . : 1982 , The Semantics of Definiteaml Indefinite Noun Phrases  , Dissertation , 
University of Massachusetts , Amherst.
Published in 1989 by Garland , New York.
Heim , I . : 1983 , File Change Semantics and the Familiarity Theory of Definiteness  , in R . 
B ; duerle , Ch . Schwarze and A . y on Stechow ( eds . ) , Meaning , Use attd Interpretation of Language , De Gruyter , Berlin ,  164-189 . 
Hendriks , H . : 1993 , Studied Flexibility , ILLC Dissertation Series , ILLC , University of

Janssen , T . : 1983 , Foundations and Applications of Montague Grammar , Dissertation , University of Amsterdam . Published in 1986 by CWI , Amsterdam . 
Kamp , H . : 1981 , A Theory of Truth and Semantic Representation , iJ . Groenendijk , Th . Janssen , and M . Stokhof ( eds . ) , Formal Methods in the Sttuly of Language , Part L Mathematisch
Centrum , Amsterdam , 277-322.
Kamp , H . and Reyle , U . : 1993 , From Discourse to Logic , Kluwer , Dordrecht . 
Lewis , D . : 1975, Adverbs of Quantification , in E . 
Keenan ( ed . ) , Formal Semantics of Natural Language , Cambridge University Press ,  315 . 
Montague . R . : 1973 , The Proper Treatment of Quantification in Ordinary English  , in R . 
Montague , Formal Philosophy , Yale
University Press , New Haven , 1974, 247-270.
Moortgat , M .:1988, Categorial Investigations,
Foris , Dordrecht.
Muskens , R . A . : forthcoming , A Compositional Discourse Representation Theory , to appear in the proceedings of the Ninth Amsterdam 

Rooth , M . : 1987 , North Phrase Interpretation i Montague Grammar , File Change Semantics , and Situation Semantics , in P . G ~, irdenfors ( ed . ), Generalized Quantifiers , Reidel,
Dordrecht , 237-268.
Zcevat , H . : 1989 , A Compositional Approach to Discourse Representation Theory  , Linguistics aridl ' hilosophy 12 ,  95-131 . 

