Evolva: A Comprehensive Approach to

Ontology Evolution

Fouad Zablith

Knowledge Media Institute (KMi), The Open University
Walton Hall, Milton Keynes, MK7 6AA, United Kingdom

f.zablith@open.ac.uk

Abstract. Ontology evolution is increasingly gaining momentum in the
area of Semantic Web research. Current approaches target the evolution in terms of either content, or change management, without covering
both aspects in the same framework. Moreover, they are slowed down
as they heavily rely on user input. We tackle the aforementioned issues
by proposing Evolva, a comprehensive ontology evolution framework,
which handles a complete ontology evolution cycle, and makes use of
background knowledge for decreasing user input.

1 Problem and Methodology

Ontologies form the basis of Semantic Web systems. As such, they need to be
kept up-to-date for the dependent systems to remain usable. With the increase
of complexity and changes occurring in the represented domains, ontology evolution becomes a painstaking and time-consuming process. Thus research has
witnessed an increased interest in ontology evolution. We regard ontology evolution as the timely adaptation of an ontology to the arisen changes and the
consistent management of these changes [10]. Timely adaptation suggests a
quick adaptation, that can only be achieved by decreasing user involvement in
the evolution process. However, most of current approaches heavily rely on user
input. Moreover, the definition suggests that a successful evolution can only be
achieved by having both adaptation and change management. Yet, as we
discuss in Section 4, no existing approach handles the two tasks in one frame-
work. One set of approaches considers evolution as the management of changes
performed by users for preserving consistency [11,13,16,17], while another set
targets techniques for integrating new knowledge into the ontology [2,5,12,14],
without an extensive handling of change and evolution management. Our research tackles the following two main questions:
Question 1: How to cover a complete ontology evolution cycle? The focus here
is on providing both ontology adaptation and change management.
Question 2: How to decrease user involvement in ontology evolution? In order
to be as agile as possible, especially in dynamic domains where information is

 Work funded by the NeOn project under EC grant IST-FF6-027595.

L. Aroyo et al. (Eds.): ESWC 2009, LNCS 5554, pp. 944948, 2009.
c Springer-Verlag Berlin Heidelberg 2009
?

?

?
abundantly generated, ontology evolution should be performed with the minimum user involvement.

Our methodology for resolving the above questions has three main phases: in
the first phase we analyzed a concrete case within our KMi Semantic Web portal1
that helped us determine the main required tasks for evolution. Then we propose
an ontology evolution framework covering all previously identified tasks. In the
second phase, we are conducting an experiment on using background knowledge,
in addition to a pilot system implementation. The third phase will include the
evaluation of our approach.

2 Proposed Approach

We propose a comprehensive ontology evolution framework, Evolva2, covering
a complete ontology evolution cycle including a) performing changes based on
external data sources, and b) the management of these changes as shown in
Figure 1. Such framework is designed to meet the requirements of our research
Question 1.

= I/O Data 

= Processes 

Information
Discovery

Data

Validation

Ontological

Changes

Evolved
Ontology

Evolution
Validation

Temporal 
Reasoning

Consistency

Check

Duplication

Check

Un-

structured

Data

IE / OL /  

Raw Data 
+Transform 

ation

Quality
Check

Performing
Changes

Approved
Ontology

External
Ontologies

Translation 

Extracted
Schema/
Instances

Relation
Discovery

Schema/
Instances
Changes

Databases

Transform- 

ation

Base

Ontology

Background
Knowledge

Recording
Changes

Change

Propagation

Admin
Control

Evolution

Management

Fig. 1. Evolva Framework Architecture

We focus on identifying the need for evolution by contrasting the content of
the ontology to external data sources. Such sources could be text documents,
folksonomies, databases, or other ontologies. Each source requires a different
method of content extraction handled by the information discovery component.
The data validation component identifies new terms that are relevant for the

1 http://semanticweb.kmi.open.ac.uk
2 Detailed description of the framework can be found in [18].

F. Zablith

ontology. It also checks the quality of content and filters out noise generated
from the information discovery component. The validated information is passed
to the ontology changes component in which background knowledge plays a
core role in automating the integration of new information to the ontology. The
evolution could generate conflicts and problems that are handled at the level of
the evolution validation component. We plan to have in this component temporal
reasoning for time related problems, coupled with duplication and consistency
checks. Finally the validated ontology is passed to the evolution management
component (bottom right part of Figure 1) where the user has control over the
evolution, and changes are recorded and propagated to dependent ontologies.

With response to Question 2, Evolva uses background knowledge for decreas-
ing, or even eliminating user input throughout the evolution. Background knowledge exists through various formats including lexical databases e.g. WordNet [7],
online ontologies, and unstructured web documents. Our relation discovery step
uses background knowledge to determine the relationship path of new knowledge
to existing knowledge in the ontology.

3 Initial Results and Conclusions

By the end of the first year of the PhD, we have implemented part of Evolva
within the NeOn ontology editor3. Our second major result is an experiment on
the potential use of background knowledge as a replacement of user input.

The Evolva plugin allows users to run the evolution process step-by-step and
to control the relevant parameters for each step. Figure 2 highlights the main
features of the Evolva plugin. The left panel shows the evolved ontologies, and
the right panel shows the various steps of Evolva. Using those, the user can specify the external data sources from which the new content is extracted. Then the
content is validated, and the user has the option to modify the automatic validation settings, as well as to manually exclude unwanted terms. In the relation
discovery part, the validated terms are linked to existing terms in the base ontology through background knowledge. For example, WordNet linked Applicant as
subClassOf Person, and online ontologies linked the new concept Website with
a hasWebsite relation to Organization. Finally, the user can choose to apply the
changes to the base ontology itself, or create a new, updated ontology.

Our background knowledge experiment, described in [19], focused on using
WordNet and online ontologies for relation discovery in the context of the KMi
portal ontology. Online ontologies are accessed using Scarlet [15], a Semantic
Web based relation discovery engine, that matches [6] terms to online ontological entities for resolving relations. The overall precision of around 77% shows
that background knowledge can largely contribute to automating the integration
of new knowledge into the ontology. This is where user input is traditionally most
needed. We also found that precision can be further increased through introducing validation techniques like using the ontology itself as a relation validator,
and by using filter mechanisms for excluding irrelevant terms.

3 http://www.neon-toolkit.org
?

?

?
Fig. 2. Evolva Pilot System Screenshot

4 State of the Art

Research on ontology evolution is roughly divided in two groups: The first group
considers ontology evolution as the process of managing changes performed by
users [11,13,16,17]. In brief, the idea is to evolve an ontology as a closed entity
by analyzing its content by e.g. identifying changes based on data mining techniques [16]. A key achievement, common in [11] and [16], is the representation of
changes in an ontology of changes. However, the user here is the only source of new
knowledge added to the ontology. The second group focuses on identifying new
information to be added to the ontology [2,5,12,14]. This is done either through
analyzing trends in user behavior [2,5], or by exploiting changes in external data
sources such as databases or text documents [12,14]. However, the user still plays
a major role throughout their process, and in this case, little attention is given to
the management of evolution. The intention of Evolva is to cover both approaches.
Background knowledge has been successfully used in various tasks. For exam-
ple, WordNet helps in solving word sense disambiguation issues [9] and ontology
matching tasks [8]. Medical domain ontologies [3] and online ontologies [15] are
employed in ontology matching. Folksonomy tagspaces [4] and ontology learning [1] are also using online ontologies as a background knowledge source. In our
research, we make use of background knowledge in the field of ontology evolution.

5 Future Plans

Our plan for the second year of the PhD is to study automated techniques for
relation validation, crucial to increase Evolvas precision. We also plan to finetune and extend our prototype to cover the remaining components. Evaluating
the end research product forms an important part of our planned tasks and will
be conducted during the third year. We plan to run tests in real domains such

F. Zablith

as the UNs Food and Agriculture Organization (FAO)4 fisheries or agriculture.
Such tests should give us firstly qualitative measures, which reflect the correctness of the content added to the ontology; and secondly, quantitative measures
to analyze the performance of Evolva in terms of time, number of ontological
entities added, and number of sources analyzed. Comparisons will be performed
against other ontology building tools and against ontology designers.
