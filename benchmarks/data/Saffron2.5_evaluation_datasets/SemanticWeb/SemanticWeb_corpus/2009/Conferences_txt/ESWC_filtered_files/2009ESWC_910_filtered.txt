KiWi  A Platform for Semantic Social Software

(Demonstration)

Sebastian Schaffert, Julia Eder, Szaby Gr unwald, Thomas Kurz,

and Mihai Radulescu

Salzburg Research Forschungsgesellschaft

Jakob Haringer Str. 5/II, A-5020 Salzburg, Austria

firstname.lastname@salzburgresearch.at

Abstract. Semantic Wikis have demonstrated the power of combining Wikis with Semantic Web technology. The KiWi system goes beyond Semantic Wikis by providing a flexible and adaptable platform for
building different kinds of Social Semantic Software, powered by Semantic Web technology. While the KiWi project itself is primarily focussed
on the knowledge management domain, this demonstration shows how
KiWi aspects like the Wiki Principles and Content Versatility can be
used to build completely different kinds of Social Software applications.
The first application we show is an ordinary Semantic Wiki system
preloaded with content from a online news site. The second application
called TagIT is a map-based system where locations and routes on a map
can be tagged by users with textual descriptions, SKOS categories, and
multimedia material. Both applicatons are built on top of the same KiWi
platform and actually share the same content.

1 Motivation: From Semantic Wikis to KiWi

Semantic Wikis have been under investigation in the research community since
2005 (see e.g. [1,2]). Although there are many different systems with many different properties, a common trait between all Semantic Wikis is that they aim to
combine ordinary Wiki content and technology with Semantic Web technologies,
either in order to provide better wikis (Semantic Web for Wikis) or to ease
the creation of Semantic Web data (Wikis for the Semantic Web) [3]. Many
also see Semantic Wikis as the Semantic Web in a Nutshell, because  like
Wikis show similar traits to the Web as a whole  Semantic Wikis share many
properties and also problems with the envisioned Semantic Web.

The EU-funded project KiWi (Knowledge in a Wiki) takes the Semantic
Wiki approach to the next level by providing a platform that allows to build
many different kinds of Social Semantic Software, based on the conviction that
most social software follows the Wiki Principles. By Wiki Principles, we
mean that the term Wiki does not refer to technology alone. It is more a new
philosophy of working with Web content influenced by ideas in the OpenSource
community. These principles have revolutionised the way we work with content
in the (Social) Web:

L. Aroyo et al. (Eds.): ESWC 2009, LNCS 5554, pp. 888892, 2009.
c Springer-Verlag Berlin Heidelberg 2009
?

?

?
 Wikis allow anyone to edit: The core principle is that there are no access
restrictions or strict hierarchies on the content of a wiki. Anyone can easily
contribute his or her own knowledge, his or her own ideas, and his or her
own content.

 Wikis are easy to use: Anyone who is sufficiently familiar with the basic
functionalities of word processing software (write, delete, save) has all the
skills required to edit, correct and expand a wiki.

 Wiki content is linkable: By allowing users to create links between words
and as such between concepts, wikis also allow for the creation of semantic
relations, i.e. of meaning.

 Wikis support versioning: Never does information disappear on a wiki.
If a page is edited, the previous version is still stored somewhere. This has
an important psychological effect as it takes away the wiki writers block:
the fear that something might get lost through editing.

 Wikis support all media: Wikis are web-based. So whichever type of content you have, be it text, images, audio, spreadsheets, documents  anything
that can be displayed in a web browser can be displayed in a wiki. And even
if a file cannot be displayed in the browser itself, it can still be downloaded.
This same philosophy is underlying not only Wikis (technically-speaking), but
also a large array of other Social Software applications: e.g., a weblog or social
networking platform can be seen as just a different user interface (and different
way of using), but is otherwise very similar concerning the underlying principles
and also technology.

2 Content Versatility: Same Content, Different Views

Following this line of argumentation, it is close at hand to build generic platforms
for developing different kinds of Social Software. And indeed, there are several
products already available that aim to deliver a platform that allows to combine
wikis, weblogs, social networking, etc. Such platforms are for example Clearspace
Community1 from Jive Software, Community Server2 from telligent, and Liferay
Social Office3 from Liferay. However, all these systems only provide integration
on the user interface level and still see wiki articles, blog posts, etc. as separate
kinds of content that is visualised in a specific way.

KiWi follows a completely different approach which we call Content Versatil-
ity. The underlying principle is that every piece of information is a combination
of human-readable content and associated meta-data, and that the same piece
of information can be presented to the user in many different forms, even in
parallel: as a wiki page, as a blog post, as a comment to a blog, as a photo,
or even in a bubble in a map-based application. The decision how the information is displayed is taken based on the context of the content and the user (e.g.
metadata, user preferences, different applications).

http://www.jivesoftware.com/products/clearspace-community
http://communityserver.com/
http://www.liferay.com/web/guest/products/social_office

S. Schaffert et al.

Fig. 1. KiWi Applications: the same content item in the KiWi Wiki on the left, and
in TagIT on the right

In KiWi, we call the smallest piece of information a content item. A content item is identified by a URI and consists of human-readable content in the
form of XHTML and associated meta-data in the form of RDF. The KiWi core
system provides means to store, update, search, and query content items, and
offers automatic versioning of all updates (content and meta-data). Whereas core
properties of a content item (like the content, the author, and the creation date)
are persisted in a relational database, all other properties can be flexibly defined
using RDF properties or relations. The URI of a content item is generated in
such a way that it is possible to make a KiWi system part of the Linked Open
Data cloud [4]. In the following, we present two KiWi applications that share
the same content but have completely different ways of presenting it.

The KiWi Wiki. The primary and most generic interface to the KiWi system
is a Semantic Wiki. The layout and functionality (Figure 1 left) of the KiWi Wiki
is inspired by its predecessor IkeWiki[5]: the browser view is divided into three
columns where the left column provides navigation functionality and access to
tools, the center column contains the main (human-readable) wiki content, and
the right column contains dynamic widgets that display additional information
about the content item based on its metadata (e.g. a map or incoming and
outgoing links). The center column by default displays the content of the content
item and the user can switch to editing, to annotation, and to history by using
tags displayed on top of the content. The KiWi Wiki interface can be used in
the same way as IkeWiki, with some additional features.

TagIT. TagIT is an application originally developed in a separate project with
the goal to create the Youth Atlas of Salzburg, which has now been ported to
the KiWi platform (Figure 1 on the right). In TagIT, users browse through a map
(based on Google Maps) where they can tag locations with descriptions and
provide interesting information about them, e.g. caf es, bars, sports parks, hiking
tours, etc. Such tags can be associated with categories from a SKOS thesaurus
and with additional multimedia data like photos or videos. Other users can then
browse or search for interesting locations using the same interface. In addition to
the web-based platform, TagIT also offers a mobile client that can run on a GPSenabled mobile phone. When visiting an interesting location, users can then start
?

?

?
the TagIT application, take a picture of the location, add a short description and
directly upload the tag using UMTS. The tag is automatically geolocated and
immediately available for other users.

Although quite different on the user interface and in the way it is used, TagIT
actually closely follows the wiki principles: everyone can add and edit tags, the
system is extremely easy to use, tags can be linked, tags are versioned, and
different kinds of content are supported. On top of KiWi, tags are realised as
content items and can thus be displayed in both the TagIT user interface and the
previously described KiWi Wiki (in which case a small map widget is displayed
in the right column showing the position).

The two user interfaces are currently implemented as separate applications
on top of the KiWi core system. In further phases of the project, the KiWi
system will also provide reasoning and personalisation support that will allow
to flexibly decide which presentation of a content item to choose for a given user
and context.

3 Demo Outline

The demonstration we aim to give at ESWC will first show the core features of
the KiWi system, namely the use and features of the KiWi wiki and the TagIT
system and their semantic properties. A particular focus will be on the demonstration of the Content Versatility, as it is a fundamental concept of KiWi and
demonstrates the power and flexibility of using Semantic Web technologies for
Social Software applications.

For the purpose of demonstrating the KiWi system in a real-world scenario,
we will preload the system with a selection of news articles with geoinformation
from our partner, Salzburger Nachrichten. We will then show how such articles
can be browsed, searched, and edited in the KiWi wiki and in the TagIT system,
and we will demonstrate that both user interfaces are really just different views
on the same content. To demonstrate the flexibility of the system, we will also
show how the mobile client can be used to add new geo-located content to the
system and browse the system for interesting locations. Depending on the state
of the KiWi system at the time of the conference, we furthermore aim to show
advanced features like personalisation, and we might be able to demonstrate the
integration of additional Salzburger Nachrichten content beyond news articles.

4 Perspectives and Conclusion

KiWi is an ongoing research project of which we have only demonstrated the
first results. Many more salient aspects are still to come. Particularly, KiWi will
be extended with enabling technologies in the following areas:

 Reasoning and Reason Maintenance: In this area, the KiWi system
will be extended with a custom, rule-based querying and reasoning component where advanced users will be able to add custom inference rules to the

S. Schaffert et al.

knowledge base; reasoning will be based on content as well as meta-data
[6]. In addition, there will be a reason maintenance component that allows
users to get explanations why a certain information has been inferred; reason
maintenance is also beneficial for update performance and might even allow
for different users having different rule sets.

 Information Extraction: The KiWi system will furthermore provide a
component that semi-automatically extracts meta-data from the content
that is stored in the knowledge base. Information Extraction will be performed in interaction with the user to minimise the number of errors.

 Personalisation: Based on the meta-data for a content item, a user model,
and the rule-based reasoning, KiWi will also offer a personaliation component that allows to further customise the presentation of a content item.
The personalisation component will further demonstrate the flexibility of
the Content Versatility approach taken by KiWi.

TagIT is now further developed as part of the Salzburg NewMediaLab project
Future Content Platforms together with our partner Salzburger Nachrichten.
The goal is to integrate in the same interface not only wiki content and TagIT
locations but also news articles, blog posts, and small advertisements from our
partner. For the purpose of the demonstration, we have already imported 20.000
online news articles, but the system is designed to scale to hundreds of thousands.

Acknowledgement. This research has been partly funded by Salzburg New Media
Lab and by the the European Commission within the 7th Framework Programme
project KiWi - Knowledge in a Wiki (No. 211932). The latest KiWi source code is available as Open Source at the KiWi website http://www.kiwi-project.eu. The demonstration system is published from time to time at http://showcase.kiwi-project.eu
