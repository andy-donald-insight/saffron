The Personal Knowledge Workbench of the

NEPOMUK Semantic Desktop

Gunnar Aastrand Grimnes, Leo Sauermann, and Ansgar Bernardi

gunnar.grimnes@dfki.de, leo.sauermann@dfki.de, ansgar.bernardi@dfki.de

DFKI GmbH, Kaiserslautern, Germany

Abstract. In this paper we describe some of the personal information management features found in the PSEW prototype of the NEPOMUK Semantic Desktop project. Focussing on importing and adding new
knowledge to the system as well as navigating, browsing, and searching
the existing knowledge we show how a user can use NEPOMUK to integrate her information across application boundaries and create and
discover new structures in her information space.

1 The NEPOMUK Semantic Desktop

The paper presents parts of the outcome of the now completed NEPOMUK
project1. NEPOMUK aimed to create a specification for a Social Semantic Desktop and a prototype implementation of this specification. This paper will only
describe the details around the prototype implementation, for information on the
Semantic Desktop specifications such as the ontologies, the architecture blueprint
and service descriptions we refer the reader to the project deliverables available
from the project website as well as [1,2].

The NEPOMUK project resulted in two parallele implementations of the Semantic Desktop, one written in C++ which is tightly integrated with the KDE4
desktop environment, and a cross platform version written in Java. This paper
deals only with the Java version. Furthermore, we focus only the Personal Information Management (PIM) components of the NEPOMUK Semantic Desktop,
that is, only the components used on a single desktop machine. NEPOMUK
also includes social features allowing various kinds of distributed search and
information sharing, but they will not be covered here.

The NEPOMUK approach to personal information management aims to overcome the limitation of having a separate applications for each type of data, such
as email, photo-manager, publication-managers, etc. Instead all the information
is integrated into one information-space and the user is free to relate and annotate information elements across application boundaries. The central hub for
working with this information-space is called the NEPOMUK Personal Semantic Workbench (PSEW) and a typical view is show in Figure 1. Here we see a
range of different views on the users data, and a person concept, Claudia,

1 http://nepomuk.semanticdesktop.org

L. Aroyo et al. (Eds.): ESWC 2009, LNCS 5554, pp. 836840, 2009.
c Springer-Verlag Berlin Heidelberg 2009
?

?

?
being editted. The central idea for personal information management in NEPOMUK is semantic annotation, ranging from simple tagging to more sophisticated
ontology based use of typed relations, class hierarchies, etc. Although semantically rich relations are possible in the framework, we have found the general
hasTag relation to be at a level of complexity the users can easily understand
and work with, and is also enough for most applications [3]. In NEPOMUK we
go beyond the simple text tags used by web2.0 sites such as del.icio.us or Flickr,
and each tag is a PIMO concept; that is, tags belong to one of the classes in the
Personal Information Modelling Ontology (PIMO). PIMO is the NEPOMUK
way of letting the user express her world-model on the Semantic Desktop by extending and sub-classing the starting PIMO which provides general classes such
as Document, Person, Company, etc. Users are free to get as involved as they
wish, if they are happy with a flat list of tags, all tags can be left as the default
pimo:Topic, or they can create a more elaborate structuring scheme. Automated
services that will automatically assign the correct type to known cities, people
and countries are also available.

From a technical point of view NEPOMUK works by adding all desktop knowledge into a central RDF store, paired with a Lucene index for full-text queries of
the content of RDF literals [4]. We have defined a set of ontologies for representing desktop items, known collectively as NIE (Nepomuk Information Elements)2;
NIE includes ontologies for contacts (Nepomuk Contact Ontology  NCO), messages (Messaging Ontology  NMO). The PIMO ontology is used to organise
and interrelate this knowledge. A set of core information handling services, such
as PIMO manipulation, data-crawling, etc., are available through HTTP based
interfaces and a Eclipse RCP GUI is built in top of these. Additional plugins for
existing applications are also built using the HTTP interfaces.

2 Adding Knowledge

When starting the use a new knowledge management tool, bootstrapping is an
important problem. To the end-user, the value of the Semantic Desktop increases
as more data is added, allowing richer interrelations and increased chances of
finding interesting patterns.

In NEPOMUK the Aperture framework3 is used for importing existing data
into the Semantic Desktop. Aperture can crawl information from a wide range of
sources, such as file systems, email servers, web2.0 web-sites and existing desktop applications such as MS Outlook or Mozilla Thunderbird. From the crawled
information sources Aperture can extract meta-data as well as the textual contents of documents; most common document formats are supported, such MS
Office documents, PDFs, HTML, JPEGs, PNGs, MP3s, other multi-media files,
and many more.

When NEPOMUK is first installed the user has a choice of what data-sources
to setup and crawl, common data-sources such as files and email are automati-

2 http://www.semanticdesktop.org/ontologies/
3 http://aperture.sourceforge.net

G.A. Grimnes, L. Sauermann, and A. Bernardi

Fig. 1. The NEPOMUK Personal Semantic Workbench

cally detected by the system. Crawling is done regularly and iteratively, meaning
changes to the original data will soon be picked up by NEPOMUK.

Once NEPOMUK has been setup and existing information has been crawled,
NEPOMUK offers several ways to add new information directly into the Semantic Desktop data-cloud. Firstly, NEPOMUK includes a DropBox, a special folder
that is monitored for changes, when a new file is downloaded from the web it
can be saved in this folder. NEPOMUK will detect the file and analyse the content a pop-up a dialog with suggested tags, as shown in Figure 2. Here the file
prototypearchitecture.pdf has been dropped, and the tags Marco Andriotti and
Technical Workpackage Meeting has been proposed, the user himself has added
a new tag: cidprototype. Each tag in NEPOMUK can be associated with a folder
on disk, when a tag with an associated folder is assigned in the DropBox, the
file is automatically moved to the appropriate location as well as tagged with
the correct concept in one quick operation.

For content that is not downloaded into the DropBox NEPOMUK offers a
bookmarklet for easy tagging of web-pages, as well as plugins for Mozilla Thunderbird and MS Outlook for tagging of emails.

3 Information Enrichment and Annotation

Importing the knowledge into a common RDF store only solves part of the information integration problem, as the data still forms separate islands for each
?

?

?
Fig. 2. The NEPOMUK DropBox

data-source. Creating the relations that for instance links the author of a PDF on
disk to the sender of an email from Thunderbird is an important part of NEPOMUK and we call the process Local Data Alignment (LDA). Space does not allow
us to go into details here, but NEPOMUK uses several heuristics for doing named
entity merging; assigning the right class to known cities and countries; using the
semantically enabled encyclopedia DBPedia4 for finding additional information
about concepts; and graph mining approaches for finding related resources. For
crawled data, the data-alignment happens automatically. For manually created
concepts the relations proposed by LDA are shows as recommendations in the
user-interface.

4 Browsing and Searching

One of the key benefits of using Semantic Web technology to structure desktop
information is that one is no longer tied to a single scheme of categorisation, i.e. in
a traditional file-system a file resides in one folder, and one folder only. If one has
chosen to arrange ones files by project, there is no way to later go back and view
them by year. On the Semantic Desktop we can offer a wide range of views on the
same data, for example, a timeline view that shows what concepts have been active
in a certain period; a map view that shows the geographical location of concepts;
a facetted browser; a tree-based view of the personal ontology, etc. For example,
Figure 1 shows the hierarchical class-browser for browsing concepts based on their
class, a timeline view, a map view, as well as a concept being editted.

4 http://dbpedia.org

G.A. Grimnes, L. Sauermann, and A. Bernardi

For the cases when browsing is not sufficient, NEPOMUK also offers a powerful search perspective, allowing the user to search her entire information space
based either simple keyword queries as well as a more powerful structured query
builder [5]. The structured query builder provides a visual interface for creating SPARQL queries by drag-dropping, and also offers heuristics for ontology
relaxation when the exact ontology of the data queried is not known.

5 Summary

We have briefly outlined the features the NEPOMUK Semantic Desktop offers
for personal information management, focussing on the process of adding information into the system and later browsing and re-finding this information. The
NEPOMUK system we have discussed is open source, and the system, as well as
the test-data and scripts that will be used for the demo, are all available from
the project website.
