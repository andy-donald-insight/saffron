A Resource List Management Tool for Undergraduate 

Students Based on Linked Open Data Principles 

Chris Clarke 

Talis Group Limited,  

Knights Court, Birmingham Business Park, B37 7YB 

chris.clarke@talis.com 

Abstract.  Resource  List  Management  tools  help  educators  create  and  publish 
lists of resources relevant to students undertaking a particular module, course or 
assignment. Traditional approaches to online delivery of these lists have been 
limited by lack of interoperability and integration with other campus systems, 
poor take-up by instructors and brittle linking strategies which break as institutions shift suppliers for e-content from year to year. In this paper we present a 
Resource  List  Management  tool  that  uses  Semantic  Web  technologies  and 
Linked Data principles to overcome these limitations and improve the interoperability of data contained within such systems.  

1   Introduction 

In this paper we present a Resource List Management system for university students 
based on Semantic Web technologies [1] and Linked Data principles [2], and in active 
use at a number of UK universities. 

Resource Lists are collections of text books, journal articles, Web pages and/or audio visual content intended to be companions for students to degree courses, modules 
or assignments. These lists, defined by course instructors, were traditionally provided 
to the student as a paper handout comprising a list of citations, the intention being for 
the student to visit the campus library or bookshop to obtain the listed resources. 

Over the past 10 to 15 years, these  materials have increasingly become available 
over the Web, with publishers and content owners moving to an e-delivery model for 
both  monographs  and  serials.  Instructors  have  been  making  increasing  use  of  blog-
ging,  podcasting  and  multimedia  learning  objects  in  their  syllabuses.  Resource  List 
Management (RLM) tools emerged over this period, moving paper lists to online electronic signposting solutions. 

While this transition has created many benefits by improving access to published 
lists, current RLM solutions have a number of limitations, particularly regarding interoperability  of  and  wider  access  to  the  data  they  contain.  In  Section  2  we  will  
discuss these limitations in more detail. Section 3 presents the system from the user 
perspective  and  outlines  its  usage  context  at  the  pilot  sites  (University  of  Plymouth 
and University of Sussex). In Section 4 we describe our technical approach based on 
the  Semantic  Web  technology  stack  [1]  and  Linked  Data  principles  [2],  and  detail 
many  of  the  design  decisions  taken  when  developing  the  system.  We  conclude  the 
paper in Section 5 with final observations and directions for future work. 

L. Aroyo et al. (Eds.): ESWC 2009, LNCS 5554, pp. 697707, 2009. 
 Springer-Verlag Berlin Heidelberg 2009 

C. Clarke 

2   Limitations of Traditional RLM Tools 

2.1   Limited Interoperability of Resource List Data 

Historically, the interoperability of data between publishing platforms, the University 
library catalogue, the University Virtual Learning Environment (VLE) and RLM tools 
themselves has been poor. RLM tools have often been no more than electronic replicas  of  the  paper  based  list,  storing  details  about  the  lists  and  resources  themselves 
within  proprietary  database  schemas,  accessible  only  by  a  HTML  or  other  userorientated interface, with no open APIs available for integration. 

Assuming that a new solution can provide better integration with other systems and 
the wider web, the issue of licensing data provided by APIs is oft-overlooked. We recognise the importance of being specific in how you wish others to use data in section 4.4.  

2.2   Few Opportunities for Collaboration or Personal Contributions 

RLM tools have not traditionally encouraged, or even allowed for, contributions from 
the majority of the users of the system (the students). Instead the emphasis has been 
on instructors creating a static list that is then used in read-only mode by the students. 
There  has  been  little  attempt  to  allow  students  to  add  valuable  annotations  to  lists. 
Examples would include communicating  whether they have found an item useful in 
attaining their learning goals; annotating resources with study notes; or forming new 
collections of resources for a particular essay or group exercise.  

Not only do these restrictions contradict the notion of the Web as a read/write me-
dium, recently popularised by trends often labelled as Web2.0 [3], but it also contradicts 
the view that learning could or should be approached as a collaborative process [4]. 

From the perspective of instructors, the task of discovering new or revised content 
to  update  existing  or  create  new  lists  has  been  largely  unaddressed  by  existing  systems beyond offering a simple bookmarking system or search interface over the local 
university library catalogue. With hundreds if not thousands of instructors worldwide 
facing the task of creating, for example, an introductory physics resource list there is 
great potential for a more collaborative solution. 

2.3   Complexity in Access Mechanisms 

While  the  transition  to  electronic  resources  has  improved  the  access  landscape  to 
some extent, it has also led to the situation where a single journal subscription can be 
fulfilled  by  numerous  different  publisher  or  aggregator  platforms.  This  is  known  as 
the  appropriate  copy  problem  [5].  As  an  institution  shifts  subscription  agents  from 
year  to  year,  the  landscape  of  access  rights  a  university  has  purchased  becomes  increasingly  complex.  Links  to  e-content  harvested  by  the  instructor  into  the  RLM  to 
may function this year, but expire or move to a different platform the next. 

Institutional link resolver solutions, such as SFX from ExLibris1, go some way to 
solving  these  issues.  However,  in  our  experience,  such  library-biased  solutions  
often represent a poor experience for the student and are potentially forgotten about 
by the instructor when assembling lists. Instead of searching the resolver and harvest-
                                                           
 1 http://www.exlibris.co.il/category/SFXOverview 
?

?

?
ing  the  resources  resolver  page,  many  instructors  naturally  harvest  direct  from  the 
source web page to which the resolver points. 

2.4   Stock Management 

Traditional  RLM  tools  have  overcome  a  number  of  the  limitations  of  paper-based 
resource lists, most notably in the area of stock management. Web-based lists that link 
to  the  resources  in  the  universitys  library  catalogue  can  be  used  to  give  advance 
warning  to library acquisition staff that particular resources  will be in  high demand 
during certain periods and that stock levels may need to be increased.  

However,  existing  systems  are  primitive  and  brittle  in  their  approach,  relying  on 
catalogue  database  identifiers  to  link  to  resources,  and  fail  to  identify  identical  or 
equivalent  items  available  in  the  catalogue  such  as  duplicate  copies  or  subsequent 
editions of a  work. This results in sub-optimal algorithms for predicting both  usage 
and availability for a resource. 

3   The Talis Resource List Management System 

In partnership with 15 UK and Eire universities (the focus group), we embarked on a 
project to replace Talis existing RLM tool and seek to address some of these issues 
through the use of Semantic Web technologies.  

The system, known as Talis Aspire2, was launched at the University of Plymouth, 
one of the existing focus group partners, in September 2008, initially with just 1000 
students. Throughout the autumn semester, Plymouth have been increasing adoption 
of  the  system  with  the  aim  of  giving  access  to  all  22000  students  in  2009.  During 
January 2009, the University of Sussex joined the pilot, increasing access to around 
40000 users in total. 

Before we discuss our technical approach we will give an overview of the applica-

tion from the perspective of our two primary user groups  students and instructors. 

3.1   The Instructor's User Experience 

The lists themselves can be constructed using sections (see figure 1), as defined in the 
Resource List ontology, to group resources according to topics, time periods, or im-
portance. For example an instructor may group items into a time-based section (e.g. 
Lecture  1  )  or  use  a  topic-based  (e.g.  Accounting  for  Intangibles)  arrangement. 
This,  along  with  any  class  notes  the  instructors  add,  both  add  extra  context  for  the 
student and enhance the semantics of the list, and indicate intended uses for a group 
of  resources.  This  makes  the  lists  much  more  semantically-rich,  and  provides  high 
quality  contextual  data  for  the  future  construction  of  recommendation  services  (see 
section 5). 

The resources themselves are gathered into the system by a process known as har-
vesting.  Using  a  bookmarklet,  and  in  a  similar  pattern  to  sites  such  as  del.icio.us3, 
                                                           
 2 http://www.talis.com/aspire 
 3 http://del.icio.us 

C. Clarke 

instructors can harvest resources from a multitude of web sites, including the library 
catalogue. These are placed in a holding area known as My Library where they can 
be further annotated, tagged or commented upon. Later, when the instructor is making 
changes to an existing list, or creating a new list, the library appears on the interface 
and resources can be dragged and dropped onto the appropriate place on the list. 

 

Fig. 1. Outline view of the list, with the table of contents in open mode. The blue box represents a section containing two item references.  

The difference between the system and most bookmarking services is that the system 
attempts to identify the resource the page is describing, rather than just recording the location of the page itself. A series of recognisers are applied to the page content to determine the particulars of the item being harvested. Recognisers use a variety of techniques, 
including  querying  of  other  sources,  based on  facts  gleaned from  the  page  content,  or 
?

?

?
evaluating microformat-style markup such as COinS4 or embedded RDF to pull metadata 
from the page. Only if a resource cannot be identified by automatic  means is the user 
prompted to supply metadata and classify the type of resource being harvested. 

3.2   The Student's User Experience 

The student can interact with the resources within the lists in a number of ways. For 
physical items, the system  will pull in stock availability  from the local library cata-
logue, as well as offer a number of buying options. However, there are a number of 
functions  designed  not  only  to  improve  the  experience  for  the  student,  but  also  increase the richness of the data (see figure 2). 

 

Fig. 2. The student experience (individual item view) showing the harvested metadata, personal 
study notes, read status and library availability. This screenshot is from the demonstration sys-
tem, depicting the fictitious Broadminster University. 

For example, using the Resource List ontology [6], the system allows the student to 
annotate each item on a list, augmenting the instructors class notes with their own, 
and allowing to categorize each of the resources by intention (e.g. Planning to read, 
Reading  now).  The  student  can  then  use  the  tool  to  manage  their  library  of  re-
sources, typically running into the thousands, much more effectively. These intentions 
are stored as RDF triples in the application backend (invisibly to the user) and could 
be used as the basis for other applications. For example, a book loan service could be 
created, connecting level 3 students who own a core text with incoming level 2 students  that  are  seeking  to  obtain  it.  Additionally,  these  intentions  will  be  used  in  a 
forthcoming version of the system to enhance feedback given to instructors as to the 
popularity of the resources, by overlaying the raw usage statistics gathered from web 
server logs with the intentions of the students in the class. 

                                                           
 4 http://ocoins.info/ 

C. Clarke 

4   Technical Approach 

As  mentioned  above,  the  system  is  built  on  Semantic  Web  technologies  (RDF, 
SPARQL, RDFa) and Linked Data principles5, which set out a recipe for linking and 
publishing  data  on  the  web  via  de-referenceable  URIs.  It  is  our  view  that  this  approach affords the following advantages in the context of this application: 
  Unify the descriptions of resources using existing ontologies 
  Allow  these  descriptions  to  be  merged  and  matched  with  other  bibliographic  

repositories 

  Use  ontologies  designed  for  appropriation  to  describe  the  relationships  between 

these resources and how they fit into the institutional hierarchy 

  Improve the interoperability of the data using linked open data principles 
  Encourage  semantic  enrichment  of  the  data  by  students  and  instructors  to  enable 

context-aware recommendation functionality 

The  application  is  built  in  PHP,  utilising  the  ARC6_  and  Moriarty7  libraries,  and 

stores its data natively in RDF. 

4.1   RDF Data Storage 

The system uses the Talis Platform [7] to store, index and query across its RDF data. 
The application makes use of a group of distinct stores to separate graphs with different concerns and levels of privacy (see figure 3). For example, publicly linkable and 
discoverable  data  is  stored  in  a  different  store  from  private  user  content  or  details, 
such as preferences, passwords or private study notes. Data from these stores can be 
merged within the system at run time when required. Using this approach encourages 
re-use of the public data by other applications. Full SPARQL and search capabilities 
can be offered externally without exposing sensitive or private data. 

As previously described, instructors harvest metadata about resources into the system  using  an  intelligent  bookmarklet.  Once  obtained,  the  metadata  about  these  resources is stored in the instructors library as RDF using the Bibliographic Ontology 
[8]  increasing  the  interoperability  of  the  harvested  data  with  other  systems  and  
workflows.  Bibliographic  Ontology  is  already  in  use  by  a  number  of  other  groups, 
including Zotero8 a tool to help collect research sources, and the LIBRIS project9 at 
the National Library of Sweden which is a linked open data online library catalogue. 
The system employs a mechanism of trusted sources to improve the quality of harvested metadata. Rather than rely solely on the metadata provided by the source web 
page  as  bookmarked  by  the  user,  the  system  scans  the  source  for  identifiers  such  
as  DOIs10  or  ISBNs.  These  are  then  used  to  query  trusted  sources  such  as  the  

 

                                                           
 5 http://linkeddata.org/ 
 6 http://arc.semsol.org/ 
 7 http://n2.talis.com/wiki/Moriarty 
 8 http://www.zotero.org 
 9 http://libris.kb.se/?language=en 
10 http://www.doi.org/ 
?

?

?
Other 3rd party applications and 

datasets

Talis RLM

Talis Platform

Public Store
(open data)

Private Store

(user data)

 

Fig. 3. Partitioning of data stores, with publicly linkable data in the store on the left, and private 
data, only available to the application, in the store on the right 

institutions library catalogue, or the publishers record for a journal article. A logical 
extension to this in the near future is to use a common identifier to mint a URI according to a known algorithm to produce a de-referenceable URI in the linked open data 
cloud, and retrieve the metadata from there. It would be easy to mint a URI referencing a resource in the RDF Book Mashup11 from an ISBN, for example, and follow the 
URI to discover metadata about the resource. 

By  storing  metadata about the resource being described, rather than the page describing it,  more resilient  strategies can be employed to ensure content links do not 
break if the library decides in future to change supplier. Much of this more sophisticated logic is simply invoked by the user by clicking the Get this item button (see 
figure 1). The philosophy of this feature is to get the user as close to the resource as 
possible. To improve the user experience, content such as eBooks or journal articles 
that are available on-line are in-lined in the page without linking to an external loca-
tion, in the style of YouTube12 and the Google Books13 services. 

The interface to build or edit lists (see figure 4) uses a WYSIWYG metaphor implemented  in  Javascript  to  allow  the  user  to  drag  and  drop  resources  and  edit  data 
quickly, without the need to round trip back to the server on completion of each op-
eration.  Behind  the  scenes  the  actions  of  moving,  adding,  grouping  or  editing  resources create RDFa [9] markup on the page. When the user has finished editing, they 
hit  a  save  button  which  serialises  the  RDFa  model  in  the  page  into  an  RDF/XML 
model which is submitted back to the server to be persisted to disk. 

Adoption of this approach has significantly reduced complexity in the persistence 
logic of the application. The user effectively builds the RDF representation of the list 

                                                           
11 http://www4.wiwiss.fu-berlin.de/bizer/bookmashup/ 
12 http://www.youtube.com 
13 http://books.google.com 

C. Clarke 

themselves on the client, and submits the new model along with the model as it appeared before changes were applied to the server at the end of the editing session. The 
system simply compares the two models to calculate a delta of changes, and these are 
submitted to the appropriate store using the Changeset protocol [10]. 

 

Fig. 4. The list editing. Harvested references can be dragged from the right and dropped onto 
the list on the left. References already on the list can be dragged and re-ordered. 

4.2   Vocabularies and Ontologies Used 

As well as re-using existing ontologies such as FOAF [11], SKOS [12], Biblio Ontology [8] and Dublin Core [13], we developed and published two new ontologies as part 
of the project. The Resource  List Ontology [6] underpins the semantics of the relationships between resources and their intended uses. The Academic Institution Internal Structure ontology (AIISO) [14] describes the courses, modules, departments and 
schools that make up an institution, which was required to enable instructors to link 
lists to the relevant module or course, to enable students to find lists. 

4.3   Interoperability of Data 

As  well  as  standardising  the  description  of  resources  by  using  ontologies  in  use  by 
other groups, the RLM tool encourages re-use and linking of data to other external sets 
by adhering to linked open data principles [15]. This means that not only did the design 
of the data have to fit the immediate use cases of the user, but also unknown use cases 
beyond the system boundary. This is referred to as designing for appropriation.  

Unlike many web applications, the system is architected to use a noun-based URL 
structure to describe entities, rather than a verb-based approach to describe operations 
?

?

?
(see  table  1).  This  works  with  the  mechanisms  that  underpin  the  web,  rather  than 
against them, and focuses on describing resources via dereferencable URIs rather than 
describing operations [16]. This approach lends itself well to publishing linked open 
data, with URLs representing entities rather than actions, and the system uses content 
negotiation approaches [13] to allow each URL in the system to be served via a HTTP 
GET request as XHTML (for humans) and RDF/XML or JSON for software agents. 

Table 1. Noun-based vs. verb-based URL Structure 

URL Structure

Noun-based

http://lists.lib.plymouth.ac.uk/lists/abf203

Verb-based

http://example.org/view?courseCode=ABF203

 

In the linked data world, agents can follow the dereferencable URIs in one document to another if they wish to augment the description of a particular resource. This 
can rapidly become unwieldy if documents contain large quantities of links - agents 
may need to make a large amount of additional HTTP calls for even basic use cases. 
In line  with designing  for appropriation, the system  makes a reasonable estimate of 
shape of data that a user agent might expect when requesting a description of a particular class of resource. For example, a GET issued against the URI of a list will also 
return details of the items in the list. 

In general, using a linked data approach makes it very easy for system integrators 
to either simply link to the systems human-consumable interpretation of the user interface  (via  the  dereferencable  URI),  or  create  their  own  interpretation  within  their 
respective VLE or institutional portal environments.  

Other  services  on  the  web  can  link  to  resources  described  within  the  system  to 
augment their own descriptions, and mine rich relationships to other related topics or 
resources. 

4.4   Licensing of Data 

An  oft-overlooked  aspect  of  publishing  data  on  the  web  is  the  inclusion  of  specific 
license  terms  on  what  rights  the  owner  of  the  data  set  is  willing  either  to  exert  or 
waive [17]. As the linked open data web expands, the importance of attaching specific 
licensing terms will become as important as it has in the open source software world.  
Knowing that you are free to incorporate a dataset  within your own will become as 
important  and  knowing  that  you  cannot.  The  Open  Data  Commons  Public  Domain 
Dedication and Licence14 is available for publishers of data to explicitly gift data to 
the commons according to community norms.  

Talis is consulting with customers of the RLM tool to make sure they understand 
the  implications  of  publishing  data  on  the  open  web,  and  encourages  them  to  do  so 

                                                           
14 http://www.opendatacommons.org/odc-public-domain-dedication-and-licence/ 

C. Clarke 

with explicit license terms. Part of the implementation process involves the selection of 
an appropriate strategy according to the specific customers requirements. To encourage the widespread re-use and linking of data, Talis is offering savings on product subscriptions for those customers who select open licensing strategies for their data. 

5   Conclusions and Future Work 

By using existing ontologies and publishing the data within the RLM as linked open 
data, the tool not only unifies the description of learning resources, but it also unlocks 
silos of semantically rich descriptions of inter-related resources and the links and relationships  between  them,  as  described  by  domain  experts  (the  instructors).  This  enables both more effective linking strategies and better interoperability of data between 
enterprise systems compared to existing systems. 

The Talis RLM tool encourages user-enriched descriptions of the data it manages 
by increasing the opportunities for users to annotate existing data. The aggregate of 
these enrichments form the basis for explicit feedback to the list creators. 

Having  unified  the  descriptions  of  lists,  added  semantic  richness  to  the  data  and 
encouraged mass user annotations, future development will focus on the issues around 
context-aware recommendation systems. The first iteration  of such a system  will be 
implemented at the point at which the instructor harvests items into the system. Because the system recognises resources not just web links, it can make well informed 
suggestions  based  on  context  rather  than  keywords.  For  example,  the  system  may 
suggest  an  alternative,  newer  edition  of  a  book  available  from  library  stock,  rather 
than the older copy the instructor is harvesting from Amazon.  

This  richness  in  description,  allowing  the  identification  of  similar  or  equivalent 
items, can also be applied to the problem of identifying patterns in stock usage. Combined with the collective intentions of the user base, gleaned from annotations made 
by students as to their likely use of the item, customers can predict and plan an optimal stock strategy more accurately than in a system that relies on proprietary identifiers alone.   

At the time of writing, Talis are continuing the process of rolling the system out to 
further  focus  group  partners,  and  will  continue  to  implement  the  system  across  the 
existing RLM customer base of 1/3rd of UK Universities (representing over 800,000 
students  and  over  20,000  instructors)  through  2009.  Published  as  linked  open  data, 
this will represent a significant corpus of discoverable data about how instructors use 
resources for teaching. 
