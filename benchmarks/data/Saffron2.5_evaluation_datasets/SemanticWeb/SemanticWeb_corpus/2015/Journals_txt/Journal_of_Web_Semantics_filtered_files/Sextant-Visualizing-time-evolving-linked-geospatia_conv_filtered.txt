Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

Contents lists available at ScienceDirect

Web Semantics: Science, Services and Agents

on the World Wide Web

journal homepage: www.elsevier.com/locate/websem

Sextant: Visualizing time-evolving linked geospatial data
Charalampos Nikolaou, Kallirroi Dogani, Konstantina Bereta, George Garbis,
Manos Karpathiotakis, Kostis Kyzirakos, Manolis Koubarakis
Department of Informatics and Telecommunications, National and Kapodistrian University of Athens, University Campus, Ilisia, 15784 Athens, Greece

a r t i c l e

i n f o

a b s t r a c t

Article history:
Received 16 February 2015
Received in revised form
20 September 2015
Accepted 27 September 2015
Available online 26 October 2015

Keywords:
Linked geospatial data
Linked spatiotemporal data
Visualization
Browsing
Exploration

The linked open data cloud is constantly evolving as datasets get continuously updated with newer
versions. As a result, representing, querying, and visualizing the temporal dimension of linked data is
crucial. This is especially important for geospatial datasets that form the backbone of large scale open
data publication efforts in many sectors of the economy (e.g., the public sector, the Earth Observation
sector). Although there has been some work on the representation and querying of linked geospatial data
that change over time, to the best of our knowledge, there is currently no tool that offers spatio-temporal
visualization of such data. This is in contrast with the existence of many tools for the visualization of
the temporal evolution of geospatial data in the GIS area. In this article, we present Sextant, a Webbased system for the visualization and exploration of time-evolving linked geospatial data and the
creation, sharing, and collaborative editing of temporally-enriched thematic maps which are produced
by combining different sources of such data. We present the architecture of Sextant, give examples of its
use and present applications in which we have deployed it.

 2015 Elsevier B.V. All rights reserved.

1. Introduction

Linked geospatial data has recently received attention as
researchers and practitioners have started tapping the wealth of
geospatial information available on the Web [1]. As a result, in
the last few years, the Web of data is being rapidly populated
with geospatial information. Ordnance Survey is the first national
mapping agency that has made various kinds of geospatial
data from Great Britain available as open linked data.1 Another
representative example of such efforts is LinkedGeoData.2 where
OpenStreetMap (OSM) data is made available as RDF and queried
using the declarative query language SPARQL [2] A similar effort is
GeoLinkedData.3 where geospatial data from Spain is made public
using RDF [3] Finally, the Greek Linked Open Data portal,4 that is

 This work has been funded by the EU FP7 projects TELEIOS (257662), Optique
(318338), LEO (611141), and MELODIES (603525) and the Greek NSRF project
 Corresponding author.
SWeFS (180).

E-mail addresses: charnik@di.uoa.gr (C. Nikolaou), kallirroi@di.uoa.gr
(K. Dogani), konstantina.bereta@di.uoa.gr (K. Bereta), ggarbis@di.uoa.gr
(G. Garbis), manos.karpathiotakis@epfl.ch (M. Karpathiotakis),
kostis.kyzirakos@cwi.nl (K. Kyzirakos), koubarak@di.uoa.gr (M. Koubarakis).
1 http://www.ordnancesurvey.co.uk/oswebsite/products/os-opendata.html.
2 http://linkedgeodata.org/.
3 http://geo.linkeddata.es/.
4 http://linkedopendata.gr/.
http://dx.doi.org/10.1016/j.websem.2015.09.004
1570-8268/ 2015 Elsevier B.V. All rights reserved.

being developed by our group, has recently published a number of
open datasets as linked open data (LOD) for the area of Greece.

As the real-world entities represented in the Web of data
evolve over time, the datasets themselves get updated and the
temporal dimension of data plays a crucial role. For example, in
Earth Observation (EO), data is constantly produced by satellite
sensors and is associated with metadata containing, among
others, temporal attributes, such as the time that an image was
transmitted from the satellite to the ground station. In addition, the
acquisitions are considered to be valid for specific periods of time,
for example until they get updated by new acquisitions. Satellite
acquisitions might be utilized in applications such as the CORINE
Land Cover programme operated by the European Environment
Agency that makes available as a cartographic product the land
cover of European areas.5 Periodically, CORINE publishes the
changes in the land cover of these areas in the form of changesets.
Applications for exploiting this abundance of geospatial information have also started to emerge. For example, in project
TELEIOS,6 we have built a service for real-time fire monitoring
based on satellite images and open linked geospatial data [4]. In
the same project, a burn scar mapping service has been developed which offers maps of burned areas of Greece for the period
19842012 based on Landsat images [5].

5 http://www.eea.europa.eu/publications/COR0-landcover.
6 http://earthobservatory.eu/.

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

The core component of these two services is the geospatial
RDF store Strabon7 which stores hotspot products extracted from
satellite images, burnt areas, and linked geospatial data offered
by the Greek Linked Open Data portal mentioned previously,
and queries them to deliver these services. Strabon supports
two query languages: stSPARQL, an extension of SPARQL 1.1
for querying linked geospatial data that changes over time
[6,7] and GeoSPARQL [8], a recent standard of the Open Geospatial
Consortium (OGC) for static geospatial data.

stSPARQL can be used to query data represented in an extension
of RDF called stRDF [6,7]. stRDF and stSPARQL have been designed
for representing and querying linked geospatial data that changes
over time, e.g., the growth of a city over the years due to new
developments can be represented and queried using the valid time
dimension of stRDF and stSPARQL respectively.

GeoSPARQL is a recent OGC standard for a SPARQL-based query
language for geospatial data expressed in RDF [8]. GeoSPARQL
defines much of what is required for such a query language by
providing vocabulary (classes, properties, and functions) that can
be used in RDF graphs and SPARQL queries to represent and query
geospatial data. This vocabulary is organized in an hierarchical and
modular fashion and is provided by a core component and various
extensions that add specialized vocabulary and/or functionality.

stSPARQL and GeoSPARQL are very similar

languages.
GeoSPARQL goes beyond stSPARQL with the functionality offered
by its RDFS entailment extension, and its topological extension and
the related query rewrite extension. This opens up the possibility
of useful forms of topological reasoning not covered by stSPARQL.
On the other hand, stSPARQL goes beyond GeoSPARQL in two ways.
First, it can model and query the valid time of triples, enabling it to
model temporal and spatiotemporal domains, and concepts such
as events, facts that change over time, etc. Second, it defines spatial
and temporal aggregate functions which are very useful to have in
these domains. A more detailed comparison of the two languages
may be found in [1].

Strabon is a DBMS for the storage and querying of linked
spatiotemporal data encoded in the model stRDF and queried by
stSPARQL or GeoSPARQL (static data only). It is an open source
system and has been developed by extending the well-known
RDF store Sesame8 and using PostGIS9 and PostgreSQL Temporal10
for the back-end storage and querying of spatiotemporal data. As
we have shown in [6,7], Strabon is currently the most functional
spatiotemporal RDF store available, while at the same time it offers
equal or better performance when compared with other RDF stores
such as Parliament [9], uSeekM [10], and well-known commercial
systems [11].

While developing applications such as those presented above
[4,5], we were faced with the tasks of browsing and exploration of
multiple linked spatiotemporal datasets together with other heterogeneous geospatial data available on the web (e.g., geospatial
data available in file formats, such as KML, shapefiles, GeoTIFF). Another important task in these applications was the production of
thematic maps, i.e., maps useful to end-users for analyzing or assessing an event or situation, like analysis of environmental dam-
ages, fire monitoring and management, etc. This motivated us to
ask the following question.

How do we browse, explore, visualize, and produce thematic
maps using open sources of geospatial information, such as
linked geospatial and temporal data, and GIS data available on
the web?

7 http://www.strabon.di.uoa.gr/.
8 http://rdf4j.org/.
9 http://postgis.net/.
10 http://pgfoundry.org/projects/temporal/.

This article answers this question by presenting Sextant,11 an
open source, web-based tool12 for browsing and visualizing timeevolving linked geospatial data together with other geospatial
data sources, such as KML files. We demonstrate that apart
from owl:sameAs links, implicit semantic links based on the
temporal and spatial dimension are also inherent in linked data.
Similarly to well-known GIS tools (e.g., QGIS, ArcGIS), Sextant
can be used to produce thematic maps by layering geospatial
information which exists in a number of data sources ranging
from standard SPARQL endpoints, to SPARQL endpoints following
the standard GeoSPARQL defined by OGC for the modeling and
querying of geospatial information, and other well-adopted vector
and raster geospatial file formats, such as KML [12], GeoJSON,13 and
GeoTIFF.14 With the development of the temporal dimension of
stRDF and its implementation in Strabon [7], linked spatiotemporal
data can also be handled by Sextant.

In addition to this article, the reader can find ample evidence
confirming the usefulness of Sextant in the deliverables [13,14] of
EU project TELEIOS written by the two user partners of the project,
the German Aerospace Center (DLR) and the National Observatory
of Athens (NOA). In this paper, inspired by the use cases of
these two organizations in the context of TELEIOS, we showcase
the usefulness of Sextant in the domains of Earth Observation
and Environment by presenting its browsing and visualization
capabilities using a number of link geospatial datasets and KML
files that are publicly available on the Web.

The work presented in this article extends the demo papers
[15,16] presented respectively at the Extended Semantic Web
Conference 2013 [17] and the International Semantic Web
Conference 2013 [18,19]. The first of these papers, namely [15],
shared the best demonstration award with the demo paper [20].

The rest of the article is organized as follows. Section 2
gives an overview of Sextant, presenting its architecture and
discussing how semantic web technologies have been employed
in it. Then, Section 3 demonstrates the power of Sextant with
respect to formulating queries using various vocabularies for the
representation of geospatial and temporal information in RDF.
Section 4 describes a number of linked geospatial datasets that
are used later on when the application scenaria are presented in
Section 5. Section 6 discusses related work in visualizing linked
geospatial data. Last, Section 7 discusses future extensions of
Sextant, while Section 8 concludes the article.

2. Overview of Sextant

Sextant is a web-based tool for browsing and visualizing
time-evolving linked geospatial data. The main design goals in
the development of Sextant have been flexibility, portability,
and interoperability. Sextant achieves these goals based on
the following technologies.
It has been developed using the
Google Web Toolkit which is a mature framework that provides
rapid cross-platform and cross-browser implementations of web
applications. In addition, Sextant builds on the Timemap Javascript
library15 for the visualization of temporally-enriched KML files.
Finally, to achieve interoperability with other well-known GIS
tools (e.g., QGIS, ArcGIS, Google Earth), Sextant is based on the
following OGC standards:

11 http://sextant.di.uoa.gr/.
12 The naming of our system is inspired by the navigation instrument sextant
(http://wikipedia.org/wiki/Sextant) used to measure the angle between any two
visible objects.
13 http://geojson.org/.
14 http://trac.osgeo.org/geotiff/.
15 https://code.google.com/p/timemap/.

Fig. 1. High-level architecture of Sextant.

Fig. 2. The graphical user interface of Sextant.

(a) the OpenGIS Simple Features Access (OGC-SFA) standard [21]
that defines the Well-Known Text (WKT) format for representing geometries,

(b) the Geography Markup Language (GML) [22] for expressing

geographical features,

(c) the KML file format [12] (formerly Keyhole Markup Language)
that was designed by Google and later adopted by OGC for
expressing geographic annotation and visualization on existing
or future web-based online and mobile maps (2-dimensional
space), as well as on Earth browsers (3-dimensional space), and
(d) the query language GeoSPARQL for representing and querying

RDF data with geospatial information [8].
Fig. 1 gives a high-level overview of Sextant, which comprises a
front-end and a back-end. In the following, we describe these parts
in detail.

2.1. The front-end of Sextant

The front-end part (the rounded rectangle at the top of Fig. 1),
which runs on any modern browser (e.g., Opera, Firefox, Chrome,
Safari, Internet Explorer), is the graphical user interface depicted
in Fig. 2 with which a user interacts to accomplish the two main
functionalities that are offered by Sextant. These functionalities
can be summarized as follows:
(a) Exploration of linked spatiotemporal data spanning multiple

SPARQL endpoints and

(b) Creation, sharing, and collaborative editing of thematic maps
by combining linked spatiotemporal data and other geospatial
information available in vector or raster formats, such as KML,
GeoJSON, and GeoTIFF.
With respect to the above functionalities, the front-end is only
responsible for the presentation layer. This includes visualization

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

(a) Layers panel: management of the layers comprising a
map.

(b) Endpoints panel: registration of SPARQL endpoints.

(c) Query panel: formulation and execution of
SPARQL queries.

(d) Explore panel: exploration of the class hierarchy of
a SPARQL endpoint.

(e) Time manager panel: moving backward and
forward temporal filters of queries.

Fig. 3. The various panels of Sextant.

of spatiotemporal information on a map and a timeline (see
the right part of Fig. 2), organization of a map into layers and
management of them with respect to naming, ordering, and
coloring (see Fig. 3(a)), registration of SPARQL endpoints to contact
for browsing their content (see Fig. 3(b)), formulation of SPARQL
queries and evaluation on a registered SPARQL endpoint (see
Fig. 3(c)), harvesting the content of a SPARQL endpoint with the aim
of building a class hierarchy, and discovering the spatial extent of
available information (see Fig. 3(d)), and managing the valid time
span of retrieved data (see Fig. 3(e)).

of the SPARQL 1.1. protocol [23] and the SPARQL query results XML
format [24]. The endpoint connector supports also other SPARQL
query results formats, such as JSON, CSV, and TSV, the specification documents of which are contained in [25,26]. The endpoint
connector maintains a list of SPARQL endpoints that have been registered by the user using the endpoints panel of the front-end part
of Sextant (see Fig. 3(b)). Furthermore, it is responsible for executing SPARQL queries (e.g., a query formulated by the user through
the query panel depicted in Fig. 3(c)) and receiving the query results in the SPARQL XML format.

2.2. The back-end of Sextant

The back-end part (the rounded rectangle in the middle of
Fig. 1), which runs on the server side, is responsible for undertaking
the heavy computational tasks that implement the functionalities
discussed above. The back-end is composed of 5 components:
the endpoint connector, the ontology manager, the map registry,
the time manager, and the KML translator. These components are
discussed in the following.

Endpoint connector

The endpoint connector of Sextant undertakes the communication with SPARQL endpoints that are publicly accessible on the web
through a URI. The minimum requirements that a SPARQL endpoint
should meet is to be compliant with the specification documents

Ontology manager

Sextant models the content of a map according to the
map ontology of Fig. 4. The map ontology is available at
http://sextant.di.uoa.gr/ontology. According to the ontology, a map
comprises an ordered set of layers, the content of which may derive
either from the evaluation of an stSPARQL/GeoSPARQL query on
a SPARQL endpoint or directly from a standard file format for
representing geospatial information, such as KML. A layer may also
derive from the evaluation of standard SPARQL queries using other
vocabularies such as the W3C GeoXG16 [28] and NeoGeo.17 In such
cases, however, one has to provide an adaptor for transforming

16 The W3C GeoXG incubator group has also developed a geospatial ontology [27].
17 http://geovocab.org/.

Fig. 4. Map ontology.

the representation of a geometry to a standard OGC representation
format, such as Well-Known Text or GML, the two OGC geospatial
data formats supported by stSPARQL and GeoSPARQL or adapt
the SPARQL query appropriately as it will be demonstrated in
Example 4 of Section 3.

The map ontology of Sextant employs also the temporal
ontology dictated by the data model stRDF and the query language
stSPARQL for the modeling of valid time [7] (in right of Fig. 4).
This ontology enables the introduction of user-defined time and
valid time of a triple in RDF data. User-defined time does not
carry any special semantics. Valid time is the time an event
takes place or a fact is true in the application domain. Time
is modeled as instants or intervals and is represented using
values of the datatypes xsd:dateTime and strdf:period
respectively. One may use all the temporal features of stSPARQL18
to query linked spatiotemporal data encoded in stRDF, such as
the temporal extension functions corresponding to the thirteen
temporal relations of Allens interval algebra [29], the temporal
aggregate functions, or the extension functions for constructing
new temporal elements. In this way the full capabilities of SPARQL
endpoints using the spatiotemporal RDF store Strabon can be
exploited.

The ontology manager of Sextant is the component that is
responsible for maintaining the description of a map as described
above. The ontology manager communicates with the map registry
component (described next) to persistently store or retrieve the
RDF description of a map. The following example presents the RDF
description that Sextant maintains for the map of Fig. 2.

Example 1. The following RDF triples, given in the Terse RDF
triple language (Turtle) [30], correspond to an excerpt of the RDF
description of the content of the map depicted in Fig. 2 and have
been produced by the ontology manager component of Sextant
by populating the map ontology described above. The content of
the map is described in detail in Section 5.2 where the application
utilizing it is presented.

@prefix rdf:

<http://www.w3.org/1999/02/22-rdf-syntax-ns#>.

@prefix maponto:

<http://geo.linkedopendata.gr/map/ontology/>.

@prefix mapid:

<http://geo.linkedopendata.gr/map/id/>.

<mapid:mulrcpb74onu1smi_>

a <maponto:Map> ;
<maponto:hasLayers> <mapid:mulrcpb74onu1smi_list>.

<mapid:mulrcpb74onu1smi_list>

a maponto:Layers ;
rdf:_1 <mapid:mulrcpb74onu1smi_l0> ;
rdf:_2 <mapid:mulrcpb74onu1smi_l1> ;
rdf:_3 <mapid:mulrcpb74onu1smi_l2> ;
rdf:_4 <mapid:mulrcpb74onu1smi_l3> ;
rdf:_5 <mapid:mulrcpb74onu1smi_l4> .

<mapid:mulrcpb74onu1smi_l4>

a <maponto:Layer> ;
<maponto:producedBy> <mapid:mulrcpb74onu1smi_q4> ;
<maponto:isTemporalLayer> false ;
<maponto:hasKmlFile>
<http://test.strabon.di.uoa.gr/sexTant/kml-tmp/
n_38j9n.kml>.

<mapid:mulrcpb74onu1smi_q4>

a <maponto:Query> ;
<maponto:hasEvaluator> <mapid:mulrcpb74onu1smi_e4>;
<maponto:hasValue> """<SPARQL-query>""" .

<mapid:mulrcpb74onu1smi_e4>

a <maponto:Endpoint> ;
<maponto:hasURL>
<http://geo.linkedopendata.gr/gag-endpoint/Query>.

Map registry

The map registry component of Sextant is responsible for storing
the RDF descriptions of map products that are modeled according
to the map ontology described previously. For this, it employs a
Strabon Endpoint (i.e., a SPARQL endpoint using as a back-end
the geospatial RDF store Strabon) which can be either locally or
publicly accessible. However, there is no dependency on the type
of the SPARQL endpoint as long as it is compliant with the SPARQL
1.1 Graph Store HTTP Protocol [31]. The justification, though, for
employing a Strabon Endpoint is that we plan to extend the
map ontology to include also metadata about a map produced
in Sextant (e.g., spatial and temporal extent) in order to offer
search capabilities on spatial and temporal attributes, a feature
that involves evaluation of GeoSPARQL or stSPARQL queries. A
more detailed discussion on this choice can be found in Section 7.

Time manager

18 http://www.strabon.di.uoa.gr/stSPARQL#temporals.

The time manager component of Sextant is responsible for
automatically moving forward (or backward) time filters of

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

SPARQL queries. Considering that a SPARQL query defines a layer
on Sextant and that a layer may present information that is valid
during a specific time period, the time manager makes it easier for a
user to select the time period for which a layer shows information.
Using this component, Sextant is also able to periodically retrieve
data that comes from a dynamic data feed and to provide a
map product that is being automatically updated at predefined
intervals.

Suppose that a user needs to monitor an environmental event
(e.g., the sea level, a fire front) that is currently active or in
development. Such data usually comes from sensors and is being
updated at predefined intervals (e.g., every five minutes). A user
can initialize a map layer by posing at a specific time (e.g., at 15:05)
the SPARQL query on the left part of Fig. 5. Also, the user can
define, using the time manager, that this layer should be updated
every five minutes. So every five minutes, the time manager would
move forward the time filter of the query and retrieve new data.
For example, at 15:10 the query in the right part of Fig. 5 will
be posed to update the map layer. The functionality provided by
the timeline, created using the Timemap Javascript library (see the
bottom right part of Fig. 2), enables a user to navigate through
data with a temporal dimension. A user can move the timeline
forward and backward and hide or display features on the map
according to their valid time span. This functionality is very useful
for exploring archive data. A user can create a temporally enhanced
layer, load all archive data once and then browse this data using
the timeline. However, if the user needs to monitor a dynamic
feed of data, then new data is constantly arriving at an endpoint.
In such cases, the functionality of the timeline is not enough. The
required functionality is provided by the time manager panel (see
Fig. 3(e)) that frequently updates the temporal filters of queries and
re-evaluates them. Following this approach fresh data is added on
the timeline of a map when needed.

The time manager panel enables the user not only to move
backward and forward the timeline but also retrieve new data
by changing the temporal
filters of queries. Each time the
button next (or previous) is pressed then the time manager
component scans all queries, that define a layer, for datetime
values and it adds (or subtracts) a time step to these values. Then,
it re-poses the new queries to the corresponding endpoints and revisualizes the new results on the map. The time step can be defined
(in seconds) by a user via the corresponding text field of the time
manager panel. Finally, by pressing the button play a user can
set Sextant to go forward every time step seconds, so that a
product map is automatically updated while time is passing.

KML translator

Sextant is armed with a component, named KML translator, that
translates the results of GeoSPARQL and stSPARQL queries from the
SPARQL query results XML format to the KML file format. With
respect to the representation of time, the KML standard defines
the abstract element kml:TimePrimitive which is realized by
the two elements kml:TimeStamp and kml:TimeSpan for the
representation of temporal instants and intervals respectively.
Sextant translates the temporal primitives of stRDF that were
mentioned previously into these two elements. In particular, Sextant translates any temporal instant expressed using the datatype
xml:dateTime into the element kml:TimeStamp, whereas it
translates any temporal interval expressed using the datatype of
stRDF strdf:period into the KML element kml:TimeSpan. An
example of this transformation is provided in Fig. 6. The translation
of geometries with datatypes one of the strdf:WKT, strdf:GML,
geo:wktLiteral, or geo:gmlLiteral to the respective elements of the KML specification is straightforward and is omitted.
Such a translation is depicted in Fig. 6 and is marked with an orange
rectangle.

The KML translator is also responsible for translating specific
RDFS datatypes defined by Sextant19 to KML elements, in order to
provide the following capabilities. First, the KML translator enables
coloring different geographic features of the same layer according
to their thematic features, instead of a common color style for
the whole layer. Second, it enables visualizing raster images that
are dynamically retrieved by a SPARQL query. To do so, Sextant
introduces the following datatypes:
 The datatype sextant:mapColor is attached to literals that
hold a KML color code as defined in the corresponding KML
standard.20 This datatype is used in Sextant to define the color
style of geographic features.
 The datatype sextant:imageURL is attached to literals that
hold the URL of raster images. This datatype is used in Sextant
as a means of overlaying a raster image on a map.
In order to enable different color style of geographic features
of the same layer, Sextant scans result tuples for variables with
datatype sextant:mapColor. For each unique color code found
in results, the KML translator creates a kml:ColorStyle element
and attributes it to the corresponding geographic features. An
example of this transformation is shown in Fig. 6 (marked in a
green rectangle). This capability is very useful, since it enables
the visualization of the thematic attributes of geographic features
on a map. For example, the CORINE dataset defines geographic
features and the land use/land cover of each feature. In order to
visualize such information on a map, it is typical to attribute a
specific color to every land use/land cover type. Instead of loading
a different layer for every land use/land cover type and applying
a common color style for the whole layer, Sextant can utilize
sextant:mapColor values attributed to each type, and visualize
the respective information in a single layer.

Raster images are also very important and useful to be depicted
on map products. The first version of Sextant enabled visualizing
static raster images by providing their public URL. Simply loading
a raster file (e.g., GeoTIFF, PNG) would be enough for visualizing
static information. However, visualizing raster images that may
dynamically change over time is also useful. The KML translator
enables Sextant to visualize dynamic information from raster
layers by retrieving the URL of a raster file from results of a
SPARQL query. Raster image URL are expressed using the datatype
sextant:imageURL and KML translates every image URL into a
kml:GroundOverlay which is overlaid on the map. An example
of this translation is shown in Fig. 7. This way, each time the query
is posed to an endpoint and different results are retrieved the
overlaid raster layer changes.

2.3. Collaboration capabilities

One of the key features of Sextant is its capabilities for
collaborative viewing and editing of maps produced in Sextant.
This is achieved first by populating the map ontology as described
above in Section 2.2, and, second, by publishing the map as a web
resource under a specific URI of the form http://< domain >
/Sextant/?map= < mapid >, where < domain > corresponds
to the domain name the Sextant web application may be accessed
and < mapid > corresponds to the map identifier of the viewing
or editing map (see Fig. 8(a)). This URI can then be shared among
users for collaborative viewing and editing of the map in Sextant.
This feature of sharing a map and allowing collaborative editing
among users through a URI is demonstrated in Section 5 where

19 http://sextant.di.uoa.gr/ontology.
20 https://developers.google.com/kml/documentation/kmlreference#color.

Fig. 5. Forward time filter of SPARQL query.

Fig. 6. Translation of SPARQL XML results to KML for vector data. (For interpretation of the references to color in this figure legend, the reader is referred to the web version
of this article.)

Fig. 7. Translation of SPARQL XML results to KML for raster images.

the URI of maps produced in Sextant are given to the reader to
appreciate its collaborative capabilities. The capabilities of Sextant
with respect to collaboration are limited, though, in the sense that
real-time collaborative editing (e.g., like what is offered by revision
control systems, such as SVN and Mercurial) is not supported.

Collaborative editing of a map is not limited to Sextant
only. Since Sextant is interoperable with GIS tools, collaboration
can be achieved also using well-known desktop or web-based
applications, such as QGIS, ArcGIS, and Google Maps by leveraging
the export facility of Sextant. Sextant can export a map in the KML
file format so as to be imported in the aforementioned tools (see
Fig. 8(b)). Therefore, a user is not confined to using Sextant, while

she is able to use the GIS tool of her preference. Correspondingly,
Sextant provides an import facility for importing KML files into
Sextant, which models and describes them according to its
underlying map ontology. Fig. 8(c) depicts such an example where
a map is created using Google Maps and then, the corresponding
KML file is imported into Sextant.

3. Queries in Sextant

This section is devoted to examples that demonstrate how a
user can visualize in Sextant temporal and geospatial information
that is present in linked datasets which are offered both by

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

(a) Map sharing functionality.

(b) Export to KML and display in QGIS.

(c) Map created with Google Maps and then imported into Sextant.

Fig. 8. Collaboration capabilities of Sextant.

a conventional SPARQL endpoint, e.g., Sesame, and SPARQL
endpoints supporting one of the query languages stSPARQL or
GeoSPARQL.

We begin with an example using an endpoint supporting
the query language stSPARQL (e.g., a Strabon endpoint [6]) and
demonstrate the querying capabilities of stSPARQL with respect to
time.

Example 2. The following stSPARQL query retrieves areas with
sclerophyllous vegetation that were partially burnt some time later
on.

SELECT distinct (strdf:transform(?geometry,
<http://www.opengis.net/def/crs/EPSG/0/4326>)
as ?geo) ?t1

WHERE {

?c clc:hasLandUse clc:sclerophyllousVegetation ?t1.
?c clc:hasGeometry?geom .

?ba rdf:type noa:BurnedArea ?t2 .
?ba noa:hasGeometry ?geometry .

FILTER (strdf:mbbIntersects(?geometry, ?geom))
FILTER (strdf:before(?t1, ?t2))

In the temporal query provided above, the first couple of
triple patterns retrieve areas with sclerophyllous vegetation, their
geometries and the respective time, as the fourth element of the
triple pattern. The variable t1 will be bound to the respective
valid time of the triples of the result set, i.e., the time when the
respective area is covered by sclerophyllous vegetation. The second
couple of triple patterns retrieve the burnt areas respectively. The
first filter expresses the partially burnt spatial condition by using

the spatial function strdf:mbbIntersects. The second filter
expresses the temporal condition before using the respective
function strdf:before. The filters of this query contain a spatial
and a temporal join.

Although Sextant has been designed to work with geospatial
extensions of RDF and SPARQL, namely stRDF, stSPARQL, and
GeoSPARQL, many users might want to use standard SPARQL
when querying linked datasets with temporal and/or geospatial
information (i.e., the corresponding SPARQL endpoint might not
support such extensions), or it might be the case that these
datasets do not follow the modeling of geospatial and temporal
information dictated by these extensions, i.e., they might employ
other vocabularies, such as W3C GeoXG and NeoGeo that were
mentioned previously.

At the cost of losing some functionality with respect to querying
temporal information, Sextant is still able to visualize temporal
information even in cases where temporal information is not
modeled according to stRDF or the employed SPARQL endpoint
is other than Strabon, which implements the stRDF data model
and stSPARQL query language. This can be accomplished by
adapting a SPARQL query to use the datatypes xml:dateTime
and strdf:period. In case the underlying SPARQL endpoint
is powered by Strabon, this can be accomplished by using the
constructor for temporal periods offered by stSPARQL:
strdf:period strdf:period(xsd:dateTime start,

This is demonstrated in the following example.

xsd:dateTime end)

Example 3. This example demonstrates how one can visualize
spatiotemporal information in Sextant when the temporal information is not modeled according to the data model stRDF. The following query asks for features inside the region of Patras, Greece,

the land cover of which has been characterized as sclerophyllous
vegetation by the CORINE Land Cover project, as well as for the time
period this characterization is valid. We assume that the temporal validity of the land cover characterizations made by CORINE
land cover uses the imaginary predicates ex:startTime and
ex:endTime to mark the starting and ending time points of such
intervals. Also, the modeling of geospatial information for spatial
features follows the one dictated by GeoSPARQL.

SELECT ?area ?wkt

(STRDT(

CONCAT("[", ?start, ",", ?end, "]"),
strdf:period) AS ?period)

WHERE {
?area rdf:type geo:Feature ;

clc:hasLandUse

clc:sclerophyllousVegetation ;

geo:hasGeometry ?geo ;
ex:startTime ?start ;
ex:endTime ?end .

?geo rdf:type geo:Geometry ;

geo:asWKT ?wkt .

FILTER (geo:sfWithin(?wkt,

"POLYGON((21.70 38.23, 21.70 38.33,
21.91 38.33, 21.91 38.23,
21.70 38.23))"^^geo:wktLiteral))

The XML results of the above SPARQL query can be transparently translated into the KML file format by Sextant. This is accomplished in the SELECT clause of the query, where a temporal period
with datatype strdf:period is constructed based on the starting
and ending time points of the requested features. This is done using the built-in functions of SPARQL 1.1, CONCAT21 and STRDT.22
In contrast, if the underlying SPARQL endpoint was Strabon, one
could use in the SELECT clause the more readable constructor pe-
riod, strdf:period(xsd:dateTime, xsd:dateTime). The
corresponding clause in that case would have been the following:

SELECT ?area ?wkt

(strdf:period(?start, ?end) as ?period)

The following example demonstrates how one can visualize
features in Sextant the geometry of which is modeled using a
datatype other than strdf:WKT or geo:wktLiteral.

Example 4. The following query can be posed against the SPARQL
endpoint of DBpedia at http://dbpedia.org/sparql to ask for all
airports and their names in English,
in the region of Attica,
Greece. The SPARQL endpoint of DBpedia is powered by a Virtuoso
endpoint and the geometry of spatial features is modeled in a
number of ways. For the case of airports, the geometry is offered
both as an untyped literal encoded in WKT and also expressed in
the vocabulary of W3C GeoXG. See for example the description
page at http://dbpedia.org/page/Ellinikon_International_Airport
that corresponds to one of the airports returned by that query. The
query below uses the modeling of geometries as untyped literals
encoded in WKT.23

SELECT ?airport ?name (STRDT(

CONCAT(?geo,
";http://www.opengis.net/def/crs/OGC/
1.3/CRS84"), strdf:WKT) AS ?g)

21 http://www.w3.org/TR/sparql11-query/#func-concat.
22 http://www.w3.org/TR/sparql11-query/#func-strdt.
23 Throughout the article the prefixnamespace declaration part of a SPARQL
query has been omitted from all SPARQL queries for the sake of readability. A
prefixnamespace association list is maintained in Table A.1 of Appendix.

WHERE {

?airport rdf:type dby:AirportsInGreece ;

wgs84_pos:geometry ?geo ;
rdfs:label ?name .
FILTER(lang(?name) = "en" &&

bif:st_distance(bif:st_geomfromtext(
"POINT(23.757 38.019)"), ?geo) < 50)

The following query is semantically equivalent to the previous one, but it accesses the properties wgs84_pos:lat and
wgs84_pos:long to get the latitude and the longitude of the location of the airports, respectively. This is the GeoXG vocabulary
that is used by DBpedia to model a point geometry.

SELECT ?airport ?name (STRDT(

CONCAT("POINT(", ?long, " ", ?lat, ")",
";http://www.opengis.net/def/crs/OGC/
1.3/CRS84"), strdf:WKT) AS ?g)

WHERE {

?airport rdf:type dby:AirportsInGreece ;

wgs84_pos:lat ?lat ;
wgs84_pos:long ?long ;
rdfs:label ?name .
FILTER(lang(?name) = "en" &&

bif:st_distance(bif:st_geomfromtext(
"POINT(23.757 38.019)"),
bif:st_point (?long, ?lat)) < 50) }

Sextant can be used to visualize the content of any SPARQL
endpoint regardless of the underlying modeling for the geometries
as soon as its transformation to the modeling of stSPARQL
or GeoSPARQL is expressible in SPARQL 1.1. Otherwise, one
has to implement an adaptor in Sextant for transforming the
representation of a geometry to a standard OGC representation
format and integrate it into the KML translator component
described in Section 2.2.

4. Linked geospatial datasets

In this section we describe the geospatial datasets that our
group has made available in RDF and published as linked data at
the Greek Linked Open Data portal24 and the Datahub portal,25 as
well as other linked geospatial datasets available on the web, such
as GeoNames. These datasets are used in the applications described
next in Section 5 to demonstrate the usefulness of our tool Sextant
for the browsing and visualization of such data.
CORINE Land Cover. The CORINE Land Cover (CLC) project is an
activity of the European Environment Agency (EEA) that collects
data regarding the land cover of 38 European countries. The
project uses a hierarchical scheme with three levels to describe
land cover with a mapping scale of 1:100,000. Level one is the
most generic and comprises 5 categories (e.g., artificial surfaces,
agriculture areas), level two comprises 15 categories (e.g., urban
fabric, industrial, transport units), and the last level is the most
detailed one comprising around 45 categories (e.g., continuous
urban fabric, discontinuous urban fabric).
Urban Atlas. Urban Atlas (UA) is also an activity of the EEA that
provides reliable, inter-comparable, high-resolution land use maps
for 305 Large Urban Zones and their surroundings (urban areas
with population greater than 100,000 people). The geometric
resolution of UA is higher than that of CLC (1:10,000). UA uses a 4-
level hierarchical scheme based on the CLC nomenclature. The first

24 http://linkedopendata.gr/.
25 http://datahub.io/organization/teleios.

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

and second levels comprise 4 categories, the third level comprises
12 categories, while the fourth level comprises 7 categories.
Greek administrative geography. This dataset describes the administrative divisions of Greece according to Kallikratis,26 the most
recent administrative re-organization of Greece. The hierarchical
administrative organization of Greece is as follows. Below the
country level, there are seven decentralized administrations, which
are composed by thirteen regions divided into several regional units
each. In addition, every regional unit consists of one or more municipalities which, in turn, comprise municipal units. The dataset has
been populated with relevant data (e.g. population, geographical
boundaries) that are available in the Greek geodata portal.27
Water bodies. This dataset contains information about the water
bodies (e.g., rivers,
lakes) of Greece following the directive
2000/60/EC of the European Parliament and of the Council. The
kind of information that is included in this dataset is the location
of water surfaces in Greece, accompanied by auxiliary information,
such as the name of the river/lake, the area, etc. The source of this
dataset is also provided by the Greek geodata portal in shapefiles.
Public Buildings. This dataset provides information regarding
buildings of public administration categorized according to the
services they provide (e.g., government buildings, municipalities,
municipality service centers, schools, etc.). The exact location of
these buildings is also provided in this dataset. The source of this
dataset is provided by the Greek geodata portal in shapefiles.
Fire hotspots and burned areas. This dataset contains information for
the area of Greece related to real time hotspot detection and burnt
area mapping that is derived from image processing algorithms
on satellite images and is available by the National Observatory of
Athens. Due to license restrictions, a sample of the primary source
data (shapefiles) has been provided to us which we transformed
into RDF and linked it with other linked geospatial datasets. We
use this dataset in Section 5.2 to assess the environmental damage
caused by fires with respect to the land cover of areas.
GeoNames. GeoNames28 is a gazetteer that collects both spatial and
thematic information for various placenames around the world. It
contains over 10 million geographical names and consists of over 8
million unique features of which 2.8 million are populated places
and 5.5 million are alternate names. All features are categorized
into one out of nine feature classes (e.g., ADM1, ADM2, ADMH1,
ADM5) and further sub-categorized into one out of 645 feature
codes. GeoNames contains feature attributes such as names of
places in various languages, elevation, population and others from
various sources. Users may manually edit, correct, and add new
names using a user friendly interface.

5. Applications of Sextant

Sextant is a user-friendly tool that can make the production
of thematic maps a quick and easy task. The following sections
include small, nevertheless, real application scenarios where
Sextant has been proved useful to experts in the Earth Observation
and Environment domains. The first two scenario were developed
in the context of project TELEIOS.

5.1. Emergency response

The first scenario is based on a real user scenario in which an
expert of an emergency response agency like the Center of Satellite
Based Crisis Information29 (ZKI) or the National Observatory of
Athens30 (NOA) would like to quickly compile a map in response

26 http://en.wikipedia.org/wiki/Administrative_divisions_of_Greece.
27 http://geodata.gov.gr/.
28 http://www.geonames.org/.
29 http://www.zki.dlr.de/.
30 http://www.noa.gr/.

3. The rail network of Greece taken from the Greek geodata portal

the GeoNames RDF dataset.

in the form of a KML file.31

to an emergency event, for example a flood, a tsunami, an
earthquake, or a forest fire. A typical map product that ZKI
produced on August 25, 2009, for assessing the area burnt as
a result of the fires of the period from August 21 to August
24, 2009, in Attica, Greece, is presented in Fig. 9 and may be
found at http://www.zki.dlr.de/map/1034/. Such a map, apart from
depicting burnt areas, is annotated with other kinds of information
to aid experts in assessing the severity of the fire event. Typical
information includes the road network, land use/cover, toponyms,
population, and other more detailed information concerning map
production and the data sources that were used.

We used Sextant to produce the map presented in Fig. 10 that is
similar to the one produced by ZKI. The major difference between
the two maps is that the one produced by Sextant is based on
the linked geospatial datasets of Section 4 and other data sources
available on the web in KML format (e.g., railway network). This
allows an emergency response manager to quickly compile a map
based on open source intelligence until more precise, detailed
data becomes available, i.e., after contacting local authorities. In
particular, the map of Fig. 10 comprises 9 layers each one described
in the following:
1. Location, name, and address information of hospital buildings

taken by the Public Buildings RDF dataset.

2. Name and population of toponyms in Attica, Greece taken from

4. The part of the E75 European route corresponding to Greece,

taken from the CORINE Land Cover RDF dataset.

5. Name and population of the municipalities of Attica taken from

the Greek Administrative Geography RDF dataset.

6. Areas of Attica characterized as urban fabric by the CORINE Land

Cover project, taken from the respective RDF dataset.

7. Areas of Attica characterized as agricultural by the CORINE Land

Cover project, taken from the respective RDF dataset.

8. Areas of Attica characterized as forests by the CORINE Land

Cover project, taken from the respective RDF dataset.

9. Areas of Attica characterized as shrubland by the CORINE Land

Cover project, taken from the respective RDF dataset.
All of the above layers, the content of which is based on an RDF
dataset, have been produced by evaluating a GeoSPARQL query on
a SPARQL endpoint storing the respective dataset. An example for
the last layer is shown next.

Example 5. The last layer of the map depicted in Fig. 10 containing
areas in the region of Attica that have been characterized by the
CORINE Land Cover project as shrubland may be produced by the
evaluation of the following SPARQL query that uses the vocabulary
of GeoSPARQL.
SELECT ?wkt
WHERE {
GRAPH <http://geo.linkedopendata.gr/corine> {
?area clc:hasLandUse ?landUse .
?landUse rdf:type ?l3 .
?l3 rdfs:subClassOf ?l2 .
?area geo:hasGeometry ?geometry .
?geometry geo:asWKT ?wkt .

FILTER (geof:sfIntersects(?wkt, "POLYGON((
24.10 37.92, 22.80 37.92, 22.80 38.60, 24.10
38.60, 24.10 37.92))"^^geo:wktLiteral))

FILTER (?l2 = clc:ShrubsAndOrHerbaceous
VegetationAssociations>) } }

31 http://geodata.gov.gr/datasets/attachments/37468daf-d548-49f7-bce9-
55b77661ea63/kml/sidhrodromiko_diktyo.zip.

Fig. 9. Fire products of 2009 in Attica, Greece produced by ZKI.

Fig. 10. Fire products of 2009 in Attica, Greece produced by Sextant.

To ease maintenance, we have opted for using a single SPARQL
endpoint and storing each dataset used for the construction of the
map depicted in Fig. 10 to a different named graph. Therefore,
the above query uses the named graph corresponding to the
CORINE Land Cover RDF dataset, which is identified by the URI
http://geo.linkedopendata.gr/corine.

The produced map depicted in Fig. 10 may be accessed at

http://bit.ly/sextant-rapid-mapping.

5.2. Land cover evolution over time

This section stresses the temporal features of Sextant by
describing a real scenario in which an EO scientist studies the
changes in the land cover of an area and assesses the damage
caused by fires. This scenario is very common in the EO domain,
where data is constantly produced by satellite sensors and is
associated with metadata containing, among others, temporal

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

Fig. 11. Screenshot from Sextant depicting the evolution of the land cover.

attributes, such as the time that an image was acquired. Satellite
acquisitions are utilized in related applications such as the CORINE
Land Cover programme.

To achieve the goal of our scenario, we combined information
derived from the following datasets: the CORINE 2000 dataset, the
fire hotspots and burnt areas dataset, and the Greek administrative
geography (GAG) dataset. The map consists of five layers as
described below.
1. Areas that were identified as burned from 1 Oct., 2012 (i.e., the
end of the fire season) until now, due to the previous fire event
on July 18, 2012.

2. Hotspots that were detected on July 18, 2012.
3. Areas that have been classified as sclerophyllous vegetation
according to CORINE, a classification that is valid from 2000 to
2012.

4. NATURA areas that are inside the polygon we are interested to

5. Municipalities of Western Greece, where most of the fires

occurred.
The third layer is produced by issuing the query of the following

study.

example.

Example 6. The last layer of the map depicted in Fig. 11 depicts
areas that were identified as burned from October 1, 2012, until
now and may be produced by the evaluation of the following
SPARQL query that uses the vocabulary of stSPARQL.

SELECT distinct (strdf:transform(?geometry,
<http://www.opengis.net/def/crs/EPSG/0/4326>)
as ?geo) ?t
WHERE {

?ba rdf:type noa:BurnedArea ?t .
?ba noa:hasGeometry ?geometry .
FILTER (strdf:within(?geometry,

"POLYGON((21.70 38.23, 21.70 38.33,
21.91 38.33,21.91 38.23,
21.70 38.23))"^^strdf:WKT))

FILTER (strdf:during("NOW", ?t))}

In the query above, the spatial and temporal features of
stSPARQL are used as follows. Function strdf:within is used to
refine the area of interest and retrieve only the areas located within
a specific polygon. Then, we want the areas that were characterized
as burned areas and they are still considered as burned, so the
current timestamp (i.e., the valid time of the respective triple)
which is expressed using the temporal constant NOW should
be during the valid time of the triple that denotes that an area
is burned. This temporal relation is expressed using the temporal
function strdf:during.

The scientist can also use the time slider offered by Sextant
to display/hide the above information according to her temporal
criteria for observing when and how the land cover of an area has
evolved so that she can be assisted in damage assessment.

The produced map depicted in Fig. 11 may be accessed at

http://bit.ly/sextant-land-cover-evolution.

5.3. Visualizing environmental data

In this scenario, we describe how one can explore publicly
available linked environmental data in a visual way and overlay
it with other useful geospatial datasets, a process that can
prove useful, since thematic maps depicting data regarding
in many scientific fields and
environmental
environmental organizations,
like EEA, or projects, such as
GLOBCOVER,32 the aim of which is to develop detailed maps of the
Earths global land cover.

issues is crucial

The map depicted in Fig. 12 consists of the thirteen layers

described below.
1. Areas characterized as Discontinuous Dense Urban Fabric by the

2. Areas characterized as Railways and Associated Land by the

Urban Atlas dataset.

Urban Atlas dataset.

32 http://due.esrin.esa.int/page_globcover.php.

3. Areas characterized as Continuous Urban Fabric by the Urban

Atlas dataset.

4. Areas characterized as Discontinuous Low Density Urban Fabric

by the Urban Atlas dataset.

5. Areas characterized as Sports and Leisure Facilities by the Urban

Atlas dataset.

6. Areas characterized as Green Urban Areas by the Urban Atlas

dataset.

7. Areas characterized as Isolated Structures by the Urban Atlas

dataset.

8. Areas characterized as Forests by the Urban Atlas dataset.
9. Areas characterized as Fast Transit Road and Associated Land by

the Urban Atlas dataset.

10. The national forests of Greece taken from the Greek geodata

portal in the form of KML file.33

11. The rivers of Greece taken from the Greek geodata portal in the

form of KML file.34

12. Burned Areas from 1 Oct., 2012 (i.e., the end of the fire season)

until now, due to the previous fire event on July 18, 2012.

13. Protected areas included in the NATURA 2000 dataset that is

provided in KML by the Greek geodata portal.35

Example 7. The layer displaying the green urban areas according
to the Urban Atlas dataset may be produced by the evaluation of the
following query that uses the vocabulary offered by GeoSPARQL.

SELECT ?wkt
WHERE {

?z ua:hasLandUse ua:greenUrbanAreas.
?z geo:hasGeometry ?g.
?g geo:asWKT ?wkt.

FILTER (geof:sfIntersects(?wkt,

"POLYGON((24.73 37.57, 22.13
37.57, 22.13 38.95, 24.73
38.95, 24.73 37.57 ))"
^^geo:wktLiteral)) }

The produced map depicted in Fig. 12 may be accessed at

http://bit.ly/sextant-env-data.

5.4. Monitoring dynamic geographic data

In the last scenario, we describe how Sextant can be used to
monitor dynamic environmental data, that are updated in real
time. This scenario is based on a real use case which is studied
in the context of the project Sensor Web Fire Shield (SWeFS).
The SWeFS research project aims at delivering a novel Sensor
Web platform for addressing the serious threat of forest fires.
The produced map, that is depicted in Fig. 13, can be accessed
at http://bit.ly/sextant-fire-front-monitoring and consists of three
layers described below.

1. A flammability map for the area of Hymettus.
2. Real time hotspot detections.
3. A raster image visualizing the future expansion of a fire front.

The first layer is a static one. A flammability map defines
geographical areas and the major category of vegetation that
covers each area. These vegetation categories are called fuel types
and are important for the task of fire monitoring, because they
indicate how drastically a fire front can expand in each area. In
order to visualize this information on a Sextant layer we assign
a sextant:mapColor value to each fuel type. Example 8 shows
RDF triples defining that chaparral areas are depicted with dark
green color and timber areas with brown color.

Example 8. RDF triples defining the color used to visualize fuel
types on a flammability map:
swefs:chaparral rdf:type swefs:FuelType.
swefs:chaparral swefs:hasColor

"77143C00"^^sextant:mapColor.

swefs:timber rdf:type swefs:FuelType.
swefs:timber swefs:hasColor

"77004297"^^sextant:mapColor.

This layer is used as a background and two dynamic layers are
depicted above it. The second layer of this map consists of real time
hotspot detections. Hotspots are characterized by a confidence
value indicating the probability that an area is on fire. To visualize
this confidence level on the map, sextant:mapColor values
are attributed to specific ranges of confidence (e.g., hotspots
with confidence value between 0.8 and 1 are depicted red).
New detections arrive every five minutes and the time manager
retrieves these new detections and visualize them on the map. The
query used to retrieve this layer at 15:00 on 18/08/2012 is shown
in Example 9.

Example 9. The layer displaying real time hotspot detections was
produced by the evaluation of the following query:
SELECT *
WHERE {

?hot swefs:hasProbability ?probability.
?hot geo:hasGeometry ?geo.
?geo geo:asWKT ?wkt.
?sat ssn:madeObservation ?hot ?t.

FILTER(?t="[2012-08-18T15:00:00,

2012-08-18T15:00:00]"^^strdf:period)

FILTER(strdf:mbbIntersects(?wkt,

"POLYGON((23.751 37.920, 23.865
37.920, ...))"^^strdf:WKT))

Finally, according to the fuel types and the detected hotspots a fire
simulation module of SWeFS generates the third layer of this use
case scenario. This layer consists of a raster image, that visualizes
the future expansion of the fire front. This raster image is retrieved
by query of Example 10 so that it is, also, dynamically updated
while time is passing.

Example 10. The layer displaying the raster image of the simulation module of SWeFS was produced by the following query:
SELECT ?t ?wkt ?image
WHERE {

?sm ssn:madeObservation ?sim ?t.
?sim swefs:hasGeometry ?geo.
?sim swefs:hasImage ?image.
?geo swefs:asWKT ?wkt.

33 http://geodata.gov.gr/datasets/attachments/c6cc176a-94e4-4f1e-bf62-
47a9531ad783/kml/ethikoi_drymoi.zip.
34 http://geodata.gov.gr/datasets/attachments/ec4efe37-76bb-426f-af38-
36d57d39dfba/kml/potamoi.zip.
35 http://geodata.gov.gr/datasets/attachments/289263ce-04be-4e88-941c-
81ea79da7169/kml/natura.zip.

FILTER(?t="[2012-08-18T15:30:00,

2012-08-18T15:30:00]"^^strdf:period)

In this scenario, instead of creating an offline map, we stress the
creation of a dynamic map which is being updated while new
data is arriving. Additionally we show how thematic content of

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

Fig. 12. Screenshot from Sextant depicting a thematic map created using linked environmental data and KML files.

Fig. 13. A screenshot from Sextant map depicting dynamic geospatial data. (For interpretation of the references to color in this figure legend, the reader is referred to the
web version of this article.)

geographic data (e.g., fuel type, fire probability) can be visualized
on a map layer by using different colors for different thematic
values.

6. Related work

In general, the semantic web and linked data area lack tools
that can aid researchers and practitioners in exploiting the ocean
of currently available linked geospatial and temporal data. This
contrasts very unfavorably with the rich and mature technological

arsenal of the traditional GIS area and hampers the development
of applications based on linked spatiotemporal data. We believe
Sextant is a significant step in the direction of filling this gap and
devote the rest of this section to discuss related tools both from the
semantic web/linked data and the GIS areas, as well as to compare
them with Sextant.

6.1. Semantic web and linked data

Although tools for exploring the content of linked geospatial
data have made their appearance recently, these tools focus on

browsing a single dataset or the content of a single SPARQL
endpoint. One of the first efforts is the LinkedGeoData browser36
which is the most promising among these tools, offering browsing
functionality for Open Street Map (OSM) data and also editing
capabilities in the style of the original OSM portal. Map4RDF37 [32]
is another browser for RDF data with geospatial information that
supports faceted browsing of RDF data based on the rdf:type
property, filtering of query results in a specified bounding box, and
visualization of statistical data modeled according to the SCOVO
vocabulary38 using predefined statistical indices. A more recent
tool is the Facete browser39 that promises to offer hierarchical
faceted search over SPARQL endpoints on RDF properties.

Although the above tools are very useful for exploring the
data offered by a single SPARQL endpoint, they have severe
limitations when they are faced with the task of exploring the
linked geospatial data cloud. This problem is actively being tackled
in its general form (i.e., not only in the geospatial domain) by the
recent tool LODVisualization40 which is based on the Linked Data
Visualization Model [33] for visualizing RDF data. But, although
LODVisualization seems a very promising tool, it has very limited
support regarding visualization of geospatial data and construction
of meaningful thematic maps.

With respect to visualizing both the geospatial and temporal
dimension of linked geospatial data, there is only one effort that
we are aware of that studies the modeling and visualization
of spatiotemporal data: the French project GEOPEUPLE.41 As an
example, the demo available at
http://www.rotefabrik.free.
fr/geopeuple/en/onglets-33038.html visualizes the evolution of
administrative regions in France over the time. To the best of our
knowledge, other than this demo, no tool has been made available
by the project GEOPEUPLE for public or commercial use.

temporal information associated with spatial objects and encoded
in the KML format and provide historical imagery of the Earths
land surface since 1930. Last, it can integrate and visualize other
important sources, such as the water surface and the atmosphere
of Earth.

There has been also a number of innovative prototype systems
in the 90s and early 00s for visualizing geospatial and temporal
data, spatiotemporal and time-series data, as well as visualizing
broader classes of computation pertaining to simulations of the
Earths environment, such as atmosphere and ocean. The most
prominent of these systems are Descartes [35] and its successor
CommonGIS [36], MapTime [37], and Vis-5D [38]. An extensive
study of such tools may be found at [39]. Such systems are some of
the few that offered early on pioneering data and visual analytics
functionality as well. Part of this functionality has gained wider
acceptance nowadays, while many of the visualization techniques
employed in these systems have been adopted in todays webbased libraries, such as Google Charts47 and the Google Maps
Visualization Library.48

There is also the project MapTime49 that offers a web-based
visualization tool which focuses on the visualization of the socalled deep time, a concept of time that is more appropriate for
representing events that occurred millions or billions of years ago
and which is very useful in sciences, such as Geology. In this
respect, there are very few existing tools which provide a good
visual representation of this kind of time scale.

Another tool that offers web-based visualization of various
types of geospatial data sources is CartoDB.50 CartoDB is a
commercial tool that offers connectors and APIs for various types
of geospatial data (e.g., files, social networks, databases), but, to
the best of our knowledge, SPARQL endpoints containing (linked)
geospatial data are not supported.

6.2. Geographic information systems

The GIS area offers a great number of versatile systems, tools,
and applications that one can use to visualize and browse many
geospatial datasets at a time that are available in standard formats,
such as Esri shapefile, KML, GML, GeoJSON, GeoRSS, GPX, GeoTIFF,
etc. Examples of such tools are the open source application
QGIS42 (Quantum GIS), the commercial platform ArcGIS,43 the open
source applications uDIG,44 (User-friendly Desktop Internet GIS)
and TimeMap [34] From these systems, QGIS extended with the
TimeManager45 plugin, ArcGIS, and TimeMap have the ability to
visualize geospatial data with a temporal dimension that is often
termed as time-stamped spatial data.

The well-known tool Google Earth46 offers most of the
functionalities developed in Sextant and also much more. Google
Earth has been widely adopted by both the GIS community and
common users due to its simplicity and versatility in tasks such
as Earth, Moon, and sky exploration, as well as the visualization
of many geospatial data sources at a time that are available in the
KML format. With respect to time, Google Earth is able to visualize

36 http://linkedgeodata.org/LGD%20Browser.
37 http://oeg-dev.dia.fi.upm.es/map4rdf/.
38 http://vocab.deri.ie/scovo.
39 https://github.com/GeoKnow/Facete.
40 http://lodvisualization.appspot.com/.
41 http://geopeuple.ign.fr/.
42 http://www.qgis.org/.
43 http://www.esri.com/software/arcgis/.
44 http://udig.refractions.net/.
45 http://plugins.qgis.org/plugins/timemanager/.
46 http://www.google.com/earth/.

6.3. Comparison with Sextant

The features that distinguish Sextant from other Semantic Web
or GIS tools are as follows. First, it enables map creation and
sharing, as well as the exploration of linked open data by evaluating
stSPARQL or GeoSPARQL queries on different SPARQL endpoints. In
this way rich thematic maps can be created by layering information
coming from the evaluation of SPARQL queries. We stress that
this is not possible given the current GIS technology, because this
technology cannot deal with emerging open sources of information
such as the LOD cloud.

Second, it visualizes the temporal dimension of data having a
spatial extent simultaneously on a map and a timeline. We stress
that the visualization of the temporal dimension of geospatial
data has not been captured by the semantic web tools reviewed
above. This is mainly due to the lack of an implementation
of a data model and a query language with temporal features
covering the various semantics associated with the representation
of time (e.g., valid and user-defined), and the lack of a standard
temporal extension of RDF that practitioners could utilize when
publishing RDF data. According to a recent study [40], the temporal
information contained in linked data mostly captures user-defined
time, while the valid time dimension is rarely captured. With
the development of the temporal dimension of stRDF and its
implementation in Strabon [7], linked spatiotemporal data is
handled easily by Sextant. Comparing Sextant with the GIS tools

47 https://developers.google.com/chart/.
48 https://developers.google.com/maps/documentation/javascript/visualization.
49 http://www.maptime.co.uk/.
50 https://cartodb.com/.

C. Nikolaou et al. / Web Semantics: Science, Services and Agents on the World Wide Web 35 (2015) 3552

covered above with respect to visualizing the temporal dimension,
Sextant outweighs them since the employed query language,
stSPARQL, leads to more expressive querying capabilities. The
need for the development and adoption of standardized temporal
data models in order to represent time is being discussed in the
W3C RDF stream processing group.51 The approach followed by
Strabon [7] and Sextant for the modeling and querying of temporal
data is one of the options considered in the relevant discussions of
this group.

Finally, Sextant is based on OGC standards for visualizing
the spatial and temporal dimension of linked data, thus it is
interoperable with other well-known tools such as Google Earth.52
With respect to functionality, the GIS tools overweight Sextant,
since apart from visualizing geospatial data, they offer functionality for editing and further processing such data using standard and
specialized algorithms useful to the GIS community (e.g., geometry
simplification, Delaunay triangulation, union of geometric objects).
In addition, many GIS tools have a modular architecture enabling
the user community to develop plug-ins for extending the offered
functionality.

Architecturally speaking, Sextant is a web-based tool the client
part of which runs on browsers. In contrast, most of the GIS
tools reviewed above are standalone desktop applications. That
gives them the opportunity to manage and visualize large datasets
more easily, since memory management is fully controlled by the
application itself. Adding to that the fact that most of the tools are
being developed at least for a decade and that they are being used
by a wide user community spread worldwide, it makes them more
mature, stable, versatile, and scalable than Sextant.

7. Future directions

instead of typing them.

There are many directions to pursue in the future to make
Sextant more robust, versatile, and appealing to the end-user.
These directions are discussed in the following.
Query builder integration. Sextant has already received very positive
feedback from our user partners in the TELEIOS project, DLR
and NOA. However, both of them have spotted the weakness
of Sextant in the lack of a tool to aid formulation of SPARQL
queries,
In the context of TELEIOS,
partner Fraunhofer has been developing a visual query builder for
composing stSPARQL queries using an intuitive interface that does
not require knowledge of any semantic web technology [41,42]. In
the future, we plan to integrate this query builder (or any similar
one that might become available) into Sextant.
Requirements analysis and evaluation. The previous need for
integrating into Sextant a query builder pinpoints an important
issue that has been overlooked in Sextant: the formal recording of
requirements based on user stories and the evaluation of Sextant
based on the gathered requirements. We plan to work towards this
direction together with our user partners in the TELEIOS project,
DLR and NOA.
Development of a map registry. Sextant already employs a map
registry for storing the RDF descriptions of map products that are
modeled according to the Map ontology described in Section 2.
We plan to extend the map ontology to include also metadata
about a map produced in Sextant in order to facilitate map
sharing and offer search capabilities on the content of a map,
such as the creation date or the date in reference to the used
data sources (e.g., hotspot products for the fire season of 2012),
the spatial extent, a theme categorization (e.g., fires, floods, oil

51 https://www.w3.org/community/rsp/.
52 http://www.google.com/earth/.

spills, environmental disasters), the author or the organization that
created the map, the license under which it might be distributed,
etc. This feature is very important and the GIS industry has
only just started investing on the development of such products.
An example is the Esri Geoportal Server,53 a free and open
source product that enables discovery and use of geospatial
resources including datasets, raster files, and Web services. The
Esri Geoportal Server helps organizations manage and publish
metadata for their geospatial resources to let users discover and
connect to those resources. What is interesting though is that Esri
has also started using semantic web technologies by providing an
interface for discovering resources such as the above using the
GeoSPARQL query language.54
Post-processing operations on layers. Offering spatial and temporal
operations on layers or maps, such as filtering and transformation
of spatial objects, and spatial/temporal joins on two or more
layers would increase the browsing and exploration capabilities
of Sextant making it a very useful tool for interlinking linked
spatiotemporal datasets.
More tools for visual analytics. The current version of Sextant
offers to users a way to visualize spatiotemporal information on a
map by overlaying a number of data sources present in the form
of linked open data and file formats for representing geospatial
information. Therefore, Sextant may be categorized as a tool
offering information visualization. Using the coloring functionality
of Sextant, a user may color the layers of a map appropriately
to convey a certain interpretation of their content.55 Similarly,
using the time slider, a user might draw certain conclusions with
respect to the evolution of the underlying information.56 However,
information visualization as offered by Sextant is only the first
step towards supporting more general methods for enabling the
interaction of a user with the data with the aim of driving a user in
analyzing the underlying information, appreciating it, and coming
to conclusions.

Towards this direction a desirable extension of Sextant would
be the ability of producing statistical maps, which is very important
in the area of geostatistics. Production of statistical maps is
a key feature for interpreting the underlying elementary data
in a qualitative manner. Statistical maps are heavily used by
agencies, such as Eurostat,57 the leading provider of high quality
statistics in Europe, and the United States Census Bureau,58 the
leading provider of quality data about the nations people and
economy. Pursuing this direction in Sextant is also aligned with
the recent emphasis put on the development of RDF vocabularies
for publishing and querying multi-dimensional data on the web.
The most important of these efforts is the RDF Data Cube
Vocabulary [43], which is a W3C recommendation as of January
16, 2014.

Map or cartographic generalization [44] is another very desirable
and helpful feature for visual analytics, which is essentially a
process of abstraction and reduction of the complexity of a map.
Map generalization is the process of selecting and simplifying a
features representation in a way that is appropriate to the scale
and the purpose of a map. For example, having a view of the world,
it would be undesirable to display villages, that would be otherwise
useful to display (e.g., when one zooms into a very specific area).

53 http://www.esri.com/software/arcgis/geoportal.
54 http://stko-exp.geog.ucsb.edu/linkedarcgis/.
55 See for example the KML translator component presented in Section 2.2 and the
application scenaria described in Sections 5.1 and 5.3.
56 See for example the application scenario described in Section 5.3.
57 http://ec.europa.eu/eurostat/.
58 http://www.census.gov/.

Table A.1
Prefixnamespace associations used throughout the article.

clc
dby
ex
geo
geof
mapid
maponto
rdf
rdfs
strdf
wgs84_pos
xsd
sextant
ssn
swefs

http://geo.linkedopendata.gr/corine/ontology#
http://dbpedia.org/class/yago/
http://www.example.org/ontology#
http://www.opengis.net/ont/geosparql#
http://www.opengis.net/def/function/geosparql/
http://geo.linkedopendata.gr/map/id/
http://geo.linkedopendata.gr/map/ontology/
http://www.w3.org/1999/02/22-rdf-syntax-ns#
http://www.w3.org/2000/01/rdf-schema#
http://strdf.di.uoa.gr/ontology#
http://www.w3.org/2003/01/geo/wgs84_pos#
http://www.w3.org/2001/XMLSchema#
http://sextant.di.uoa.gr/ontology#
http://purl.oclc.org/NET/ssnx/ssn#
http://swefs.di.uoa.gr/simulation/ontology#

As another example, a map for bicyclists will emphasize a different
selection of the roads as opposed to a map targeted at drivers of
trucks or lorries. In this case, it is also useful to support clustering
techniques aiming at computing groups of features of the same
type and displaying an aggregated view of them while losing with
respect to location precision.

Last, a feature that should not be missing by any tool offering
visual analytics is the ability to construct a legend to accompany
a map. Legend information is regarded as an integral part of any
map product for describing its content. In principle, a legend is used
to describe the types of features included in a map by associating
a certain meaning to the colors and/or symbols used to represent
them. Similar to the purposes of a legend, it is equally important to
offer the ability to the users to include other informative content.
That could be for example a title, a text description in order to
provide the user with a first, quick and easy interpretation of
the map, a listing of the data sources used for constructing the
map, a location diagram used to give the spatial context of the
area displayed on a map,59 usually by zooming out of it and
showing a more indicative and recognizable geographical area,
license information and other acknowledgments, and any other
piece of information, usually fitting the term metadata, that the
producer of a map would like to communicate to its consumers.
Support of more file formats. Currently, Sextant is able to work with
linked spatiotemporal data, KML, and GeoTIFF files. Other vector
formats, such as Esri shapefiles and GeoJSON, and raster formats,
such as JPEG, JFIF, and FITS, can be supported as well to increase
the level of interoperability of Sextant with other GIS tools.
Federated query processing. It is also very important for a tool
visualizing linked spatiotemporal data to offer the ability to
combine spatiotemporal information present in different SPARQL
endpoints into a single layer of a map. This requirement calls for
the development of federated query processing systems for query
languages such as GeoSPARQL and stSPARQL. The availability of
such a system would turn Sextant into an even more powerful tool
for leveraging the linked spatiotemporal data cloud.

8. Conclusions

In this article we presented Sextant, a web-based tool that offers
functionalities which are of fundamental importance to leveraging
time-evolving linked geospatial data. The functionalities of Sextant
include the exploration of time-evolving linked geospatial data, the
creation, sharing, and collaborative editing of thematic maps, and

59 This is a very desirable feature especially for non-interactive maps. A product
map that have such a feature is depicted in Fig. 9.

finally, the export of maps in OGC standard formats for achieving
interoperability with other GIS applications.

We presented some real application scenaria from the Earth
Observation and Environment domains to showcase how our tool
Sextant can prove useful to a domain expert by demonstrating
its browsing and visualization capabilities using linked geospatial
data and other geospatial data sources publicly available on the
web.

Appendix. Table of namespaces

This section maintains a list of prefixnamespace associations

that are used in SPARQL queries throughout the article.
