Living Semantic Platform 

Willy Chen 

Softplant GmbH 

Agnes-Pockels-Bogen 1 

80992 Munchen 

Julian Lambertz 

Softplant GmbH 

Agnes-Pockels-Bogen 1 

80992 Munchen 

willy.chen@softplant.de 

julian.lambertz@softplant.de 

ABSTRACT 
The  Living  Semantic  Platform  (LSP)  is  a  web-based  and 
collaborative development environment for lightweight ontologies 
based  on  OWL2  QL.  Moreover,  it  includes  an  integrated  OWL2 
QL reasoner which allows for efficient query answering based on 
SPARQL queries.  

Categories and Subject Descriptors 
I.2.4 
INTELLIGENCE]: 
Representation Formalisms and Methods  semantic networks 

[ARTIFICIAL 

Knowledge 

General Terms 
Management, Documentation, Design 

Keywords 
Collaborative  ontology  development,  OWL2  QL,  query 
answering, SPARQL 

1.  INTRODUCTION 
Semantic  technologies,  especially  ontologies,  have  a  broad range 
of  application  areas.  Topics  include  but  are  not  limited  to 
knowledge  discovery,  data  integration,  enterprise  linked  data, 
knowledge  visualization  and  content  management.  Such 
applications  rely  on  ontologies  to  formalize  knowledge  domains 
and  utilize  query  answering  to  satisfy  the  information  needs  of 
domain experts. 

However,  building  such  semantic  applications  nowadays  still 
requires  a  high  level  of  programming  knowledge  to  weave 
together  the  right  frameworks,  libraries  and  reasoner  for  every 
industrial  use  case.  On  top  of  that,  the  actual  ontology  has  to  be 
developed and the actual application has to be implemented. 

Therefore, we have developed a modular and extensible platform 
  the  Living  Semantic  Platform  (LSP)  -  to  foster  the  use  of 
ontologies  as  a  formal  foundation  for  business  applications.  LSP 
not  only  includes  a  fully  functional  ontology  editor  but  also  an 
OWL2 QL reasoner, which works on the same data backend. Any 

Permission to make digital or hard copies of all or part of this work for personal or 
classroom  use  is  granted  without  fee  provided  that  copies  are  not  made  or 
distributed  for  profit  or  commercial  advantage  and  that  copies  bear  this  notice  and 
the full citation on the first page. Copyrights for components of this work owned by 
others  than  the  author(s) must be honored. Abstracting with credit is permitted. To 
copy  otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists,  requires 
prior 
from 
Permissions@acm.org. 
SEMANTiCS '15, September 15 - 17, 2015, Vienna, Austria  
Copyright is held by the owner/author(s). Publication rights licensed to ACM. 
ACM 978-1-4503-3462-4/15/09...$15.00  
DOI: http://dx.doi.org/10.1145/2814864.2814893 

fee.  Request 

permissions 

specific 

permission 

and/or 

4/15/09...$15.00 

changes  to  the  ontology  are  immediately  available  for  query 
answering. By complying to open standards from W3C we ensure 
sustainability of the developed applications. 

Developers can thus focus on the actual business use case and its 
representation  using  ontologies  rather  than  deciding  for  the 
correct versions of frameworks and libraries. While LSP provides 
various  means  to  access  and  analyze  the  formalized  knowledge, 
open  interfaces  allow  for  querying  the  ontologies  within  custom 
software systems.  

2.  SYSTEM ARCHITECTURE 
The  key  idea  behind  LSP  is  to  utilize  the  same  data  backend  for 
query answering as well as ontology management. Ontologies no 
longer  have  to  be  stored  in  the  file  systems  or  specialized  RDF 
storages  but  are  managed  within  broadly  available  relational 
database  management  systems  (RDBMS).  The  QL  profile  of 
OWL2 provides a specific subset of the OWL language features to 
allow  for  efficient  query  answering 
through 
rewriting  queries,  e.g.  in  SPARQL  Protocol  And  RDF  Query 
Language  (SPARQL),  to  SQL  queries  that  can  be  posed  to 
RDBMS.  Technical  details  about  our  implemented  rewriting 
algorithm,  the  actual  database  design  and  its  performance  can  be 
found in [1]. 

implemented 

Based  on  the  data  backend  required  for  rewriting  we  have 
implemented  a  web-based  application  which  enables  a  live 
ontology  editing.  All  changes  modeled  in  the  ontologies  are 
immediately  available  to  the  reasoner.  Various  features  extend 
core  ontology  editing  features  so  use  cases,  such  as  data 
integration, can be easily covered. 

3.  FEATURES 

3.1  Collaborative Ontology Development 

Figure 1. Web-based interface. 


allows  for  team  based  collaborative  ontology  development.  The 
user  edits  all  ontology  elements  directly  within  the  web-based 
interface (Figure 1). 

An integrated search engines provides a full text search within all 
elements of the stored ontologies (Figure 2). 

3.2  Integrated Reasoner 
An integrated OWL2 QL reasoner enables query answering using 
SPARQL (Figure 5). 

Figure 2. Full text search. 

Figure 5. Integrated OWL2 QL reasoner. 

Creating  queries  is  supported  by  a  SPARQL  editor  including 
keyword highlighting and code completion (Figure 6). 

the  quality  management  of  ontologies  a  dedicated 

For 
management and gardening area has been realized (Figure 3).  

Figure 3. Management and gardening. 

An  integrated  role-based  access  control  system  allows  for 
restricting  the  access  of  users  to  different  features  and  modules 
(Figure 4). 

Figure 6. SPARQL editor. 

Recurring  queries  are  parametrized  and  stored  within  the 
platform.  Furthermore,  various  visualizations  of  queries  can  be 
configured and saved (Figure 7). 

Figure 4. User Management. 

Figure 7. Visualizations. 

For  business  use  cases  that  include  the  reuse  of  existing 
information sources such as SQL databases, Excel, XML or PDF 
files  we  have  implemented  a  data  integration  layer  which  allows 
for  mapping  external  data  sources  to  specific  ontology  elements 


synchronized with the actual data source (Figure 8). 

Figure 8. Data integration. 

Figure 11. Import for OWL ontologies. 

Query results can be exported using different file formats (Figure 
12). 

3.3  Modular Extendable Platform 
LSP  is  an  open  platform.  The  managed  ontologies  and  the 
integrated  reasoner  can  be  accessed  via  REST  interfaces  (Figure 
9). 

Figure 9. REST endpoints. 

Developers  can  create  own  extensions  for  LSP  and  deploy  them 
into the platform (Figure 10). 

Figure 12. Export to various formats. 

4.  CONCLUSION 
The Living Semantic Platform is a novel commercial platform for 
building  semantic  business  applications.  It  seamlessly  integrates 
an ontology editor with a reasoner while utilizing IT infrastructure 
components  that  have  a  wide  distribution  in  todays  enterprises. 
Knowledge engineers are able to focus on developing the required 
business  ontologies  with  a  modern  and  web-based  editor. 
Software developers can finally access all ontology data by either 
using  a  generic  SPARQL  REST  endpoint  or  build 
their 
applications  on  queries  prepared  by  knowledge  engineers  and 
stored within the Living Semantic Platform. 

An online demo is accessible at www.living-semantic-platform.de 
 section Demo and Licensing.  
