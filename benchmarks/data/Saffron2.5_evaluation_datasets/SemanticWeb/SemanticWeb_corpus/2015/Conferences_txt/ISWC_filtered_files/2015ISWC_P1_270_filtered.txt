An Algebra of Qualitative Taxonomical

Relations for Ontology Alignments

Armen Inants(B) and J erome Euzenat

Inria, Univ. Grenoble Alpes, Grenoble, France
{Armen.Inants,Jerome.Euzenat}@inria.fr

Abstract. Algebras of relations were shown useful in managing ontology alignments. They make it possible to aggregate alignments disjunctively or conjunctively and to propagate alignments within a network
of ontologies. The previously considered algebra of relations contains
taxonomical relations between classes. However, compositional inference
using this algebra is sound only if we assume that classes which occur in
alignments have nonempty extensions. Moreover, this algebra covers relations only between classes. Here we introduce a new algebra of relations,
which, first, solves the limitation of the previous one, and second, incorporates all qualitative taxonomical relations that occur between individuals and concepts, including the relations is a and is not. We
prove that this algebra is coherent with respect to the simple semantics
of alignments.

Keywords: Relation algebra  Ontology alignment  Network of

ontologies

1 Introduction

The heterogeneity of ontologies on the semantic web requires finding correspondences between them in order to achieve semantic interoperability. The operation
of finding correspondences is called ontology matching and its result is a set of
correspondences called an alignment [6]. Alignments are used for importing data
from one ontology to another or for translating queries.

In previous work [5], we put forward a framework for manipulating alignments
based on algebras of relations. This allows for merging alignments conjunctively
or disjunctively, amalgamate alignments with relations of different granularity
and compose alignments.
The general approach was illustrated in [5] on a particular algebra A5. It is generated by 5 atoms: =, >, <, ,, which stand for equivalent to, more/less general
than, partially overlaps with and disjoint with respectively. The composition
table of A5 is given in Table 1. It was shown that an algebra of relations induces
composition, union, intersection and conversion operations on alignments.

This may be particularly useful as a fast way to reason about alignments
without resorting to full reasoning. For instance, this may be used for generating new alignments from existing ones or for checking the unsatisfiability of a
network of ontologies.
c Springer International Publishing Switzerland 2015
M. Arenas et al. (Eds.): ISWC 2015, Part I, LNCS 9366, pp. 253268, 2015.
DOI: 10.1007/978-3-319-25007-6 15

A. Inants and J. Euzenat

instance,

in Figure 1,

Example 1. For
two correspondences:
O2:Serial writer is subsumed by O1:Successful creatorand O2:Serial writer is equivalent to O3:Popular writer. Subsumption and equivalence are encoded in A5 as
{=, <} and {=} respectively. By composing these relations we infer a correspondence between O1:Successful creator and O3:Popular writer:

there are

Serial writer, Popular writer, {=, <}
?

?

?
Successful creator, Serial writer, {=}  

Successful creator, Popular writer, {=}  {=, <}
?

?

?
Successful creator, Popular writer, (=  =)  (=  <)
Successful creator, Popular writer, {=}  {<}
Successful creator, Popular writer, {=, <}
?

?

?
=
=
=
=

However, the algebra of relations A5 suffers from two problems:
1. A5 covers relations only between classes. This leaves out of scope the relations
owl:sameAs (noted =), owl:differentFrom (noted =), which are defined between
instances, and the instance-class relation rdf:type (). Compositional reasoning
with these relations may be used for debugging link sets as shown by Example 1.
Example 2. In Figure 1, composing {<, =}  {=}  {} is equivalent to {},
i.e., Mystery novelist and Academic are disjoint classes. This leaves aside
further relation composition. Indeed, one would like that {}{}{} actually
yields {=}, i.e., Amanda Cross is different from Carolyn Gold Heilbrun. This
would be very useful for debugging data sets since the actual relation between
these individuals is {=} so the intersection of these relations is empty revealing
unsatisfiability.
However, this requires to compose class relations () and individual-class
relations (). Moreover, this composition yields an individual relation (=).

To make this work within the considered framework, one needs an algebra
incorporating all these relations. This would allow for encoding such RDF triples
as correspondences and use them for the refinement and evolution of alignments.
2. The algebraic calculus that A5 induces on alignments does not allow for distinguishing between unsatisfiability and incoherence of alignments. An alignment

<

<

>

* =

= =

Table 1. Composition table of A5.


>

>
=><
?

?

?
>
<
=><
<

> >
< < =><
>
?

?

?
 


<
<
<

=><

>

>
?

?

?
Successful
O1

creator



Serial
writer

=


Mystery
novelist


O2


Popular
writer

Author

O3





Academic



Amanda Cross

=

Carolyn Gold Heilbrun

Fig. 1. An example of unsatisfiability in a linked data sets that can be detected through
simple composition of relations across ontologies, data, links and correspondences.
?

?

?
C, D, 

is satisfiable if it has a model, and coherent, if it does not force incoherence on
any of its entities. If, by applying algebraic reasoning on alignments, we deduce a
correspondence
, then it means that the alignments are algebraically
inconsistent. However, algebraic inconsistency does not imply unsatisfiability, as
one would expect. This is illustrated in Example 3.
Example 3. Consider an alignment A with two correspondences between the

. Their conjuncsame pair of entities:  =

tion is equal to
C, D, 
C, D, {}  
   =
.
This means that A is algebraically inconsistent. But A has models, thus it is
not unsatisfiable. Indeed, if C is interpreted as the empty set, then, whatever the
interpretation of D, both  and  are satisfied by this interpretation. However,
A is incoherent, since it does not allow the class C to have instances.

:
C, D, {<, =}

C, D, {}  {=, <}

C, D, {<, =}

C, D, {}
?

?

?
C, D, 

=
?

?

?
and  =
?

?

?
=
?

?

?
In this paper, we introduce a new algebra of relations A16, which
solves these limitations of A5. A16 incorporates the relations same as
(owl:sameAs), different from (owl:differentFrom), is a (rdf:type), is not,
equivalent to (owl:equivalentClass), subsumed by (rdfs:subClassOf), disjoint
with (owl:disjointWith), partially overlaps with in compliance with OWL
semantics. The calculus that A16 induces on alignments allows to differenciate
between unsatisfiability and incoherence of alignments.

The paper is structured as follows. In Section 2, we discuss the related
work. Section 3 covers some preliminaries, including networks of ontologies and
algebras of relations. In Section 4, we build the algebra A16 and establish its
soundness with respect to the direct semantics of alignments. In Section 5, we
discuss some changes that A16 brings to the calculus of alignments.

A. Inants and J. Euzenat

2 Related Work

This paper is related to formal frameworks for distributed ontologies on the one
hand, and to the theory of qualitative calculi on the other hand.

Languages for distributed ontologies. There are several languages that allow
for expressing relations across ontologies. Among them are Distributed Description Logics (DDL) [3], -connections [12], Package-based Description Logics (P-
DL) [2], Integrated Distributed Description Logics (IDDL) [19] and Distributed
Ontology Language (DOL) [14].

Mappings between ontologies in DDL assert relations from the perspective
of the target ontology. Mappings between concepts are expressed as bridge rules,
and those between individuals as individual correspondences. The key feature of
DDL reasoning is subsumption propagation from one ontology to another. Subsumption is not transitive in DDL, thus cannot be propagated by composition.
-connections are a framework for modular ontologies. Connection between ontological modules are established with links, which act as inter-ontology properties.
A distinctive feature of -connections is that each ontology module is supposed
to model a portion of the domain that is complementary and non-overlapping
with respect to the other ontology modules. As the domains of ontologies in an
-connection system must be disjoint, it is not possible to have a concept in some
ontology module that has subconcepts or instances in another ontology. Ontology
importing, which is implemented in P-DL, allows for reusing concepts, relations
and individuals defined in one ontology inside another ontology. Alignments in
IDDL constitute a separate layer and can be regarded independently from ontolo-
gies. This makes possible to reason about alignments alone, considering them as
first class citizens. Some comparative analysis of DDL, -connections, P-DL and
IDDL can be found in [10,20].

An algebraic calculus of alignments is not intended as a proof theory for a
particular semantics of alignments. It is a framework, which allows to use custom
algebras of relations for inducing operations on alignments. In this paper, we
limit ourselves with taxonomical relations between classes and instances. We
design the algebra of taxonomical relations to be sound with respect to the
OWL semantics of relations [7]. In principle, algebras of ontology alignment
relations can be designed in compliance with other semantics as well, e.g., with
the integrated semantics used in IDDL.

Qualitative calculi. Algebras of relations have been used in knowledge representation and reasoning, particularly in the spatio-temporal domain, since the
pioneering work of Allen [1]. Allen considered the universe of time intervals, formalized as pairs of real-valued endpoints, and defined 13 binary relations on that
universe. Between any two time intervals one and only one out of the 13 base
relations holds. This important property allows to factorize the infinite Boolean
algebra of binary relations over the universe into a finite Boolean algebra of
(qualitative) relations of interest. Moreover, these 13 base relations and their
arbitrary unions are closed under composition and converse. This allowed Allen
?

?

?
to induce composition and converse on the Boolean algebra of relation symbols,
yielding an algebra called the interval algebra.

Allen put forward an algorithm for reasoning over relations between time
intervals based on constraint propagation. This algorithm decides the satisfiability of a network of temporal constraints, consisting of variables ranging over
the universe of time intervals, and binary constraints on variables expressed by
elements of the interval algebra.

The interval algebra is an instance of Tarskis relation algebra [18]. [13]
defined a class of qualitative binary constraint satisfaction problems (QBCSP),
which is a class of binary constraint satisfaction problems abstracted to relation
algebras. They generalized the constraint propagation algorithm of Allen to an
arbitrary relation algebra. Reasoning with relation algebras is studied in [4,9].
Meanwhile, calculi similar to Allens were developed in both temporal and
spatial domains. Among them are two variants of the Region Connection Cal-
culus: RCC5 and RCC8. In order to study the properties of RCC5, RCC8 and
many other calculi existing by that time within a single framework, Ligozat and
Renz [15] proposed a formal definition of the implicit concept of a qualitative
calculus. In the framework of Ligozat and Renz, a qualitative calculus arises from
a partition scheme over some universe. Such calculi can have a weaker algebraic
structure than relation algebras: they can be non-associative.

The development of this paper was initially based on the framework of
Ligozat and Renz. However, the algebra A16 that we construct does not arise
from a partition scheme, but from a more general construct which we call a
general partition scheme. We extend the result of Ligozat and Renz to general
partition schemes.

3 Preliminaries

3.1 Networks of Ontologies

Here we give a logical account of networks of ontologies in the sense of [6].
Definition 1 (Correspondence). Given two ontologies O and O, with associated entity languages Ent(O) and Ent(O), and a set of alignment relations
R, a correspondence is a triple (e, e, r), such that e  Ent(O), e  Ent(O)
and r  R.
A correspondence (e, e, r) is an assertion that a certain pragmatic relation
denoted by the symbol r holds between the entities e and e.

The entities can be restricted to a particular kind of terms of the ontology
language based on the ontology vocabulary, e.g., named entities. The entity language can also be an extension of the ontology language. For instance, it can
be a query language, such as SPARQL [8], adding operations for manipulating ontology entities that are not available in the ontology language itself, like
concatenating strings or joining relations. The developments of this paper are
independent of the chosen entity language.

A. Inants and J. Euzenat

An important component of a correspondence is the relation that holds
between the entities. We fix a set of relations R that is used for expressing
the relations between the entities. The set R can contain relation symbols like
=, which is used by matching algorithms, or IRIs like http://www.w3.org/2004/
02/skos/extensions#broaderPartitive. Relations from ontology languages, such
as owl:sameAs, owl.differentFrom, owl:equivalentClass, owl:disjointWith, rdfs:subClassOf
or rdf:type, can also be used.

An alignment is defined as a set of correspondences.

Definition 2 (Alignment). Given two ontologies O and O, an alignment is a
set of correspondences between pairs of entities belonging to Ent(O) and Ent(O)
respectively.
Definition 3 (Network of ontologies). A network of ontologies (, ) is
made up of a set  of ontologies and a set  of alignments between these ontolo-
gies. We denote by (O,O) the set of alignments in  between O and O.

A correspondence is interpreted with respect to three features: a pair of
models from each ontology and a semantic structure, denoted as . The class of
models of an ontology O is denoted as M(O).
Definition 4 (Satisfied correspondence). A correspondence  = (e, e, r) is
satisfied by two models m, m of O,O for some semantic structure  if and only
if (m(e), m(e))  r, such that r provides the interpretation of the relation r
in the structure. This is denoted by m, m |= .

Three different kinds of semantic structures are outlined in [21]: simple, contextualized and integrated. Let us fix two ontologies O1 and O2 and their models
m1 and m2 with domains of interpretation D1 and D2 respectively. An integrated
semantic structure consists of functions i from the local domains Di (i = 1, 2)
to a global domain D. A simple semantic structure is a particular case of integrated structure: when D = iDi and i are canonical embeddings of Di into D.
Contextualized semantics is given by a family of binary relations rij (i = 1, 2)
between the local domains Di and Dj.
Below is an example of how relation symbols are interpreted with respect to
each semantics. As an example consider the semantics of the relation symbol 
depending on .

simple() = {(X, Y ) : X  D1, Y  D2 and X  Y }

integrated() = {(X, Y ) : X  D1, Y  D2 and 1(X)  2(Y )}
contextual() = {(X, Y ) : X  D1, Y  D2 and r12(X)  Y }

If  is simple, then  depends only on D1 and D2. In this case the semantics of  corresponds to the interpretation of rdfs:subClassOf if we consider O1
and O2 as one large ontology. Likewise, the simple semantics of relation symbols  (disjointness) and = (equivalence) corresponds to owl:disjointWith and
owl:equivalentClass.
?

?

?
Definition 5 (Models of alignments). Given two ontologies O and O and
an alignment A between these ontologies, a model of this alignment is a triple
(m, m, ) with m  M(O), m  M(O), and  a semantic structure, such
that   A, m, m |=  (denoted by m, m |= A).

An alignment is said to be satisfiable if it has a model. An alignment is said
to be coherent if, for any of its class entities, it has a model that makes this class
non empty.

3.2 Algebraic Calculus of Ontology Alignments

It was shown that algebras of relations are useful for managing ontologies [5].
The adopted algebraic formalism is Tarskian relation algebras.
Definition 6 (Relation algebra). A relation algebra is an algebra

A = (A, +,,, 0, 1, ; , , 1
?

?

?
),

(3.1)
with binary operations + (Boolean sum),  (Boolean product) and ; (composition,
or relative product), unary operations  (complement) and   (converse), and
constants 0, 1, 1  A called zero, unit and identity respectively, such that
1) the reduct (A, +,,, 0, 1) is a Boolean algebra,
2) identity: 1; x = x; 1 = x, for all x  A,
3) Peircean law: (x; y)z = 0  (x ; z)y = 0  x(z; y ) = 0, for all x, y, z  A,
4) associativity: (x; y); z = x; (y; z), for all x, y, z  A.

We will denote by A both the algebra and its carrier set. The class of relation
algebras is denoted as RA. In the sequel, by algebra of relations we will imply
an instance of RA, if not stated otherwise.

Consider an algebra of relations A. The approach put forward in [5] is that we
allow any element of A to be used in a correspondence. In other words, referring
to the previous subsection, we take R = A.

Each alignment may be normalized through norm to contain exactly one
correspondence between any two entities. A induces the following operations on
alignments:

A  A
A  A

= norm(A  A
= {(e, e, r + r

A  = {(e, e, r ) : (e, e, r)  A}

)
) : (e, e, r)  norm(A)  (e, e, r

(3.2)
)} (3.3)
(3.4)
If there exists an alignment between ontology O and ontology O, and another
alignment between O and a third ontology O, we would like to find which
correspondences hold between O and O. The operation that returns this set of
correspondences is called composition.

)  norm(A

A  A

= norm({(e, e, r; s) :  (e, e, r)  A and  (e, e, s)  A})

(3.5)

A. Inants and J. Euzenat

We can regard a network of ontologies as a directed graph, with ontologies
being vertices and alignments being edges. Moreover, one can assume that there
is at most one alignment between any pair of ontologies in the network. A closure
of a network of ontologies can be computed by applying a path-consistency
algorithm, e.g., PC2 [16], which in essence is an iterative application of

 (AOi,Ok

 AOk,Oj ),

(3.6)

AOi,Oj

 AOi,Oj

for every triple (Oi,Oj,Ok) of ontologies in , until a fixed point is reached.

3.3 Algebras of JEPD Binary Relations

In general terms, a connection between an algebra of relations and some domain
of knowledge is given by specifying a universe of objects and a set of base rela-
tions. For example, the universe of Allens interval algebra is the set of time
intervals encoded as pairs of real numbers (x, y), where x > y, whereas base
relations are defined by certain conditions on the endpoints of two intervals.
Here we give an account of algebras that arise from a set of jointly exhaustive
and pairwise disjoint (JEPD) binary relations.
A binary relation over a nonempty set U is a subset of the Cartesian product U  U. The converse (also called inverse) of a binary relation R is a rela-
(y, x)  R}. The relation
tion symmetric to R, defined as R1 = {(x, y) :
IdU = {(x, y)  U  U : x = y} is called the identity over U. Composition of binary relations R and S is defined as R  S = {(x, y)  U  U :
z  U such that (x, z)  R and (z, y)  S}. The field of a binary relation R is
defined as F d(R) = {x  U : y, (x, y)  R or (y, x)  R}.
A set P of binary relations over U is called jointly exhaustive and pairwise dis-
joint, if RP R = U  U and R  R =  for each R = R  P. Such P is called a
partition of U U. We will assume P to be finite. Relations in P are called base rela-
tions. We call an arbitrary union of base relations a P-relation. P-relations form a
subalgebra of the Boolean algebra U U, in which the base relations are atoms. If a
P-relation is a union of two or more base relations, it is called a disjunctive relation.
Each P-relation is identified by the set of constituting base relations, thus there is
a one-to-one correspondence between the set of P-relations and the powerset 2P.
In the sequel a set of base relations {R1, . . . , Rn}  P will denote their union.
Generally speaking, composition of P-relations may not be a P-relation. In
other words,  may not be closed on the set of P-relations. One can approximate
the composition by a so-called weak composition , defined as the least P-relation
which contains the composition. Weak composition is a binary operation on P-
relations ( : 2P  2P  2P).
A partition scheme is a pair (U,P), where U is a nonempty set and P =
(Ri)iI is a partition of U  U, which is closed under converse and contains the
identity over U. Given a partition scheme, both weak composition and converse
become operations on the Boolean algebra 2P. The algebra
P ,,,UU , ,P,,1 , IdU)

(3.7)

AP = (2
is said to be generated by P.
?

?

?
Proposition 1 (Ligozat and Renz [15]). If (U,P) is a partition scheme,
then AP satisfies all axioms of RA, except, possibly, the associativity axiom.
An algebra of relations which satisfies all axioms of RA except possibly the associativity axiom is called a non-associative algebra [17]. The
class of non-associative algebras NA is broader than RA. Assume A =
(A, +,,, 0, 1, ; , , 1)  NA, x  y is used as a shortcut for x + y = y. By
At(A) we denote the set of atoms of the Boolean reduct of A.

Any finite non-associative algebra A is fully specified by its atom structure.
The atom structure of an algebra A consists of the set of atoms At(A), the set
of identity atoms At(1)  At(A), the converse restricted to atoms   : At(A) 
At(A) and the composition restricted to atoms, which is a function CT : At(A)
At(A)  2At(A) defined by z  CT (x, y) iff x; y  z. CT is usually specified by
a composition table. The triples (x, y, z), where x, y and z are atoms and which
satisfy x; y  z are called consistent scenarios. In order to find the consistent
scenarios of AP, one has to find all triples (Ri, Rj, Rk) of base relations, for which
x, y, z, such that (x, y)  Ri, (y, z)  Rj and (x, z)  Rk.

A non-associative algebra is said to be integral

if the composition of any
non-zero elements, i.e., those different from 0, is non-zero. A finite AP is integral
iff the composition of any two base relations is not equal to the empty set.

4 An Algebra of Qualitative Taxonomical Relations

In this section, we define an algebra, which contains the relations equivalent to,
subsumed by, disjoint with, same as, different from, is a and is not.
We call an ontology alignment relation taxonomical, if it is associated with some
set-theoretic relation (predicate) R. For instance, subsumption  is associated
with the set-theoretic inclusion . A taxonomical relation holds between two
ontological entities iff the relation R holds between the interpretations of these
entities. A set-theoretic relation R is said to be qualitative, if, for any pair of
sets (x, y), xRy is characterized by 3 parameters: whether each of the sets x y,
x\y, y\x is empty or not.

All relations listed above are taxonomical and qualitative (if interpreted with
the simple semantics of alignments). The simple semantics of alignments assumes
a common domain of interpretation for all ontologies in a network. Given an arbitrary infinite domain D, the relations same as and different from correspond
to binary relations = and = on D, equivalent to, subsumed by and disjoint
with correspond to binary relations ,  and  on 2D, and finally is a and
is not correspond to  and  on D  2D. Thus, the binary relations =, =, ,
, ,  and  are defined on the set D  2D, which we will call a universe and
denote as U (D). We will refer to the elements of D as individuals, and to the
elements of 2D as sets.

The relations

G = {=,=,,,,,,,,},

(4.1)
where =1, =1 and =1, are not JEPD. What is the minimal partition P of U (D) U (D) that has relations in G as P-relations? Since U (D) U (D)

A. Inants and J. Euzenat

is a Boolean algebra, the question is to find its subalgebra generated by G.
Atoms of the sought-after subalgebra are nonempty intersections of generators
(the elements of G in our case) and their complements. This yields a partition
P 14 with 14 base relations, which are defined below:

=n (, ) iff ,  are nonempty sets and  = 
< (, ) iff ,  are nonempty sets and   
> (, ) iff ,  are nonempty sets and   
 (, ) iff ,  are sets and \,   , \ = 
 (, ) iff ,  are nonempty sets and    = 
EN(, ) iff  = ,  is a nonempty set
N E(, ) iff  is a nonempty set and  = 
=e (, ) iff  =  = 
 (, ) iff  is an individual,  is a set and   
 (, ) iff  is a set,  is an individual and   
 (, ) iff  is an individual,  is a set and   
 (, ) iff  is a set,  is an individual and   
=i (, ) iff ,  are individuals and  = 
=i (, ) iff ,  are individuals and  = 

The relation , for instance, is equal to the P 14-relation {, EN, N E, =e}. P 14
is closed under converse, but the identity relation IdU (D) does not belong to
P 14. It is a disjunctive P 14-relation with three identity atoms: =n, =e and =i.
Therefore, (U (D),P 14) is not a partition scheme. Below we define a broader class
of partitions that includes P 14.
Definition 7 (General partition scheme). Let P = (Ri)iI be a partition of
U  U. (U,P) is called a general partition scheme if P is closed under converse
1 and the identity IdU is a P-relation (possibly disjunctive).
The following proposition ensures that the algebra AP14 (or simply A14) generated by P 14 is a non-associative algebra.
Proposition 2. Let P = (Ri)iI be a partition of U  U, such that it is closed
under converse and the identity IdU is a P-relation (possibly disjunctive). Then
the algebra AP generated by P is a non-associative algebra.
Proof. IdU  Ri = IdU  Ri = Ri = Ri IdU = Ri IdU. The Peircean law follows
from the fact that Ri  Rj  Rk =  iff Ri  Rj  Rk =  [see 15, Lemma2].

The composition table of A14 is given in Table 2. The presence of empty cells

in the composition table means that the algebra A14 is nonintegral.

A14 is not associative. For instance,

=e (1  1) = (=e 1) = {EN, =e,},
?

?

?
i

=

i

=




?

?

?
i

=
?

?

?
i

=

i

=
=

i
?

?

?
i

=

i

=

e
?

?

?
>

=
?

?

?
<
>
n
=


?

?

?
<
>
n
=
?

?

?
<



i

=
=

i






?

?

?
i

=
=

i

i

=
?

?

?
e

=


?

?

?
e

=





.
?

?

?
f
o

e
l
b
a
t

n
o
i
t
i
s
o
p
m
o

.

e
l
b
a

e

=
?

?

?
<
>
n
=
?

?

?
<
>
n
=
?

?

?


?

?

?




?

?

?
>
?

?

?
>
?

?

?
<
?

?

?
>
?

?

?
<
>
n
=
?

?

?
<
?

?

?
<
>
n
=
?

?

?
<
?

?

?
<

>
?

?

?
>
?

?

?
<

<

<

>

>
?

?

?
<
>
n
=

n
=
?

?

?
n
=

n
=

<

>
?

?

?
<

>
?

?

?




















e

=




?

?

?
i

=

i

=
?

?

?
=n =n

>

>

<

< =n><
>
>
?

?

?


in in

>
>

in
in

<

<

<

=n><

<
<

in
?

?

?
<
>
?

?

?
>
>

=n><

<
in
in

=n><

in
in

ni NE

ni NE

ni NE
ni

ni NE
ni ni NE
ni ni NE
=i=i
=i

=i =i=i
?

?

?
=e

A. Inants and J. Euzenat

Table 3. Composition tables of A16.

EN EN

 =e
=e =e

NE NE =n>< ni
=i=i
IE IE

in
?

?

?
=i


=i

=i
=i =i=i
in
 ni =n><
<
ni ni

=i =i
=i

ni

whereas

in
in
in
>

=n>< NE
=e

(=e 1)  1 = {EN, =e,}  1 = {=n, >, <, ,, =e EN, N E,,}.

How to refine the partition P 14 so that it generates an associative algebra, i.e., a
relation algebra? The following proposition defines a condition, which a soughtfor refined partition scheme must satisfy.
Proposition 3. Let (U,P) be a general partition scheme. If the algebra AP is
associative, then for any base relation R  P there exist identity atoms Idi, Idj 
P such that R  F d(Idi)  F d(Idj).
Proof. From Theorem 3.5 [17] it follows that if A  RA, then x; x  1, x ; x 1 
At(A) for all x  At(A). Applied to AP we obtain that (R  P) (Idi, Idj  P)
(RR1)IdU = Idi and (R1R)IdU = Idj. ((x, y)  R) (x, x)  (RR1)
IdU and (y, y)  (R1R)IdU, hence x  F d(Idi) and y  F d(Idj). Therefore,
(x, y)  F d(Idi)  F d(Idj), from which follows that R  F d(Idi)  F d(Idj).
The fields of the identity atoms =n, =e and =i are:
F d(=e) = {},

F d(=n) = 2D\{},

F d(=i) = D.
?

?

?
Proposition 3 contains a necessary condition for a general partition scheme
to generate a relation algebra. The fact that the algebra generated by P 14 is
not associative implies that P 14 violates this condition. More concretely, this
condition fails on the base relations  and . Indeed,  is contained in D2D, but
it is contained in neither D  (2D\{}) nor D  {}. The necessary refinement
of P 14 is the following:  splits into in and IE, likewise  splits into ni and
EI. We denote the refined partition as P 16. The refined base relations are:

in (, ) iff  is an individual,  is a nonempty set and   
IE(, ) iff  is an individual,  = 
ni (, ) iff  is a nonempty set,  is an individual and   
EI(, ) iff  is an individual,  = 

Weak composition of the algebra A16, which is generated by P 16, is specified
in Table 3. It is given by three composition tables. If the composition of two
relations is not given by either table, then it is equal to zero.
Proposition 4. A16 is a relation algebra.
Proof. Associativity can be checked manually, whereas satisfiability of
remaining axioms of RA follows from Proposition 2.

the

5 The Calculus of Alignments Revisited

The calculus of alignments defined in [5] assumes that all ontology alignment relations are elements of an algebra of relations, and vice versa. However, this scheme
does not work with A16. In A16, not all relations are meaningful enough to be used
in alignments. Here we consider the set of base relations independently from the
algebra A16.

Let R be the set of base ontology alignment relations (relation symbols):

R = {, , , ,,,,,, =,=}.

(5.1)
R is so to speak an interface for the algebra A16. Ontology alignment relations
are then refined as disjunctions of symbols in R, denoted as R. The relations
   and    are abbreviated as  and  respectively.

We distinguish between two kinds of atoms in A16: coherent and incoherent.

Atcoh(A16) = {=n, <, >, ,,,in,,ni, =i,=i}
Atincoh(A16) = {=e, EN, N E, EI, IE}

(5.2)
(5.3)

Coherent atoms correspond to base ontology alignment relations. A relation
r  A16 is said coherent if all its atoms are coherent. Coherent(r) denotes the
set of coherent atoms in r, and Coherent(A), the set of coherent relations in A.
We further define a function  from R to A16 (given in Table 4). This function
is naturally extended on R, so that (r s) = (r) (s). Coherent relations of

A. Inants and J. Euzenat


Table 4. The function  from ontology alignment relations R

to the algebra A16.

Base OA relation r Synonyms


?

?

?



?

?

?
=
=

(r)
=n, =e
owl:equivalentClass
<, EN
less general than
>, N E
more general than
partially overlaps with 
, =e, EN, N E
owl:disjointWith

is a, rdf:type
in, IE
is not

ni, EI
=i
=i

owl:sameAs
owl:differentFrom

A16 are in a one-to-one correspondence with ontology alignment relations. This
is given by a function :

 : Coherent(A16)  R.

(5.4)

The operations on alignments with relations from A16 are defined in the
same way as in Section 3.2. The difference is that we add a correspondence
be a correspondence, in which r  A16.
interpretation level. Let  =

e, e, r
?

?

?
 If r = , then  is inconsistent.
 If r contains only incoherent atoms (Coherent(r) = ), then  is incoherent.
 In all other cases r is interpreted as (Coherent(r))  R.
For instance, assume that we want to compose the correspondences  =
. In A5 the relations  and  are considered as

e, e,  

shortcuts for the elements {} and {<, =} respectively. Thus,

e, e,  

and  =
?

?

?
   =
=
?

?

?
e, e, {}  
e, e, {}  {<, =}

e, e, {<, =}

=
?

?

?
e, e, {<, ,}

.

To compose the correspondences with A16, we first get the elements which correspond to  and  (using the function ) and then compose them:
e, e, {=n, <, =e, EN}
?

?

?
e, e, {, =e, EN, N E}  
e, e, {, =e, EN, N E}  {=n, <, =e, EN}
e, e, {=, >, <, ,, =e, EN, N E}

.
?

?

?
=

=

Finally,    =
=
?

?

?
e, e, (Coherent({=n, >, <, ,, =e, EN, N E}))
e, e,          

.

This means that we have not deduced anything useful between e and e. Indeed,
if e is interpreted as an empty set, then for any interpretation of e and e the
?

?

?
correspondences  and  will hold. But if we add one more correspondence,
which guarantees that e is not empty, e.g.,
, then,
by computing the algebraic closure of these three correspondences, we would
deduce

e, e,      

e, e,  
?

?

?
e, e,  
?

?

?
or
?

?

?
.

6 Discussion and Future Work

The algebra that we introduced in this paper, A16, covers all qualitative relations
between ontology entities from the taxonomy perspective. It is better than A5,
which we considered in previous work, in two ways:

 A16 combines class-level and instance-level relations within a single algebra,
 the calculus that it induces on alignments allows to tell between unsatisfia-

bility and incoherence of alignments.

Here are some issues that should be worth of consideration.

Non-taxonomical relations. Algebras of relations for ontology alignment are not
limited to taxonomical relations. For example, one may build an algebra of relations from biomedical ontologies like SNOMED CT or NDF-RT, using relations
like snomed:hasActiveIngredient or ndfrt:mayTreat. Such an algebra can have, for
example, a composition rule hasActiveIngredient  mayTreat = mayTreat.

Algebraic formalism. The algebra considered is this paper satisfies the axioms of
RA. But weaker structures can be used as algebras of ontology alignment rela-
tions, e.g., non-associative algebras [17], or Boolean algebras with operators [11].

Non-simple semantics of alignments. Here we adopted the simple semantics
of alignments. However, algebraic calculi can potentially be adopted to other
semantics as well, like the integrated semantics, which is more tolerant to het-
erogeneity.

Acknowledgments. This research has been partially supported by the join NSFCANR Lindicle project (12-IS01-0002) in cooperation with Tsinghua university.
