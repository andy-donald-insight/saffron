Web Semantics: Science, Services and Agents on the World Wide Web 8 (2010) 2636

Contents lists available at ScienceDirect

Web Semantics: Science, Services and Agents

on the World Wide Web

j o u r n a l h o m e p a g e : w w w . e l s e v i e r . c o m / l o c a t e / w e b s e m

Modeling and evaluation of trust with an extension in semantic web
Saeedeh Shekarpour, S.D. Katebi 1

Department of Computer Science and Engineering, School of Engineering, Shiraz University, Shiraz, Iran

a r t i c l e

i n f o

a b s t r a c t

Article history:
Received 13 May 2008
Received in revised form
23 November 2009
Accepted 24 November 2009
Available online 3 December 2009

Keywords:
Semantic web
Social network
Trust
Propagation
Aggregation

1. Introduction

The aim of this paper is two folds. Firstly, some of the well known methods of trust modeling and trust
evaluation that relates mainly to the semantic web structure are reviewed and analyzed. A categorization for calculation of trust and an analytical view of possible models of trust rating through a chain of
acquaintances are presented. Based on experimental results the well known methods are compared and
contrasted. Secondly a new method for evaluating trust is also proposed. This new model has the advantages of simplicity in calculation and enhanced accuracy. The method is associated with two algorithms,
an algorithm for propagation and another for aggregation. The propagation algorithm utilizes statistical
techniques and the aggregation algorithm is based on a weighting mechanism. The technique is named
Max-weight method and is also implemented and the results are compared based on a designed accuracy
metric. The proposed method may be employed as a subsystem for trust management in semantic web
and trust evaluation in human interaction in a social networks as well as machines (artificial agents).
Experimental results illustrate the efficiency and effectiveness of the proposed method.

 2009 Elsevier B.V. All rights reserved.

A social network is a set of people, organizations or other social
entities connected by a set of social relationships, such as friend-
ship, co-working or information exchange. The Web is an example
of a social network. Social networks are formed among Web pages
by hyperlinking each other. The web can be considered as a graph
where vertices are Web pages and hyperlinks are edges. While Web
pages may be similar in terms of textual or multimedia content, a
hyperlink is usually an explicit indicator that one Web page author
believes that another page is related or relevant [1]. There are many
ways in which social networks can be automatically derived on the
web. Users connected through transactions in online auctions and
electronic markets, users who are posted within the same thread on
a news group or message board, or even members of groups listed
in an HTML document can be turned into a social network. Recently,
the numbers of websites that contain web based networks among
friends are rapidly growing. For example Orkut,2 HI5,3 FriendSter4
are such friendship websites through which a person can select
other people as friends. In Orkut one can give three ratings to a
friend; ratings such as trust/cool/sexy. By the rise of these virtual

 Corresponding author. Tel.: +91 25398106; fax: +711 647 4605.
E-mail addresses: sa.shekarpour@gmail.com (S. Shekarpour),

katebi@shirazu.ac.ir (S.D. Katebi).

1 Tel.: +917 312 2254.
2 http://www.orkut.com/.
3 http://www.hi5.com/.
4 http://www.friendster.com/.

1570-8268/$  see front matter  2009 Elsevier B.V. All rights reserved.
doi:10.1016/j.websem.2009.11.003

communities, an increasing number of interactions occur between
many first time users. These new space of human interactions have
challenged the rationality of how human interactions can occur [2].
On the other hand in the new version of the web such as the
semantic web, several different types of relations between entities (humans and agents) can be derived. By deriving each of these
relations a special network may be formed [2].

The semantic web was designed as an information space, with
the goal of being useful not only for humanhuman communica-
tion, but also for communication in which machines would also be
able to participate and help [3]. In fact, the semantic web is a mesh
of information linked in such a way as to enable easy machine processing on a global scale. One can think of it as being an efficient
way of representing data on the World Wide Web or as a globally
linked database [4]. Semantic web may also be viewed as a network
of relationship between entities. These networks may be seen as a
graph in which concepts are represented as nodes and predicates
as edges. For example Foaf project [57] is a semantic web project
that defines know relationship (predicate) where every user creates statements about who they know. In this network nodes are
people and every edge between nodes show who knows whom as
a friendship network.

The top component of the stack structure of semantic web is
dedicated to trust management. Since trust mechanism as authentication is supported by digital signature, the last layer of semantic
web is dedicated to trust in the context of credibility and relia-
bility. It is important to distinguish trustworthy information from
untrustworthy information on the Web [8,9]. A user has to select
what he/she recognizes as reliable information based on her/his

Fig. 1. A sample of a trust metadata assertion.

own trust requirements. With the introduction of web services the
problem is further exacerbated as users have to come up with a
new set of requirements to trust web services; web services themselves require a more automated way of trusting each other. This
is due to availability of alternative web services and information
sources. Another reason for the need for trust management is the
contradictory information that autonomous agents encounter in
the semantic web.

Golbeck has extended the FOAF schema to contain trust assertions with values ranging from 1 to 9, where 1 denotes complete
distrust and 9 absolute trust towards the individual for which the
assertion has been issued [8]. When users create statements in the
semantic web, they can annotate trust information about statements by using statements, consequently trust networks will be
created for a special context from trust statements. A schema is
introduced in [10] which extends RDF schema which allow users
to indicate trust metadata. A sample of this metadata is shown in
Fig. 1.

Trust has various meanings and is viewed differently is different areas for example in computer networks it is interpreted as
security and access control, in distributed systems means reliability and in game theory and policies is viewed as correct decision
making under uncertainty. A trust policy is used in [11] which consist of a set of rules that the trustor uses to test the trustfulness of a
fact. Different agents may use different trust policies. A trustworthy
decision is the act of testing an asserted fact for satisfaction of a trust
policy or a trust criterion. In fact, in some cases, there is a repository
in the trust layer that makes the decision of trusting. An example of
this system is the mechanism used for trusting emails [9,11]. Trusting emails is a policy in which a network of friends exchange lists of
emails, in order to avoid spam without compromising each others
privacy.

In this paper trust is viewed as a measurable belief that utilizes
personal experiences: experiences of others or possibly combined
experiences, to make trustworthy decisions about an entity [12].
This view is adapted based on the trust definition given in [13] and
is stated as:

Trust of a party A to a party B for a service X is the measurable
belief of A in that B behaves dependably for a specified period
within a specified context (in relation to service X).

In this work a trustworthy decision is assumed to be a transitive
process such that there is a web of trust network in which a link
between two entities means that a trustworthy decision has been

Fig. 2. A scenario for trusting between entities.

made and the quantitative value of that trust has been evaluated.
The lack of any link between a pair of entities in the network means
a trustworthy decision has not been made previously.

Web of trust network may be derived from social networks
in which case trust ratings between nodes are assigned by users
directly. It can also be built from annotated trust statements on
the semantic web in which case an artificial network may be
derived. There are two main differences between these two net-
works. Firstly, trust ratings in the social networks do not depend
on the context. Secondly, in the semantic web, if the statements
are asserted in a special context (by deriving context based trust
assertion) a trust network oriented to context will be built. In both
cases the aim is to evaluate a trust rating between two nodes that
have never interacted.

Although an agent might be a stranger to the evaluating agent,
it still may attempt to estimate the strangers reputation based on
information accumulated from others in the environment.

The following scenario is an example which can be adapted to
illustrate some of the concepts introduced in this paper. In this
scenario an agent aggregates metadata from various sources and
decides which metadata can be trusted.

I need information in the field of astronomy about what color
the star alpha is. I found that in website w1.org a statement has
been published stating that the star alpha is blue and in the w2.org
another statement that the star alpha is red. I do not have any
prior knowledge about these websites but this is an example of a
conflicting environment on the web that an entity may encounter
while making a decision. A subsystem such as an agent is required
for carrying out two functions. The first function is constructing a
sub graph that considers paths connecting me to these weblogs as
shown in Fig. 2. On the semantic web these paths can be extracted
through the asserted metadata that have been published in the context of astronomy between me and the website w1.org and w2.org.
For instance I know Jack and Janet in the context of astronomy
(meaning I have interacted before and assigned a trust rating to
them in the context of astronomy) and they asserted statements
about trust ratings for w1.org and w2.org in the context of astron-
omy. The graph is comprised of these paths showing a trust rating
on each edge between two nodes.

The second function required from the agent is the evaluation
of trust rating from source (me) to sinks (weblogs) based on the
constructed graph. At this stage the evaluating agent must apply
an algorithm for propagation and aggregation and finally the evaluated trust ratings can be recommended to the source entity (me)
for making a decision.

A major contribution of this paper is the computation of trust.
Due to the fact that the known trust relationships on the web are
only a small fraction of the potential pairing, and on the other hand,
the number of pages, services and users on the web is so large that
it is necessary to estimate how much trust there is between enti-
ties. The paths connecting entities in the network (P2P or social
networks) contain information that can be used to infer how much

S. Shekarpour, S.D. Katebi / Web Semantics: Science, Services and Agents on the World Wide Web 8 (2010) 2636

the entities may trust one another. On the semantic web the paths
among entities can be extracted through annotation related to trust
statements in a special context.

Based on analytical derivation and nodes communication a categorization of different methods is suggested in Section 2. Many
algorithms for computing trust in P2P and social networks have
been proposed [2023] and only a brief review of some of the well
known models are given in Section 3. Some mathematical backgrounds are presented in Section 4. In Section 5 a new technique
for trust evaluation between two nodes that have not interacted
before is proposed. This technique has the advantages of increased
accuracy for trust estimation and consequently better decision
making when confronting with conflicting situations. A comparative study is carried out using experimental results obtained from
the previously reported techniques and the results obtained from
the proposed approach are presented in Section 6. The results of
comparison show the effectiveness and superiority of the method
of this paper. A long and comprehensive discussion is presented in
Section 7.

2. Categorization of models of trust

There are a variety of trust models and trust policies in the
semantic web. Different models and policies can be categorized
based on different analytical views and communication of nodes.
If a node requires trust rating of an unknown node, how does it
communicate with society? Should it trust all? Or should it select
nodes that are trusted to get information? (In this case how does
it select?). Below, some categorization of trust models and trust
mechanisms are suggested. In general there are two categories of
trust models. The first model is associated with the centralized configuration and has a manager or a central node to manage trust.
The second model is associated with the distributed configuration
and attempts to ask a node which recognizes the trustee directly
and have beliefs in it. Distributed models are in turn categorized as
global and local (personal) models. Most methods of personal view
of distributed models are based on analytical derivation of trust
rating. In a web of trust network the term node is used for any
kind of entity such as agents, concepts, and persons.

Fig. 4. Distributed model: getting trust information about trustee from network.

The problems associated with this model are, firstly, how one
can trust the manager node? And secondly, how manager nodes can
trust each other and communicate? In reality, one can never have
a comprehensive system that knows and trusts all. If one wants
a public manager (in a large size) there must be an infrastructure
similar to the one in PKI [14].

2.2. Distributed model

In this model there is no centralized system to govern the rep-
utation. Nodes are responsible for obtaining mutual trust based on
their direct interactions. No global or public reputation exists. If
node A wants to know node Bs reputation, it has to ask other nodes
to evaluate B. Then the ratings that others give B are combined to
compute Bs reputation as shown in Fig. 4.

Distributed models can be divided into global and local. Global
models compute a universal trust value for each node in the net-
work; regardless of who asks for a trust recommendation, the same
answer is always given. However, local trust models calculate trust
in response to a node requesting the trust recommendation and
essentially the results are personalized for each node [2].

2.1. Centralized model

2.3. Global model

A centralized node acts as a system manager. This manager
acquires knowledge such as the ratings of reputation and the precedents of nodes. The manger may also be able to judge nodes and
carry out system policies in the form of some metrics or a set of
rules. When a node as a source needs to communicate with another
node as a sink, it asks the manager node if it can trust the sink
node. Therefore, there is no explicit trust model between nodes.
An agent (a node) only communicates with the centralized node to
collect information about other nodes reputations. This configuration is shown in Fig. 3. The manager is responsible for collecting
information from both sides involved in interactions.

Fig. 3. Each node asks the manager to receive trust rating.

This model is based on the degree of popularity of a node in
the society. Neighbors of the trustees know them due to their relationships in the past. A node may have had interactions with its
neighbors in the past and neighbors have profiles of their prece-
dents. One may decide to trust or distrust depending on opinions of
neighbors. Voting (aggregating the opinions of neighbors or users)
is an example of evaluating trust ratings. But this approach suffers from the fact that information and disinformation are mixed
on the web at large. It is easy for a user or coalition of users to
gather many persons to express a large number of biased opinions.
www.eBay.com and www.Amazon.com auctions have a special
trust mechanism. Both of these are implemented as a centralized
rating system that manages reputation of each user. But on the
other hand the calculation of reputation is based on a global method
which depends on the users rating. Because of the problems associated with the previous strategies, one may request opinions of
only those nodes that are authority nodes. Clearly, the information
obtained from these nodes is more trustworthy. The question here
is: what defines an authority node? Authority nodes are defined
depending on the configuration and performance of the system.
One criterion may be that nodes which have high social network
metrics can be regarded as authority nodes (e.g. nodes that have
higher number of edges). Hypertext Induced Topic Selection (HITS

algorithm) is a link analysis algorithm that rates Web pages for
their authority properties and hub values to recognize authority
web pages [15]. Authority value estimates are the value of the content of the page. Hub value estimates are the value of links to other
pages. These values can be used to rank Web search results. Authority and hub values are defined in terms of one another in a mutual
recursion. An authority value is computed as the sum of the scaled
hub values which point to that page. A hub value is the sum of the
scaled authority values of the pages it points to. Each node u in an
expanded graph with two associated scores h and a, initialized to
1. Then HITS iteratively assigns:

(1)

uv

and h

where
tions they converge [1,15].

uhu and

vu
vav are normalized to 1, and after some itera-

We can use hub and authority values for trust evaluations. A
node is a good hub if it trusts trustworthy nodes and it will be
considered a good authority if trustworthy nodes trust it. However,
these scores are initialized to the rating of trust.

PageRank [16] in Google is like HITS for ranking web pages
search results and is a link analysis algorithm that assigns a numerical weight to each element of a hyperlinked set of documents, with
the purpose of measuring its relative importance within the set.

The EigenTrust algorithm [17] is used in peer-to-peer systems
and calculates trust with a variation on the PageRank algorithm
[16]. In the EigenTrust formulation, trust is a measure of perfor-
mance.

2.4. Local model

In this model trust is personal and beliefs vary between two
people, personalization should improve the accuracy of the results
[2]. Most research reports on trust mechanisms in the semantic
web discuss those algorithms that calculate trust from the personal
view.

If one does not know the trustee, maybe his/her friends know
it or maybe his/her friends friends know it. The main idea here is
that everybody trusts his/her friends belief more than a strangers
belief. A trusted acquaintance will also trust the beliefs of his/her
friends and it is possible to find a path of friends from trustor
to trustee. According to small world hypothesis [18], any pair of
nodes in a random network will be connected by a relatively short
chain of random acquaintances. The number of intermediates is
finite therefore trustor and trustee are connected through less than
six intermediate nodes. This entails that if such mutual chains of
acquaintances are used to determine the initial trust between a pair
of entities, then the method will scale up well because these chains
are likely to be small. The main problem here is the calculation of
trust ratings between unknown entities.

3. Related works

There are several algorithms for calculating trust on the web of
trust network, and they use different operators to propagate and
aggregate. In this section a brief review of well known algorithms
for computing trust is described. Golbeck [19] presents a comprehensive review of trust on the Web. The author has considered trust
in three domains, trust in content, trust in services and trust in peo-
ple. Trust in content is said to be bisected such as trusting WebPages
and semantic web information sources. When users visit websites,
they must decide whether to trust contents, or whether to engage
in a transaction. Some factors affect users perception of how much
to trust websites, the design of WebPages, effort, linking, policy
statements, outside reputation of owners, etc., all impact trust. On

the other hand by semantic web techniques, provenance can be
presented. Provenance is defined as the history of data. Knowledge
about provenance helps users verify the authenticity of data and
decide how trustworthy it is. In fact the interconnection between
data is important for judging its quality. By provenance users may
be able to judge how much to trust the content. Provenance can
also describe who created data leading to the use of social relationships which help judging how much trust should be placed in the
data.

The ability to automatically trace the dependencies between
data back to the source requires support within a system. On the
web, the semantic web is a natural fit for representing prove-
nance, as it contains explicit support for representing and inferring
connections between data and processes as well as for adding
annotations to data. With provenance on the web, the next step is
judging how much information should be trusted. This evaluation
can be made automatically by an agent.

Trust in services means determining and managing trust in peers
or services that requires a system that can scale and handle the
distributed nature of entities. In P2P, trust is generally determined
by the attributes of peers like performance, price, speed, etc. Trust
management models describe how trust information is stored and
shared in P2P systems.

If each node were to broadcast data about its interactions, it
would add a tremendous overhead to the network, and hence each
node assigns a trust rating in its partner. When a node wants
to discover a rating for an unknown peer, it broadcast a request
for information; subsequently its neighbors propagate the request
until a time limit is reached. Once the information is collected about
a node, it must be composed into a recommendation of how much
to trust the node. Algorithms for computing trust in P2P networks
and algorithms for computing it in social network have overlap.
For web services, similar issues like control interactions between
services, enforce but complex control policies and negotiations are
intervened.

Finally trust in people is based on the stored values of trust in
social networks. Web based social networks (WBSN) maintain the
trust values and provide a point of interaction where those values can be accessed and aggregated. For human interactions, trust
will always be an important relationship. Social networking has
become an important relationship movement on the web, and on
the semantic web, via FOAF. Many people maintain accounts at
multiple social networking websites. If a website builds FOAF profiles of its users, it allows the users to own their data instead of
having their information locked in a proprietary database, they are
able to share it and link it. Transitive, symmetry, personalization
and context are the main properties of WBSN. When two individuals know each other, know how much to trust one another. Two
people who are not directly connected do not have a foundation for
knowing about trust. However, the paths connecting them in the
network contain information that can be used to infer how much
they may trust one another.

In another report Golbeck [20] concentrates on trust in social
networks and deduced some properties for trust graphs from real
networks and proposed an algorithm called TidalTrust for inferring
trust in the trust graphs. Tidal Trust of Golbeck [20] is given as:

j  adj(j)|tij
j  adj(j)|tij

maxtijtjs
maxtij

tis =

(2)

where i is the source, sis the sink and t denotes trust rating between
two nodes. Richardson et al. [21] uses a web of trust network to calculate the belief of a user for a statement. The calculation is based
on finding paths from the source to any node which represents an
opinion about the statement, concatenating trust values and merging those values to compute a final trust value for the statement. His

S. Shekarpour, S.D. Katebi / Web Semantics: Science, Services and Agents on the World Wide Web 8 (2010) 2636

approach is a probabilistic interpretation similar to random walks
on a Markov chain. For testing their algorithms and evaluation the
accuracy of results, Richardson used the Epinions network.

Guha et al. [22] utilizes the idea of transitivity of distrust (the
enemy of your enemy is your friend) and developed a framework for trust propagation and computational treatment of distrust
propagation. The benchmark data is again the web of trust network www.epinions.com but data have discrete values consisting
of +1 for trust and 1 for distrust links. Ziegler and Lausen [23]
proposed a trust algorithm called Appleseed. It belongs to a local
group of trust computation which is also compared with Advogato
[23]. Local group trust metrics means computing trust neighbor-
hoods, and given a network and a source it returns a ranking of all
nodes in the network. Global metrics require a full knowledge of
the entire trust network. It also provides a discussion of semantics
and propagation models of distrust.

Ref. [24] uses a fuzzy model for trust evaluation and compares
the results with Tidal trust of Golbeck [20]. The algorithm in [24]
employs fuzzy linguistic terms to specify trust between users and
proposes a technique for inferring trust between two nodes that
may not be directly connected in the trust graph of a social net-
work. Ref. [25] presents a research in the area of computational
mechanisms for trust and reputation in virtual societies.

4. Mathematical background

Below, some mathematical backgrounds for operators of trust
calculation through a chain of acquaintances are discussed. How-
ever, in Section 5 a novel propagation algorithm and a weighting
mechanism for aggregation are introduced.

4.1. Propagation

How can we calculate trust through a chain of acquaintances?
As shown in Fig. 5, if A gives a trust rating to B and if B gives a
trust rating to C what is the trust rating that A gives C? The only
problem is that in propagation trust is not perfectly transitive. For
example if A trusts B completely and B trusts C completely, then it
is evident that A cannot trust C completely. But with a high degree
of confidence one can trust recommendations made by friends. In
other words, trust propagation can be considered with a certain
percentage of fluctuation.

4.2. Aggregation

If there are different paths of acquaintances as shown in Fig. 6,
how can we aggregate trust rating from each path? And which path
is more trusted? The problem that exists here is the contradictory
information. Different paths can give conflicting information. How
are untrustworthy paths recognized?

4.3. Fuzzy logic for calculation of trust in local model

Fuzzy sets and systems are appropriate tools for representing
uncertainty and ambiguity. Fuzzy logic provides approximate reasoning utilizing uncertain data. Therefore, a network of trust can
easily be represented by a fuzzy relation or a fuzzy graph. In fuzzy
analysis [27], every object x in a set A has a membership function

Fig. 6. Aggregate trust rating from each path.

A(x), which represents the degree of compatibility or the degree
of truth of x in A. There are some facts [27] that are used here.
Definition 1. The membership function of intersection C = A B is
C(x) = min(A(X), B(x))
(3)
Definition 2. The membership function of union C = A B is
C(x) = max(A(X), B(x))
Definition 3. Let X, Y R be universal sets, then
R = {((x, y), R(x, y))|(x, y) X  Y}

(5)
R is called a fuzzy relation on X Y. This definition can be interpreted as defining a fuzzy graph. Consider two statements S and
T, for which the truth values are S and T, respectively (S and
(T  [0,11])). It is shown [27,24] that the truth value of AND and
OR are min and max, respectively.
(S  T) = min(S, T ) and (S  T) = max(S, T )

(4)

(6)

4.4. Propagation and aggregation through fuzzy logic

Fuzzy relations can be represented by the operation compo-
sition. Different versions of composition have been suggested,
which differ in their final results and their mathematical properties.
The Max-min composition [27] is the most popular and the most
frequently used. Some of the well known composition operators
are as follows.

Max-min composition:
R1  R2 = {[(x, z), max{min{R1 (x, y), R2 (y, z)}}]|x  X, y Y, z  Z}
(7)

Max-* composition:
R1  R2 = {[(x, z), max{{R1 (x, y)  R2 (y, z)}}]|x  X, y Y, z  Z}

Max-mean composition:
R1  R2 = {[(x, z), max{1/2  {R1 (x, y)
+ R2 (y, z)}}]|x  X, y Y, z  Z}

(8)

(9)

If the trust ratings between nodes are interpreted as fuzzy values
then the calculation of trust through a chain of acquaintances may
be considered as a composition relation. If we implement the calculation of trust with the Max-min composition then propagation
utilizes the MIN operator and aggregation the MAX operator.

5. Proposed trust model

Fig. 5. Propagation of trust.

In this section a trust model for evaluating trust rating between
two nodes as trustor (trusting agent/person) and trustee (trusted

Fig. 7. A chain of acquaintances.

agent/concept/person) is proposed. This model is associated with
two algorithms, an algorithm for propagation and another for
aggregation. The propagation algorithm utilizes statistical techniques and the aggregation algorithm is based on a weighting
mechanism that utilizes fuzzy logic for modeling. The proposed
technique is named Max-weight method.

5.1. Propagation method

by Pr(erroefor:y) and the second is the amount of diversity from
the actual value of y represented by error. These two concepts are
strongly dependent on the value of x. A high value for x implies
having highly confident intermediary nodes (low probability for y
to be erroneous). In this case the amount of diversity in y is not sig-
nificant. As mentioned previously the trust propagation does not
possess the transitivity property completely. For this reason we
consider a range of probability for diversity in y. In an absolute
optimistic view the probability of diversity in y is 0 and on contrary
is at most (U x)/(U L). On the average the probability of diversity
in the value of y is:
Pr(erroefor : y) = Vx = (U  x)/(2  (U  L))

(12)

It is clear that the probability of accurate y is:

Pr(Truthfor : y) = 1  Vx

(13)

In a trust network the rating of trust from one node to the
adjacent node is assigned values in a range [L,U]. L means the
least possible amount of trust rating and U represents the highest amount of trust rating. The range of trust rating considered in
the current work lies in the interval [0,1]. If a node does not know
another node directly, before an interaction has taken place, then
it tries to estimate the trust rating for the trustee via a chain of
acquaintances. Based on this estimate the trustor decides to interact or not. Fig. 7 shows a chain of acquaintances. If A1 trusts A2 by a
rate denoted by tA1A2 and if A2 trusts A3 by a rate denoted by tA2A3
and if A3 knows the trustee and its trust rating directly, then what
is the trust rating that A1 may give the trustee (S)?

In every chain only the last intermediary friend knows the
trustee directly and can suggest a rating of trust for the trustor.
In this chain of acquaintances the trust rating that these friends
suggest for the trustee is y = tA3S. The amount of confidence that the
trustor has on the suggested trust rating (y) depends on the trust
ratings of intermediary friends. If intermediary friends are trust-
worthy, the trustor may accept y with high confidence. In each path
the least trust rating is the minimum value of trust rating between
intermediary friends. We denote this value by x.
x = min(tA1A2 , tA2A3 )
y = tA3S

(11)

(10)

Since the suggested rating of trust by the chain of acquaintances
(y) may be too optimistic (exaggerated) or too pessimistic (con-
servative) (Fig. 8), it is a need to validate and refine the value of
y. Therefore, we define two concepts, the first is the probability
of existence of fluctuation in the suggested value of y, denoted

Fig. 8. State Tree.

Error rate in y: In the case of probability of diversity in y the rate
of this diversity is in the interval [0,(U x)]. Then on the average the
value of diversity in y is (U x)/2. But y can be more than the actual
value (optimistic value) or less than the actual value (pessimistic
value). If y is more than the actual value we must take away the
value of diversity from y and if it is less than the actual value, we
must add the value of diversity to y.
 = y  error
error = 1  x
where y represents refined y.

(15)

(14)

Since initially we do not know whether y is higher or lower than
the actual value, we compare the value of y with the mean (0.5) and
assume that a much higher value (near 1); y contains error in the
positive direction. If it has a low value (near 0.0), it contains error
in the negative direction.
If y is high (y  0.5) then y
 = y + error
Else (y < 0.5) y

 = y  error

(16)

Trust value: The rate of trust between the trustor and the trustee
is defined as the weighting average of trust that the trustor has for
the trustee.
E(tA1S) = (1  Vx)  y + Vx  y
 y + 1  x

E(tA1S) =

(17)

1 + x

5.2. Aggregation method

If there are some different paths from trustor (source) to trustee
(sink) such as shown in Fig. 6, then it is necessary to have a method
to aggregate different values of trustee. Through the propagation
algorithm an estimated rating of trust is calculated in each path.
The aggregated rating can be computed by two methods. First, by
choosing an estimated trust rating in a path and second by merging the estimated trust ratings in all paths. The approach adopted
in this paper is the first method. In order to select the best path
that contains the most accurate trust rating, we utilize a weighting
mechanism for each path and the trust rating of the path with the
highest weight will be selected. Let X be the set of all paths from
source to sink.
X = {xi|xi = A1A2 . . . AnS : path.from.source.toSink}

(18)

Based on the propagation method, in each path the trust
expectancy of trustor to trustee is calculated. TPath is a fuzzy set
representing a degree of trust rating from the trustor to the sink for
each path xi that is contained in the set X. In this set, i(xi) denotes

S. Shekarpour, S.D. Katebi / Web Semantics: Science, Services and Agents on the World Wide Web 8 (2010) 2636

the membership function of trust of source to sink in each path.
The value of i(xi) is derived based on the calculated trust rating
by the propagation method with respect to the difference between
the upper and lower bounds of trust rating U and L.
TPath = {(xi, t(xi))|xi  X, t(xi)) = E(tA1S)/(U  L)}

(19)

Next a weight is assigned to each path and selects the trust value
of the path with highest weight. This weight is assigned based on
two parameters, TrustFriends and density.

TrustFriends: is defined as an estimate of the trust ratings
between the intermediary nodes in a chain of acquaintances. The
assumption is that a set of intermediary friends with high value
of trust rating will increase the accuracy of trust calculation. If we
have trusted friends in a path, then we have more confidence on the
evaluated trust rating in that path and hence the weight of a path
depends on trust rating among friends directly. The Trustfriends
fuzzy set represent a degree of trust among intermediary friends
for each path xi contained in the set x. In this set f(xi) denotes the
membership function of the product of trust rating between each
two intermediary friends to the range of trust UL in each path and
is given as below. Product operator is chosen because it is better
than min operator for reflecting trust of friends in a path.
TFriend = {((xi, f (xi))|xi  X, f (xi))

= (tA1A2 /(U  I)  tA2A3 /(U  I) . . . tAn1An /(U  I)}

(20)

Density: is defined as a measure the nearness of E(tA1S) of path
xi to E(tA1S) for other paths. The rationality behind the density is
that if E(tA1S) s in many paths is close, certainly it is a right value
for trust rating from source to sink (like voting). For each path xi,
the number of t(xj) values for other paths that are close to t(xj)
represent density of estimated trust rating in that path. We utilize
density to overcome the problem associated with fuzzy methods
such as Max-min or Max-*. In these methods if there is a path with
a high bias value for trusting sinks, that path is selected. When
density is used, the selection of such a path is not necessarily a
priority. The density fuzzy set indicates a degree of density for each
path xi contained in set x. d(xi) for each path xi is defined as the
rate of the total number of paths xj that have a difference between
t(xj) and t(xj) less or equal K to the cardinality of set X. t(xj)
as mentioned before is the degree of trust rating to sink for each
path in TPath set (Eq. (19)). In Eq. (21) count is the total number
of paths (xj), that have t(xj) close to the t(xj) for path (xi) and
|X| is cardinality of set X.
Density = {((xi, d(xi))|xi  X, d(xi))

= Count(xj)

|X|

: |t(xi)  t(xj)| < K}}

(21)

Weight assignment: weight of each path is defined as the product of the values of TrustFriends and density. The fuzzy set Weight
represents the weight that is computed for each path. We use a
parameter   to measure effects of TrustFriends and density on accu-
racy.
Weight = {((xi, w(xi))|xi  X, w(xi) = f (xi)   d(xi)1 }

(22)

Finally the path with highest weight is the candidate for taking
its estimated trust rating as the evaluated trust rating from source
to sink. Then the value of trust between trustor and trustee through
multiple paths equals to the expectancy of trust that trustor expects
for trustee in the path with highest weight w.
tSource to Sink = E(tAnS) in the path xg
as w(xg) = MAX(w(xi))
for all i

(23)

(24)

Fig. 9. Pseudo code for the evaluation of trust rating.

Fig. 9 shows a pseudo code based on the proposed model for

evaluating trust rating in an interaction with unknown node.

6. Experimental results

6.1. Data set

A program is employed to crawl the web of trust network,
www.epinions.com website and extract data from this network.
The data obtained consists of 6021 nodes and a connected graph
with 500 nodes and 22,705 edges is constructed. The Epinion web
of trust is Boolean but our method requires real-valued trust rat-
ings. To assign value to edges we used Richardsons technique (with
a little modification in the noise parameter) [21] which use the concept of quality of users assigning a trust value to each node. Each
user has a quality measure qi  [0,1] that determines the probability that a statement by that user is true. For the experiment of this
work, the quality of a user is chosen from a normal distribution with
mean  = 0.5 and standard deviation  = 0.25. The higher value of
the users quality, the more they are likely to be trusted. For any
pair of users i and j where i trust j in Epinions:
tij = uniformly chosen from [max(qj  ij, 0), min(qj + ij, 1)]

(25)

where tij is the trust rating of node i to node j, qj is the quality of user
i and ij is a noise parameter that determines how accurate users
are at estimating the quality of the user they are trusting. However,
in order to have a more transitivity property in the network we let
the noise parameter equals half of the value chosen by Richardson
et al. [21], this will give a more compact range for the data. It is
assumed that a user with low quality is bad at estimating trust, so
for these experiments:

ij = (1  qi)

(26)

Table 1
General state (trust state + distrust state).

Method

Metrics

Mean of error

Max-min
Max-*
Max-mean
Tidal trust

Recall

Precision

Fscore

Table 2
Trust state.

Method

Max-min
Max-*
Max-mean
Tidal trust with threshold

Metrics

Recall

Precision

Fscore

However, there is a trade off between precision and recall. For
example when the cardinality of set A is close to 0, recall value is
nearly 1 but precision is nearly 0. We use Fscore metric to measure
the accuracy using recall and precision jointly.

Fscore = 2  recall  precision
recall + precision

6.4. Comparative study

(31)

We implemented the TidalTrust algorithm [20] and three fuzzy
logic composition methods. Table 1 shows accuracy metrics for the
general state. As observed, the Max-* and Tidal trust have higher
Fscore and Max-* has the lowest mean of error. Generally Max-*
seems to be the optimum method.

Tables 2 and 3 show accuracy in trust and distrust states. The
Fscore for TidalTrust in both states are nearly the same but Maxmean has a higher accuracy in trust state and lower accuracy in
distrust state.

The situation for the Max-min is similar but it has higher accuracy in the both states. Max-min has the highest accuracy in trust
state. Max-* has a more balanced outcome and higher accuracy in
both states.

6.5. Results for the proposed method

First the parameters   and K are calibrated. For this purpose one
half of data were selected randomly. The programs were run for
a range of values of   (0,0.1,0.25,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1) and
K (0.005,1,0.2,0.3,0.4,0.5,0.6,0.6,0.7,0.8,0.9,1). Figs. 1013 show
the behavior of these two parameters with respect to accuracy
metrics. Finally the optimum values are found to be   = 0.5, K = 0.1.
Figs. 10 and 11 show the behavior of the mean of error and Fscore
with   for the general state. The mean of error and Fscore have the
best value for   = 0.5, this means that density and Trustfriend are
equally effective in evaluating the accuracy.

6.2. Method of test

It is clear that if there is a link between two nodes indicating that
interaction has taken place in the past, then trust will be deduced
from the behaviors of the trustee not from the chain of acquain-
tance. Evaluation of trust needs only to be carried out when there
is not any direct link between two nodes. We use one-leave-out
method for testing. In this technique if there is an edge between
two nodes, that edge is masked and trust is calculated through
other paths from source to sink and then compare the calculated
value with the masked value. According to the small world theory
[2,19,20] only paths with length equal or less than 7 are found. For
finding paths in the network the Dijestra idea [28] is employed to
traverse shorter paths earlier. The search proceeds by the Breadth
First Search method [28], the first path found will be at the minimum depth. The search continues to find any other path at the
minimum depth. When all paths with less than 6 intermediary
nodes are found, the trust evaluation method is applied. The computed value is compared with the trust rating on the direct edge
between source and sink.

6.3. Accuracy metrics

We use different metrics for evaluating the accuracy. These are
absolute error for continuous range and precision, recall and Fscore
for discrete cases.

Absolute error: It is the difference between the actual value of

trust for an edge and the calculated value from a method.
Absolute error = |trust calculated  actual trust|

(27)

In most cases the purpose of calculating trust value in a network
is making decision to interact the trustee or not to interact. For
example, if we have obtained a high value for trust, we will trust
trustee, otherwise we will decide not to trust. Based on the defined
criterion for accuracy, making a right decision is the ultimate metric
for comparison. We set a threshold = 0.5 for deciding to trust or not
to trust. If the calculated value is equal or more than 0.5, we will
trust otherwise not. We use precision and recall metrics to compare
the accuracy of methods in making decision. Precision and recall are
defined for three states as follows.

Trust state: In this state parameters that are used to calculate the

accuracy are:

At = the number of friends that we trust them in reality.
Bt = the number of friends that the algorithm suggests to trust
them.

Precisiont = At  Bt

Bt

Recallt = At  Bt

At

(28)

Distrust state: In this state parameters that are used to calculate

the accuracy are:

Ad = the number of friends that we do not trust them in reality.
Bd = the number of friends that the algorithm suggests not to trust
them.

Precisiond = Ad  Bd

Bd

Recalld = Ad  Bd

Ad

(29)

General state: In this state parameters that are used to calculate

the accuracy are:

PrecisionTotal = (At  Bt) + (Ad  Bd)

Bt + Bd

RecallTotal = (At  Bt) + (Ad  Bd)

At + Ad

Table 3
Distrust state.

Method

(30)

Max-min
Max-*
Max-mean
Tidal trust with threshold

Metrics

Recall

Precision

Fscore

S. Shekarpour, S.D. Katebi / Web Semantics: Science, Services and Agents on the World Wide Web 8 (2010) 2636

Fig. 10. Mean error verses  .

Fig. 13. Fscore verses K.

Table 4
Accuracy metrics for general state.

Method

Metrics

General state
Trust state
Distrust state

Mean of error

Recall

Precision

Fscore

In the general state this method has an accuracy of approximately 81% for Fscore and mean of error is around 0.122.
Comparison of two states Trust and Distrust show that the proposed
method has a higher accuracy in trust state, however, accuracy of
this method is more balanced in both of states, contrary to the
fuzzy methods that have higher accuracy in one state and lower
in another.

6.6. Comparison with other methods

The results of Tidal trust [20] and fuzzy based composition
methods such as Max-min, Max-* and Max-mean are compared
with the proposed Max-weight method. Fig. 14 shows that the
proposed method has a better mean error (it is lower than other

Fig. 11. Fscore verses  .

Figs. 12 and 13 show the behavior of the mean of error and Fscore
for different values of K. K is used for calculating density and for K
between 0.1 and 0.2, the best accuracy is obtained.

We implemented Max-weight using the same data set for optimum values of   and K. Table 4 shows values of accuracy metrics
for Max-weight method for different states.

Fig. 12. Mean error verses K.

Fig. 14. Mean error for different methods.

with higher minimum trust rating between intermediate friends,
the transitive property is more obviated. On the other hand, as the
transitive property degrades the probability of error in the recommended trust rating by the last intermediate node increases. The
aggregation algorithm as another important part tries to select the
most reliable path. This is achieved by utilizing a weighting mechanism based on the proximity of the evaluated trust ratings in the
propagation stage for different paths and the trust ratings between
intermediate nodes. Eventually, the expectancy of trust in the path
with highest value of weight is selected. This algorithm is fast and
efficient in that just one traverse of paths from the trustor to the
trustee is needed.

In the implementation phase, since the data from a real web of
trust network was not available, we used the Richardsons technique to rate the edges of the extracted graph for the epinions.com
website. In this technique the data generated from a normal distribution for quality of nodes with the mean 0.5 have been used.
This fulfills the assumption that half of the nodes may tell the truth
and the other half may tell lie. Furthermore, using a uniform distribution increases the degree of transitivity property, since an upper
and a lower bound is automatically imposed. In order to ensure an
increased transitivity property also a noise parameter was consid-
ered. Obviously working with a real data set would provide more
confident. The one-leave-out method was chosen for testing. In this
method of test the difference between evaluated value and actual
value can be computed. For measuring the accuracy, a set of metrics are defined, absolute error provides for measuring accuracy
of continuous range and Fscore, precision, recall are defined and
designated to the discreet range. All results are evaluated using
these accuracy metrics and a significant enhancement in accuracy
is observed.

The evaluated trust ratings can be recommended to the trustor
for final decision making. For example, referring to the given sce-
nario, a trust rating for each website can be computed by the
algorithms and recommended to the trusting agent (me) whom
will trust the statements from the websites with higher evaluated
trust rating. The comparative study shows that the main important
advantage of this method is higher accuracy. The comparison with
TidalTrust and three composition fuzzy operators show significant
decrease in the absolute error and also Fscore has a higher accuracy
in the general and the trust state. The comparison also shows that
Fscore is lower in the distrust state than the Max-* or Tidal trust
method. Making decision in the distrust state is important because
the cost of trusting an untrustworthy entity may be higher than
that of not trusting a trustworthy entity. A further advantage of
the method is that because just one traverse from source to sink
is required without return, it leads to faster computation than the
TidalTrust.

According to the categorizations of section two, the proposed
model is grouped in the distributed models with a personal view
(local model). Therefore, it can be used in any distributed systems
like P2P networks for choosing a more trustworthy peer. This computational model can be used in semantic web, social networks
and may also be utilized in Recommender Systems for selecting
the most trustworthy choices.

8. Conclusion

In this paper the well known methods of trust evaluation are
discussed and briefly reviewed. A categorization of trust policies
and mechanisms is suggested in this paper. The methods are mainly
grouped into centralized and distributed configurations and there
are a variety of techniques for trust and trust rating evaluation for
each of these configurations. Further, a comparative study is carried
out for the well known techniques using the bench mark data set

Fig. 15. Fscore for different methods.

methods and is around 0.12). Fig. 15 compares Fscore for Maxweight with other methods; it is observed that in 81% of cases
correct decision is made.

7. Discussions

Each complex question in the semantic web can be answered
by extracting a network of relationships among entities via the
asserted predicates of RDF. However, it is a challenging problem
when one is faced with managing and computing trust information
in the semantic web. If the trust assertions between two entities
are expressed through RDF predicates, then a web of trust network
between entities can be constructed and subsequently the questions like Is an unknown entity trustworthy or not? or What is
the rating of trust of an unknown entity? can be responded. The
basic philosophy of this paper is to design a method for modeling
and computing trust and trust ratings. Some trust models employ
a set of trust policies to provide certain rights of access. Some other
models use reputation such as the previous interactions of an entity
for estimating the future behavior. The work of this paper is different in that it does not consider any policies or the concept of
reputation, but it assumes that the trustor has never interacted
with the trustee and only utilizes the history of the interactions
other nodes with the trustee.

When two entities complete a transaction, an assertion about
trust can be added. Because of the large amount of entities that
have never interacted, a mechanism for extracting paths between
unknown entities and evaluating trust ratings seems necessary.
Computing trust ratings between unknown entities require algorithms for propagation and aggregation of trust ratings in different
paths. This evaluation can be made automatically by an agent
and regardless of the type of nodes (web service/person/agent) an
unique algorithm may be utilized for evaluating trust ratings.

The present work consists of a propagation algorithm and an
aggregation algorithm. The propagation algorithm uses statistical
techniques for evaluating the trust ratings and the aggregation
algorithm uses a weighting mechanism. The weighting mechanism
is based on two parameters. The first parameter is the multiplication of the trust ratings along a path and the second parameter is
the closeness of the evaluated trust rating of a path to other paths.
The weights and the parameters are derived in the frameworks of
fuzzy sets and fuzzy analysis.

The efficient and accurate algorithms designed can be applied
for computing trust ratings in a web of trust network. The propagation algorithm as part of the proposed method evaluates the
trust rating from the trustor to the trustee. This is based on the
assumption of partial transitive property such that in the paths

S. Shekarpour, S.D. Katebi / Web Semantics: Science, Services and Agents on the World Wide Web 8 (2010) 2636

and utilizing designed criteria in the form of metrics for measuring
accuracy.

A new method of trust evaluation is also proposed. This method
is an efficient extension of the previously reported techniques
and is based on statistical propagation and fuzzy aggregation. The
proposed technique is analyzed with respect to the introduced
parameters. This new method is also tested experimentally utilizing the same data set. The results obtained are compared and
contrasted with those obtained from other methods. Experimental
results demonstrate that the proposed approach is well comparable
with the well known techniques and in some cases superior performances are achieved. It is suggested that the method can be tailored
to be used as a subsystem for trust management in semantic web
and trust evaluation in human interaction in a social networks as
well as machines (artificial agents).

Acknowledgements

We would like to thank the anonymous reviewers for their
valuable comments and feedback on this work. We gratefully
acknowledge financial support of the research center of ITRC (Ira-
nian Telecommunications Research Center).
