 

A Knowledge Infrastructure for the  

Dutch Immigration Office 

Ronald Heller, Freek van Teeseling, and Menno Gulpers 

Be Informed, Linie 620, 7325 DZ Apeldoorn, Netherlands  

{r.heller,f.vanteeseling,m.gulpers}@beinformed.nl 

Abstract.  The Dutch Immigration Office is replacing its existing paper based 
case  system  with  a  fully  electronic  system  with  integrated  decision  support 
based on ontologies. The new award winning architecture (Dutch Architecture 
award 2009) is based on the principle of separation of concerns: data, knowledge and process. The architecture of the application, but especially the architecture of the knowledge models for decision and process support, is explained 
and shown in the demonstration. 

Keywords: Knowledge models, paper based, case system, decision and process 
support,  Be  Informed,  Run    Model    Analyze  principle,  knowledge  as  a  
service, separate know from flow. 

1   Background and Application Context 

The Dutch Immigration Office [4] decided to completely replace its existing (mostly) 
paper based case system and some form of decision support (decision trees). The new 
application had to be a completely electronic case system with integrated decision and 
process  support,  including  a  directly  connected  front  office  [5].  The  case  system  is 
mainly targeted at the internal knowledge worker who handles the incoming requests. 
The front office is for clients (foreigners) who apply for a permit to stay in the Neth-
erlands. This application replaces the current operational cluster of  systems, that do 
not provide the flexibility and agility that is needed today. Management costs are way 
too high and changes take far too long to be implemented. 

Ordina and Accenture together with Be Informed came up with the award winning  
architecture (Dutch Architecture Award 2009) [6] that is all about separation of con-
cerns: data, knowledge and process. This enables and ensures the flexibility and agility that is so needed. When these concerns are not interconnected, the changes can be 
implemented,  reviewed  and  validated  in  isolation,  which  shortens  time  needed  for 
implementations  as  a  whole,  and  thus  enable  greater  agility.  The  semantic  based 
knowledge support consists of a large set of models which serves both the front office 
(website [5]) and the back office (using SOA [2]). This implies that the same models 
are used for different audiences. The website offers functionality to decide what application to fill in, including tailor-made online forms, and the back office provides a 
range  of  services  to  support  the  case  management  system  with  e.g.  process  flows, 
decision  support  and  generation  of  documents.  The  webportal  is  fully  operational, 

L. Aroyo et al. (Eds.): ESWC 2010, Part II, LNCS 6089, pp. 386390, 2010. 
 Springer-Verlag Berlin Heidelberg 2010 
?

?

?
whereas the back office components are currently being deployed in the organization. 
A similar architecture has been used in several other recent projects. 

2   Technology 

Be Informed is a software product to support complex and knowledge-intensive business  processes.  Using  Be  Informed  software,  organizations  improve  their  service  to 
customers  and  partners,  streamline  their  working  processes  and  achieve  substantial 
gains in efficiency by delivering the appropriate knowledge in a direct and contextspecific manner to business users and customers. Be Informed gives organizations the 
ability to quickly adapt to changes in legislation or their surroundings. 

Be Informed is an integrated platform for all required services, processes and tasks. 
This  enables  business  partners  to  implement  knowledge  infrastructures  in  (large) 
enterprises,  that  can  be  used  to  build  multi-product,  multi-label  and  multi-lingual 
knowledge intensive applications, to address the challenges of a modern organization. 
Be informed uses its own strongly typed syntax, mainly because the existing web 
standards [1] like OWL [7] and RDF(S) [8] have at least 2 major drawbacks in a deployed application like the one subject of this demonstration. First, there is a strong 
need to link textual and visual content to the models, to be displayed in certain parts 
of the application. Secondly, decisions and classifications can be modeled much more 
easily  using  a  Closed  World  assumption  rather  than  the  usual  Open  World  
assumption. 

In  Be  Informed  Modeling,  all  models  are  based  on  a  metamodel:  the  knowledge  
architecture[9].  It  defines  conceptual  areas  in  the  domain(s)  and  specifies  their  de-
pendencies. It also defines the context of knowledge in surrounding IT systems, the 
organizations generic process and case systems, which are also part of Be informed. 

Based  on  ontology  design  patterns  [10],  we  divided  the  semantic  models  for  the 

Dutch Immigration Office in 4 main areas: 

  Core  Taxonomies.  Basic  vocabulary  of  the  organization  (permits,  actions, 
purpose  of  stay,  criteria  etc)  which  is  referenced  by  many  knowledge  
models. 

  Regulations. For each set of regulations a semantic  model is built to represent the applicable laws and regulations, and act as decision support in the 
operational process.  

  Online front office. This is the portal for the customer (foreigner) to explore 

the information, get personalized advice and apply for a permit. 

  Catalog.  This  is  a  documentation  model  serving  as  an  explanatory  model 
about the other models to help developers, modelers and business users to 
find their way in modeling. 

Note that there is a loosely coupled 5th area, that of a cross-governmental portal, leading foreigners coming to the Netherlands to all relevant governmental organizations, 
including the IND: New to Holland [3]. 

In the models we use strongly typed relations (instance, subclass, requires, depends 
on, etc.) connecting different concept types. In the metamodel concept types are defined 
for Control data, Actions, Conditions for actions, States, Roles and Generic Properties. 

R. Heller, F. van Teeseling, and M. Gulpers 

Fig. 1. Excerpt of the Metamodel of the IND Knowledge Base 

 

The  different  models  not  only  use  the  same  metamodel,  but  are  also  built  in 
roughly the same way. We use conditions or norms (criteria) that tell whether a specific request is permitted or not. To establish this decision one or more characteristics 
of the foreigner (properties) are compared with legal grounds. 

2.1   Overall Architecture 

The architecture of the case systems with decision support is all about the separation 
of the knowledge from the process (separate the know from the flow). The case system  is  responsible  for  the  data  on  files  and  persons,  whereas  the  decision  support 
system is responsible for the decisions taken based on (the correct) laws and legisla-
tion.  The  two  components  interact  via  web  services  with  XML  SOAP  messages 
through an Enterprise Service Bus which only handles the transfer of messages. 

The  Case  system  uses  web  services  to  interact  with  the  decision  support  system 
(knowledge  as  a  service)  for  complex  questions  like:  Which  activities  need  to  be 
performed,  What is the risk concerning this applicant,  What decision should be 
made  (automatically  or  supporting),  Which  publications  should  be  made  (deter-
mine and assemble), calculate fees, etc. 

The  case  system  follows  the  generic  reference  process  shown  in  figure  2,  that  
states that all processes of the Dutch Immigration Office are on some basic level the 
same. They all handle incoming requests, decide on the actions to be taken, process 
these actions and publish the results. Although the process is the same, the handling 
of a request never is. Each request has its own specific data, but the handling differs 
because of the knowledge applied. The relevant law and legislation relies on the data 
in  the  request,  which  for  the  Dutch  Immigration  Office  is  basically  the  purpose  
of stay. 

 
?

?

?
Fig. 2. Generic Reference Process to be filled by knowledge 

 

The  front  office  is  built  with  SharePoint  as  the  portal  software  and  the  decision 
support systems as the content  supplier. This  means (background) information, personalized advices,  forms that enable  submitted requests  for permits and  so on. This 
front office uses the same architectural knowledge backbone as the operational proc-
ess. This means that they share the core taxonomies (the organizational vocabulary) 
mentioned  before.  This  enables  a  seamless  integration  of  the  front  office  with  the 
back office.  

2.2   Semantic Models as the Brain of the Infrastructure 

The knowledge workers request support on several domains in the operational proc-
ess. This brought some key issues that the knowledge system had to solve: 

1)  Multilinguality;  the  application  (especially  the  front  office)  needed  to  support 
multiple  languages.  Because  Be  Informed  separates  knowledge  from  presentation 
language specific labels are connected to the language independent models. 

2) Time travelling; the knowledge models are implementations of laws and legis-
lation, which are very dependent on time. We used timelines on (parts of) knowledge 
models to specify when they were relevant. Because all possible timelines are available in runtime this enables support for all cases, past, present and future, in the same 
operational process. 

3) Skill based support; the knowledge workers involved in the process have different skills and authorization. Using typed textual references on  models together  with 
configuring user group related instruments, enabled us to show different users different (explanatory) texts. 

4) Traceability & compliance; each decision made by the decision support system 
needs to be traceable and compliant to laws and legislations. Partly this is covered by 
the  software,  but  an  important  factor  here  is  the  Be  Informed  Methodology  for 
Knowledge  Maintenance[9].  Key  in  this  methodology  is  that  all  models  are  built  
according to a  metamodel.  An overview of part of the IND  metamodel is shown in 
figure 1. 
The decision support system uses the Model-Run-Analyze principle, meaning that the 
models  (Model)  are  directly  used  in  the  operational  process,  there  is  no  coding  in 
between. This makes the model directly used in the day to day work (Run), which in 
its turn results into a direct feedback loop (Analyze). 

R. Heller, F. van Teeseling, and M. Gulpers 

3   Demonstration 

The  audience  will  learn  the  importance  of  the  separation  of  concerns  and  what  this 
means  in  an  operational  process,  and  basically  why  this  has  won  the  Architecture 
Award 2009 in the Netherlands. The demonstration will give an overview of the ar-
chitecture, but  mainly  focuses on the  way decision  support is integrated in  the case 
system. The various levels of support for the knowledge workers, depending on authorization and skill level and the way decision support is used to guide the knowledge worker in the whole operational process.  

We will show the metamodel including some examples of operational models, instruments and web services. This will be done using the model based catalog which is 
all about knowledge management and always in sync with the operational knowledge, 
because  it  uses  the  same  knowledge  models.  Besides  the  architectural  choices  and 
implementation  examples  we  will  also  demonstrate  how  we  handled  the  mentioned 
knowledge related issues. Naturally, this will all be shown in the live application. 
