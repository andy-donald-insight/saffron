Semantic Technologies for

Enterprise Cloud Management

Peter Haase, Tobias Math a, Michael Schmidt,

Andreas Eberhart, and Ulrich Walther

fluid Operations, D-69190 Walldorf, Germany

firstname.lastname@fluidops.com

Abstract. Enterprise clouds apply the paradigm of cloud computing
to enterprise IT infrastructures, with the goal of providing easy, flexi-
ble, and scalable access to both computing resources and IT services.
Realizing the vision of the fully automated enterprise cloud involves addressing a range of technological challenges. In this paper, we focus on
the challenges related to intelligent information management in enterprise clouds and discuss how semantic technologies can help to fulfill
them. In particular, we address the topics of data integration, collaborative documentation and annotation and intelligent information access
and analytics and present solutions that are implemented in the newest
addition to our eCloudManager product suite: The Intelligence Edition.

1 Introduction

Cloud computing has emerged as a model in support of everything-as-a-service
(XaaS) [9]. Cloud services have three distinct characteristics that differentiate
them from traditional hosting. First, cloud services are sold on demand, typically
by the minute or the hour; second, they are elastic  users can have as much or
as little of a service as they want at any given time; and third, cloud services are
fully managed by the provider (while the consumer needs nothing but a personal
computer and Internet access) [13]. Significant innovations in virtualization and
distributed computing, as well as improved access to high-speed Internet and a
weak economy, have accelerated interest in cloud computing.

While the paradigm of cloud computing is best known from so called public
clouds, its promises have also caused significant interest in the context of running
enterprise IT infrastructures as private clouds [11]. A private cloud is a network
or a data center that supplies hosted services to a limited number of people, e.g.
as an enterprise cloud. As with public clouds, the goal of enterprise clouds is to
provide easy, scalable access to computing resources and IT services [14].

The emergence of cloud offerings such as Amazon AWS or Salesforce.com
demonstrates that the vision of a fully automated data center is feasible. Recent advances in the area of virtualization make it possible to deploy servers,
activate network links, and allocate disk space virtually via an API rather than
having to employ administrators who physically carry out these jobs. Note that

P.F. Patel-Schneider et al.(Eds.): ISWC 2010, Part II, LNCS 6497, pp. 98113, 2010.
c Springer-Verlag Berlin Heidelberg 2010
?

?

?
virtualization is not limited to CPU virtualization  virtualization can be defined as an abstraction layer between a consumer and a resource that allows the
resource to be used in a more flexible way. Examples can be drawn from the entire IT stack. Storage Area Networks (SANs) virtualize mass storage resources,
VLAN technology allows using a single physical cable for multiple logical net-
works, hypervisors can run virtual machines by presenting a virtual hardware
interface to the guest operating system, and remote desktop software such as
VNC virtualizes the screen display by redrawing it on a remote display.

Realizing the vision of the fully automated data center  the enterprise cloud
 involves addressing a range of technological challenges, touching the areas of
infrastructure management, virtualization technologies, but also distributed and
service-oriented computing. In this paper, we focus on the challenges related to
intelligent information management in enterprise clouds and discuss how semantic technologies can help to fulfill them. In particular, we address the topics of
data integration, documentation and annotation, and intelligent information access and analytics. We present solutions that we have implemented in the newest
addition to our eCloudManager product suite: The Intelligence Edition. In the
following, we give a brief overview of the contributions in each of the dimensions.

Data Integration. Clearly, being able to automate data center operations via
low level APIs is the prerequisite for achieving the requirements listed above.
The challenge lies in the proper integration of data received from infrastructure
components and the orchestration of subsequent actions as a response to events
such as user requests or alarms. Many layers play a role in this picture and one
is faced with a large set of provider APIs ranging from storage to application
levels. The situation grows even more complex when products and solutions
from different vendors coexist in the data center. In fact, CIOs tend to mix
hardware from different vendors to avoid vendor locks, in order to benefit from
price competitions among the individual vendors. Hence, in the end they often
face a mix of technologies acquired over several years, where products from
different vendors and sometimes even different product versions differ vastly in
syntax and semantics of the data supplied and functionality offered via APIs.

Semantic technologies have been designed for these real-world situations. In
our solution, we use RDF as a data model for integrating semantically heterogeneous information sources in order to get a complete picture across the entire
data center, both horizontally  across different product versions and vendors 
and vertically  across storage, compute units, network, operating systems, and
applications. The RDF-based integration offers the flexibility needed to integrate
new sources in the presence of heterogeneity and dynamics in data centers.

Collaborative Documentation and Annotation. Data integration is a key
aspect of running data centers and clouds in an efficient and cost effective way.
For this purpose, cloud management software is fed with data from provider
APIs. This data contains technical information about the infrastructure and the
software running on it. In order to have a complete picture available, organizational and business aspects need to be added to the technical data. Consider the

P. Haase et al.

following examples: The decision whether to place a workload on a redundant
cluster with highly available storage is strongly affected by the service level the
system needs to meet, data center planning tools must take expiring warranties
of components into account, and having a relatively mild punishment for SLA
violations may lead a cloud operator to take a chance and place workloads on
less reliable infrastructure.

In order to collaborate efficiently, data center operators need to document
procedures and log activities. Proper knowledge management is essential in order
to avoid a problem having to be resolved repeatedly by different staff members.
Activities are usually managed via a ticketing system, where infrastructure alerts
and customer complaints are distributed and resolved by operators.

The examples above show that business and organizational information must
be addressed in a unified way. When information about systems or customers is
stored or documentation about a certain hardware type is written, it should be
possible to cross reference information collected from infrastructure providers. In
our solution we apply Semantic Wiki technology to satisfy these requirements.
Operating on an RDF base that is fed by infrastructure providers, operators can
extend this data by documenting and annotating the respective items.

Intelligent Information Access and Analytics. Efficient management of a
data center requires providing data center managers with the information they
need to make intelligent, timely and precise decisions. The range of specific information needs that should be supported is very diverse, including the generation
of reports about status and utilization of data center resources over time, the
visualization of key performance metrics in dashboards, the search for specific resources etc. Many of these information needs require multi-dimensional queries
that span across both technical, IT-related aspects and business aspects, and
therefore cannot be answered by a single data source alone.

Enabled by an integrated view on the data, we support queries that overcome
the borders of data sources. Apart from predefined queries that drive reports and
dashboards, a clear benefit is also the ability to perform expressive ad hoc queries.
As it is desirable to hide the complexity of the underlying data model and query
languages from the end user, we use approaches of schema-agnostic semantic
search that combine the expressiveness of structured queries with the ease of use
of keyword driven interfaces. Novel approaches to the visualization of structured
data as well as visual exploration of resources enable new forms of interaction with
the resources and provide insights into previously hidden relationships.

Structure of the Work. We start with a brief overview of the overall solution
in Section 2. Next, Section 3 introduces our ontology for the domain of enterprise cloud management, which serves as the core of the data integration and
management tasks within the eCloudManager. We then discuss the specific uses
of semantic technologies: semantics-based integration in Section 4, collaboration
support in Section 5 and intelligent information access in Section 6. Subsequently,
we report on practical experiences in Section 7 and, after a discussion of related
work in Section 8, conclude with an outlook to future work in Section 9.
?

?

?
r
e
s
w
o
r

d
n
e
t
n
o
r

t
n
e
m
e
g
a
n
a

e
r
u
t
c
u
r
t
s
a
r
f
n

t
n
e
m
e
g
a
n
a

e
p
a
c
s
d
n
a

l

 

a
u
t
r
i

e
c
i
v
r
e

-
f
l
e

Application Layer 

Virtualization Layer 

Hardware Layer 

Intelligence Edition 

Visualization 

Widgets 

Navigation 
Widgets 

Collaboration 

Widgets 

Keyword and Structure Indices 

 

 

n
o
i
t
a
t
n
e
s
e
r

r
e
y
a

Semantic Data Store 

Provider content 

User-generated content 

 

Wiki 
Pages 

 

n
o
i
t
a
r
o
b
a

l
l

o

t
r
o
p
p
u

t
n
e
m
e
g
a
n
a

a
t
a

r
e
y
a

&
h
c
r
a
e

s
s
e
c
c

n
o
i
t
a
m
r
o
f
n

EMC Storage 

Provider 

Virtual Center 

Provider 

 
 
Provider 

... 

Rel. DB 
Provider 

... 

 

n
o
i
t
a
r
g
e
t
n

a
t
a

r
e
y
a

Netw.-Att. 
 Storage 

Network 

Computing Resources 

 
s
e
c
r
u
o
s
e

r
e
t
n
e

a
t
a

Customer 
Database 

... 

 
s
e
c
r
u
o
s
e

s
s
e
n
i
s
u

Fig. 1. eCloudManager Architecture

2 Solution Overview

The eCloudManager Product Suite is a Java-based software solution that is targeted at the management of enterprise cloud environments. Starting with the
big picture, we first discuss the eCloudManagers overall architecture depicted
in Figure 1. The bottom of the figure shows the two dimensions of information
relevant to the eCloudManager, namely Data Center Resources and Business
Resources. The data center resources are divided along the IT stack into (i) a
Hardware Layer that consists of physical storage, network and compute infras-
tructure, (ii) a Virtualization Layer built on top of the hardware layer that is
made up of hypervisors with appropriate management capabilities (enabling virtual clusters, live migration etc.), and finally (iii) the Application Layer built on
top of the virtualization layer, comprising applications and landscapes on top of
the virtualized resources (where the term landscape refers to a set of enterprise
systems plus optional auxiliary systems that enable network access using VPN,

P. Haase et al.

RDP, SAP GUI or other means). These data center resources are complemented
by associated business resources, like customer data, hardware catalogs including
component descriptions and pricing data, or related project information.

Built on top of this resource infrastructure, the eCloudManager comes with
four complementary editions. Although the focus of this paper is on the Intelligence Edition (the large box on the center right of Figure 1), for completeness
we shortly sketch the three remaining editions first (the three boxes on the center left). The leftmost edition, Infrastructure Management, provides solutions
for monitoring and managing tasks ranging over the whole IT stack, like CPU
and storage virtualization across different virtualization and storage providers,
through a unified graphical interface. Its central features are rapid VM provisioning utilizing multi-vendor server virtualization and storage technologies, as well
as error detection through a customizable event and notification system. Com-
plementarily, the Virtual Landscape Management edition implements the novel
idea of Landscape-as-a-service (LaaS), i.e. to offer up interconnected multitiered
multi-system enterprise applications (like complex SAP landscapes) as complete
and ready-to-run landscapes. While the Virtual Landscape Management edition
is rather administrator-focused, the Self-Service edition constitutes an end-user
oriented portal for template-based on-demand provisioning of application landscapes for development, value prototyping, testing and production. A unique
feature of this edition is a module for metering and billing.

In the remainder of this paper, we will focus on the features of the fourth
edition, namely the Intelligence Edition, which makes use of innovative semantic
technologies to integrate available resources into a semantic data store, investigate this data, and collaboratively interact with the integrated data.

At the bottom of the Intelligence Edition is the Data Integration Layer, which
relies on the concept of so-called data providers. Abstracting from the details, a
data provider is a component that extracts data from a single physical or logical
resource (e.g. an EMC storage device, a VMware Virtual Center, or a relational
database), converts it into RDF and integrates the resulting RDF data into the
central repository. It is crucial that several providers can  and typically do 
coexist and that data from different providers is automatically interlinked by
use of common URIs, ultimately providing a unified and integrated view on all
data center and business resources (for more details see Section 4).

The central repository where the provider data is written to is settled in the
Data Management Layer. Technically, it is realized as a Sesame [6] triple store
that adheres to a predefined (yet extendable) OWL ontology (cf. Section 3). In
addition to the repository, the layer provides components for search and intelli-
gent, semantics-based information access (cf. Section 6), whose efficiency is made
possible by keyword and structure indices over the data. A central component
in this layer are also semantic wiki pages that are associated with the resources
contained in the repository; they offer an entry point to the eCloudManager
users, allowing to add new and complement existing information (cf. Section 5).
The uppermost layer in the Intelligence Edition is the Presentation Layer. Located on top of the Data Management Layer, it comes with a predefined set of
?

?

?
widgets with varying functional focus, e.g. offering support to display wiki pages,
visualize the underlying data using charts and diagrams, navigate through the
underlying RDF graph, and collaboratively annotate resources in the database
using both semantic annotations as well as free-text documentation. Ultimately,
the combination of these widgets results in a customizable user-interface  realized as an Ajax-based browser frontend  which is flexibly adjustable to fit the
needs of different user types (like data center administrators or CIOs).

3 The eCloudManager Ontology

Having presented the overall architecture, we now take a closer look at eCloudManager data model and introduce a conceptual model for the domain of
enterprise cloud management in form of an ontology that abstracts from vendorspecific representations, data sources and management APIs. The ontology has
been modeled as an OWL 2 ontology, consisting primarily of a class hierarchy
and property definitions with domain, range and cardinality restrictions. While
in the current application many of the expressive features of OWL 2 are not yet
required, we opted for OWL 2 in order for the ontology to serve as a reference
ontology for the data center domain and to perspectively enable reasoning-driven
tasks in the application (cf. the discussion of future work in Section 9).

Figure 2 surveys the main concepts and relationships of the eCloudManager
ontology (using the UML profile for modeling OWL ontologies [5]). Each concept carries a number of data properties (attributes), which capture information
about properties and status of the respective resource; for space limitations, we
included only the most important subsets of attributes. We next describe the
four major subareas of the figure in more detail, namely Storage Infrastructure,
Compute Infrastructure, Application-level and Business-level resources.

Fig. 2. Overview of the eCloudManager Ontology

P. Haase et al.

Infrastructure Resources. Infrastructure resources include storage and compute
resources. In our enterprise cloud solutions, storage virtualization is realized
through Network Attached Storage (NAS), in which virtual disks are managed
as so-called LUNs. This allows to maintain complete systems in a central place
(the Storage filer) and dynamically relocate between hosts. Within a Storage
filer, LUNs are typically grouped and managed in Volumes as logical container,
which can further be grouped in Aggregates.

Specific solutions for compute virtualization environments are modeled as
ComputeInfrastructure, representing a certain technology such as FlexFrame,
AWS, XEN or VMware. Within an ComputeInfrastructure, a Cluster represents a collection of compute resources, specifically a group of tightly coupled
computers that work together closely and in many respects can be viewed as
though they are a single resource. A Folder is a logical set of resources that
is grouped together, assigned resources, managed etc. Examples are VMware
resource pools. A Host represents an actual  physical or virtual  compute
system (PhysicalHost or VM), where one PhysicalHost can host multiple VMs.
As shown in the figure, the primary connection between compute and storage
resources is given by the lun relationship between Hosts and the logical storage
units (LUNs) they are associated with.

Application-level Resources. In a virtual environment, complex application landscapes can be managed as a VirtualLandscape, which is assigned a Pool of virtualized infrastructure resources. A virtual landscape typically comprises a set
of applications that run as SystemInstances on dedicated hosts. Examples of a
virtual landscape would be a landscape of SAP system instances as applications,
e.g. consisting of a CRM, ERP and enterprise portal.

Business-level Resources. In addition to the technical aspects of the data center
(which is typically populated automatically from management APIs), the ontology allows to relate data center resources to relevant business information,
such as a Person responsible for the administration of data center resources, or
related project and customer information etc.

To wrap up, the eCloudManager ontology introduces the basic concepts that
are commonly used in enterprise cloud management scenarios. As described in
Section 5, it can easily be extended by the user to capture information relevant
for specific use cases or to integrate other data sources.

4 Semantics-Based Integration

As sketched in Section 2, semantic data integration is realized through data
providers. Recalling the main idea, a data provider extracts data from a data
source, converts this data into RDF, and integrates this RDF data into the semantic data repository. As discussed in the previous section, in the context of
enterprise cloud management we are primarily interested in physical properties of
?

?

?
hardware components like storage devices, available CPUs, physical hosts, as well
as the properties and the current state of software components like hypervisors
and virtual machines. Addressing these information needs, the eCloudManager
comes with a broad set of predefined data providers for integrating data from
hard- and software components typically encountered in the context of enterprise
cloud management. To illustrate the concept by example, let us consider a small
data center employing a single Xen hypervisor that runs a couple of virtual
machines over a set of physical hosts and two storage systems, say one EMC
Symmetrix and one NetApp system. In this scenario, data integration in the
eCloudManager would be realized through the following providers.

 A Symmetrix provider extracts physical properties from the Symmetrix storage unit such as number and size of physical disks contained in the system.
 A NetApp provider analogously extracts the physical properties from the

NetApp storage system.

 Complementarily, a Xen provider gathers the properties hidden behind the
Xen hypervisor, such as the number of the virtual machines running on top,
configuration details of the individual virtual machines, information about
underlying physical hosts, disk occupation of the virtual disks, etc.

Technically, the data providers are predefined modules that can be instantiated
for existing data sources and, given only meta information like their network
address and login information as input, use available drivers or APIs to gather
the relevant data. This data is then translated into RDF, thereby using the key
attributes of resources to generate URIs that uniquely identify these resources.
To give an example, the key for the Symmetrix storage device is its IP address, so
its URI might look like http://my.datacenter/Symmetrix/192.168.0.55. The
crucial thing here is that both the Symmetrix provider and the Xen provider will
generate this URI when storing information related to the Symmetrix system.
This way, the data that is generated from different providers is automatically
interlinked when integrating it into the global repository (cf. Figure 1).

When instantiating the providers, one can also configure advanced properties
like the interval for periodically refreshing data, or whether to store old provider
snapshots for recovery purpose. Ultimately, the provider framework serves as an
abstraction layer for data integration that allows to connect data sources in a
plug & play fashion to the central semantic repository, while abstracting from the
technical details and the APIs of the physical and logical components accessed by
the provider. If the data center is extended by, say, another Symmetrix storage
system, all that needs to be done is instantiating a fresh Symmetrix provider that
collects its data (which can be done by an administrator using the eCloudManager Web frontend). A second benefit of the provider concept is the high degree
of reuse, e.g. the NetApp provider can be employed in every data center using a
NetApp storage system. Taken all these properties together, our data provider
concept enables a fast and simple data integration process (cf. Section 7).

P. Haase et al.

Apart from the integration of technical data directly related to the enterprise cloud data center, the provider concept also makes it possible to integrate data from other sources, such as additional documentation or customer
information (e.g. in the form of spreadsheets or relational databases). To this
end, the eCloudManager offers predefined, customizable providers, e.g. to extract RDF data from external sources, SOAP-based Web Services, SNMP- and
SSH-connected devices, relational DBs or tabular CSV files. In addition, there
are script-based providers that allow users to integrate data from virtually every accessible source. The underlying idea is to support data integration in a
pay-as-you-go fashion: while data center information is typically directly aligned
with the eCloudManager ontology presented in Section 3, for other data sources
it is up to the user how much effort she wants to spend on data integration:
In some cases, only little effort is needed and generic, predefined providers can
be used to integrate data sources quickly, leaving it to the user to semantically
annotate and interlink this data afterward (cf. Section 5); in other cases, the
user may put more effort in data integration and write his own provider that
aligns the integrated data directly with existing data and the eCloudManager
ontology. In the end, this concept gives users a high degree of flexibility in data
integration.

5 Collaborative Documentation and Annotation

As motivated in the Introduction, in order to collaborate efficiently data center administrators need to be able to document and share knowledge. Wikis
have long been used as a tool for knowledge sharing in administration envi-
ronments, yet a major obstacle of traditional wikis is that they again are silos,
with largely unstructured information that is poorly connected with other data
sources. As outlined in Section 2, in our solution we tightly integrate Semantic
Wiki functionality, where the wiki pages are directly associated with the structured data objects. Our wiki implementation follows the ideas of the Semantic
MediaWiki [8], providing features like semantic annotations or built-in support
for visual display of information (e.g. as charts or bar diagrams). Semantic annotations are automatically extracted from the wiki pages, converted into RDF
triples and persisted in the repository. In the user interface, the structured and
unstructured information then is presented in a seamlessly integrated way. In the
following paragraphs, we discuss uses cases around user-driven documentation
and annotation, describing how they are supported in our solution.

Documentation. Technical documentation is a central use case in data center
management. Examples include customized installation instructions or best practices for handling errors on a host system of the cloud that is known to frequently
cause problems. Such documentation, typically provided in form of unstructured
text (possibly with some internal and external links), can directly be entered in
the wiki pages associated with the respective resource in the central repository.
?

?

?
Interlinkage of Resources. In addition to unstructured documentation, the user
can use semantic annotations to establish new relationships between resources.
For example, one may link responsible administrators directly to hardware de-
vices, or associate customers with the concrete virtual landscapes they are using.

Completion of Missing Information.
In some cases, data providers may not
have access to all information relevant to the user, which ultimately leads to
incomplete information in the central repository. Our approach here is to use
the eCloudManager ontology to identify missing information: whenever displaying a resource of a given type, we compare its properties against the properties
specified in the ontology for the respective type, to identify properties that are
currently not populated. For instance, the ontology may define that the warranty status of storage resources should be provided, and this property may not
have been specified for some storage system. Using structured tabular templates
that are automatically generated from the ontology, the user can easily detect
properties with missing values and, in response, directly fill in the missing data.
It is worth mentioning that the wiki is equipped with a revision management
system to track the provenance of changes. For the structured data, the provenance is maintained down to the level of single triples, i.e. for every information
item it is possible to see when and by whom (either a user or a data provider)
it was changed. Via RSS feeds users can get notified in the case of changes, e.g.
when the status of an object is updated, or a corresponding wiki page has been
modified. With these functionalities, the system offers a wide range of possibilities to support collaborative working processes in a data center environment.

6 Semantics-Based Information Access

Having discussed the collaborative annotation and documentation features in the
previous section, we now present our techniques and paradigms to semanticsbased information access. We divide our discussion into three areas, namely
presentation of resources, search and querying and exploration and analytics.

Presentation of Resources in the UI. The user interface of the Intelligence
Edition follows a resource centric presentation scheme, i.e. every resource has exactly one page associated that aggregates resource-related data in a transparent
way. The UI is composed from a set of widgets with different functional focus,
like visualization, navigation or collaboration. Some of these widgets are generic
and displayed for all resources, while others are specific for a fixed type of data
(or, alternatively, data with certain properties). To give some concrete examples,
the widgets include a browsable graph view, a tabular view to edit structured
data, the semantic wiki to create documentation and semantic annotations, as
well as widgets displaying charts or bar diagrams. Figure 3 shows an example of
a page for a virtual landscape, including a tabular view, the data graph and a
dashboard displaying statistics.
