SOWL:Spatio-temporal Representation, Reasoning and

Querying over the Semantic Web

Sotiris Batsakis

batsakis@softnet.tuc.gr

Euripides G.M. Petrakis

petrakis@intelligence.tuc.gr

Department of Electronic and Computer Engineering

Technical University of Crete (TUC)
Chania, Crete, GR-73100, Greece

ABSTRACT
Representing dynamic information in the form of ontologies,
as well as querying and reasoning over static and dynamic
ontologies are the areas of interest in this work. Building
upon well established standards of the semantic Web and
the 4D-fluents approach for representing the evolution of
temporal information in ontologies, SOWL illustrates how
spatial and spatio-temporal information and evolution in
space and time can be efficiently represented in OWL. It also
demonstrates how qualitative temporal and spatial relations
that are common in natural language expressions (i.e., relations between time intervals like before, after, etc.) are
represented in the ontology. Existing approaches allow for
representations of only static, spatial or temporal informa-
tion, but do not support combinations on the nature of information or representation of qualitative relations. Part of
the proposed representation model is the SOWL (high-level)
query language, which does not require users to be familiar
with peculiarities of the underlying ontology representation
(which can be complex) and handles ontologies similar to
relational databases. A distinct feature of SOWL is the incorporation spatio-temporal reasoning in SOWL, which is
capable of inferring spatio-temporal information from representations in the underlying ontology model.

Categories and Subject Descriptors
H.4.4 [Information Systems]: Information Systems Ap-
plications

General Terms
Semantics

Keywords
Spatial Representation, Temporal Representation, Ontol-
ogy, Reasoning, Querying

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee.
I-SEMANTICS 2010 September 1-3, 2010 Graz, Austria
Copyright 2010 ACM 978-1-4503-0014-8/10/09 ...$10.00.

1.

INTRODUCTION

Ontologies offer the means for representing high level con-
cepts, their properties and their interrelationships. Dynamic
ontologies will in addition enable representation of information evolving in time and space. In particular, dynamic ontologies are not only suitable for describing static scenes
with static objects (e.g., objects in photographs) but also
enable representation of events with objects and properties
changing in time and space (e.g., moving objects in a video).
Representation of both static and dynamic information by
ontologies, as well as querying and reasoning over static and
dynamic ontologies are exactly the problems this work is
dealing with.

Representation of dynamic features calls for mechanisms
allowing for uniform representation of the notions of time
and space (and of properties varying in time and space)
within a single uniform ontology [1]. Methods for achieving this goal include (among others), temporal description
logics [11], temporal RDF [13], versioning [6], named graphs
[28], reification, N-ary relations [2] and the 4D-fluents (per-
durantist) approach [9].

In our earlier work [4] we showed how temporal information (also the evolution of temporal concepts) can be represented effectively in OWL using the 4D-fluents approach.
Concepts varying in time are represented as 4-D dimensional
objects, with the 4-th dimension being the time. SOWL extends this approach in certain ways: The 4-D fluents mechanism is enchanced with qualitative (in addition to quan-
titative) temporal expressions allowing for the representation of temporal intervals with unknown starting and ending points by means of their relation (e.g., before, after)
to other time intervals. Accordingly, the spatial representation of SOWL supports both quantitative and qualitative
expressions. Emphasis is given to qualitative expressions
since in natural language (the same as in many applica-
tions) spatial relations are typically expressed using qualitative (e.g. north of) rather than by quantitative relations.
Both, topologic and directional relations are supported as
well [17]. Another distinctive feature of the SOWL model is
spatio-temporal reasoning support which consists of a set of
inference rules applying on temporal and spatial relations.
Their purpose is to assert additional implied facts to the
knowledge base (i.e., determine the spatial or temporal relation between two objects given their relations with a third
one).

The SOWL query language is a high-level SQL-like
language that handles ontologies almost like relational
databases.
It maintains the basic structure of an SQL


temporal and spatial operators. The SOWL ontology model
is not part of the query language and it is not visible to the
user, so the user need not be familiar with peculiarities of the
underlying mechanism for time and space representation.

Related work in the field of knowledge representation is
discussed in Section 2. This includes issues related to representing and reasoning over information evolving in time and
space along with a discussion on ontology query languages.
The SOWL representation model is presented in Section 3
and the corresponding reasoning mechanism in Section 4.
The SOWL Query Language is presented in Section 5, followed by evaluation in Section 6 and conclusions and issues
for future work in Section 7.

2. BACKGROUND AND RELATED WORK
Several representation languages are defined for the Semantic Web, the most important of them are referred to
as the OWL-family [7, 33] of languages for ontology building and knowledge representation.
In the following, although interrelated, issues related to representing temporal
and spatio-temporal information in ontologies are discussed
separately for ease of discussion.
2.1 Representing Temporal Information in

Ontologies

Representation languages such as RDF, OWL, (which is
based on description logics), the same as frame-based and
object-oriented languages (F-logic) are all based on binary
relations. Binary relations simply connect two instances
(e.g., an employee with the company) without any temporal information. Nevertheless, representation of temporal
information in OWL is feasible, although complicated [2, 9].
The OWL-Time temporal ontology [5] describes the temporal content of Web pages and the temporal properties of
Web services. Apart from language constructs for the representation of time in ontologies, there is still a need for
mechanisms for the representation of the evolution of concepts (e.g., events) in time. This is related to the problem of
the representation of time in temporal (relational and object
oriented) databases. Existing methods are relying mostly on
temporal Entity Relation (ER) models [10] taking into account valid time (i.e., time interval during which a relation
holds), transaction time (i.e., time at which a database entry is updated) or both. Also, time is represented by time
instants, intervals or finite sets of intervals. However, representation of time in OWL differs because (a) OWL semantics
are not equivalent to the ER model semantics (e.g., OWL
adopts the Open World Assumption while ER model adopts
the Closed World Assumption) and (b) relations in OWL are
restricted to binary ones. Existing approaches for the representation of temporal information in the Semantic Web
include Temporal Description logics (TDLs) [11, 12], Reifi-
cation, temporal RDF [13], Versioning [6], named graphs [28]
and the 4D-fluents (perdurantist) approach [9].

Temporal Description Logics (TDLs) extend standard description logics (DLs) that form the basis for semantic Web
standards with additional constructs such as always in the
past, sometime in the future. TDLs offer additional expressive capabilities over non temporal DLs but they require
extending OWL syntax and semantics with the additional
constructs.

Temporal RDF [13] proposes extending RDF by allow-

ing for labeling properties with the time interval they hold.
This approach also requires extending the syntax and semantics of the standard RDF, although representation over
RDF (e.g., using reification) can be achieved. Note that
Temporal-RDF doesnt offer support for expressing incomplete information by means of qualitative relations.

Reification is a general puprose technique for representing
n-ary relations using a language such as OWL that permits
only binary relations. Specifically, an n-ary relation is represented as a new object that has all the arguments of the
n-ary relation as objects of properties. For example if the
relation R holds between objects A and B at time t, this
is expressed as R(A,B,t). Furthermore, this is expressed in
OWL using reification as a new object with R, A, B and t
being objects of properties objects. Reification suffers from
two disadvantages: (a) data redundancy, because a new object is created whenever a temporal relation has to be represented (this problem is common to all approaches based
on non temporal Description Logics such as OWL-DL) and
(b) offers limited OWL reasoning capabilities [9] since the
relation R is represented as the object of a property thus
OWL semantics over properties are no longer applicable.

Versioning [6] suggests that the ontology has different versions (one per instance of time). When a change takes place,
a new version is created. Versioning suffers from several dis-
advantages: (a) changes even on single attributes require
that a new version of the ontology be created leading to
information redundancy, (b) searching for events occurred
at time instances or during time intervals requires exhaustive searches in multiple versions of the ontology, (c) it is
not clear how the relation between evolving classes is rep-
resented. Furthermore, ontology languages such as OWL
[7] are based on binary relations (relations connecting two
instances) without a temporal dimension.

Named Graphs [28] represent the temporal context of a
property by inclusion of a triple representing the property in
a named graph (i.e., a subgraph of the RDF graph specified
by a distinct name). The default (i.e., main) RDF graph
contains definitions of interval start and end points for each
named graph, thus a property is stored in a named graph
with start and end points corresponding to the time interval
that the property holds. Named graphs are not part of the
OWL specification [35] (i.e., there are not OWL constructs
translated into named graphs) and they are not supported
by OWL reasoners.

The 4D-fluent (perdurantist) approach [9] shows how temporal information and the evolution of temporal concepts
can be represented effectively in OWL. Concepts in time
are represented as 4-dimensional objects with the 4-th dimension being the time. Time instances and time intervals
are represented as instances of a time interval class which in
turn is related with time concepts varying in time. Changes
occur on the properties of the temporal part of the ontology
keeping the entities of the static part unchanged. TOWL
[34] is a temporal representation approach based on 4-D fluents that extends OWL syntax with temporal concepts and
supports quantitative time intervals.
2.2 Representing Spatio-Temporal Informa-

tion in Ontologies

Formal spatial, and spatio-temporal representations have
been studied extensively within the Database [14] and re-
cently, the Semantic Web community [15]. Spatial entities


cally represented using points, lines (polygonal lines) or Minimum Bounding Rectangles (MBRs) enclosing objects or regions and their relationships [21]. Relations among spatial
entities can be topologic, orientation or distance relations.
Furthermore, spatial relations are distinguished into qualitative (i.e., relations described using lexical terms such as
Into, South etc.) and quantitative (i.e., relations described using numerical values such as 10Km away, 45
degrees North etc.). Accordingly, spatial ontologies are defined based upon a reference coordinate system in conjunction with a set of qualitative topologic and direction relations (e.g., RCC-8 relations). Reasoning rules for various
relation sets have been proposed as well [16, 17].

Representing spatio-temporal knowledge has also motivated research within the Semantic Web community. Katz
et.al.
[19] propose representing RCC-8 relations as OWLDL class axioms (instead of object properies as in [20]) but
this approach has limited scalability as shown in [31]. Chen
et.al. [29] similarly to Sotnykova et.al. [30] propose an integrated spatio-temporal representation which includes qualitative relations but without specialized spatio-temporal reasoning support. Perry et.al. [22] proposed a representation
based on quantitative spatio-temporal data. Pellet Spatial
[31] offers reasoning support for RCC-8 topologic relations.
2.3 Querying Spatio-Temporal Information

in Ontologies

Query languages for RDF and OWL ontological representations such as SPARQL [8] and SeRQL [3] form the basis
for developing languages for querying spatio-temporal information in ontologies and the semantic Web. SPARQL
is a W3C recommendation query language. SPARQL and
SeRQL offer support of features such as: Graph transforma-
tion, RDF and XML Schema data type support, expressive
path expression syntax and optional path matching. Querying spatio-temporal information over the semantic Web using languages such as SPARQL is a tedious task. Recent
work on query languages for temporal ontologies include
TOQL [4] and t-SPARQL [28] using 4-D fluents and named
graphs respectively for the representation of temporal infor-
mation. In this work we extend TOQL [4] to handle spatial
(in addition to temporal) and also qualitative spatial and
temporal information.
3. SOWL ONTOLOGY MODEL

Following the approach by Welty and Fikes [9], to add
the time dimension to an ontology, classes TimeSlice and
TimeInterval with properties tsTimeSliceOf and tsTimeInterval are introduced. Class TimeSlice is the domain class
for entities representing temporal parts (i.e., time slices)
and class TimeInterval is the domain class of time intervals.
A time interval holds the temporal information of a time
slice. Property tsTimeSliceOf connects an instance of class
TimeSlice with an entity, and property tsTimeInterval connects an instance of class TimeSlice with an instance of class
TimeInterval. Properties having a time dimension are called
fluent properties and connect instances of class TimeSlice.
Fig. 1 illustrates a temporal ontology with classes Company with datatype property companyName, Product with
datatype properties price and productName, and Location
which represents spatial information (Fig. 3 and Fig. 4). In
this example, CompanyName is a static property (its value

Figure 1: Dynamic Enterprise Ontology

do not change in time), while properties produces, product-
Name, locatedAt and price are dynamic (fluent) properties
whose values may change in time. Because they are fluent
properties, their domain (and range) is of class TimeSlice.
CompanyTimeSlice, LocationTimeslice and ProductTimeSlice are instances of class TimeSlice and are provided to
denote that the domain of properties produces, locatedAt,
productName and price are time slices restricted to be slices
of a specific class. For example, the domain of property
productName is not class TimeSlice but it is restricted to
instances that are time slices of class Product.

The 4-D fluent mechanism forms the basis of the proposed
spatio-temporal ontology representation. In SOWL, the 4Dfluent representation is enhanced with qualitative temporal
relations holding between time intervals whose starting and
ending points are not specified. This is implemented by introducing temporal relationships as object relations between
time intervals. This can be one of the 13 pairwise disjoint
Allens relations [26] of Fig. 2.

By allowing for qualitative relations the expressive power
of the representation increases. Temporal RDF and 4-D
fluents both require closed temporal intervals for the representation of temporal information, while semiclosed and
open intervals cant be represented effectively in a formal
way. If their endoints are unkown, ad hoc approaches [28]
that handle open intervals by extending their start or end
point infinitely are not appropriate since lack of knowledge
must not be interpreted as if a property always holds in the
past or future.
In SOWL, this is handled by Allen rela-
tions: for example if interval t1 is known and t2 is unknown
but we know that t2 starts when t1 ends, then we can assert that t2 is met by t1. Likewise, if an interval t3 with
unkown endpoints is introduced and t3 is bef ore t1 then,
using compositions of Allen relations [26], we infer that t3
is bef ore t2 although both intervals endpoints are unkown
and their relation is not represented explicitely in the ontol-


ogy. Semiclosed intervals can be handled in a similar way.
For example if t1 starts at time instant 1 but its endpoint is
unknown, we assert that t1 is started by interval t2 : [1, 1].
Thus SOWL demonstrates enhanced expressivity compared
to previous approaches [28, 30, 15, 29, 34, 22, 18] by combining 4D-fluents [9] with Allens temporal relations and their
formal semantics and composition rules as defined in [26].

The 4D-fluent mechanism is also enhanced with several
types of qualitative spatial relations. These can be either
topologic or directional [17]. Fig. 3 illustrates a general ontology representation model for spatial information. Class
Location has attribute name (of type string). Also a Location object can be optionally connected with a footprint
class with subclasses: Point, Line, Polyline and MBR. Class
Point has two (or three in a three-dimensional representa-
tion) numerical attributes, namely X,Y (also Z in a threedimensional representation). For example, Point will be
the footprint of entities such as cities in a large scale map.
Class Line has point1 and point2 as attributes representing
the ending points of a line segment. Class PolyLine represents the surrounding contour of an object (or region) as
a set of consecutive line segments. An object (or region)
may also be represented by its Minimum Bounding Rectangle (MBR) specified by the four numerical attributes Xmax,
Ymax, Xmin and Ymin. Both representations may co-exist
in SOWL model (using one of them or both is a design de-
cision).

The spatial relations between regions can be easily extracted from their surrounding MBRs (or contours) by comparing their coordinates.
In an ontology, each spatialRelation connects two locations and has two subproperties
namely:
topologicRelation and directionalRelation. Fig. 4
summarizes all types of spatial relations within a common
ontology schema. Omitting either topologic or directional
relations from the representation is a design decision or depends on requirements imposed by the application domain.
Most frequently, only one relation type is used.

The topologic relations shown in Fig. 5, (DC, EC, EQ,
NTTP, NTTPi, TPP, TPPi, PO), referred to as RCC-8
relations [23] are also defined in the SOWL model. Direction relations are defined based on cone-shaped areas [24].
Other alternative approaches based on 2-D projections are
presented at [17, 38]. As shown in Fig. 6, eight direction

Figure 3: Ontology representation of spatial objects.

Figure 4: Ontology schema with spatial relations.

relations can be identified namely, North (N), North East
(NE), East (E), South East (SE), South (S), South West
(SW), West (W) and North West (NW) following the coneshaped areas approach of [24]. The cone shaped approach is
typically preferred over the projection based approach because it is more suitable for objects represented by points
(e.g., by their centroid).

Distance relations are also defined and can be used in
SOWL in conjunction with the above relation types. Notice
that, qualitative distance relations (e.g., far and near)
may be ambiguous especially in applications where a common scale for measuring distances is not provided. This is resolved when distance relations are expressed quantitatively
(e.g., 3Km away from city A) and stored in the ontology
as N-ary relations [2] (i.e., by defining an object with attributes the two related locations and a numerical attribute
representing their distance). In SOWL, we opt for the later
(quantitative) approach for representing distance informa-

jiMeets(i,j)Before(i,j)Overlaps(i,j)Starts(i,j)During(i,j)Finishes(i,j)Equals(i,j)Inverse RelationRelationAfter(j,i)MetBy(j,i)OverlappedBy(j,i)StartedBy(j,i)Contains(j,i)FinishedBy(j,i)Figure 5: RCC-8 topologic relations.

Figure 6: Cone-based direction relations.

tion.

Fig.7 illustrates the dynamic ontology schema representing the scenario Product T1 was produced in City
1 between May 2006 and June 2010 and then in City 2.
City 1 is west of City 2. In this example, we dont know
whether the product is still produced in City 2. Also note
that only the first temporal interval is defined. The second interval and both city locations are not specified exactly.

4. REASONING IN SOWL

Reasoning in SOWL is realized by introducing a set of
SWRL [39] rules operating on spatial (topologic or direc-
tional) relations as well as by a set of temporal Allen rules
for asserting inferred temporal relations. Reasoners that
support DL-safe rules such as Pellet [25] can be used for
inference and consistency checking over spatio-temporal re-
lations. In addition to reasoning applying on temporal and
spatial relations, the Pellet reasoner applies to the ontology
schema to infer additional facts using OWL semantics (e.g.,
facts due to symmetric relationships and class-subclass re-
lationships).
4.1 Spatial Reasoning

Additional spatial relations can be inferred from existing
ones using composition tables which are defined for both
topologic and direction spatial relations [27, 24]. A composition table defines the possible spatial relations holding

Figure 7: Instantiation example.

between two spatial entities (e.g., objects or regions), given
their spatial relations with a third one. Table 1 illustrates a
composition table using RCC-8 topologic relations. Corresponding composition tables for directional relations are defined in [24]. Spatial reasoning is then achieved by applying
rules implementing the inferred relations of a composition
table.

Table 1: Composition table for RCC-8 topologic re-
lations.

As shown in Table 1, only a limited set of table entries
leads to an unambiguous result. For example, the composition of the NTPP and DC topologic relations (i.e., object
A is into B and object B outside of C) yields the DC relation as a result meaning that A is outside of C. However,


unique relation as a result. Only 27 out of the 64 (RCC-8)
entries of Table 1, and only 8 out of the 64 compositions of
basic cone-shaped directional relations [24] can be used to
infer unique relations.

The SOWL spatial representation implements reasoning
rules for RCC-8 relations and cone-shaped direction relations using SWRL. Specifically, the eight direction relations
have been declared as transitive OWL relations (i.e., a relation such as South is transitive meaning that if the relation
holds between locations A and B, and between locations
B and C, it also holds between locations A and C). Their
inverse relations (e.g., North is the inverse of South) are
defined as well. By defining the transitive and inverse rela-
tions, all inferences of basic cone shaped direction relations
can be obtained.

Reasoning on RCC-8 relations combines transitive, sym-
metric, inverse and equality rules along with a set of composition rules (i.e., rules defining compositions of RCC-8
relations). Specifically, relation NTPP is transitive, relations DC, EC and PO are symmetric, relations NTPPi and
TPPi are inverse of NTPP and TPP respectivelly and EQ
corresponds to the equality relation for Location objects. In
SOWL, the spatial reasoner implements the RCC-8 composition rules of Table 1. However, not all 27 rules (yielding
unique relation as a result) need to be defined explicitly as
most of them can be inferred from others using the following
set of rules:

(rule 1)T P P (x, y)  DC(y, z) DC(x, z)
(rule 2)N T P P (x, y)  DC(y, z) DC(x, z)
(rule 3)N T P P (x, y)  EC(y, z) DC(x, z)
(rule 4)N T P P (x, y)  T P P (y, z) N T P P (x, z)
(rule 5)T P P (x, y)  N T P P (y, z) N T P P (x, z)

can be derived as follows:

The remaining rules are derived from these rules in conjunction with a set of inverse, symmetry, transitivity and
equality axioms. For example the rule:

T P P i(x, y)  N T P P i(y, z) N T P P i(x, z)
(a)T P P i(x, y) T P P (y, x)(inverse relations)
(b)N T P P i(y, z) N T P P (z, y)(inverse relations)
(c)N T P P (z, y)  T P P (y, x) N T P P (z, x)(rule 4)
(d)N T P P (z, x) N T P P i(x, z)(inverse relations)

Similarly to the example above, the remaining relations of
Table 1 are obtained by combining already defined rules in
conjunction with equality, symmetry, transitivity and inverse relation axioms.

Notice that, extracting spatial relations from the raw spatial data depends on the application and is not part of the
reasoning mechanism. Also, only rules yielding basic spatial
relations as a result (i.e., the eight RCC-8 and the eight directional raletions of Fig.5 and Fig.6 respectivelly) are sup-
ported. Consequently, only basic relations and not their

disjunctions can be asserted into the ontology. For example,
facts such as Region 1 is Overlapping with Region 2 can
be asserted while, Region 1 is Overlapping or is Bordering
with Region 2 cant. The model can be further extended
with additional relations corresponding to disjunctions of
basic relations (totaling 281 relations in case of both RCC-
8 and directional relations). Notice that using the full set of
relations leads to intractability. However, tractable subsets
of the full relations set are known to exist [17]. Such subsets
can be used in future extensions of the model for increasing
its expressive power.

Future versions of the reasoning procedure (work now un-
derway) will also support path consistency [17, 36, 42] (i.e.,
the concecutive application of compositions and intersections of existing relations until a fixed point is reached when
no additional relations are added, or until the empty set
is yielded implying an incosistency). Compositions and intersections of relations are expressed as SWRL rules, thus
reasoning remains an integral part of the model. Supported
relations must form a closed set under composition and in-
tersection. Also, they must have polynomial time complexity over the number of locations into the ontology when path
consistency is applied, thus avoiding the intractability problems of the full set of relations. Specifically, tractable sets of
RCC-8 topologic relations are known to exist [41, 40]. Corresponding work regarding cardinal direction includes [38,
43]. Notice finally that, selecting the supported relations
set is a design desicion which involves a trade-off between
efficiency and expressivity.

4.2 Temporal Reasoning

Temporal reasoning in SOWL relies on compositions of the
basic Allen relations of Fig. 2 which are defined in [26]. Table
2 shows the respective composition table. Additional rules
corresponding to compositions of more than 3 basic relations
which yield a basic relation as a result, (and they cant be
reduced to simpler rules), are defined as well. For example
the composition of relations MEETS, METBY and MEETS
(in that order) yields the relation MEETS as result, although
the basic compositions of MEETS and METBY doesnt yield
a simple relation as result. A rule corresponding to this
composition is part of the model as well.

The composition table of basic Allens relations is presented in Table 2. Relations BEFORE, AFTER, MEETS,
METBY, OVERLAPS, OVERLAPPEDBY, DURING,
CONTAINS, STARTS, STARTEDBY, ENDS, ENDEDBY
and EQUALS are represented using symbols B, A, M, Mi,
O, Oi, D, Di, S, Si, F, Fi and = respecivelly, and compositions with EQUALS are nor presented since these compositions keep the intitial relations unchanged. Again, not all
rules need to be defined explicitly: all rules yielding unique
relations as a result can be derived from a set of rules expressed using SWRL (not presented here because of space
limitations) in conjunction with four transitivity axioms
(for the relations BEFORE, FINISHEDBY, CONTAINS,
STARTEDBY), six inverse (relations AFTER, METBY,
OVERLAPPEDBY, STARTEDBY, CONTAINS and FINISHEDBY are the inverses of BEFORE, MEETS, OVER-
LAPS, STARTS, DURING and FINISHES respectivelly)
and one equality axiom (relation EQUALS). An example
of temporal inference rule is the following:

DU RIN G(x, y)  M EET S(y, z) BEF ORE(x, z)


the underlying representation mechanism for the end user.
Queries regarding static properties (properties not changing
in time) are issued as normal queries applied on the static
part of the ontology. A detailed description of the TOQL
query language is presented at [4]. For example the following
TOQL query retrieves the name of the company employee
x was working for, from time=3 to time=5:

SELECT Company.companyName
FROM Company, Employee
WHERE Company.hasEmployee:Employee AT(3,5)
AND Employee.employeeName LIKE x

The following Allen operators are also supported: BE-
FORE, AFTER, MEETS, METBY, OVERLAPS, OVER-
LAPPEDBY, DURING, CONTAINS, STARTS, START-
EDBY, ENDS, ENDEDBY and EQUALS, representing the
corresponding relations holding between two time intervals
specified either using quantitative (i.e., interval with specified end points) desrciption or qualitative Allen relations.

Spatial operators refer to topologic or directional spatial
relations represented in the underlying ontology. The result
of applying spatial operators are locations qualifying the expressions specified by the query. Locations are assessed using their names (although the user can issue queries addressing the underlying quantitative representation using coordi-
nates, but formulating such queries requires requires that
the user be familiar with the underlying spatio-temporal
representation).
The following spatial operators are
supported: NORTH OF, NORTHEAST OF, EAST OF,
SOUTH OF, WEST OF, SOUTHWEST OF, SOUTHEAST OF, INTO, OUTSIDE OF, SAME LOCATION AS,
BORDERING, OVERLAPPING, CONTAINS,
INTER-
NALLY BORDERING, CONTAINS AND BORDERING,
FARTHEST OF, NEAREST TO, IN RANGE. They correspond to the eight directional relations in Fig. 6, the RCC-8
relations in Fig. 5 and three operators (nearest, farthest and
range) involving distance information. Spatial operators are
issued in WHERE, followed by a string denoting the location
name according to the pattern <SPATIAL OPERATOR>
<STRING>. For example the following query retrieves the
name of the company located north of a given location at a
specific instant of time:

SELECT Company.companyName
FROM Company
WHERE Company NORTH OF Attica AT(5)

involving the IN RANGE operator have the
Queries
IN RANGE <Comparison operator>
following syntax:
<Number> OFF <String> where the string denotes location name. The following query retrieves the names of employees working for companies located in distance greater
than 100Km away from Athens in time interval between 5
and 10:

SELECT Employee.employeeName
FROM Company, Employee
WHERE Company IN RANGE >100 OFF Athens AND
Company.hasEmployee:Employee AT(5,10)

Table 2: Composition Table for Allens temporal re-
lations.

Again, only the 13 basic Allen relations of Fig.2 and rules
yielding basic relations are supported. Notice that only 97
out of 169 relations of Table 2 can be used to infer unique
relations. Other relations corresponding to disjunction of
basic relations are not supported (i.e., facts such as interval
1 meets or overlaps interval 2 cant be asserted into the
ontology). Notice that, using the full set of 213  1 relations
leads to intractability. Tractable subsets of the full set of
relations do exist [36, 42] and they can form the basis of a
future extension of the model (work now underway).

5. QUERYING SOWL

SOWL extends our previous work on TOQL [4] for querying temporal information in OWL to handle spatial and
spatio-temporal information. TOQL is a query language
that treats classes and properties of an ontology almost like
tables and columns of a database.
In addition to the existing set of temporal operators (i.e., the AT and Allen op-
erators) the language is enchanced with spatial operators
for handling both, spatial and temporal relations, thus the
IN RANGE and all RCC-8 and directional relations are supported by corresponding operators.

Similarly to TOQL, the SOWL query language follows an
SQL-like syntax (SELECT-FROM-WHERE) and supports
SQL operators and constructs such as LIMIT, OFFSET,
AND, OR,MINUS, UNION, UNION ALL, INTERSECT,
EXISTS, ALL, ANY, IN.

TOQL also introduces clause AT which compares a fluent property (i.e., the time interval in which the property is
true) with a time period (time interval) or time point and returns fluents holding true at the specified time interval, thus


The

resulting OWL ontology is

characterized by
SHRIF(D) DL expressivity and it is decidable since it
doesnt contain role inclusion axioms with cyclic dependences [32] (role axioms in SOWL are restricted to disjoint-
ness, transitivity and inverse axioms). Adding the set of
spatio-temporal qualitative rules of Sec. 4.1 and Sec. 4.2 retains decidability since rules are DL-safe rules as defined at
[37]. Notice that, if the spatial and temporal relations are
used in concept restrictions and definitions that introduce
anonymous individuals rules doesnt apply on these indi-
viduals, otherwise the resulting representation will become
undecidable. Furthermore, computing the rules has polynomial time complexity since only basic relations are sup-
ported: by restricting representation and reasoning support
to the basic Allen, RCC-8 and directional relations tractability is retained as shown in [17, 36]. Because any time interval
can be related with every other interval with one basic Allen
relation (basic Allen relations are mutually exclusive), between n intervals at most (n 1)2 relations can be asserted.
This also holds for spatial relations. Extending the model
for the full set of relations will yield an intractable reasoning procedure. This is resolved by restricting the supported
relations to tractable subsets of the full sets of relations.

7. CONCLUSIONS AND FUTURE WORK
We introduce SOWL, an ontology model capable of handling spatio-temporal information in ontologies. The SOWL
model extends the 4-D fluent representation of [4] to handle both quantitative and qualitative spatial and spatiotemporal information. The SOWL query language supports
a powerful set of operations including spatial and temporal
Allen operators. SOWL incorporates reasoning rules for inferring certain spatio-temporal relations from existing ones.
Query optimization, providing indexing support over both,
spatial and temporal information in main memory and secondary storage, extending the query language syntax to handle queries on ontology structure (i.e., sub-classes and super-
classes) and, most important, extending SOWL reasoning
to handle tractable sets of spatial and temporal relations (in
addition to the basic ones) using path consistency are issues
for further research and need to be investigated.
