Web Semantics: Science, Services and Agents on the World Wide Web 18 (2013) 1930

Contents lists available at SciVerse ScienceDirect

Web Semantics: Science, Services and Agents

on the World Wide Web

journal homepage: www.elsevier.com/locate/websem

Folksonomized ontology and the 3E steps technique to support
ontology evolvement
Hugo Alves, Andre Santanche

Institute of Computing - Unicamp, Avenida Albert Einstein, 1251, Cidade Universitaria, Campinas, Brazil

a r t i c l e

i n f o

a b s t r a c t

Article history:
Received 21 January 2012
Received in revised form
9 May 2012
Accepted 20 July 2012
Available online 14 August 2012

Keywords:
Ontology
Folksonomy
Semantic web
Folksonomized ontology

1. Introduction

Folksonomies are increasingly adopted in web systems. These social taxonomies, which emerge from
collaborative tagging, contrast with the formalism and the systematic creation process applied to
ontologies. However, they can play complementary roles, as the knowledge systematically formalized in
ontologies by a restricted group can be enriched by the implicit knowledge collaboratively produced by a
much wider group. Existing initiatives that involve folksonomies and ontologies are often unidirectional,
i.e., ontologies improve tag operations or tags are used to automatically create ontologies. We propose a
new fusion approach in which the semantics travels in both directions  from folksonomies to ontologies
and vice versa. The result of this fusion is our Folksonomized Ontology (FO). In this paper, we present
our 3E steps technique  Extraction, Enrichment, and Evolution  which explores the latent semantics of a
given folksonomy  expressed in a FO  to support ontology review and enhancement. It was implemented
and tested in a visual review/enhancement tool.

 2012 Elsevier B.V. All rights reserved.

An ontology, as a shared conceptualization, expresses a
consensus among people, conducting to a consensus among
machines. There are several strategies to look for a consensus,
e.g., a selected group of representatives and/or specialists designs
an ontology incorporating a consensual perspective of a given
domain [1]; tools extract latent semantics from a body of digital
artifacts produced by many people (a statistical consensus),
automatically deriving it to an ontology [2]. In the second case, a
promissory source of latent semantics comes from social tagging
mechanisms offered by a great number of web systems for content
storage, indexation and sharing. It is based on the free-form tags
that the users can associate to each resource, without the need
of a central vocabulary. In this context, the photo sharing system
Flickr has more than 5 billion images hosted and there are more
than 180 million URL addresses on Delicious. Beyond a collection
of tags produced by individuals, systems promote interactions
among people, resources and their tags  e.g., frequency-based
tag suggestion, and recommendation of related tags. The term
folksonomy  combining the words folk and taxonomy [3] 
has been used to characterize the product which emerges from this
tagging in a social environment.

 Corresponding author.

E-mail addresses: alves.hugoaugusto@gmail.com,

hugo.alves@students.ic.unicamp.br (H. Alves), santanche@ic.unicamp.br
(A. Santanche).

1570-8268/$  see front matter  2012 Elsevier B.V. All rights reserved.
doi:10.1016/j.websem.2012.07.004

Grubers classical definition of ontology as an explicit specification of a conceptualization [4] synthesizes its key aspect as
an intentionally systematized  or engineered [5]  specification.
According to Shirky [6], tag-based approaches differ from ontologies since tags organization derives from an organic work. It is a
shift from a binary categorization approach  in which a concept A
is or is not part of a category B  to a probabilistic approach 
in which a percentage of people relates A to B. Gruber [7], on the
other hand, claims that folksonomies and ontologies should not be
seen as opposite but rather as complementary, and he proposes a
TagOntology  a common ontology for tagging.

As we will present in this paper, we share Grubers view of
complementary roles. A folksonomy can represent a perspective
of a wider group, but the semantics extracted from the implicit
relations among tags are rather simple. An ontology is usually built
by a more restricted group, but has the richness of an engineered
product. There are initiatives towards exploring the interplay
between folksonomies and ontologies. However, one common
problem concerns their unidirectionality, i.e., in one direction there
are proposals to use ontologies to improve tags semantics, in the
other direction there are proposals to extract the implicit/potential
semantics of folksonomies in order to produce ontologies.

Differently from traditional techniques, we proposed a fusion
approach, called folksonomized ontology (FO), which goes beyond
this unidirectional perspective [8]. In one direction, the ontologies are folksonomized, i.e., the latent semantics from the folksonomic tissue is extracted and fused to ontologies. In the other
direction, the knowledge systematically organized and formalized

H. Alves, A. Santanche / Web Semantics: Science, Services and Agents on the World Wide Web 18 (2013) 1930

in ontologies gives structure to the folksonomic semantics, enhancing operations involving tags, e.g., content indexation and dis-
covery. The folksonomic data fused to an ontology will tune it up
to contextualize inferences over the repository.

Beyond the advantages of FOs we have shown in previous
papers [8,9]  concerning enhanced tag disambiguation, tag
suggestion and semantic similarity  they can be used to support
the review and enhancement of ontologies. The social semantics
 produced by a wide group of persons in their concrete needs of
classification  offers relevant information for the restricted group
of specialists, which can use them to enhance and update their
ontologies. In this sense, while a FO embeds the relations among
ontologies and folksonomies, it can make explicit concepts and
relations extracted from the folksonomies, which are not present
or contrast with a given ontology.

This paper focus on a technique we propose to support ontology
review and enhancement, which we call 3E steps: Extraction,
Enrichment and Evolution. It is founded on our work concerning
the folksonomized ontology [8] and its abstract framework [9],
which constitute the two first steps of the technique. In order to
validate our proposal, we developed a tool to extract folksonomic
data from Flickr and Delicious and to integrate them into the
WordNet ontology [10]. The data is further used in a visual tool
 first presented in this paper  that supports ontology review and
enhancement.

In our point of view, our 3E steps technique opens an interesting
field of applying latent semantics, socially produced by wide
communities, to improve engineered ontologies. Related work
addressing ontologies and folksonomies does not explore the full
potential of this interaction, since they do not retain the richness
of the semantics from both sources.

This paper is organized as follows. In Section 2, we discuss the
basis of our work. In Section 3, we present our 3E steps technique. In
Section 4, we describe the tool developed. In Section 5, we present
the related work. In Section 6, we conclude and discuss the future
work.

2. Ontologies, folksonomies and similarity

2.1. Onbeltologies and semantic similarity

Due to the wide spectrum of possible interpretations of the
term ontology [11], we start this section by presenting an abstract
model that represents our perspective to an ontology in this work.
It is a simplified graph-based model of an ontology, which is the
underlying model adopted by most of the related work, as we detail
in [9].
An ontology is represented as a tuple (GO, RT , FRT ), where GO =
C, ER is a directed graph with vertex set C formed by concepts
and arc set ER representing relations between concepts. RT is a set
of relation types between concepts. FRT is a function FRT : ER 
RT, which associates a type with each relation (arc). See more
details of this model and its relationship with other models  e.g.,
folksonomies and social ontologies  in [9].

One way to explore the semantics  formalized in ontologies and potential
in folksonomies  involves matching and
similarity. There are many applications, such as ontology engi-
neering, information integration and web query answering where
matching operations play a central role [12]. When tags are com-
pared, matching operations can be organized in two main broad
categories: lexical/syntactic and semantic. Lexical/syntactic approaches are mainly based on the proximity of spelling words and
their derivations (e.g., conjugations). One example of this category
is the edit distance, as the popular approach proposed by Levenshtein [13].

To go beyond the spelling, semantic approaches relate words
to a respective semantic representation  a concept. The matching

Fig. 1.
concepts.

Subsumption ontology showing the relationships among compared

is evaluated by analyzing semantic relationships among concepts,
e.g., equivalence, generalization, specialization, etc. This approach
can lead to better search results or expand the opportunity for
discovery, by finding and ranking similar or related results. It can
also subsidize better recommendation systems for tag definition. In
this context, ontologies are increasingly being adopted to formalize
the semantics of concepts and their relationships.

A challenge in semantic matching is how to weight the
relevance of relationships when similarities are confronted.
Consider a practical example of a program looking for the concepts
similar to judge. The output would be a set of concepts ranked by
their similarity to the input concept  judge. Two possible similar
concepts in the output are district attorney and child.

In order to put this comparison in a context, let us consider
the abstract model presented at the beginning of this section. A
comparison supported by this kind of ontology considers that the
compared terms are connected by a path. Fig. 1 illustrates the
three previous concepts as they appear in the WordNet ontology,
an ontology that meets our abstract model. In the figure, circles
represent concepts (C in the abstract model) and arcs represent
subsumption relations (ER in the abstract model, associated to the
is-a RT by the FRT function)  lower concepts specialize upper ones.
As can be seen in the figure, in the same way as a judge, a
district attorney is an official functionary. A child is a
person, just like judge. To rank them by similarity it is necessary
to define which concept is more similar to the concept judge.

Many approaches to calculate semantic similarity based on
ontologies were developed and we will further present some
relevant techniques.

2.1.1. Path-based

A naive method to evaluate the semantic similarity between
two nodes in an ontology is by measuring the shortest path
separating them. This is equivalent to the distance metric in a
is-a (subsumption) semantic net, defined by Rada et al. [14]:
distance(c1, c2) is the minimum number of edges between c1 and
c2. The similarity is then calculated as:
simrada = [1 + distance(c1, c2)]1.
(1)
As shown in [15], this approach is highly influenced by the level of
detail applied to describe branches of the ontology, i.e., branches
better detailed can contain longer paths than others, in spite of the
similarity distance, leading to biased evaluations. For example, the
comparison between judge and child (3 edges)  illustrated in
Fig. 1  results in the same similarity of district attorney
compared to judge (3 edges). One way to overcome this limitation
is by weighting the edges, leading to the problem of how to

determine the weights. According to Jiang and Conrath [16] there
are ontology aspects, such as depth of nodes and type of links,
which can be used to define these weights.

2.1.2. Depth-relative

One way to enhance the path-based comparisons is by
analyzing the most specialized common ancestor shared by two
nodes in the ontology. It is founded on specific kinds of taxonomic
ontologies based on subsumption relationships among terms, such
as the example of Fig. 1. Observations showed that siblings sharing
an ancestor deep in a hierarchy are more closely related than those
sharing an ancestor higher in the hierarchy [17]. Therefore, Wu and
Palmer [18] propose the following metric:
simwp(c1, c2) =
In which c3 is the least (most specialized) common ancestor of both
c1 and c2, N1 is the number of nodes on the path from c1 to c3, N2
the number of nodes between c2 and c3, and N3 the number of
nodes between c3 and the ontology root.

N1 + N2 + 2  N3

To improve the depth-relative metrics, Schickel-Zuber and
Faltings [19] proposed the OSS metric, based on an A-Priori
Score APS computation of all concepts in an ontology. Then, a
distance metric is defined from two coefficients (generalization
and specialization) calculated from the APS value.

2  N3

(2)

2.1.3. Content-based

Besides the ontology topology, there are approaches showing
that comparisons can be improved by analyzing also the content
of the ontology concepts. The content drives the weighting of
concepts, which in turn supports similarity algorithms. Resnik
proposed an approach based on information content [15] applied
to subsumption ontologies. Assuming that each concept in this
kind of ontology is a class representing a set of instances, the
probability of a given instance to belong to a more specific class
 e.g., child  is lower than the probability to belong to a more
general one  e.g., person. While the probability decreases, the
information about more specific classes increases  a necessary
consequence of their specialization. Information Content (IC) is a
measure created to evaluate this increase of information about
something. Let the probability of a given concept c be p(c), then
the IC of c is log p(c) [20].
In order to illustrate Resniks IC-based approach to evaluate the
similarity among terms, let us return to the example involving
the similarity ranking among judge and two other concepts:
district attorney and child. The first step is to find the most
specialized concept shared by judge and district attorney,
which is official functionary, as by judge and child,
which is person. Intuitively, we can infer that the probability of
an instance to belong to official functionary is smaller than
the probability of an instance to belong to people; conversely
the IC is higher. In this type of ontology, when two concepts
derive from the same generalization they share its characteristics,
therefore, judge is more similar to district attorney than to
child, since the former has higher IC. Therefore, the Resnik [15]
similarity metric was defined as follows:
simres(c1, c2) = max
cS(c1,c2)
In which the set S contains all concepts that subsume both
c1 and c2. Experiments [15] demonstrated that this approach
produces better results than the counting edges approach and is
not influenced by unbalances in ontology detailing. There are many
other approaches exploring probabilities to improve similarity
evaluation such as Lin [21] and Jiang and Conrath [16].

[ log p(c)].

All of these probability-based approaches lead to an extra
challenge, which is addressed in this work: how to evaluate the
probability of each concept of an ontology. Resniks strategy is
based on counting words extracted from a corpus of documents.

(3)

2.2. Folksonomies

In folksonomy-based systems, users can attach a set of tags to
resources. These tags are not tied to any centralized vocabulary, so
the users are free to create and combine tags. Some strengths of
folksonomies are their easiness of use and the fact that they reflect
the vocabulary of their users [22]. In a first glimpse, tagging can
transmit the wrong idea of a poor classification system. However,
thanks to its simplicity, users are producing millions of correlated
tags. It is a shift from classical approaches  in which a restricted
group of people formalize a set of concepts and relationsinto a
social approach  in which the concepts and their relations emerge
from collective tagging [6]. In order to perform a systematic
folksonomy analysis, to subsidize the extraction of its potential
semantics, researchers are proposing models to represent its key
aspects. Gruber [7] models a folksonomy departing from its basic
tagging element, defined as the following relation:
Tagging(object, tag, tagger, source).
(4)
In which object is the described resource, tag is the tag itself  a
string containing a word or combined words  tagger is the tags
author, and source is the folksonomy system, which allows us to
record the tag provenance (e.g., Delicious, Flickr etc.).

3. 3E steps technique

In this section, we describe our 3E steps technique  Extraction,
Enrichment and Evolution  to review and enhance ontologies, as
well as its relation with our approach to fuse an ontology and a
folksonomy, the folksonomized ontology (FO). The FO concept and
model as well as the two first steps of the technique  Extraction
and Enrichment  are based on works previously described in [8,9].
Since they are essential parts of the 3E steps technique, they are
summarized here.

3.1. Folksonomized ontology

We define a folksonomized ontology as an ontology aligned
with terms of a folksonomy and enriched with their contextual
data. By contextual data we mean data which emerges from a statistical analysis of a folksonomy, e.g. tag frequency, co-occurrence
and information content. The ontology to be folksonomized can be
of any kind, which meets the abstract model presented at the beginning of Section 2.1. The choice of the domain covered by the ontology and the folksonomy have direct impacts in the results. The
results will be as good as the overlap between their domains.

In one direction, the FO, which is aligned with tags, drives richer
semantic-based matching, categorization and tag suggestion. In
the other direction, contextual data is used to review and improve
the ontology. Fig. 2 schematizes the roles played by an ontology
and a folksonomy in a folksonomized ontology building. The
symbols in the figure are described in Table 1, whose column
Abstract Model will be further explained.

Following Fig. 2, the ontology was previously engineered to
formalize concepts and typed relationships, e.g., is-a, same-as,
part-of. Concepts and relationships in folksonomies, on the other
hand, are inferred by statistical analysis over tags and their co-
relations. They are not typed, as in ontologies, but carry substantial
contextual data, which subsidizes weighting concepts and
relationships. The resulting folksonomized ontology is a new entity
that fuses the best of both worlds, having typed and weighted
concepts and relationships.

In a previous paper, we defined an abstract framework to
make explicit the underlying models addressed in related work
concerning folksonomies, ontologies and their relationships. They
supported our abstract model for folksonomized ontologies [9].

H. Alves, A. Santanche / Web Semantics: Science, Services and Agents on the World Wide Web 18 (2013) 1930

Table 1
Symbols for types and values in FOs.

Symbol

Description
Weight of the relation derived from the total of co-occurrences between tags.
Type of the relation.
Frequency of the node, or one of its derivatives: probability or information content (IC).

Abstract model

F1
F2
F3

needs to be reviewed and/or enhanced. The first two steps (gray
boxes) are divided in phases illustrated inside the gray boxes.

At the end of each phase in the figure, there is a storage symbol
representing the intermediate data produced by the respective
phase. Inside each storage, there is a graph diagram synthesizing
the main elements captured by the respective phase. They will be
further detailed in the description of each phase.

3.2. Extraction

Fig. 2. Folksonomized ontology.

In this subsection, we summarize this model, which will be the
basis to present our technique and respective tool.
A FO is defined as a tuple (G, RT , F1, F2, F3), where G = V , E
is a directed graph with vertex set V formed by ontology concepts
and arc set E representing relations between these concepts, RT
is a set of relation types between concepts, F1 is a weighting
function F1 : E  N where the weight of the relation is derived
from the total of co-occurrences between tags represented by the
respective concepts, the function F2 : E  RT defines the type
of the relation as in ontologies and the function F3 : V  R
associates the information content (ic) related to each concept,
calculated by ic(c) =  log p(c), where p(c) is the probability
of a given concept c. This ic value also derives from a statistical
analysis of the folksonomy and will substantiate computations
of semantic similarity between the concepts using, for example,
Resnik similarity [15]. Table 1 relates the functions presented in
this abstract model (last column) to the symbols of FO diagrams.
In our practical experiments, the F2 function is still limited to
subsumption relations. However, for the sake of generality, we
distinguish our design (abstract model) from our implementation,
which is an instance of the abstract model. This distinction
predisposes the design to future expansions of its implementation,
which we plan in future developments.

Our work expands the Resnik proposal in three directions:

(i) proposing a strategy for calculating probabilities and IC of
concepts based on tags employed in social networks to
describe content;

(ii) defining multiple context-driven IC for each concept;
(iii) applying IC and co-occurrence data to review and enhance the

ontology.
In the following sections, we will describe our technique,
involving three steps: Extraction  the
illustrated in Fig. 3,
folksonomy data are mined in order to collect the metadata used
in the next step; Enrichment  the latent semantics from the
folksonomic tissue is extracted and fused with ontologies, and it
comprises the map and fuse phases; and Evolution  the ontology
managers could analyze the FO data and visualize the cases in
which the collaborative knowledge indicates that the ontology

This step is organized in two phases: collect and pre-
process/aggregate. The collect phase involves accessing external
systems in order to retrieve tag data from primary sources. The
pre-process/aggregate phase cleans the data and aggregates tags
according to their meaning in tagsets.

Web-based content portals offer web service interfaces to
access their data (APIs). Due to the heterogeneity in the APIs, the
tag data collecting module was designed to be customizable and
it was tested in Delicious and Flickr systems. It access these web
services to select and retrieve tags and their metadata, which are
stored in a database.

In order to better obtain the emergent properties of the
semantics extracted from folksonomies, this module was designed
to afford large datasets. They are stored as triples of resources,
users and tags, including their relations. Statistical data were
computed and stored during data collection, avoiding extra postprocessing work. These data  co-occurrence between tags and
frequency (used to calculate probability and information content)
 feeds subsequent phases that compute the values addressed by
the functions F1 and F3 of a FO, previously described in the abstract
model. The updating process is incremental, i.e., it collects and
stores just the differences of a previous execution.

The output of the collect phase stored in the database is a
collection of tags  represented as vertexes of a graph in Fig. 3 
their relations  represented as edges  the frequency of each tag
and co-occurrence between tags. The meaning of each symbol 
#,  and @  is described in Table 1. Data concerning users
and resources are stored as well.

In the pre-processing phase, unusual tags were eliminated to
improve the quality of the tag set. We classify as unusual those tags
with low number of occurrences, i.e.,  a constant LO. The value of
LO varies according to the size of the data set and the domain. In our
practical experiments, we achieved the best results with LO = 4.
The amount of unusual tags corresponded to less than 5% of the
total. Those tags are, in most of the cases, wrong spelled tags 
e.g., folsonomy  or personal tags  e.g., toread.

After this pre-processing phase, we aggregated tags that refer
to the same term. For instance, the tags tip and tips are tightly
connected and represent the same term. The grouping algorithm
is divided in two steps: marks analysis  the algorithm groups
tags differing only by special characters, e.g., , -, , etc.
 and morphological analysis  it groups tags by morphological
relatedness.

In order to represent multiple-word tags, users resort to
different strategies, e.g., concatenating words with or without
separating signs. By analyzing the similarity of tags without the
special characters we group tags like search-engine, search_engine,
and searchengine. These tags are clearly very close to each other
and represent different user approaches for using multiple-word

Fig. 3. 3E steps technique.

Fig. 4. Tagset nodes.

tags. So, all special characters of tags were removed, allowing us to
group tags that became equal without punctuation.

The morphological analysis and grouping go beyond spelling
comparisons, considering morphological variations as singular and
plural tags, or tags of different verb tenses. The algorithm retrieves
morphological variations of tags from the WordNet ontology,
grouping them together.

The output of the pre-process/aggregate phase is a collection
of tagsets  represented as vertexes of a graph in Fig. 3  their
relations, frequencies and co-occurrences  represented as edges,
asterisks and sharps respectively (see Table 1). The gray node of a
tagset represents a set of tags that share the same meaning. Fig. 4
illustrates a transition from a graph in which the nodes are tags to a
graph in which nodes are tagsets. As illustrated in the figure, many
edges connecting tag nodes of the original graph are combined in
a single edge connecting tagset nodes.

Each tagset represents a folksonomic concept. Tagsets will be
the concept units to be confronted to concepts in the ontology.
In the Evolution step, tagsets will play two important roles in
ontology review and enhancement. In an external perspective,
each tagset is an atom, embedding a concept shared by a
community. In an internal perspective, a tagset encapsulates a
network of interrelated tags concerning a shared meaning. Both
perspectives are explored in the Evolution step, when confronting
the folksonomic perception with ontologies.

3.3. Enrichment

This step is organized in two phases: map and fuse. The map
phase involves mapping tagsets produced in the previous phase
to concepts of an ontology. The fuse phase involves fusing the
ontology to the folksonomic data to produce the folksonomized
ontology.

The map phase is not a simple task, due to the lack of
semantic information related to the tagsets. The tagsets cannot
be directly mapped based on their words, since the same word
can have multiple meanings in the ontology. In WordNet, for
instance, a word can have multiple senses, called synsets, which

are differentiated through identifiers combining the original word
plus two affixes. The first one is a character that describes the
synset type (namely noun, verb, adjective, or adverb) and the
second one is a sequential number to differentiate each meaning.
For instance, the synset dog.n.01 represents a noun and it is one of
the synsets for the word dog.

To find out which concept  or which synset in Wordnet
 corresponds of each tagset, we developed a technique that
encompasses the relation of concepts (WordNet synsets) and tag
co-occurrences, divided in three steps: (i) tagset key election  a tag
of each tagset is chosen to represent it; (ii) co-occurrence selection
 the co-occurrence values of the tags are selected; (iii) tagset key
mapping  finally, each tagset is mapped to an ontology concept.
Consider a tag t, a tagset key, to be mapped to a synset and
a set C containing the tags having the highest co-occurrence
related to t (obtained in the pre-process step). Consider a group
S containing all synset candidates for mapping. Our algorithm
evaluates the distance of each synset s of S compared with t, in
the following way: (i) the set C must have a minimum set of tags
already mapped to synsets; this minimum is defined by a threshold
constant minmap; (ii) the similarity of a given s to t is calculated
by the sum of the distances of all c already mapped to s; (iii) since
there is no IC data yet, a path-based similarity algorithm is applied.
The synset s with the highest sum is the target of the mapping.

A tag group will only be processed if a minimum of the
elements in the corresponding co-occurrence list had already been
processed and mapped. Since the algorithm always selects a synset
based on tags already mapped, it was necessary to create a starting
set of tags manually mapped, to work as seeds. This initial selection
of seeds influences the coverage of the mapping process; there is
a tradeoff between the effort to manually map tags to concepts
and the coverage obtained with the algorithm. See further details
of the mapping algorithm at [8]. To the best of our knowledge,
this algorithm has many innovative characteristics. In order to
go beyond individual similarity analysis, it explores the network
of relations among terms. The quality of the association between
tagsets and concepts of an ontology, produced by this phase, will
be essential to better analyze the ontology by confronting it with
folksonomic data.

The result of this phase is illustrated in Fig. 3. The graph
of tagsets, their relations and statistical data, produced in the
previous phase, is mapped to the graph of an ontology. The
ontology represented as a graph  following the abstract model
defined in Section 2.1  is presented in the figure, the vertexes
represent concepts and the edges their relations. The meanings of
the symbols @, # and  are defined in Table 1. The product
of the map phase is a set of edges (dashed lines) mapping tagsets
to concepts. Each of these edges stores the degree of similarity

H. Alves, A. Santanche / Web Semantics: Science, Services and Agents on the World Wide Web 18 (2013) 1930

between the tagset and the concept, to be further used in the
ontology analysis.

The fusion phase combine the data from the previous phase to
produce a single unified Folksonomized Ontology. The resulting
graph presented in Fig. 3 is expanded in Fig. 2. It departs from
the ontology and enriches it with the statistical data obtained in
the previous phases. Therefore, concepts  which were mapped
to tagsets  are enriched with information content (asterisks) and
their relations are enriched with co-occurrence rates (sharps)  see
Table 1.

Resuming the abstract model presented in Section 3.1, the
graph G, the RT set and the function F2 are derived from the
preexisting ontology. The functions F1 and F3 represent the
enrichment computed from folksonomies.

Besides its value in ontology analysis, we showed in an
experimental evaluation [8]  involving 1,049,422 triples of
resources retrieved from Delicious  that the enrichment provided
by FOs can be explored to improve similarity analysis among
concepts. The statistical data associated to the concepts supports
enhanced comparisons by applying the Resnik approach [15].

3.4. Evolution

During the implementation of the two previous steps we
observed that our approach to relate folksonomies and ontologies
produced a rich data set, which can support ontology review and
enhancement:

A popular tagset without a respective concept in the ontology.
It can indicate a candidate to a new concept to be added in the
ontology.

A strong relation between two tagsets that has no correspondent
relation between the respective concepts. It can indicate some
important relation not represented in the ontology.

Tagsets embed rich information about relations among tags and
concepts. A tagset aggregates many tags around a meaning. Its
internal network of relations and the connections they have with
the concepts in the ontology are rich sources for the analysis of how
words are related to the meaning of concepts.

Therefore, the two previous steps were incorporated in our
3E steps technique, in which the third step is the evolution of
the ontology. This is also an important step, because it leads to a
symbiotic cycle, in which folksonomized ontologies help to tune up
the underlying ontologies which, in turn, will improve the results
of the folksonomized ontology itself.

4. Visual review/enhancement tool

In order to support ontology evolvement, we developed a tool to
visually explore the interplay between the latent semantics of the
folksonomy system and a given ontology. It is important to point
out that our tool is built upon the idea of offering more information
to the managers of the ontology. It is designed to explore data and
to suggest changes, but does not apply any automatic modification
and does not offer support for ontology editing.

In this section, we describe the tool we developed to support
ontology review and enhancement. In Section 4.1, we present the
implementation details of the tool. In Section 4.2, we summarize
its main characteristics. In Section 4.3, we describe the process
of reviewing and enhancing ontology relations. In Section 4.4,
we present practical examples of this process. In Section 4.5, we
describe the process of analysis inside a tagset with examples.

4.1. Implementation aspects

Fig. 5 presents an architectural diagram of the tool. These are

the main modules:
Web system Web-based repositories aimed at sharing content,
links or metadata  e.g., Delicious and Flickr  which use
tag-based classification mechanisms.

FO builder Responsible for collecting folksonomy data from web
systems. It implements the two first steps of the 3E
steps technique (see Fig. 3). The module is implemented
in python and uses SQLite to manage the database. It
is designed to be extensible, i.e., it allows developers
to extend it to work with different kinds of web
systems. The default implementation works with Flickr
and Delicious. The Delicious extension adopts a thirdparty library, the DeliciousAPI [23]. The module retrieves
and stores the data in an incremental way, i.e., only the
difference from the previous processing is stored, saving
processing resources. The data is further filtered, cleaned,
and homogenized as described in the 3E steps technique.
Finally, the module maps tagsets to ontology concepts
and fuse them to produce a FO.

Review/enhancement server The interactive module  responsible
for visually presenting the data to the user  is designed
to run over the browser. It is organized in two sub-
modules, a server module implemented in python and
a client module implemented in HTML + JavaScript.
The server sub-module is responsible for the following
operations: (i) it builds the HTML + JavaScript module
from a template and dispatches to the client (web
browser); and (ii) it interacts with the database retrieving
and filtering relevant information for the client.

Visual review/enhancement client This module uses a third-party
library, JavaScript InfoVis Toolkit [24], to provide the
interactive visualizations. It is responsible for visually
presenting data to the end-user. This tool is detailed in
the next sub-section.

4.2. Visual review/enhancement

Fig. 6 shows a screenshot of the main screen of the Visual
Review/Enhancement Client, illustrated in Fig. 5. It is organized in
two main areas: control panel  displayed in the bottom side  and
an interactive graph area  displayed in the top side. The control
panel can switch among three possible sub-panels: navigation,
details and history.

In Fig. 6, the Details Panel is selected. In the interactive graph
area, a segment of an FO is displayed, centered in the physical_entity
node. The tool generates an interactive graphical representation of
the segment. In this representation, the user can drag the nodes,
zoom, and pan the visualization. When a node is clicked, the
information associated with it is shown in the Details Panel. The
data can be explored in two modalities: relations and concepts.
They are detailed in the next subsections.

4.3. Analyzing relations

The goal of this modality is to analyze the relations among
concepts in the ontology and confront them with relations
captured from the folksonomy. Fig. 7 shows a typical graph
presented for analysis.
It derives from our abstract model
presented in Section 3.1. Its elements are described in Table 2.
There are three parameters that control the details of the
visualization: more nodes, virtual nodes, and edge.

As mentioned before, the Details Panel shows the correspondent information of the selected node. It shows co-occurrence and
ic values  representing the functions of the formal model F1 and
F3, respectively.

There are two approaches for navigation: overview or compare.
In the overview approach, the user can freely navigate in the entire
FO tree, by using the interactive focus provided by the hyperbolic
tree. In the compare approach, the user will analyze a given pair of
concepts, the path of relations that connects both and the relations
with near concepts. Therefore, the first step for an analysis in this
approach is to select that pair of concepts.

Table 2
Description of the elements of a graph to visualize and to analyze relations.

Fig. 5. Architectural diagram of the review/enhancement tool.

Element
Graph
Vertex

Rounded black

Square gray

Rectangular
Rounded big

Edge

Thin

Thick

Description
Visually presents a clip of the graph G of the abstract model.
All vertexes are members of the V set of the abstract model.
Concept of the originating ontology fused to a correspondent tagset coming from the originating folksonomy. It contains a value of
information content for the vertex, defined in the abstract model by the function F3.
Virtual node  concept of the originating ontology which has no correspondent tagset in the originating folksonomy. They are necessary in
the FO to maintain its topology. For example, two concepts A and B coming from the originating ontology have correspondent tagsets in the
originating folksonomy. The path between A and B in the originating ontology includes a third concept C in the middle. This concept has no
correspondent tagset in the folksonomy. Therefore, C is included in the FO to keep the topology, but it is considered a virtual node.
Focus of a given analysis  an analysis can focus on the comparison of two concepts, which will be presented as rectangular vertexes.
Considering that the FO shows subsumption relations, when two concepts are the focus of the analysis (rectangular), for each concept, the
tool will show the path to the most specialized ancestor shared by both. This ancestor is highlighted as a big rounded node. The analysis of a
common ancestor is fundamental to define the similarity between two concepts, as described in Section 2.
All regular edges are members of the set E of the abstract model.
Regular edge  relation between two concepts of the originating ontology fused to a correspondent relation between two tagsets coming
from the originating folksonomy. Each edge has a weight (of the relation) and is typed, defined in the abstract model by the functions F1 and
F2 respectively. As mentioned before, the current implementation of the tool handles only subsumption relations coming from the ontology,
but it was designed to afford other relations in future versions.
Strong relation between two tagsets of the originating folksonomy which has no correspondent relation in the originating ontology. Strong
relations in the folksonomy are those having high co-occurrence value. The thickness of the edge is proportional to the amount of
co-occurrences. This type of edge can indicate important relations discovered in the originating folksonomy, which can trigger a review
and/or an enhancement of the originating ontology.

When the user selects the compare approach to navigate, it is
possible to manually assign two concepts of the FO or enter in the
assisted mode, in which the tool finds two candidates to review.
The basic principle of the assisted mode is to look for relevant
discrepancies among data coming from the ontology and from the
folksonomy. The current version can find two concepts in the FO
that have a weak similarity in the originating ontology, but have a
strong connection in the originating folksonomy.

In the assisted mode, the tool runs the following process to
automatically find two candidates for analysis:
 A set of candidate concepts is selected to be tested. The size of
this set can be configured.
 The tool creates an analysis tree with a branch of the original FO
for each selected candidate. This branch includes all concepts
(and the respective relations) that can be reached departing
from the candidate concept, in a given customizable depth.
 The next step involves finding two nodes with low similarity
 considering the path coming from the FO  and high
co-occurrence  considering the data extracted from the
folksonomy.
 For each concept in a given branch, the tool tests if its
co-occurrence with the candidate concept is higher than a
threshold. If so, the distance of both is tested.

 If the two conditions  higher co-occurrence and long distance
(low similarity)  are satisfied, the pair of concepts is selected
to be analyzed in the visual tool.

4.4. Practical examples of relations analysis

In this subsection, we will show practical examples of the
tool, illustrating its support for ontology enhancement and the
improvements achieved by the use of FOs.

Fig. 8 shows a visualization generated by the tool. The pair of
concepts to be analyzed in the visualization is (bible, christian),
and the common ancestor  entity  is highlighted as well. This
example shows a scenario in which the tool can be used to improve
the ontology. The concepts bible and christian are separated by a
long path and their common ancestor, entity, is the most general
concept  the root  in the ontology. Any ontology-based approach
to compare the terms  see Section 2.1  will return a low
similarity, due to the long path and the generic common ancestor,
which has zero of information content. This was also observed
in our practical experiments confronting our approach to related
work.

When the parameter edge is activated, the tool draws a
strong edge between bible and christian, as they have a strong

H. Alves, A. Santanche / Web Semantics: Science, Services and Agents on the World Wide Web 18 (2013) 1930

Fig. 9. Visualization with more nodes, virtual nodes, and edge.

co-occurrence in the originating folksonomy, see Fig. 9. This edge
does not mean that both nodes should have a direct link, but just
emphasizes that something must be reviewed or improved in the
ontology, considering the observations of the folksonomy.

In this scenario, the ontology managers  facing the task of
enhancing the ontology  can use the tool to find and visualize
how and where the ontology could be improved. If they need more
nodes in the visualization, they can use the respective parameter
to increase the number of nodes.

Fig. 10 shows the resulting visualization when More Nodes and
Virtual Nodes parameters are selected. This parameter highlights
the real nodes making the virtual nodes (see Table 2) less visible.
The distinction between regular and virtual nodes makes explicit
the contrast between concepts shared by the ontology and the
folksonomy, and concepts of the ontology not present in the
folksonomy. This is an useful synthesis to analyze the popular use
of concepts present in the ontology.

Besides the review/enhancement process, the visualization tool
can be used to inspect the improvements of the FOs, when
confronted with traditional ontologies. In Fig. 11, the tool is
focusing on the pair of nodes (graphics, inspiration). This pair has a
high relation in the folksonomy, but they are separated by a great
distance in the ontology. Our practical experiments showed that
when statistical data  information content and co-occurrences
 embedded in the FOs are explored in the similarity algorithm,
they achieve better results than ontologies alone. This case shows
that the FO is an entity that can support improvements in the
operations over its data, because it can use more than one source
of semantics  folksonomies and ontologies.

The following example shows another improvement of the FO
in the opposite direction. In Fig. 12, the tool is focusing on the
pair of nodes (war, conflict). Conflict is a concept coming from the
originating ontology, which has no corresponding tagset in the
folksonomy. Conflict is a virtual node, inserted to keep the topology
of the ontology, and in the traditional folksonomies it would not be
considered. Since the FO considers virtual nodes in the comparison
algorithm, even if they do not appear in the folksonomy, it will
achieve better results in this kind of scenarios when compared
with traditional folksonomies.

Fig. 6. FO visualization.

Fig. 7. Graph to visualize and to analyze relations.

4.5. Inside concepts

As mentioned in Section 4.2, the second approach to re-
view/enhance ontologies allows the user to inspect inside a tagset
and its relation with other tags in the folksonomy.

As described in Section 3.1, in order to relate tags to concepts
of an ontology, the tag is not evaluated alone. There is a network
of relations among a tag and other tags, which have high cooccurrence with it. This network is essential to provide a context
to the tag. It is the basis to relate a tagset to a given concept.

Fig. 8. Default visualization.

Fig. 10. Visualization with more nodes and virtual nodes.

Table 3
Description of the elements of the diagram to inspect a tagset.

Element
Label

Highlighted label

Line connecting labels
Label thickness

Description
Tag of a folksonomy. The figure always shows more than ten tags. One of the tags is the focus of
the analysis, nine tags are those which have more co-occurrences with it, and the remaining tags
are the ones obtained transitively from the nine others.
The highlighted label (the largest thickness in the graphic) is the tag which is the focus on the
analysis. In the example, it is the spellcheck tag. It is also the key tag of a given tagset (see
Section 3.1).
Co-occurrence relation between two labels.
The thickness is the space occupied by the label in the circle. It defines the intensity of the relation
of a given tag with the focus of the analysis, i.e., the number of co-occurrence with these two tags.

Fig. 12. Visualization: Improvement of virtual nodes.

Fig. 11. Visualization: Improvement of FOs.

A graphical presentation of a tag and its co-occurrences
is therefore a rich source of information. Fig. 13 shows that
presentation. Table 3 describes the elements of the figure.

The intensity evaluation of relations among tags considers also

transitive relations among tags.

H. Alves, A. Santanche / Web Semantics: Science, Services and Agents on the World Wide Web 18 (2013) 1930

occurs in the pre-process phase of the extraction step  as in 3E
steps  aiming to improve the quality of the data, grouping the tags
that have strong relations.

Specia and Motta [27] proposed a technique to map clusters
of tags to ontology concepts, making explicit the semantics of
the tag space. They depart from a set of tags, creating clusters of
high-related tags, using co-occurrence information. The relations
between these clusters are aligned with external resources like
Wikipedia, Google and ontology bases to produce an ontology.
Those resources were used to improve the folksonomic data,
mainly making explicit the semantics of the tags.

In the step of pre-processing, they group morphologically
similar tags using the Levenshtein similarity metric [13]. As the
authors point out, this technique could find minor variations (cat
and cats, and san_francisco, sanfrancisco and san.francisco are the
examples given by them). But it is important to mention that the
use of this technique could lead to undesired results. For example,
the distance between the pair of words range and orange is the
same as the distance between the pair orange and oranges. While
the latter have much semantic relatedness, the former does not.
For this reason, we used stemming algorithms to group tags.

Angeletou [28] proposed a tool, called FLOR, to perform
semantic enrichment on folksonomic data. The first enrichment
step is connecting tags to semantic entities and then connecting
those entities directly to resources managed by the system.
Connecting tags to semantic entities is divided into three sub-
steps: (i) lexical processing, in which the decision of which tags are
meaningful is made; and the normalization step, selecting lexical
representations for each tag; (ii) semantic expansion, in which the
tags are processed in order to disambiguate their meanings, using
WordNet; and (iii) semantic enrichment, where the tags are finally
mapped to ontology concepts  ontologies that were found by
querying web repositories.

Our approach to map ontology concepts and tags are very close
to this tool. For example, both approaches organize the tags into
tagsets, i.e., sets of tags with strong relations. Both approaches use
WordNet to extract the latent semantics of the folksonomic data.
But, differently of our approach, the FLOR tool aim to annotate
resources annotated by tags with semantic entities. We focused
on mapping folksonomic data on concepts of a single ontology,
enriching it in the process.

Cattuto et al. [29] calculated several measures of tag related-
ness, based in their co-occurrences, mapping them to WordNet
synsets (sets of synonyms). They do not group related tags; each
individual tag of the folksonomy is associated with a concept in
the WordNet ontology. Synsets are sets of synonyms that play an
equivalent role of concepts in ontologies. The similarity of the related synsets are then transferred to the respective tags. The step
Enrichment of our approach have similar objectives, but are not
based only in the co-occurrences of the tags, but in the topology of
the target ontology and the relations between its concepts as well.
Cantador et al. [30] proposed a mechanism to filter and classify
tags, producing a graph of clusters. Then, they mapped these
clusters to knowledge bases, like WordNet and Wikipedia, aiming
to discover the corresponding semantic entities. Different from
previous approaches, in order to map clusters to ontologies, they
predefine a set of possible categories and relation types among
tag sets, using direct association or natural language processing
heuristics.

They build categories and then classify tags into them. Our
approach, on the other hand, does not classify tags in predefined
categories, but map them to ontologies concepts. In this way, we
can build more malleable entities, apt to easy expansion, in order
to accommodate new tags and relations.

Like many of the related work, Tesconi et al. [31] used external
resources, namely Wikipedia, and ontologies like WordNet and

Fig. 13. Diagram to diagram to inspect a tagset.

5. Related work

Our work has some common aspects with the related work
presented here. We process sets of tags to create clusters of highrelated tags and we use knowledge bases to map those clusters
to ontologies as well. The main limitation observed in related
work concerns their unidirectionality. Proposals to automatically
build ontologies from scratch, based on data coming from texts or
folksonomies, produce rather simple structures and do not explore
the richness of preexisting engineered ontologies. Proposals which
explore the interplay between folksonomies and ontologies are
limited to map tags or sets of tags to ontologies. Nevertheless, they
do not enrich the ontology itself with the statistical data extracted
from folksonomies.

Beyond this unidirectional enrichment, we proposed a fusion
approach. The result is the Folksonomized Ontology, which
combines semantics from both contexts. These characteristics are
also the differential of our 3E steps technique, which explores
the information derived of this function to support ontology
evolvement.

Many approaches to automatically or semi-automatically develop ontologies were proposed. Some of them aim at discovering relations and building ontologies from a given corpus of texts
[2,25]. Alternative approaches adopt folksonomic data [26,27], instead of texts. In either case, the ontologies are built from scratch.
These approaches contrast with our proposal, which does not build
new ontologies, but departs from existing ones and takes advantage of their structure to build a new entity, which is an enriched
(folksonomized) ontology.

Damme et al. [26] employ folksonomic data and lexical/semantic
resources, like Leo Dictionary, Wordnet, Google and Wikipedia, to
build and to maintain ontologies. They aggregate sets of tags, mapping them to ontology concepts. The relations of those ontologies
are mapped back to the folksonomy, in order to produce a social
ontology. One important aspect of their proposal is the mechanism
to validate the ontology, in which the community that produced
the folksonomy validates the results by accepting or discarding the
proposed concepts.

They employ stemming algorithms to clean the folksonomic
data, specially plural nouns and conjugated verbs. This operation

YAGO [32]. Their objective was disambiguate tags, semantifying
them. They developed an algorithm to disambiguate tags, grouping
them by sense. Its tagsets are finally linked to Wikipedia categories
and ontology concepts, producing social ontologies.

Therefore, they cannot take into account tags that does not have
a direct map to an external resource  e.g., Wikipedia concept. As
folksonomies allow users to create tags as they wish, it is likely that
new terms would emerge. In our approach, tags without direct map
to ontology concepts would still be considered because they could
be grouped to ones that are mapped.

Bang et al. [33] proposed the concept of structurable tags,
in which tags can be linked through relations, allowing basic
inference operations. They expanded the folksonomic model,
allowing users to create two types of relations between tags:
inclusion and synonymy. These types of relations support the
transformation of
folksonomic data into semantically richer
models. Due to the synonymy relation, the system can group tags
with the same meaning. On the other hand, the inclusion relation
led to an hierarchical organization, as a simplified ontology.

In the 3E steps, the users are not forced to change their natural
use of folksonomies. The extra effort of creating relations between
the tags is the responsibility of the system, in an automated way.
Heymann and Garcia-Molina [34] proposed an algorithm to
build a graph departing from folksonomic data. It first aggregates
tags in tag vectors, in which the vtl[om] corresponds to the number
of times that the tag tl annotates the object om. In the resulting
unweighted graph, the vertexes will be the tags, and there will
be an edge for each pair of tags whose relatedness is above a
threshold. The resulting graph, without weights and maintaining
just the relevant edges, contains a latent hierarchical taxonomy.
It is captured by an algorithm that builds a subsumption hierarchy,
derived from the centrality of each node in the graph.

As ontologies become bigger and more complex, the process
of evolving them requires an increasing effort. As pointed out
by Ding and Foo [35], almost all techniques to evolve ontologies
require manual intervention. According to Stumme et al. [36], even
though the ontology evolving process requires human experts, in
order to address the increasing complexity of modern and large
ontologies, tools to support the evolving process are necessary.
This observation motivated our work to propose a technique and a
related tool to support ontology evolvement.

6. Conclusion

This paper presented our 3E steps technique to review
and enhance ontologies and our approach to build and use a
folksonomized ontology (FO) in this context. A FO is a hybrid entity
fusing folksonomies and ontologies. It is a symbiotic combination,
taking advantage of both semantic organizations. Ontologies
provide a formal semantic basis, which is contextualized by
folksonomic data,
improving operations over tags based on
ontologies. Conversely, the FOs were used as tools to analyze
the ontology and to support the process of ontology evolvement,
showing the discrepancies between the emergent knowledge of a
community and the formal representation of this knowledge in the
ontology.

In this paper, we described the 3E steps: Extraction, Enrichment,
and Evolution. Extraction is the step where the semantic information is collected from the folksonomies and processed. In the Enrichment step, we combine the two entities, building a third one,
with the best of both worlds. Finally, Evolution is the step where
the folksonomized ontology is used to support the review and enhancement in the original ontology, closing the circle. A review and
enhancement tool was presented in this paper.

In our point of view, the work presented here opens an
interesting field of applying latent semantics, socially produced
by wide communities, to improve engineered ontologies. Related
work addressing ontologies and folksonomies does not explore

the full potential of this interaction, due to their unidirectionality.
Our fusion approach explores the symbiotic complementarity of
ontologies and folksonomies.

Future work include: (i) to expand the folksonomized model to
include other relations (besides the generalization); (ii) to run tests
in specialized contexts applying domain ontologies; and (iii) to
expand our tool that allows the visualization of the individual tags
inside a cluster, improving the observation of the interrelation
between the tags.

We consider the technique and the respective tool presented
in this paper a first step that opens a perspective to review and
enhance ontologies. We oversee many other relevant information
that we can obtain from folksonomies, which can be computed,
fused to ontologies and displayed in our tool. Nevertheless, there
is still a wide range of possibilities to visually explore the available
data.

Acknowledgments

This work was partially financed by CNPq, FAPESP, INCT in Web

Science (CNPq 557.128/2009-9) and Unicamp/PAPDIC.
