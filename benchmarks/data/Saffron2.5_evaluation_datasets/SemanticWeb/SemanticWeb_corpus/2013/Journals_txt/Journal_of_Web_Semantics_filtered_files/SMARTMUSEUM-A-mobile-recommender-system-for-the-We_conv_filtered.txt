Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

Contents lists available at SciVerse ScienceDirect

Web Semantics: Science, Services and Agents

on the World Wide Web

journal homepage: www.elsevier.com/locate/websem

SMARTMUSEUM: A mobile recommender system for the Web of Data
Tuukka Ruotsalo b,a,c,, Krister Haav h, Antony Stoyanov g, Sylvain Roche f, Elena Fani e, Romina Deliai d,
Eetu Makela a, Tomi Kauppinen a, Eero Hyvonen a
a Department of Media Technology, Aalto University, Finland
b School of Information, University of California, Berkeley, USA
c Helsinki Institute for Information Technology HIIT, Aalto University, Finland
d Heritage Malta, Malta
e Museo Galileo, Italy
f INRIA Rennes Bretagne Atlantique, France
g Melon Technologies Ltd., Bulgaria
h Apprise Ltd., Estonia

a r t i c l e

i n f o

a b s t r a c t

Article history:
Received 21 September 2011
Received in revised form
26 February 2013
Accepted 5 March 2013
Available online 1 April 2013

Keywords:
Web of Data
Semantic Web
Information retrieval
Recommender systems
Mobile systems
Cultural heritage

Semantic and context knowledge has been envisioned as an appropriate solution for addressing the
content heterogeneity and information overload in mobile Web information access, but few have
explored their full potential in mobile scenarios, where information objects refer to their physical
counterparts, and retrieval is context-aware and personalized for users. We present SMARTMUSEUM, a
mobile ubiquitous recommender system for the Web of Data, and its application to information needs
of tourists in context-aware on-site access to cultural heritage. The SMARTMUSEUM system utilizes
Semantic Web languages as the form of data representation. Ontologies are used to bridge the semantic
gap between heterogeneous content descriptions, sensor inputs, and user profiles. The system makes
use of an information retrieval framework wherein context data and search result clustering are used in
recommendation of suitable content for mobile users. Results from laboratory experiments demonstrate
that ontology-based reasoning, query expansion, search result clustering, and context knowledge lead
to significant improvement in recommendation performance. The results from field trials show that the
usability of the system meets users expectations in real-world use. The results indicate that semantic
content representation and retrieval can significantly improve the performance of mobile recommender
systems in knowledge-rich domains.

 2013 Elsevier B.V. All rights reserved.

1. Introduction

The essence of Mark Weisers vision of ubiquitous computing
was the creation of a context-aware environment that weaves itself into the fabric of everyday life until it is indistinguishable from
it [1]. This vision, which involves information to be exchanged by
systems transparently and context-dependently bringing unprecedented amounts of information accessible for mobile users, has become closer to reality than ever. Advances in wireless networks

 Corresponding author at: Helsinki Institute for Information Technology HIIT,

Aalto University, Finland. Tel.: +358 505661400.

E-mail addresses: tuukka.ruotsalo@aalto.fi (T. Ruotsalo), krister@apprise.eu
(K. Haav), antony.stoyanov@melon.bg (A. Stoyanov), sroche@inria.fr (S. Roche),
elenaf@imss.fi.it (E. Fani), romina.delia@gov.mt (R. Deliai), eetu.makela@aalto.fi
(E. Makela), tomi.kauppinen@aalto.fi (T. Kauppinen), eero.hyvonen@aalto.fi
(E. Hyvonen).

1570-8268/$  see front matter  2013 Elsevier B.V. All rights reserved.
http://dx.doi.org/10.1016/j.websem.2013.03.001

and mobile devices have shifted the main problem from access of
information to filtering of pertinent information [2,3].

In this paper, we describe the design and development of a ubiquitous computing system SMARTMUSEUM1 that presents users
with recommendations for sites, such as museums or buildings of
architectural interest, and objects on those sites, such as sculptures
or other works of art, and provides explanatory descriptions and
multimedia content associated with individual objects.

The central research challenge for such a system is to deliver
the right content for the users given the users information need
and context. In order to achieve this, researchers have proposed
recommender systems to deliver and present information about
objects that are likely to be relevant for the users [47].

Context information can be utilized to enhance the accuracy of
recommender systems through specification of information about

1 www.smartmuseum.eu.

the situation of the users [8]. Sensor data from the users environment can be captured and used to assist in the filtering process.
This is particularly important in mobile scenarios where the usability of mobile devices often limits the users willingness to perform
complicated search queries [9]. Mobile systems should not require
more than minimal user intervention and should be minimally intrusive to maintain users trust toward the systems [8].

Semantics is another problem that is seldom considered in relation to mobile recommender systems. Most of the current systems have been designed for traditional Web environments and
mobile computing scenarios wherein the systems can operate with
a large number of users, varying devices and fluctuating network
conditions, but still operate within well-defined boundaries of controlled data models [10,11]. Typically, recommender systems filter
the information on the basis of only the users overlapping preference with respect to objects. A shared underlying assumption of
such systems is that the set of objects and of users is relatively stable and that users preferences are similar and overlapping. This
assumption has become obsolete since the data describing the
objects are increasingly distributed across the Web, refers to physically decentralized real world objects, and are consumed in con-
text. Therefore, there is a raising for data access methods that
enable semantic interoperability and dynamic filtering of local independently created data.

In particular, mobile recommender systems have been recog-

nized as suffering from the following problems [5,12]:
1. Heterogeneity of content. The data can be described with different structures, vocabularies and levels of granularity. Semantic heterogeneity makes it difficult to compare content
descriptions and users profiles.

2. Over-specialization. Standard recommendation methods can
lead to over-specialization wherein objects are recommended
that are too similar to the majority of the objects the user has
preferred in the past.

3. Context sensitivity. Standard recommendation methods are unable to distinguish between matching the context and matching
the content. However, users information needs can only be fulfilled with objects that match to a certain balance of content and
context features.
Our objective is to study the role of ontology-based methods
for overcoming these problems. We show how semantic heterogeneity can be reduced and context data supported by means of
semantic data representation via content annotations that refer to ontologies. We also present a search result clustering
method that, together with semantic data representation, reduces
over-specialization and further improves recommendation perfor-
mance. The annotations can be accessed through a recommendation framework that supports any data described within the
Resource Description Framework (RDF) [13] without any need for
domain specific configuration.

We present results of laboratory experiments conducted to test
the performance of the SMARTMUSEUM recommender system.
The results of our evaluations show that the semantic data rep-
resentation, search result clustering, and context data introduced
in our information filtering framework significantly improve the
performance of the recommender system. We also show that the
SMARTMUSEUM system enables a highly satisfying user experi-
ence.

The rest of the paper is structured as follows. The next section
discusses the related work. Then we present a general description
of the SMARTMUSEUM system and use cases. Section 4 presents
the components and the technical architecture of the system.
After that, we provide technical details of the context-information
management, the recommender system, and the user profiling
methods. Section 6 discusses the laboratory experiments and
Section 7 presents the user trials. We conclude with a discussion
of the results and their impact for future work.

2. Related work

Several museums have deployed systems to improve user
experiences through multimedia solutions. These systems enable
digital content to be delivered for users through the Web and make
it possible for users to bookmark content for further reference.
However, it appears that such content access services are not
attractive enough for the majority of users, who would prefer to
acquire pertinent information immediately at the exhibition site.
This is one of the reasons why the current trend is to try to improve
the cultural heritage experiences by adaptively guiding the users
at the site through recommendations tailored for the user and the
users context.

Adaptive mobile museum guides have become a popular research topic in recent years [1416]. Semantic data representation
and retrieval methods for cultural heritage data have been studied
more closely since the raise of the Linked Open Data movement,
which opened many of the cultural heritage data silos to publication as a Web of Data [17,18]. In addition to mobile applications, semantic recommending has been demonstrated to work in semantic
portals and browsers tailored for cultural heritage content [1924].
An important aspect of these systems is that practically all of them
use conceptual representations of content beyond plain keywords,
and are an attempt to provide conceptual representations of user
needs, as a way to enhance mainstream filtering technologies. On
account of their shared ontologies and annotation practices these
techniques are not limited to individual collectionsbrowsing,
retrieval and recommendation has become possible across distributed information collections. Semantic heterogeneity has been
reduced by allowing the use of ontological background knowledge
to support query expansion or ontology-based data indexing.

Information filtering methods have been widely adapted for
personalized recommender systems. Their underlying methods
can be roughly divided into demographic techniques [25,26], collaborative filtering [27,28], case-based filtering [29] and contentbased filtering [30,25]. Knowledge-based and ontology-based
recommender systems [5,20,3139], as utilized in the SMARTMUSEUM system, are a type of content-based filtering.

Query expansion and use of background knowledge in indexing has its roots in early information retrieval studies and has recently been adapted to ontology-based methods. However, while
several pertinent portals and information retrieval systems have
been presented, little empirical evidence has been provided of
improved performance with these systems. Empirical studies
conducted by [37,33,40,41] show that query expansion using
ontologies improves retrieval performance, but the methods
considered make directly use of traditional information retrieval
techniques [37,33], wherein ontological concept vectors instead
of word vectors are used in the indexing. While this approach is
clearly advantageous, it does not make use of the fact that Semantic Web data that are represented as triples and not only as text in
which individual concepts can be detected. These studies also limit
their analysis to methods directly based on RDF(S) reasoning and
do not consider other techniques, such as search result clustering
or query expansion beyond the RDF(S) reasoning. In our retrieval
framework, the vector space model can be adapted to use ontologies not only in indexing of reasoned RDF data, but also as a basis
for clustering and more extensive query expansion.

Clustering has been widely used in information access [42],
including clustering of the whole object collection and clustering
of search results. The most effective technique is generally argued
to be search result clustering: here, results obtained by means of
a separate ranking method are clustered to help users understand
the results returned for a possibly under-specified or ambiguous
query. Using clustering to support information retrieval has its
roots in techniques known as Scatter/Gather [43], wherein text

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

documents are clustered for improved information access. Later
this technique entered use for search result clustering [44].
Search result clustering has often been understood as a way to
improve user interfaces for search rather than improving retrieval
performance itself [43]. We will further demonstrate that the role
of clustering is significant in mobile recommendation also in the
case of retrieval performance, when it is used in combination with
other techniques, such as ontology-based query expansion.

Development of ontology-based information filtering is not limited to individual methods applied in isolation: a number of systems employing several in conjunction have been developed, many
of which are in real-world use. Numerous cultural heritage portals
support knowledge-based recommendation [45,19,20,46,47] and
mobile recommender systems have been implemented in the cultural heritage domain [48,49]. The CHIP demonstrator [5] provides
a personalized access to museum collections by means of ontologybased annotations and knowledge-based recommendation. A
similar approach has been applied to provide recommendation
support in e-tourism [50]. For example, DBpedia Mobile enables
map-based visualization and semantic search on DBpedia dataset
[51]. Many researchers have also striven actively to leverage
the Semantic Web in support of context-aware and personalized
recommendation. For example, MyCampus is a Semantic Web
environment for context-aware mobile services [52]. It provides
interfaces for performing privacy-aware queries and accessing information from external Web services. The CHIP demonstrator [18]
comes closest to our approach by describing a complete application
that utilizes semantic data models to support recommendation inside museums. However, the CHIP demonstrator utilizes fairly simple methods to compute recommendations. We provide coherent
evaluation of our approach and show that a combination of techniques is required to achieve good retrieval performance.

Our earlier work has reported upon prototypes of the SMARTMUSEUM system [53,54]. In this paper, we give detailed description and provide extensive evaluation of the final system.

3. System overview

The SMARTMUSEUM system is designed to enhance on-site personalized access to digital cultural heritage. The main purpose of
the system is to serve the information needs of mobile users who
are interested in cultural heritage. The system recommends objects on the basis of a user profile and context information, such
as the physical location and motivation of the user. If the user
is interested in a particular object, the system can retrieve information about that object and related content from the Web. The
mobile client offers user interfaces for accessing both the recommendations and related content. In addition, the system enables
on-site video streaming for content to which video is attached,
along with speech synthesis for disabled users.2 The functionality
of the SMARTMUSEUM system can be illustrated by way of three
main scenarios:
1. Mobile outdoor scenario: the user moves around a city and is

provided with information about interesting sites.

2. Mobile indoor scenario: indoors on the sites premises, the user

is given information about interesting objects.

3. Desktop scenario: the user manually enters or edits the user

profile on a desktop machine before or after a visit.

3.1. The outdoor scenario

The outdoor scenario is dependent on the location of the user
determined by means of the Global Positioning System (GPS) or the
cell identifier for a mobile device. The location information forms

2 See video illustrations of the functionality of the system at:
www.smartmuseum.eu.

the most important feature in the context of the user. The location
information is combined with the users profile and with visit-time
context that the user is able to enter via a separate user interface
shown in Fig. 2(a). The resulting user profile can be used to provide
the user with the recommendations of sites of potential interest.

Fig. 1(a) shows the recommendations for the outdoor scenario
in a list form and Fig. 1(b) presents the set of recommendations
on a map. When the user finds a suitable site to visit and wants to
know more about what to do at the site, the user can click the user
interface appropriately to indicate entering the premises of the
site. This switches the mode of the system to the indoor scenario.

3.2. The indoor scenario

In the indoor scenario, the users context has the information of
being indoors at a certain site attached. This is detected via a Radio
Frequency Identification (RFID) sensor or the user can manually
indicate accessing the site by using a control in the interface.
The RFID technology was chosen to make object identification as
convenient for the users as possible. This was possible because
most of the objects described in the data collections were curated
and attaching RFID tags to the objects was possible. In other words,
the object descriptions are not purely fetched from the public Web:
they come from collections that are actively maintained. The user
profile is then matched against a set of objects limited to the ones
available at the site. Users are able to use their current profile or
initially update the profile with profiles predefined by the museum
staff. In this way, the system can have initial relevant profile
information even for users whose user profiles are composed of
data sharing little in common with the details of objects exhibited
at the site being visited, thereby avoiding the cold-start problem
caused by the use of profile information collected on the basis of
very different data. The cold start problem this is eliminated for
users who have no user profile in the system or whose user profile
is gathered from an environment very different from the one in
which the user is requesting recommendations.

Fig. 2(a) shows the context input screen of the system that appears after logging into the system. Using the context input screen,
users can specify context parameters that cannot currently be automatically detected from sensor input, including whether the user
is traveling with a companion and the users motivation. These are
further used in suggesting content for the user. The objects are initially annotated as suitable for specific contexts, but the weight for
each context can also be inferred for objects, through monitoring
of how often users with certain context preference investigate ob-
jects. Further, the user can specify the desired duration of the visit,
a datum that is used to limit the number of recommended objects.
The recommendations are then retrieved in view of these parameters and the context-aware user profile. At the right in Fig. 2(b)
shows the recommendation list presented to the user. The user
can browse the recommendation list and acquire more informa-
tion, also expressing the interest or lack of interest of the objects
by providing explicit positive or negative relevance feedback. The
user can select an individual object from the list and retrieve related content, such as related objects in any collection, videos, and
biographies of the creator of the object.

Fig. 3(a) and (b) show SMARTMUSEUM in user trials in Maltas
National Museum of Fine Arts. Proceeding from the recommenda-
tions, users are able to find the objects that they are interested
in and retrieve more information related to the objects. The user
interface enables users to update their user profile by expressing
their preferences among the object by providing relevance feedback on objects. This can be done by clicking an I like button for
positive preference or expressing that they do not prefer the object by clicking an I dislike button. The user profile is then updated on the basis of the triples occurring in the annotations that
describe the objects. With the system, users are also able to retrieve
additional information, including related content, such as streaming video.

(a) Recommendations as a list.

(b) Recommendations on a map.

Fig. 1. An example of recommendations in the outdoor scenario. The system recommends points-of-interest on the basis of the users location and the matching user profile.
The recommendations can be displayed as a list (a) or visualized on a map (b).

(a) Context input screen.

(b) Recommendations for the indoor scenario.

Fig. 2.
In the indoor scenario, users can express their contextual preferences by using a context input screen (a). This screen allows users to enter preferences and context
variables that are difficult to predict by computational mechanisms, such as the planned duration of the visit or the primary motivation for the visit. Taking as input the users
contextual profile and interest profile, the system recommends objects to examine (b). The contextual preferences are matched to object annotations manually curated by
the museum experts, such as those of objects relevant for educational purposes or, in the case of only a brief visit, the most important objects.

3.3. The desktop scenario

In the desktop scenario, the user is able to create and examine
her profile through the Web-based interface. Fig. 4 shows interface
elements with which the user is able to fill in interest profile
information. The system also has an interface to provide non-topic-
related profile information. These non-topical preferences denote
the users abilities, such as ability to hear, see, and walk. These
can be used in addition to topical preferences for further filtering
content for the user.

For example, objects accessible via the staircase only are filtered
out for visitors requiring wheelchair access, content presentation

in foreign languages may be disabled, and users may specify
whether they prefer instant playback of related multimedia
content. For ability-based recommendations, the SMARTMUSEUM
solution employs a limited subset of the general user modeling
ontology (GUMO) [55]. Supported user properties include physical
abilities, demographics, and  to a limited extent  social roles.

Fig. 4 shows a Web-based interface that enables manual entry of
topical features in user profiles through examination of the ontologies via graph navigation or through an auto-completion search
interface. The topical features can be selected directly from the
conceptual space defined in the ontologies available in the system.

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

(a) A user retrieving information about an object through
reading of an RFID tag.

(b) Video streaming functionality.

Fig. 3. The SMARTMUSEUM system in use in a user trial in Malta. The users utilized the system to plan their visit while in the museum and acquired data about individual
objects by means of the RFID identifiers (a). Users were able to view the object metadata and attached multimedia data, such as streaming related videos, by using their
mobile devices (b).

Fig. 4. The Web-based user interfaces for the desktop scenario of the SMARTMUSEUM system. Users are able to enter and edit their interest preferences for their profile
manually, using the Web-based interface. Selections can be made for three facets, corresponding to the ontologies used: persons, places, and general concepts. Users can
edit their profile at any time prior to or after the visit.

4. Technical architecture

The SMARTMUSEUM system consists of four main components
implemented as Web services: a metadata service, context service,

user profile service, and filtering service. The components and their
interconnections are illustrated in Fig. 5. The services communicate
with each other by means of Representational State Transfer
(REST) with the Hypertext Transfer Protocol (HTTP). The metadata

and a context description. An example of an object description is
shown in Fig. A.9 in the Appendix. Each of the three parts describes
a distinct aspect of the object: The physical description encompasses the properties of an object related to its physical location
and accessibility. The content description describes the content of
the object, such as the subject matter, the creator, and the place of
manufacture. Finally, the context description comprises contextrelated information attached to the object, such as the target audi-
ence, and a reason for which the user might examine the object. We
implemented the three elements by introducing three upper-level
properties, one for each of these three parts, and mapping each of
the properties in the domain-specific schema to one of the three
properties. For example, the dc:description, dc:title and
dc:subject properties can be set to subsume the content prop-
erty. The idea is that this can accommodate any underlying schema
and any set of the domain ontologies. All further reasoning is based
on the RDF(S) relations specified in the domain ontologies and
on balancing of the three upper-level properties. We will further
demonstrate how our model can be used to improve indexing and
for feature balancing in the filtering phase.

4.2. The context service

Contextual data are acquired from sensor inputs. The sensors
typically provide the data in some numerical form but do not specify the semantics of the input. Matching sensor input to the object
descriptions in the filtering phase requires a mapping between the
sensor input and the ontologies used to describe the objects.

The context service maps contextual data to the concepts defined in the ontologies. We look at two types of context informa-
tion: information that users volunteer to input  items that are
hard to capture via sensors, such as the duration of a visit to a particular location, the users motivation for a visit, and ability to consume the content offered by the system  and features that can be
captured by the built-in sensors of mobile devices, such as GPS re-
ceivers, accelerometers, and RFID readers, to identify objects or the
users location.

We use sensor data for two separate purposesfirst, to identify the users location and, second, to identify objects in the users
physical environment. The system supports WGS84 GPS coordinates and mobile network cell based outdoor localization. WGS84
coordinates are mapped to the identifiers in the ontologies. We utilize the W3C Basic Geo vocabulary.4 Spatial search constraints corresponding to the users current context are further used to limit
the matching of the possible objects to be recommended to those
that are close to the users current location. We create constraints
to retrieve nearby content by using a simple fixed-distance bounding box based on the location information for the user. The physical
objects are equipped with 13.56 MHz (ISO 144443A) RFID tags for
content triggering that can be accessed with the readers of mobile
devices. Object URLs are stored in RFID tags and can be used directly for lookup. The context information is used for two purposes.
First, it can be directly utilized in retrieval of objects that match the
context. The filtering can be based on, for example, the location of
the user or the purpose of the visit as specified by the user. Second,
the context information is used to retrieve the parts of the users
profile that are seen as relevant for the user in view of the users
earlier behavior. For example, if a user has preferred to visit historical buildings only when traveling in southern Europe, these will
be more likely to be recommended for the user when she is in a
similar context and less likely when she is, for example, traveling
in North America. The filtering of the content and user profile are
discussed in more detail in the following sections.

Fig. 5. Technical architecture of the SMARTMUSEUM system. The system consists
of four main components implemented as Web services: a metadata service,
filtering service, user profile service, and context service. The sensor inputs and
the context preferences manually input by the user are sent to the context
service, which maps them to concepts in the ontologies. The resulting context
representation, along with user preferences indicated through relevance feedback
on objects, is sent to the user profile service. The user profile service, in turn,
builds a user profile from both the context data and the user preferences inferred
based on the relevance feedback. The user profile is sent to the filtering service,
which retrieves objects for the user in accordance with the user profile. In
addition, the metadata server returns related object metadata and content, such as
attached videos or external multimedia content. These are sent to the visualization
component and presented for the user in the mobile interface.

service is implemented on top of a search engine infrastructure
wherein the metadata are stored in a column-oriented database
management system built on top of Apache Lucene.3 The metadata
indexing uses an inverted index and ID lookup. This allows both
rapid access to the content on the basis of a known URI and, in
cases of queries, fast and efficient ranking by means of the inverted
index. The context service maps the RFID identifiers and WGS84
coordinates received from GPS sensors to URIs in the ontologies.
The mapping procedure too is built on top of Lucenes interval
indices. The user profile service stores user profiles and maintains
context information alongside the profiles. Users can give feedback
on the objects they like or dislike, whereupon the metadata of these
objects will be used for updating of the user profiles. Because of the
column-oriented storage mechanism, all services depend only on
RDF(S) semantics and can be used directly with any RDF data and
in any domain.

4.1. The metadata service

The metadata service is responsible for storing the metadata
obtained from crawling the Web. For updates, the crawler checks
designated Universal Resource Locators (URLs). Each URL points to
an RDF(S) data dump from a certain data provider. The data are
stored in a database for further access. The metadata service sends
the data for indexing to the filtering service. This enables the data
to be pulled out for viewing from a database and provides for fast
filtering and ranking based on indexing. The metadata service also
acts as a hub when a mobile client requests recommendations or
updates the user profiles.

The data are represented via RDF(S) in the form of triples and
is mapped to three main elements to support context aware information filtering: a physical description, a content description,

3 http://lucene.apache.org/.

4 http://www.w3.org/2003/01/geo/.

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

4.3. The user profile service

The user profile service supports context-aware user profiling.
The profile adapts to the context of the user and reflects the
preferences of the user on the basis of the context in which the
user has preferred certain objects. The user profiling is based
on explicit relevance feedback determined through indication of
specific objects as relevant or non-relevant. Relevance feedback is
context-dependent and therefore is stored and used based on the
context in which the feedback was given or content requested. We
use ontology-based user profiles, and our model for representing
user profiles involves a set of RDF triples. The profile triples are
formulated via resource identifiers from ontologies. The rationale
behind this is that triples can be matched to annotations through
ontology-based reasoning and query expansion.

The user profile is based on a probabilistic context model. This
means that the context in which relevance feedback is provided
is modeled for each triple, describing the users interest, as a
conditional probability. The probabilistic framework is extensible
and domain-independent, which means that SMARTMUSEUM can
easily be adapted to other context variables and data than those
used in the SMARTMUSEUM environment.

4.4. The filtering service

The filtering service is responsible for two separate tasks. The
first is indexing of the content that the metadata service obtains
from crawling the web. The second is filtering of recommendations
upon the mobile clients request. In the filtering phase, the service
takes the set of triples generated by the user profile service and
context data as input. The service performs filtering based on the
user profile. Then, the resulting set of objects is clustered in line
with the triples that match in the filtering phase. This reduces overspecialization of the results. The final list of recommendations is
returned to the metadata service, which passes the result to the
mobile client. The details of the methods enabling the filtering
service are described in Section 5.

4.5. Mobile clients

We implemented two mobile clients on top of the technical
architecture, for Windows Mobile 6 and Symbian Series 60 plat-
forms. The mobile clients use the application programming interface (API) provided by the metadata server. Communication
between the client and the server is optimized in view of the limited bandwidth available in the outdoor scenario. The recommendations are computed only at the beginning of the indoor scenario,
given the computational complexity. In the outdoor scenario, the
recommendations are requested only when the user moves; requests are not sent over the network when the user remains sta-
tionary. The mobile clients automatically switch to local Wireless
Local Area Network (specifically, Wi-Fi) access when inside a mu-
seum. This enables services that require more bandwidth, such as
the video streaming functionality.

5. Computational methods

The key component of the SMARTMUSEUM system is the recommender system tying together the functionality of all of the
individual services. The recommender system relies on several
computation methods: user profiling, data indexing, result rank-
ing, query expansion, feature balancing, and result clustering. In
this section, each of these methods is discussed in detail.

5.1. User profiling

SMARTMUSEUM is designed to support scenarios wherein context information is deemed to be important for information filter-

ing quality. Context-aware user profiling requires flexible models
that can be used to represent different context variables. Therefore,
we have adopted a probabilistic user profiling model. A user profile P consists of a set of profile entries pi. Profile entries consist of a
triple t  T and a context triple ct  T that belong to the Cartesian
product of resources R and tokenized and stemmed literals L in the
domain, T  RR(RL). Each triple t is associated with the context in which it was added. For each triple in the profile entry pi in
the user profile, there exists a count count and a tone of the feedback to for which the count is assigned, either positive or negative.
Therefore, a profile entry is a quadruple pi = t, ct, count, to,
where t and ct are RDF triples.

Each user profile is constructed dynamically on the basis
of the users relevance feedback. When seeing an interesting
object, the user is able to provide relevance feedback on the
object by using an I like vote or an I dislike vote indicating the
tone of the feedback. The user profile is then updated by adding
of each triple occurring in the object into the user profile with a
tone and updating of the count. Each triple in the users profile
is attached to a context in which the feedback on the object to
which the triple was attached was performed. We assume independence of the triples, which is a clear simplification but
keeps the computation simple and has proven to perform well
in practice [56]. For example, consider a case wherein the user
has provided relevance feedback using the I like options for
the object Duomo di Milano which is annotated as having the
concept church as the rdf:type, and the feedback has taken
place in the context Milan, Italy. In our example, insertion of
the following triples for the user profile would result:
t = DuomoDiMilano, rdf : type, aat : church,
ct = rdf : Resource, sm : userLocation, place : Milan,
positive.

The problem with direct estimation of this sort is that the
user has indicated a preference for a church, but only in Milan.
The contexts in which observations are made may be very sparse
even when subsumption hierarchies in ontologies can be used
to generalize contexts. Therefore, we use Laplace (i.e. add-one)
smoothing [56] to shave a share of the probability mass onto
contexts for which no observations are available. In this way, it is
possible to observe some likelihood for every triple even if it has
not received a feedback in the specified context.

Computing a weight for each triple in view of the context is
done on the basis of the likelihood of a context generating a certain
triple. We borrow the idea from language models of information
retrieval [56]. If no external prior information is available, the
likelihood can be observed from the relative frequencies of the
profile entries. Formally, P(t|ct) = count(t|ct)
count(ct) .

The computation is performed for negative and positive
feedback separately, which gives the probability of a certain triple
not being valid for a given context (negative count) and the
probability of the triple being valid in that context (positive count).
The difference between the positive and negative probability is
given by
Pt = P(t|ct, to = positive)  P(t|ct, to = negative)
and is assigned to the triple as a weight. In this way, the triples
that have arisen in the annotations of those objects that have
received positive and negative feedback equally will end up having
a probability of 0 and have no effect in ranking of the objects in the
filtering phase.

(1)

The manually entered features of user profiles are added to the
profile with a probability of 1 and are valid for every possible con-
text. This makes it possible to use the same profiling mechanism
for both learned and manually entered profiles.

5.2. Data indexing

5.3. Information filtering

The SMARTMUSEUM system requires fast filtering of recommendations and dynamic query expansion depending on the users
profile and context. Indexing is inevitable to enable such function-
alities. To support these requirements, we built four indices:
1. The annotation index stores the original annotations and is built
by storing all RDF triples for each of the objects. The purpose of
the index is to support fast filtering during building of the triplespace index. We use inverted indices for the objectstriples
matrix. This enables fast further access via either by means of
triples, or querying that uses object URIs.

2. The ontology index is an index that stores the subsumption and
part-of hierarchies of the ontologies. These are used to enable
fast query expansion and construction of the triple-space index.
For each resource in the domain, we store the superclasses
of the resource in subsumption and part-of hierarchies. We
use an inverted index with the resourcesresources matrix.
For example, for the resource Helsinki, we store all this
resources ancestors in the part-of tree: Uusimaa, Finland,
Northern-Europe, Europe and the Earth.

3. The spatial index is an index that stores positioning information for objects. In our dataset, positioning information is represented in either of two different ways: either (1) directly with
WGS84 as a reference datum for values of the geo:lat and
geo:long properties from the W3C Geo Vocabulary, and (2) indirectly by reference to a location described in ontologies that
then refer to WGS84 values either directly or through ancestor
concepts. For each annotation, we store a reference to a WGS84
point, using latitude lat and longitude lon. This indexing is
performed also for annotations that refer to coordinates indirectly through instances in the geo-ontology. This ensures fast
filtering of the objects based on the WGS84 coordinate informa-
tion. In addition, we store the coordinate location of every site
in the ontology.

4. The triple-space index is an index that stores the annotation
with respect to transitive subsumption and part-of relations
i.e., triples originating from the annotations that are based
on reasoning. The triple-space index is based on the idea of
the vector space model (VSM) of information retrieval [57].
We use an inverted index for matrices that consist of the
combinations of directed labeled graphs of RDF(S) represen-
tation. Therefore, we construct the index based on all triples
to be inclusive of their deductive closure. While rdf:type
is seen non-transitive, while rdfs:subClassOf and rdfs:
subPropertyOf are transitive. For example, a triple sm :
Object1, dc : subject, place : Helsinki is indexed with
the triple associated with the type sm:Object, and all combinations of super properties of dc:subject and super classes
and classes in the part-of hierarchy for place:Helsinki.
The annotation index is designed to support the other indexing
tasks and the ontology index to support on-line query expansion.
Therefore, an indexed annotation can now be represented with
the spatial index and the triple-space index. The annotation of an
object consists of a set of triples and coordinates attached to the
object. More formally, an object D consist of a set of deductive
closures of the triples used in its annotation t  T and a set of
coordinates C that have been attached to the property for which
the coordinates are assigned. For example, coordinates could be
attached to the property manufacturingPlace or the actual
physicalLocation property of the object. Each coordinate cor
has a latitude lat  [180, 180] and a longitude long  [180,
180]. Therefore, an object D is a pair D = t, cor.

The purpose of the information filtering service is to provide the
user with the most relevant objects given the user profile. Crucial
functionality for this end is to rank the objects accordingly. We use
the VSM for ranking. Each triple ti is stored in a vector V indexing
an object j with the weights assigned for triples t0 . . . tk achieved
for each object through deductive reasoning V = (w1, . . . , wk),
where k is the number of all original and deduced triples.
The weights in the trivial Boolean case can be set to 1 or 0
on the basis of whether the triple belongs to the annotation of
the object or not. Adequate ranking of the results, however, requires more sophisticated weighting. The intuition behind this is
that for information filtering purposes some of the triples are likely
to be much less relevant for the ranking than others. For example,
matching a user profile based only on a triple rdf : Resource,
rdf : Resource, rdf : Resource will lead to a match to all ob-
jects, but is meaningless for filtering purposes.
On the other hand, an object indexed with tgn:Helsinki,
should be matched not only to all other objects indexed with
tgn:Helsinki, but also to the objects indexed with tgn:
Finland because they belong within the same deductive closure,
but with less weight. For this purpose, we use tf idf weighting
over the triples. Term frequency (tf ) is the number of times a certain triple appears in an annotation of an object. In normalized
form, tf is

(2)

tf i,j = Ni,j
ject j and

Nk,j

(3)

ni

where Ni,j is the number of times a triple i is mentioned in the ob-
k Nk,j is the sum of the number of occurrences of all
triples in the object j. Inverse document frequency (idf ) is defined
as
idf i = log
where ni is the number of objects, where the triple i appears and
N is the total number of objects in the system. The weight of an
individual feature is given by:
wi,j = tf i,j  idf i.

(4)
In our example again, the concept tgn:Finland is likely to
have many more occurrences in the index than is tgn:Helsinki,
since the index contains the deductive closures of the concepts.
Therefore, objects annotated with the concept tgn:Helsinki
will have greater weight with respect to a user profile, containing
the concept tgn:Helsinki, than do objects from other parts of
Finland that, through deductive reasoning, are also annotated with
the concept tgn:Finland as is the user profile.

The intuition for weighting is not limited only to the concepts used in the annotation. Intuitively, the match between
a profile and an object annotated also with a matching prop-
erty, such as rdf : Resource, dc : subject, tgn : Helsinki
and rdf : Resource, dc : subject, tgn : Finland is much
stronger than that for triples rdf : Resource, dc : subject,
tgn : Helsinki and rdf : Resource, dc : location, tgn :
Helsinki, where the latter describes Helsinki as a location of
the object and the former as the subject matter of the object.
The intuition behind this is that even though the objects are related because they both are annotated with the concept tgn:
Helsinki, they do not describe Helsinki via the same property.
In fact, with the RDF(S) semantics, they are connected only
through the deduced triple rdf : Resource, rdf : Resource,
tgn : Helsinki, which is more common in the knowledge-base
than are the two original triples.

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

Using a pure VSM of information retrieval would cause the
length of each vector to be the number of possible combinations
of triples in the domain. This would impair the performance of the
VSM, because many of the matching concepts would be the same
in the tail of super-concepts.

We propose to avoid this bias by constructing the VSM on
the basis of each property. Properties specify the perspective for
the connection between the object of the triple and the subject
of the triples. In our model, tf idf weights are obtained only for
triples that share the same property. Again, through reasoning
this enables matches on the upper level of the deductive clo-
sure. For the most general match, for which the property would
be rdf:Resource, the resulting vector space would yield the
tf idf weights for all subjectobject combinations. In this way the
heuristic to approximate the importance of the triple lead to lower
weights than in the case of using only the subjectobject combinations matching a specific property would be used.

Therefore we reformulate the indexing of the objects and the
triples in the deductive closure of their annotations as vectors
describing occurrences of each triple when given its property p.
Now the vectors indexing the triples are created for each property
as Vp = (w1, . . . , wk), where k is the number of all original and
deduced triples for which the property p holds.
For example, returning an object to a user because it has a concept tgn:Helsinki as the value of the property dc:location
can be very useful, more useful than knowing that the object is indexed only with the concept tgn:Helsinki, because
tgn:Helsinki could also be the subject matter of the indexed
object. It is worthy of note that we still make the assumption of
independence between triples and construct the vector spaces for
each property, indexing each triple for this vector space specified
by the property. The interval indices are also treated in the same
manner as triple vectors. An interval index is created for each prop-
erty, and matching of the coordinates is performed within that in-
dex.

In the vector model the triple vectors can be used to compute
the degree of similarity between each object O stored in the system
and the profile of the user U. The vector model evaluates the
similarity between the vector representing an individual object
WOj and the user profile WU. The similarity between the vectors
can be quantified by means of, for example, using the cosine of
the angle between the user profile vector and the object vector.
We reformulate the cosine similarity to take into account the set
of vector spaces, one for each property instead of using only one
vector space for all triples:

w2

i,up

(5)

where k is the total number of triples in each vector space p, j is
an index for an object, u is an index for a profile, i is an index for a
triple, p is an index for a property vector space, l is the number
of vector spaces assigned for individual properties, and p is a
normalizer across the vector spaces. The dot product of the vectors
is normalized by means of the Euclidean distance between the
vectors. Thus, the vector model ranks the objects by their similarity
to the profile.

All of the indices are implemented with Apache Lucene. We
store each of the indices in separate fields, but all are contained
in a single final index. This enables evaluating all filtering criteria
in the same query evaluation task, which is essential in real-world
applications since the result sets for the triple space index can be
very large and in the worst case all of the annotations are stored
in the annotation base. Therefore, the result set must be limited

, WU ) = l

p=1

sim (WOj


i=1

i=1

wi,jp  wi,up

i=1


w2
i,jp

according to spatial criteria in the same query evaluation task
as the triple space matching. This can be expected to reduce the
search space significantly in real-world filtering cases.

5.4. Query expansion

The cosine similarity variant specified by Formula 5 enables
filtering of the objects that is based on the annotations and the
deductive reasoning performed for the knowledge-base of the annotation triples. This already generalizes over the heterogeneous
annotations, because it allows more specific triples to be matched
to more general triples. For example, a triple rdf : Resource,
dc : subject, tgn : Italy in the users profile can be matched
to the triple rdf : Resource, dc : subject, tgn : Milan occurring in the annotation.
However, it is not clear for information filtering purposes how
the query should be expanded. Is it enough that the more specific
cases be considered, or should the reasoning also reveal more
general concepts to be used in the filtering process? For example,
users interested in Duomo di Milano could also be interested in
Milan in general, or buildings in Florence, a city that is relatively
close to Milan. We propose ontology-based query expansion that
can be used to expand the triples t in the user profile by means
of ontological relations other than those already determined via
standard deductive reasoning.

Ontologies can be very unbalanced and, depending on the concepts used in the annotation, a need may arise for different levels of query expansion. For example, an object annotated with the
concept Buildings may already be general enough and match
to many types of buildings, while an object annotated with the
concept Church might indicate the users interest, not only in
churches, but also in other types of religious buildings, or buildings in general.

The measurement of a concepts semantic closeness to another
concept and thus of how good a candidate it is for query expansion
can be approximated from its position in the ontological hierarchy.
In an earlier study [58], we found out that the WuPalmer
measure [59] has the best performance in detection of the semantic
relatedness, and it was used to select the concepts for query
expansion. Formally, the WuPalmer measure for concepts c and
c is:
relWP(c, c) =
(6)
where l(c, c) is a function that returns the smallest number
of nodes on the path connecting c and c (including c and c
themselves), s(c, c) is a function that returns the lowest common
superconcept of concepts c and c, and r is the root concept of the
ontology.

l(c, s(c, c)) + l(c, s(c, c)) + 2l(s(c, c), r)

2l(s(c, c), r)

Those concepts having a WuPalmer value above a threshold
of 0.8 are selected for query expansion. The threshold value was
obtained from an empirical comparison of different threshold
values in semantic distance computation [58]. We constructed all
the possible triples that were possible in view of the concepts
determined by the WuPalmer measure. This means that all
subjects, properties, and objects of any triple t in the user profile
could be extended on the basis of the WuPalmer measure. That
leads to sets of concepts for subjects, properties and objects.
Finally, the user profile was expanded through the use of all
permutations of the concepts in these resulting sets. These were
simply added to the vector representing the user profile, at the
weight of the original triple. We tested usage of the value of the
WuPalmer measure to reweight the triples but decided not to use
it in the system, because using the tfidf weighting alone seemed to
lead to better results. We will further discuss the optimal threshold
of the WuPalmer value in the evaluation section.

The query expansion and VSM for triple-spaces tackle the
problem of heterogeneous data and thereby improve the ability
of the system to generalize over similar data and rank results
accurately. However, the problem remains that the data annotating
the context of the object and the data annotating the content of the
object can be very unbalanced. For example, a certain annotation
may involve 10 triples describing the context and, say, three triples
describing the content. This could cause the VSM to rank the object
high because of a good match of the context, but the relevance
of the object for the user depends more on the content that the
ranking suggests.

We have approached the problem by balancing the effect of the
separate triple-spacesin our case, the context triples and the content triples. This work is based on differentiation among properties by means of three general property sets: context, content, and
physical, as discussed earlier. From this upper-level classification
of the properties, we are able to deduce which triples affect the filtering for one of these three facets. The physical description in our
case consists of only the positioning data; therefore, it is used as a
Boolean constraint in the filtering. The context and content triples
are balanced by definition of a heuristic normalizer function that
determines the value for p in the Formula 5:
p = pf
Np
where pf is the number of matching occurrences in the two compared vectors for a super-property of p (in our case, context or
content) and Np is the number of all occurrences of matching superproperties (in our case 2) in the two vectors compared. We also set
the constraint that the minimum number of occurrences in each
feature group is 1. This ensures that the ranking cannot be based
on either content or context alone. However, when the balancing
is used for other types of feature groups, this may not be necessary.
For example, the effect of having annotations with a much larger
proportion of subject-matter annotations than other annotations
could benefit from such balancing. Intuitively, the feature-group
weight returns the share of the properties that describe content
or context and normalizes the quantity. A more sophisticated approach would be to learn the weights of p for each property p on
the basis of some optimization technique, but in our case we found
the simple heuristic approach to work at satisfactory level.

(7)

5.5. Clustering

Formula 5 computes the similarity of the objects with respect to
the user profile. The objects can be ranked on the basis of the sim-
ilarity. This gives us an initial ranked result set in information fil-
tering. While the ranking of the objects is important, users may, to
avoid over-specialization, also want to receive recommendations
from different viewpoints specified in their user profiles. This requires us to increase the diversity of the results provided for the
user. We approach the problem by using clustering. Each cluster is
expected to contain objects from a single perspective indicated in
the user profile. Therefore, we cluster the initially ranked results
and pick a representative number of objects from each of the clus-
ters.

Fig. 6 shows the clusters determined by the system for a test
user profile created to give a simple illustration of the effect of clus-
tering. The test user profile consists of user preferences expressed
with four triples: first, objects that are annotated as having the instruments type; second, objects annotated as having copper as
a material property; third, objects that are annotated as being of
copper alloy material; and, fourth, objects annotated as having the
subject of astronomy. The method finds two separate clusters. The
first cluster, marked with a dashed line in Fig. 6 consists of objects that are instruments and have the material types copper and

Fig. 6. Clusters determined by the system for a test user profile consisting of
triples that represent two different but overlapping angles on the underlying data
instruments that are annotated as being of the materials copper and copper alloy
(dashed line) and instruments that are related to astronomy.

copper alloy. The second cluster consists of objects that are instru-
ments, have the material indicated as copper, and have the subject
astronomy. The objects in the second cluster receive lower ranks
in ranking using Formula 5, but may still be relevant for the user in
addition to the objects in the first cluster.

We use clustering of the initial filtering results to offer such
perspectives on the data. The clustering is performed for the objects that have the highest ranking in the initial filtering. This ensures that the objects are determined to be highly relevant but that
the top results to be shown to the user are not over-specialized
i.e., not too similar to each other. Selecting the initially top ranked
objects also keeps the size of the triple-space processed by the clustering methods fairly limited and provides fast online performance.
We use the FastICA algorithm to perform independent component analysis for clustering [60]. Independent component analysis
is a computation method for separating a multivariate signal into
subcomponents that assumes mutual statistical independence. It is
one of the best performing blind source separation techniques and
can be implemented with fast fixed point algorithms. The clustering is based on the matching triples collected for each of the top objects returned in the initial ranking from Formula 5. We construct
a triple-objects matrix wherein the triples are only those that are
found to have a match in the similarity computation. Because we
use only a fixed number of top-ranked objects in the clustering,
we are able to reduce the number of dimensions in online compu-
tation. We use principal component analysis (PCA). We retrain the
components which describe 98% of the total variation in the data.
This value was determined empirically by iterating PCA with varying dimensionality.

For FastICA, we set the number of clusters desired to 10. This
value was obtained by empirical application of the method against
the user profiles used in the evaluation. Although this is the
maximum number of clusters returned, the algorithm determines

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

fewer clusters if no further meaningful separation can be done. We
used hyperbolic tangent (a = 1) as the contrast function. Clusters
are obtained on the basis of the highest absolute value for each
object from among the component vectors returned. Finally, the
objects are ranked within the clusters in accordance with the initial
ranking yielded by the similarity measure described by Formula
5. This allows selection of fewer objects to be shown in the user
interface.

6. Laboratory experiments

The SMARTMUSEUM system was evaluated in controlled laboratory experiments, which were designed to evaluate the actual
use cases and the functionality enabled by the SMARTMUSEUM
system.

6.1. Use cases

We evaluated the ability of the system to generalize across semantically similar user profiles and overcome the content heterogeneity problem. This was measured with two separate use
cases. The experiment with the use case wherein content is recommended on the basis of a user profile is referred to below as
the recommendation experiment. That with the use case in which
a user is examining an object selected in line with the former use
case and related content is offered on the basis of this selection
is termed the linking experiment. We also evaluated the ability of
the clustering method to avoid the over-specialization caused by
one dimensional ranking and large user profiles. This experiment
is further referred to as the clustering experiment.

6.2. Annotations

A dataset consisting of museum objects, including fine-art
items, other artwork, and scientific instruments (indoor scenario
data), and point-of-interest descriptions (outdoor scenario data)
was used in the evaluation. The Appendixs Fig. A.9 shows an example of an object description from the collections of Museo Galileo.5
The physical description of the object consists of the internal identifier that can be used to map the object to the identifier received.
The content description consists of Dublin Core properties and
required extensions for the cultural heritage domain such as ma-
terial, object type, and place of creation of the object. The context
description of the object consists of properties describing the subject matter and other content description for the object.

6.3. Ontologies

The objects are indexed with Getty Vocabularies6 to cover the
subdomains of persons, organizations, geographical locations, and
cultural heritage concepts:
1. The Art and Architecture Thesaurus (AAT) is a structured vocabulary of around 34,000 concepts, including 131,000 terms,
descriptions, and other information related to fine art, architec-
ture, decorative arts, archival materials, and material culture.

2. The Getty Thesaurus of Geographic Names (TGN) is a structured
vocabulary containing around 912,000 records, including 1.1

5 The description excludes longer textual descriptions of the object.
6 http://www.getty.edu/research/conducting_research/vocabularies/. The Getty
Vocabularies are copyrighted by the J. Paul Getty Trust. More information on
licensing for research and commercial purposes is available at http://www.getty.
edu/research/conducting_research/vocabularies/.

million names, place types, coordinates, and descriptive notes,
and focusing on places important for the study of art and archi-
tecture.

3. The Union List of Artist Names (ULAN) is a structured vocabulary
containing around 120,000 records, including 293,000 names
along with biographical and bibliographic information about
artists and architects, including a wealth of variant names,
pseudonyms, and language variants.
The ontologies used are lightweight ontologies transformed
into RDF(S) from the vocabularies, wherein concepts are organized
into subsumption hierarchies and have related term relations. The
point-of-interest data for the outdoor scenario consist of data
referring to geographical instances. The geographical instances,
structured in meronymical hierarchies that represent geographical
inclusion, are geo-coded in line with the W3C Geo Vocabulary.7
Temporal data were described by means of a specific ontology
that has concepts for each year, decade, century, and millennium,
organized in a hierarchy representing temporal inclusion. The
vocabularies also provide a set of spelling variants or synonyms for
each concept.

6.4. Relevance assessments

Museum professionals provided relevance assessments for the
dataset. These assessments were used as the gold standard. In
total 28 user profiles were created and relevance assessments
corresponding to the user profiles were provided for the set of
500 objects in both institutions. This dataset was used in the
recommendation experiment.

Another set of 28 profiles and corresponding relevance assessments were created for the linking experiment. The profiles used
in this set were objects that were selected from among the 500
objects originally provided by the museums. This enabled us to
measure the linking performancein other words, how well the
method would recommend objects when given a document as an
input. These datasets are referred to below as the recommendation
dataset and linking dataset, respectively.

A typical use in the museum was found to be such that the users
wanted to select from a set of professionally created profiles that
they found to correspond generally to their interests and then update these profiles to match their interests more closely by providing relevance feedback on the objects within the museum. To adapt
our datasets to this real-world use, we created a third dataset, in
which we combined the profiles from the recommendation dataset
by randomly shuffling four of the original profiles into a new profile
containing all of the profile entries from the original profiles. In this
way, we got a dataset wherein we were able to mimic the actual
user profiles, which feature many data elements and possibly overlapping interests. This is further referred to as the mixed dataset.

6.5. Experimental setup

Laboratory experiments were conducted to measure the performance of the filtering system. Recommender system evaluation
can borrow metrics and methods from information retrieval evaluation but has a scope slightly different from that of information
retrieval systems designed to support search. Recommender systems offer a variety of results matching the users interests instead
of only a ranked list [61]. We use clustering of the initial filtering
results that does not create a total ranking for the objects. How-
ever, many of the standard metrics used in performance evaluation require a total ranking. To achieve this, we ranked objects

7 http://www.w3.org/2003/01/geo/.

within the clusters and then picked an equal number of objects
from each cluster on the basis of the greatest similarity given by
the initial ranking within each cluster. Then we ranked the final
list again from the similarity values produced in the initial ranking
process. This yielded a one-dimensional ranking that was used in
the evaluation. With this approach, the results used in the evaluation had their diversity ensured by the clustering process but were
still comparable to results that had only one-dimensional ranking.
We used the recommendation dataset in the recommendation
experiment because it includes realistic heterogeneity between
the user profiles and the data. The linking dataset was used to
study the linking problem, because the documents could be used
as queries and provide a realistic measure for the task. The mixed
dataset was used in the clustering experiment. This ensured that
the profiles and gold standard had enough variety, and a certain
perspective was likely to dominate if only one-dimensional ranking were to be used.

Recommender systems are also often expected to return a fairly
compact set of results, instead of a list of arbitrary length [61].
Users often prefer the first 2030 results: if these do not satisfy
the users information need, she tends to abandon the system.
This is particularly true for mobile recommender systems, wherein
the devices limit the ability of the users to examine results in
large numbers. The recommender systems ability to cope with
content heterogeneity can be effectively measured through use of
a larger set of objects. However, the ability of the system to deal
with over-specialization requires limiting of the study to the topranked objects. Therefore, we measured the performance of the
filtering process in general, using the full set of results returned
by the filtering methods but restricting the analysis to the top 30
objects when measuring the effect of clustering to reduce over-
specialization.

Query expansion had two distinct variables that we investi-
gated: first, the use of different relations found in the ontologies
in query expansion and, second, the level of query expansion. We
created three distinct query expansion strategies. One used only
the concepts. Another used only the concepts and the subsumption
hierarchies of the ontologies. The third made use of concepts, the
subsumption hierarchies, and the related terms relations of each
of the concepts in the subsumption hierarchies. The first strategy,
which does not benefit from the ontologies, is denoted as the baseline method. All of these combinations were measured in the ex-
periments. When we measured the effect of clustering to reduce
over-specialization, we selected two methods for the comparison:
the method with the best performance from the general filtering
and a simple baseline that did not benefit from any of the additional methods on top of the VSM. In this way, we were also able
to determine whether the reasoning and query expansion had an
effect in the clustering processin other words, whether the performance of the clustering was dependent on the reasoning and
query expansion. Two hypothesis were defined for formally measuring the performance of the methods:
1. H1: The content heterogeneity hypothesis considers the effect of
using ontologies to reduce semantic data heterogeneity. We hypothesize that ontology-based reasoning and query expansion
improve filtering performance relative to a baseline filtering
method that does not benefit from ontologies. Null hypothesis
H10 was that no difference can be found between a method using ontologies and a baseline method that does not use ontolo-
gies.

2. H2: The over-specialization hypothesis involves the effect of
using a clustering method for filtering results to reduce over-
specialization. We hypothesize that clustering improves filtering performance. The null hypothesis here, H20 was that no
difference can be found between a method using result clustering and a baseline method that does not use result clustering.

Table 1
The results of the recommendation and linking experimentsmean average precision of the method variants on different query expansion levels; WUP = Wu
Palmer measure cutoff value for query expansion (higher values mean less expansion to more general concepts); RT = related terms (non-subsumption) expansion;
SUBS = subsumption-only expansion; FULL = related terms, subsumption, and related terms through subsumption expansion.

Linking experiment

6.6. Evaluation metrics

Recommendation experiment

The accuracy of the methods was measured in terms of recall,
precision, and mean average precision. In addition, we plotted precisionrecall curves to gain an understanding of the performance
differences between the methods. Recall R is defined as the number
of relevant documents retrieved by a filtering method divided by
the total number of relevant documents in the system, while precision P is defined as the number of relevant documents retrieved
by a filtering method divided by the total number of documents
retrieved by that filtering method.
R = relevant and retrieved
(total number of relevant)
P = relevant and retrieved

(9)

(8)

(total number of retrieved)

Precision and recall are vulnerable measures because increased
precision often entails a decrease in recall, and vice versa. There-
fore, a single measure that can be used to estimate a balanced performance in terms of precision and recall can be useful. We are
interested also on ranking, and a viable measure to be used to investigate the ranking along with the precision and recall tradeoff is
mean average precision (MAP). The MAP for a set of relevant docu-
ments{d1, . . . , dmj} for a query qj of a total of Q queries and a set of
ranked results RAjk from the top result until one reaches document
dk is:
MAP(Q ) = 1
|Q|

mj

|Q|

P(RAjk).

(10)

mj

j=1

When no relevant document at all are retrieved, the precision
value in the above equation is taken to be 0. For a single
information need, the average precision is the average area under
the precisionrecall curve for a set of filtering criteria.

6.7. Results

The results indicate that the methods enabling query expansion,
feature balancing, and clustering improve the accuracy of the
information filtering.

The mean average precision (MAP) values of the individual indexing and query expansion strategies for recommendation and
linking experiments are shown in Table 1. The following main
findings can be observed. First, using all possible relations of the
ontology in the indexing leads to the best overall performance in
the recommendation experiment and equally good performance
for subsumption indexing in the linking experiment. Second, the

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

(a) Recommendation experiment.

(b) Linking experiment.

Fig. 7. The effect of different reasoning and query expansion strategies in the accuracy of the filtering performance in the recommendation experiment (a) and in the linking
experiment (b). Precision is plotted on 11 recall levels for the method using clustering and for a baseline method without clustering. The values are computed as an average
over the set of filtering criteria.

subsumption indexing outperforms related-terms indexing (the
baseline) in both experiments. The results show up to 77% improvement in comparison to a baseline in which the best combination of reasoning and query expansion is used. Subsumption
and full indexing, which also uses subsumption, seem to perform
clearly better than related-terms indexing. The baseline performance is increased by 0.05 (8%) in MAP in the linking experiment
and 0.15 (68%) in MAP for the recommendation experiment. The
improvement in performance achieved with the subsumption and
full indexing strategies implies that subsumption reasoning is the
most important factor affecting the accuracy of the retrieval, and
further improvement is achieved with query expansion.

The precisionrecall curves for the recommendation experiment and linking experiment are shown in Fig. 7(b). The curves
plotted in the figure are the best-performing combinations of
query expansion and reasoning strategies. The effect of subsumption reasoning is most significant in reducing content heterogeneity and clearly improves the performance of the information
filtering. However, the effect is not as significant in the linking ex-
periment. This is likely because the concepts used as the filtering
criteria are derived from the documents and are more likely to be a
direct match in the linking task than in the recommendation task.
It is noteworthy that in both tasks the improvement is greater for
recall than for precision. However, reasoning and query expansion
do not impair precision.

The precisionrecall curves for the clustering experiment are
shown in Fig. 8(b). The experiments led to three main findings.
First, the MAP for the pure VSM was 0.48 and for the VSM with
Independent Component Analysis (ICA) clustering 0.53. The clustering improved the MAP of the filtering process by five percentage points (11%). Second, the improvement was dependent on the
reasoning and query expansion used to enable improved recall in
the initial ranking phase. The clustering without the reasoning and
query expansion was found to hamper the performance of the filtering by two percentage points (4%). The MAP for the method with
clustering was 0.41 and for the method without clustering 0.43.
Third, the RDF(S) reasoning alone improved the MAP of the filtering process by five percentage points (12%). The results imply that
clustering is effective for reducing over-specialization and increasing the diversity of the results. However, the increase in the total
ranking is achieved only when the clustering is combined with reasoning and query expansion.

All methods are highly dependent on the optimal query expansion level. With all of our datasets, we obtain the best performance
when using query expansion with WuPalmer values of 0.81.0,
as shown in Table 1. We observed that the high values for query

expansion level 0.4 arise from the fact that the dataset is recall ori-
ented, and with some configurations, extensive query expansion
does not hamper performance as would be expected with a less
recall oriented dataset. In deployment of the SMARTMUSEUM sys-
tem, we set the value to 0.8 because it seems to perform well also
with heterogeneous data in which sparseness between the triples
used in the user profiles and in the annotations is prominent.

The statistical significance of the differences between the results obtained via the methods was verified through the following
procedure. The data of the compared methods were not found to be
normally distributed when checked via the ShapiroWilk test [62]
(p < 0.001). Therefore, the differences across the repeated measures was checked via the Friedman test. In the case of the recommendation and linking experiments, we ensured the differences
between the compared methods: FULL, SUBS, RT (df = 2, p <
0.001) and in the case of the clustering experiment we ensured the
differences between the compared combinations of methods with
and without clustering and with and without reasoning (df = 3,
p < 0.001) [63,64].
Statistically significant difference was then found between
all method pairs by means of the paired Wilcoxon signed-rank
test [65] with Bonferroni correction to correct for multiple comparisons (3 in the case of the recommendation and linking experiments and 4 in the case of the clustering experiment, p < 0.001).
In summary, we found statistically significant differences between
the compared methods in all comparisons at the chosen significance level p < 0.001.

7. User trials

The laboratory experiments were designed to reveal the filtering performance of the system and for seeking confirmation for
the content heterogeneity and over-specialization hypotheses. The
purpose of the user trials was to show that the methods can be deployed in real systems and can benefit users in the intended usage
context. User trials were conducted at the National Museum of Fine
Arts in Malta,8 and at Museo Galileo.9

7.1. Setup

The trials were organized partially by the museum staff, who
were, together with the research team, responsible for recruiting

8 http://www.heritagemalta.org/.
9 http://www.imss.fi.it/.

1.010.90.90.80.80.70.70.60.60.5Precision0.50.40.4Recall0.30.3FULLSUBSRT0.20.20.10.10.00.01.010.90.90.80.80.70.70.60.60.5Precision0.50.40.4Recall0.30.3FULLSUBSRT0.20.20.10.10.00.0T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

(a) No reasoning or query expansion.

(b) Best performing reasoning and query expansion
strategy.

Fig. 8. The results of the clustering experiment. The effect of clustering in reducing over-specialization for the mixed dataset that has not gone through reasoning (a) and
for the dataset with the filtering method with the best-performing reasoning and query expansion parameters (b). Precision is plotted on 11 recall levels for the method
using clustering and for a baseline method without clustering. The values are computed as an average over the set of filtering criteria.

the participants and assisted them in use of the system. In all, 24
participants were recruited: 11 subjects in the case of the National
Museum of Fine Arts10 and 13 in the case of Museo Galileo. The
participants at the fine-arts museum in Malta were attendees at an
information technology conference who held generally favorable
views of the use of technology in museums. The participants at
Museo Galileo were conference attendees from a cultural heritage
conference and represent users interested in the domain but not
necessarily in favor of the use of technology to enhance museum
visits.

The participants were first given a 30-min presentation about
the system, including instructions in how to create a user profile,
log in to the SMARTMUSEUM system, use the recommender
system, and utilize the system on ones own mobile phone. Eight
personal digital assistant devices running the Windows version of
the system were made available for users trying out of the system
in their own time. The users were able to configure the system to
their needs; for example, they were able to set the motivation and
companion options to match their context.

The choice was made to measure user satisfaction through a
post-test questionnaire that was handed to the participants after
the user trial. Because we involved real users and wanted to use a
lightweight procedure, we based our questionnaire on the System
Usability Scale (SUS) [66], but modified it to suit the cultural
heritage domain. The SUS is a low-cost usability measurement
method that can be used for assessments of systems usability. The
method is suitable for usability studies in on-site user trials when
controlled experiments are not possible or suitable. It does not
provide detailed insight into usability, because it has only a limited
number of questions and produces a single value that represents
the usability of the system. We were not able to use the SUS to
measure our system against a baseline; we only wanted to get
an indication of whether the methods tested in the laboratory
experiments can benefit users when deployed in a working system.
Therefore, we decided not to use a single value SUS score but
report results according to each of the modified SUS questions.
In this way, we could benefit from the lightweight procedure
and grounded questionnaire provided by the SUS but were able
to gain insight into user responses to each of the questionnaire
items. Users were also asked whether they found some features
specifically useful or to be missing from the system.

10 Fine Arts Museum in Malta is a part of Heritage Malta.

7.2. Results

Table 2 shows the questions and results from the post-test
questionnaire.11 The system was found easy to learn to use (95.8%),
and users believed that they would not need technical support to
use the system (75%). The majority of the users considered the
functions well integrated (58.4%) or were neutral on this matter
(33.3%), and very few users thought that there were inconsistencies
in the system (4.1%). In addition, users believed that they would use
the system again, at other museums (91.7%).

In addition, the users were asked whether they had any problems in using the system and about any suggestions for improvements or general comments on the system. A major suggestion that
arose was map support for navigation within the museums. Another comment was that the users wanted to see explanations of
how the other objects were related to the one they were examin-
ing, and what made them related to the user profile. The users also
thought that it could be easier if they could plan a tour beforehand
by using a Web based interface and then retrieve the tour when
accessing the museum. Users who were domain experts or representatives of a museum suggested that the system should provide general predefined role associated or similar user profiles or
themes that a user could choose from when entering the museum.
The agreement between the users in the user trials was checked
with Kappa statistics [67]. Kappa measures concordance between
annotators by using nominal data, varying between 1.0 and
1.0. The agreement between users was found to be moderate to
substantial (Kappa = 0.59, p < 0.01).

8. Discussion and conclusions

Mobile recommender systems are becoming an increasingly
important area in information retrieval and semantic data access,
and they provide a new context in which the methods developed
over the past half century can be re-examined, further developed,
and evaluated. In particular, mobile devices limiting their users

11 The original questionnaire also had Strongly agree and Strongly disagree
categories. Only a few respondents chose Strongly agree and none Strongly
disagree. To make results interpretation easier, we combined the strong agreement and strong disagreement category with the Agree and Disagree category,
respectively.

1.010.90.90.80.80.70.70.60.60.5Precision0.50.40.4Recall0.30.3ClusteringNo clustering0.20.20.10.10.00.01.010.90.90.80.80.70.70.60.60.5Precision0.50.40.4Recall0.30.3ClusteringNo clustering0.20.20.10.10.00.064

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

Table 2
Results from the SUS post-test questionnaire in the user trials (A = Agree, N = Neutral, D = Disagree).
Question
I thought the system was easy to use and improved my museum experience.
I think that I would like to use such a system in other museums.
I found the system unnecessarily complex.
I think that I would need the support of a technical person to be able to use this system.
I found the various functions in this system were well integrated.
I thought there was too much inconsistency in this system.
I would imagine that most people would learn to use this system very quickly.
I found the system very cumbersome to use.
I felt very confident using the system.
I needed to learn a lot of things before I could get going with this system.

A (%)

N (%)

D (%)

willingness to formulate complicated search queries while enabling access to rich sensor information have increased the importance of accurate methods that can adapt to pervasive scenarios.

We have presented the SMARTMUSEUM system, a mobile recommender system to enhance access to digital cultural heritage.
The contributions of our approach are threefold. First, we presented an ontology-based personalization, annotation, and information filtering framework that is domain independent and
depends only on RDF(S) semantics.

Second, the filtering framework introduced three extensions to
the classical VSM retrieval method: ontology-based query expansion for triples, feature balancing, and result clustering. These were
found to lead to significant improvements in information filtering
accuracy. Third, we have shown how the SMARTMUSEUM system
is deployed in real world use and has been found highly satisfying
in user trials. In particular, the formal experiments and user trials addressed confirmation of the content heterogeneity hypoth-
esis, the over-specialization hypothesis, and the user satisfaction
toward the recommender system.

We found strong evidence that using ontologies to represent
objects and enhance information retrieval leads to substantial
improvement in recommendation accuracy. Therefore, we have
strong evidence to support H1. Using latent post-retrieval clustering increased the diversity of recommendation results and proved
to improve the general retrieval performance. Therefore, we also
found support for H2. Although not conclusive and without comparison to a baseline condition, the results of the field trial show
user satisfaction with the system in the intended use cases. In sum-
mary, the evidence is strong for both hypotheses, and we are able to
confirm the hypotheses and reject the null hypotheses. In general,
the results indicate that the combination of methods we proposed
results in significantly better retrieval performance than does the
baseline approach and can be useful in real world applications.

Our methods depend only on RDF(S) semantics and the distinction drawn among physical, content, and context descriptions. This
means that in principle the methods can be used with any domain
and data. However, they do have certain limitations when applied
outside knowledge-rich domains. The results reported in this paper were obtained in a cultural heritage domain for which rich
ontologies and high-quality annotations are available. We used
datasets that originate from two professionally curated museum
collections. The results should generalize to other cultural heritage collections and similar collections, such as travel, tourism,
and other points of interest datasets for which annotations are
available. However, the performance of the methods in different
types of domains, such as news articles or product search, remains
subject to further experimentation.

The linking experiment methods were tested within the
dataset, but we did not measure their performance against other
datasets available in the Linked Open Data cloud. There were two
reasons for this. First, our gold standard was limited to the datasets
from the two museums that we used in the experiments. It is well
understood that the datasets in the Linked Open Data cloud are

A requirement for high-quality annotation is often argued to
be the bottleneck of ontology-based systems. In our earlier work,
we have demonstrated that automatic annotation has become mature enough to provide high quality annotations for specialized domains [68]. By means of advanced linguistic analysis, it is possible
to acquire annotations automatically with an accuracy comparable to that of human annotators [68,69]. While fully compatible,
adoption of automatically annotated data in the retrieval framework would require further testing. It would also be important to
measure the performance of the methods by using datasets from
various domains and with diverse user scenarios and information
needs.

The results were obtained in an extension to the classical VSM
model but are adaptable to other models, such as probabilistic
models. Using user profiling and feature balancing with probabilistic models would necessitate re-engineering but could lead to even
better grounded methods, because the user profiling method that
we use is probabilistic.

high in volume but not in quality. The gold standard that we applied was a result of careful manual analysis of the whole dataset;
therefore, we wanted to ensure that the data used in all of the experiments possessed the same level of relevance assessment qual-
ity. Second, our discussions with the museum professionals left it
unclear how linking to external resources, such as DBpedia, could
benefit the museum visitors. The added value was seen as more
evident in the outdoor scenario, but measuring the linking in that
scenario without a comprehensive gold standard was not possible;
accordingly, we decided to use our dataset, for which we had relevance assessments. From our results in the linking experiment,
we expect that our methods would work for any linked open data
collection. However, the granularity and quality of the annotations
may vary in other datasets, especially datasets originating from
heterogeneous sources, and the performance of our methods in
cases of such variance should be further explored.

In the user trials, we used post-trial questionnaires to evaluate
user satisfaction with the SMARTMUSEUM system. Users had a
strong preference for the system and found it easy to use. They also
indicated that the system improved their museum experience and
that they would like to use the system again, at other museums.
This is a good indication of the value of the system in practice. The
post-test questionnaire is, however, a relatively simple method
and leaves much room for further study. We were not able to
test the specific features of the system individually and baseline
systems were not used in the field trials. Therefore, the results of
the field trials only suggest user satisfaction with the methods as
part of a practical system, and we are not able to prove that the
methods would lead to better user experience than some baseline
system not benefiting from our methods. On the other hand, the
results of the laboratory experiments provide controlled and well
supported results that are indicative of the performance of the
individual methods with real data. The main outcome from the
field trials is highlighting of unmet needs of users in real usage.
Users expressed a desire for additional navigation support and

Fig. A.9. An example of an annotation of object from the collections of Museo Galileo. The namespace dc and sm refer to the Dublin Core and a custom extension of the
Dublin Core properties for the cultural heritage domain, and aat to the Art and Architecture Thesaurus of the Getty Foundation.

links to external data sources. These are important future research
directions.

The research contribution of SMARTMUSEUM currently is
concentrated in personalized and semantic recommendation
methods. The ubiquitous computing techniques used in the
SMARTMUSEUM system rely on off-the-shelf solutions and could
be further developed. We switch between the indoor and outdoor
scenario on the basis of explicit manual intervention by the user
from either the user interface or the RFID reader. This is a practical
solution since the GPS positioning of the mobile devices is inaccurate indoors and should be complemented with other automatic
techniques. We have already taken the first steps toward better indoor positioning by using Wi-Fi. The Wi-Fi-based technique could
also be used to detect co-presence of users and automatically detect motivation and companions, which in the current implementation of SMARTMUSEUM have to be set manually by the user. The
system could also be improved by utilizing sensors that do not require users to read RFID tags. This would enable use of maps in the
indoor scenario to aid in navigation without any user intervention.
Also other sensors, such as cameras, microphones, accelerometers,
and compasses, could provide improved user experience.

An interesting avenue for further research is investigation of
how collaborative filtering techniques could be incorporated with
our ontology-based recommendation methods. In the current sys-
tem, the users companion(s) and motivation are based on explicit configuration performed by the user and curators of the

museum data. In contrast, automatic methods of inferring these
from user behavior would yield interesting research directions.
Data acquired collaboratively on the basis of other users profiles
could enable more serendipitous recommendations and, due to
knowledge of previous visits, by other users, allow more effective
prediction of the users needs. Such a hybrid approach would benefit from annotated content and ontology-based recommendations
but would also be able to capture the hidden indication of taste
originating from the collaborative behavior of users that is often
missing from annotated content. Also, providing explanations to
accompany recommended objects could increase the users trust
toward the system and improve decision making. This is especially
important in domains wherein users do not initially know what
they are looking for but are able to indicate their preference for
particular objects.

In summary, mobile recommender systems can benefit from
Semantic Web technologies as a data representation format.
Semantic reasoning and query expansion are necessary if one
is to obtain good retrieval performance, and diversity of the
results can be effectively obtained by means of latent postretrieval clustering. These can be implemented via a functional
retrieval framework using the methods presented in this paper.
Future research should concentrate on improving information
retrieval, recommendation, and personalization methods but also
on advancing ubiquitous computing techniques in combination
with semantic data processing.

T. Ruotsalo et al. / Web Semantics: Science, Services and Agents on the World Wide Web 20 (2013) 5067

Fig. A.10. An example of two sets of filtering criteria defined by the experts in the Museo Galileo. The namespace dc and sm refer to the Dublin Core and a custom extension
of the Dublin Core properties for the cultural heritage domain, and aat to the Art and Architecture Thesaurus of the Getty Foundation.

Acknowledgments

SMARTMUSEUM (the Cultural Heritage Knowledge Exchange
Platform) (www.smartmuseum.eu) is a research and development
project sponsored under the Europeans Commissions 7th Framework Programme (FP7216923). This work was also supported by
the FinnONTO project, funded by the Finnish Funding Agency for
Technology and Innovation (Tekes), the Academy of Finland Grant
(135536), a Fulbright Technology Industries of Finland grant, a
Finnish Cultural Foundation grant, and a Finnish Foundation for
Technology Promotion grant. We also want to thank all of the re-
searchers, developers, project managers, and museum staff who
participated in the SMARTMUSEUM project. Especially, we would
like to thank Frederic Weis, Nima Dokoohaki, Alar Kuusik, Marco
Berni, Mihhail Matskin, Tanel Tammet, Innar Liiv, Brian Restall,
Michel Banatre, and Silver Toomla.

Appendix. Examples of data and user profiles used in the
evaluations

A data entry describing a museum object form the collection
of Museo Galileo is shown in Fig. A.9. The data entry is divided
into three parts describing the physical, content, and context
description of the object. Fig. A.10 shows an example of filtering
criteria used in the experiments and defined by the museum
professionals.
