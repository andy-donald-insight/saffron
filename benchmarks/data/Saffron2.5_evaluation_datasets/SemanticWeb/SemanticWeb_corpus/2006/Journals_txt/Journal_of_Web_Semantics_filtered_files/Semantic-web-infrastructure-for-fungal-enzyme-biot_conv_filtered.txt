Web Semantics: Science, Services and Agents

on the World Wide Web 4 (2006) 168180

Semantic web infrastructure for fungal enzyme biotechnologists


Christopher J.O. Baker

, Arash Shaban-Nejad, Xiao Su, Volker Haarslev, Greg Butler

Department of Computer Science and Software Engineering, Concordia University, 1455 de Maisonneuve Ouest, Montreal, Quebec, Canada H3G 1M8

Received 15 November 2005; accepted 1 May 2006

Abstract

The FungalWeb Ontology seeks to support various data integration needs of enzyme biotechnology from inception to product roll. Serving as a
knowledgebase for decision support, the conceptualization seeks to link fungal species with enzymes, enzyme substrates, enzyme classifications,
enzyme modifications, enzyme related intellectual property, enzyme retail and applications. The ontology, developed in the OWL language, is
the result of the integration of numerous biological database schemas, web accessible text resources and components of existing ontologies. We
assess the quantity of implicit knowledge in the FungalWeb Ontology by analyzing the range of tags in the OWL files and along with other
description logic (DL) computable metrics of the ontology, contrast it with other publicly available bio-ontologies. Thereafter, we demonstrate
how the FungalWeb Ontology supports its broad remit required in fungal biotechnology by (i) presenting application scenarios (ii) presenting the
conceptualizations of the ontological frame able to support these scenarios and (iii) suggesting semantic queries typical of a fungal enzymologist
involved in product development. Recognizing the complexity of the ontology query process for the non-technical manager we introduce a
simplified query tool, Ontoligent Interactive Query (OntoIQ) that allows the user to browse and build queries from a selection of query patterns and
ontology content. The OntoIQ interface supports users not familiar with writing DL syntax allowing them access to the ontology with expressive
description logic reasoning tools. Finally we discuss the challenges encountered during the development of semantic infrastructure for fungal enzyme
biotechnologists.
 2006 Elsevier B.V. All rights reserved.

Keywords: Semantic Web; Ontology; Fungi; Enzyme; Description logic

1. Introduction

Fungi are microorganisms well known for the range of
novel enzymes they produce and enzymes of fungal origin are
now used in many industrial processes. Their sales contribute
strongly to the billions of dollars of revenue made by the biotech
industry. The path to product development, namely gene dis-
covery, enzyme characterization, mutational improvement and
industrial application is long and fraught with numerous hur-
dles, both with respect to the domain knowledge and technical
challenges. Both within an academic setting and in industrial
research and development many decisions are made on incomplete knowledge. This is partly the result of the information
overload scientists are currently experiencing and partly since
the required knowledge is distributed between numerous disci-


Corresponding author.
E-mail addresses: baker@cs.concordia.ca (C.J.O. Baker),

arash sh@cs.concordia.ca (A. Shaban-Nejad), x su@cs.concordia.ca (X. Su),
haarslev@cs.concordia.ca (V. Haarslev), gregb@cs.concordia.ca (G. Butler).

URL: http://www.cs.concordia.ca/FungalWeb/.

1570-8268/$  see front matter  2006 Elsevier B.V. All rights reserved.
doi:10.1016/j.websem.2006.05.001

plines. The current need in the enzyme research and development
environment is to have an integrated framework for discovery and decision support, namely an intelligent assistant [1].
This must integrate data from laboratory research, data accessed
from distributed database and textual resources such as enzyme
product literature, as well as the results of bioinformatics com-
putation. Existing technologies can be assigned to this need
for data integration. Specifically a formal knowledge framework is appropriate where ontologies are supported by tools
such as multi agent systems, text mining and logic reasoners.
Ontologies provide a conceptual frame for knowledge repre-
sentation, data integration and semantic mining. Multi agent
systems serve to provide advanced, programmable and controllable access to data distributed across the internet, albeit in the
form of product literature or database content made available
by web services. Information retrieval and extraction facilitates access to information available only in text. Logic based
query languages facilitate reasoning over the domain knowledge in ontologies. Combined with easy to use semantic query
tools users become enabled to pose complex questions to integrated knowledge resources. Yet in order to provide a reliable

semantic resource in a contemporary research and development
environment the scientific and technical span of the ontology
must encapsulate a broader and more interdisciplinary range
of concepts than in currently available domain specific ontolo-
gies. The full range of conceptualizations required by the fungal
enzymologist includes fungal species taxonomy, gene discovery,
protein family classification, enzyme characterization, enzyme
improvement, enzyme production, enzyme substrates, enzyme
performance benchmarking, enzyme assays, and market niche.
Inclusion of such concepts and instance data related to these
subject categories will provide knowledge repositories that support the manager in a scientific discovery process at various times
from its inception, through the data production to the result interpretation phase. Development of such a repository is one of the
goals of the Fungal Web data integration initiative.

2. The FungalWeb Ontology

The FungalWeb Ontology [2] is the result of integrating
numerous biological database schemas, web accessible textual
resources and interviews with domain experts and the reuse of
some existing bio-ontologies. The ontology includes both hierarchical structures supporting full subsumption taxonomies and
a broader conceptual frame with novel relationships for specific domain knowledge. The resources for fungus and enzyme
related terminologies and concepts come from the resources
listed below. In the rest of this paper we refer interchangeably
between OWL and DL terminologies.
 NCBI taxonomy database [3]: contains the names of all organisms including fungi derived from primary taxonomy litera-
ture.
 NEWT: a taxonomy database maintained by Swiss-Prot [4].
 BRENDA [5]: an enzyme database which provides a representative overview of enzyme nomenclature, enzyme features
and enzyme properties.
 SwissProt [6]: a protein sequence database providing highly
 Commercial Enzyme Vendors: companies that retail enzymes
provide detailed descriptions of the properties and benefits of
their products on their websites.
 The FungalWeb Ontology also reuses existing domain specific bio-ontologies such as Gene Ontology (GO) [7] and
TAMBIS [8].

curated annotations with a minimal level of redundancy.

While efforts to expand the conceptualization are continuing,
the ontology currently contains 3667 concepts, 157 properties
and 12,764 individuals. As shown in Fig. 1 most of the terminology in the ontology describes fungal organisms and fungal
enzymes. The classification of fungi presented in the ontology
is based on phylum, class, order, family, genus and species.
Species are considered as the fungal individuals. Enzymes are
classified based on catalyzed reactions recommended by the
International Union of Biochemistry and Molecular Biology
(IUBMB). Enzyme names are considered as the enzyme individ-
uals. Chemical names are considered as individuals of enzyme
substrates. Raw text segments describing enzyme applications

and the industrial benefits of enzymes were also modelled as
instances.

Different properties are defined to relate individuals. For
example the property has been reported to be found in relates
an enzyme individual to a corresponding fungal species individual and is based on the occurrence of a scientific publication
citing the existence of an enzyme in a given fungus. Examples
of such publications are recorded in the Brenda DB [5]. Fig. 2
shows a selection of roles in the ontology each with corresponding domain and range concepts. Concepts that have children
have the number of children included in brackets.

2.1. Ontology development

Our goal was to take advantage of the combination of the
OWL [9] framework with expressive Description Logics (DL)
without losing computational completeness and decidability of
reasoning systems. Prot eg e 2000 [10] was used (with an OWL
plug-in) as a knowledge representation editor. The Ontology
was designed with a high level of granularity and implemented
in the OWL-DL language. The ontology uses and integrates
existing bio-ontologies and their conceptualization by merging,
mapping and sharing common concepts using logics to build
a basic core upon which biotechnology specific concepts have
been added. Integration was required on two levels: data integration and semantic integration.

During the knowledge acquisition and data integration phase
of ontology development, we mostly dealt with biological content in form of database annotations, texts in the scientific
literature, Web pages and entries within distributed biological
databases. Platforms with differing syntax, scope, granularity,
logical notations and semantics had to be navigated. Existing
bio-ontologies written in different ontology languages such as
DAML + OIL, RDF and OWL were re-used. Integration of all
these data was achieved by manually normalizing extracted data
formats into a consistent representation.

Some of the resources such as TAMBIS, in OWL-DL for-
mat, were reused explicitly using semi-automatic tools such as
PROMPT [11] which generates lists of suggestions, based on the
similarities in class names between ontologies, for subsequent
human verification. Portions of the Gene Ontology, available
in different languages such as DAML + OIL (from the GONG
project) were converted into OWL-DL using a freely available
DAML + OIL to OWL converter [12]. We performed some manual adjustment to obtain an OWL-DL merged ontology and
checked the consistency of our merged OWL-DL ontology with
RACER [13].

Semantic integration was achieved by manually identifying
relevant data items located in different parts of various ontologies and reviewing their semantic commonality in order to
bring them in a unified frame of reference. In consultation with
experts we manually aligned concepts that are semantically close
through equivalence or subsumption. For example chromosome
is defined in GO annotations as a structure composed of a very
long molecule of DNA that carries hereditary information. It is
also considered as a sub-concept of dna-organization in TAM-
BIS. We decided to share this term as a sub-concept of dna-part

C.J.O. Baker et al. / Web Semantics: Science, Services and Agents on the World Wide Web 4 (2006) 168180

Fig. 1. The major resources included within the FungalWeb Ontology [2], EC (enzyme classification).

Fig. 2. Selected properties, domain, and range in the FungalWeb Ontology, EC (enzyme classification).

in the FungalWeb Ontology and assigned semantic commonality
between a very a long molecule of DNA.., DNA-Organization
and DNA-part.

Aptness (considering completeness, consistency and con-
ciseness) of the ontology for its intended application and the
scientific integrity was evaluated by posing DL queries with
RACER, a description logic reasoning system with support for
T-Box (concepts) and A-Box (individuals). Syntactic consistency was checked automatically by Knowledge Representation
editors and logical consistency was assessed by the Description
Logic reasoner. On average, RACER solves the subsumption
computations within a fraction of a second. The performance
of RACER was dependent on the number of individuals in the
ontology. The number of properties did not have an effect on the
response time, however we noted the number of property fillers
had the strongest influence on the performance with respect to
the retrieval of individuals.

Although we sought to validate the biological data and relations by citing their origin (database or literature) or by checking
consistency, validation by the domain expert was also necessary.
To assist the domain expert in this endeavor we facilitated the
use of nRQL [14,15] in order to retrieve values of annotation
properties used to annotate the ontology resources. (Section 4.1
summarizes this expressive description logic query language,
nRQL, which extends the capabilities of RACER query syntax.).
These annotations represent metadata (i.e. comments, creator,
date, identifier, source name, source URL, version, etc.) but can
not be used for reasoning. The query of annotation properties
is additionally useful for the ontology maintenance, versioning
and providing proof and trust in a semantic web system.

2.2. Ontology evaluation

For new users to consider the value provided by a given ontological conceptualisation and to assess it in their own context,

a multi faceted evaluation of the chosen ontology is necessary.
A wide range of criteria have been cited in the literature [16]
depending on the focus of the end user. Here we describe the
evaluation of the FungalWeb Ontology using the following crite-
ria: occurrences of multiple inheritances, the number of children
per concept, depth, and use of OWL tags that store implicit
knowledge. Furthermore, we compared the FungalWeb Ontology to 50 publicly available bio-ontologies [17], in order to
assess how amenable it is to knowledge discovery in the context
of other ontologies in the same general domain.

Our initial analysis involved the simple enumeration of
the OWL and RDFS tags in our ontology and 50 other
bio-ontologies. The FungalWeb Ontology was shown to
use the following OWL tags; rdfs:domain 37, rdfs:range
54, rdfs:subProperty 32, rdfs:subclass 3585, owl:Class 5423,
owl:disjointWith 4, owl:equivalentClass 1, owl:intersectionOf
2, owl:inverseOf 39, owl:sameAs, 372 owl:ObjectProperty 201,
owl:Restriction 34. In a subsequent analysis all counts pertaining to several DL interesting tags (tags which can be considered
as DL language elements supporting the derivation of implicit
knowledge) were normalised relative to the occurrence of the
owl:Class tag and multiplied by 100. To visualise the predominant usage of these tags we discarded scores below 25. This
analysis resulted in the patterns or profiles of tags recording
implicit knowledge in these bio-ontologies (Fig. 3) reflecting
their suitability for knowledge discovery using DL reasoning
tools. Seven patterns were found, none of which included more
than 6 tags. From the frequencies of each pattern we see that
pattern 2, containing rdfs:subclass alone, was most prevalent,
occurring 29 times. This is not untypical. The same usage pattern was previously identified as the most frequent in previous
studies of larger numbers of ontologies randomly selected from
the internet and representing a variety of subject domains [17].
The FungalWeb Ontology also displayed this pattern indicating
that it is not much different from the majority of other bio-

Fig. 3. Usage patterns of implicit knowledge OWL tags in 50 bio-ontologies. The combinations of DL interesting tags found in OWL bio-ontologies were assessed.
Numbers of tags in each ontology were normalised relative to the occurrence of the owl:Class tag in the ontology and multiplied by 100. The data was then cleaned
to remove insignificant use of tags, namely scores below 25 [17]. The FungalWeb Ontology exhibited the tag profile found in pattern 2.

C.J.O. Baker et al. / Web Semantics: Science, Services and Agents on the World Wide Web 4 (2006) 168180

Fig. 4. DL based evaluation of 50 OWL Bio-ontologies.

ontologies currently available which demonstrate relatively little
implicit knowledge. Other well known bio-ontologies exhibited
more complex patterns, namely Biopax level 1 [18], pattern 1,
and the OWL version of GO (biological process) [7] pattern
5. Pattern 2 was further identified as the pattern most significantly represented with respect to the total numbers of tags in
a pattern. The very large GO (biological process) ontology also
contributed significant numbers of DL interesting tags to pattern
5 which displayed the largest number of tags per pattern within
these 50 ontologies (Fig. 3).

We further analysed these ontologies for basic architectural
features using DL queries. Using such an approach we rapidly
assessed that the FungalWeb Ontology has a maximum depth of
12 levels, no occurrences of multiple inheritances and an average
of 1 child per concept. It currently contains 3667 concepts, 157
properties and 12,764 individuals. Fig. 4 shows the maximum,
minimum and average of these parameters in the 50 ontologies
studied. These results indicate that the FungalWeb Ontology has
on average a deeper hierarchy than the selected bio-ontologies. It
is clear of dependence on multiple inheritances since the ontology is predominantly a series of independent hierarchies linked
by top-level axioms. Multiple inheritance is sometimes considered the result of poor conceptualisation of domain knowledge.
It also presents obstacles to ontology integration, since is a
relations are permitted to mean different things in different contexts [19].

The ontology has a lean taxonomy falling in the lower range
of architectural complexity relative to other bio-ontologies.
However it has a higher than average number of concepts and
a significantly larger number of individuals. By contrast an
early version (biopax-levell.owl) of Biopax [18] had a shallower
depth, 6 levels, one occurrence of multiple inheritance, a similar level of children per class, 27 classes, 121 roles and one
instance.

In general the FungalWeb Ontology is architecturally relatively simplistic, being composed mainly of subsumption hier-
archies, and a similar knowledge representation system for the
scientific content could have been developed from more simple knowledge representation formalisms, storage and query
facilities. The choice to develop the ontology in OWL was motivated by a number of important issues. Using OWL permits easy
upgradability to more complex definitions and knowledge representation as and when needed. The option to specify conditions
for concept membership, domain and range of roles and transitivity of roles are all attractive features of OWL beyond a simple
directed acyclic graph (DAG) approach. These features of OWL,
however, also facilitate the employment of readily available and
powerful reasoning tools with expressive query languages that
allow A-box reasoning. The use of a simpler formalism, such

as DAG, would have required us to take on the non-trivial challenges of developing efficient tools for query processing or to
custom build a DAG representation for SQL. Furthermore, the
features of OWL-DL that facilitate the automated instantiation of
the ontology by reasoners according to necessary and sufficient
conditions of concepts are a highly desirable. Rapid classification and instantiation of newly discovered fungal enzymes
is an attainable goal for future versions of the FungalWeb
Ontology.

Despite the relatively low level of implicit knowledge and
moderate architectural complexity in the FungalWeb Ontology
we illustrate, in the next section, the versatility of the query capability afforded by the conceptualization. We show the high value
of large numbers of classes and individuals modeled explicitly
in the conceptualization for its intended audience with a number
of application scenarios.

3. Application scenarios

The goal of the following section is to demonstrate the
scope of the ontological conceptualization of the FungalWeb
Ontology and the relevance of the ontology in supporting a
range of cross disciplinary, real world application scenarios.
To do this we describe junction scenarios where the biotechnologist would seek assistance and interrogate the ontology.
We aim to demonstrate the benefit of semantic web technology to the life science manager and accordingly we illustrate
how the conceptualization facilitates the tasks listed below. We
also discuss the extension of the ontology to house individuals
of protein mutation information produced by natural language
processing.
 Identification of enzymes used in industrial processes.
 Identification of enzymes acting on polymeric substrates.
 Identification of enzyme provenance and common taxonomic
 Identification of commercial enzyme products for enzyme

lineage.

benchmark testing.

A scientific narrative illustrating the context and the conceptual frame supporting each of these semantic queries is provided
in the following sections. In Section 3.6 queries corresponding
to the following scenarios are written in first order predicate
logic. We note that not all the query capabilities demonstrated
here, using the FungalWeb Ontology, are exclusively possible
because of the employment of OWL rather than SQL queries
of a relational database. Nonetheless, we demonstrate that an
OWL conceptualization of biological knowledge can support
contemporary scientific queries.

3.1. Ontology for identifying enzymes used in industrial
processes

temic queries. The above queries are illustrated in Section 3.6,
Scenario 3.1.

Enzyme technologies pose significant opportunities to
treat waste products that are a considered nuisance within an
industrial process or pollutants in natural environment, e.g.
for bioremediation [20]. Enzyme technologies can additionally
provide access to otherwise wasted natural resources such
as cellulose for the production of bioethanol [21]. Within
an academic or an industrial enterprise a research manager
can frequently pose questions that cross multiple domain
boundaries, e.g. enzyme biochemistry and industrial enzyme
application. For example, a researcher wishing to identify a
niche market for a new enzyme may ask whether enzymes with
a particular property can be or already are used in industry.
We illustrate such a query to the ontology, asking whether
enzymes that use oxygen as an electron acceptor are used in
industrial processes. This query needs to identify instances of
the concept Enzyme that use oxygen as an electron acceptor.
This is achieved by reasoning over the subsumption hierarchy
in the ontology representing enzyme classification based on
reaction mechanism. Sufficient conditions have been stipulated
for instances to hold membership of the sub-concept of Enzyme,
With oxygen as an acceptor. These conditions stipulate that
the Enzyme requires an electron acceptor and that this acceptor
must be oxygen. If an instance of such an Enzyme exists, the
query checks whether these instances are related to an instance
of an industrial process through the property Is using. The
query itself returns the name of industrial processes in which
the defined enzyme is involved, namely coal liquefaction. The
instance laccase is not explicitly stated in the query or result
but is the primary link that allows the reasoner to assert that
the posed query is affirmative, i.e. that an enzyme which uses
oxygen as an electron acceptor can be used in the industrial
process.

Further to this a manager may be interested to know which
enzymes are not known to be used in industry, for the purpose
of identifying enzymes with future potential for industrial appli-
cation. This can be achieved using the NEG operator of the new
RACER query language which employs a local closed-world
(LCW) assumption such that A-boxes can be queried using negation as failure semantics. This allows the user to pose questions
taking into account the degree of completeness. Consequently
we can ask for the individuals of Enzyme which are not known
to be used in industry. nRQL is currently the only robust OWL
query language which allows for the execution of such autoepis-

3.2. Ontology for identifying enzymes acting on substrates

Within an academic or an industrial enterprise a research
manager can frequently pose the question, Could an enzyme
be used to degrade this novel chemical substrate? To determine if an enzyme is suitable to act on such a substrate a
domain expert knowledgeable in enzyme biochemistry would
typically evaluate a chemical analysis of the substrate and consider what enzymes carry out modification of the bonds in the
substrate. Presented here is an approach where key information in a report authored by an analytical chemist describing
the chemical nature of the substrate is used to query the ontol-
ogy. In this scenario the analytical chemist has analyzed and
identified an unknown chemical to be the naturally occurring
polymer pectin known for its gelling properties and use in food
conservation. It is composed of multiple units of the monomer
galacturonic acid. The chemists description A polymer containing repeated units of galacturonic acid contains the key semantic
terms polymer and galacturonic. In order to facilitate the identification of enzymes able to modify the polymeric substrate
pectin it is necessary for the ontology to contain a concept linking enzyme names with a semantic description of the substrates
acted on by that enzyme. In the ontology this concept is semantic word stem of the substrate of the enzyme reaction. Individuals of this concept are produced by a natural language
processing tool [22] which summarizes the IUB descriptions
of systematic enzyme nomenclature based on reaction mechanisms into nGrams. nGrams represent the most frequently
occurring word stems in the IUB descriptions (Fig. 5). Since
these verbose descriptions often refer multiple times to enzymes
by the systematic chemical substrate nomenclature or include
specific references to the verbose chemical names, nGrams can
act as summaries and individuals of these common-word stems.
For example in the case of enzymes such as Exopolygalacturonase or poly (1,4-a-d-galacturonide) glycanohydrolase which
acts on non methoxylated polygalacturonic acid (a form of
pectin) the verbose description can be reduced to the word stem
galacturon.

This nGram can be instantiated to the concept Semantic word stem of the substrate of the enzyme reaction
and
have a property relation with individuals of the enzyme to which
they relate to, namely a pectinase. The fungal enzymologist
asking which types of enzymes act on pectin would query for

Fig. 5. Semantically rich enzyme descriptions provided by the systematic classification system introduced by the International Union of Biochemistry (IUB) Enzyme
Commission.

C.J.O. Baker et al. / Web Semantics: Science, Services and Agents on the World Wide Web 4 (2006) 168180

Fig. 6. The conceptual frame supporting the identification of enzymes acting on poly galacturonic. nGrams of IUB reaction mechanism annotations are individuals
of the concept Semantic word stem of the substrate of the enzyme reaction highlighted in yellow. This figure was prepared using the ontology visualization tool
Growl [23].

individuals of enzymes with property relations with the individuals of the concept Semantic word stem of the substrate of the
enzyme reaction, using galacturon (Section 3.6, Scenario 3.2).
The following pectinases; pectinesterase, pectin acetylesterase,
endopectinase, exopolygalacturonase, pectate lyase, pectate
disaccharide-lyase (exo-polygalacturonate lyase), pectin lyase
are thereby identified. The conceptualization supporting this
scenario is shown in Fig. 6.

Having identified what types of enzymes could be used to
modify the substrate of interest, the fungal enzymologist would
further pose the question where are such enzymes found. In the
next section we show how the ontology can be used to answer
this question.

3.3. Ontology for determining enzyme taxonomic
provenance

Taxonomic provenance of enzymes (which enzymes are
found in which fungal species) with industrial potential has long
been an interest of microbial biotechnologists. In spite of the
recent trend, for finding new genes in environmental DNA samples from diverse environments and cloning genes directly from
these sources, scientists continue to use bioinformatics techniques to infer a taxonomic origin for these sequences since
such information can provide further highly relevant contextual
insights [24]. Taxonomic groups that have provided the most
useful enzymes or natural products to date continue to be investigated as providers of new enzymes/genetic material or small
molecules [25,26] and the identification of useful enzymes from
novel taxa can open up new avenues of discovery [27]. Further-
more, laboratory isolation to the taxa of interest can be enhanced
on the basis of the knowledge of specific nutritional and growth
requirements of the specific taxonomic groups in question. Iden-

tifying taxonomic provenance is therefore a relevant component
within the Gene Discovery process.

Having identified enzymes able to modify pectin the same
fungal enzymologist wishes to know which fungi are known to
produce pectinases and the common lineage that these species
share. Identifying the common lineage requires identifying
the most fundamental taxonomic group that unites all species
known to produce the enzyme of interest, akin to finding a common ancestor. For a small number of species this is a relatively
simple task that can be accomplished using online web site
resources [28] but it becomes significantly more challenging for
a wide number of species producing the same enzyme. Within
the FungalWeb Ontology a fungal taxonomy is represented in
a deep hierarchy of taxonomic units/concepts. A key property
between fungi and enzyme has been reported to be found in
permits the identification of species found to have pectinases.
Querying this property we can retrieve all fungal individuals in
the knowledgebase that are known to produce a given enzyme
such as pectin lyase. Subsequently we can compute the lineage
for each species known to produce this enzyme using RACER.
The RACER command individual types allows us to retrieve
the concepts which instantiate a fungal species individual and
permits us to identify the common lineage between them. Both
these queries are illustrated in Section 3.6 (Scenario 3.3). The
common lineage of pectin lyase producing fungi, according
to the available individuals in the ontology, is the sub phylum
of the Ascomycota called Pezizomycotina known anatomically
for producing mycelia that make ascocarps (ascus-bearing
structures also called ascomata) with hymenia. Similar types
of discovery are cited in the literature providing assertions,
such as, large-subunit monofunctional catalase enzymes are,
so far, restricted to several representatives of fungi within the
Ascomycota subphylum Pezizomycotina [29]. In the future

identification of enzyme families found uniquely in specific
taxonomic groups could use semantic web technology.

3.4. Ontology for enzyme benchmark testing

When a Gene Discovery platform yields a new enzyme product suitable for an industrial application, be it by directed evolution or more traditional approaches, biotechnologists carry out
benchmark performance testing with commercially available
competitor enzymes [24]. Standardized assays and conditions
are used to determine the likely potency of the new product and
to consider whether further enzyme improvement is necessary.
Identification of vendors supplying competitor enzymes suitable
for a given application is a necessary yet time consuming step
in this process.

To benchmark a promising polygalacturonic acid degrading
enzyme it is necessary to retrieve all commercial enzyme products sold to an industry using pectinases, e.g. the fruit processing
industry. We manually instantiated to the ontology individuals
describing the applications of enzymes, their industrial benefits
and the names of enzyme vendors and products. This permits
us to query the ontology for enzyme products containing pecti-
nases. This is illustrated in Section 3.6, (Scenario 3.4). Fig. 7
shows instances of commercial enzyme products, Depol 40L040L and Cellulase 13P-013P in the industrial enzyme conceptualization of the ontology. Using up to date information of this
kind the scientist can coordinate a comprehensive benchmarking study of competitor enzymes, flag promising enzymes for
further mutational improvement or identify a suitable market
niche for new enzymes. We are developing agent systems to
automatically retrieve such individuals from distributed websites describing product literature in heterogeneous formats.

3.5. Ontology for enzyme improvement

Where existing enzymes are known to have a suitable catalytic capability for a given application, and where further
benchmarking studies show sufficient enzymatic potency for a
given application, there may still be further considerations. Such

an enzyme may not have the required functional properties such
as pH range or temperature optimum. The enzyme however can
still be a good candidate for further mutational enhancement.
When considering the improvement of the properties of an existing enzyme there are a range of options [30]. To determine which
would be the most successful strategy the scientist would review
literature describing the methods employed with close attention
to the success of the strategy in improving enzyme properties. Of
particular importance is the extent to which a particular approach
has improved a property and how much additional improvement
is possible. The scientist may ask what is the largest increase
in temperature stability of an enzyme achieved by mutational
improvement. Such questions are inherently difficult to answer
and require considerable literature review across mutational
studies in many different protein families. Ontological and text
mining technologies can render and provide access to knowledge
concerning the mutational approaches and improvements along
with wild type properties of the individual enzymes investigated.
The current access route to this information requires manual
browsing of distributed database resources such as BRENDA
[5] and the scientific literature [3].

To provide access to such knowledge multiple instance
data has been generated using a custom designed tool for
natural language processing of scientific full text articles [31].
This instance data describes the protein name, the wild type
organism, the PMID: PubMed identification number of the
paper citing the mutation, the GI: Genbank accession number of
the protein, the mutation (Wild Type Residue-Location-Mutant
Residue) and the impact of the mutation. This type of instance
data could be automatically instantiated to the concepts in the
FungalWeb Ontology. To obtain a deeper semantic access to the
impact of a mutation from a full sentence, additional concepts
are needed within the ontology. Currently we are considering to
introduce concepts to permit ranking of such sentences based
on descriptions of changes in enzyme properties (shift, increase,
more active, fold, destabilize, decrease, remain same), the direction of the change (positive/negative), units of measurement
(half life, Kcat, hydrolysis efficiency, pH) and the biological
property of the enzyme that has been altered (catalysis, stability,

Fig. 7. Conceptual frame supporting the identification of enzyme vendors, the characteristics and application domains of their products.

C.J.O. Baker et al. / Web Semantics: Science, Services and Agents on the World Wide Web 4 (2006) 168180

folding). Appropriate synonym lists for these concepts are
additionally being developed. These additions to the FungalWeb
Ontology will facilitate semantic access in a manner far superior
to manual browsing of texts and database content. Answers
to questions such as Find the locations of all mutations in all
xylanases that have been reported to have delivered enhanced
temperature or pH profile could be enabled. Such a query is
currently not answerable from any biology database.

3.6. Application scenario queries

Fig. 8 shows, in First Order Predicate Logic, the queries to
the ontology outlined in the application scenarios. Answers to
the queries are included along with relevant RACER syntax not
describable in logic.

4. Semantic querying

Beyond the development of the ontology for its intended use
we have been forced to recognize the importance of providing simple query access to an ontological conceptualization for
non-technically minded experts who acted as domain content
evaluators of the ontology. The Lisp based syntaxes of DLbased query languages (nRQL and RACER) are reported to be
difficult for domain experts [32]. For this reason we sought to
develop an interactive query tool called the Ontoligent Interactive Query tool (OntoIQ) [33] which mirrors the basic query
functionalities provided by nRQL used with RACER with the
advantage of providing browse and click functionality. This
tool gave fungal biologists the opportunity to interface with the
FungalWeb conceptualization, to assess its content and derive

Fig. 8. Queries corresponding to FungalWeb Ontology application scenarios written in First Order Predicate logic. The Racer command Individual types cannot
be expressed in first order logic.

Fig. 9. Query patterns used in Ontoligent Interactive Query (Onto-IQ).

insights made possible because of the use of semantic web
technology.

4.1. Ontoligent interactive query

OntoIQ provides query access based on the selection of a
query patterns and domain specific information from the ontol-
ogy, which are then translated to the equivalent nRQL syn-
tax. nRQL is a relatively new DL-query language and recent
studies [34] contrasting it with existing DL query languages
have identified nRQL as a highly expressive prototype. nRQL
extends the capabilities of RACER with a series of query atoms,
namely Unary concept query atoms, Binary role query atoms,
Binary constraint query atoms, Binary same-as atoms, Unary
has-known-successor atoms, and Negation atoms. For some ele-
ments/operations of nRQL queries a closed world assumption
is assumed, referred to as active domain semantics. In such
cases only named individuals from the A-box are considered as
matches for query variables. A detailed description of nRQL is
given in [14] and verbose examples outlined in [15].

OntoIQ simplifies nRQL query atoms for the lay user, presenting them here as the query patterns, namely concept pattern,
role pattern, intersect-conjunction pattern, union-disjunction
pattern and the and-combination pattern. Using patterns as templates users can build up complex queries irrespective of prior
experience of scripting DL-syntax. Fig. 9 summarizes the query
patterns available in OntoIQ highlighting the capabilities of the

query patterns and the information that must be provided by
the user. Building queries through browsing requires a user to
identify the pattern required for the type of query and then
select concepts, roles, the individuals of the concepts or the
relationships among these individuals within the ontology. For
elementary queries a natural language description of the complex query is synthesized to describe the query built by the
user. After the translation of the pattern to nRQL syntax the
query is sent to a RACER server previously loaded with the
ontology. Results are returned to the user in a processed form
of the RACER output. Query syntax can be saved and modified subsequently such that new users get the chance to learn
more expressive queries used by other researchers. Syntax and
results can also be exported for use by other applications making it conceivable to integrate ontology query and output into a
workflow.

Given the semantic integration of the data sources in the
ontology and the availability of the axioms for browsing, it
is possible for the OntoIQ user to query without identifying
storage locations of specific data or making complex table joins
in SQL. These are typical hurdles to the domain expert trying
to use relational databases. As a consequence a new degree
of freedom is enjoyed allowing them to pose new kinds of
queries that they were interested in. However this is not possible
without a learning curve which requires the user to become
familiar with (i) the available query patterns, (ii) how to use
or combine these to compose the desired query and (iii) the

C.J.O. Baker et al. / Web Semantics: Science, Services and Agents on the World Wide Web 4 (2006) 168180

Fig. 10. Screenshot of Main Query screen of OntoIQ showing results returned by RACER.

available axioms in the ontology of choice. For domain experts
already familiar with SQL there is a shorter learning curve.
To date domain experts have typically employed relatively
simple query patters involving role patterns or combinations
of role patterns and concept patterns. Consequently some of
the expressivity of the query language is not used, but remains
available for advanced users. The utility of this query paradigm
is deserving of further exploration in the context of other query
paradigms available to non technical users.

4.2. User overview

OntoIQ is freely available and can be downloaded along
with the FungalWeb Ontology from the FungalWeb web-
site. http://www.cs.concordia.ca/FungalWeb/Downloads.html.
At start up a user is required to connect to a RACER server,
either locally or across a remote connection, then load an ontology file, check consistency and run classification.

Queries can then be built using pattern templates for which
the user selects domain specific information (concept, instance
or roles) from the ontology, employing the browsing features
of OntoIQ. Translation of completed patterns into nRQL query
syntax is initiated by the user while OntoIQ carries out automated mapping. Users send nRQL syntax to the RACER server
which returns the query result. Import and export of query syntax or query results in XML format are additional features of the
tool. A screenshot of the main query page of OntoIQ (Fig. 10)
shows results returned by RACER.

5. FungalWeb challenges

In the process of employing semantic web technology to
build ontology and a large knowledgbase in the domain of fun-

gal biotechnology, we had to deal with a variety of different
challenges. Major challenges included working with highly heterogeneous and volatile data, the integration of ontologies implemented in different languages, working with different semantic
tools and platforms. Adding to this the communication between
domain expert and ontology engineers is a critical one and there
is a significant challenge in imparting knowledge to engineers for
its representation. Ideally a team of experts is required that can
sufficiently well overlap with one another in translating needs
and requirements. As is typical of such projects frequent and
dependable access to a domain expert is an important criterion.
Such an expert must also be able to suggest at the outset relevant
scientific questions that the content and structure of the ontology
must support. This focuses the development of the ontology to
the end user needs. The breadth of the subject domain required
by fungal enzymologists made the development of the conceptualization a challenge in this regard. The scale and nature of the
resources incorporated into the ontology also resulted in the relatively simplistic hierarchical anatomy of the ontology. While
consulting with domain experts it became apparent that they do
not all think at the meta-level, with respect to integrating diverse
sets of knowledge. Domain experts will focus on their own area
but not necessarily on how they connect, which is often left to the
ontology engineer which may not be optimal. A meta-reviewer
is required.

Given the complexity and acumen required for building
integrated knowledge repositories significant attention must
also focus knowledge retrieval from the ontology, both with
respect to the derivation of new insights or knowledge and
easier access to information. Inclusion of implicit knowledge
about a domain within ontologies, such that reasoning tools can
make non-obvious discoveries, is still an infrequent occurrence.
The expressivity of OWL outweighs its actual use and recent

studies [17] have indicated that few ontologies make full
use of all available OWL tags. We produced an ontological
frame of predominantly explicit knowledge which evolved with
particular query capabilities and axioms in mind. Not being able
to fully instantiate the ontology, as this time consuming step
is not easily automated, limited our ability to illustrate the full
query potential of the conceptualisation. We also recognize that
the ontology does not currently support reasoning much beyond
the use of subsumption with conjunctive queries. Nonetheless,
we have developed a core ontology that we believe is easily
extendable and can support relevant research queries of the
enzymologist. A few of these have been illustrated in the
application scenarios (Section 3.6).

Gaining recognition for the utility of the conceptualization
has also been a challenge, since access is difficult for domain
experts who are not ready to learn new syntax to pose queries.
This was the motivation behind OntoIQ. Though the tool still
requires users to learn a new approach to querying a knowledge
resource, the challenge posed by the syntax of the query language is now less important. Users are then faced with two new
challenges that will impact on their ability to access the desired
information. Firstly, how to illustrate boundaries of the ontological conceptualization (what is included and what is not). This is
often facilitated by the use of graphical interfaces such as Growl
[23]. However visualization alone is not sufficient since it is
not integrated with query functionality. Secondly, how do users
map their queries into patterns that can match the conceptualisations axioms to retrieve the desired results? Users must become
familiar with the properties, and their domain and ranges, used
in the conceptualisation as well as the capabilities of each of the
query patterns. Domain experts have expressed concerns about
the shift in thinking that is required, namely selecting a pattern
before formulating the content of a query. This sometimes seems
counterintuitive for the beginner. However we considered this
challenge in the design of the tool and provide the functionality to save query patterns with a natural language description
such that they can be reused at a later time by the same or less
advanced users. We have also considered a separate approach to
querying the ontology, namely a natural language query interface which can translate natural language into query patterns.
Development of such a tier is currently underway [35]. In this
context we note the form of prose used by the ontology engineer and user can be sufficiently different that this can impact
upon the effectiveness of query-answer functionality. For example simple axioms such as Substrate-Is activated by -Enzyme
could be expressed in a number of additional ways depending
on the scientific vocabulary of the user. Performing direct queries
to ontologies using description logic query tools is an emerging
paradigm. OntoIQ makes the existing functionality of nRQL
available to the non technical knowledge worker, albeit with
a learning curve. As such it makes a relevant contribution to
the evolution of knowledge discovery technology. In summary,
the FungalWeb initiative has made important steps in migrating knowledge based technologies to the life science domain,
both in the understanding of the challenges involved and in
providing a prototype solution as an inspiration for subsequent
initiatives.

Acknowledgements

This work was financed by the G enome Qu ebec funded
project Ontologies, the semantic web and intelligent systems
for genomics.
