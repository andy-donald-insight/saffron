EKOSS: A Knowledge-User Centered Approach

to Knowledge Sharing, Discovery, and

Integration on the Semantic Web

Steven Kraines1, Weisen Guo2,1, Brian Kemper1, and Yutaka Nakamura1

1 Division of Project Coordination of the University of Tokyo, Tokyo 277-8568, Japan

{sk, gws, bkemper, yutaka}@cb.k.u-tokyo.ac.jp

2 Inst. of Systems Eng. of Dalian University of Technology, Dalian 116024, China

guows@dlut.edu.cn

Abstract. The scientific enterprise depends on the effective transfer of
knowledge from creator to user. Recently the rate of scientific knowledge production is overwhelming the ability for researchers to process
it. Semantic web technologies may help to handle this vast amount of
scientific knowledge. However, automatic computerized techniques that
extract semantics from natural language text for use in matching with
the requests of knowledge seekers achieve only mediocre results. Clearly,
semantic descriptions of expert knowledge that are constructed by the
knowledge creators themselves will be more accurate. We report an approach and software implementation of a knowledge sharing platform
based on semantic web technologies, called EKOSS for expert knowledge
ontology-based semantic search, that helps knowledge creators construct
semantic descriptions of their knowledge. The EKOSS system enables
knowledge creators to construct computer-interpretable semantically rich
statements describing their knowledge with minimal effort and without
any knowledge of semantic web technologies.

Keywords: semantic search, knowledge sharing, inference, ontology.

1 Introduction

The scientific enterprise has brought enormous wealth to society in the form
of expert scientific knowledge. However, recently concern has been raised that
knowledge is being produced in scientific research much faster than we can
process it. Some writers have called this a knowledge explosion, pointing to
indicators such as an exponential increase in papers written in specific fields of
scientific research [1], [2]. Semantic web technologies are being looked to as a
potential approach for better handling this vast amount of scientific knowledge
[3]. We report an approach and software implementation, called EKOSS for expert knowledge ontology-based semantic search, to support knowledge sharing
by using semantic web technologies. EKOSS takes the approach of enabling the
knowledge creators to construct semantic descriptions of their knowledge that
are better suited for computer-based processing and matching. In this paper, we

I. Cruz et al. (Eds.): ISWC 2006, LNCS 4273, pp. 833846, 2006.
c Springer-Verlag Berlin Heidelberg 2006

S. Kraines et al.

describe the basic approach and architecture of the EKOSS system. An accompanying paper gives details on the EKOSS system implementation [28].

We have described the scientific enterprise as a knowledge cycle where knowledge generated by research scientists is continually returned to a global repository of scientific knowledge that forms the basis for further scientific research
[5]. The cycle proceeds through stages of problem identification, experimental
design, data analysis, and knowledge synthesis. At each stage of the process, the
research scientist looks to the existing repository of scientific knowledge in the
form of media such as papers and conference proceedings in order to discover
previous research findings or hints that could help to achieve the goal of synthesizing useful new knowledge. Finally, the research scientist must input this
new knowledge into the repository of scientific knowledge so that it is available
to other research scientists for their research activities as well as to members of
society for addressing various societal needs.

In the past, a diligent researcher could have read all of the papers in a particular field of scientific knowledge or at least scan abstracts of all potentially
interesting papers. However, as the quantity of published results continues its
exponential growth, researchers face the difficult problem of deciding which of
the current research to invest time reading. Various techniques such as Google
Scholar and the Web of Science can help researchers identify which scientific
papers are most likely to be useful. However, despite remarkable progress in
establishing computer-searchable electronic repositories of scientific papers and
algorithms for extracting keywords automatically from those papers, the effectiveness of these techniques remains limited.

The fundamental problem is that scientific papers, in the way that they are
published today, do not lend themselves well to computer-based techniques for
matching papers with searches for knowledge. While scientific papers a century
ago could be seen as a form of correspondence between people, writing a paper
today can be compared to putting a message in a bottle and hoping that someone will find it on the Internet sea. Researchers cast a wide net using search
engines such as Web of Science, but invariably they end up with many unrelated
bottles, false positives, and they end up missing many important messages, false
negatives. For example, we conducted a search on Google Scholar for a paper
titled a flexible model integration approach for evaluating tradeoffs between
CO2 emissions and cost in solid oxide fuel cell-based building energy systems
that was published by one of us in the International Journal of Energy Research
using the keywords building distributed, energy systems, fuel cell, gas
turbine, and electricity demand that were contained in the papers abstract.
Only four papers in the top thirty hits had any reference to distributed energy
systems in buildings that combine a fuel-cell with a gas turbine. The paper that
we had wanted to find was the only paper that was actually about distributed
energy systems contained in buildings that combine a fuel-cell with a gas turbine
to supply electricity demand of buildings, and it ranked twenty-seventh out of
thirty.
?

?

?
2 Using Semantics for More Accurate Searching

By using tools and protocols developed for the realization of the Semantic
Web, such as ontologies implemented in OWL-DL, statements with computerinterpretable semantics can be constructed. Logical inference and rule-based reasoning can be used to evaluate matches between such semantic statements, potentially resulting in a far more accurate mechanism for identifying what knowledge is most likely to be useful to a person who is seeking knowledge related
to a particular condition, object, or design. For example, we could specify that
the knowledge contained in the paper referred to above describes a study of a
building containing a distributed energy system having as a part a fuel
cell and as another part a gas turbine that is used to supply electricity de-
mand of the building. Using the predefined T-box structure of the ontology,
a logical reasoning engine could reduce false negatives by knowing, for example,
that office building is a type of building and that a fuel cell is a type of
energy device. Furthermore, by using an A-box to specify that both the fuel
cell and the gas turbine are parts of the energy system, which in turn is
a part of the building, we can reduce false positives. The role of semantics in
reducing false positives and false negatives is illustrated in Fig. 1.

The effectiveness of this kind of semantic search is dependent on the accuracy
and richness of the semantic statements. In particular, while natural language

Fig. 1. Semantic matching versus keyword search. A researcher is looking for knowledge
related to a building that has a part energy system with type distributed, which
in turn has parts fuel cell and gas turbine. A simple keyword list matches with the
wrong knowledge contents (broken lines). Only the semantic description with declared
relationships between the instances of the keywords matches with the correct knowledge
contents (solid line).

S. Kraines et al.

processing (NLP) techniques can help to extract useful semantics from scientific
papers [6], [7], [8], even the best NLP methods still do not perform well in terms
of precision and recall of scientific papers [9], [10].

Semantic statements made by the researchers who created the knowledge
could be expected to be more accurate. We argue that researchers would be
willing to make at least a small effort to publish their knowledge in a particular
format if that format could be guaranteed to be significantly more effective at
reaching the people who can most benefit from the knowledge. This is analogous
to attaching a transmitter that sends out a signal advertising the content of
the bottle. Authors of papers and conference abstracts do this when they choose
keywords to attach to their manuscript that they feel most accurately represent the knowledge contained, and using a controlled vocabulary for keywords
helps make the transmission more clear. We believe that, with only a small additional effort, researchers could attach far more effective transmissions to their
papers through the use of semantic statements based on formal ontologies. Al-
ternatively, reviewers or editors could attach semantic descriptions of the papers
based on their objective understanding of the main messages in the paper. The
key requirements in our approach are that the process of authoring the semantic descriptions be decentralized and that the authoring process not require any
special expertise on knowledge engineering or semantic technologies.

We have developed a prototype web-based system, called EKOSS for Expert
Knowledge Ontology-based Semantic Search, to support this kind of semantic
markup of both scientific papers and other knowledge resources that describe
some expert knowledge and search requests for scientific knowledge related to
specific conditions and/or problems. We use ontologies based on description
logics to provide simplified languages in specific domains of knowledge that can
be reasoned against using DL reasoning software. The EKOSS system lets users
make both semantic descriptions of knowledge and semantic queries to express
search requests for that domain. We also support the reverse: that is semantic
queries to express conditions that must be filled for particular knowledge to
be applicable and semantic descriptions of the particular conditions for which
knowledge is being sought. We use the RacerPro reasoner to evaluate the matches
between knowledge descriptions and search requests as well as to evaluate the
consistency of semantic descriptions and queries for both knowledge and searches
[11]. The EKOSS system supports the use of multiple distinct ontologies. A set
of administrator tools are provided for loading new ontologies and modifying
existing ones, and we are developing user interfaces for modifying the existing
ontologies as described in the last section of this paper.

3 The Role of EKOSS in Scientific Knowledge Sharing

The EKOSS system is being developed as a part of a four level architecture for
scientific knowledge sharing, discovery, and integration that we have described
in previous publications [5], [13], [12]. Briefly, the four levels of the architecture framework, shown in Fig. 2, are as follows. Knowledge resources, including
?

?

?
scientific papers, databases and simulation models, created by knowledge experts
around the world form the base level of the framework. Tools are provided at the
second level to each knowledge expert in order to publish semantic descriptions
of that persons expert knowledge. At the third level, software agents representing each of the knowledge experts communicate to identify potentially useful
knowledge sharing opportunities based on the semantic descriptions constructed
at the second level [13], [14]. The fourth level holds knowledge integration tech-
nologies, such as the semantic distance matrix generation tools that we describe
at the end of this paper and the distributed object-based modeling environment
DOME being developed at the CAD laboratory of the Massachusetts Institute
of Technology. DOME can be used to integrate the knowledge discovered at
the third level over the Internet in order to rapidly synthesize new integrated
knowledge through scenario analyses and optimization [15].

Fig. 2. The four level architecture for knowledge sharing, discovery and integration
proposed by the authors

The EKOSS system is intended to implement the second level of this frame-
work. Specifically, the EKOSS system provides a web-accessible knowledge sharing platform with the following features:

 an ontology browser for examining the available ontologies and supporting

dialogue concerning ontology development,

 a personal repository of Knowledge Projects that contain semantic descrip-

tions and queries for representing specific expert knowledge of a user,

S. Kraines et al.

 a personal repository of Search Projects that contain semantic descriptions

and queries that represent knowledge interests or requirements of a user,

 a semantic search engine based on the RacerPro DL reasoner with extensions

for rule-based reasoning and datatype reasoning.

EKOSS Knowledge Projects and Search Projects have essentially the same
structure. Each project can contain one or more semantic descriptions that represent the details of that project, i.e. the knowledge contained or the conditions behind the search. Projects also can contain several generalized semantic
queries to represent the conditions that should be filled in order to establish a
match. Often, the Search Projects will contain semantic queries, such as find me
all knowledge projects that mention buildings that contain fuel cells, and the
Knowledge Projects will contain semantic descriptions, such as this is knowledge about a office building that contains an energy system that in turn contains
a polymer electrolyte fuel cell. However, the reverse is also useful. For example,
a semantic query can be used to specify a particular condition that must hold
for the knowledge represented by a Knowledge Project to be applicable: this
knowledge is applicable to situations where there exists a building whose energy
demand is supplied by a local energy device. Search Projects can then make use
of semantic descriptions to describe the particular conditions for which knowledge is being sought: we are designing an office building with a microturbine
as an energy supply device.

We give a simple example here of creating a semantic description for the
matching knowledge shown in Fig. 1. A researcher seeking to share her knowledge
regarding buildings with energy systems that have fuel cells and gas turbines
logs in to her local EKOSS server and creates a new knowledge project. After
entering a name and other information for the project, she clicks a button to add
a semantic description to the project and selects one of the ontologies available
on the EKOSS server to create an A-box describing the object of her knowledge.
The EKOSS ontology browser is displayed, and the researcher navigates the
subsumption taxonomy of the selected ontology to find the concept for building.
After navigating the subsumption tree to the class in the ontology that best
represents the concept that she wants, she presses the Add button to create
an instance of the selected class, building, in her A-box and optionally adds a
text label to the instance.

The researcher can repeat the process above to add another instance or use
the Add Property interface to add an object or datatype property to an existing instance. Selecting Add Property displays a tree of properties that can
take building as a domain class (Fig. 3). The researcher wants to indicate
that the building has as a part an energy system with a fuel cell and a gas
turbine, so she finds the property has part, which is a subproperty of compo-
sition of individual. The Add Property interface shows a subsumption tree
of the classes that can be ranges of has part. The researcher finds the class
energy system and sets it to be the range of has part. The EKOSS system
creates an instance of energy system and again lets the user label the instance
?

?

?
if desired. The user continues to create instances and properties until the A-box
for the knowledge description is completed. An interactive directed graph of the
A-box can be displayed by selecting graph view (Fig. 4).

Fig. 3. The add property page for adding properties to an instance of the class
fuel cell

Semantic descriptions and semantic queries are completely interchangeable,
that is a semantic description of one particular project can be declared to be a
semantic query or description of another Knowledge or Search Project. Moreover,
a Knowledge Project can function as a Search Project and vice versa. This feature
of EKOSS both enhances its effectiveness and reduces the learning curve. Each
Knowledge and Search Project serves as a node on a directed graph of knowledge,
with links between project nodes directed from the queries of the origin project
to the descriptions of the destination project (Fig. 5). For example, a directed
link from project A to project B means that the abstraction of the knowledge
(or request for knowledge) represented by queries in project A is matched, at
least in part, by the detailed semantic representation of the knowledge (or search
conditions) in project B.

Multiplicity of semantic queries has a special meaning  by creating multiple
versions, that is subsets, of a template query, it is possible to evaluate partial
matches and special conditions for a match between that project and the semantic description of another project (see [4] for more details). For each semantic
query in a Knowledge or Search Project, the project creator can set a matching
weight value and a match type flag. The match type flag specifies whether

S. Kraines et al.

Fig. 4. Graph view of the completed semantic knowledge query. Boxes indicate in-
stances, and arrows show the property connections. The actual instance class is shown
to the right of the colon; the user defined instance label is shown to the left of the
colon.

Fig. 5. Example of a match between two semantic knowledge description A-boxes. The
instances in A-box used as the search condition are shown with black labels, and the
instances in the A-box used as the matching knowledge description are shown with
blue labels. The color of the instances indicates the type of instance. Arrows show the
properties in the A-boxes connecting the different instances. The matching instances
are shown with thick red borders.

(a) all of the instances in the query must bind with instances in the description
in order to score a successful match and contribute the weight of the query to
the overall match score (the default behavior) or (b) at least one of the instances
must not bind with any instances in the description in order to score the successful match. For example, we can represent the following search condition: I am
?

?

?
looking for a building that should contain an energy system, preferably contains
a fuel cell, must not contain a diesel engine, and should not contain any kind of
engine using the four queries and settings shown in Table 1.

Table 1. Search queries, match types, and weights for the example given in the text

Search Query

Match Type

Weight

building physically contains energy system Must Match
building physically contains fuel cell
-2
Must Match
building physically contains diesel engine Must Not Match 5
building physically contains engine
Must Not Match 1

4 Approaches for Constructing Semantic Descriptions

Based on the EKOSS Experience

We are currently employing over 30 students from both undergraduate and graduate courses in fields of environmental technologies and life sciences at the University of Tokyo to create semantic descriptions for the EKOSS server that we
have deployed at http://www.ekoss.org. From our own experiences in creating
semantic descriptions of knowledge and search conditions for the EKOSS system
together with student feedback, we have found that three approaches are particularly effective. The first approach to constructing a semantic description is to
begin by making a list of about 10 to 20 keywords that describe the knowledge
or search conditions you are considering. Then, for each of the keywords, use
the ontology browser function of the Add Instance tool to find the class in the
ontology that best expresses that keyword. After you have created instances of
the ontology classes for each of the keywords, use the Add Connection tool to
determine the ontology properties that best express the binary relationships between the instances you have created. Finally, you can add additional instances
and properties to describe particular attributes of the keywords. A typical example is a keyword that is really best expressed by two classes in the ontology,
such as building energy system. This keyword could be expressed by the A-box
(energy systemA is part of buildingB).

The second approach that we have found to be effective for constructing semantic descriptions is to begin with a single instance of an ontology class that
best describes the object of the knowledge or search. Properties can then be
added to connect to other classes in the ontology in order to indicate the attributes that make the object special. For example, knowledge about an office
building located in Tokyo that contains a fuel cell used for energy supply could
be described by first creating an instance of the class office bldg and then
adding the property physically contains pointing to an instance of fuel cell,
has location pointing to an instance of city labeled Tokyo, and so on.

The third approach that we have used is to start with a relatively clear image
of what the graph of instances and properties should look like and then build

S. Kraines et al.

Fig. 6. The biology interface wizard for constructing descriptions of biomolecular
processes

that graph. We have found that several common patterns appear in semantic
descriptions from particular knowledge domains. For example, in the field of
metabolic pathways, much of the knowledge centers on a particular biomolecular process, such as phosphorylation, that has one or more substrates and one
or more products. Furthermore, most processes in cellular biology have one or
more actors that either activate or inhibit the process. This simple model of
metabolic pathway knowledge can be expressed by a basic template for semantic
descriptions of that knowledge, as shown in Fig. 6. We are developing a number
of such templates for commonly occurring patterns in knowledge from different
domains that are supported by our system, as described in the section Future
Directions.

5 Comparison of EKOSS with Existing Systems

There are a number of web platforms that have been developed to make use of
semantic web technologies for supporting knowledge sharing. Each platform uses
different degrees of structure in the computer-interpretable semantics, provides
different types of services to its users, and offers different features for assisting
?

?

?
users in the process of adding semantics to their knowledge resources. Here, we
compare some of these semantic knowledge sharing systems with EKOSS.

Mangrove, developed at the University of Washington, aims to provide a
semantic-enabled knowledge sharing platform for communities of non-technical
people. The philosophy of the Mangrove Project is that non-technical users could
be enticed to semantically annotate their web pages if they were provided with
useful services that gave them a sense of instant gratification [16]. The semantics used by the Mangrove system are therefore necessarily simplistic, and there is
no underlying knowledge model or ontology for supporting logical reasoning. Although a proprietary reasoning engine is mentioned, it is unclear what reasoning
capabilities are supported.

Dspace has been developed through the collaboration of the W3C, the MIT
libraries, and the MIT CSAIL (Computer Science and Artificial Intelligence Lab-
oratory) as a digital library that uses semantic tags to help with cataloging and
retrieval [17]. DSpace is being augmented by the SIMILE (Semantic Interoperability of Metadata and Information in unLike Environments) project to support
arbitrary metadata schemata in the form of RDF markup [18]. However, while
EKOSS provides tools for using DL ontologies to create semantic A-boxes that
describe knowledge resources in a way that can be reasoned against with DL
reasoners for more accurate matching and retrieval, the semantics supported by
Dspace with SIMILE is limited to RDFS so that only reasoning based on class
subsumption is possible.

Magpie is a product of the Advanced Knowledge Technologies project that
takes the form of a browser plugin providing users with tools for displaying terms
in web pages that are found to match with terms from the ontology loaded in
the system [22]. As the goal is to provide semantic web services with near-zero
overhead costs, speed and minimization of user input requirements are empha-
sized. The EKOSS system, on the other hand, aims to empower knowledge creators interested in sharing their knowledge with the capacity to create semantic
descriptions of that knowledge themselves with only a small amount of effort,
trading off a small increase in overhead costs for the potential benefits from the
greatly increased semantic richness.

SMORE (Semantic Markup, Ontology, and RDF Editor) is a set of tools created by MINDSWAP and integrated with the SWOOP ontology browser and the
pellet OWL-DL reasoner that are intended to help users annotate their own web
documents in OWL using ontologies on the web, without requiring the users to
know OWL terms and syntax [24]. SMORE also provides limited capabilities for
creating new ontologies and modifying existing ontologies to incorporate terms
from the users web documents. In this sense, the SMORE tools are designed
for ontology building and annotation of web documents rather than actually
describing knowledge resources with computer interpretable semantics.

CONFOTO supports the semantic annotation and browsing of conference
photographs with RDF tags that are based on keyword-based classifications or
folksonomies [19]. Folksonomies have been hypothesized to be easier for users
to use in creating metadata than formal ontologies. However, we believe that

S. Kraines et al.

through the tools and interfaces provided by the EKOSS system, a significant
number of users particularly in the sciences would be willing to make the investment in time and effort to create semantic descriptions that would be far more
useful for semantic analysis due to their solid foundation in formal ontologies.

Other related technologies include Cyc and other ontologies that are intended
to function as centralized knowledge bases [21], the SEKT (Semantically-Enabled
Knowledge Technologies) EU initiative that aims to realize a European Knowledge Society through development of core semantic technologies for knowledge
management based on the KAON reasoner [20], the Tucana Knowledge Discovery Platform and its open source versions Kowari and Mulgara that target
semantic databases and knowledge discovery platforms for enterprises [23], the
SWOOGLE web search engine for searching and analyzing web documents having semantic markup [25], the Ont-O-Mat implementation of the CREAM framework for helping web page authors create semantic annotations in the form of
relational metadata [27], and the web-based Annotea system for supporting the
creating and sharing of RDF annotations [26].

6 Future Directions

In future research work, we plan to continue the development of the EKOSS system along three paths. First, we will develop domain specific wizards for creating
semantic descriptions. These wizards will include 1) pictorial visualizations of
ontology for helping users to identify the class in the ontology that best describes
a concept that they want to include in an A-box and 2) template wizards for
supporting construction of A-boxes for common semantic patterns in particular
domains. An example of the second type of wizard was shown in Fig. 6.

We will also extend the functionality of the ontology browser in order to
support user dialogue about the classes and structures of the ontologies available
in the system, including examples of uses, suggestions for modifications to the
ontologies, and addition of new classes. In doing so, we intend to offer expert
users the opportunity to bootstrap the process of development and refinement
of the ontologies on a particular EKOSS server. Furthermore, we will investigate
the effectiveness of techniques for ontology translation and alignment based on
the A-boxes that are created using the different domain ontologies supported by
the EKOSS system.

Finally, on the semantic matching side, as we begin to accumulate a sufficient
number of Knowledge Projects in the EKOSS system, we will develop methods
for determining the semantic distance between pairs of semantic descriptions
representing the Knowledge Projects. One approach that we are using is to create tools for automatically generating interesting subsets of the relatively large
semantic description A-boxes and using those subsets as queries for matching
with the semantic descriptions of other Knowledge Projects. The result is an indication of the degree of overlap between the two semantic descriptions (Fig. 5).
We can use these measured distances between sets of Knowledge Projects to
construct different semantic distance matrices depending on the conditions used
?

?

?
for generating the queries from the semantic description of the first Knowledge
Project. These semantic distance matrices can be used for a variety of knowledge integration applications. For example, we are developing graphic interface
tools for visualizing the overall knowledge network that is represented by these
semantic distance matrices as two dimensional knowledge maps or as three dimensional visualizations of Knowledge Project distributions around a particular
project.

Acknowledgement. We gratefully acknowledge contributions and advice from
Rafael Batres, Hiroshi Komiyama, Toshihisa Takagi, and David Wallace. Funding support was provided by the Knowledge Failure Database project at the
Japan Science and Technology Agency.
