Three Semantics for Distributed Systems and
Their Relations with Alignment Composition

Antoine Zimmermann and J erome Euzenat

INRIA Rhone-Alpes

Montbonnot Saint-Martin, France

{Antoine.Zimmermann, Jerome.Euzenat}@inrialpes.fr

Abstract. An ontology alignment explicitly describes the relations holding between two ontologies. A system composed of ontologies and alignments interconnecting them is herein called a distributed system. We
give three different semantics of a distributed system, that do not interfere with the semantics of ontologies. Their advantages are compared
with respect to allowing consistent merge of ontologies, managing heterogeneity and complying with an alignment composition operation. We
show that only the first two variants, which differ from other proposed
semantics, can offer a sound composition operation.

1 Introduction

In a general sense, ontology alignment is an explicit description of the semantic
relationship that exists between different ontologies. However, in several practical
applications, it is restricted to a set of syntactical correspondences or mapping.
For instance, the Alignment API [1] defines a correspondence as a pair of entities
(one from each ontology), together with the type of relation, and the confidence
in its correctness. The API output format has been used in several ontology
matching tools but has intentionally no associated formal semantics. Our goal
is to consider alternative semantics for this generic type of alignments.

We define three different semantics that have advantages and drawbacks. The
first one, simple distributed semantics, considers the whole distributed system
as a coherent knowledge base which can be interpreted in a single domain. It
is appropriate for consistently merging ontologies, based on correspondences.
However, it is not tolerant to inconsistency, be it local or global. In very heterogeneous systems, like the semantic web or semantic P2P systems, this feature is
not desirable. So we extend the first semantics to integrated distributed semantics
where each local knowledge representation is interpreted in its own domain but
these interpretation are then correlated in a global domain. Finally, we define
a contextualized distributed semantics, inspired by DFOL/DDL/C-OWL [2,3,4],
where there is no global domain of interpretation: each local ontologies imports
knowledge from other ontologies in its own context.

 This work is partly supported by the Knowledge Web NoE (IST-2004-507482).

I. Cruz et al. (Eds.): ISWC 2006, LNCS 4273, pp. 1629, 2006.
c Springer-Verlag Berlin Heidelberg 2006
?

?

?
Additionally, the semantics is parameterized by the set of expressible relations
between ontology entities. It means that this semantics is usable to reason about
class relations (e.g., equivalence, subsumption, disjunction), as well as temporal
or spatial relations, etc.

Finally, we study the semantics of an alignment composition operator and

prove that only the first two semantics comply with it.

This paper is articulated as follows: Sect. 2 gives an overview of previously
proposed semantics for schema mappings, ontology alignments and matching, or
distributed knowledge representation. Sect. 3 describes the syntax of distributed
systems. Sect. 4 gives the simple distributed semantics. Sect. 5.1 extends the
semantics to integrated distributed semantics, through the use of an equalizing
function to a global domain. Sect. 5.2 presents the contextualized variant of the
semantics. Sect. 6 discusses the composition of alignments within each of the
proposed semantics.

2 Related Work

Ontology matching is strongly related to database schema matching. However,
as noted in [5], there are foundational differences between schema matching and
ontology matching. The most prominent being the weakness of schemata se-
mantics. As a result, the schema mapping community is concerned about query
answering, while ontology alignment must offer more general reasoning capabilities in distributed systems. Of particular interest is [6], which develops a notion
of satisfied mappings that is very generic and the approach in this paper is very
similar to theirs. The difference resides in their using of helper models, and
they do not provide a composition operator. Such operator is provided by [7]
for relational databases, and cannot be exploited as it is for more general ontology alignment composition. Other database-related work about composition
comprises [8,9,10].

Another different approach to the semantics of schema mapping and alignments is found in [11] and generalized in [12] where the authors use the theory of
institutions [13] to characterize the relation between models of related ontologies
or schemata. The approach is seducing for our ontology alignment purpose: it
allows a language independent definition of ontology relation, elegant constructions of merging, composing and it is grounded on model theory. Nonetheless, it
has a major problem: the ontology morphisms can only account for the most
basic relations between ontological entities, namely equivalence. So we consider
such an abstraction to be inappropriate for more general types of relations [14].
Other semantics for distributed knowledge based systems have been proposed.
Various distributed logics are found in [2] (DFOL), [3] (DDL), [4] (C-OWL).
They all assume that each ontology is interpreted within a context that has to
be related to others in order to interpret the whole system. This approach effectively solves the problem of mutual inconsistencies in heterogeneous knowledge
representations, but we show here that contextualizing the semantics forbids a
sound composition operation.

A. Zimmermann and J. Euzenat

3 Syntax

We want to design a model-theoretic semantics for distributed systems, which
are composed of (1) ontologies and (2) alignments. The present section discusses
the syntax of those components.

One of the key features of our alignment semantics is its independence from
the ontology language. Sometimes, we will use the term element of an ontology
to refer to any syntactical entity mentioned in the ontology, e.g., class, property,
individual. The only restriction upon the choice of the ontology language is the
existence of a model-theoretic semantics. Among such languages, we can cite
FOL, RDF [15], OWL [16], Conceptual Graphs [17], etc.

We follow the definition of alignment found in [18], but we intentionally dis-

card the confidence value.1
Definition 1 (Ontology element). An ontology element is either a term of
the ontology (e.g., class, property, individual) or a compound entity built out of
other ontology elements and constructors from the ontological language.
Definition 2 (Ontology element relation). An ontology element relation R

is a symbol denoting a binary relation or predicate R. Given a specific alignment

These definitions makes the components of a correspondence.

language, the set of usable relation symbols is written R.
The relations an alignment language can capture may be: equivalence, subsump-
tion, disjunction of classes; temporal/spatial relations; fuzzy relations; etc.
Definition 3 (Correspondence). A correspondence is a triplee1, e2, R where:
 e1 and e2 are ontology elements from the two ontologies to align;
 R is an ontology element relation that is asserted to hold between e1 and e2.
Example 1. Man1 Woman1, Human2, or Girl1, Human2 Female2, are examples of correspondences.
Definition 4 (Ontology alignment). An ontology alignment between ontologies O1 and O2 is a set of correspondences with ontology elements belonging to
O1 and O2.
Our semantics interprets distributed systems: a structure composed of multiple
ontologies and alignments between them.
Definition 5 (Distributed system). A distributed system (DS for short) is
a pair (Oi), (Aij) consisting of a family of ontologies (Oi)iI over a set of
indexes I interconnected by a family of alignments (Aij)i,jI.2
Although there can be pairs of ontologies that are not connected by an alignment,
we will then consider the missing alignment as an empty set of correspondences.
Moreover, several alignments between two ontologies are considered here as a
single alignment equals to the union of all their correspondences. So Aij is always
defined.
1 How to treat uncertainty in this semantics is still a subject of investigations.
2 When there is no ambiguity, we will write (Xi) to represent the family (Xi)iI.
?

?

?
4 Simple Distributed Semantics

The simple distributed semantics considers a distributed system (DS) as a coherent knowledge base. This means that all ontologies are interpreted within
the same domain. We first give the definitions for local semantics (given by the
ontological language), then our proposed DS semantics follows.

4.1 Local Semantics

The semantics of a DS depends on the semantics of the ontology language. In
fact, given a set of ontologies and a set of alignments between them, we can
evaluate the semantics of the whole system in function of the semantics of each
individual ontology.

Definition 6 (Interpretation of an ontology). Given an ontology O, an
interpretation of O is a function m from elements of O to elements of a domain
of interpretation D.

This is a very general notion of interpretation. In practice, ontologies are composed of axioms that constrain valid interpretations. Among interpretations,
there are particular ones that are said to satisfy axioms, and if all axioms are
satisfied, then the ontology is itself satisfied. So, the local semantics of ontologies determine the satisfaction relation |= that relates interpretations to satisfied
ontologies, i.e., m |= O iff m satisfies O. For instance, AsubclassofB would be
satisfied iff A is interpreted as a subset of the interpretation of B. The collection
of interpretations that satisfy O (the models of O) is written Mod(O).

4.2 Satisfaction of an Alignment

In order to determine the semantics of a DS, we first define when a pair of local
interpretations satisfies a correspondence and an alignment.

Definition 7 (Satisfied correspondence). Let O1, O2 be two ontologies and
c = e1, e2, R be a correspondence between O1 and O2. c is satisfied by interpre-

tations m1, m2 of O1, O2 iff m1(e1)Rm2(e2). This is written m1, m2 |= c.
expressed between two OWL classes. The associated relation R is fixed, given

The relation symbol R is out of the ontology languages. So it does not have to
be interpreted in the local semantics. For instance, a temporal relation can be
a set of relation R. For instance, relation symbol  could be associated to the
relation = (equality) over sets.

If all correspondences are satisfied, then it is said that the pair of interpreta-

tions is a model of the alignment.

Definition 8 (Model of an alignment). A model of an alignment A between
ontologies O1 and O2 is a pair m1, m2 of interpretations of O1, O2 such that for
all c  A, m1, m2 |= c. It is noted m1, m2 |= A.

A. Zimmermann and J. Euzenat

The models of an alignment do not take the semantics of the ontologies into
account. They just consider the internal consistency of the correspondences. This
is interesting because we can reason with and about alignments without actually
accessing the aligned ontologies. The collection of all models of an alignment A
is written Mod(A).

Correspondences play the role of axioms that constrain the satisfying interpretations of the aligned ontologies. They therefore act as interpretation constraints
of the distributed system.

4.3 Models of a DS

Informally, interpretations of a DS are tuples of local interpretations.3
Definition 9 (Interpretation of a DS). An interpretation ofaDS(Oi), (Aij)
is a family (mi) of local interpretations over a common domain D such that for
all i  I, mi is an interpretation of Oi.
Among interpretations, some are said to satisfy the DS. In order to satisfy a DS,
interpretations must satisfy constraints given by (1) the ontologies axioms and
(2) the alignments correspondences.
Definition 10 (Model of a DS). A model of a DS S = (Oi), (Aij) is an
interpretation (mi) of S such that:
 i  I, mi  Mod(Oi) (i.e., mi is a (local) model of Oi);
 i, j  I, mi, mj |= Aij.
This is written (mi) |= S. If a model exists for S, we say that S is satisfiable.
We can see that this definition employs a very global view of the models. All
ontologies and alignments are taken into account at the same time, and there
are strong interdependencies. This is because the DS is seen as a single theory,
with ontologies being but mere modules.

However, it is often the case when we only want to reason about local data,
while taking advantage of external knowledge. So we define local models modulo
a DS:

Definition 11 (Local models modulo a DS). Local models of an ontology
Oi modulo S are the local models ModS(Oi) = {mi  Mod(Oi);(mj)j=i 
Mod(Oj), (mi)iI |= S}. It corresponds to the projection of the models of a DS
on the ith component.

With this definition, the models of the full system must be known to compute the
local models. In order to build more efficient reasoners, we define another notion
of models that do not require total integration of all ontologies and alignments at
once. It is based on an iterative process of gradually reducing the local models.
3 As in Sect. 3, I denotes a set of indexes and is omitted in expressions like (Aij),

when there is no ambiguity.
?

?

?
Definition 12 (Models of an ontology modulo alignment). Given an ontology O1 aligned with O2 according to alignment A, the models of O1 modulo A
are those models of O1 that can satisfy A:

ModA(O1) = {m1  Mod(O1);m2  Mod(O2); m1, m2 |= A}


S (O).

(Oi);j  I \{i},mj  Modk1S

Models modulo alignment is the first step of the following iterative definition.
Definition 13 (Iterated local models modulo a DS). Given a DS S =
(Oi), (Aij),considerMod0S(Oi) = Mod(Oi),andthefollowingiterativedefinition:
ModkS(Oi)={mi Modk1S
(Oj); mi, mj |= Aij}
ModS(O) denotes the limit of the sequence (ModnS(O)) when n  , i.e.,
ModS(O) = Mod
Definition 14 (Local satisfiability). A DS S is locally satisfiable iff for each
ontology O, ModS(O) = .
So, the iterated models only give a local view of what happens in the DS. More-
over, the stepwise restriction of the models allows for a faster but approximate
reasoning while trying to find new ontologies and alignments.
Proposition 1. Let S be a DS and O an ontology of S. For all n  IN,
ModS(O)  ModS(O)  Modn+1S
Proposition 2. There exists a DS S such that ModS(O) = ModS(O).
Proof. We give a sketch of the proof4 with a diagram representing the DS.

(O)  ModnS(O).

O1

/ e1O



/ e2 o






1O
e


/ e3




o  /





O3

O2
S(Oi) = Mod(Oi) for all n  IN and i  {1, 2, 3}. But
In this DS, we have Modn

ModS(O1) is restricted to the models of O1 where e1 and e
1 are interpreted as

the same entity.
In spite of this unfavorable property, ModS(O) and ModS(O) are two solutions
to the fixed-point equation ModS(Oi) = {m  Mod(Oi);j  I \ {i},mj 
ModS(Oj); mi, mj |= Aij}. This means that locally reasoning with iterated models will not contradict neighborhood reasoning.

The proposed semantics is somewhat strict, with regard to heterogeneous
systems, because it only allows to assert a correspondence when it is fully compatible with both ontologies. While it may be desirable in a few applications, this
semantics is not adapted to every ontology alignment use cases. For instance, in
the semantic web, ontologies will vary tremendously in size, scope, scale, point
of view and quality. We consider two semantics that address this problem.
4 For a detailed proof of this proposition, please refer to the following url:

http://www.inrialpes.fr/exmo/people/zimmer/ISWC2006proof.pdf.

/






/
o
o

A. Zimmermann and J. Euzenat

5 Dealing with Heterogeneous Domains

In very heterogeneous applications, having a unified interpretation of a distributed system is not feasible. To address this issue, we propose two variants of
the primary semantics: (1) in the integrated distributed semantics, local interpretation domains are separated, and they are reconciled in a global domain,
thanks to the use of equalizing functions (Def. 15) that act as filters; (2) in the
contextualized distributed semantics, no global domain exists, but interpretation
domains are interrelated by as many translation function as there are pairs of
domains.

5.1 Integrated Distributed Semantics

The choice of the interpretation domain is not only guided by the interpreter, but
also partly decided by the local language semantics. So we will use the concept
of an equalizing function to help making the domain commensurate.

Definition 15 (Equalizing function). Given an interpretation (mi) of a DS,
an equalizing function (i) over (mi) is a family of functions from the local
domains of interpretation of (mi) to a global domain U.
So equalizing functions not only define a global domain for the interpretation of the
DS, but also define how local domains are correlated in the global interpretation.

Definition 16 (Integrated interpretation of a DS). An integrated interpretation of a DS S is a pair (mi),  where (mi) is a simple interpretation of
S and  is an equalizing functions over (mi).
The integrated interpretations that satisfy the DS are given by the following
definition.

Definition 17 (Integrated model of a DS). An integrated interpretation
(mi),  of a DS S is an integrated model iff i, j  I, imi, jmj |= Aij and
mi is a local model of Oi.5

We can define the iterated models of a DS in the following way:

Definition 18 (Integrated iterated local models modulo a DS). Given a
DS S = (Oi), (Aij), consider Mod0S(Oi) = Mod(Oi), and the following iterative
definition:

ModkS(Oi) =
{mi  Modk1S
(Oj),; imi, jmj |= Aij}
5 The notation imi is used to denote the composition of functions i and mi. In fact,

(Oi);j  I \ {i},mj  Modk1S

imi is an interpretation of Oi in the global domain.
?

?

?
As with simple distributed semantics, there is a notion of local and global satisfiability (see Def. 14). The integrated iterated models have the same property
as the simple iterated models (Prop. 1 and Prop. 2).

Proof (of Prop. 2). We give a sketch of the proof6 with a diagram representing
the DS.









/ e2<
bEEEEEEE
|xxxxxxx
6llllllllllllllo
(RRRRRRRRRRRRRR
bDDDDDDD
|yyyyyyy
?

?

?
2<
e












O2



/ e1 h


?

?

?
e





O1





e3

O3

/ e
?

?

?




This system is locally satisfiable but not globally satisfiable.
?

?

?
For particular applications, it may prove useful to give restrictions on equalizing
functions. For instance, it might be needed to have injective functions, or to
have inclusion-preserving functions. Although we do not describe the treatment
of such restrictions, they should be compared to domain relation constraints in
DFOL [2]. However, the approach in DFOL differs, because no global domain
exists. They rather relates the local domains to each others, allowing to contextualize import of knowledge from and to each DS node. We extend our semantics
in order to match this approach.

5.2 Contextualized Distributed Semantics

The contextualized semantics uses domain relation instead of equalizing functions.
Domain relations differ from equalizing function because there exists one function
for each pair of ontologies and they relate two local interpretation domains.

Definition 19 (Domain relation). Given two domains of interpretation D1
and D2, a domain relation is a mapping r12 : D1  D2.
These domain relations form a part of a contextualized interpretation.

Definition 20 (Contextualized interpretation of a DS). A contextualized
interpretation of a DS S is a pair (mi), (rij) where (mi) is a simple interpretation of S and (rij)i=j is a family of domain relations such that rij relates the
domain of mi to the domain of mj.
The models in the contextualized semantics are defined as follows.

Definition 21 (Contextualized model of a DS). A contextualized interpretation (mi), (rij) of a DS S is a contextualized model iff i, j  I, mi, rjimj
|= Aij and each mi is a local model of Oi.
6 For a detailed proof of this proposition, please refer to the following url:

http://www.inrialpes.fr/exmo/people/zimmer/ISWC2006proof.pdf.

/
<
|
/
h
(
<
|
"
"
b
o
o
v
v

o
/
"
"
b

A. Zimmermann and J. Euzenat

We again define the iterative models of a DS in the following way:

Definition 22 (Contextualized iterated local models modulo a DS).
Given a DS S = (Oi), (Aij), consider Mod0S(Oi) = Mod(Oi), and the following
iterative definition:

(Oi);j  I \ {i},mj  Modk1S

ModkS(Oi) =
{mi  Modk1S
(Oj),rji; mi, rjimj |= Aij}
Again, there is a notion of local and global satisfiability (see Def. 14). The contextualized iterated models have the same property as the simple iterated models.
Proof (of Prop. 2). We give a sketch of the proof7 with a diagram representing
the DS.

O1



/ e1 o

o  /



/ e2 o

/ e3




O3

o  /





<xxxxxxx
?

?

?
e



o  /


/ e
?

?

?




O2

Among the local models of O1 modulo this DS, there are interpretations where

e1 and e
1 are interpreted identically, while the global models necessitate that

they are interpreted differently.

The three approaches are compared in Sect. 7.

6 Composing Alignments

Building alignments is a difficult task that can hardly be done fully automati-
cally. So existing alignments shall be reused to offer faster interoperable applica-
tions. Alignment composition is one of the key operations permitting this. Given
three ontologies O1, O2 and O3, with alignments A of O1 and O2, and B of O2
and O3, it must be possible to deduce a third alignment of O1 and O3, which
we call the composition of A and B.

We propose here two notions of composition: the first is the syntactic composition of alignments, which can straightforwardly be implemented; the second is
semantic composition. Semantic composition is informally defined as follows:
given a DS of 3 ontologies and 2 alignments S = O1, O2, O3,A12, A23, the
semantic composition is the submodels of Mod(S) that are models of the subsystem O1, O3, (see below for a more formal definition in each of the three
semantics).
Definition 23 (Syntactic composition). Let A12 be an alignment of O1 and
O2, and A23 an alignment of O2 and O3. The composition of A12 and A23,
noted A23  A12 is the set of triples e1, e3, R such that there exist e2, R1, R2
s.t. e1, e2, R1  A12, e2, e3, R2  A23 and R = R1; R2 with ; : R  R  R
being an associative operator.
7 For a detailed proof of this proposition, please refer to the following url:

http://www.inrialpes.fr/exmo/people/zimmer/ISWC2006proof.pdf.

/
o
o
o
|
|
<
o
o
?

?

?
Remark 1. ; may also be given by a table of composition. In that case, relations
R  R are sets of primitive relations. Moreover, composition is associative iff ;
is associative.

In our first semantic approach, the models of A are pairs of interpretations of
O1 and O2, so Mod(A12) is a set-theoretic relation. Relations are composable,
and ideally the composition of A12 and A23 should have equal models as the
composition of Mod(A12) and Mod(A23).

Let S be a DS having 3 ontologies O1, O2, O3 and 2 alignments A12, A23.

Definition 24 (Simple semantic composition). The simple semantic composition of the simple models of A12 and A23, noted Mod(A23) s Mod(A12) is
the set:
{m1, m3  Mod(O1)  Mod(O3);m2  Mod(O2),m1, m2, m3  Mod(S)}
In the case of the integrated semantics, the definition should include the equalizing function.

Definition 25 (Integrated semantic composition). The integrated semantic composition of the integrated models of A12 and A23, noted Mod(A23) i
Mod(A12) is the set:

{m1, m3,1, 3;m2, 2,m1, m2, m3,1, 2, 3  Mod(S)}

Similarly, the contextualized semantics define a composition with domain relations.

Definition 26 (Contextualized semantic composition). The contextualized semantic composition of the contextualized models of A12 and A23, noted
Mod(A23) c Mod(A12) is the set:
{m1, m3,r13, r31;m2, r12, r21, r23, r32,(mi)i{1,2,3}, (rij)i=j  Mod(S)}
These definitions are rather intuitive and correspond to what is found in constraint reasoning literature, with slight variants due to the presence of equalizing
functions and domain relations. The following section compares the three ontolo-
gies, and shows that composition is semantically sound in the first two semantics,
but not in the contextualized one.

7 Comparing Semantics

Our three semantics do not only differ by their conceptual design. They also
imply technical differences.

7.1 Simple Semantics

The following diagram helps visualizing the idea behind the simple semantics.
Each ontology is treated as a module of a bigger ontology, interpreted in a single
domain.

A. Zimmermann and J. Euzenat

Syntax level




O1

Semantics level




On



{wwwwwwww

In



#GGGGGGGG O2
444444

I1

I2



D = iI Di




This semantics offer several advantages. It may be used as a general semantics
for modules composition in ontology engineering. In practical cases, modules are
generally related to each others with an import directive, and sometimes additional bridge axioms are added in the ontological language. With this semantics,
modules can be written in different languages and aligned with yet another
alignment language. Besides, the decision procedure is easier than in the other
distributed semantics. Consider the case of OWL8 ontologies with possible relations being subclassOf, equivalentClass, disjointClass, subPropertyOf,
equivalentProperty, then reasoning will not differ from reasoning with a single
OWL ontology.

Additionally, composition has the following property:

Property 1. If for all R1, R2  R, for all appropriate X, Y, Z, XR1Y  YR2Z 

X R1; R2Z, then the simple semantic composition of the models of the alignments
is included in the models of the syntactic composition of alignments, i.e., :

Mod(B)  Mod(A)  Mod(B  A).

Proof. Let m1, m3  Mod(B)  Mod(A). There exists m2  Mod(O2) such that
m1, m2 |= A and m2, m3 |= B. Let c = (e1, e3, R) be a correspondence of B  A.
There exists R1, R2  R and e2 in O2 such that R = R1; R2, (e1, e2, R1)  A and
tion made ensures that m1(e1) R1; R2m3(e3). So for all c  B  A, m1, m3 |= c.
As a result, all m1, m3 in Mod(B)  Mod(A) are also in Mod(B  A).
?

?

?
(e2, e3, R2)  B. We have m1(e1)R1m2(e2) and m2(e2)R2m3(e3). The assumpThe property required (R1, R2  R,X, Y, Z, XR1Y  YR2Z  X R1; R2Z)

fits with the common sense meaning of what must be a composition operation.
This property is mentioned in work on composition tables (e.g., [19]) as a basic
property for a sound composition operation. This property encourage reuse of
alignments by combining them.

Nonetheless, as explained in [2], interpreting a distributed system in a unique

domain is only feasible in the least heterogeneous systems.

7.2 Integrated Semantics

In the integrated semantics, ontologies are interpreted at the local level, and
the equalizing function  serves to coordinate local interpretations in a global
domain.

8 http://www.w3.org/TR/owl-guide/

#

{
?

?

?



O1

I1



D1

Syntax level

Local semantics level

Global semantics level

O2

I2





#GGGGGGGGG D2
444444

2

1









{wwwwwwwww

n






On

In




Dn

This approach is much more tolerant to inconsistencies, because the equalizing functions act as a filter between local and global interpretations. Having
two levels of interpretations allows one to maintain local specificities while integrating knowledge into one consistent interpretation. And, obviously, if a simple
distributed model exists, then an integrated model exists.

The following example demonstrates the interest of equalizing function.

Example 2. Consider two instances of class Child that have different ages and
different heights, but truly represent the same person at different moments.
In some ontology languages, it may not be possible to interpret these different
instances as only one unique individual because age and height may be restricted
in cardinality. However, an equalizing function can map two different instances of
child with different ages in the local domain, to one instance of a person having
no attribute age in the global domain.
Moreover, Prop. 1 holds too in this semantics. Therefore, it is also appropriate to
manipulate and reuse several alignments in a consistent way. So, this semantics
consistently extends the previous one.

However, the reasoning procedure is rendered more difficult because of the
presence of equalizing functions. This is quite inevitable since dealing with inconsistencies has always been a time-consuming and complex task.

7.3 Contextualized Semantics
In the contextualized semantics, we drop the global domain, but the domain
relations enables each ontology to integrate the whole distributed system in its
own context.

Syntax level

Local semantics level




On

In




Dn




r2n


rn2




O1

I1



D1

r12

r21

O2

I2

D2

rn1

r1n

This approach is very similar to context-based logics approach and the interest

of contextualizing inferences is explained in e.g., [2].

However, the following result tend to disqualify this semantics when compos-

ing alignments becomes a necessity:







#

{






*
*
?

?

?
j
j
*
*
a
a
j
j

A. Zimmermann and J. Euzenat

Proposition 3. Prop. 1 does not hold in contextualized semantics.

Proof. Consider the following DS9:

O1



e2 o

o  /



/ e3



O3

/ e1 o







o  /
?

?

?
"FFFFFFF

O2

/ e
?

?

?


o  /


/ e
?

?

?



?

?

?
Additionally, we show the generality of our integrated semantics with the following proposition:

Proposition 4. If a contextualized model exists for a DS, then there exists an
integrated model.
Proof. Let (mi), (rij) be a model of a DS. Let k  I be an indice then
(mi), (rik)iI, with rkk = idDk is an integrated model of the DS with global

domain Dk.

This property was in fact predictable. The contextualized semantics has a different purpose: it interprets semantic relations from one ontologys point of view.
Composing alignments in this way is not sound because two consecutive alignments are interpreted according to two different points of view. However, it has
a strong advantage with regard to the integration of external knowledge into a
specific ontology.

8 Conclusion and Future Work

We presented three variant semantics (simple, integrated and contextualized) for
ontology alignments and distributed systems. Our characterization of an alignment allows the definition of an alignment composition operator, which is sound
in the first two proposed semantics. We gave the advantages and drawbacks of
each approach, and highlighted the benefits of using the first two semantics in
comparison to using a contextualized semantics. We also make our approach distinct from others by using a set of relations as a parameter. It enables one to use
the same meta-semantics for different types of relations (e.g., temporal/spatial
relations, class relations or even data types relations).

We will extend this semantics to include operations such as inverse alignment,
union/intersection, and data transformations induced by them (along the line
of the schema mapping algebra in [7]). Finally, our semantics and composition
operator shall be extended to correspondences with confidence value.

9 For a detailed proof of this proposition, please refer to the following url:

http://www.inrialpes.fr/exmo/people/zimmer/ISWC2006proof.pdf.

/
/
b
b
"
o
o
/
o
?

?

