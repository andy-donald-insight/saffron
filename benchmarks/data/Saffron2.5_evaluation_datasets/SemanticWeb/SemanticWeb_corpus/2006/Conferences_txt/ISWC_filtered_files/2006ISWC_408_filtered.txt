A Formal Model for Semantic Web Service Composition

Freddy L ecu e1,2 and Alain L eger1

1 France Telecom R&D, France,

4, rue du clos courtel F-35512 Cesson S evign e

{freddy.lecue, alain.leger}@orange-ft.com
2  Ecole Nationale Sup erieure des Mines de Saint-  Etienne, France

158, cours Fauriel F-42023 Saint-  Etienne cedex 2

Abstract. Automated composition of Web services or the process of forming
new value added Web services is one of the most promising challenges in the
semantic Web service research area. Semantics is one of the key elements for
the automated composition of Web services because such a process requires rich
machine-understandable descriptions of services that can be shared. Semantics
enables Web service to describe their capabilities and processes, nevertheless
there is still some work to be done. Indeed Web services described at functional
level need a formal context to perform the automated composition of Web ser-
vices. The suggested model (i.e., Causal link matrix) is a necessary starting point
to apply problem-solving techniques such as regression-based search for Web
service composition. The model supports a semantic context in order to find a
correct, complete, consistent and optimal plan as a solution. In this paper an innovative and formal model for an AI planning-oriented composition is presented.

Keywords: Semantic Web, Web service, AI planning, Automated composition,
Automated reasoning.

1 Introduction

Web service [1] provides the feature richness, flexibility and scalability needed by enterprises to manage the SOA challenges. By Web services we mean loosely coupled,
reusable software components that semantically encapsulate discrete functionality and
are distributed and programmatically accessible over standard internet protocols.

Web services proliferation over the web implies difficulties to find specific services
that can perform specialized tasks. Nevertheless a combination of existing services is
an alternative and promising approach although manual Web service combination from
scratch can be difficult and time consuming. That is why new abilities are necessary to
support dynamic and automated tasks such as discovery, selection and composition. The
main ability is to describe capability (inputs, outputs, preconditions, and effects: IOPEs)
and process model (Web services activities, interaction protocol) of Web services. The
latter needs are covered by means of semantic Web services. Indeed a semantic Web
service [2] is described as a Web service whose internal and external description is in a
language that has well-defined semantics.

Composition of Web services is probably the most interesting challenge spawned by
this paradigm. Most of the work in semantic Web services composition has focused on

I. Cruz et al. (Eds.): ISWC 2006, LNCS 4273, pp. 385398, 2006.
c Springer-Verlag Berlin Heidelberg 2006

F. L ecu e and A. L eger

two main levels of composition: functional [3,4,5] and process [6,7,8] levels. The former level considers Web services as atomic components described in terms of their
IOPEs, and executed in a simple request-response step. The latter level supposes Web
services as stateful processes with an interaction protocol involving in different sequen-
tial, conditional, and iterative steps. The functional and process level composition are
complementary methods to propose solutions for composition. In this paper, we study
an AI planning-oriented functional composition of Web services through a new formal
model i.e., the Causal link matrix (CLM). The CLM aims at not only storing all relevant Web services in a semantic way but also pre-chaining Web services according to
a semantic link i.e., the causal link. According to a CLM, the Ra4C algorithm proposes a Regression-based Approach for Composition. Thus the issue of the paper is an
automated process of chaining Web services according to their functional description.
The rest of the paper is organized as follows. Section 2 introduces a motivating example through an e-healthcare scenario. Section 3 presents the causal link matrix as a
formal model to describe Web services at functional level. In section 4, an AI planningoriented method is presented to solve a Web service composition with a specific CLM.
We briefly comment on related work in section 5. Finally in section 6, we draw some
conclusions and we talk about possible future directions.

2 A Motivating Example: An e-Healthcare Scenario

One of the most challenging problems in healthcare domain is providing a way to order
and compose medical devices. Such a composition does not only improve the patient
follow-up but also reduce the number of consultations, examinations, medical checkups and consequently their price. Indeed a long-standing clinical observation in hospital
is no longer a realistic issue for cost reasons since the elderly. In order to tackle this
problem and propose an automated process of composition, we propose an AI planning
oriented composition approach through the Causal link matrix. For this purpose, the
existing applications and medical devices (e.g., sphygmomanometer) are wrapped as
Web services. Thus telemedical collaborations are possible through the Web service
paradigm. A solution of such a problem consists in implementing a composite and
value-added Web service that can automate the patient follow-up by a reliable Web
service interoperation, hence a long distance follow-up.

Fig. 1. A sample of an e-healthcare ontology T
?

?

?
Consider the above scenario with six different Web services: Sa returns the blood
pressure (BP) of a patient given his PatientID (PID) and DeviceAddress (Add); Sb and
Sb return respectively the supervisor (Person) and a physician of an organisation (Org);
Sc returns a Warning level (WL) given a blood pressure; Sd returns the Emergency
department given a level of Warning; Se returns the Organization given a Warning level.

3 Formal Model

3.1 Motivation

Algorithms for Web service composition have to not only find feasible plans with relevant Web services, but also find the optimal plan according to an optimization criteria.
The latter criteria will be viewed as a quality of semantic connection between Web services (Input and output parameters relation). Indeed the semantic connection between
Web services is considered as essential to form new value-added Web services. The
formal model (i.e., the Causal link matrices) aims at storing all those connections (i.e.,
causal links) in order to find the best Web service composition. The CLM pre-computes
all semantic links between Web services as an Output-Input matching because a Web
service composition is mainly made up of semantic connections. Indeed a solution of
a Web service composition have to design and define a plan of Web services wherein
all Web services are semantically well ordered and well linked. The latter links are
computed and stored in CLMs.

The idea behind the CLM is a formal model to store Web services in an adequate and
semantic context for functional level composition of Web services hence a clear formalization of the Web service composition. The CLM aims at proposing a composition
model for a finite set of Web services. The latter Web services are supposed to be relevant according to a discovery criteria [9,2]. In such a case, the CLM pre-computes and
defines all the possible semantic matching functions between Web services to improve
the performance of Web service composition, and also to make Web service composition easier. Moreover CLMs allow us to consider a simpler composition problem i.e.,
the causal link composition. Thus the Web service composition is mapped to a causal
link composition wherein causal links inform about semantic connections between Web
service. A composition solution is mainly oriented by the CLM of the domain.

3.2 Semantic Web Context

Parameters (i.e., input and output) of Web services are concepts referred to in an ontology T (e.g., OWL-S profile [10], WSMO capability [11]). Finding a semantic similarity between two parameters Out sy and In sx is similar to find a mapping [12]
between two knowledge representations encoded using the same ontology T . Causal
links store this semantic similarity between parameters of Web services. Indeed a causal
link describes a semantic relation between an output parameter Out sy  T of a
Web service sy and an input parameter In sx  T of a Web service sx. Thereby
sx and sy are semantically and partially linked according to a matchmaking function
SimT (Out sy, In sx) with T a terminology (e.g., Figure 1).

F. L ecu e and A. L eger

Table 1. Semantic matching functions described by SimT

Match Type

SimT (Out sy, In sx)

Logic meaning

Exact

Plug-in
?

?

?
Out sy  In sx Out sy  In sx Out sy  In sx Otherwise

Subsume
?

?

?
Fail

Despite some methods [13,14,15], solving a mapping problem is hard because the
syntactic form of two knowledge representations rarely matches exactly. Four kinds
of semantic matching functions [13] are considered in our model to check semantic
similarity between a concept Out sy and a concept In sx. The semantic similarity is
valued by the SimT function (Table 1) in order to estimate the semantic degree of link
between parameters of Web services. In other words the semantic similarity valuation
is necessary to chain Web services parameters with the most appropriate links. For ex-
ample, the Plug-in match means that an output parameter of a service sy is subsumed
by an input parameter of the succeeding service sx whereas the Subsume match means
that an output parameter of a service sy subsumes an input parameter of the succeeding
service sx. Besides these four semantic matching functions (Table 1), non-empty intersection [14], concept abduction or contraction [15] might be proposed in order to add
expressivity of the SimT function.

Suppose two Web services sy and sz with a respective output parameter Out sy and
Out sz. In case one finds a Web service sx such that Out sy and Out sz semantically
match with In sx, a semantic similarity function is necessary to value Web services
connections. Thus the latter function aims at ordering the different kinds of matching
(Out sy, In sx). The similarity function described as SimT (Out sy, In sx) is clearly
analogous to degreOf M atch(Out sy, In sx) function [13].

3.3 Web Service Composition Formalism

Web service composition is close to function composition in the mathematical area.
A trivial Web service composition of two Web services sy and sx is considered as a
mathematical composition sx  sy. The latter composition means that sy precedes sx
and there exists a positive value of SimT between all input parameters of sx and some
output parameters of sy. CLMs (i.e., matrices of semantic connections) are introduced
with the aim of finding not only trivial but also more complex composition.

3.4 Causal Link Matrices

The CLMs contribute to the automated process of Web service composition by classifying Web services according to a formal link called causal link. A causal link is related
to a logical dependency among input and output parameters of different Web services.
A causal link1 [16,17] is refined as a triple sy, SimT (Out sy, In sx), sx such
that sx and sy refer to two Web services in a set of available Web services SW s.
The concept Out sy is an output parameter of the service sy whereas the concept
In sx is an input parameter of the service sx. The function SimT is the function

1 In AI planning area, some authors call causal link protection intervals [16].
?

?

?
of semantic similarity described in Table 1. SimT returns a value in [0, 1] depending on the matching degree between the concepts Out sy, In sx  T . A causal link
sy, SimT (Out sy, In sx), sx requires that i) sy precedes sx, ii) no Web service is
interleaved between sx and sy.

Definition 1. (Valid Causal link)
A causal link sy, SimT (Out sy, In sx), sx is valid iff SimT (Out sy, In sx) > 0.
Example 1. (Valid Causal link illustration)
According to the motivating example, Sd, SimT (EmergencyDpt, Organization),
Sb is a valid causal links whereas Sb, SimT (P erson, Organization), Sb is not.
A causal link matrix contains all enabled, legal and valid transitions for a composition
goal because causal links help to detect inconsistencies (Fail case in Table 1) of semantic link between Web services. Indeed all valid causal links between Web services
are explicitly represented with a value pre-computed by the SimT function. The latter
value is based on the semantic quality of valid causal links. The Causal link matrix aims
at storing all those valid causal links in an appropriate way. The more valid causal links
there are, the better it is for a functional composition problem.

Definition 2. (Causal link matrix CLM)
The set of pq CLMs2 is defined as Mp,q(P((SW sT )(0, 1])). Columns cj,j{1,...,q}
are labelled by (Input(SW s)  )  T , the inputs parameters of services in SW s
and/or the concepts described by the goal set   T . Rows ri,i{1,...,p} are labelled by
Input(SW s), the inputs parameters of services in SW s. Each entry mi,j of a CLM M
is defined as a set of pairs (sy, score)  (SW s  T )  (0, 1] such that
?

?

?
(sy, score) =

(sy, SimT (Out sy, cj)) if sy  SW s, Out sy  Out(sy)
(sy, 1)

if sy  T

(1)

with ri  T  In(sy)  Input(SW s) is the label of the ith row.
with cj  T  (Input(SW s)) is the label of the jth column.
Out(sy) is the set of output parameters of the Web services sy whereas In(sy) is its
set of input parameters.  contains the set of goals, described as concepts in a terminology T . Those concepts have to be reached. The variable score refers to the degree
of match SimT (Out sy, cj) between an output parameter Out sy  T of sy and cj 
Input(SW s) in case sy  SW s. In the alternative case sy  T , the value score is 1.
A CLM pre-computes the semantic similarities between all output and input parameters
of a closed set of Web services. All entries defined in P((SW s  T )  (0, 1]) are valid
causal links . Indeed SimT is restricted on (0, 1] according to definition 2.
A CLM is seen as a matrix with entries in P((SW s  T )  (0, 1]). Thus each entry
of a CLM refers to a set of pairs (sy, score) such that the score refers to a semantic
similarity between an output parameter of a Web service sy and an input parameter
of another Web service in SW s. All semantic connections (i.e., Causal links) are precomputed in such a matrix to make Web service composition easier.
2 P(S) refers to power set of S whereas #S refers to the Cardinality of S.

F. L ecu e and A. L eger

Table 2. Labels of the rows ri and columns cj of the 5  6 matrix M

i/j index
ri.label Address (Add) BloodPressure (BP) Org Patient (PID) Warning Level (WL)
cj.label Address (Add) BloodPressure (BP) Org Patient (PID) Warning Level (WL) Person

Table 3. Semantic Web services of SW s and their capabilities

Web Services

Sa

Sb

Sc

Sd

Se

Input
Output

PID (r4, c4),Add (r1, c1) Org (r3, c3) BP (r2, c2) WL (r5, c5) WL (r5, c5)
Person (c6) WL (r5, c5) Emerg. Dpt Org (r3, c3)

BP (r2, c2)

According to definition 2, Causal link matrices are defined with p rows and q columns,

with #() is the cardinality of goals:

p = #(Input(SW s))
q = p + #()  #(  Input(SW s))

(2)
(3)

The variables p and q refer, respectively, to the cardinality of input parameters of all
Web services in SW s and the cardinality of input parameters of all Web services in SW s
and . In compliance with [18], dimension of a causal link matrix in Mp,q(P(SW s 
(0, 1]) is defined by dimP(SW s(0,1])Mp,q(P(SW s  (0, 1])) = p  q. In the general
case, CLMs are not square matrices since q > p.

3 , 1}).
3 , 2

Example 2. (Illustration of Causal link matrix indexes and labels.)
Let {Sa, Sb, Sc, Sd, Se} be the set of Web services SW s (section 2) and {P erson} be
the goal . p and q are respectively equal to 5 and 6 (Tables 2, 3) according to equalities
(2), (3) and Definition 2. Thus rows, columns of the CLM M are respectively indexed by
{1, ..., 5}, {1, ..., 6} and labelled by concepts ri,i{1,...,5}, cj,j{1,...,6} of T . M refers
to a causal link matrix with entries in P((SW s  T )  { 1
The causal link matrices construction is function of the cardinality of output and input
parameters of Web services in SW s. Suppose #(Output(SW s)) and #(Input(SW s
)) be respectively the cardinality of output parameters of Web services in SW s and the
cardinality of input parameters of Web services in SW s. The algorithmic complexity
for the causal link matrix construction is (#(Input(SW s))  #(Output(SW s))) or
((M ax{#(Input(SW s)), #(Output(SW s))}2) so square in the worst case [19]. In
other words, the CLMs construction consists of finding a semantic similarity score
between the output parameters of all Web services sy  SW s and the input parameters
of another Web service in SW s. In case score is not null, the pair (sy, score) is added
in the CLM according to the Definition 2. For further details, [19] studies the whole
process of the CLM construction.

Example 3. (Causal link matrix illustration with Tables 2, 3)
3), (Se, 1))}. InThe entry m5,3 (i.e., mW arningLevel,Organization) is equal to {(Sd, 2
deed a Web service Sd with one input parameter W arningLevel and an output
?

?

?
EmergencyDpt semantically similar to Organization exists in SW s. Sd, SimT
(EmergencyDpt, Organization), Sb is a valid causal link. The EmergencyDpt
and Orga-nization concepts match with the Plug-in match according to the definition
of SimT . According to examples 1 and 2, the causal link matrix M follows:

  {(Sa,1)}



 {(Sa,1)}







M =





3 ),(Se,1)}

{(Sd, 2



{(Sb, 1



3 )}

{(Sc,1)}






{(Sb,1)}









Given a set of instantiated concepts in KB, definition 3 initialises a CLM M and the
property 1 follows.

Definition 3. (Causal link matrix initialisation)
Let M be a CLM in Mp,q(P((SW s  T )  (0, 1])) and KB be the set of instantiated
concepts {C1, . . . , Ct} such that KB  Input(SW s)  T . M is initialised with KB iff

mi,k  (Ck, 1), i  {1, . . . , p}, k  {1, . . . , t}

Example 4. (Illustration of a causal link matrix initialisation)
Let {Address, P atientID} be the knowledge base KB and M be the CLM (example
3). According to the definition 2, Tables 2 and 3, the initialised CLM is:

 {(Add,1)} {(Sa,1)}

{(Add,1)}
{(Add,1)}
{(Add,1)} {(Sa,1)}
{(Add,1)}






M0 =





3 ),(Se,1)}

{(Sd, 2

{(P ID,1)}
{(P ID,1)}
{(P ID,1),{(Sb, 1
{(P ID,1)}
{(P ID,1)}

3 )}

{(Sc,1)}






{(Sb,1)}









Property 1. An entry mi,j from a causal link matrix M  Mp,q(P((SW sT )(0, 1]))
is different from the empty set if and only if one of the following conditions is satisfied:
i) sy  SW s with at least one input ri.label  T and one output Out sy  Out(sy)
ii) cj.label is a concept in KB (definition 3).
Once all Web services in SW s are semantically chained according to the causal link
criteria, the Web service composition problem is mapped to an AI planning problem.

T such that SimT (Out sy, cj.label) = 0 (definition 2);

3.5 Causal Link Matrix Issues

The key contribution of the Causal link matrix is a formal and semantic model to control
a set of Web services which are relevant for a Web service composition. Web services of
SW s are supposed to be relevantly discovered in a discovery process [2,9]. Thus the set
of Web services SW s is closed in order to limit the dimension of the Causal link matrix.
This model allows performance analysis of proposed plans with a concrete view of the
composition background: causal links and their semantic dependency. The Causal link
matrix aims at pre-chaining Web services according to a semantic similarity based on
their Output/Input specification. Thus the CLM describes all possible interactions between all the known Web services in SW s as semantic connections. Moreover the CLM

F. L ecu e and A. L eger

model in an interesting trade-off to support processes such as Web service verification
(valid causal link) or repairing by insertion and deletion of Web services. The Causal
link matrix is able to prepare a suitable context for an AI planning problem [7,20] with
the purpose of obtaining complete, correct, consistent and optimal plan.
A set of ontologies T , a set of Web services SW s, a goal , a knowledge base KB
and a semantic similarity function SimT are required in order to satisfy such a challenging solution. With a terminology T , we deal with conceptual analysis (inference
problems) and knowledge representation. A set of Web services refers to a set of actions for a planning problem.  informs about plan directions (as searching concepts).
A knowledge base KB informs about initial conditions (instantiated concepts). Finally
the similarity function SimT semantically compares two parameters as concepts in T .

4 AI Planning and Causal Link Matrices
The planning problem is formalized as a triple  = SW s,KB, . SW s refers to a
set of possible state transitions, KB is an Initial state and   T is an explicit goal
representation. The Web service composition method consists of finding a plan that
produces the desired outputs  according to a knowledge base KB. The causal link
score allows the early detection of impossible, feasible and best links between Web
services (Definitions 1 and 2). That is why our method is based on the causal link
validity between Web service. The CLM of a specified domain allows to detect all
Web service composition with semantic connections. Composition as sequences of Web
service is a necessary requirement to propose a solution plan. Such a composition is
defined by the sequence-composability. The latter composability defines a composition
sx  sy if an output of sy is consumed by an input of another Web service sx. The
sequence-composability knowledge is expressed in CLMs according to the Theorem 1.
Theorem 1. Let M be a CLM, and sx, sy be two Web services in SW s. sx and sy are
sequence-composable iff
 i  {1, .., p}, j  {1, .., q}, v  (0, 1] such that (sy, v)  mi,j. cj.label and
ri.label are respectively inputs of sx (In(sx)) and sy (In(sy)).

Proof. Consider the proof of theorem 1 as the following two implications.
() Let sx, sy be two Web services in SW s and M be a CLM with entries in P((SW s
T )(0, 1]). Moreover, we consider the Sequence-composability of sx and sy such
that an output of the Web service sy is consumed by the input of another Web service sx i.e., sxsy. According to the CLM definition, input parameters of sx are labelled in M as concepts in T . Thus we may suppose{1, ..., psx
} as the index of the
sx input parameters in M without loss of generalities. According to the Sequencecomposability definition, j  {1, ..., qsx
} such that SimT (Out sy, cj.label) > 0
since an output Out sy  Out(sy) of one Web service sy is consumed by an input
cj.label of another web service sx. Consequently sy, SimT (Out sy, cj.label), sx
is a valid causal link. According to the property 1.i), an entry mi,j fromM is differ-
} 
ent from the empty set. Finally i  {1, ..., psx
{1, ..., q} such that (sy, SimT (Out- sy, cj.label))  mi,j with cj.label  In(sx)
and ri.label  In(sy).

}  {1, ..., p},j  {1, ..., qsx
?

?

?
() Suppose i  {1, ..., p},j  {1, ..., q},score  (0, 1] such that (sy, score)
 mi,j with cj.label  In(sx)  T and ri.label  In(sy)  T . According to definition 2 and property 1.i), an entry mi,j from M is different from the empty set.
Thus sy  SW s with at least one input ri.label  T and one output Out sy  T
such that SimT (Out sy, cj.label) = 0. Since cj.label  In(sx), two Web services
sx and sy in SW s exist such that an output of the Web service sy is consumed by
an input of another Web service sx. Thus sx and sy are sequence-composable.

Remark 1. In case of more complex composition, more than one Web service needs to
be chained with sx in order to produce input parameters of sx (in case of a regressionbase search). So parallel constructs may be applied. The latter constructs is conceivable
in case the entry cardinality (in the CLM) is greater than 1.
Example 5. Suppose the CLM M in section 3. Sc and Sd are sequence-composable
in SW s if and only if Sd  Sc (Theorem 1). Indeed there exists (i, j) = (2, 5) in M
such that(ri.label, cj.label) = (BloodP ressure, W arningLevel). (Sc, 1)  mi,j with
cj.label  In(Sd)  T and ri.label  In(Sc)  T . Therefore the output Sc is consumed
by the input of Sd because SimT (Out Sc, In Sd) = 0 (Table 1).

4.1 AI Planning Context and Regression-Based Approach

A simpler form of AI planning is introduced to avoid problems [21] from planningbased Web services composition, e.g., non determinism and implicit goal. The set of
Web services SW s (i.e., Actions) is closed by assumption and the goal set  refers to a
set of concepts in a terminology T . Thus we propose a solution plan in a well-defined
domain: goals are explicitly given, initial state is well defined and Web services are
strictly defined at functional level. So non determinism, implicit goal, fuzzy Web service
description and behaviour are out of the question. Therefore it does seem possible to
directly apply current AI planning methods to our specific problem.

The composition process consists of a recursive and regression-based approach. The
main idea is to propose a controlled and adequate matrix parsing. Thus each causal
link takes place in the solution plan as a semantic link between Web services. According to the Ra4C algorithm, a goal  needs to be solved. In case the previously goal
is fulfilled by the initial condition i.e., the knowledge base KB, the process of consistent plans discovery is stopped. Otherwise a Web service sx with a goal  as an output
parameter should be discovered in SW s. This discovery process is eased by the CLM
of the domain. In case of a discovery success, the process is iterated with the sx input parameters as new goals. Alternatively, the process is stopped and the (or a part
of the) plan is reduced to . All the process is recursive until all goals and new goals
are concepts in KB (stop condition). The algorithm 1 presents the complete process
of composition and returns a disjunction of consistent plans consisted of valid and
sequence-composablecausal links. CLMs ease the regression-based search because
all Web services are semantically well ordered in a robust and formal model. The solutions are plans wherein Web services are semantically chained by causal links. The
complexity of the algorithm 1 depends on the filling rate of the CLM. The more the
CLM is sparse the faster the Ra4C algorithm is. Instead a regression-based approach,
other problem-solving techniques - called heuristic reasoning - may be applied [22].

F. L ecu e and A. L eger

Plan constructs are necessary to describe a partial ordering [23] of Web services in
, hence  the conjunction operator (parallel construct),  the disjunction operator
(non determinism construct),  the sequence construct, and  >  >  their priority
order. The operator  defines the sequence-composability between two Web services.

Algorithm 1. Composition by regression-based approach Ra4C
Input: A CLM M ([mi,j]), a (or disjunction of) plan(s) , a planning problem

SW s,KB, , a set of solved goals G, a set of non valid goals nv.

Result: A disjunction of consistent plans .
begin

Sc  ; // Temporary set of pairs in (SW s  T )  (0, 1].
// Stop condition of the Ra4C algorithm.
if ((Ck  KB) & (SimT (Ck, ) = 0)) then   ;
// Web services discovery with  output.
foreach Ii  Input(SW s) do

if (sy, v)  mIi, then Add((sy, v), Sc);

// Plan for Web service composition.
if Sc =  then

foreach pair (sy, v)  Sc such that sy  SW s do

    sy ;
foreach In sy  In(sy) do

if   G then     ; Add(G, nv); // inconsistent plan
else
?

?

?
Add(, G);   SW s,KB, In sy;
    (
In(sy)Ra4C(M,,,G));

else     ; // inconsistent plan
return ;

end

sx  sy if Out sy, In sx  T | sy, SimT (Out sy, In sx), sx is a valid causal
link. The conjunction operator is used to express parallel plans. Such a situation is
possible if a Web service contains more than one input parameter (e.g., m1,2, m4,2). The
latter parameters consider new parallel goals in the Ra4C algorithm. The disjunction
operator is used if more than one output parameter is consumed by the goal (e.g., m5,3).

4.2 Consistency, Completeness and Correctness Properties of Solutions

Consistency is a necessary condition for a solution plan. Such a condition is satisfied
by plans which contain no cycle in the ordering constraints and no causal link conflicts
[17]. The Ra4C algorithm builds such a plan and avoid cycles and conflicts to dispose
of inconsistent causal links. The latter inconsistency is tackled by the Algorithm 1 with
an update of solved goals. Thus the Ra4C algorithm do not solve goals already solved.
The correctness proof of algorithm 1 is detailed in [24].
?

?

?
Example 6. (Set of consistent plans)
Let M0 be the CLM (section 3) and  = {Sa, Sb, Sc, Sd, Se},{Add, P atientID},
{P erson} be the planning-oriented Web service composition problem. We are looking
for a Person with skills to understand hypertension troubles. The result is a disjunction of four consistent plans: a1 = Sb  ((Sd  Sc  Sa(Add  P ID))), b1 =
Sb ((Se Sc Sa(Add P ID))), a2 = Sb ((Sd Sc Sa(Add(Sb )))), b2 =
Sb  ((Se  Sc  Sa(Add  (Sb  )))).
Plans suggested by Algorithm 1 do not necessarily satisfy the correctness and completeness properties of plan. Regarding a complete plan [17] as a plan where every input of
every Web service is achieved by some other previous Web service, a complete plan is
a partial order of well-ordered causal links. By definition, a CLM contains all necessary
information about complete plans because a CLM explicitly stores all valid causal links
between Web services. Non-complete plans contain empty plan  (Algorithm 1) hence
open goals. Plans with open goals (e.g., a3, b3) are removed from the solutions set
since those goals can not be satisfied by KB or the SW s Web services.
The plans refinement follows a backward chaining strategy from a goal to initial
states. In other words the goal   T is recursively produced from a (or some) valid
causal link(s) sy, SimT (Out sy, ), sx. So correctness of the solution plans is guaranteed by the causal link between the input and output parameters of Web services.

Therefore the algorithm 1 returns a set of correct, complete and consistent plans.
However such a set may contain a large number of plans. So pruning strategies for planspace is necessary to propose a solution. A causal link-based optimization criteria is
proposed to detect the optimal plan, hence the computation of best causal links in a
regression process. The process is recursively executed until the plan is a solution or
until the inputs In(sy)  T of the service sy are concepts in KB. The weight of the
optimal plan is computed by means of the CLM and algorithm 1 previously introduced:

WMax() = M axSc

{

mIi,.score  (

(WMax(Ii)))}

(4)
?

?

?
#In(sy)2

In(sy)
?

?

?
In(sy)

The recursive function WMax returns the weight of the best plan depending on the
goal . (4) is based on the weight of valid causal links of suggested plans. Sc is a
set of couple (sy, v) such that sy is a Web service with an output  and input Ii. In
other words, sy, SimT (Out sy, ), sx is a valid causal link. The In(sy) set is the
inputs set of sy  SW s whereas Ii is an input of sy. M is a CLM with coefficients in
P((SW s  T )  (0, 1]). mIi,.score is the second component of a couple (sy, v) 
mIi,. M axS is a n-arity function which returns the maximum value between n float
value(s). Given a CLM, the combination of algorithm 1 and (4) is an interesting tradeoff to find an optimal, consistent, correct and complete plan when one exists.

Example 7. According to example 6,  is divided into a disjunction of four consitent
plans {ai, bi}1i2. The plans a2 and b2 are not complete. The weights of different
plans have been computed with formula (4). W eight(a1) = 1 2
22 (1+1) = 1
whereas W eight(b1) = 1  1  1  1

2 . Thus b1 is the optimal plan.

22  (1 + 1) = 1

1 1

F. L ecu e and A. L eger

4.3 The Flexibility and Scalability of the Model

The flexibility of Web service composition models is a fundamental criteria for a relevant evaluation. In particular such models should be as robust as possible in order to
evolve in a volatile environment such as the Web services area. The formal model for
semantic Web service composition introduced in this paper takes into account this flexibility criteria. Indeed the alteration and modification (e.g., addition, deletion, and the
update of Web services in the set SW s) is the scope of CLMs. Each new update of SW s
is supported by a Causal link matrix revision since the CLM is responsible for storing
Web service in a semantic way through the causal relationship. Thus incremental systems wherein new Web services are progressively added, are supported by the previous
model of composition and especially the CLMs. For instance the integration of a new
Web service is related to the insertion of new labelled rows and columns in the worst
case. In the alternative case the integration of a Web service sy means a simple insertion
of sy in the relevant entry(ies) of the specific CLM. The flexibility of the model allows
us to apply a dynamic process of Web service discovery. The only constraint is a simple
update of the CLM before applying the Ra4C algorithm.

Scalability [25] of Web service composition and discovery models is still an open
issue. However the formal model scales well in France Telecom scenarios (about twenty
Web services) such as the e-healthcare (six Web services and a 5  6 CLM) scenario.

5 Related Work

Two different approaches [26,27] propose matrices to represent the Web services do-
main. [26] solve an AI planning problem where actions are viewed as tasks. Actions are
formally described with Preconditions and Effects. These tasks are executed by concrete Web services, according to a service/task (row/column) matrix. [27] proposes a
simple method to store Web service according to an input/output (row/column) matrix.
The Matrix model used in [26,27] does not propose reasoning about those matrices. In
fact, such the matrices are simply considered as representation models. Moreover no
semantic feature is introduced in their models.

From HTNs [28] to regression planning based on extensions of PDDL [29], different
planning approaches have been proposed for the composition of Web services. However
there is still the issue of how to deal with non determinism in these frameworks. Some
composition planners [20] propose output/input mapping with type characteristics of
these parameters and initial, final state predicates to generate compositions (i.e., plans).
However, services need to be composed using a specification technique that characterizes ongoing behaviour of the service in order to ensure a sound composition. Situation
calculus is proposed in [7] to represent Web service and Petri nets for describing the
execution behaviours of Web services. A planner is declared as a state chart in [30],
and the resulting composite services are executed by replacing the roles in the chart by
selected individual services. With the aim of generating a composite service plan out of
existing services, [31] propose a composition path, which is a sequence of operators that
compute data, and connectors that provide data transport between operators. The search
for possible operators to construct a sequence is based on the shortest path algorithm
on the graph of operator space. However, they only considered two kinds of services
?

?

?
operator and connector with one input and one output parameter (i.e., the simplest case
for a service composition). [32] propose a forward chaining approach to solve a planning problem. Their composition process terminates when a set of Web services that
matches all expected output parameters given the inputs provided by a user is found.

6 Conclusion and Future Work

Despite the fact that Web service composition is in its infancy some proposals are being
studied, but no theoretical model has been proposed to help automation of composition at the best stage of our knowledge. Nevertheless many work directions may need
such clearer formalizations, for instance for verification purposes. In this paper we outlined the main challenge faced in semantic Web services. Indeed we showed how the
CLM tackles this challenge by providing a necessary formal model which draws a concrete context for automatic Web service composition. This concrete context captures
semantic connections between Web services. The composition model has its roots in
AI planning domain and takes advantage of causal link expressivity by extending its
definition in a semantic context. Semantically weighted by the SimT function, the latter link refers to a local optimization criteria in order to find solution plans. Moreover
solution plans have properties of completeness, correctness, consistency and optimality.
The model of functional level composition is easily applied to Web services which are
described according to OWL-S (service profile) or WSMO (capability model) specifi-
cation. Finally, contrary to [26,27], our matrix model pre-computes the semantic similarities between Web services (individual inputs and outputs) according to causal links.
Web service composition is viewed as causal link composition.

For further studies new optimization algorithms and scalability of the model need to
be studied. Finally a process level composition needs to be associated to our functional
level composition to guarantee a full correctness of the composition process.
