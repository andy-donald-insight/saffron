Web Semantics: Science, Services and Agents

on the World Wide Web 1 (2004) 325343

Contextualizing ontologies

Paolo Bouqueta,b,

, Fausto Giunchigliaa,b, Frank van Harmelenc,

Luciano Serafinia, Heiner Stuckenschmidtc
a DIT, University of Trento, via Sommarive 14, 1-38050 Povo, Trento, Italy

c AI Department, Vrije Universiteit Amsterdam, The Netherlands

b ITC-IRST, Trento, Italy

Received 11 March 2004; received in revised form 30 June 2004; accepted 1 July 2004

Abstract

Ontologies are shared models of a domain that encode a view which is common to a set of different parties. Contexts are
local models that encode a partys subjective view of a domain. In this paper, we show how ontologies can be contextualized,
thus acquiring certain useful properties that a pure shared approach cannot provide. We say that an ontology is contextualized
or, also, that it is a contextual ontology, when its contents are kept local, and therefore not shared with other ontologies, and
mapped with the contents of other ontologies via explicit (context) mappings. The result is Context OWL (C-OWL), a language
whose syntax and semantics have been obtained by extending the OWL syntax and semantics to allow for the representation of
contextual ontologies.
 2004 Elsevier B.V. All rights reserved.

Keywords: Contextual ontology; Context OWL; Compatibilities

1. Introduction

The aim of the Semantic Web is to make information on the World Wide Web more accessible using
machine-readable meta-data. In this context, the need
for explicit models of semantic information (terminolo-
gies and background knowledge) in order to support

 This paper is an extension and revision of the paper C-OWL -
Contextualizing Ontologies, presented at the Second International
Semantic Web Conference (ISWC-2003).


Corresponding author. Tel.: +39 0461 882088;

fax: +39 0461 882093.

E-mail address: bouquet@dit.unitn.it (P. Bouquet).

1570-8268/$  see front matter  2004 Elsevier B.V. All rights reserved.
doi:10.1016/j.websem.2004.07.001

information exchange has been widely acknowledged
by the research community. Several different ways of
describing information semantics have been proposed
and used in applications. However, we can distinguish
two broad approaches which follow somehow opposite
directions:

Ontologies are shared models of some domain that
encode a view which is common to a set of different parties [19];

Contexts are local (where local is intended here to
imply not shared) models that encode a partys
view of a domain [14,13,12].

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

Thus, ontologies are best used in applications where
the core problem is the use and management of common representations. Many applications have been de-
veloped, for instance in bioinformatics [10], or for
knowledge management purposes inside organizations
[8]. Contexts, instead, are best used in those applications where the core problem is the use and management of local and autonomous representations with a
need for a limited and controlled form of globalization (or, using the terminology of the context litera-
ture, maintaining locality still guaranteeing semantic
compatibility among representations [12]). Examples
of uses of contexts are the classifications of documents
[6], distributed knowledge management [3], the development and integration of catalogs [11,4], peer-to-peer
applications with a large degree of autonomy of the
peer nodes but still with a strong need of coordination
[22] (with autonomy and coordination being the behavioral counterpart of the semantic need of locality and
compatibility).

Contexts and ontologies have both strengths and
weaknesses. It can be argued that the strengths of ontologies are the weaknesses of contexts and vice versa.
On the one hand, the use of ontologies enables the parties to communicate and exchange information. Shared
ontologies define a common understanding of specific
terms, and thus make it possible to communicate between systems on a semantic level. On the weak side,
ontologies can be used only as long as consensus about
their contents is reached. Furthermore, building and
maintaining (!) them may become arbitrarily hard, in
particular in a very dynamic, open and distributed domain like the Web. On the other hand, contexts encode not shared interpretation schemas of individuals
or groups of individuals. Contexts are easier to define
and to maintain. They can be constructed with no consensus with the other parties, or only with the limited
consensus which makes it possible to achieve the desired level of communication and only with the relevant parties. On the weak side, since contexts are
local to parties, communication can be achieved only
by constructing explicit mappings among the elements
of the contexts of the involved parties, and extending
the communication to new topics and/or new parties
requires the explicit definition of new mappings.

Depending on their attitude, from an epistemological point of view, some people would argue that ontologies are all we need, while others would argue the

exact contrary, namely that contexts are all we need.
Our attitude in this paper is quite pragmatical. We believe that ontologies and contexts both have some advantages and that, therefore, they should be integrated
in the representational infrastructure of the Semantic
Web. Thus, on the one hand, the intended meaning of
terms provided by parties which are willing to share
information can be more easily captured with an ontology (or a set of shared ontologies). On the other hand,
multiple ontologies (or sets or shared ontologies) which
contain information that should not be integrated (an
obvious example being information which is mutually
inconsistent) should be contextualized. We say that an
ontology is contextualized, or that it is a contextual
ontology, if it is kept local (and therefore not shared
with other ontologies) but its contents is put in relation with the contents of other ontologies via explicit
mappings.

Our approach in this paper is as follows. We take
the notion of ontology as the core representation mechanism for representing information semantics. To this
end, we start from the standard Web ontology language
OWL [17]. Notice that from OWL we inherit the possibility to have shared ontologies. We show, providing
some motivating examples, that OWL cannot model
certain situations (Section 4). Finally, we provide an
extension of OWL, that we call Context OWL (C-OWL),
which allows us to deal with all the examples of Section
4. C-OWL integrates in a uniform way the, somehow
orthogonal, key architectural features of contexts and
ontologies and the consequent semantic level differ-
ences.

The main technical contributions of this paper are

the following:

1. We provide a (somewhat synthetic) description of
OWL and its semantics, restating Patel-Schneider
and Hayes semantics [19], in a formal framework
more adequate to be extended (adapted) with a contextualized interpretation. These are the contents of
Section 3.

2. We modify the OWL semantics to make it able
to deal with the motivating examples reported in
Section 4. These are the contents of Section 5.

3. We define the C-OWL syntax by taking the OWL
syntax and by adding bridge rules, which allow to
relate, at the syntactic and at the semantic level, con-
cepts, roles and individuals in different ontologies.

We call a set of bridge rules between two ontologies a context mapping. Thus, a contextual ontology is an OWL ontology embedded in a space of
other OWL ontologies and related to them via context mappings. We define the C-OWL semantics by
taking the modified OWL semantics, as defined in
Section 5. These are the contents of Section 6.

4. Finally, in Section 7 we show how C-OWL can be
used for the alignment of a set of independently
developed medical ontologies. We argue that the
medical domain benefits from the contextualization
rather than a complete integration of ontologies, we
give some examples of possible mappings and show
the use of C-OWL for reasoning about mappings.

The semantics of C-OWL is obtained by modifying the OWL semantics [19] using the ideas and notions originally developed in [5], which is based on
the semantics of context (the, so called, Local Models Semantics [13]). The general notion of bridge rule
were originally defined in [15] and further studied in
[14,13,21,6,5]. The bridge rules proposed in this paper
were first defined in [7]. Finally, the constructs for representing bridge rules have been taken from the context
markup language CtxML[6].

2. Ontologies versus contexts, or globalize
versus localize

At the architectural level, the crucial difference between the notions of context and ontology is in how
mappings among multiple models are constructed:
 In OWL, the ability of combining models is restricted to the import of complete models and to the
use of the imported elements by direct reference. Via
the import mechanism, a set of local models is globalized in a unique shared model (which, however,
keeps track of the original distinctions). It is often
assumed that references to external statements are
only made for statements from imported models,
however, this is strictly speaking not required. As
a consequence, mappings rather implicitly exist in
terms of mutual use of statements across models.
 In context-based approaches, local models are kept
localized. A limited and completely controlled form
of globalization is obtained by using explicit map-

pings. In this approach, mappings are regarded as
projections of a local representation onto another,
and are first class modelling elements with a unique
identity. In other words, also mappings are viewed
as part of a local representation. This view makes it
possible to have multiple alternative mappings between the same pair of contexts, and to define mappings in one direction that differ from the mappings
in the opposite direction.

This different bias towards localization/globali-
zation, and the consequent very different treatment of
mappings lead to important semantic differences. OWL
is mainly inspired by the Tarskian style semantics of
propositional description logics. A model theoretic semantics is provided by mapping the elements of existing models into an abstract domain, where concepts are
represented by sets, relation by sets of tuples and instances by elements of that domain. When reasoning is
performed across different models, then these models
are assumed to share the interpretation domain. Thus,
as a consequence, the mappings between two models
become part of the overall model and define constraints
on the elements of the original two models.

The situation is quite different when we move to
contexts. In the Local Models Semantics, each context
uses a local set of models and a local domain of inter-
pretation. Relations between these local interpretation
domains are established by domain relations which explicitly codify how elements in one domain map into
elements of the other domain. Domain relations are
indexed by source and target domain, making them irreversible and non-transitive; and bridge rules modify
only the target context, leaving the source unaffected.

3. A global semantics for OWL

According to [19], an OWL ontology is a set of
annotated axioms and facts, plus import references to
other ontologies. OWL ontologies can be referenced
by means of a URI. Ontologies can also have annotations that can be used to record authorship and other
information associated with an ontology. Since annotation directives have no effect on the semantics of OWL
ontologies in the abstract syntax, we ignore them. We
concentrate on the OWL-DL fragment of OWL. This
language is equivalent to the SHOIQ(D+) DL, i.e.,

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

SHIQ(D+) extended with an equivalent of the oneOf
constructor. The proposed framework can be restricted
or generalized to OWL-lite and OWL-full, respectively.
Let I be a set of indexes, standing for a set
of URIs of onotlogies. For
instance, I contains
http://www.w3.org/2002/07/owl#. Let also
C, R and O be the sets of strings that can used to denote concepts, roles and individuals, respectively. The
disjoint union of C, R and O is denoted with L.
Definition 1 (OWL ontology). An OWL ontology (or
simply an ontology) is a pair i, Oi, where i  I and
Oi = Ti, Ai where T and A are a T -box and an A-
box, respectively in the SHOIQ(D+) description logic
on L  (I  L). i, Oi is an ontology with index i.
Suppose that C, D, E, F  C and r, s  R. The following are examples of concepts that can appear in Oi.
C, i: C, C  D, j : E, C  (j : E), r.C  D,

(j : s).C  (j : F )
Every expression occurring in Oi without an index
is intended to be in the language defined by Oi, Li.
The expressions appearing in Oi with indexes j are
supposed to be defined in Oj; therefore they appear in
Oj without index or with the index j. We introduce the
notions of local language and foreign language.
Definition 2 (Local language). A local concept, w.r.t.
i, is an element of C that appears in Oi either without
indexes or with index equal to i. Local roles and local
individuals are defined analogously. The set of local
concepts, local roles, and local individuals w.r.t. i are
denoted by Ci, Ri, and Oi. The local language to i, Li,
is the disjoint union of them.

(1)

Local objects of a language Li are also called i-
objects. For notational convenience, in the following
we always use the colon notation. Thus, for instance,
the local concepts C  Ci of an ontology Oi are written
as i : C. A foreign concept, or equivalently a non-local
concept, w.r.t. i  I, is a concept that appears in Oi but
is defined in some ontology Oj. Foreign concepts are
referred with the notation j : C. An analogous definition
can be given for roles and individuals.
Definition 3 (Foreign language). For any j = i, a j-
foreign concept w.r.t. i is an element of C that appears in
Oi with index j. j-foreign roles and j-foreign individuals are defined analogously. The j-foreign language
w.r.t. i is the disjoint union of them.

Among the concepts described in (1), C and D are
local concepts w.r.t. i and r is a local role (w.r.t. i), while
E and F are j-foreign concepts and s is a j-foreign role.
By means of foreign concepts, roles and individuals,
two ontologies can refer to the same semantic object
defined in a third ontology.

Definition 4 (OWL space). An OWL space is a family of ontologies {i, Oi}iI such that every Oi is an
ontology, and for each i = j, the j-foreign language of
Oi is contained in the local language of Oj.

Moving to semantics, the idea is now to restate the
semantics in [19] making explicit reference to the notions of local and foreign language. This distinction,
crucial for the work developed in the next section, is
not made in [19].

The semantics for OWL spaces defined in [19] is
based on the intuition that, in OWL, as in RDF, a
data type denotes the set of data values that is the
value space for the data type. Concepts denote sets of
individuals. Properties relate individuals to other in-
formation, and are divided into two disjoint groups,
data-valued properties and individual-valued proper-
ties. Data-valued properties relate individuals to data
values; individual-valued properties relate individuals
to other individuals.

In the following, we assume that any domain we introduce (denoted by 	 possibly with indexes) contains
the union of the value spaces of the OWL data types
and Unicode strings.

	I , (.)I

I =
Definition 5 (OWL interpretation [19]). An OWL interpretation for the OWL space {i, Oi}iI, is a pair
, where 	I, contains a non-empty set of
objects (the resources) and (.)I is a function such that
1. (i, C)I  	I for any i  I and C  Ci;
2. (i, r)I  	I  	I for any i  I and r  Ri;
3. (i, o)I  DI for any i  I and o  Oi;

Notice that (.)I can be extended to all the complex
descriptions of SHIQ(D+) as usual. Statements contained in the A-box and the T-box (i.e., facts and ax-
ioms) of an ontology Oi of an OWL space {i, Oi}iI
can be verified/falsified by an interpretation according
the axioms written in [19].

We call the above interpretation, a global interpre-
tation, to emphasize the fact that the languages are

interpreted against a global domain. We call the overall
approach, the global semantics approach to OWL.
Definition 6 (OWL axiom and fact satisfiability [19]).
Given an OWL interpretation I for {i, Oi}iI, I satisfies a fact or an axiom  of the Oi according to the
rules defined in the table Interpretation of Axioms and
Facts of [19]. An OWL interpretation I satisfies an
OWL space {i, Oi}iI, if I satisfies each axiom and
fact of Oi, for any i.

Notice that we do not give any interpretation of the
possibility for Oi to import another ontology Oj. How-
ever, from the logical point of view, importing Oj into
Oi can be thought of as duplicating all the statements
of Oj in Oi.

4. Motivating examples

We provide some examples which cannot be represented with the current syntax and semantics of OWL.
These examples show the need to enrich ontologies
with the capability to cope with:

1. The directionality of information flow: we need to
keep track of the source and the target ontology of
a specific piece of information;

2. Local domains: we need to give up the hypothesis
that all ontologies are interpreted in a single global
domain;

3. Context mappings: we need to be able to state
that two elements (concepts, roles, individuals) of
two ontologies, though being (extensionally) dif-
ferent, are contextually related, for instance because they both refer to the same object in the
world.

Example 1 (Directionality). Consider two ontologies
O1 and O2 and suppose that O2 is an extension of
O1, i.e., O2 imports O1 and adds it some new axiom.
Directionality is fulfilled if the axioms added to O2
should not affect what is stated in O1. Consider the
case where O1 contains the axioms A  B and C 
D; furthermore, suppose that O2 contains the axiom
B  C. We would like to derive A  D in O2 but not
in O1.
Let us see how the global semantics behaves in this
case. Let {1, O1 ,2, O2} be the OWL space containing O1 and O2. Let A, B, C, and D be 1 local

concepts. Suppose that O1 contains the axioms A  B
and C  D. Suppose that O2 imports O1, this implies
that O2 contains 1: A  1: B and 1: C  1: D. Finally,
suppose that O2 contains the extra axiom 1: B  1: C.
We have that any interpretation of {1, O1 ,2, O2},
should be such that (1: A)I  (1: B)I  (1: C)I  (1:
D)I; and therefore (1: A)I  (1: D)I. This means that
1: A  1: D is a logical consequence of the statements
contained in the OWL space and, therefore, that directionality is not fulfilled.
Example 2 (A special form of directionality: the propagation of inconsistency). Consider the previous example and suppose that O2 contains also the following two
facts: 1: A(a) and 1:D(a). O2 is inconsistent, but we
want to avoid the propagation of inconsistency to O1.
However, this is not possible as the fact that there is
no interpretation that satisfies the axioms in O2, automatically implies that there is no interpretation for the
whole OWL space, either.
Example 3 (Local domains). Consider the ontology
OWCM of a worldwide organization on car manufac-
turing. Suppose that OWCM contains the standard
description of a car with its components. Clearly, such
a domain should be abstract and general enough so
that it could be used (imported) by a large set of users
dealing with cars. OWCM contains the concept car
which is supposed to capture any possible car, not only
the actual physical cars in circulation. OWCM contains
also a general axiom stating that a car has exactly one
engine.
Car  ( 1)hasEngine  ( 1)HasEngine
Suppose that two car manufacturing companies, say
Ferrari and Porsche, decide to adopt the WCM standard
and import it in their ontologies, OFerrari and OPorsche.
The two companies customize the general ontology
provided by WCM by adding the fact that the engine
of a car is one of the engines they produce. Therefore,
the following two axioms are added to the ontologies
OFerrari and OPorsche respectively.
WCM:car  hasEngine.{F23, F34i}
WCM:car  hasEngine.{P09, P98i}
(3) states that, in the ontology OFerrari, a car has an
F23 or an F45i engine (two Ferraris engines). Similar interpretation is given to (4). Notice that the axioms above are supposed to have a local scope, i.e.,

(3)

(2)

(4)

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

they are supposed to be true only withing the ontology
they are stated. However, from the semantical point
of view, assuming global semantics implies that the
effect of an axiom global. Indeed, according to the
global semantics, any interpretation of the OWL space
containing OWCM, OFerrari and OPorsche is such that,
either (F23)IFerrari = (P09l)IPorsche or (F34i)IFerrari =
(P09)IPorsche, which is not what we want as Ferrari
does not produce Porsches engines and neither vice-
versa. The main problem here is the diversity of the
domains between OFerrari and OPorsche, and the fact
that each of the two companies wants to reason in its
own local domain, ignoring the fact that there are cars
which engines different from the ones they produce.

Example 4 (Context mappings). Suppose, we have an
ontology OFIAT describing cars from a manufacturing
point of view, and a completely independent ontology
OSale describing cars from a car vendor point of view.
The two concepts of car defined in the two ontologies,
(that can be referred by Sale:Car and FIAT:Car) are
very different and it makes no sense for either ontology to import the concept of car from the other. The
two concepts are not extensionally equivalent and the
instances of FIAT:Car do not belong to Sale:Car and
vice-versa. On the other hand, the two concepts describe the same real-world class of objects from two
different points of view, and there can be many reasons for wanting to integrate this information. For in-
stance, one might need to build a new concept which
contains (some of) the information in Sale:Car and in
FIAT:Car. This connection cannot be stated via OWL
axioms, as, for instance

Sale:Car  FIAT:Car

implies that

CarISale = CarIFIAT

i.e., that the two classes coincide at the instance level.
In this example, the problem is not only at the semantic level. As the following section will show, handling this example requires an extension of the OWL
syntax.

5. A semantics for contextual ontologies

In this section, we incrementally extend/modify the
OWL global semantics, and in the last subsection, also
its syntax, in order to be able to model the above ex-
amples.

5.1. Directionality

We modify the definition of interpretation given
above according to the intuition described in [5]. The
main idea is that we split a global interpretation into a
family of (local) interpretations, one for each ontology.
Furthermore, we allow for an ontology to be locally in-
consistent, i.e., not to have a local interpretation. In this
case, we associate to Oi a special interpretation H,
called a hole, that verifies any set of axioms, possibly
contradictory.
Definition 7 (Hole). A Hole is a pair
, such
that 	H is a non-empty set and (.)H is a function that
maps every constant of Oi into an element of 	H, every
concept of Ci in the whole 	H and every role of Ri into
the set 	H  	H. H is called a hole on 	H.

	H, (.)H

Analogously to what done in [5], the function (.)H
can be extended to complex descriptions and complex
roles in the obvious way.
Definition 8 (Satisfiability in a hole). H satisfies all
the axioms and facts, i.e., if  is an axiom or a fact,
H |= .

Therefore, a hole is merely a representation of the
local interpretation of an ontology in cases where this
ontology is inconsistent. In the classical setting, this
distinction was not needed, because there was nothing
more to say about an inconsistent model other than that
any fact is derivable from it. In the distributed setting,
we still want to be able to talk about the global interpretation and therefore need an explicit way of talking
about inconsistent local interpretations. This is done by
using the notion of a hole.
Definition 9 (OWL interpretation with holes). An

OWL interpretation with holes for the OWL space
{i, Oi}iI, is a family I = {Ii}iI, where each Ii =
	Ii , (.)Ii
, called the local interpretation of Oi, is either an interpretation of Li on 	Ii, or it is a hole for
Li on 	Ii, and for all i  I, each 	Ii coincides and are
equal to a set denoted by 	I.

holes. Suppose that (A)I1  (B)I2. Then we have that
1: A  2 : B is not satisfied if it occurs in O2, while it
is satisfied if it occurs in O3.
Example 5 (Examples 1 and 2 formalized). Consider
the OWL interpretation with holes, I = {I1, I2} defined as follows
1. 	I1 = {a, b, c, d}, AI1 = {a}, BI1 = {a, b}, CI1 =
2. 	I2 = {a, b, c, d}, and I2 = H2, i.e. I2 is a hole.

{c}, DI1 = {c, d},

I is an interpretation for the OWL space containing O1
and O2, since
1. I1 |= A  B, I1 |= C  D, and I1 |= A  D, by
2. I2 |= 1: A  1: B, I2 |= 1: B  1: C, and I2 |= 1:

construction of I1,
C  1: D, because I2 is a hole.

Notice that I is an interpretation that satisfies O2 (i.e.,
1: A  1: B, 1: B  1: C, and 1: C  1: D), without
making A  D true in O1.

To formalize Example 2, we consider the same interpretation as above. This interpretation satisfies any
axiom in O2 (I2 is a hole) still keeping O1 consistent
(I1 is an interpretation which is not a hole and which
satisfies O1).

Each (.)Ii can be extended in the usual way to interpret local descriptions. Foreign descriptions are interpreted by the combination of the different (.)Ii for each
i  I. In particular for any concept, role or individual
of the alphabet Lj, (.)Ii can be extended to be the same
as (.)Ij . Namely:
(j : x)Ii = (x)Ij
which can intuitively be read as, the meaning of the j-
foreign concept j : x occurring in Oi is the same as the
meaning of x occurring in Oj. Since all interpretations
share the same domain, this semantics is well founded.
Namely, the interpretation of j-foreign concepts in i
are contained in the domain of i, 	Ii. In the following,
we give some examples of (.)Ii, for which we suppose
that C, D  Ci and r  Ri and D, F  Cj and s  Rj.
CIi =

Any subset of 	Ii if Ii = Hi
	I otherwise

(5)

(C  D)Ii = (C)Ii  (D)Ii
(C  j : E)Ii = (C)Ii  (E)Ij
	I \ (C)Ii if Ii = Hi
(C)Ii =
	I otherwise

(j : E)Ii = (E)Ij
(j : E)Ii =

	I \ (E)Ij if Ii = Hi
	I otherwise

(6)

5.2. Local domains

Definition 10 (Axiom satisfiability). Given an OWL
interpretation with holes, I for {i, Oi}iI, I satisfies
a fact or an axiom  of the Oi, in symbols I |= i : 
if Ii |= . An OWL interpretation I satisfies an OWL
space {i, Oi}iI, if I satisfies each axiom and fact of
Oi for each i.

Notice that any global OWL interpretation I, as defined in Definition 5, is a special case of an OWL interpretation with holes (Definition 9). This happens if
every Ii is not a hole. So Definition 9 can be seen as
an extension of Definition 5.

Let us see how holes affect satisfiability and ultimately how they allow to better model the intuitions
behind OWL. A first effect of holes is that the same
axiom can be satisfied in an ontology and not satisfied
in another. Consider for instance the OWL interpretation with holes {I1, I2, H3}, where I1 and I2 are not

The OWL semantics described in the previous section assumes the existence of a unique shared domain,
namely, that each ontology describes the properties of
the whole universe. In many cases, this is not true as, for
instance, an ontology on cars is not supposed to speak
about medicines, or food. The idea here is to associate
to each ontology a local domain. Local domains may
overlap as we have to cope with the case where two
ontologies refer to the same object.
Definition 11 (OWL interpretation with local do-
mains). An OWL interpretation with local domains
for the OWL space {i, Oi}iI, is a family I = {Ii}iI,
, called the local interpretation of Oi, is either an interpretation of Li on 	Ii, or
a hole.

where each Ii =

	Ii , (.)Ii

Definition 11 is obtained from Definition 9 simply
by dropping the restriction on domain equality. The

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

interpretation (.)Ii is extended to complex concepts,
roles, and individuals, in the usual way. We have to
take care, however, that j-foreign concepts, roles, and
individuals used in Oi could be interpreted (by the local
interpretation Ij) in a (set of) object(s) which are not in
the local domain 	Ii. Indeed, to deal with this problem,
we have to impose that any expression occurring in
Oi should be interpretable in the local domain 	Ii.
As a consequence, we restrict the interpretation of any
foreign concept C  Cj, any foreign role r  Rj and
any foreign individual a  Oj as follows:
1. (j : C)Ii = (C)Ij  	Ii
2. (j : r)Ii = (r)Ij  (	I  	I)
3. (j : a)Ii = (a)Ij

Notice that point 3 above implicitly imposes that if
a j-foreign constant j : a is used in the ontology Oi,
then its interpretation in j, i.e., aIj , must be contained
in the domain 	Ii. Let us now see how we can deal
with Example 3.

local

Example 6
(Example 3 formalized). Consider
the OWL interpretation with
domains,
I = {IWCM, IFerrari, IPorsche} for the OWL space
containing OWCM, OFerrari, and OPorsche. Suppose
that 	WCM contains four individuals c1, . . . , c4 for
cars and four individuals e1, . . . , e4 for engines,
hasEngineIWCM = {c1, e1 , . . . ,c4, e4}.
with
Let 	Ferrari = {c1, c2, e1, e2}
and 	Porsche =
{c3, c4, e3, e4}. be the local domains for OFerrari
and OPorsche respectively. Suppose that IFerrari
interprets F23 and F34i in e1 and e2 respectively, and
that IPorsche interprets P09 and P98i in e3 and e4
respectively.

This OWL interpretation with local domains satisfies all the axioms (2), as in IWCM a car has only one
engine; it satisfies axioms (3) since the interpretation
of car:WCM in OFerrari is restricted to be {c1, c2}
whose engine is a ferrari engines. Analogously this
OWL interpretation satisfies (4). Notice however
that Ferraris engines are disjoint from Porsches
engines.

5.3. Context mappings

We have concepts, roles and individuals local to different ontologies and domains of interpretation. A context mapping allows us to state that a certain property

holds between elements of two different ontologies.
Thus, for instance, in Example 4, one possible mapping could allow us to say that the class Car in the
ontology OFIAT contains the same cars as (or, as we
say, is contextually equivalent to) the class of Car defined in the ontology OSale. As from Example 4, this
cannot be done via local axioms within an ontology.

The basic notion towards the definition of context

mappings are bridge rules.

Definition 12 (Bridge rules). A bridge rule from i to j
is a statement of one of the five following forms,
 j : y,

i: x

i: x

 j : y,
 j : y,

i: x

 j : y,
 j : y,

i: x

i: x

where x and y are either concepts, or individuals, or
roles of the languages Li and Lj respectively.

A mapping between two ontologies is a set of bridge

rules between them.

Definition 13
(Mapping). Given a OWL space
{i, Oi}iI a mapping Mij from Oi to Oj is a set of
bridge rules from Oi to Oj.

Mappings are directional, i.e., Mij is not the inverse
of Mji. A mapping Mij might be empty. This represents the impossibility for Oj to interpret any i-foreign
concept into some local concept. Dually Mij might be
 j : y for any
a set of bridge rules of the form i: x
element x (concept, role, and individual) of Oi. This
represents the operation of mapping all of Oi into an
equivalent subset of Oj. If this subset is Oj itself then
this becomes the contextual mapping version of the
OWL import operation. However, notice that importing Oi into Oj is not the same as mapping Oi to Oj with
Mij. In both cases, information goes from i to j. The
difference is that, in the former case, Oj duplicates the
information of i- foreign elements without any change,
while, in the latter, Oj translates (via the mapping Mij)
the semantics of Oi into its internal (local) semantics.

Definition 14 (Context space). A context space is a pair
composed of an OWL space {i, Oi}iI and a family
{Mij}i,jI of mappings from i to j, for each pair i, j  I.
To give the semantics of context mappings we extend the definition of OWL interpretation with local
domains with the notion of domain relation. A domain
relation rij  	Ii  	Ij states, for some element in

for

context

is

composed of

(Interpretation

	Ii to which element in 	Ij it corresponds to. The semantics for bridge rules from i to j can then be given
with respect to rij.
{i, Oi}iI ,{Mij}ijI
Definition
context

spaces). An interpretation for
space
a pair
I,{rij}i,jI
. where I is an OWL interpretation with
holes and local domains of {i, Oi}iI and rij, the
domain relation from i to j, is a subset of 	Ii  	Ij .
Definition 16 (Satisfiability of bridge rules1).
1. I |= i: x
2. I |= i: x
3. I |= i: x
4. I |= i: x
5. I |= i: x

 j : y if rij(xIi)  yIj ;
 j : y if rij(xIi)  yIj ;
 j : y if rij(xIi) = yIj ;
 j : y if rij(xIi)  yIj = ;
 j : y rij(xIi)  yIj = ;

An interpretation for a context space is a model for it
if all the bridge rules are satisfied.

When x and y are concepts, say C and D, the intu-
 j : D, is that the i-local concept
itive reading of i: C
C is more specific than the j-concept D. An analogous
 j : D. The intuitive
reading can be given to i: C
 j : D is that C is disjoint from D.
reading of i: C
 j : D is that C
Finally, the intuitive reading of i: C
and D are two concepts which are compatible. When x
 j : y states that y is
and y are individuals, then i: x
a more abstract representation of the object represented
by x in i (intuitively, there might be more than one xs
 j : y
corresponding to the same y) Vive-versa i: x
states that y is a less abstract (more concrete) representation of the object represented by x in i (intuitively
there might be more than one ys corresponding to the
 j : y states that x and y are at the same
same x). i: x
 j : a
level of abstraction. Notice that, we add i: a
for any individual a of 	i and 	j we reduce to the case
of OWL interpretation with holes and local domains).
 j : y states that x and y denotes completely un-
i: x
 j : y states that x and y
related objects. While i: x
might be related.

1 In this definition, to be more homogeneous, we consider the interpretations of individuals to be sets containing a single object rather
than the object itself.

Example 7 (Examples 4 and 3 formalized). The fact
that Sale:Car describes the same set of objects from
two different points of view, can be captured by asserting the bridge rule:

Sale:Car

 FIAT:Car

(7)

The domain relation from OSale to OFIAT of any contextual interpretation satisfying (7) will be such that
rij(Car)ISale = (Car)IFIAT.

6. C-OWL: extending OWL

In the previous sections, we showed how certain
requirements with respect to a contextual representa-
tion, in particular local domains and directionality can
be achieved by a modification of the OWL semantics
keeping its syntax unchanged. This allows us to
define Context OWL as a strict extension of the OWL
standard. This minimal invasive approach guarantees a
wide applicability of the model proposed here. In fact,
we can create an OWL space by defining mappings
between already existing ontologies on the web. What
is left to be done is to define an appropriate language
for representing mappings between OWL ontologies
along the ideas presented in the previous section.
C-OWL can therefore be straightforwardly obtained
from CtxML [6] by substituting the language for
representing contexts in item 1 with OWL, and by
keeping item 2 unchanged. As a consequence, C-OWL
has the full representational power of OWL when we
boil down to using ontologies, and the full representational power of CtxML when we boil down to using
information. The further nice property
contextual
of C-OWL is that
the two components are completely orthogonal and one can use the ontology or the
contextual component in a totally independent manner.
In this section, we define an RDF-based syntax for
such mappings. We introduce the semantics using an
example, explain the different parts of the specification
and define an RDF schema for the mapping represen-
tation.

The philosophy of C-OWL is to treat mappings as
first class entities and to represent them independently
from the ontologies they connect. There are a couple
of advantages of this approach. From a syntactic point
of view, the advantage is that we can define a language
for specifying mappings independently from the OWL

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

Fig. 1. A C-OWL mapping from the ontology wine to the ontology vino.

syntax specification. The resulting language will refer
to elements of the OWL specification without extending it.

Fig. 1 shows an example mapping of two ontologies
about wines. In order to represent this mapping, we
have to capture the following aspects:
 a unique identifier for referring to the mapping;
 a reference to the source ontology;
 a reference to the target ontology;
 a set of bridge rules relating classes from the two

ontologies, each described by:
 (a reference to) the source concept;
 (a reference to) the target concept;
 the type of the bridge rule, which is one of , ,

, , .

Fig. 2 shows an RDF-based representation of
these elements. We use a resource of
the type
cowl:Mapping as a root element of the descrip-
tion. This resource is linked to two OWL models using the properties sourceOntology and targe-
tOntology. The ontologies are represented by reference to their namespace. Further, the resource representing the overall mapping is linked to a number of resources through the cowl:bridgeRule
the individ-
property. These resources represent
ual
type
cowl:Equivalent, cowl:Into, cowl:Onto,
cowl:Incompatible or cowl:Compatible
each representing one of the types mentioned above.
Each of the resources representing a bridge rule is
linked to an OWL class from the target ontology

rules in the mappings and can be of

through the cowl:source and to a class from the
target ontology by the cowl:target property. The
classes can be represented by a reference to the corresponding resource in the ontology definition but it can
also be a complex OWL class definition that uses elements from the respective ontology. In this way, we
can represent complex mappings that go beyond semantic relations between class names. We have defined
an RDF schema for the mapping representation. This
schema is shown in Fig. 7.

7. Aligning medical ontologies with C-OWL

The need for terminology integration has been
widely recognized in the medical area leading to a number of efforts for defining standardized terminologies.
It is, however, also acknowledged by the literature, that
the creation of a single universal terminology for the
medical domain is neither possible nor beneficial, because different tasks and viewpoints require different,
often incompatible conceptual choices [9]. As a result,
a number of communities of practice have evolved that
commit to one of the proposed standards. This situation
demands for a weak form of integration, also referred
to as alignment in order to be able to exchange information between the different communities.

The notion of contextualized ontologies can provide
such an alignment by allowing the co-existence of dif-
ferent, even in mutually inconsistent models that are
connected by semantic mappings. As discussed above,
the nature of the proposed semantic mappings satisfies
the requirements of the medical domain, because they

Fig. 2. Specification of the mappings from Fig. 1.

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

do not require any changes to the connected ontologies and do not create logical inconsistency even if the
models are incompatible.

7.1. (Bio-)medical ontologies

In the medical area, a lot of work has been done on
the definition and standardization of terminologies.2
The result of these efforts is a large number of medical terminologies and classifications. The complexity
of the terminologies used in medicine and the strong
need for quality control has also lead to the development of ontologies that feature complex concept definition (compare [16] for a discussion of the required ex-
pressiveness). Some of these ontologies are available in
OWL and can be seen as the first OWL applications that
have a use in real life applications. We briefly introduce
three medical ontologies that are available in OWL.

7.1.1. Galen

The motivation for the GALEN project [20] is the
difficulty in exchanging clinical data between different
persons and organizations due to the heterogeneity of
the terminology used. As a result of the project, the
GALEN Coding Reference model has been developed.
This reference model is an ontology that covers general
medical terms, relations between those terms as well
as complex concepts that are defined using basic terms
and relations. We used an OWL version of the GALEN
model that contains about 3100 classes and about 400
relations.

7.1.2. Tambis

The aim of the transparent access to bioinformatics
information sources project (Tambis) [1] is to provide
an infrastructure that allows researchers in bioinformatics to access multiple sources of biomedical resources
in a single interface. In order to achieve this function-
ality, the project has developed the Tambis Ontology,
which is an explicit representation of biomedical ter-
minology. The complete version of Tambis contains
about 1800 terms. The DAML + OIL version we used
in the case study actually contains a subset of the complete ontology. It contains about 450 concepts and 120
relations.

2 See e.g. http://www.medinf.muluebeck.de/ inge-
nerf/terminology/Index.html for a collection of standards.

7.1.3. UMLS

The Unified Medical Language System (UMLS)
[18] is an attempt to integrate different medical terminologies and to provide a unified terminology that can
be used across multiple medical information sources.
Examples of medical terminologies that have been integrated in UMLS are MeSH and SNOWMED. In our
case study, we used the UMLS semantic network. The
corresponding model that is available as OWL file contains 134 semantic types organized in a hierarchy as
well as 54 relations between them with associated domain and range restrictions.

7.2. Alignment scenario

C-OWL and especially its formal semantics provides us with several possibilities concerning the alignment of the medical ontologies mentioned above. We
assume that the goal is to establish a connection between the Tambis and the GALEN ontology in such
a way that the two models with their different focus supplement each other. The first option is to directly link the two ontologies by defining appropriate bridge rules which formalize the semantic relation between concepts in the two ontologies. These
bridge rules can be represented using the syntax described in the previous section and stored in separated
files that can be used by third parties. A second option for aligning Tambis and GALEN is based on a
third, already existing, more general model of the domain (UMLS in this case). In this setting, the relation between Tambis and GALEN can be logically inferred from the relations between each single ontology and the more general ontology UMLS as shown in
Fig. 3.

Being the result of an integration of different medical terminologies (compare [2]), the UMLS semantic
network is such a general model, that we can assume it
as a general medical ontology that covers most of the
content of Tambis, GALEN and also other prospective
ontologies that we might want to align. Its important
to notice that the fact that UMLS completely covers
GALEN and Tambis is not a strong requirement, as a
partial coverage does not prevent us to define partial
alignment.

In order to explore the use of C-OWL for the alignment of medical ontologies, we conducted a small case
study in aligning the ontologies mentioned above using

Fig. 3. Indirect Alignment of Tambis and GALEN using UMLS.

the UMLS semantic network as a central terminology.
We investigated the upper parts of the ontologies and
identified areas with a sufficient overlap. Such an overlap between all three models exists with respect to the
following three areas:

Processes: Different physiological, biological and
chemical processes related to the functioning of the
human body and to the treatment of malfunctions.
Substances: Substances involved in physiological
processes including chemical, biological and physical substances.

Structures: Objects and object assemblies that form
the human body or parts of it. Further, structures
used in the treatment of diseases.

We analyzed the three models with respect to these
three topics. Based on the comparison of the three mod-
els, we define mappings between Tambis and GALEN
and the UMLS terminology. These mappings consist
of sets of bridge rules each connecting single concepts
or concept expressions.

In the following, we discuss the ability of C-OWL
to reason about the defined mappings using examples
from the substances topic. We describe inferred knowledge about the mappings in terms of detected inconsistencies and derived semantic relations between the two
ontologies.

7.3. Examples from the alignment

substances in a physical sense and energy making it
more general than the notion of substance in UMLS

GeneralisedSubstance

 Substance

The actual notion of substance as defined in GALEN is
not as we might expect equivalent to the notion of substance in UMLS, because it also contains some notions
that are found under anatomical structures in UMLS.
We can, however, state that the GALEN notion of substance is more specific than the union of substances and
anatomical structures in UMLS.
 Substance
 Anatomical Structure

Substance

The next GALEN concept that also occurs in UMLS
but has a slightly different meaning is the notion of body
substance. The difference is illustrated in the fact that
it also covers the notion of tissue which is found under
anatomical structures in UMLS. We conclude that the
notion of body substance in GALEN in a broader one
than in UMLS.

BodySubstance

 Body Substance

The other main class of substances mentioned in
GALEN are chemical substances. Looking at the things
contained under this notion, we conclude that it is
equivalent to the notion of chemical in UMLS.

GALEN contains the notion of a generalized substance which is a notion of substance that subsumes

ChemicalSubstance

 Chemical

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

Fig. 4. Inconsistent mapping in the example.

We can also find the correspondences to the distinction
between elementary and complex chemicals made by
GALEN in UMLS. Elementary chemicals are a special
case of the UMLS concept of elements ion or isotope.
 Element Ion or Isotop

ElemetaryChemical

Complex chemicals contain all kinds of chemical
substances sometimes viewed structurally, sometimes
functionally. Therefore, we cannot related this concept
to one of these views taken by UMLS. We also notice
that there are notions of complex chemicals in GALEN
that do not occur under chemicals in UMLS - e.g. Drugs
that related to the concept of clinical drug classified under manufactured objects.
 Clinical Drug

Drug

Further, the UMLS views on chemicals also contain elementary chemicals. Consequently, we can only define
the notion of complex chemical to be compatible with
the union of the two views in UMLS

ComplexChemical

 Chemical Viewed

Structurally

 Chemical Viewed Functional

On the level of more concrete chemical notions, we find
a number of correspondences mentioned in the follow-
ing. Named hormones are equivalent to hormones in

UMLS.

NAMEDHormone

 Hormone

Proteins are more specific than amino acids, peptides
or proteins.

Protein

 Amino Acid Peptide or Protein

The notions of lipid and of carbohydrate are the same
in the two models
 Lipid

Lipid

Carbohydrate

 Carbohydrate

There is an overlap between the notion of acid in
GALEN and the concepts amino acid, peptide or protein and Nucleic acid, nucleosid or protein in UMLS.

Acid

 Amino Acid Peptide or Protein
 Nucleic Acid Nucleosid or Protein

Finally, metals can be defined to be a special case of
inorganic chemicals.

 Inorganic Chemical

Metal

In summary, we were able to find a lot of correspondences on the level of groups of chemicals. While the

Fig. 5. Derivation of additional mappings.

models disagreed on the higher level structuring of sub-
stances, they shared a lot of more concrete concepts.
As a consequence, we found a number of equivalence
and subsumption relationships between substances at
a lower level while at the more general level, we often had to use weak relations or link to very general
concepts.

7.4. Benefits of using C-OWL

In the experiment, we defined mappings in a ad-hoc
rather than a systematic fashion. Such an ad hoc approach for defining mappings bears the risk of inconsistency and incompleteness. We cannot prevent the
definition of inconsistent or incomplete mappings, but

Fig. 6. Derivation of semantic relations in the merged model.

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

Fig. 7. RDF schema defining the extensions to OWL.

the semantics of C-OWL can be used to verify and
extend a defined mapping in order to detect inconsistencies and implied mappings. In the following, we
give examples of the use of the C-OWL semantics to
verify and extend the mappings between the substance
information in the different medical ontologies.

7.4.1. Verification of mappings

A mapping can become inconsistent if two classes
who are known to overlap, e.g. because they are subclasses of each other, link to disjoint concepts in another
model. An example of this situation can be found in the
substance related part of the alignment. Fig. 4 shows
the situation. On the right hand side, the extensions of
the UMLS concept chemical substances and some of its
subclasses are sketched. UMLS distinguishes between
chemical from a structural and a functional view. In the
case where these two views are defined to be disjoint
(one can either take a structural or a functional view but
not both), we get an inconsistency with the mappings
defined for the Tambis ontology, because the mapping
claims that the image of the concept chemical is exactly
the extension of the structural view. At the same time,
we claim that the image of enzyme which is a subclass
of chemical is exactly the extension of the UMLS concept Enzyme which is classified under the functional
view on chemicals in UMLS and therefore disjoint
from the structural view. This however is now possible
in the C-OWL semantics as the image of enzyme is a
subset of the image of chemical by definition.

This ability to detect inconsistencies depends on the
existence of appropriate disjointness statements in the
ontology the mappings point to. Alternatively, the use
of disjointness mappings can provide the same effect.
If we want to make clear that chemicals in Tambis are
not classified according to the functional view (which
we just found to be not entirely true) we can also add a
corresponding mapping stating that the image of chemicals is disjoint from the extension of the functional
view on chemicals. The definition of this mapping will
have the same effect leading to an inconsistency as described above.

7.4.2. Derivation of mappings

Besides the possibility to detect inconsistencies
in the mappings, we can also infer additional bridge
rules between the same models based on existing ones
thereby making the complete mapping implied by the

defined rules explicit. We illustrate this possibility
by discussing possible implications of an equivalence
mapping. Fig. 5 illustrates parts of the alignment of
substance related part of UMLS and GALEN. In
particular, it shows the rule stating an equivalence between the GALEN class chemical and the UMLS class
chemical substance which is part of the alignment. The
definitions in UMLS state that chemical substances are
less general than the class generalized substance, more
general than complex chemicals and disjoint from
processes. As the existing bridge rule states that the
image of chemical is exactly the extension of chemical
substance in UMLS, these relations also hold between
this image and the other UMLS classes mentioned. The
relations can be explicated by adding corresponding
bridge rules stating that the image of chemicals is
more general
less gen-
eral
that generalized substance and disjoint from
processes.

than complex chemicals,

Similar inferences can be made based on bridge
rules indicating specialization and generalization re-
lations. If we replace the equivalence in Fig. 5 by a rule
stating that chemicals is more specific than chemical
substances, we are still able to infer the relations to
generalized substances and to processes. Just the one
to complex chemicals will be lost, because the image
of chemicals might only overlap or be disjoint from
the extension of the respective concept. Conversely,
replacing the equivalence by bridge rule stating that
chemicals is more general than chemical substances
would have preserved the conclusion that chemicals
is more general than complex chemicals. Finally, stating that chemicals is disjoint from chemical substances
would have implied that it is also disjoint from complex
chemicals.

7.4.3. Merging local models

Another thing we would like to do based on the
alignments is to compare the the local models (Tam-
bis and GALEN) with each other and derive semantic
correspondences between classes in these models as
well. It turns out that we cannot really derive mappings
between the two local models from their mappings to
UMLS, because referring to different interpretation do-
mains, we cannot compare the constraints imposed by
these mappings. This situation changes, however, when
we assume that the local models are to be merged. In
this case, their interpretation domain becomes the same

P. Bouquet et al. / Web Semantics: Science, Services and Agents on the World Wide Web 1 (2004) 325343

and we can use the constraints to derive semantic correspondences between concepts in the two models from
the existing mappings.

Fig. 6 shows two examples of derived relations between concepts from GALEN and Tambis. The figure
shows two concepts from each, UMLS (upper part),
Tambis (lower left part) and GALEN (lower right part).
We assume that we have fixed the inconsistency detected in the mapping from Tambis to UMLS by removing the bridge rule relating chemical substances
to the structural view on chemicals and replacing it
by an equivalence between chemical substance and
chemicals in general. As the GALEN concept chemical is also defined to be equivalent to Chemical, we
can derive that these two concepts are equivalent in
the merged ontology. Further, we defined the notion
of substance in Tambis to be more specific than the
same notion in UMLS which is again defined to be
more specific than generalized substance in GALEN.
From these mappings, we can derive that the Tambis
notion of substance is more specific than generalized
substance and add a corresponding axiom to the merged
ontology.

8. Conclusions

In this paper, we have shown how the syntax and the
semantics of OWL can be extended to deal with some
problems that could not otherwise be dealt with. The result is Context OWL (C-OWL), an extended language
with an enriched semantics which allows us to contextualize ontologies, namely, to localize their contents
(and, therefore, to make them not visible to the out-
side) and to allow for explicit mappings (bridge rules)
which allow for limited and totally controlled forms of
global visibility.

This is only the first step and a lot of research remains to be done. The core issue at stake here is the
tension between how much we should share and globalize (via ontologies) and how much we should localize
with limited and totally controlled forms of globalization (via contexts).

In the last part of this paper, we present a first application of C-OWL for the coordination between three
complex medical ontologies such as GALEN, Tambis,
and UMLS. In this case, study it was evident that global
sharing the ontologies is inappropriate, as such ontolo-

gies are already well established and widely used and
sharing would have implied changing them. So, we use
C-OWL to state semantic mappings between them. Fur-
thermore, we show how, by means of logical reasoning
based on C-OWL semantics, additional semantic mappings can be derived on the basis of a set of initial
mappings.
