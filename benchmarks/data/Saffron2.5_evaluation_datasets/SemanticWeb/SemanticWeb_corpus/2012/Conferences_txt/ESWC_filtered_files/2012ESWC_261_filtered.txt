Representing Mereotopological Relations

in OWL Ontologies with OntoPartS

C. Maria Keet1, Francis C. Fern andez-Reyes2, and Annette Morales-Gonz alez3

1 School of Computer Science, University of KwaZulu-Natal, South Africa
2 Instituto Superior Polit ecnico Jos e Antonio Echeverr a (CUJAE), Cuba
3 Advanced Technologies Application Center, CENATAV, Havana City, Cuba
keet@ukzn.ac.za,ffernandez@ceis.cujae.edu.cu,amorales@cenatav.co.cu

Abstract. Representing and reasoning over mereotopological relations
(parthood and location) in an ontology is a well-known challenge, because
there are many relations to choose from and OWL has limited expressiveness in this regard. To address these issues, we structure mereotopological
relations based on the KGEMT mereotopological theory. A correctly chosen relation counterbalances some weaknesses in OWLs representation
and reasoning services. To achieve effortless selection of the appropriate
relation, we hide the complexities of the underlying theory through automation of modelling guidelines in the new tool OntoPartS. It uses,
mainly, the categories from DOLCE [12], which avoids lengthy question
sessions, and it includes examples and verbalizations. OntoPartS was
experimentally evaluated, which demonstrated that selecting and representing the desired relation was done efficiently and more accurately with
OntoPartS.

Introduction

Part-whole relations are essential for knowledge representation, in particular
in terminology and ontology development in subject domains such as biology,
medicine, GIS, and manufacturing. Usage of part-whole relations are exacerbated
when part-whole relations are merged with topological or mereotopological rela-
tions, such as tangential proper part where the part touches the boundary of the
whole it is part of; e.g., the FMA has 8 basic locative part-whole relations [14]
and GALEN has 26 part-whole and locative part-whole relations1. It is also useful for annotating and querying multimedia documents and cartographic maps;
e.g., annotating a photo of a beach where the area of the photo that depicts
the sand touching the area that depicts the seawater so that, together with the
knowledge that, among other locations, Varadero is a tangential proper part of
Cuba, the semantically enhanced system can infer possible locations where the
photo has been taken, or vv., propose that the photo may depict a beach scene.
Efforts have gone into figuring out which part-whole relations there are [24,11],
developing a logic language with which one can represent the semantics of the

1 http://www.opengalen.org/tutorials/crm/tutorial9.html

up to /tutorial16.html

E. Simperl et al. (Eds.): ESWC 2012, LNCS 7295, pp. 240254, 2012.
c Springer-Verlag Berlin Heidelberg 2012
?

?

?
relations [2,8], and how to use the two together [20,25,26]. The representation of mereotopology in Description Logics (DL) has not been investigated,
but related efforts in representing the Region Connection Calculus (RCC) in
DLs have [17,9,21,23,6]. Currently, the advances in mereotopology are not directly transferrable to a Semantic Web setting due to the differences in languages and theories and they miss software support to make it usable for the
ontology developer. Yet, ontologists require a way to effectively handle these
part-whole relations during ontology development without necessarily having to
become an expert in theories about part-whole relations, mereotopology, and
expressive ontology languages. Moreover, structured and guided usage can prevent undesirable deductions and increase the amount of desirable deductions
even without the need to add additional expressiveness to the language. For in-
stance, instance classification: let NTPLI be a non-tangential proper located in
relation and EnclosedCountry  Country  NTPLI.Country, and instances
NTPLI(Lesotho, South Africa),Country(Lesotho),Country(South Africa),
then it will correctly deduce EnclosedCountry(Lesotho). With merely part-
of, one would not have been able to obtain this result.

Thus, there are three problems: (i) the lack of oversight on plethora of partwhole relations, that include real parthood (mereology) and parts with their
locations (mereotopology), (ii) the challenge to figure out which one to use
when, and (iii) underspecified representation and reasoning consequences. To
solve these problems we propose the OntoPartS tool to guide the modeller.
To ensure a solid foundation, transparency, a wide coverage of the types of partwhole relations, and effectiveness during ontology development, we extend the
taxonomy of part-whole relations of [11] with the novel addition of mereotopological relations, driven by the KGEMT mereotoplogical theory [22], resulting
in a taxonomy of 23 part-whole relations. We describe the design rationale and
trade-offs with respect to what has to be simplified from KGEMT to realise as
much as possible in OWL so that OntoPartS can load OWL/OWL2-formalised
ontologies, and, if desired, modify the OWL file with the chosen relation. To enable quick selection of the appropriate relation, we use a simplified OWL-ized
DOLCE ontology for the domain and range restrictions imposed on the partwhole relations and therewith let the user take shortcuts, which reduces the
selection procedure to 0-4 options based on just 2-3 inputs. The usability of OntoPartS and effectiveness of the approach was evaluated and shown to improve
efficiency and accuracy in modelling.

In the remainder of the paper, we first describe the theoretical foundation of
the mereotopological relations and trade-offs for OWL (Section 2). We describe
the design, implementation, and evaluation of OntoPartS in Section 3, discuss
the proposed solution in Section 4, and conclude in Section 5.

2 Mereotopology and OWL

Part-whole relations and the differentiation between different types of part-whole
relations has its origins in cognitive science and conceptual data modelling [24,18]

C.M. Keet, F.C. Fern andez-Reyes, and A. Morales-Gonz alez

and has been investigated also for Description Logics (e.g., [1,2]). There is a first
important distinction between parthood versus a meronymic relation (part in
natural language only), and, second, there is an additional aspect on parthood
and location [11]. The second dividing characteristic is the domain and range of
the relations (which are taken from the DOLCE foundational ontology [12] in
[11]). Particularly relevant here are the containment and location axioms (Eqs. 1
and 2) [11], where ED = EnDurant (enduring entity, e.g., a wall), R = Region
(e.g., the space that the wall occupies, the Alpine region), and has 2D and
has 3D for surfaces and space are shorthand relations standing for DOLCEs
qualities and qualia; note that the domain and range is Region that has an
object occupying it, hence, this does not imply that those objects are related
also by structural parthood.

x, y(contained in(x, y)  part of (x, y)  R(x)  R(y)

z, w(has 3D(z, x)  has 3D(w, y)  ED(z)  ED(w)))

x, y(located in(x, y)  part of (x, y)  R(x)  R(y)

z, w(has 2D(z, x)  has 2D(w, y)  ED(z)  ED(w)))

(1)

(2)

Although logically strictly not necessary, there are strong arguments to distinguish between the surface and space notions [24,11,22,18], which is especially
relevant for geographic entities. For instance, a euro is contained in a wallet,
Paris is located in France, and in the TBox of a DL-formalised ontology, e.g.,
City  locatedIn.Country.

2.1 Extension with Mereotopological Relations

Representation and reasoning with spatiality is very important in many applications areas such as geographical information systems, medical systems, and
computer vision. Spatial relations proposed for such systems can be classified
into three categories: topological, direction, and distance. Topological relations
are considered to be the most important ones and several topological formalisms
have been proposed in the literature. The 9-Intersection Method (9IM) is based
on point-set topology, where the topological relations between two regions are
characterized by the 9 intersections of interiors, boundaries and exteriors of the
two regions [4]. The Region Connection Calculus (RCC) is a first order theory
based on one primitive relation: the reflexive and symmetric connection predicate [19]. Using this primitive relation, one can define various collections of
topological relations. The fundamental approach of RCCand difference with
point-set topologyis that it extends spatial entities to regions of space that are
taken as primary rather than the points as the fundament in point-set topology.
However, neither one considers the combination of the space region with the
object that occupies it: this interaction is addressed by mereotopology, which
focuses on spatial entities, not just regions. The challenge lies in how to realize the combination, given that no such ontology-informed categorisation for
mereotopological relations exists. Concerning primitive relations [3,22], one can
?

?

?
Table 1. Axiomatization of KGEMT (summarised from [22]). P: partof; PP: proper
part of; O: overlap, C: connection; E: enclosure; EQ: indiscernibility; IPP: interior
proper part; TPP: tangential proper part; SC: self-connected; c: closure; i: interior; e:
exterior; +: sum; : complement.

xx  y(C(y, z)  x(x  C(y, x)))

P (x, y)  P (y, z)  P (x, z)
P (y, x)  z(P (z, y)  O(z, x))

Core axioms and definitions
P (x, x)
(t1)
P (x, y)  P (y, x)  x = y
(t3)
w(w)  zw(O(w, z)  v((v)  O(w, v)))
(t6) C(x, y)  C(y, x)
C(x, x)
P (x, y)  E(x, y)
(t8) E(x, y) =df z(C(z, x)  C(z, y))
(t10) SC(x)  y, z(x = y + z  C(y, z))
E(x, y)  P (x, y)
z(SC(z)  O(z, x)  O(z, y)  w(P (w, z)  (O(w, x)  O(w, y))))  C(x, y)
z =
P (x, cx)
c(x + y) = cx + cy
ex =df i( x)
zy(C(z, y)  O(x, y))
Additional axioms, definitions, and theorems
P P (x, y) =df P (x, y)  P (y, x) (t20) O(x, y) =df z(P (z, x)  P (z, y))
EQ(x, y) =df P (x, y)  P (y, x)
IP P (x, y) =df P P (x, y)  z(C(z, x)  O(z, y))
P P (x, x)
P P (x, y)  P P (y, x)

(t21)
(t22) T P P (x, y) =df P P (x, y)  IP P (x, y) (t23)
(t24)
(t25) P P (x, y)  P P (y, z)  P P (x, z)
(t26)
(t27)

(t2)
(t4)
(t5)
(t7)
(t9)
(t11)
(t12)
(t13)
(t15)
(t17)
(t19)
?

?

?
(t14)
(t16)
(t18)

c(cx) = cx
cx =df (ex)

ix =df

 define parthood,P , in terms of connection,C, (i.e., P (x, y) =def z(C(z, x) 

C(z, y))) so that topology is principal and mereology a subtheory,

 consider both P and C as primitive,

 introduce a ternary relation CP (x, y, z), so that P (x, y) =def z CP (x, z, y)

and C(x, y) =def z CP (x, y, z), or

 introduce topology as a sub-domain of mereology by introducing a sorted
predicate to denote region (R) and define C in terms of overlapping regions

[5] (C(x, y) =def O(x, y)  R(x)  R(y)).

There are several problems with the first option, such as extensionality and
identity [22] and that, implicitly, parthood is constrained to relating regions,
because, by assumption, C is, even though normally an arbitrary part-whole
relation should not be constrained to relate regions only. The third option requires a language with ternary relations, which OWL languages do not have,
and it is not considered or used widely. The fourth option is, in spirit, close to
Eqs. (1-2). However, adding complete definitions of both overlap and the connection is impossible in OWL; therefore, the second option with two primitives is
the most appealing with the current Semantic Web languages and technologies.
This fits nicely with the expressive Kuratowski General Extensional Mereotopology (KGEMT) [22], which provides both an ontological and logical underpinning
of the mereotopology taxonomy. KGEMT consists of simpler mereological and
topological theories. Formally, the axioms in KGEMT are as shown in Table 1,
which is built up from T that is made up of (t6, t7), MT of (T + t8), M of (t1,

C.M. Keet, F.C. Fern andez-Reyes, and A. Morales-Gonz alez

Part-whole relation 

part-of 

proper-part-of 

spatial-part-of 
SpP 

proper-spatial-part-of 
PSpP 

mpart-of 
mP 

... 
involved-in 

... 

proper-involved-in 

located-in 

s-part-of 
StP 

proper-s-part-of 
PStP 

contained-in 

equal-contained-in 

tangential-proper- 
contained-in 

proper-contained-in 

equal-located-in 

nontangential-proper- 
contained-in 

tangential-proper- 
located-in 

proper-located-in 

nontangential-proper- 
located-in 

Subsumption in the 
original taxonomy 
Subsumption for 
proper part-of 
Subsumption 
dividing non-proper, 
equal, from proper 
part-of 

Fig. 1. Graphical depiction of the extension of the mereological branch of the basic
taxonomy of part-whole relations with proper parthood and mereotopological relations
(meronymic relations subsumed by mpart-of not shown)

t2, t3), GEM of (M + t4, t5), GEMT of (MT + GEM + t10, t12, t13), and
KGEMT of (GEMT + t14, t15, t16). In addition, (t14-t16) require (t17-t19)
and there are additional axioms and definitions (like t20-t27) that can be built
up from the core ones.

Using Eqs. (1-2) and (t1-t27), we now extend the part-whole taxonomy of
[11] with the mereotopological relations as defined in Eqs. (3-10), which is shown
graphically in Fig. 1. The tangential and nontangential proper parthood relations
are based on axioms 65 and 66 in [22], which are (t24) and (t23), respectively,
in Table 1, and the same DOLCE categories are used as in Eqs. (1-2); see Fig. 1
and Table 1 for abbreviations.
x, y (ECI(x, y)  CI(x, y)  P (y, x)
(3)
x, y (P CI(x, y)  P P O(x, y)  R(x)R(y)  z, w(has 3D(z, x)  has 3D(w, y) 
(4)

ED(z)  ED(w)))

x, y (N T P CI(x, y)  P CI(x, y)  z(C(z, x)O(z, y)))
x, y (T P CI(x, y)  P CI(x, y)  N T P CI(x, y))
x, y (ELI(x, y)  LI(x, y)  P (y, x)
(7)
x, y (P LI(x, y)  P P O(x, y)  R(x)  R(y)  z, w(has 2D(z, x)  has 2D(w, y) 
(8)

ED(z)  ED(w)))

(5)

(6)

x, y (N T P LI(x, y)  P LI(x, y)  z(C(z, x)O(z, y)))
x, y (T P LI(x, y)  P LI(x, y)  N T P LI(x, y))

(9)

(10)

Note that one also can use another foundational ontology, such as SUMO or
GFO, provided it at least contains categories equivalent to the ones from DOLCE
we use here. Concerning the interaction between this proposal for mereotopology and DOLCE: DOLCE includes the GEM mereological theory, of which
KGEMT is an extension, and does not contain mereotopology; hence, our taxonomic categorisation of the mereotopological relations and additional KGEMT
axioms do not lead to an inconsistency. Interaction with DOLCEsor any other
?

?

?
foundational ontologystemporal parthood is unclear, as is a temporal extension to KGEMT; either way, they are orthogonal issues and it will become of
practical interest only once there is a temporal OWL.

As with parthood and topology separately, the mereotopological relations are
independent of the subject domain and thus may be applied across ontologies in
domains such as medicine, manufacturing, and biology.

2.2 Limitations for Mereotopology in OWL

There are several aspects to consider with respect to theoretical ideal from an
ontological perspective, as described in the previous section, versus realistic im-
plementation in a Semantic Web setting, which are: (i) what to represent from
mereotopology, (ii) how to represent the ontological aspects in a DL language,
(iii) what does one lose with the OWL 2 languages, and (iv) how does this affect
reasoning. Due to space limitations, we discuss only a selection of the issues.

Representation Issues. Only a subset of the KGEMT axioms can be represented in OWL, which is summarised in Table 2. The differences for the OWL
species have to do with the characteristics of the object properties, and in particular transitivity, (ir)reflexivity and (a)symmetry (see also the OWL and OWL
2 specifications [13,16,15]), which are exactly the features that affect negatively
the basic reasoning scenarios. This has the consequence that some theorems in
KGEMT can only be asserted as axioms, due to its partial representation. How-
ever, even its limited version is still more appealing than only RCC8 for OWL
because of the notion of spatial entity and relation and the inferences with the
property characteristics that is important for several subject domains [11,22,18,5]
compared to region only. In addition, in some implementations, the RCC8 relations are modified into a set-based approach where regions are non-empty closed
sets [17] or where concepts are generated for each RCC8 constructor and the
named concepts instantiated with individuals [9,21]. While conflating sets, re-
gions, and part-whole relations might be appealing from a logic perspective as
a sufficient approximation, it is not the same neither in detail nor from an ontological or modelling viewpoint such that other trade-offs in the representation
are preferred (e.g., [22,6,23]), and in particular to keep the relations as such
compared to a concept-based encoding that obscures the semantics and thereby
complicates its usage [11,6,23]. Put differently, KGEMT is the best (or least
worst) from a modeller point of view.

Reasoning Issues. We illustrate some of the inferences we miss out on with an
extended African Wildlife Ontology, which includes the knowledge that South
Africa (SA) is connected with Botswana (B), Mapungubwe National Park (MNP)
(home to giraffes, elephants, etc.) is tangentially proper located in (TPLI) South
Africa and bordering Botswana, and in Bostwana, the park is called Northern Tuli Game Reserve (NTGR). So, to this end, there are axioms in our ontology in the TBox and the ABox, among others: NationalPark  LI.Country,
ContinentalCountry  Country,
ContinentalCountry  C.Continental-

C.M. Keet, F.C. Fern andez-Reyes, and A. Morales-Gonz alez

Table 2. Subsets of KGEMT that can be represented in the OWL species; t9, t20,
t21, t22, t23, t24 can be simplified and added as primitives to each one

OWL species
OWL 2 DL

OWL DL
OWL Lite
OWL 2 RL
OWL 2 EL
OWL 2 QL

Subsets of KGEMT axioms
(t1, t2, t6, t7, t8, t10, t26) or (t1, t2, t6, t7, t8, t10, t27) or
(t1, t2, t6, t7, t8, t10, t25)
t2, t7, t8, t10, t26
t2, t7, t8, t10, t26
t2, t7, t8, t10, t26
t1, t2, t6, t8, t10, t26
t1, t6, t7, t8, t10

ContinentalCountry(B),

ContinentalCountry(SA),

Country,
National-
Park(MNP), TPLI(MNP, SA), C(MNP, NTGR), TPLI(NTGR, B). Then a query Which
South African national park is connected with Northern Tuli Game Reserve?
has as answer MNP in a language where symmetry can be asserted, and is empty
in the absence of the symmetry property assertion (i.e., in OWL 2 EL). In addi-
tion, with TPLI being asymmetric, an erroneous addition of, say, TPLI(SA, MNP)
to the ontology yields an inconsistent ontology, whereas without the option to
represent asymmetry, the error (with respect to the subject domain semantics)
would go undetected.

Parthood and connection are reflexive, which cannot be represented in OWL
2 RL. This does not really cause any major problems, other than that in certain
cases its inclusion communicates to the modeller she has to be more precise.
For instance, with Leaf being a StP (structural part of) Twig and StP reflexive,
the automated reasoner will deduce that Leaf is a StP of Leaf, and with aforementioned axioms, that MNP is C (connected with) and LI (located in) MNP: the
former is a rather odd deduction, and, in fact, should be structural proper part
which is irreflexiveof Twig, and the latter two are uninteresting, and, in fact,
TPLI. Also, if a user queries Which park is connected with Northern Tuli Game
Reserve?, then one would want to retrieve all parks other than NTGR.

Which of the characteristics of the object properties of mereotopological relations is, or are, more important depends on the desired inference scenarios;
thus far, transitivity, symmetry, asymmetry, and irreflexivity appear to be the
more interesting ones, whichwithin a Semantic Web settingmeans giving
precedence to OWL 2 DL and OWL 2 RL.

3 Design and Implementation of OntoPartS

Given the theoretical assessment on representing part-whole and mereotopological relations and feasibility to simplify it for a Semantic Web setting, we can
now proceed toward the design and implementation of the OntoPartS tool. The
tool, additional files, and demo videos can be consulted in the online supplementary material at http://www.meteck.org/files/ontopartssup/supindex.html.
?

?

?
3.1 Requirements, Design, and Core Functionality

The main requirement of the software is to hide the logic involved in the formal
definition of the 23 part-whole relations, and translate it to a set of intuitive
steps and descriptions that will guide the user to make the selection and decision
effortlessly. The selection procedure for the 23 possible relations should be made
as short as possible and present only a small relevant subset of suggestions from
which the user can select the one that best fit the situation. A set of (top-level)
categories should be proposed to quickly discriminate among relations since the
user may be more familiar with the categories notions for domain and range than
with the relations definitions, therewith standardizing the criteria for selecting
the relations. Simple examples must be given for each relation and category.
Last, the user must have the possibility also to save the selected relation to the
ontology file from where the classes of interest were taken.

Given these basic functional requirements, some design decisions were made
for OntoPartS. From a generic perspective, a separate tool is an advantage,
because then it can be used without binding the ontologist to a single ontology
editor. Another consideration is usability testing. We chose to use a rapid way
of prototyping to develop the software to quickly determine whether it is really
helpful. Therefore, we implemented a stand-alone application that works with
OWL files. We also chose to use the DOLCE top-level ontology categories for
the standardization of the relationships decision criteria.

To structure the selection procedure in a consistent way in the implementa-
tion, we use activity diagrams to describe the steps that a user has to carry out
to interact with OntoPartS and to select the appropriate relation. An activity
diagram for the selection process of the mereotopological relations is available
in the online supplementary material. The selection of the appropriate relation
incorporates some previous ideas of a decision diagram and topological principles
as an extension of mereological theories [10,25,26], and questions and decision
points have been added to reflect the extended taxonomy. For the mereotopological relations considered, in principle, the decision for the appropriate one
can be made in two separate ways: either find mereotopological relations and
then asking to distinguish between located in and contained in, or vv. In the
OntoPartS interface, we have chosen to reduce the sequence of questions to a
single question (check box) that appears only when the domain and range are
regions, which asks whether the classes are geographical entities.

Concerning the most expressive OWL 2 DL species and KGEMT, then antisymmetry (t3), the second order axioms (t5, t13), and the closure operators
(t14-t19) are omitted, and definitions of relations are simplified to only domain
and range axioms and their position in the hierarchy (recollect Table 2). In addi-
tion, OWLs IrreflexiveObjectProperty and AsymmetricObjectProperty can be
used only with simple object properties, which runs into problems with a taxonomy of object properties and transitivity (that are deemed more important),
therefore also (t25, t27) will not appear in the OWL file. The combination of
the slimmed KGEMT and extended taxonomy of part-whole object properties
together with a DOLCE ultra-ultra-light is included in the online supplementary

C.M. Keet, F.C. Fern andez-Reyes, and A. Morales-Gonz alez

material as MereoTopoD.owl. This OWL file contains the relations with humanreadable names, as included in the taxonomy of [11] and the mereotopological
extension depicted in Fig. 1, as it is generally assumed to be better workable to
write out abbreviations in the domain ontology as it increases readability and
understandability of the ontology from a human expert point of view.

Observe that at the class-level, we have the so-called all-some construction
for property axioms, and if the modeller wants to modify it with a min-, max-, or
exact cardinality (e.g., each spinal column is a proper part of exactly one human),
then it goes beyond OWL 2 DL because the properPartOf object property is not
simple. Further, transitivity is a feature of OWL-DL, OWL Lite, OWL 2 DL, DL,
EL and RL, but not QL. Because one cannot know upfront the setting of the on-
tology, we keep the hierarchy of relations but do not add the relational properties
when writing into the .owl file, but the user can add them afterward.

3.2 Description of the Selection Procedure
OntoPartS guides the user in the process of making the decision in a very
intuitive way. To select the correct part-whole relation between two classes, one
first has to load the ontology into the tool and select the class that represent the
part and the class that represent the whole, upon which the selection procedure
commences. To not overload the user at once with a choice of 23 possible relations
or having to answer 22 questions first, OntoPartS narrows down the set of
available relations when the user specifies the category of the domain and of
the range involved in the relation, which are categories from DOLCE. If the
user selects regions, then she enters the branch of mereotopological relations
where the interface contains one decision point to distinguish between the 2D
and 3D case. Upon finishing the above steps, the user clicks the button to let the
tool suggest appropriate relation(s). All possible relations are computed using
the DOLCE categories and the optional check box for geographic entities. Each
proposed relation is verbalized in a pseudo-natural language sentence with the
selected part-class and whole-class and an example as an additional guide to
make the relation more understandable. Once a user has analysed each proposed
relation, she can select one and proceed to save it in the OWL file by clicking
on the save button. The selection procedure is illustrated in Example 1.

Example 1. Suppose a modeller or domain expert is developing a tourism ontology and has to figure out the relation between the classes Campground and
RuralArea. She loads the OWL file in OntoPartS, and proceeds to select two
entities to be related, as shown in Fig. 2. Then, she selects the categories for
each entity from the ones provided by the software, depicted in Fig. 3. Examples
for each DOLCE category are shown by hovering the pointer over the terms in
the taxonomy; e.g., hovering over Process provides Ex: Running, Writing. If
the selected categories are regions (or any of its subtypes), then the software
provides the option to specify whether the regions correspond to geographical
entities. After all the required information is selected, she clicks on the button
Suggest relationships. The amount of relations suggested depends on the chosen categories; in the example there are still four options (Fig. 4), but if we
?

?

?
Fig. 2. Selecting the part and whole classes in OntoPartS from the loaded OWL file

Fig. 3. Selecting the categories for each entity

would have had two classes that are both, say, processes, then there is only
one option (involved in, as OntoPartS includes the taxonomy of [11]). The
software provides the suggestions, a verbalization of the possible relationship(s),
e.g., Campground coincides exactly with RuralArea, and typical examples, as can
be seen in Fig. 4. Once she selects the desired relation from the ones proposed
by the software, she can choose to add this relationship to the OWL file by simply clicking the button labelled Save relationship to file (Fig. 4 bottom) and
continue either with other classes and selection of a part-whole relation or with
developing the ontology in the ontology development environment of choice. 

3.3 Preliminary Experimental Assessment of OntoPartS

The main objectives of the experiments are to assess usability of the tool and
to validate the hypothesis that the use of automated guidelines assists with representation of part-whole relations between classes during the ontology design

C.M. Keet, F.C. Fern andez-Reyes, and A. Morales-Gonz alez

Fig. 4. Relationships suggested by OntoPartS

phase such that it can be done more efficiently and with less errors. To this end,
a qualitative and two preliminary quantitate evaluations have been carried out.

Materials & Methods. 17 third year students in Informatics Engineering at
the Instituto Superior Polit ecnico Jos e Antonio Echeverr a participated in the
first test, who are well-versed in logics and knowledge representation with frames,
nets and rules systems, but not with ontologies. The methodology for this experiment was as follows. The students receive an overview of foundational ontologies
and part-whole relations (30 minutes). Then, from the provided computer ontology (designed by us) and OntoPartS, they must select the most appropriate
DOLCE category for each subject domain class and the relation that holds between them. The evaluation is performed by assessing the OWL files, relations
detected, selected DOLCE categories, the errors made, and why.

A second experiment was carried out with 6 honours students in Computer
Science at the University of KwaZulu-Natal, with the main difference the groups
longer introduction into foundational ontologies (2h) and part-whole relations
(2h), the division into two groups, one using OntoPartS, the other not, and
the limitation of 40 minutes. The third group for qualitative evaluation consisted
of 4 colleagues from the Free University of Bozen-Bolzano, two of whom experts
in RCC8, part-whole relations, and logic.
?

?

?
The materials used for the experiments were the DOLCE taxonomy, the
taxonomy with the 23 part-whole relations, and the beta version of the OntoPartS tool. The domain ontology about computers was developed using
Protege 4.0, which was divided into two versions, one with and one without
part-whole relations.

Results. The students in the first experiment asserted 380 part-whole relations
among the classes in the domain ontology (37 mereotopological), of which 210
were correct, i.e., on average, about 12.4 correct assertions/participant (variation
between 5 and 37); for the second experiment, the numbers are, respectively, 82
(22 mereotopological), 58, and an average of 9.7 (with variation between 0 and
27). Given the controlled duration of the second experiment, this amounts to,
on average, a mere 4 minutes to choose the correct relation with OntoPartS.
Evaluating the mistakes made by the participants revealed that an incorrect
selection of part-whole relation was due to, mainly, an incorrect association of a
domain ontology class to a DOLCE category. This was due to the late discovery
of the tool-tip feature in OntoPartS by some participants and the lack of an
undo button (even though a user could have switched back to the ontology
development environment and deleted the assertion manually). Several errors
were due to the absence of inverses in the beta version of the OntoPartS tool,
leading some participants to include Metal constitutes some Hardware. 83%
of the errors in the second experiment were made by those who did not use
OntoPartS, which looks promising for OntoPartS.

The responses in the qualitative evaluation was unanimous disbelief that selection could be made this easy and quickly, and the desire was expressed to
consult the formal and ontological foundations. As such, OntoPartS stimulated interest for education on the topic along the line of the tool makes it easy,
then so the theory surely will be understandable.

Overall, it cannot be concluded that modelling of part-whole relations with
OntoPartS results in statistically significant less errorsfor this we need access
to more and real ontology developers so as to have a sufficiently large group
whose results can be analysed statistically. Given the speed with which correct
relations were selected, the automated guidelines do assist with representation
of part-whole relations such that it can be done more efficiently and quickly.
The experimentation also aided in improving OntoPartSs functionality and
usability, so that it is now a fully working prototype.

4 Discussion

Despite the representation and reasoning limitations with the DL-based OWL
2 species, there are several modelling challenges that can be addressed with the
mereotopological and part-whole relation taxonomy together with OntoPartS
and they solve the three problems identified in the introduction.

Mitigating Representation Limitations with the Taxonomy. OntoPartS
sensitizes the modeller to part-whole relations, which thereby already prevents

C.M. Keet, F.C. Fern andez-Reyes, and A. Morales-Gonz alez

the is-a vs. part-of confusioni.e., using the is-a relation where a part-of relation
should have been usedcommon among novice ontology developers, and no such
errors were encountered during our experiments either (recollect Section 3.3). By
making part-whole relations easily accessible without the need for immediate indepth investigation into the topic, it is expected that this type of error may also
be prevented without any prior substantial training on the topic.

The fine-grained distinctions between the parthood relation enables, among
others, proper instance classification like mentioned in the introduction for
EnclosedCountry, thanks to being able to select the right relation and therewith capturing the intended semantics of EnclosedCountry. If, on the other
hand, the modeller would have known only about proper part-of but not proper
located in, then she could only have asserted that Lesotho is a proper part of
South Africa, which holds (at best) only spatially but not administratively. Not
being able to make such distinctions easily leads to inconsistencies in the ontology or conflicts in ontology import, alignment, or integration. OntoClean [7]
helps with distinguishing between geographic and social entity, and, in analogy,
OntoPartS aids relating the entities with the appropriate relation.

Solving the Problems. In the introduction, we identified three problems that
were in need of a solution to improve modelling of part-whole relations. The
first problem regarding the plethora of part-whole relations has been solved
by providing logic-based definitions of the relations and structuring them in a
taxonomy. In so doing, we extended the taxonomy of [11] that already makes a
clear distinction between parthood (mereology) versus other so-called part-whole
relations (meronymy), so that the parts with their locations (mereotopology)
could be integrated in the parthood branch of that taxonomy. Their position in
the taxonomy follows directly from the definitions (Eqs. 3-10), which, in turn,
are based on the KGEMT mereotopology and the common modellers preference
to distinguish between 3D parthood (containment) and 2D parthood (location).
The challenge to figure out which part-whole relations to use when has been
addressed by OntoPartS. Determining which part-whole relation fits best for
the given classes requires only the input from the modeller about the categories
and, depending on the category, if they are geographic entities. Upon this input,
OntoPartS suggests 1-4 possible relations, which is considerably less than the
full 23 together.

Implementing part-whole relations with its underlying KGEMT mereotopology in OWL requires making concessions, which concern principally the choice
to represent relations as relations, and the impossibility to include definitions
of relations and some of the characteristics of the part-whole object properties.
The latter is practically important, because the OWL species differ in language
features in this regard, and its consequences for reasoning were analysed. Tran-
sitivity, symmetry, asymmetry, and irreflexivity are the more relevant ones with
respect to the deductions one gains or loses. This means giving precedence to
OWL 2 DL and OWL 2 RL over the other OWL species when modelling partwhole relations.
?

?

?
5 Conclusions

We have introduced mereotopology from a modellers perspective and integrated
it into the taxonomy of part-whole relations that is founded on the KGEMT
mereotopological theory and basic categories of the DOLCE foundational ontology so as to disambiguate the relations. To make this practically usable, we
transformed the mappable KGEMT axioms into OWL, added a DOLCE ultra-
ultra-light and extended the taxonomy of part-whole OWL object properties,
designed an additional activity diagram for the newly added mereotopological
relations, added examples, and implemented this in the OntoPartS applica-
tion. OntoPartS ensures that the complexities of the underlying theories and
languages are hidden from the modeller by means of the automated modelling
guidelines and adds the new axioms to the OWL file with a simple one-click
button. This ontology-inspired part-whole relation selection tool, OntoPartS,
can be used with different OWL languages and different ontology development
tools. OntoPartS was evaluated with modellers, which was found to simplify
the task, was performed more accurately, and generated desire to learn more
about the theoretical details.

OntoPartS and the OWLized hierarchy of relations are freely available in the
(http://www.meteck.org/files/ontopartssup/supindex.html).
online material
Current and future work pertains to adding features, such as better interaction with property chaining and language choices in conjunction with the object
property characteristics, and handling ABox assertions.
