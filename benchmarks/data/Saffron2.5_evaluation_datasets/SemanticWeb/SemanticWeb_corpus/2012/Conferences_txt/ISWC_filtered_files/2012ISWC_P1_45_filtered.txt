A Formal Semantics for Weighted Ontology Mappings

Manuel Atencia1,2, Alexander Borgida3, J erome Euzenat1,2,

Chiara Ghidini4, and Luciano Serafini4

{manuel.atencia,jerome.euzenat}@inria.fr

1 INRIA, France

2 University of Grenoble, France
3 Rutgers University, United States
borgida@cs.rutgers.edu
4 Fondazione Bruno Kessler, Italy
{ghidini,serafini}@fbk.eu

Abstract. Ontology mappings are often assigned a weight or confidence factor
by matchers. Nonetheless, few semantic accounts have been given so far for such
weights. This paper presents a formal semantics for weighted mappings between
different ontologies. It is based on a classificational interpretation of mappings: if
O1 and O2 are two ontologies used to classify a common set X, then mappings
between O1 and O2 are interpreted to encode how elements of X classified in
the concepts of O1 are re-classified in the concepts of O2, and weights are interpreted to measure how precise and complete re-classifications are. This semantics
is justifiable by extensional practice of ontology matching. It is a conservative extension of a semantics of crisp mappings. The paper also includes properties that
relate mapping entailment with description logic constructors.

1 Introduction

Ontology mappings are used to express semantic relations between components of two
heterogeneous ontologies. They are key artifacts for the integration of knowledge encoded in distinct schemas. On the one hand, theoretical studies on ontology mappings
give a formal background for crisp mappings, i.e. mappings that express set theoretical
relations  subsumption ( and ), equivalence () and disjointness ()  between
the extensional meaning of the concepts and relations of two ontologies [3,16]. On the
other hand, the majority of the state-of-the-art tools that automatically match ontologies
generate weighted mappings, i.e., crisp mappings associated with a confidence value,
typically a real number between 0 and 1 [5]. There is, however, no shared view on how
these weights should be interpreted, neither in ontology matching nor in related fields
such as database schema matching [6].

In this paper we fill this gap by providing a novel formal semantics for interpreting
the confidence value associated with a mapping. This semantics is not based on standard probabilistic notions such as ones used to extend Description Logics (DL) and
rule-based descriptions of uncertainty, but instead is based on a classificational interpretation of mappings which reflects a family of approaches used in ontology matching
techniques (see Chapter 4.4. in [5], and [15] as a recent example): if two ontologies

P. Cudr e-Mauroux et al. (Eds.): ISWC 2012, Part I, LNCS 7649, pp. 1733, 2012.
c Springer-Verlag Berlin Heidelberg 2012

M. Atencia et al.

O1 and O2 are used to classify a common set X of items, mappings between O1 and
O2 encode how elements of X classified in the concepts of O1 are re-classified in the
concepts of O2, and weights measure how precise and complete the re-classifications
are. We fall back on precision, recall, and F-measures, as they are used in the context
of classification tasks, for the formalisation of weighted subsumptions and equivalence,
respectively.

The proposed semantics makes it possible to discover inconsistencies and detect
implications over sets of weighted mappings. In other words, to understand when a
mapping can be derived from others, and when sets of mappings are inconsistent. We
introduce a notion of logical consequence between weighted mappings, and investigate
entailment between weighted mappings w.r.t. description logic constructors. Moreover,
we prove that the semantics for weighted mappings introduced in the paper is a conservative extension of the semantics of crisp mappings for a specific class of Distributed
Description Logics (DDLs) [3].

The paper is organised as follows. Section 2 introduces a formal semantics for
weighted mappings, including the notion of (weighted) mapping entailment. In Sections 35 we show the adequacy of the proposed semantics, including the proof that it is
a conservative extension of the semantics of DDL mappings; properties of the mapping
entailment w.r.t. description logic constructors; and variants of the proposed semantics.
In Section 6, we summarise related work, and we finish with concluding remarks.

2 Classificational Semantics for Weighted Mappings

The semantics presented in this paper is designed for weighted mappings between pairs
of ontologies expressed in (a fragment of) first order language with tarskian semantics.
However, for the sake of presentation we focus on a particular fragment of FOL, namely
the description logic ALCO: the basic DL logic ALC extended with nominals. We
choose ALCO to present this semantics, since it is the smallest logic that contains full
propositional connectives, relations and constants. ALCO is a DL logic defined on an
alphabet  = CN  RN  ON , where CN is a set of concept symbols, RN is a set
of role symbols, and ON is a set of individual symbols. Complex concept expressions
(simply called concepts) in ALCO are defined by the following grammar:

C, D := ||A|C|C  D|R.C|{o}

I  

,I



where A  CN , R  RN and o  ON . As usual, R.C stands for R.C, and

C  D for (C  D). A general inclusion axiom (GCI) is an expression of the form
C  D where C and D are concepts.
An interpretation I is a pair I =

is a non-empty set, called the
where 
I  
for A  CN , R
I  
domain of I and I
?

?

?
for o  ON . The interpretation of complex concepts of
for R  RN , and o
ALCO is defined according to the following rules:
= C
= {a
= {x  

is a function such that A
I  

(C  D)

{a}I
(R.C)

I
I
(C)

I|y, (x, y)  R

= 
= 
= 

I  D
I}

& y  C

I}

I \ C
?

?

?
An interpretation I satisfies a GCI C  D, in symbols I |= C  D, if C
I  D

.
An ontology O is a set of GCIs. An interpretation satisfies O, in symbols I |= O, if
I |=  for all   O. A CGI is entailed by an ontology O, in symbols O |= C  D if
I |= C  D, for all interpretations I that satisfy O.
ALCO has the finite model property, meaning that if an entailment holds in all
finite interpretations (ones with finite domain), then it is a theorem, in the sense that
it holds for all interpretations. Not all DLs have the finite model property, e.g., adding
cardinality constraints and inverses to ALCO prevents it.

2.1 Weighted Mappings

We start from the definition of mapping presented in [3] that we recall below.
Definition 1. Let {Oi}iI be a family of ontologies. A mapping from Oi to Oj is an
expression of the form

i : C r j : D

where C and D are concepts of Oi and Oj, respectively, and r  {,,,}.
The notion of weighted mapping generalises it by associating mappings to a closed
subinterval of [0, 1].
Definition 2. Let {Oi}iI be a family of ontologies. A weighted mapping from Oi to
Oj is an expression of the form

i : C r[a,b] j : D

where C and D are concepts of Oi and Oj, respectively, r  {,,,} and a, b are
real numbers in the unit interval [0, 1].
Remark 1. Notice that if a > b then [a, b] =  which is a closed subinterval of [0, 1].

2.2 Formal Semantics for Weighted Mappings

Our semantics for weighted mappings is based on the following intuition. Assume that
the concepts of two ontologies O1 and O2 are used to classify a common set of elements
X. Mappings from O1 to O2 encode how the elements of X classified in the concepts
of O1 are re-classified in the concepts of O2, and the weights encode how precise and
complete these re-classifications are. Let us pin down this intuition and see how it can
be used to define a formal semantics for a weighted mapping 1 : C r[a,b] 2 : D.
Let X = {x1, . . . , xn} be a non-empty finite set of fresh constants not occurring in
L(O1) or L(O2).1 The set X is meant to represent the set of shared items classified
by concepts of the ontologies O1 and O2. A classification of X in O1 is specified by
virtue of an interpretation I1 of O1 extended with the elements of X as follows. Let C
1 Be aware that X is not a concept name, and that {x1, . . . , xn} is not a concept. Instead X is
a meta-notation used in this paper to refer to an arbitrary finite set.

M. Atencia et al.

be a concept of O1 and xk a fresh constant of X; we say that xk is classified under C
according to I1 if x
I1
k

I1. The set

 C

X = {x  X | x
I1

I1  C

I1}

I1 and D

addition, C

I1 may be infinite.

I1
X is always a finite set while C

then represents the subset of items of X classified under C according to I1. Note that
I1 is a subset of the domain of the interpretation I1. In
I1
X is a subset of X whereas C
Let I1 and I2 be interpretations of O1 and O2, respectively, and let C and D be the
concepts of O1 and O2, occurring in 1 : C r[a,b] 2 : D. Since we do not want to make any
commitment on the interpretation domains of the two ontologies, it may be the case that
I2 cannot be compared as they might be defined over independent
the sets C
I2
interpretation domains. Yet the sets C
X can be compared as they are both
subsets of X which represent the sets of items of X classified under C according to I1
and under D according to I2, respectively. We can therefore examine the different types
of mappings 1 : C r[a,b] 2 : D obtained by looking at the different r  {,,,}.
Intuitively, the mapping 1 : C  2 : D is used to express that any item in X which
is classified under C according to I1 is (re-)classified under D according to I2. The
weighted mapping 1 : C [a,b] 2 : D is thus used to express the fact that the proportion
of items of X classified under C according to I1 which are (re-)classified under D
according to I2 lies in the interval [a, b]. Assuming that |C
| = , we can rewrite this
intuition in the formula

I1
X and D

I1

which can be seen as the recall of D
recall of B w.r.t. A is defined as

R(A, B) =

|A  B|
|A|

I1
X , D

X )  [a, b].
I2

unless |A| = 0, in which case R(A, B) = 1. Thus, the condition in (1) can be rephrased
as R(C
Example 1. Let X = {x1, . . . , x10}, and C
grams:

I2
X as in the two following dia-

I1
X and D

I1

x10

x1

x3

x2

x4

x5

I2

x6

x7

x8

x9

x10

x1

x3

x5

x6

I1

x2

x4

I2

x7

x8

x9

It is immediate to see that on the left hand side diagram, R(C
on the right hand side diagram, R(C

I2
X ) = 2

I1
X , D

2 = 1.

I1
X , D

I2
X ) = 2

5 = 0.4 while

 [a, b]

|C

|

I2

 D
I1

|C
|
I1

I2
X w.r.t. C

(1)

I1
X . Indeed, given two sets A and B, the
?

?

?
The weighted mapping 1 : C [a,b] 2 : D, in turn, is used to express the fact that the
fraction of items of X classified by D according to I2 which are (re-)classified under
C according to I1 lies in the interval [a, b]. Under the assumption that |D
| = , we
can rewrite this as:

I2

|C

 D
I1

|
|D
I2

I2
which can be seen as the precision of D
X w.r.t. C
fact given by

I2

|

P (A, B) =

(2)

 [a, b]
I1
X . The precision of B w.r.t. A is in
|A  B|
|B|

I1
X , D

X )  [a, b].
I2

unless |B| = 0, in which case P (A, B) = 1. Thus, the condition in (2) can be rephrased
as P (C
Example 2. Let X = {x1, . . . , x10}, and C
I2
X ) = 2
to see that in both cases P (C
By keeping the parallelism with classification systems, the natural way to interpret the
weighted mapping 1 : C [a,b] 2 : D is by means of the F-measure, which is the harmonic mean of precision and recall. The F-measure of A and B is defined as

I2
X as in Example 1. It is immediate

I1
X and D
4 = 0.5.

I1
X , D

F (A, B) = 2  P (A, B)  R(A, B)

P (A, B) + R(A, B)

F (A, B) = 2 

|A  B|
|A| + |B|

unless P (A, B) and R(A, B) are equal to 0, then F (A, B) = 0. It can be expressed as

unless |A| = |B| = 0, in which case F (A, B) = 1. In this way, the weighted mapping
1 : C [a,b] 2 : D encodes that F (C

X )  [a, b].
I2

I1
X , D

We conclude the above explanation with the definition of the degree of satisfiability

of a mapping. Then we introduce mapping satisfiability and mapping entailment.
Definition 3 (Degree of satisfiability of a mapping). Let Oi and Oj be two ontologies
and let X be a non-empty finite set of fresh individual constants. Let Ii and Ij be
two interpretations of Oi and Oj, respectively, extended with the set X. The degree
of satisfiability of the mapping i : C r j : D with respect to the pair (Ii,Ij) and X is
denoted by dsX (Ii,Ij, C, r, D) and defined as

Ij
dsX (Ii,Ij, C,, D) = R(C
Ii
X , D
X )
Ij
dsX (Ii,Ij, C,, D) = P (C
Ii
X , D
X )
Ij
dsX (Ii,Ij, C,, D) = F (C
Ii
X , D
X )
dsX (Ii,Ij, C,, D) = 1  F (C
Ii
X , D

Ij
X )

The pair (Ii,Ij) satisfies the weighted mapping i : C r[a,b] j : D modulo X, denoted by
(Ii,Ij) |=X i : C r[a,b] j : D, if and only if dsX (Ii,Ij, C, r, D)  [a, b]. If M is a set of
weighted mappings from Oi to Oj, the pair (Ii,Ij) satisfies M modulo X, in symbols,
(Ii,Ij) |=X M , if (Ii,Ij) |=X m for every m  M .

M. Atencia et al.

Definition 4 (Mapping satisfiability). Let Oi and Oj be two ontologies and let X be a
non-empty finite set of fresh individual constants. Let M be a set of weighted mappings
from Oi to Oj. The set M is satisfiable modulo X if there exist interpretations Ii and
Ij of Oi and Oj, respectively, such that (Ii,Ij) |=X M ij. We say that the set M is
satisfiable if there exists an X =  such that M is satisfiable modulo X.
Definition 5 (Mapping entailment). Let Oi and Oj be two ontologies and let X be
a non-empty finite set of fresh individual constants. Also, let M be a set of weighted
mappings from Oi to Oj. The set M entails i : C r[a,b] j : D modulo X, denoted M |=X
i : C r[a,b] j : D, if for every interpretations Ii and Ij of Oi and Oj, respectively, such
that (Ii,Ij) satisfies M modulo X, we have that (Ii,Ij) |=X i : C r[a,b] j : D. The set
M entails i : C r[a,b] j : D, in symbols, M |= i : C r[a,b] j : D, if we have M |=X i :
C r[a,b] j : D for every X = .
Remark 2 (Inconsistent mappings). In the case of a > b, the mapping i : C r[a,b] j : D
has no satisfying interpretations. That is, mappings defined over empty probability
ranges are inconsistent mappings and we denote them by FALSE. This allows us to
express unsatisfiability of a set of mappings in terms of mapping entailment: if M is a
set of mappings between Oi to Oj, then M |= F ALSE is equivalent to stating that M
is not satisfiable. Moreover, notice that F ALSE |= i : C r[a,b] j : D, i.e. every mapping
is entailed by the inconsistent mapping.

3 Adequacy and Expressivity of the Semantics

In this section we prove the adequacy of the formal semantics for weighted mappings
proposed in Section 2 by showing that (i) it is a conservative extension of a standard
semantics for crisp mappings; (ii) it can be used to provide a formal interpretation of
the results returned by automatic ontology matching algorithms; and (iii) it is general
enough to provide a uniform formal interpretation of weighted mappings between both
concepts and individuals.

3.1 Backward Compatibility with the Semantics of Crisp Mappings

In order to prove that the classificational semantics presented in this paper provides
a suitable extension of the one for crisp mappings we show that it is a conservative
extension of the DDL-based semantics for crisp mappings presented in [3] when the
intervals [a, b] are either [0, 0] or [1, 1]. First of all, notice that when a and b are either
0 or 1 every mapping can be expressed in terms of [1,1]. Indeed the following logical
consequences hold:
 i : C [1,1] j : D is equivalent to j : D [1,1] i : C
 i : C [1,1] j : D is equivalent to i : C [1,1] j : D and j : D [1,1] i : C
 i : C [1,1] j : D is equivalent to i : C [1,1] j :D
 i : C [0,0] j : D is equivalent to i : C [1,1] j :D
 i : C [0,0] j : D is equivalent to i : C [1,1] j :D
 i : C [0,0] j : D is equivalent to i : C [1,1] j :D
?

?

?
 i : C [0,0] j : D is equivalent to i : C [1,1] j : D and j : D [1,1] i : C
 i : C r[0,1] j : D is equivalent to i : [1,1] j :
 i : C r[1,0] j : D is equivalent to i : [1,1] j :
The above guarantees that any weighted mapping from Oi to Oj with weight in
{[0, 0], [0, 1], [1, 0], [1, 1]} can be rewritten as a [1,1]-mapping between Oi and Oj (i.e.
from Oi to Oj or from Oj to Oi). We say that a set of weighted mappings between Oi
and Oj is in [1,1]-normal form if they are of the form x : C [1,1] y : D.
Lemma 1. If M is a set of mappings between two ontologies Oi and Oj with weights
in {[0, 0], [0, 1], [1, 0], [1, 1]}, then M can be rewritten in an equivalent set of mappings
M[1,1] in [1,1]-normal form.
Crisp mappings are defined in DDL via bridge rules, whose syntax and semantics are
as follows: let Ii and Ij be interpretations of the ontologies Oi and Oj, resp. Let ij 
Ii
Ij be a domain correspondence relation. In DDL we define four kinds of bridge

rules, but, due to the rewriting described above, the only one that is interesting here is
what the so-called into bridge rule:
(Ii,Ij, ij ) |= i : C

 j : D iff ij(C

Ii )  D

Ij

Lemma 2. Let Oi and Oj be two ontologies.
(1) Let Ii and Ij be two interpretations of Oi and Oj, resp., extended with a non-empty
finite X. Then there exists a domain relation ij  

Ij such that

Ii  

(Ii,Ij) |=X i : C [1,1] j : D iff

(Ii,Ij , ij) |= i : C

 j : D

(2) Let Ii and Ij be interpretations of Oi and Oj with finite domains 
let ij  
set X of fresh individuals and interpretations I
X such that

Ij , and
Ij be a DDL domain relation. Then there exists a non-empty finite
j extending Ii and Ij, resp., over

i and I

Ii and 

Ii  

R(C

Ii
X , D

Ii )  D

(Ii,Ij, ij) |= i : C

Ij
X ) = 1 iff ij(C

 j : D iff
(I
i,I
j) |=X i : C [1,1] j : D
Proof (Outline). For (1) we define ij = {x
Ij | x  X} and then show that
Ii, x
Ij . In order to prove (2) we first choose a set of
fresh constants X = {x(c,d) | (c, d)  ij} (i.e one constant for each pair of the domain
relation), and then extend Ii and Ij to I
j over X by defining I
i and I
i(x(c,d)) = c and
I
I
Ij iff R(C
j(x(c,d)) = d. Then, ij(C
X , D
Theorem 1. Consider ontologies Oi and Oj in ontology languages that have the finitemodel property (recall that ALCO has this property). Let M be a set of mappings with
weights in {[0, 0], [0, 1], [1, 0], [1, 1]} and M[1,1] its [1,1]-normal form. Let MDDL =
 y : D | x : C [1,1] y : D  M[1,1]
{x : C
} be the set of corresponding DDL bridge
rules. Then, for arbitrary concepts C and D

I
X ) = 1.

Ii )  D

i

j

M |= i : C [1,1] j : D iff MDDL |=inv i : C

 j : D

where |=inv denotes DDL logical consequence restricted to models where ij = 

1
ji .

M. Atencia et al.

|= i : C [1,1] j : D. Then there exists a set
Proof (outline). Let us assume that M[1,1]
X =  and interpretations Ii and Ij of Oi and Oj, resp., extended with X such that
(Ii,Ij) |=X M[1,1] but (Ii,Ij) |=X i : C [1,1] j : D. By Lemma 2, there is a domain
relation ij for which (Ii,Ij,{ij, ji}) |= MDDL and (Ii,Ij, ij ) |= i : C r j : D.
 j : D.
Therefore, MDDL |= i : C
 j : D. Thus, there is a DDL interpretation
Vice versa, assume MDDL |= i : C
(Ii,Ij,{ij, ji}) with ij = 
such that (Ii,Ij,{ij, ij}) |= MDDL whereas
1
ji
 j : D. One can extend the finite domain property of most DLs
(Ii,Ij, ij) |= i : C
supporting qualified existential restrictions to those of DDLs using them via the global
DL construction given in [3]. Therefore, we can suppose w.l.o.g that the domains of Ii
and Ij are finite and, thus, ij and ij are also finite. By lemma 2, we have that there is
an X such that (Ii,Ij) |=X M[1,1] but (Ii,Ij ) |=X i : C [1,1] j : D. Notice that the
fact that ij = 

1
ji guarantees that the Xs associated to ij and ji are the same.

3.2 Interpreting the Results of Ontology Matchers

The semantics presented in Section 2 expresses the weight of a mapping between two
elements by means of an interval [a, b], while ontology matching algorithms usually
return a single confidence value c. Thus, we need to ask ourselves how we can represent
this value c by means of the interval [a, b]. In answering this question we can opt for
several alternatives: we can decide to represent c by means of the (pointwise) interval
[c, c], or the interval [0, c], or the interval [c, 1], or the interval [c  	, c + 	] centered
in c. This flexibility of representation allows us to capture the different assumptions
which are used by the different algorithms. Let us illustrate this by means of some
examples. If we take a low confidence value c, some algorithms interpret it as an I
dont know answer; others, instead, use it to represent the fact that the two concepts
are very different. These two usages of c can be captured in our formalism by two
different encodings: in the first case c is formalized by the interval [c, 1]; in the second
c corresponds to the interval [0, c]. A possible different representation is given when the
result of an ontology matcher expresses an estimation of similarity with some degree
of approximation. In this case the returned value c can be represented by means of the
centered interval [max(0, c  	), min(c + 	, 1)], where 	 is a value between 0 and 0.5
that depends on the level of accuracy of the matching algorithm: the more accurate
the matcher is, the smaller the 	 will be. As we can see from these few examples, the
representation of c by means of the pointwise interval [c, c] is only one among a set of
different choices, and a very challenging one, since it says that the ontology matching
algorithm returns the exact level of matching between two elements with a perfect level
of accuracy (i.e. 	 = 0).

3.3 Uniform Semantics for Mapping between Concepts and Individuals

The semantics presented in Section 2 gives a uniform framework to interpret mappings

that involve pairs of concepts, and pairs of individuals. If C
X is the set of elements of

X that could be reclassified in C, a
X is the set of elements of X that could be the same
?

?

?
which is an element of the domain I, a

as a. Contrary to a
X is a subset of X. For
this reason, we use the same notation for individual as for classes: a
X and we
use the notation 1 :{a} [0.8,1] 2 :{b} to represent the fact a is almost the same as b.
According to the formal semantics we have that

X = {a}I

(I1,I2) |=X 1 :{a} [0.8,1] 2 :{b} iff 0.8  2  |{a}I1
|{a}I1

 {b}I2
|
| + |{b}I2

|  1

Therefore, the mapping {a} [0.8,1] {b} states that the harmonic mean of the fraction
of items in X equivalent to a that are also equivalent to b, and the fraction of items in
X equivalent to b which are also equivalent to a is between the numbers 0.8 and 1.

X = {TrentoTown}I2

In order to better understand the intuition behind this formalization, consider the
individuals Trento and TrentoTown belonging to two ontologies O1 and O2, resp.
While there are interpretations I1 and I2 in which the two individuals coincide, that
is, {Trento}I1
X , there may be cases in which Trento is considered
to be an area broader than TrentoTown but still largely overlapping with it. This can
be formalized by considering two interpretations I1 and I2 where {Trento}I1
X includes
{TrentoTown}I2
X =
{x1, x2, x3}. In this case the mapping is weighted as

X = {x1, x2, x3, x4} and {TrentoTown}I2

X , for instance, {Trento}I1

(I1,I2) |=X 1 :{Trento} [0.85,0.86] 2 :{TrentoTown}

where values 0.85 and 0.86 are obtained as under and over approximation of the fraction

{Trento}I1
 +
{Trento}I1
?

?

?
{TrentoTown}I2

 {TrentoTown}I2

2 

 = 2  3

=
?

?

?
4 Properties of Mapping Entailment

In this section, we show how the proposed semantics can be used to compute additional
mappings which are logical consequences of an initial set of mappings. The proofs are
omitted for lack of space and can be found in [1].

Proposition 1 shows general properties of mapping entailment independently of the

mapping relation considered.

Proposition 1. The following hold:
1. |= i : A r[0,1] j : G
2. FALSE |= i : A r[a,b] j : G
3. i : A r[a,b] j : G |= i : A r[c,d] j : G if [a, b]  [c, d].
4. i : A r[a,b] j : G, i : A r[c,d] j : G |= i : A r[v,w] j : G, v = max(a, c), w = min(b, d).
5. i : A r[a,b] j : G |= j : G r
2 Recall that 1 is , 1 is , 1 is , and 1 is .

1 is the inverse relation of r.2

1
[a,b] i : A, where r

M. Atencia et al.

Proposition 2 includes properties of mapping entailment which relate equivalence with
subsumption and disjointness.

Proposition 2. The following hold:
1. i : A [a,b] j : G, i : A [c,d] j : G |= i : A [v,w] j : G where
?

?

?
v =

a+c if a = 0 or c = 0

2ac

if a = c = 0

and w =

b+d if b = 0 or d = 0

2bd

if b = d = 0

2. i : A [a,b] j : G |= i : A [v,1] j : G and
i : A [a,b] j : G |= i : A [v,1] j : G where v = a
2a
3. i : A [a,b] j : G, i : A [c,d] j : G |= i : A [v,w] j : G and
i : A [a,b] j : G, i : A [c,d] j : G |= i : A [v,w] j : G where
if b = 0
?

?

?
v =

ac

2da if a = 2d
otherwise

 0

and w =

2cb if b = 0 and b < 2c

bd

1+d

otherwise

4. i : A [a,b] j : G |= i : A [v,w] j : G and

i : A [a,b] j : G |= i : A [v,w] j : G where v = 1  b and w = 1  a

Proposition 3 introduces properties of mapping entailment with respect to ALCO con-
structors. No property about existential restriction is included, since, as mentioned be-
fore, mappings between roles are not considered in this paper.

Proposition 3. The following hold:

i : A [a,b] j : G |= i : A [v,w] j :G where v = 1  b and w = 1  a
i : A [a,b] j : G
i : A [c,d] j :
?

?

?
i : [e,f ] j : G

 |= i :A [v,w] j : G where
?

?

?
if c = 1
if c = 1

fac
1d , 1

0, ebd
1c
?

?

?
and w =

max
?

?

?
min

v =

if d = 1
if d = 1

v = max(0, a + c  1), and
w = min(b, d)

1.

2.

3.

4.

5.

6.

7.

8.

|= i : A  B [v,1] j : G where v = ac
?

?

?
|= i : A [v,w] j : G  H where
?

?

?
i : A [a,b] j : G
i : A [c,d] j : H
i : A [a,b] j : G
i : A  B [c,d] j : G
i : A [a,b] j : G  H |= i : A [a,1] j : G
i : A  B [a,b] j : G
i : A  B [c,d] j : G
i : A [a,b] j :{g} |= i : A [0,b] j :{g}  G
i :{a} [a,b] j : G |= i :{a}  A [a,1] j : G

|= i : A [0,w] j : G where w = b

c
?

?

?
[a, a

] and [b, b

Notice that proposition 3 does not contain any rule that allow to infer some weight
interval [v, w] of the mapping 1 : AB [v,w] 2 : C starting from the weight intervals
] of the mappings i : A [a,a] 2 : C and i : B [b,b] 2 : C. This
contrasts to what happens for crisp mappings, where 1 : A B [1,1] 2 : C is a logical
consequence of the two mappings i : A [1,1] 2 : C and i : B [1,1] 2 : C. In general
there is an independence between the weights associated to the mapping of two concepts
and the weight associated to the mapping of their conjunction. Example 3 provides an
evidence of this independence by showing that mappings of the form i : A [x,x] 2 : C
and i : B [y,y] 2 : C with high (resp. low) values of x and y are consistent with
mappings of the form 1 : A  B [z,z] 2 : C with a low (resp. high) value for z.
Example 3. Suppose that O1 contains the concepts Professor and Professional, while
O2 includes the concepts HasFreeTime and EarnsALot. The following two interpretations I1 and I2

X = {x1, . . . , x100}
I1

Professor
Professional

HasFreeTime
X = {x91, . . . , x190} EarnsALot
X = {x91, . . . , x100}
I2
I1

X = {x1, . . . , x90, x101, . . . , x190}
I2

satisfies the following mappings:

(I1,I2) |=X 1 : Professor [0.9,0.9] 2 : HasFreeTime
(I1,I2) |=X 1 : Professional [0.9,0.9] 2 : HasFreeTime
(I1,I2) |=X 1 : Professor  Professional [0.1,0.1] 2 : HasFreeTime
(I1,I2) |=X 1 : Professor [0.1,0.1] 2 : EarnsALot
(I1,I2) |=X 1 : Professional [0.1,0.1] 2 : EarnsALot
(I1,I2) |=X 1 : Professor  Professional [0.9,0.9] 2 : EarnsALot

(6)
(7)
(8)
Notice that I1 and I2 satisfy the low weight mapping (5), on the conjunction of two
concepts, as well as the high weight mappings (3) and (4) defined on the two conjunct
concepts. Conversely, the two interpretations satisfy the high weight mapping (8) and
the low weight mapping (6) and (7).

(3)
(4)
(5)

Proposition 4 shows mapping entailments in the presence of local knowledge. Local
entailment in ontology Oi is denoted by |=i. As in the case of weighted mappings, if
we write |=i C r D, we assume that C and D belong to L(Oi).
Proposition 4. The following hold:
1. If |=i A  B and |=j G  H then i : A r[v,w] j : G |= i : B r[v,w] j : H
2. If |=i A  B then i : A [v,w] j : G |= i : B [v,1] j : G
3. If |=i A  B then i : A [v,w] j : G |= i : B [0,w] j : G
4. If |=i A  B   then i : A [v,w] j : G |= i : B [0,1v] j : G

5 Variations on a Theme

There are a number of places above where we have made certain choices that could
have been done differently. We examine some of the alternatives in this section.

M. Atencia et al.

5.1 Interpreting Weighted Equivalence Mappings

The choice of interpreting the weighted equivalence mapping by means of the F-measure
is based on the fact that this is the typical measure used to evaluate the global quality
of a classifier. However, any function f : [0, 1]2  [0, 1] that satisfies the following
properties can be chosen to combine specific precision and recall values:

1. f (0, 0) = f (1, 0) = f (0, 1) = 0, and f (1, 1) = 1. The motivation for this is so that
in the case of crisp mappings, the weight of an equivalence mapping be the logical
and of the weights of the subsumption mappings.
2. f (,) is monotonic in each variable. In other words, if the weight of a subsumption
mapping increases then the value of the equivalence mapping must also increase.
In this paper, f (,) is the F-measure, but parallel studies can be conducted where, for
instance, f (x, y) = max(x, y), f (x, y) = x  y or f (x, y) = x+y
2 .
A different approach to interpret the weighted equivalence mapping, starts from the
usual definition of equivalence in DLs in terms of subsumption: (A  B) iff (A  B)
and (A  B). When dealing with single numbers for precision and recall, it is usually
imposible to combine them into a single value by simple conjunction; hence the use of
F as above. However, when using ranges of scores [a, b] for subsumption relations, one
[a,b] B as the conjunction of A [a,b] B and A [a,b] B. This leads to a
can define A 
natural rule: if A [a1,b1] B and A [a2,b2] B then A 
[v,w] B with v = min(a1, a2)
and w = max(b1, b2).

The current version of our semantics is characterised by the fact that it allows a
single individual in ontology O1 to be matched with certainty to sets of individuals in
O2. That is, we can express {1 : book1} [1,1] {2 : book1 copy1, 2 : book1 copy2}. This
is certainly useful if we want to express the fact that a book (e.g. book1) is equivalent to
all the copies of that book. On the other hand, as pointed out by Cuenca Grau et al [7]
the DDL which corresponds to our semantics, constructed according to Theorem 1 has
certain conclusions that may sometimes be undesirable. The example in [7] starts from
an ontology O1 which states that the concepts Flying and NoNFlying are disjoint and
that all birds can fly, and an ontology O2 which defines the concept Penguin, and it
connects the two ontologies with DDL bridge rules which map Bird onto Penguin and
NoNFlying onto Penguin as described below:

1 : NoNFlying  Flying  ,
1 : Bird  Flying,
2 : Penguin  ,

 2 : Penguin,

1 : Bird

1 : NoNFlying

 2 : Penguin

The point made in [7] is that if we describe this example in one ontology, by rewriting
 and
 mappings by means of  and  statements, we obtain an unsatisfiable
Penguin concept, as penguins cannot be (flying) birds and non flying creatures at the
same time. In DDL the two ontologies O1, O2 and the above mappings are satisfiable.
Intuitively this happens because a penguin x in ontology O2 can correspond, via the
DDL domain relation, to two distinct objects in O1: one flying, and the other not.
?

?

?
This effect can be avoided by restricting the domain relation in DDL to be 1-to-1,
as in P-DL [2]. A similar restriction can also be imposed to the semantics of weighted
mappings given in Section 2: one simply requires that the interpretations I1 and I2 be
1-to-1 on the set X.3 It can easily be verified that the corresponding proofs of Lemma 2
and of Theorem 1 go through. Note that in the case of 1-to-1 relations, all satisfiable
mappings between individuals can be reduced to mappings in the intervals [0, 0], [1, 1]
or [0, 1]. That because the value of precision, recall, and F-measure in this case is either
0 or 1.

5.2 A General Framework for Probabilistic Mappings

A natural question to ask is why not simply union the two ontologies O1 and O2 with the
precision and recall statements expressed as probabilistic subsumptions between their
terms, into one global probabilistic DL ontology (PDLO), and then reason with it.
Our answer is that intuitively one wants to keep their domains of interpretation disjoint.
The set X, whose identifiers did not appear in either O1 nor O2, but were independently
interpreted into the domains of O1 and O2 respectively, played a crucial role in this.

We show here how one could create a global PDLO which respects this intuition,
and from which one could draw a variety of conclusions depending on which specific
probabilistic DL was chosen. (See Lukasiewicz and Straccias review [13] for a variety
of proposals.) The idea of such a translation is inspired by our earlier work on DDL [3],
where we also constructed a single global DL, though the details of our construction
here are different.
Let us suppose that O1 and O2 are two ontologies and let P = {1 : Ak [a,b] 2 : Gk}
be a set of weighted inclusion mapping statements between O1 and O2.
Suppose that DL P is some probabilistic description logic, where one can make
inequality assertions on the probability of subsumptions of the form (E  F) with
probability  p.
Then consider the following translation from O1, O2 and P into a DL P TBox T12:
 The atomic concept symbols of T12 consist of {1 : A | A  CN1}  {2 : G | G 
CN2}  {1 : ANYTHING, 2 : ANYTHING, X}.
 The atomic role symbols of T12 consist of {1 : R | R  RN1}  {2 : S | S 
RN2}  {1, 2}.
 The axioms of T12 include
 relabelled local axioms of O1 and O2, obtained by prefixing all identifiers and
subconcepts with 1 and 2 respectively.
 transformations of all concepts and axioms, as described in [3], so that complementation in Oi is with respect to i : ANYTHING only (e.g., 1 : A is replaced
by 1 : ANYTHING  1 : A).
 (1 : ANYTHING  2 : ANYTHING  ) , expressing the disjointness of the
domains of the two ontologies being mapped.
 axioms restricting i to have domain X and range i : ANYTHING for i = 1, 2.
The idea is that i will play the role of the interpretation Ii applied to X.

3 This corresponds to requiring the values in X to obey the unique name assumption.

M. Atencia et al.

 for every statement A [a,b] G add (1.1 : A  2.2 : G) with probability
 a and (1.1 : A  2.2 : G) with probability  b
Essentially, these axioms establish the probabilistic subset relationships between the elements of X mapped by i
 converse axioms for every statement A [a,b] G, adding (2.2 : G  1.1 :
A) with probability  a and (2.2 : G  1.1 : A) with probability  b
 If DL P requires all axioms to be stated with a probability, add probability 1
to the axioms built before the last 2 steps.
 In case one wants to simulate the approach presented in this paper, one would
also like to enforce that X is a finite set. If the DL P has the finite model
property, then we are safe since we can restrict ourselves to reasoning in finite
models. Otherwise, if X could be made finite using axioms then so could the
domain concept, , and it is known that reasoning in only finite models leads
to very different and complex deductions [4].

We believe the above framework (obviously adjusted for differences like the use of
Bayes nets for probabilistic statements) will allow us to explore in the future the dif-
ferences/similarities and benefits/tradeoffs between various ways of defining weighted
mappings based on the numerous proposals for probabilistic DLs in the literature, as
well as the one introduced in this paper. The first candidate for such an investigation will
be Heinsohns pioneering proposal for probabilistic DL, ALCP [9]. Heinsohn models
uncertain subsumption between concepts as conditional probabilities  what he calls
p-conditionings  and also considers intervals instead of single values.

6 Related Work

In the last years there has been a growing interest in the management of uncertainty
and vagueness in DLs for the semantic web [13]. Two main lines of research have been
followed: probabilistic generalisations of DLs to deal with uncertainty, and also fuzzy
extensions of DLs to handle vagueness. Since our approach falls into the first category
we only report, in the presence of comprehensive surveys such that [13], some of the
previous attempts to combine DLs with probability, paying special attention to those
related to ontology mapping.
Heinsohn was one of the first to provide a probabilistic extension of description
logics [9]. The language ACLP builds over ACL and adds probabilistic subsumptions
between concepts. These are formalised in terms of the so-called p-conditionings which
encode that the conditional probability of a concept given another concept lies in a
concrete real interval. Heinsohn assumes interpretation domains to be finite, and defines
conditional probabilities in terms of set cardinalities.

Koller et al. presented P-CLASSIC [10] which is a probabilistic generalisation of a
version of the description logic CLASSIC. P-CLASSIC follows Heinsohns approach
and aims at answering probabilistic subsumption queries, but its semantics is based on
a reduction to Bayesian networks.
More recently, Lukasiewicz proposed probabilistic extensions of SHOIN (D) and
SHIF (D) [11]. Uncertain knowledge is realised by way of conditional constraints
?

?

?
which, similarly to p-conditionings, encode interval restrictions for conditional probabilities over concepts. The semantics is based on the notion of lexicographic entailment
in probabilistic default reasoning. Conditional constraints can be applied to individuals too. Thus, it is possible to represent, besides statistical knowledge about concepts,
degrees of belief about individuals.

Although these approaches do not tackle the formalisation of ontology mappings
directly, they certainly could be used for this purpose. Given two ontologies O1 and
O2 one could express probabilistic subsumptions between their concepts within one
global probabilistic ontology (in one of the formalisms described above), and then
reason with it. The main motivation of this work is to provide a formalism that keeps
the domains of the ontology interpretations disjoint, as it is done in [3,16] for crisp
mappings. The classificational interpretation of mappings is itself a novel approach
and justifies the use of F-measure to model equivalence mappings which could not be
addressed with most of the existing probabilistic description logics.

From a very different perspective, Lukasiewicz et al. presents in [12] a language for
representing and reasoning with uncertain ontology mappings. This approach is based
on the tight integration of disjunctive logic programs under the answer set semantics,
the description logics SHOIN (D) and SHIF (D), and Bayesian probabilities.

The work by Lutz and Schr oder [14] introduces a family of probabilistic DLs the
members of which relate to the probabilistic FOL of [8] in the same way as classical
DLs relate to FOL. This family, denoted by Prob-DLs, introduces a set of probabilistic
constructors Pp where   {<,, =,, >} and p  [0, 1] to be applied to concepts
and in some cases also to roles. If C is a concept, then PpC is a concept which denotes
objects that are an instance of C with probability  p. The semantics of Prob-DLs is
based on probabilistic interpretations, which extend a classical DL interpretation with a
probability distribution over a set of possible worlds. Concept subsumption in Prob-DLs
refers to classical DL concept subsumption, although in every world. It is claimed that
Prob-DLs are well-suited to capture aspects of uncertainty that are present in almost
all biomedical ontologies. We believe, though, that they do not capture the intended
semantics of ontology mappings.

7 Conclusions

Distributed ontology mappings are highly uncertain. We investigated the possibility to
provide a reclassification semantics for weighted mappings extending DDL semantics.
Reclassification semantics is based on the probability that individuals classified under
a particular concept in one ontology would be classified in another concept in another
ontology. Such a probabilistic view on weights should match the practice of matchers
based on concept extensions or relation to a wider context, e.g., annotated resources.

We showed that such a semantics was preserving the classical DDL semantics in
the sense that if crisp DDL mappings are encoded as weighted mappings with [1, 1]
weights, the consequences correspond. In fact, the reclassification semantics may be
used as an alternative semantics to classical DDL semantics.

M. Atencia et al.

Then, weighted mapping entailment was defined from this semantics. Inferred mappings predict the probability of reclassification from weighted mappings. This allows
one to infer mappings across different mapping relations and term constructions. It also
relates mapping inference to (crisp) ontological reasoning. As usual with probabilistic approaches, precision weakens with inference. We also discussed variation of the
proposed framework.

There are several avenues for this work. The most direct one is to apply it to mapping
(or ontology) debugging by ranking given and inferred mappings according to their
weight intervals and help to detect those near mappings which would not appear as
crisp mappings but are mappings of high weight.

Acknowledgements. Manuel Atencia is partially supported under Qualinca project
(ANR-2012-CORD-012) sponsored by the French National Research Agency.
