Scalable Geo-thematic Query Answering

 Ozg ur L utf u  Oz cep and Ralf M oller

Institute for Software Systems (STS)
Hamburg University of Technology

{oezguer.oezcep,moeller}@tu-harburg.de

Hamburg, Germany

Abstract. First order logic (FOL) rewritability is a desirable feature
for query answering over geo-thematic ontologies because in most geoprocessing scenarios one has to cope with large data volumes. Hence,
there is a need for combined geo-thematic logics that provide a sufficiently expressive query language allowing for FOL rewritability. The
DL-Lite family of description logics is tailored towards FOL rewritability
of query answering for unions of conjunctive queries, hence it is a suitable candidate for the thematic component of a combined geo-thematic
logic. We show that a weak coupling of DL-Lite with the expressive
region connection calculus RCC8 allows for FOL rewritability under a
spatial completeness condition for the ABox. Stronger couplings allowing for FOL rewritability are possible only for spatial calculi as weak
as the low-resolution calculus RCC2. Already a strong combination of
DL-Lite with the low-resolution calculus RCC3 does not allow for FOL
rewritability.

Keywords: FOL rewritability, description logics, region connection cal-
culus, qualitative spatial reasoning, GIS, combined logic.

Introduction

Query answering over a database becomes far more difficult if the extensional
knowledge in the database is extended by constraints in an ontology. The reason
is that a database plus an ontology may have many different models, hence
ontology based query answering has to compute the answers w.r.t. to all models
and build their intersection (certain answer semantics). But in some caseswhen
using a lightweight logic like DL-Lite for the representation of the ontology and
a restricted query language like unions of conjunctive queriesquery answering
w.r.t. an ontology can be reduced to model checking. This is formalized by the
notion of FOL (first order logic) rewritability: a given query can be rewritten
into a FOL query in which the intensional knowledge of the ontology is captured.
Though the rewritten queries may become exponentially bigger than the original
ones, there exist optimizations based on semantic indexes which encode entailed
knowledge of the terminological part of the ontology [15]. So, FOL rewritability
means a benefit.

P. Cudr e-Mauroux et al. (Eds.): ISWC 2012, Part I, LNCS 7649, pp. 658673, 2012.
c Springer-Verlag Berlin Heidelberg 2012
?

?

?
DL-Lite per se [3] is not sufficient for use in scenarios of geographic information processing, as these demand, among others, the representation and deduction over spatial concepts. Though constraint-based spatial reasoning [14] offers
a well developed and well proven theory for spatial domains, it does not fill in the
need for a system that combines reasoning over a spatial and a non-spatial (the-
matic) domain. Though constraint databases [7] are good candidate frameworks
for reasoning over a mixed domain of geo-thematic objects, the investigations on
constraint databases so far did not incorporate terminological reasoning in the
OBDA (ontology based data access) paradigm. But even in case of related work
which equally considers spatial and thematic reasoning [5], [17], [8], it is not
aimed at FOL rewritability. Hence, there is still a need for investigating combinations of logics that, on the one hand, are sufficiently expressive to match the
representation requirements in geographical information processing and that, on
the other hand, allow for computationally feasible (in particular FOL rewritable)
satisfiability checking and query answering.

We would like to illustrate the use of the logics of this paper by a simple
scenario in which an engineering bureau plans additional parks in a city [10].
Assume, the bureau has stored geographical data in some database (DB) and
declares relevant concepts in the terminological part of his knowledge base, the
TBox. The engineer gives necessary conditions for a concept Park+Lake which is
a park containing a lake that touches it from within, i.e., using the terminology of
the region connection calculus (RCC) [11], the lake is a tangential proper part of
the park. Similarly, a necessary condition for the concept Park4Playing is given
which is a park containing a playing ground (for children) that is a tangential
proper part.

We assume that the data are mapped to a logical pendant of the DB called
the ABox (assertional box). In particular the data should generate the fact that
there is an object a which is both a park with a lake and with a playing area,
that is Park+Lake(a) and Park4Playing(a) are contained in the ABox. But the
location of a is not known. Think of a as an object whose architectural design is
determined but the place where a is going to be localized is not determined yet.
Now, the engineering bureau asks for all parks with lakes and playing areas
such that the playing area is not contained as island in the lake. These kinds of
parks can be thought of as secure as the playing ground can be directly reached
from the park (without a bridge). All objects that fall into the answer set of
this query w.r.t. to the TBox and the data can have one of the configurations
A to C illustrated in Figure 1 (and many more) but are not allowed to have
the configuration D. The object a has to be in the answer set to the original
query as the TBox together with the ABox and some deduction on the spatial
configuration implies that a is an object which excludes the island configuration
D. Remember that a is abstract in so far as its geographical location is not
known. So in fact deduction is needed to see that a does not have configuration

F ,R(RCC8) and
D. Later on we will formalize this example in the logic DL-Lite
the query language GCQ+ and show that the deduction needed for the inclusion
of a into the answer set can be mimicked in a perfect rewriting algorithm.

 O. L utf u  Oz cep and R. M oller
?

?

?
Fig. 1. (Dis-)Allowed spatial configurations for query in engineering bureau scenario

Continuing previous work [10], we investigate combinations of logics in the
DL-Lite family with different members of RCC family [11], a well-known family
of calculi for qualitative spatial reasoning. In previous work [10], we focussed
on the FOL rewritability aspects for weak combinations of DL-Lite with RCC8;
these combinations are weak in so far as they do not allow for the construction
of arbitrary RCC8 constraint networks in the intensional part (TBox) of the on-
tology. In this paper we extend these investigations by enlarging the expressivity
of DL-Lite to one that allows for concept conjunctions on the left-hand side of
general inclusion axioms [1], and we give a proof including a rewriting algorithm

F ,R with RCC8
for the main result stating that the weak combination of DL-Lite
allows for FOL rewriting w.r.t. to the query language GCQ+.

Moreover, in this paper, we consider strong combinations of DL-Lite with the

F ,R(RCC3)
weaker RCC fragments RCC3 and RCC2, and prove that DL-Lite
does not allow for FOL rewritability of satisfiability checking while the weaker
DL-Lite
?

?

?
F ,R(RCC2) does [9].

The paper is structured as follows. Section 2 collects technical details on the
region connection calculus and the DL-Lite family of description logics. Weak
combinations of DL-Lite with the region connection calculus are described in
Sect. 3. In Sect. 4, the last section before the conclusion, we consider strong
combinations of DL-Lite with weaker fragments of the region connection calculus.
Full proofs can be found in an extended version of this paper available under
the URL http://dl.dropbox.com/u/65078815/oezcepMoellerISWC2012Ext.pdf.

2 Logical Preliminaries

We recapitulate the main logical notation and concepts used in this paper; the
region connection calculus and DL-Lite.

2.1 The Region Connection Calculus

We will consider different fragments of the region connection calculus [11] as
potential candidates for the spatial logic to be combined with DL-Lite. Randell
and colleagues axiom system [11] is based on a primitive binary relation C intended to denote a connectedness relation which is specified to be reflexive and
?

?

?
symmetric. On the basis of C other binary relations between regions which are

which is the main component of the most expressive region connection calculus

called base relations are explained. One set of base relations is the set BRCC8,
RCC8. The base relations of BRCC8 and their intended meanings are given as
follows: BRCC8 = {DC (disconnected), EC (externally connected), EQ (equal),
PO (partially overlapping), NTPP (non-tangential proper part), TPP (tangen-
tial proper part), NTPPi (inverse of NTPP), TPPi (inverse of TPP)}. We skip
the concrete definitions of the base relations by the connectedness relation C
(see, e.g., [13, p. 45]), as wein contrast to the axiom system of Randell and
colleaguesconsider the following axiom system schema AxRCCi, which directly
specifies the properties of the base relations in BRCCi.
Definition 1 (Axiom system schema AxRCCi). For all i  {2, 3, 5, 8} the
axiom set AxRCCi contains the following axioms:
{x, y.
{x, y.
{x, y, z.r1(x, y)  r2(y, z)  r1
?

?

?
rBRCCi
r1,r2BRCCi,r1=r2 r1(x, y)  r2(x, y)} 
3(x, z)    rk

(joint exhaustivity)
(pairwise disjointness)

3 (x, z) | r1; r2 = {r1

r(x, y)} 

3, . . . , rk

}}

(weak composition axioms)
For i  {3, 5, 8} additionally the axiom xEQ(x, x) (reflexivity of EQ) is con-
tained. For i = 2 the axiom xO(x, x) (reflexivity of O) is contained.

In particular, the axioms state the JEPD-property of the base relations (each
pair of regions x, y is related over exactly one base relation) and describe the
(weak) composition of two base relations (denoted by ;) according to the composition table for RCCi. With the composition of two base relations, in most cases,
only indefinite knowledge of spatial configurations follows. The spatial config-

uration r1(x, z)    rn(x, z) for base relations rj in BRCCi is also written
as {r1, . . . , rn}(x, z), and the set {r1, . . . , rn} is called a general RCCi relation.
Let Rel RCCi be the set of all 2i general RCCi relations. An RCCi (constraint)
network consists of assertions of the form {r1, . . . , rn}(x, y).
and RCC3. Their base relations are given by the sets BRCC3 = {DR, EQ, ONE}
and BRCC2 = {DR, O}, and their weak compositions are defined as shown in
Fig. 2. The discreteness relation DR is the same as {DC, EC}, the overlapping-
but-not-equal relation ONE is equal to {PO, NTPP, TPP, NTPPi, TPPi} and the
overlapping relation O is given by {ONE, EQ}.

We mention here the composition table for the low resolution logics RCC2

;
DR BRCC2 BRCC2
O BRCC2 BRCC2

BRCC3

;
{DR, ONE} DR

ONE {DR, ONE} BRCC3 ONE
?

?

?
Fig. 2. Composition tables for RCC2 and RCC3

 O. L utf u  Oz cep and R. M oller

Fig. 3. Illustration for composition entry tpp; tppi

Note that in the definitions of the base relations (of RCC3 and RCC2) we
followed the author of [16] and not [4]. But the composition tables for both definitions are identical. For the composition tables of RCC5 and RCC8 confer [14,
p. 45]. As an example entry for RCC8, which is relevant for the engineering bureau scenario, we mention the table entry for the pair (tpp, tppi): tpp; tppi =
{dc, ec, po, tpp, tppi, eq} which is described in AxRCC8 by x, y, z.tpp(x, y) 
tppi(y, z)  {dc, ec, po, tpp, tppi, eq}(x, z). In case of the engineering bureau scenario from the introduction the constraint of this composition entry is demonstrated for x being the lake, y being the park and z being the playing ground.

2.2 DL-Lite

The family of DL-Lite description logics [3] is an appropriate candidate for the
thematic component of the envisioned geo-thematic logic as it offers computationally feasible satisfiability checking and query answering over ontologies
and data stored in a relational database. More concretely, satisfiability checking and query answering (for unions of conjunctive queries) are FOL rewritable.
In this paper, we mainly deal with a member of the extended DL-Lite fam-

F ,R; it allows for functional roles, role hierarchies, role inverses and
ily DL-Lite
conjunction of basic concepts on the left-hand side of GCIs (general concept
inclusions). The syntax is given in Def. 2. The semantics of this logic is defined
in the usual waybut imposing the unique name assumption (UNA).

F ,R). Let RN be the set of role symbols and P  RN ,

Definition 2 (DL-Lite
CN be a set of concept symbols and A  CN , Const be a set of individual
constants and a, b  Const .



R  P | P
):
TBox
ABox:

B  A | R Cl  B | Cl  B Cr  B | B
Cl  Cr, (funct R), R1  R2

A(a), R(a, b)
?

?

?
*) Restriction: If R occurs in a functionality axiom, then R and its inverse

do not occur on the right-hand side of a role inclusion axiom R1  R2.

= {d  (
?

?

?
F ,R which follows from the
FOL rewritability also holds for the logic DL-Lite
corresponding FOL rewritability results for the Datalog extension Datalog
[2].
We recapitulate the technical notions needed for defining FOL rewritability. An
ontology O is a tuple (Sig,T ,A), with a signature Sig (i.e., a set of concept
symbols, role symbols and constants also denoted by Sig(O)), with a TBox T ,
and with an ABox A. An FOL query Q = (x) is an FOL formula (x) with
free variables x called distinguished variables. If x is empty, the query is called
boolean. Let a be a vector of constants from Sig(O). The set of answers w.r.t.
)n | I[xd] |= (x)}. (We use Q
I is defined by Q
later on for a
specific model I, namely a Herbrand model.) The set of certain answers w.r.t.
to O is defined by cert(Q,T  A) = {a | T  A |= [x/a]}. A conjunctive query

(CQ) is a FOL query in which (x) is an existentially quantified conjunction
of atomic formulas at(), (x) = y
i ati(x, y). A union of conjunctive queries
i1 ati1 (x, y1) 
(UCQ) is a disjunction of CQs, i.e., a formula of the form y1
  yn
atin (x, yn). We conceive a UCQ as a set of CQs. The existential
quantifiers in UCQs are interpreted in the same way as for FOL formulas (natural
domain semantics) and not w.r.t. a given set of constants mentioned in the
signature (active domain semantics).
Let DB(A) be the minimal Herbrand model of A. Checking the satisfiability
of ontologies is FOL rewritable iff for all TBoxes T there is a boolean FOL query
QT s.t. for all ABoxes A: the ontology T  A is satisfiable iff DB(A) |= QT .
Answering queries from a subclass C of FOL queries w.r.t. to ontologies is FOL
rewritable iff for all TBoxes T and queries Q = (x) in C there is a FOL query
QT such that for all ABoxes A it is the case that cert(Q,T  A) = QDB(A)
. For
DL-Lite, FOL-rewritability can be proved w.r.t. to satisfiability as well as w.r.t.
answering UCQs [3, Thm 4.14, Thm 5.15].

in


?

?

?
The rewritability results are proved with the so called chase construction
known from database theory. The idea of the chase construction is to repair the
ABox with respect to the constraints formulated in the TBox. If, e.g., the TBox

contains the axiom A1  A2 and the ABox contains A1(a) but not A2(a), then
it is enriched by the atom A2(a). This procedure is applied stepwise to yield a
sequence of ABoxes Si starting with the original ABox as S0. The resulting set
Si may be infinite but induces a canonical model can(O) for
of ABox axioms
the ABox and the TBox axioms being used in the chasing process (see below).
We will summarize the chase construction for DL-Lite.
Let T be a DL-Lite TBox, let Tp be the subset of positive inclusion (PI)
axioms in T (no negation symbol allowed) and let A be an ABox and O = T A.
Chasing will be carried out with respect to PIs only. Let S0 = A. Let Si be the
set of ABox axioms constructed so far and  be a PI axiom in Tp. Let  be of
the form A1  A2 and let   Si (resp.   Si) be an ABox axiom (resp. set

of ABox axioms). The PI axiom  is called applicable to  if  is of the form
A1(a) and A2(a) is not in Si. The applicability of other PI axioms of the form
B  C is defined similarly [3, Def. 4.1, p. 287]. If the left-hand side of the PI is

 O. L utf u  Oz cep and R. M oller

a conjunction of base concepts, e.g., if the PI is of the form A1    An  A0,
and if  is {A1(a), . . . , An(a)} and A0(a) is not in Si, then PI is applicable to .

As there may be many possible applications of PI axioms to atoms and sets of
atoms, one has to impose an order on the TBox axioms and the (finite) subsets
of the ABox. So we assume that all strings over the signature Sig(O) of the
ontology and some countably infinite set of new constants Cch are well ordered.
Such a well ordering exists and has the order type of the natural numbers N.
This ordering is different from the one of [3]; but it can also be used also for
infinite ABoxes and it can handle concept conjunction. If there is a PI axiom 
applicable to an atom  in Si, one takes the minimal pair (, ) with respect to
the ordering and produces the next level Si+1 = Si  {new}; here new is the

atom that results from applying the chase rule for (, ) as listed in Def. 3. The
primed constants are the chasing constants from Cch.
?

?

?
F ,R)
?

?

?
)
?

?

?
Definition 3 (Chasing rules for DL-Lite

)

If  = A1  A2 and  = A1(a) then new = A2(a)
If  = A1  R and  = A1(a) then new = R(a, a
If  = R  A and  = R(a, b) then new = A(a)
If  = R1  R2 and  = R1(a, b) then new = R2(a, a
If  = R1  R2 and  = R1(a, b) then new = R2(a, b)
If  = A1    An  A0 and  = {A1(a), . . . , An(a)} then new = A2(a)

(and similarly for other PIs of the form B1    Bn  C)

The chase is defined by chase(O) = chase(Tp  A) =
iN Si. The canonical
model can(O) is the minimal Herbrand model of chase(O). The canonical model
can(O) is a universal model of Tp  A with respect to homomorphisms. In particular this implies that answering a UCQ Q w.r.t. to Tp  A can be reduced to
answering Qcan(O) w.r.t. to DB(A). More concretely, (some finite closure cln(T )
of) the negative inclusions axioms and the functionality axioms are only relevant
for checking the satisfiability of the ontology which can be tested by a simple
FOL query. We leave out the details (see the extended version of this paper).

3 Weak Combinations of DL-Lite with RCC

In this section, we extend the results concerning a weak coupling of DL-Lite with
the most expressive region connection calculus fragment RCC8, which we introduced in [10], and explain its use(fulness) with a formalization of the example
scenario from the introduction. This will give us the opportunity to introduce
further concepts that are necessary to understand the discussions on stronger
couplings of DL-Lite with the weaker region connection calculi RCC2 and RCC3.
The combination paradigm follows that of Lutz and Milicic [8] who combine
ALC with the RCC8 and, more generally, with -admissible concrete domains
[8, Def. 5, p. 7]. The combined logic ALC(RCC8) of [8] is well behaved in so far
as testing concept subsumption is decidable. As we aim at FOL rewritability we
have to be even more careful in choosing the right combination method.
?

?

?
We use an axiom set T with corresponding properties of an -admissible domain for coupling with DL-Lite because axioms are more appropriate for rewriting investigations. The axiom sets AxRCCi will instantiate T.

We recapitulate the syntax and the semantics of the constructors of [8] that
are used for the coupling of the thematic and the spatial domain. A path U (of
length at most 2) is defined as l for a fixed attribute l (has location) or as
R  l, the composition of the role symbol R with l. We abbreviate R  l with
 R in this paper. The usual notion of an interpretation I in our combined logic

is slightly modified by using two separate domains 
. All symbols


of the theory T are interpreted relative to (
. Let r be an RCC-relation of
)
some RCC-fragment. That is, let be given a set of base relations BRCCi and r =
I(
I  
r
{r1, . . . rn}  r1rn for ri  BRCCi. Then l

?

?

?
; r
= r
)
n;
(Rl)
)  
I(
I | there is an e s.t. (d, e)  R
I};
)  l




?

?

?
and (e, e
)
(U1, U2.r)
I | there exist e
1)  U
={d  
2)  U




?

?

?
2 s.t. (d, e
1 , (d, e
2 and
={d  
1)  U
I}; (U1, U2.r)
2) 
2)  r







1, e
1, e
2 s.t. (d, e
(e
2)  r
I}.


?

?

?
2 it holds that (e
1, e


Now we can define the following combined geo-thematic logic (where a


1, e
I | for all e


and (

={(d, e

1 , (d, e

)

, b

stand for constants intended to be interpreted by regions):

F ,R(RCC8)). Let r  Rel RCC8 and T = AxRCC8.

Definition 4 (DL-Lite


R  P | P
Cl  B | Cl  B Cr  B | B | U1, U2.r


U  R |  R B  A | R | l
Cl  Cr, (funct l), (funct R), R1  R2


A(a), R(a, b), l(a, a
*) Restriction: If (funct R)  T , then R and R

hand side of a role inclusion axiom or in a concept of the form U1, U2.r.

):
TBox
ABox:

), r(a


, b

do not occur on the right-



)

As satisfiability checking of RCC8 constraint networks is NP-complete, there
is only a chance to reach FOL rewritability if we assume within the ABox a
constraint network which is consistent and complete, i.e., it has a exactly one
solution and it is a clique with base relations as labels; in this case the ABox
is called spatially complete. For cadastral maps or maps containing areas of
administration one can assume pretty safely (almost) spatial completeness. The
coupling with RCC8 is so weak that FOL rewritability of satisfiability follows.
Proposition 1. Checking the satisfiability of DL  Lite

F ,R(RCC8) ontologies
that have a spatially complete ABox is FOL rewritable.

Testing whether FOL rewritability holds for satisfiability tests is necessary for
tests whether FOL rewritability is provable for query answering w.r.t. a sufficiently expressive query language. The query language which we consider is derived from grounded conjunctive queries and is denoted by GCQ+. This query

F ,R(RCC8) and so prolanguage is explicitly constructed for use with DL-Lite
vides only means for qualitative spatial queries. But it could be extended to
allow also for quantitative spatial queries.
?

?

?
F ,R(RCC8) is a formula of one of
Definition 5. A GCQ+ atom w.r.t. DL-Lite
the following forms:

 O. L utf u  Oz cep and R. M oller
?

?

?
F ,R(RCC8) concept without the negation symbol
 C(x), where C is a DL-Lite

and x is a variable or a constant.

 (R1 . . . Rn.C)(x) for role symbols or their inverses Ri, a DL-Lite

F ,R(RCC8)

concept C without the negation symbol, and a variable or a constant x

 R(x, y) for a role symbol R or an inverse thereof
 l(x, y
), where x is a variable or constant and y





is a variable or constant

intended to denote elements of AxRCC8

, y

), where r  Rel RCC8 and x



 r(x

, y



to denote elements of AxRCC8

are variables or constants intended

F ,R(RCC8) is a query  yz5

, y, z
Ci(x, w
A GCQ+ query w.r.t. DL-Lite
)
1 . . .  z
=  y1 . . .  yn z


where all Ci(x, w
is a sequence of -quantifiers interpreted w.r.t. the active domain semantics.
m

) are GCQ+ atoms and  yz

, y, z
?

?

?
Our perfect rewriting algorithm is an an adaptation of the algorithm PerfectRef
[3, Fig. 13] for reformulating UCQs w.r.t. DL-Lite ontologies to our setting in

F ,R(RCC8) ontologies. We give a
which GCQ+-queries are asked to DL-Lite
description of our adapted algorithm in the following.

Given a query GCQ+ Q, we transform it to a special form; 1(Q) is the result
of the transformation to a UCQ and 2(Q) is the result of transforming Q in
a hybrid UCQ whose conjuncts are either classical predicate logical atoms or
GCQ+-atoms which are not further transformed. We use the notation g = F 
for g is of the form F.

The original algorithm PerfectRef operates on the PI axioms of a DL-Lite
ontology by using them as rewriting aids for the atomic formulas in the UCQ.
Lines 512 and 2834 of our adapted algorithm (Algorithm 1) make up the original PerfectRef. Roughly, the PerfectRef algorithm acts in the inverse direction
with respect to the chasing process. For example, if the TBox contains the PI

axiom A1  A2  A3, and the UCQ contains the atom A3(x) in a CQ, then
the new rewritten UCQ query contains a CQ in which A3(x) is substituted by
A1(x)  A2(x). The applicability of a PI axiom to an atom is restricted in those

cases where the variables of an atom are either distinguished variables or also appear in another atom of the CQ at hand. To handle these cases, PerfectRefas
to denote all nonwell as also our adapted versionuses anonymous variables
distinguished variables in an atom that do not occur in other atoms of the same
CQ. The function anon (line 31 in Algorithm 1) implements the anonymization.
The application conditions for PI axioms  and atoms are as follows:  is applicable to A(x) if A occurs on the right-hand side; and  is applicable to R(x1, x2),
if x2 = and the right-hand side of  is R; or x1 = and the right-hand side
of  is R
; or  is a role inclusion assertion and its right-hand side is either

. The outcome gr(g, ) of applying an applicable PI  to an atom g
R or R
corresponds to the outcome of resolving  with g. For example, if  is A  R
and g is R(x, ), the result of the application is gr(g, ) = A(x). We leave out
the details [3, Fig.12, p. 307]. In PerfectRef, atoms in a CQ are rewritten with
the PI axioms (lines 611) and if possible merged by the function reduce (line
31) which unifies the atoms with the most general unifier (lines 2834).


?

?

?
input : a hybrid query 1(Q)  2(Q), DL-Lite(RCC8) TBox T
output: a UCQ pr
1 pr := 1(Q)  2(Q);
2 repeat
?

?

?
:= pr;

pr
foreach query q

  pr
?

?

?
do
?

?

?
foreach atom g in q

do

if g is a FOL-atom then
foreach P I  in T do
?

?

?
pr := pr  {q

if  is applicable to g then

[g/gr(g, )]};

end

else

end
if g =   R1,  R2.r3(x) and r1; r2  r3 then
[g/(  R1, l.r1(x)  l,  R2.r2(x))];

X,{  R1, l.r1(x),l,  R2.r2(x)}}
?

?

?
X := q
pr := pr  {X}  {2
?

?

?
end
if g = U1, U2.r1(x) and B  U1, U2.r2(x)  T for r2  r1
then

pr := pr  {q
?

?

?
[g/B(x)]};
?

?

?
2  r1
1

end
if g = U1, U2.r1(x) and B  U1, U2.r2(x)  T for r
then

pr := pr  {q

end
if g =   R1, U1.r(x) (resp. U1,  R1.r(x)) and (R2  R1  T or
1  T ) then
2  R
1
1
?

?

?
X := q
[g/(g[R1/R2])];
pr := pr  {X}  {2

[g/B(x)]};
X,{g[R1/R2]}};
?

?

?
end

end

end
foreach pair of FOL-atoms g1, g2 in q
?

?

?
if g1 and g2 unify then

pr := pr  {anon(reduce(q
?

?

?
end

end

do
, g1, g2))};

end

35 until pr
36 return drop(pr)

= pr;
?

?

?
Algorithm 1. Adapted PerfectRef

 O. L utf u  Oz cep and R. M oller

The modification of PerfectRef concerns the handling of GCQ+-atoms of the
form U1, U2.r(x). These atoms may have additional implications that are ac-

counted for with four cases (lines 1226 of the algorithm). At the end of the
adapted algorithm PerfectRef (Algorithm 1, line 35) these atoms are deleted by
calling the function drop. The algorithm returns a classical UCQ, which can be
evaluated as a SQL query on the database DB(A).

Let us demonstrate the rewriting algorithm with a formalization of the simple
scenario from the beginning. The TBox of the engineering bureau contains the
F ,R(RCC8): Park+Lake  Park; Park4Playing 

following axioms of DL-Lite
Park; Park+Lake  hasLake  l, l.tpp; Park4Playing  hasPlAr  l, l.tpp. The
ABox A contains {Park+Lake(a), Park4Playing(a)}  A. The query of the engi-
neer, which asks for all parks with lakes and playing areas such that the playing
area is not a tangential proper part of the lake, can be formalized by the follow-

ing GCQ+: Q =Park(x)  hasLake  l, hasPlAr  l.(BRCC8 \ {ntpp})(x). Using
the composition tpp; tppi = {dc, ec, po, tpp, tppi, eq}  BRCC8 \{ntpp}, the reformulation algorithm introduced above (lines 1315) produces a UCQ that con-
= (hasLake  l, l.tpp)(x)  (l, hasPlAr  l.tppi)(x).
tains the following CQ: Q
Rewriting l, hasPlAr  l.tppi to hasPlAr  l, l.tpp (lines 2021) in combination with the rewriting rule for A1  A2 (Def. 3) we get another CQ Q
=
Park+Lake(x)  Park4Playing(x). Now, Q
captures (as desired) the object a.
That the rewriting given in Algorithm 1 is indeed correct and complete follows
?

?

?
from Theorem 1.
Theorem 1. Answering GCQ+-queries w.r.t. DL  Lite
that have a spatially complete ABox is FOL-rewritable.
?

?

?
F ,R(RCC8) ontologies

We give a proof sketch. The proof follows the proof of Theorem 5.15 for pure
DL-Lite ontologies [3]. We adapt the chase construction to account for the RCC8

relations r  Rel RCC8. The main observation is that the disjunctions in r can
be nearly handled as if they were predicate symbols.
Because of Prop. 1 we may assume that O is satisfiable. Let pr be the UCQ
resulting from applying the algorithm to Q and O. We have to show that
cert(Q,O) = (pr)DB (A). These can be done in two main steps of which the first
(O).
will be sketched here as it contains the main chase-like construction chase
After the construction, one has to describe what it means to answer Q with re-
(O)), and then show that
(O) is, resulting in the set ans(Q, chase

spect to chase
(O)) = cert(Q,O). In the second step, which we leave out here (see

ans(Q, chase
(O)) =
the extended version of this paper) one has to show that ans(Q, chase
(pr)DB (A).
(O) one uses the chase rules of Def. 3 and the

For the construction of chase









special rule (R).

Chasing Rule (R)

s.t. {R1(x, y), l(y, y
If B(x)  Si and there are no y, y

is contained in Si, then let Si+1 = Si  {R1(x, y), l(y, y


)}

, x
)}.

, x
are completely new constants not appearing in Si. The con-


), l(x, x

), l(x, x


), r1(y

), r1(y

The constants y, y


, x




?

?

?
stant x
constant symbol.


is the old x

Scalable Geo-thematic Query Answering

if already in Si, otherwise it is also a completely new





, a





, a

) and r(b

). Then it is enough to
?

?

?
c,b and one adds r

Every time (R) is applied to yield a new ABox Si, the resulting constraint
network in Si is saturated by calculating the minimal labels between the new
added region constants and the other region constants. The application of (R)
does not constrain the RCC8-relations between the old regions and even stronger:


) is added to Si, then one also adds r2(x

  Si and all relations rc,a such that rc,a(c

Let (R) be applied to a TBox axiom of the form A    R, l.r and A(a)  Si
)  Si. The


c,b(c

resulting in the addition of R(a, b), l(b, b
consider all c
composition table gives the outcome rc,a; r = r
)
to Si. After this step, which we call triangulation step, one closes the assertions
up with respect to the subset relation between RCC8-relations and with respect

to symmetry. I.e., if r1(x
) for all
r2 such that r1  r2 and r


2, assertions of the form



2 ,b(c
1 ,b(c
2, b
rc
) do not constrain each other (because of the patch
work property). The saturation leads to a finite set Si+k (for some k  N) that is a
(O) does not induce a single
(O) =

superset of Si. Let chase
Si. The set chase
canonical model. But it is universal in the following sense: For every model I of
(O) by taking a (consistent) configuration of
O define a model Ic out of chase

the contained RCC8-network and taking the minimal model of this configuration
(O). Then Ic maps homomorphically to I. Now

and the thematic part of chase
(O) are
one can define that answers of GCQ+-queries with respect to chase
given by homomorphic embeddings and show that these answers are exactly the
certain answers w.r.t. the ontology O.


, y
1
2 (y


). For different c

) and rc




1, b




, x


1, c



, b



, y







4 Strong Combinations of DL-Lite with RCC

Another way of reaching FOL rewritability for combinations of DL-Lite with
RCC is weakening the expressivity of the spatial component. Hence, one may
ask whether a combination with the calculus RCC3 or RCC2 [17], both fragments
with weak expressibility, allows for weak FOL rewritability w.r.t. satisfiability
checks (and query answering). Their potential use as logics for approximating
[6] ontologies in more expressible combined logics like ALC(RCC8) makes the
,+F ,R(RCC3)
investigation valuable. The logics DL-Lite
are defined as follows (+ indicates the strong combination):

,+F ,R(RCC2) and DL-Lite

,+F ,R(RCC2) and DL-Lite


Definition 6 (DL-Lite
R  P | P
Cl  B | Cl  B

AxRCC2 resp. T = AxRCC3 and r  BRCC2 resp. r  BRCC3
U  l |  R
B  A | R
Cr  B | B | U1, U2.r
Cl  Cr, (funct l, R), R1  R2





):
TBox
ABox:

*) Restriction: If (funct R)  T , then R and R

A(a), R(a, b), l(a, a


, b

), r(a
do not occur on the right-

)

,+F ,R(RCC3)). Let T =

hand side of a role inclusion axiom.

 O. L utf u  Oz cep and R. M oller
?

?

?
F ,R leads to non-FOL rewritaFor RCC3 the strong combination with DL-Lite
bility. The reason lies in the fact that testing the satisfiability of RCC3 is not in
the complexity class AC0 as shown by the following lemma.
Lemma 1. Checking satisfiability of RCC3 networks is Logspace hard.

Proof. As is known, the reachability problem in symmetric (undirected) graphs is
logspace complete [12]where graph reachability asks whether for nodes s, t in G
there is a path between s and t. By reducing this problem to the satisfiability test
for RCC3 networks we will have shown that the latter problem is Logspace hard
itself. So let be given a (symmetric) graph G = (V, E) and nodes s, t  V . We
define the network N in the following way (see Figure 4): Let V = {v1, . . . , vn}
be an enumeration of the nodes of G; w.l.o.g. let s = v1 and t = vn and let
B = BRCC3. Nodes of N are given by V  {a} where a / V . Labelled edges of
N are given by: s{DR}a; t{ONE}a; vi{B}a for all i = 1, n; vi{EQ}vj if E(vi, vj);
vi{B}vj if E(vi, vj ).

Now we show that the network N is satisfiable iff s and t are connected in
G. Assume that s and t are connected; then there is an EQ-path in N between
them, hence s{EQ}t follows. But this contradicts s{DR}a and t{ONE}a. Now
assume that s and t are not connected; then there is no path consisting only of
EQ-labels between s and t. The graph G consists of at least 2 components, and
s, t are in different components. We define a consistent configuration as follows:
in the component in which s is contained, let v{DR}a and
For all nodes v, v
v{EQ}v
in the component of t let v{ONE}a and v{EQ}v

.
in the other components let v{DR}a and v{EQ}v
For all nodes v, v
. For all
. (Two remarks : 1) EQ-edges
nodes v, v
for edges E(vi, vj) in G with j > i + 1 are not shown in Fig. 4. 2) We inserted
edges labelled B for better illustrations. But these are not needed.)

which have not a label yet, let v{DR}v

. For all nodes v, v
?

?

?
B 

B 
?

?

?
B 
?

?

?
Fig. 4. Network N used in proof of Lemma 1

This lemma immediately entails the fact that satisfiability checking for on-
,+F ,R(RCC3) is not FOL rewritable. This problem
tologies over the logic DL-Lite
does not vanish if we presuppose that the ABox A is spatially completeas
shown by the following proposition.
,+F ,R(RCC3) with

Proposition 2. Satisfiability checking of ontologies in DL-Lite
spatially complete ABoxes is not FOL rewritable.
?

?

?
Scalable Geo-thematic Query Answering

constraint network so that checking the consistency of RCC3 constraint networks
is reducible to a satisfiability check of this TBox and a spatially complete ABox.

r. The generic TBox Tg
Let for every r  Rel RCC3 be given role symbols R1
has for every r  Rel RCC3 a concept symbol Ar and a corresponding axiom with
the content that all instances of Ar have paths over the abstract features R1
resp. R2 to regions that are r-related.

r, R2

Tg = {Ar    R1

r,  R2

r.r, (funct l, R1

r, R2

r) | r  RelRCC3}

(1)

Now, let N be an arbitrary RCC3 constraint network which has to be tested for

relational consistency. Let AN be an ABox such that for every r(a, b) in N three
new constants are introduced: xab, xa, xb.

AN = {Ar(xab), R1

r(xab, xa), R2

r(xab, xb) | r(a, b)  N}

(2)

The construction entails: Tg AN  AxRCC3 is satisfiable iff N  AxRCC3 is sat-
,+F ,R(RCC3)-
isfiable. If the data complexity of the satisfiability check for DL-Lite
ontologies were in AC0, then the consistency of constraint networks could be
tested in AC0, too. (Note that Tg is a fixed TBox.) But checking the consistency
of RCC3 constraint networks is Logspace-hard and AC0  Logspace.

As a corollary to this proposition we get the assertion that strong combinations of RCC5 and RCC8 into DL-Lite
respectivelywhich are defined in the same manner as in Definition 6do not
allow for FOL rewritability of satisfiability checking.

,+F ,R(RCC5) and DL-Lite

,+F ,R(RCC8),

The low resolution calculus RCC2 is quite more inexpressive than RCC3 due
to the fact that the composition table does not allow for the propagation of
information: All compositions of DR, O result in the maximally unspecified relation {DR, O}. Hence, FOL rewritability of satisfiability testing follows easily
considering the query Q = x, y[O(x, y)  DR(x, y)]  x[DR(x, x)].

Proposition 3. Testing the satisfiability of RCC2 networks is FOL rewritable.

But in combination with functionality axioms of the TBox one could have the
problem that the ABox may lead to identifications of regions. The identified
regions are not allowed to have edges labelled O, DR resp. to the same region.
Though this can be tested, the problem arises when a chain of regions is identified
by the TBox and the ABox, because we do not know the length of the chain
in advance. More formally: In addition to RCC2 constraint-network assertions
we allow identity assertions v = w for regions v, w. As we can assume that all

nodes in a RCC2 network are connected by an edge labelled O, DR or BRCC2

we use a more intuitive formalism where, for every assertion v = w, the label of
the edge between v and w is marked with an =; e.g., an edge between v, w with
label DR= stands for DR(v, w)  v = w. We call such a network an =-marked
RCC2 network (a RCC=2 network for short). Let B = BRCC2 in the following.

 O. L utf u  Oz cep and R. M oller

Proposition 4. An RCC=2 constraint network N is unsatisfiable iff

1. N contains DR(v, v) or DR=(v, v) for some node v; or
2. N contains DR=(v, w); or
3. N contains a cycle in which there is DR(v, w) and in which there is a path

from v to w such that every label on the path is B= or O=; or
4. N contains a cycle in which there is DR(v, w) and in which there is a path
from v to w s.t. every label on the path is B= or O= except one which is O.

Proposition 4 shows that adding identity assertions to an RCC2 network may
require checking the existence of identity chains of arbitrary length. Hence, in
principle it is possible that the functional roles used in DL-Lite
lead to identity chains. But as the following proposition show, this cannot be the
case: The identity paths induced by functionalities in DL-Lite
have only a maximal length of one.

,+F ,R(RCC2) may
,+F ,R(RCC2) can

Proposition 5. Satisfiability checking of ontologies in DL-Lite
FOL rewritable.

,+F ,R(RCC2) is

5 Conclusion

As proved in this paper, combining DL-Lite with expressive fragments of the region calculus like RCC8 into logics that preserve the property of FOL rewritability is possible if the coupling is weak: Constraints of the RCC8 network contained
in the ABox are not transported over to the implicitly constructed constraint

network resulting from the constructors of the form U1, U2.r. In this paper we

further dealt with strong combinations for weaker calculi like RCC2 or RCC3. As
we have shown by a reduction proof, a strong combination with RCC3 destroys
the FOL rewritability of satisfiability checking. The reason is that checking the
satisfiability of RCC3 networks needs to test for reachability along EQ paths,
which can be reproduced by the TBox. For the low resolution calculus RCC2,
FOL rewritability of satisfiability checking is provablethough checking the satisfiability of RCC2 networks with additional identity assertions is at least as hard
,+F ,R(RCC2)
as checking RCC3 networks. We plan to investigate whether DL-Lite

F ,R(RCC8) can be used for approximationfollowing the complete
and DL-Lite
but not necessarily correct approximation method of [6]. Moreover we want to
,+F ,R(RCC2) allows for FOL rewritability of query answercheck whether DL-Lite
ing w.r.t. unions of conjunctive queries.
