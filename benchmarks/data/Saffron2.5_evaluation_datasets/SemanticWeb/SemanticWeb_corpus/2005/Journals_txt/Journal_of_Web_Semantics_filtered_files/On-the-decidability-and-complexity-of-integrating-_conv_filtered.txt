Web Semantics: Science, Services and Agents

on the World Wide Web 3 (2005) 6173

On the decidability and complexity of integrating

ontologies and rules

Riccardo Rosati

Dipartimento di Informatica e Sistemistica, Universit`a di Roma La Sapienza, Via Salaria 113, 00198 Roma, Italy

Received 6 May 2005; received in revised form 11 May 2005; accepted 11 May 2005

Abstract


We define the formal framework of r-hybrid knowledge bases (KBs) integrating ontologies and rules. A r-hybrid KB has a
structural component (ontology) and a rule component. Such a framework is very general, in the sense that: (i) the construction
is parametric with respect to the logic used to specify the structural component; (ii) the rule component is very expressive, since
it consists of a Datalog
program, i.e., a Datalog program with negation as failure and disjunction, (iii) the rule component is
constrained in its interaction with the structural component according to a safeness condition: such a safe interaction between
rules and structural KB captures (and is a generalization of) several previous proposals. As a consequence, we are able to show
that such a framework of r-hybrid KBs comprises many systems proposed for combining rules and Description Logics. Then,
we study reasoning in r-hybrid KBs. We provide a general algorithm for reasoning in r-hybrid KBs, and prove that, under very
general conditions, decidability of reasoning is preserved when we add safe Datalog
rules to a KB: in other words, if reasoning

in the logic L used to specify the structural component T is decidable, then reasoning in the extension of T with safe Datalog
rules is still decidable. We also show that an analogous property holds for the complexity of reasoning in r-hybrid KBs. Our
decidability and complexity results generalize in a broad sense previous results obtained in recent research on this topic. In
particular, we prove that reasoning in r-hybrid KBs whose structural component is specified in the Web Ontology Language
OWL-DL is decidable.
 2005 Elsevier B.V. All rights reserved.


Keywords: Rules; Ontologies; Description Logics; Semantic Web

1. Introduction

Research in knowledge-based systems has in the
last years dealt with the problem of overcoming
the limitations imposed by a single knowledge
representation language. Hybrid systems [15] have
thus been proposed, which are constituted of two or

E-mail address: rosati@dis.uniroma1.it (R. Rosati).

1570-8268/$  see front matter  2005 Elsevier B.V. All rights reserved.
doi:10.1016/j.websem.2005.05.002

more subsystems, each of which deals with a distinct
portion of the knowledge base and uses specific
representation formalisms and reasoning procedures.
The improvement in the deductive power of hybrid
systems is in terms of both the inferences the system
is able to make, and the efficiency of the reasoning
process, since any subsystem can take advantage
of the inferential power of the other subsystems,
whereas the use of specialized reasoning procedures

R. Rosati / Web Semantics: Science, Services and Agents on the World Wide Web 3 (2005) 6173

allows for improving the efficiency of the deduction
process.

The idea of adding rules to structured knowledge
representation systems follows this line of research,
and dates back to early Description Logic systems
like CLASSIC [33], LOOM [29], and CLASP [36].
Then, the idea of building hybrid systems combining
rules and structured representation of information
has been pursued in a formally more rigorous and
coherent way. The first approaches in this direction
[27,6,9] studied the problem of integrating Datalog
rules with Description Logics (DLs). Informally, the
basic idea underlying hybrid formalisms integrating
rules and descriptions is to deal with knowledge bases
(KBs) constituted by a rule component (a Datalog
program) and a structural component (a DL knowledge
base). The interaction between the two subsystems is
obtained by allowing some variables in Datalog rules
to range over the set of instances of a specified concept
of the DL knowledge base.

Such hybrid formalisms proved well-suited for the
construction of tools for accessing heterogeneous information systems. In particular, one of such formalisms
(carin) has been used in the Information Manifold,
a system developed at AT&T for integrated access to
different structured information sources on the World
Wide Web [24].

More recently, a renewed interest

towards the
integration of structured KBs and rules has emerged
in the research on ontologies and the Semantic Web
[21,1]. DLs are also playing a central role in this field,
since they are currently the most used formalisms
for building ontologies, and have been proposed as
standard languages for the specification of ontologies
in the Semantic Web [32].

However, as shown by the first studies in this field
[27], decidability (and complexity) of reasoning is a
crucial issue in systems combining DL KBs and rules.
In fact, the interaction does not preserve decidability,
i.e., starting from a KB in which reasoning is decidable and a rule KB in which reasoning is decidable,
reasoning in the KB obtained by integrating the two
components may not be a decidable problem.

In this paper, we study reasoning in description logic
knowledge bases augmented with rules expressed in
Datalog (and its nonmonotonic extensions).

We start by defining r-hybrid knowledge bases
(KBs). A r-hybrid KB has a structural component T,

that is a theory in a subset of first-order logic (for in-
stance, a DL knowledge base), and a rule component
P. Such a framework is very general, in the sense that:

1. the construction is parametric with respect to the
structural language, i.e., the logic used to specify
the structural component. The only condition imposed by the framework is that the logic is a subset
of function-free first-order logic. In particular, any
description logic can be chosen as the structural
language;

2. the rule component is very expressive, since it consists of a Datalog
program, i.e., a Datalog program in which negation as failure in the body of rules
and disjunction in the head of rules are allowed.


3. the rule component is constrained in its interaction
with the structural component according to a safeness condition: such a safe interaction between rules
and structural KB captures (and is a generalization
of) several previous proposals [9,34,31].

As a consequence, we are able to show that the
framework of r-hybrid KBs comprises many systems
proposed for integrating rules and Description Logics.
Then, we study reasoning in r-hybrid KBs. First, we
provide a general algorithm for reasoning in r-hybrid
KBs, and prove that, very often, decidability of reasoning is preserved when we add safe Datalog
rules to
a KB: in other words, under very general conditions, if
reasoning in the logic L used to specify the structural
component T is decidable, then reasoning in the extension of T with safe Datalog
rules is still decidable.
We also show that an analogous property holds for the
complexity of reasoning in r-hybrid KBs.


Our decidability and complexity results generalize
in a broad sense previous results shown in [9,34,31]. In
particular, [31] established decidability of reasoning
in the description logic SHOIN enhanced with safe,
positive Datalog rules. Our results imply that we can

extend such a framework to nonmonotonic Datalog
rules and to more expressive, decidable DLs, and
preserve decidability of reasoning. Notably, one such
DL, SHOIN(D), is equivalent to the Web Ontology
language OWL-DL, which is currently playing a
crucial role in the Semantic Web initiative [32], since
it is a W3C recommendation language for ontology
representation in the Semantic Web: therefore, our
results immediately imply that extending OWL-DL

ontology specifications with safe Datalog
preserves decidability of reasoning.


rules

Finally, our algorithm highlights that reasoning in r-
hybrid KBs can be done by strongly separating reasoning about the structural component and reasoning about
the rule component. This is a very important property,
which allows for reusing deductive techniques (and implemented systems) developed for the structural language and for Datalog

[12].


The paper is structured as follows. In Section 2 we
define r-hybrid KBs. In Section 3 we study reasoning
in r-hybrid KBs: we first define an algorithm for satisfiability of r-hybrid KBs, then address decidability and
complexity of reasoning with r-hybrid KBs. We discuss related work in Section 4. Finally, we draw some
conclusions in Section 5.

2. Framework

In this section we define syntax and semantics of
r-hybrid KBs. We introduce both a monotonic, firstorder semantics and a nonmonotonic semantics based
on stable models.

such that n  0, m  0, k  0, h  0, each pi(Xi),
ri(Yi), si(Zi), ui(Wi) is an atom and:
 each pi is a predicate from A;
 each ri, ui is a predicate from AR;
 each si is a predicate from AP ;
 (safeness condition) each variable occurring in R
must occur in one of the ris.
If n = 0, we call R a constraint. If, for all R  P,
n  1, P is called a Datalog

program. If, for all
R  P, n  1 and h = 0, P is called a positive Datalog program. If there are no occurrences of variable
symbols in P, P is called a ground program.


Informally, P is a Datalog
program with a special
safeness condition: in each rule R, each variable occurring in R must occur in a positive atom in the body
of R whose predicate is from AR, i.e., does not occur
in T. Notice that such a condition strengthens the standard Datalog range restriction condition on the use of
variables in rules.

Thus, the structural component and the rule component share the predicates in AP and the constants in C,
while the alphabet of predicates AR is only used by the
rule component P.

2.1. R-Hybrid KBs: syntax

2.2. First-order semantics for r-hybrid KBs

We denote by L any subset of the function-free firstorder logic language (for example, a description logic
language) over an alphabet of predicates A = AP 
AR, with AP  AR = , and an alphabet of constants
C. Every p  AP is called a structural predicate. An
atom is an expression of the form r(X), where r is a
predicate in A of arity n and X is a n-tuple of variables
and constants. If no variable symbol occurs in X, then
r(X) is called a ground atom.

the structural language of H;

Definition 1. A r-hybrid knowledge base (KB) H is a
pair (T, P), where:
 T  L and no predicate in AR occurs in T. L is called
 P is a Datalog

program over the predicate alphabet A and the alphabet of constants C, i.e., a set of
Datalog
rules where each rule R has the form
p1(X1)  . . .  pn(Xn)  r1(Y1), . . . , rm(Ym),
s1(Z1), . . . , sk(Zk), not u1(W1), . . . , not uh(Wh)


We now define two semantics for r-hybrid KBs: the
first one relies on a first-order logic interpretation of
both the structural and the rule component of the r-
hybrid KB, while the second semantics provides a nonmonotonic meaning to rules.

From now on, unless specified otherwise, with
the term interpretation we indicate a first-order interpretation of the predicates in A and the constants
in C.

In order to be able to provide a nonmonotonic
semantics for r-hybrid KBs, we impose the following
semantic condition, known as the standard names as-
sumption, which is commonly adopted when defining
nonmonotonic extensions of first-order formalisms
(see e.g. [23,28,8,10]): every interpretation is over
the same fixed, countably infinite, domain 	, and in
addition, the alphabet of constants C is such that it is in
the same one-to-one correspondence with 	 in every
interpretation: that is, there is a constant symbol for
each element of 	, each constant denotes the same
element of 	 in every interpretation, and two distinct

R. Rosati / Web Semantics: Science, Services and Agents on the World Wide Web 3 (2005) 6173

constants denote two distinct elements (this last
property is known as the unique name assumption).

Under this assumption, we can, with a little abuse
of notation, use the same symbol to denote both a constant and its semantic interpretation. Moreover, since
the meaning of constants is fixed and is the same in evey
interpretation, from now on we assume that first-order
interpretations do not explicitly deal with constants,
i.e., they only define the interpretation of predicates.

same constant symbol;

Under the standard names assumption, the notion
of satisfaction of a first-order sentence in a first-order
interpretation is defined as follows:
 I satisfies a ground atom p(t) if t  pI;
 I satisfies the equality c1 = c2 if c1 and c2 are the
 I satisfies 1  2 if I satisfies 1 and I satisfies
 I satisfies  if I does not satisfy ;
 I satisfies x. if there exists c  C such that I satisfies (c/x), where (c/x) is the formula obtained
from  by replacing each occurrence of the variable
x with the constant c.

2;

The first-order semantics of a r-hybrid KB consists
of a first-order interpretation not only of the structural
component, but also of the rule component of the r-

hybrid KB. Formally, let R be the following Datalog
rule:
R = p1(X1, c1)  . . .  pn(Xn, cn)

 r1(Y1, d1), . . . , rm(Ym, dm), s1(Z1, e1), . . . ,
sk(Zk, ek), not u1(W1, f1), . . . , not uh(Wh, fh)
(1)

where each Xi, Yi, Zi, Wi is a set of variables and each
ci, di, ei, fi is a set of constants. Then, FO(R) is the
first-order sentence
 x1, . . . ,  xn,  y1, . . . ,  ym,  z1, . . . ,  zk,  w1, . . . ,  wh
. r1( y1, d1)  . . .  rm( ym, dm)  s1( z1, e1)
 . . .  sk( zk, ek)  u1(  w1, f1)  . . . 
uh(  wh, fh)  p1( x1, c1)  . . .  pn( xn, cn)
Given a Datalog

program P, FO(P) is the set of

first-order sentences {FO(R) | R  P}.


A FOL-model of a r-hybrid KB H is an interpretation I such that I satisfies T  FO(P). H is called
FOL-satisfiable if it has at least a FOL-model.
Finally, we define skeptical entailment under the
FOL semantics. A sentence   L is FOL-entailed by
H, denoted by H |=FOL  if, for each FOL-model I of
H, I satisfies .

Notice that the above first-order semantics of rules
does not distinguish between negated atoms in the body
and disjunction in the head of rules: e.g., according to
such semantics, the rules A  B, not C and A  C 
B have the same meaning.

2.3. Nonmonotonic semantics for r-hybrid KBs

An alternative semantics to r-hybrid KBs is based
on a nonmonotonic interpretation of the rule compo-
nent, according to the notion of stable model [16].
This is the semantics most commonly adopted in Disjunctive Logic Programming (DLP). We now formalize such a semantics in the framework of r-hybrid
KBs.

We start by introducing some auxiliary definitions.
Given an interpretation I, we denote by IR the
projection of I to AR, i.e., IR is obtained from I by
restricting it to the interpretation of the predicates in
AR. Analogously, we denote by IP the projection of
I to AP , and denote I as IP  IR.

Given a set of constants C, the ground instantiation of P with respect to C, denoted by grP, C, is the
program obtained from P by replacing every rule R
in P with the set of rules obtained by applying all
possible substitutions of variables in R with constants
in C.
Given an interpretation I of an alphabet of predicates A  A, and a ground program Pg over the
predicates in A, the projection of Pg with respect to I,
denoted by 	(Pg, I), is the ground program obtained
from Pg as follows. For each rule R  Pg:
 delete R if there exists an atom r(t) in the head of R
 delete each atom r(t) in the head of R such that r 
 delete R if there exists an atom r(t) in the body of R
 delete each atom r(t) in the body of R such that

such that r  A
and t  rI;

such that r  A
r  A
and t  rI;

and t  rI;

and t  rI;

Informally, the projection of Pg with respect to I
corresponds to evaluating Pg with respect to I, thus
eliminating from Pg every atom whose predicate is interpreted in I. Thus, when A = AP , all occurrences
of structural predicates are eliminated in the projection
of Pg with respect to I, according to the evaluation in
I of the atoms with structural predicates occurring in
Pg.
of the set of predicates A, we write I A I if (i) for each p  A, pI 
pI, and (ii) there exists p  A such that pI  pI. In
words, I A I if the extension of the predicates of A
in I is strictly larger than in I

Given two interpretations I, I


Given a ground Datalog

Given a positive ground Datalog

program P over
an alphabet of predicates AR and an interpretation I,
we say that I is a minimal model of P if I satisfies
FO(P) and there is no interpretation I
such that I
satisfies FO(P) and I AR I.


program P and an interpretation I for P, the GL-reduct [16] of P with respect
to I, denoted by GL(P, I), is the positive ground program obtained from P as follows. For each rule R  P:
(i) delete R if there exists a negated atom not r(t) in
the body of R such that t  rI; (ii) delete each negated
atom not r(t) in the body of R such that t  rI.

Given a ground Datalog

program P and an interpretation I, I is a stable model for P if I is a minimal
model of GL(P, I).


Definition 2. An interpretation I is a NM-model for
H = (T, P) if the following conditions hold:

1. IP satisfies T;
2. IR is a stable model for 	(grP, C, IP ).

H is called NM-satisfiable (or simply satisfiable) if H
has at least a NM-model.

Finally, we define skeptical entailment in r-hybrid KBs
under the nonmonotonic semantics, which is analogous
to the previous notion of entailment under the firstorder semantics. We say that a first-order sentence  
L is NM-entailed by H, denoted by H |=NM  if, for
each NM-model I of H, I satisfies .
In other words, the nonmonotonic semantics for a r-
hybrid KB H = (T, P) is obtained in the following way.
Take a first-order interpretation I = IP  IR such that
IP satisfies T; then, evaluate P in IP , obtaining the

program 	(gr(P, C), IP ); if IR is a stable model for
such a program, then I is a NM-model for H.


If the rule component

is a disjunctive positive
Datalog
program, then, from well-known results
for disjunctive Datalog [11], it follows that, for each
sentence , H |=NM  if T  FO(P) |=FOL . That
is, entailment under the first-order interpretation and
the DLP interpretation of the rule component coin-
cide. In contrast, the two interpretations differ in the
presence of negated atoms in the body of program
rules. However, it can be shown that satisfiability of
r-hybrid KBs under the first-order semantics can be reduced to satisfiability under the nonmonotonic seman-
tics. Indeed, let H = (T, P) and let P
be the program
obtained as follows: for every rule R of the form (1),
add to P
p1(X1)  . . .  pn(Xn)  u1(W1) . . .  uh(Wh)
 r1(Y1), . . . , rm(Ym), s1(Z1), . . . , sk(Zk)

the rule

From the first-order semantics of r-hybrid KBs defined
in Section 2.2, it follows that H is FOL-satisfiable
if H = (T, P
) is FOL-satisfiable; moreover, from
the above explained equivalence between the two semantics for disjunctive positive Datalog
programs,
it follows that H
is NM-
satisfiable.


is FOL-satisfiable if H

Therefore, in the rest of the paper, we study r-hybrid
KBs under the nonmonotonic semantics. In particular,
when we speak about satisfiability of r-hybrid KBs we
always mean satisfiability under the nonmonotonic se-
mantics.

We conclude the section with a simple example of

r-hybrid KB.

Example 3. Let H be the r-hybrid KB where the following structural component T defines an ontology
about persons:
x.PERSON(x)  y.FATHER(y, x) 
MALE(y)
x.MALE(x)  PERSON(x)
x.FEMALE(x)  PERSON(x)
x.FEMALE(x)  MALE(x)
MALE(bob)
PERSON(Mary)
PERSON(Paul)

R. Rosati / Web Semantics: Science, Services and Agents on the World Wide Web 3 (2005) 6173

and the rule component P defines nonmonotonic rules
about students, as follows:
boy(X)  enrolled(X, c1), PERSON(X),
not girl(X) [R1]
girl(X)  enrolled(X, c2), PERSON(X) [R2]
boy(X)  girl(X) 
enrolled(X, c3), PERSON(X) [R3]
FEMALE(X)  girl(X) [R4]
MALE(X)  boy(X) [R5]
enrolled(Paul,c1)
enrolled(Mary,c1)
enrolled(Mary,c2)
enrolled(Bob,c3)

It can be easily verified that all NM-models for H

satisfy the following ground atoms:
 boy(Paul) (since rule R1 is always applicable for
X = Paul and R1 acts like a default rule, which can
be read as follows: if X is a person enrolled in course
c1, then X is a boy, unless we know for sure that X
is a girl)
 girl(Mary) (since rule R2 is always applicable for
X = Mary)
 boy(Bob) (since rule R3 is always applicable for X =
Bob, and, by rule R4, the conclusion girl(Bob) is
inconsistent with T )

 MALE(Paul) (due to rule R5)
 FEMALE(Mary) (due to rule R4)
Notice that H |=NM FEMALE(Mary), while T |=FOL
FEMALE(Mary). In other words, adding a rule component has indeed an effect on the conclusions one can
draw about structural predicates. Moreover, such an
effect also holds under the first-order semantics of r-
hybrid KBs, since it can be immediately verified that
in this case H |=FOL FEMALE(Mary).

Among other things, the above example shows that,
in r-hybrid KBs, the information flow is bidirectional:
not only the structural component constrains the forms
of the stable models of the rule component (through
the structural predicates in the body of the rules), but
also vice versa, since the rule component imposes,
through the rules with structural predicates in the
head, constraints that the models of the structural
components must satisfy. Hence, the rule component

has an effect on the conclusions that can be drawn
from the structural component, since it filters out those
models IP of the structural component for which
the program 	(gr(P, C), IP ) has no stable models.
However, as will be clear in the next section, such
an effect on the structural component is limited to
a form of extensional knowledge (e.g., instance
assertions in Description Logics KBs), which does not
affect purely structural (intensional) knowledge (e.g.,
subsumption relationships).

3. Reasoning in r-hybrid KBs

In this section we study reasoning in r-hybrid KBs.
In particular, we study satisfiability of r-hybrid KBs,
which is the basic reasoning task: as in many other
logics, in r-hybrid KBs many important reasoning tasks
(e.g., skeptical entailment) can be easily reduced to
(un)satisfiability.

In the following, we first define an algorithm for
deciding satisfiability of r-hybrid KBs; then, based on
such an algorithm, we analyze decidability and complexity of reasoning in r-hybrid KBs, and examine in
particular the case when Description Logics are used
to specify the structural component of r-hybrid KBs.

3.1. The algorithm

In order to provide a reasoning method for r-hybrid

KBs, we give the following preliminary definitions.


First, given a Datalog

program P, we denote by
CP the set of constant symbols occurring in P, and denote by AP /P the set of predicates from AP occurring
in P.
Definition 4. Let H = (T, P) be a r-hybrid KB. The
grounding of the structural predicates in P, denoted
by grp(P) is the following set of ground atoms:
grp(P) = {m(t) | m  AP /P and m has arity k and t

is a k-tuple of constants of CP}

The idea behind the above definition is that, in the
case of r-hybrid KBs, grp(P) identifies the set of all the
relevant instantiations of the predicates in AP needed
to decide satisfiability of the rule component of the r-
hybrid KB H. In fact, due to the safeness condition in

the program rules, we can restrict the grounding of the
rules only to the instantiations which substitute each
variable with a symbol in CP: indeed, it can be immediately verified that the stable models of gr(P, AC)
and of gr(P, CP) coincide (notice that gr(P, CP) is the
standard grounding in Datalog, i.e., the grounding of
the program on the set of constants occurring in it).

Thus, we can divide the set of all interpretations
for T into equivalence classes, based on the way in
which such interpretations evaluate the ground atoms in
grp(P). Each such equivalence class can be represented
by a partition (GP , GN) of grp(P). More precisely, GP
is the set of ground atoms in grp(P) satisfied by the
interpretations in the equivalence class, while GN is
the set of atoms in grp(P) which are not satisfied by
such interpretations.

However, not all the partitions of grp(P) represent
a guess of the ground atoms that is compatible with the
KB T. The following definition formalizes the notion of
consistency of a partitions of ground atoms with respect
to T.

Definition 5. A partition (GP , GN) of grp(P) is consistent with T if the first-order theory
T  {m(t) | m(t)  GP}  {m(t) | m(t)  GN}

is satisfiable.

Informally, the above definition indicates that, if a
partition is consistent with T, then there exists at least
one interpretation that both satisfies T and evaluates the
atoms in grp(P) according to the partition (GP , GN).
We now define the notion of partition of ground

atoms induced by an interpretation.

Definition 6. Let I be an interpretation and Let
(GP , GN) be the partition of grp(P) such that, for each
r(t)  grp(P), t  rI if and only if r(t)  GP . We call
(GP , GN) the partition of grp(P) induced by I.

Finally, we denote by P(GP , GN) the Datalog

program
P(GP , GN) = P  GP  { r(t) | r(t)  GN}


We are now ready to define an algorithm for reasoning in r-hybrid KBs. In Fig. 1 we report the algorithm

Fig. 1. The algorithm R-Hybrid-Sat.

R-Hybrid-Sat for deciding satisfiability of a r-hybrid
KB H = (T, P). The algorithm formalizes the idea that
a way to decide satisfiability of H is to look for a partition of grp(P) that is consistent with T and such that
the program P(GP , GN) has a stable model.

3.2. Correctness

We now prove soundness and completeness of the
algorithm. In the following, we denote by IGP the interpretation of AP /P defined as follows: t  rIGP if
r(t)  GP . We first prove the following lemma.
Lemma 7. Let H = (T, P) be a r-hybrid KB, and
let I be an interpretation. IR is a stable model for
	(gr(P, C), IP ) if and only if IGP  IR is a stable
model for P(GP , GN).

to P(GP , GN),

Proof.
First, due to the safeness condition in
Definition 1, it can be easily verified that every interpretation is a stable model for 	(gr(P, C), IP ) if and
only if it is a stable model for 	(gr(P, CP), IP ).
Now let P = 	(gr(P, C), IP )  GP  { r(t) |
r(t)  GN}. It
is immediate to verify that P
is
equivalent
the
in the sense that
set of stable models of the two programs is the
same. Moreover, since 	(gr(P, C), IP ) does not contain occurrences of predicates of AP /P, it follows
is {IGP  I |
that the set of stable models of P
is a stable model for 	(gr(P, C), IP )}, which pro-

ves the thesis. 
Theorem 8. Let H = (T, P) be a r-hybrid KB. Then,
H is satisfiable if R-Hybrid-Sat (H) returns true.

R. Rosati / Web Semantics: Science, Services and Agents on the World Wide Web 3 (2005) 6173

() Suppose H is satisfiable. Then, there ex-
Proof.
ists an interpretation I such that I satisfies T and IR is
a stable model for 	(gr(P, C), IP ). Let (GP , GN) be
the partition of grp(P) induced by I: by Definition 6,
I satisfies{m(t) | m(t)  GP}  {m(t) | m(t)  GN}.
Since I also satisfies T, by Definition 5 it follows that
(GP , GN) is consistent with T. Moreover, by Lemma 7,
IGP  IR is a stable model for P(GP , GN). Therefore,
(GP , GN) satisfies both condition (a) and condition (b)
of the algorithm, hence R-Hybrid-Sat(H) returns true.
() Suppose R-Hybrid-Sat(H) returns true. Then,
by condition (a) of the algorithm, there exists a partition
(GP , GN) of grp(P) that is consistent with T, which
implies there exists an interpretation IP of AP such
that IP satisfies T and (GP , GN) is the partition of
grp(P) induced by IP . Moreover, by condition (b) of
the algorithm, the program P(GP , GN) has a stable
model. Let IGP  IR be such a model. By Lemma 7,
IR is a stable model for 	(gr(P, C), IP ). Now let I
be the interpretation obtained by composing IP and
IR, i.e., I is such that rI = rIP for every r  AP , and
rI = rIR for every r  AR. I satisfies both conditions
of Definition 2: consequently, H is satisfiable. 

3.3. Decidability and complexity

We now study decidability and complexity issues in

the framework of r-hybrid KBs.

We start by recalling a decidability and complexity

result for Datalog

programs.


Proposition 9 ([[11]]). Satisfiability of Datalog
programs is NEXPTIMENP -complete. Moreover, sat-

isfiability of Datalog
programs is NEXPTIME-
complete.


Then, since satisfiability of a Datalog

program P
can be trivially reduced to satisfiability of the r-hybrid
KB (, P), the following hardness result follows.
Lemma 10.
is
r-hybrid KBs
NEXPTIMENP -hard. Moreover, it is NEXPTIMEhard if the rule component is a Datalog

Satisfiability of

program.


We now prove a very general result on the decid-

ability of reasoning in r-hybrid KBs.
Theorem 11. Let H = (T, P) be a r-hybrid KB. If establishing consistency of a partition of grp(P) with T is

decidable, then satisfiability of H is a decidable prob-
lem.
Proof. First, observe that the set grp(P) is finite,
therefore the number of partitions of grp(P) is finite.
Then, since by hypothesis establishing consistency
of a partition (GP , GN) with T is decidable, for each
such partition (GP , GN) condition (a) of the algorithm
can be verified in a finite amount of time; moreover,
since P(GP , GN) is a finite Datalog
program,
from Proposition 9 it follows that condition (b) of the
algorithm can also be verified in a finite amount of
time. 


We remark that, starting from a logic L in which
reasoning is decidable, it is very often the case that deciding satisfiability of a theory of an L-KB augmented
with a finite set of ground literals is still decidable, and
therefore that reasoning in r-hybrid KBs made of L
theories as structural components is decidable. In this
sense, the previous theorem can be read as a very strong
result, stating that the framework of r-hybrid KBs generally preserves decidability of reasoning.

In this respect, we now analyze the case when the
structural language L is a description logic (DL) [5],
which is of particular interest, since Description Logics
are the subsets of first-order logic commonly used in
the Semantic Web to specify ontologies [22].

The language of DLs is a syntactic variant of a subset
of function-free first-order logic in which only unary
and binary predicates are allowed. Unary predicates
are called concepts, binary predicates are called roles.
Moreover, there are precise syntactic restrictions concerning the use of quantifiers and boolean connectives
in the logic.

Generally speaking, a DL defines a syntax for forming concept expressions and role expressions. Such a
syntax imposes a restriction on the use of boolean connectives and first-order quantifiers in the logic. Different DLs are obtained by imposing different restrictions
in the concept and role expressions allowed. A DL-KB
is typically constituted of a TBox and an ABox. A TBox
is a set of inclusion assertions, i.e., expressions of the
form C1  C2 or R1  R2, where C1, C2 are concept
expressions, and R1, R2 are role expressions. An assertion C1  C2 is semantically equivalent to a first-order
sentence of the form x.FOL(C1(x))  FOL(C2(x)),
where FOL(C(x)) is an open formula with free
variable x obtained by translating the concept

expression C to first-order logic [5]. Analogously, an
assertion R1  R2 corresponds to a first-order sentence x.FOL(R1(x, y))  FOL(R2(x, y)), where
FOL(R(x, y)) is an open formula with free variables
x, y obtained by translating the concept expression
R to first-order logic. An ABox is a set instance
assertions ground atoms of the form C(a), R(a, b),
where C is a concept name, R is a role name, and a, b
are constants (called individuals in DLs).

Now let us go back to the problem of reasoning in
DL-based r-hybrid KBs, in particular deciding the consistency of a partition of ground atoms (GP , GN) with
a DL-KB T: actually, the syntax of DL-KBs does not
immediately imply that the theory T  {m(t) | m(t) 
GP}  {m(t) | m(t)  GN} can be encoded in terms
of a DL-KB, since most DLs do not allow negation of
arbitrary ground atoms in the KB. However, recent results on boolean ABoxes [35,4] immediately imply that,
under general conditions, it is easy to (polynomially)
encode a set of ground literals in terms of an equivalent set of assertions allowed in the DL-KB. Therefore,
in such cases, extending a decidable DL by allowing
negated ground atoms in the ABox (in particular, the
negation of role instance assertions) preserves decidability of reasoning.

Moreover, since in almost all DLs only unary and
binary predicates are used, the size of grp(P) is at most
polynomial (quadratic) in the size of H. This allows us
to easily establish, through the algorithm R-Hybrid-
Sat, the computational characterization of reasoning in
DL-based r-hybrid KBs.

In particular, the DL that currently plays a central
role in the Semantic Web is SHOIN(D): as mentioned
in Section 1, it is equivalent to OWL-DL [32], which is a
W3C recommendation language for ontology representation in the Semantic Web. Reasoning in SHOIN(D),
and hence in OWL-DL, is decidable, as stated by the
following property.

Proposition 12 ([20,35]). Satisfiability of SHOIN(D)
KBs is NEXPTIME-complete.

We now prove that reasoning in SHOIN(D) r-
hybrid KBs is decidable, and provide a computational
characterization of the problem.
Theorem 13. Let H = (T, P) be a r-hybrid KB where
T is a SHOIN(D) KB and P is a Datalog
program.


Deciding satisfiability of H is NEXPTIMENP -
complete. Moreover, if P is a Datalog
program,
deciding satisfiability of H is NEXPTIME-complete.


Proof. Given a SHOIN(D) KB T, it can be immediately verified that a partition (GP , GN) is consistent
with T if and only if the SHOIN(D) KB
T = T  {C(a) | C(a)  GP}  {C(a) | C(a)  GN}

{R.{b}(a) | R(a, b)  GP}
{R.{b}(a) | R(a, b)  GN}


is satisfiable (see e.g., [31]). Observe that, since grp(P)
has size polynomial in the size of H, T
has also
size polynomial in the size of H. Consequently, from
Proposition 12, deciding satisfiability of T
(and hence
verifying condition (a) of the algorithm) is in NEXP-
TIME. Moreover, since grp(P) has size polynomial in
the size of H, the Datalog
program P(GP , GN) has
also size polynomial in the size of H. Consequently,
from Proposition 9 it follows that verifying condition
(b) of the algorithm is in NEXPTIMENP , and is in
NEXPTIME if P is a Datalog
program. Now, since
the algorithm R-Hybrid-Sat has to nondeterministically find a partition verifying condition (a) and condition (b), we immediately obtain an upper bound of

NEXPTIMENP , and of NEXPTIME if P is a Datalog
program. Then, since, in the two respective cases, by
Lemma 10 the problem is also hard with respect to such
complexity classes, the thesis follows. 


As a byproduct, the previous theorem closes an
open problem in [31], i.e., decidability of satisfiability
of SHOIN(D) with DL-safe rules, although under a
slightly different semantics (see the remark below).
This problem exactly corresponds in our framework to
deciding satisfiability of a r-hybrid KB composed of a
SHOIN(D) KB and a positive Datalog program: as a
corollary of the above results, it immediately follows
that satisfiability in such r-hybrid KBs is decidable
and is NEXPTIME-complete. Moreover, the previous
theorem not only shows that adding positive Datalog
programs (satisfying the safeness condition) to OWLDL preserves decidability, but also that we can further

extend the rule component language to Datalog

and that the overall complexity of reasoning is no
worse than reasoning in the rule component only.

R. Rosati / Web Semantics: Science, Services and Agents on the World Wide Web 3 (2005) 6173

Remark. We recall here that the semantics of r-hybrid
KBs is based on the standard names assumption, which
implies the unique name assumption over constants
(two distinct constants denote two different individ-
uals), as explained in Section 2.2. However, differently
from most DLs, in its original definition SHOIN(D)
does not adopt the unique name assumption. There-
fore, we point out that the above results concerning
SHOIN(D) hold for the version of this logic in which
the unique name assumption is adopted.

4. Related work

In this section we relate our approach to recent work
in integrating ontologies and rules. We divide such
studies in two main streams: (i) studies that deal with
forms of safe (or loose) interaction between the structural and the rule components, and hence close, at least
conceptually, to our proposal; (ii) studies concerning
forms of non-safe (or strict) interaction.

4.1. Safe interaction

The first formal proposal for the integration of
Description Logics and rules is AL-log [9]. AL-log
is a framework which integrates KBs expressed in the
description logic ALC and positive Datalog programs.
Then, disjunctive AL-log was proposed in [34] as an

extension of AL-log, based on the use of Datalog
instead of positive Datalog, and on the possibility
of using binary predicates (roles) besides unary
predicates (concepts) in rules. When choosing ALC
as the structural language, the framework of r-hybrid
KBs captures disjunctive AL-log and can be seen as a
generalization of it: indeed, differently from r-hybrid
KBs, in disjunctive AL-log structural predicates can
occur only in the bodies of rules, which restricts the
information flow only from the structural KB to the
rule KB, but not vice versa.

The framework of AL-log has been extended
in a different way in [31]. There, the problem of
extending OWL-DL with positive Datalog programs is
analyzed. The interaction between OWL-DL and rules
is restricted through a safeness condition which is
exactly the one adopted in r-hybrid KBs. With respect
to disjunctive AL-log,
in [31] a more expressive
structural language and a less expressive rule language

are adopted: moreover, the information flow is bidi-
rectional, i.e., structural predicates may appear in the
head of rules. As we have shown in Section 3, such a
framework is perfectly captured by r-hybrid KBs.

The work presented in [17] can also be seen as an
approach based on a form of safe interaction between
the structural DL-KB and the rules: in particular, a rule
language is defined such that it is possible to encode a
set of rules into a semantically equivalent DL-KB. As
a consequence, such a rule language is very restricted.
A different approach is presented in [19,18], which
proposes Conceptual Logic Programming (CLP), an

extension of answer set programming (i.e., Datalog

towards infinite domains. In order to keep reasoning de-
cidable, a syntactic restriction on CLP program rules
is imposed. This approach is related to integrating DLs
and rules, since the authors also show that CLPs can
embed expressive DL-KBs, which in turn implies decidability of adding CLP rules to such DLs. However,
the syntactic restriction on CLP rules, whose purpose is
to impose a forest-like structure to the models of the
program, is different from the safeness conditions analyzed so far, which makes it impossible to compare this
approach with r-hybrid KBs (and with the approaches
previously mentioned).

Another approach for extending DLs with Datalog
rules is presented in [13,14]. Differently from r-hybrid
KBs and from the other approaches above described,
this proposal allows for specifying in rule bodies
queries to the structural component, where every
query also allows for specifying an input from the rule
component, and thus for an information flow from
the rule component to the structural component. The
meaning of such queries in rule bodies is given at the
meta-level, through the notion of skeptical entailment
in the DL-KB. Thus, from the semantic viewpoint, this
form of interaction-via-entailment between the two
components is more restricted than in r-hybrid KBs
(and in the similar approaches previously mentioned);
on the other hand, such an increased separation in
principle allows for more modular reasoning methods,
which are able to completely separate reasoning about
the structural component and reasoning about the rule
component. However, in this paper we have shown
that an analogous form of modularization of reasoning
is possible also in the presence of a semantically richer
form of interaction between the two components of a
r-hybrid KB.

Finally, [2,1,3] present approaches for the combination of defeasible reasoning with Description Logics,
under a safe interaction-via-entailment scheme which
is semantically analogous to the one proposed in [13].
Besides the differences with our approach (and with
the studies on nonmonotonic extensions of DL-KBs
previously mentioned) concerning the semantics of
nonmonotonic rules, a main characteristic of these
proposals consists in the fact the information flow
is unidirectional,
it goes from the structural
component to the rule component.

i.e.,

4.2. Non-safe interaction

Research in non-safe interaction of DLs and rules
actually started with the work on carin [2527], which
established very important undecidability results concerning non-safe interaction between DL-KBs and
rules. Roughly speaking, such results clearly indicate
that, in case of unrestricted interaction between the
structural component and the rule component in hybrid
KBs, decidability of reasoning holds only if at least one
of the two component KBs has very limited expressive
power: e.g., in order to retain decidability of reasoning,
allowing recursion in the rule KB imposes very severe
restrictions on the expressiveness of the structural KB.
Then, we remark that query answering over a knowledge base can be seen as a problem of reasoning in a
hybrid KB in which the rule KB corresponds to the
query. In this respect, an important undecidability result concerning query answering over databases with
integrity constraints is reported in [7]. More precisely,
it is shown that answering recursive Datalog queries
over a database with simple integrity constraints (keys,
foreign keys), interpreted as a knowledge base, i.e.,
under an open-world assumption, is undecidable. This
setting also can be viewed as a hybrid KB with nonsafe interaction between a knowledge base (database
with integrity constraints) and a rule component (the
query).

Generally speaking,

to provide a
is difficult
it
good semantic account
for non-safe interaction
between DL-KBs and nonmonotonic rules, due to the
classical, open-world semantics of DL-KBs, and the
closed-world assumption underlying nonmonotonic
systems. For instance, [30] illustrates the problems in
providing a semantic account for non-safe interaction
of ontologies and Datalog

programs.


4.3. Comparison

Summarizing, what emerges from the studies in
hybrid KBs is that, while, on the one hand, a safe
form of interaction between structural and rule KBs
generally allows for decidable reasoning and nice
computational properties, on the other hand,
the
results concerning non-safe interaction indicate that
a tight connection between the two components can
only be obtained at the price of severely restricting the
expressive power of either the structural KB or the rule
KB.

In this respect, the major contribution of the present
work is the formal proof that the form of safe interaction introduced in [9] and extended in various forms by
[34,31] can be generally applied, and constitutes a good
choice for the design of integrated KBs when we want
to keep expressive power both in the structural component and in the rule component, and when decidability
and complexity of (sound and complete) reasoning is a
crucial aspect: indeed, in general, such safe interaction
preserves decidability of reasoning and, in many cases,
does not increase the complexity of reasoning, in the
sense that reasoning in the integrated KB is computationally no harder than reasoning separately in the two
components.

5. Conclusions

The results presented in this paper can be summa-

method for r-hybrid KBs;

grating ontologies and rules;

rized as follows:
 we have defined a very general framework for inte-
 we have defined a general, modular reasoning
 based on such a method, we have shown that the
safe combination of decidable first-order KBs
and Datalog
rules preserves decidability of
reasoning, under very general conditions. An analogous general property holds for the complexity of
reasoning in r-hybrid KBs;
 as a byproduct of our results, we have been able
to refine a decidability result in [31], and have
shown that extending OWL-DL with safe, positive
Datalog rules preserves decidability of reasoning.
Moreover, we have been able to further extend this


R. Rosati / Web Semantics: Science, Services and Agents on the World Wide Web 3 (2005) 6173

result, showing that reasoning in OWL-DL with
safe Datalog

rules is decidable.


As for future extensions of the present work, we
believe that the framework of r-hybrid KBs will prove
very useful both to provide a semantics to systems integrating ontologies (not necessarily expressed through
Description Logics) and nonmonotonic rules, and to
easily establish decidability and complexity results for
reasoning in such systems.

Also, it should be worth studying possible relaxations of the safeness condition in r-hybrid KBs. In
this respect, as mentioned in Section 4, a central issue
is defining a clear, satisfactory semantics for tightlycoupled hybrid KBs with nonmonotonic rules.

The semantic issue concerning the unique name assumption is also interesting (see Section 3.3). In par-
ticular, we believe that the framework of r-hybrid KBs
can be extended to deal with a different semantics in
which the unique name assumption does not hold.

Finally, it would be very interesting to study data
complexity in the framework of r-hybrid KBs, continuing the research presented in [6], which analyzes data
complexity for AL-log.

Acknowledgements

The author wishes to thank Diego Calvanese,
Maurizio Lenzerini and Daniele Nardi for helpful
discussions on this topic. The author is also thankful to
the anonymous reviewers for their precious comments.
This research has been partially supported by the
projects
INFOMIX (IST-2001-33570), SEWASIE
(IST-2001-34825) and INTEROP Network of Excellence (IST-508011) funded by the EU, by the
project Societ`a dellInformazione subproject SP1
Reti Internet: Efficienza, Integrazione e Sicurezza
funded by MIUR  Fondo Speciale per lo Sviluppo
della Ricerca di Interesse Strategico, and by project
HYPER, funded by IBM through a Shared University
Research (SUR) Award grant.
