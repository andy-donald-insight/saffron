Enriching an Ontology with Multilingual

Information

Mauricio Espinoza1, Asunci on G omez-P erez1, and Eduardo Mena2

1 UPM, Laboratorio de Inteligencia Artificial, 28660 Boadilla del Monte, Spain

asun@fi.upm.es, mespinoza@delicias.dia.fi.upm.es

2 IIS Department, Univ. of Zaragoza, Mar a de Luna 1, 50018 Zaragoza, Spain

emena@unizar.es

Abstract. Organizations working in a multilingual environment demand
multilingual ontologies. To solve this problem we propose LabelTransla-
tor, a system that automatically localizes ontologies. Ontology localization consists of adapting an ontology to a concrete language and cultural
community.

LabelTranslator takes as input an ontology whose labels are described
in a source natural language and obtains the most probable translation
into a target natural language of each ontology label. Our main contribution is the automatization of this process which reduces human efforts to
localize an ontology manually. First, our system uses a translation service
which obtains automatic translations of each ontology label (name of an
ontology term) from/into English, German, or Spanish by consulting different linguistic resources such as lexical databases, bilingual dictionaries,
and terminologies. Second, a ranking method is used to sort each ontology
label according to similarity with its lexical and semantic context.

The experiments performed in order to evaluate the quality of translation show that our approach is a good approximation to automatically
enrich an ontology with multilingual information.

Keywords: Ontology localization, Multilingual ontologies.

1 Introduction

The Semantic Web offers the most appropriate scenario for exploiting the potentialities of ontologies due to the large amount of information which is to be
exposed and accessed. However, most of the ontologies on the Web are in English
and although there are a few exceptions (like EuroWordNet [13]), it is necessary to guarantee that the same knowledge be recognizable in different natural
languages.

Currently, more and more organizations working in multilingual environments
demand ontologies supporting different natural languages. In the framework of
the NeOn project [7], all case studies have expressed the need for multilingual
ontologies. One case study is led by the Food and Agriculture Organization of
the United Nations (FAO), an international organization with a huge amount
of multilingual resources, some of them in more than ten languages. The second

S. Bechhofer et al.(Eds.): ESWC 2008, LNCS 5021, pp. 333347, 2008.
c Springer-Verlag Berlin Heidelberg 2008

M. Espinoza, A. G omez-P erez, and E. Mena

use case is concerned with the pharmaceutical industry in Spain, and requires
ontologies in the different languages spoken in the country. Consequently, the
inclusion of multilingual data in ontologies is not an option but a must.

In this paper we introduce LabelTranslator, a system that automatically localizes ontologies in English, Spanish and German. The Ontology Localization
Activity (OLA) consists of adapting an ontology to a concrete language and
culture community, as defined in [6]. We describe here the features and design
aspects of the current prototype of our system and discuss some of the innovations we are planning for a future prototype. LabelTranslator takes as input
an ontology whose labels are expressed in a source natural language, and obtains the most probable translation of each ontology label into a target natural
language.

The rest of this paper is as follows. In Section 2 we describe the main components of our approach. In Section 3 we show how the system obtains the translation of each ontology label from different linguistic resources. The translation
ranking method used to rank the translations of each ontology label according
to its context can be found in Section 4. Some experimental results are presented
in Section 5. Related work can be found in Section 6. Finally, conclusions and
future work appear in Section 7.

2 Overview of the System

As a motivating example, let us consider the extract of the sample university
ontology shown in Figure 1. Let us suppose that the user wants to translate the
term chair from English into Spanish. According to the domain of the sample
ontology, the correct translation of the selected term should be in the sense of
the position professor, nor in the sense of a place where one person can sit down
and nor an instrument of execution by electrocution, etc.

Employee (name, salary)

Faculty

Legend

subClassOf

Professor (researchInterest)

Lecturer

AdministrativeStaff

AsociateProfessor

Chair

Dean

Director

SystemsStaff

Fig. 1. Extract of the sample university ontology

In the following, we first show the main components of our system and then

we describe how these components with interact each other.

2.1 Structural Overview

There are three important aspects to be considered to automatically localize
monolingual ontologies to other natural languages and to allow users to access
to multilingual information: 1) obtaining the possible translations for ontology
?

?

?
labels, 2) disambiguating label senses, and 3) ranking translations. Certainly, all
multilingual results have to be appropriately stored and presented to the user.
Figure 2 shows the main components of our system and illustrates the process
for enriching an ontology with linguistic information:

Fig. 2. Main components of LabelTranslator plug-in

 GUI component: This component controls the GUI in order to show the
multilingual results appropriately. Once invoked, LabelTranslator uses some
views1 of the Neon ToolKit to load the ontology and store the multilingual
results respectively. Due to space limitations, the user interfaces used by our
system are not shown here, but can be found in [4].

 Ontology Localization Component: This component is responsible of
obtaining the most probable translation for each ontology label. It relies on
two advanced modules. The first, translation service, automatically obtains
the different possible translations of an ontology label by accessing to different linguistic resources. This service also uses a compositional method
in order to translate compound labels (multi-word labels). A more detailed
description of the translation service can be found in Section 3.
The second module, translation ranking, sorts the different translations according to the similarity with its lexical and semantic context. The method
relies on a relatedness measure based on glosses to disambiguate the trans-
lations. This is done by comparing the senses associated to each possible
translation and their context. More details about the ranking method can
be found in Section 4.

 Repository Component: This component captures all the linguistic information associated with concepts. LabelTranslator supports the linguistic
model [10] designed for the representation of multilingual information in on-
tologies. In the current version of our system, the link we establish between
1 In the NeOn ToolKit a view is typically used to navigate a hierarchy of information,

open an editor, or display properties for the active editor.

M. Espinoza, A. G omez-P erez, and E. Mena

the terms in the ontology and their associated translations is characterized
by simple references between concepts and labels (as offered by the standard
owl:comment and rdfs:label properties). The representation of the multilingual information obtained by our tool is out of scope of this paper, however,
a detailed description of this multilingual model can be found in [10].

The current version of LabelTranslator has been implemented as a NeOn plug-in,
but it can easily become an independent module, for example a web service.

2.2 Functional Overview

This section briefly describe the interaction of the components shown in the
Figure 2. A more detailed description of the execution process of our system can
be found in [4]. The main activities can be summarized as follows:
1. the user chooses the label of the ontology term(s) to be translated.
2. the translation service access bilingual or multilingual linguistic resources to

look for the possible translations of the selected label(s).

3. the ranking method compares the obtained translation possibilities against

the label(s) in the original language and its ontological context.

4. the user confirms the translation proposed by the ranking method, or he/she

chooses the translation that better fits in the ontological context.

5. the system updates the ontology model with the selected translation(s) and

additional linguistic information.

6. finally, the linguistic information associated with ontology term(s) is shown

to the user.

More details on the features of the ontology localization component, are given in
the following sections.

3 Translation Service

In this section we provide the details that show how the system obtains the different translations of an ontology label (which can name different kinds of ontology
terms: concepts, properties or relations) using different linguistic resources.
The translation service takes as input an ontology label l described in a source
language and returns a set of possible translations T = {t1, t2, ..., tn} in a target
language. The current prototype supports translations among English, Spanish,
and German. In order to discover the translations of each ontology label, the
system accesses different lexical resources: 1) remote lexical databases as EuroWordNet [13], 2) multilingual dictionaries as GoogleTranslate2, Wiktionary3,
Babelfish4, and FreeTranslation5, and 3) other lexical resources as IATE6. A
cache stores previously translations to avoid accessing the same data twice.
2 http://www.google.com/translate t
3 http://en.wiktionary.org/wiki/
4 http://babelfish.altavista.com/
5 http://ets.freetranslation.com
6 http://iate.europa.eu/iatediff/SearchByQueryLoad.do?method=load
?

?

?
The algorithm used by the translation service is summarized in the follow-
ing: 1) If the selected ontology label is already available in the target language in
our cache, then LabelTranslator just displays it, with all the relevant available
information, 2) If the translation is not stored locally, then it accesses remote
repositories to retrieve possible translations. A compositional method may be
needed to translate compound labels (explained in the Section 3.2). If no results
are obtained from the two previous steps, then the user can enter his/her own
translation (together with the definition).
In our approach, the translation of an ontology label denoted by t, is a tuple
trs, senses, where trs is translated label in the specific target language, and
senses is a list of semantic senses extracted from different knowledge pools. In
the following we briefly describe the task of automatically retrieving the possible
semantic senses of a translated label.

3.1 Semantically Representating a Sense

In order to discover the senses of each translated label (ti), we have considered
the approach proposed in a previous work [12]. Our system takes as input a
list of words (each ti), discovers their semantics in run-time and obtains a list of
senses extracted from different ontology pools; it deals with the possible semantic
overlapping among senses. We summarize here the key characteristic of the sense
discovering process:

1. To discover the semantic of the input words, the system relies on a pool of

ontologies instead of just a single ontology.

2. The system builds a sense (meaning) with the information retrieved from

matching terms in the ontology pool.

3. Each sense is represented as a tuple sk = <s, grph, descr>, where s is the
list of synonym names7 of word k, grph describes the sense sk by means of
the hierarchical graph of hypernyms and hyponyms of synonym terms found
in one or more ontologies, and descr is a description in natural language of
such a sense.

4. As matching terms could be ontology classes, properties or individuals, three
and

lists of possible senses are associated with each word k: Sclass
Sindv

, Sprop

k

k

5. Each word sense is enhanced incrementally with the synonym senses (which

.

k

also searches the ontology pool).

6. A sense alignment process integrates the word sense with those synonym
senses representing the same semantics, and discards the synonym senses
that do not enrich the word sense.

A more detailed description of this process can be found in [12]. In order to
perform cross-language sense translations, the external resources are limited to
those resources that have multilingual information like EuroWordNet; however

7 The system extracts the synonym names of a term by consulting the synonym

relationships defined in the ontology of such a term.

M. Espinoza, A. G omez-P erez, and E. Mena

other resources can be used too. For example, a specific domain resource for the
FAO (Food and Agricultural Organization) is Agrovoc8, which could cover the
vocabulary missed in EuroWordNet. The multilingual retrieval of a word sense
(synset) in EuroWordNet is done by means of the InterlingualIndex (ILI), that
serves as a link among the different wordnets. For example, when a synset, e.g.
chair with the meaning the position professor, is retrieved from the English
wordnet, its synset ID is mapped through the ILI to the synsets IDs of the same
concept in the different languages-dependent wordnets,(German, Spanish, etc.)
that describe the same concept, but naturally contain the word description in its
specific language. A similar retrieval process is used in the case of multilingual
ontologies, but using the references between concepts and labels as offered by
the standard owl:comment and rdfs:label properties.

Coming back to the example of section 3, in Figure 3 we show the translations
of the ontology label chair from English into Spanish; our prototype finds eight
translations, but due to space limitations we only show three. Notice that t3 has
the desired semantics according to the similarity with the lexical and semantic
ontology context (see figure 1 in section 2).

Fig. 3. Some translations of the ontology label chair into Spanish

3.2 Compositional Method to Translate Compound Labels

Compound labels which have an entry in linguistic ontologies such as EuroWordNet [13] (for example jet lag, travel agent and bed and breakfast) are
treated in our system as single words. Others like railroad transportation,
which have no entry in the previous resources, are translated using a compositional method. This method split the label into tokens (railroad and

8 http://www.fao.org/aims/ag download.htm
?

?

?
transportation in the example); the individual components are translated and
then combined into a compound label in the target language. Care is taken to
combine the components respecting the word order of the target language. A
set of lexical templates derived from different ontologies are used to control the
order of translation. The main steps of the algorithm are:

1. The compound label is normalized, e.g., rewriting in lowercase, hyphens are

2. A set of possible translations is obtained for each token of the compound

removed, it is split into tokens, etc.

label using the translation service.

3. Since translations between languages do not keep the same word order, the
algorithm creates candidate translations in the target language using lexical
templates9. Each lexical template contains at least a pair of patterns, namely
source and target patterns. A source pattern is a template to be compared
with the tagged compound label 10, described in the source language, while
the target pattern is used to generate the label in the target language. If
no applicable template is found, the compound label is translated using the
translation service directly.

4. All the candidate labels that fulfill the target pattern are returned as candi-

date translations of the compound label.

The senses of each candidate translation are discovered using the sense discovering process described in the section 3.1. If not results are obtained, the method
tries to discover the senses of each token separately.

In the following we describe the process to learn the lexical templates used to

control the order of translation of compound labels.

Learning Lexical Templates from Ontological Labels

We believe that lexical templates used to translate compound labels are a necessary component to produce high quality translations because 1) it guarantees
grammatical output and, 2) it makes sure that the structural source language
meaning is preserved. In our approach, we used a semi-automatic process to
obtain the lexical templates. As we explained before, each lexical template is
composed of source and target patterns. The ontology labels used to learn the
source patterns were extracted from different domain ontologies expressed in
English, German, or Spanish. Each label was tokenized and tagged using the
language independent part-of-speech tagger proposed in [11]. On the other hand,
the labels used to learn the target patterns were extracted either from the multilingual information associated with each ontological term or by means of a
manual translation process. The same process used to annotate part of speech
(POS) in the labels of the source patterns was used to annotate the labels of

9 The notion of lexical template proposed in this paper refers to text correlations found

between a pair of languages.

10 We use TreeTagger [11] in order to annotate the compound labels with part-of-speech

and lemma information.

M. Espinoza, A. G omez-P erez, and E. Mena

Table 1. Some lexical templates to translate a compound label from English into
Spanish

Templates (4/25)
[J1 N2]en[N2 J1]es

Samples of source and target patterns

English

Spanish

[N1 N2]en[N2preN1]es

spatial region
industrial product
natural hazard
transport vehicle
veh culo de transporte
knowledge domain dominio del conocimiento
research exploration exploraci on de la investigaci on
[J1 VB2]en[VB2preJ1]es
remote sensing
[J1N2N3]en[N2preN3 J1]es associated knowledge

dominio de conocimiento

detecci on remota;

detecci on a distancia

regi on espacial

producto industrial

peligro natural

domain

asociado

J: adjective; N: noun; VB: verb

the target patterns. The empirical results collected during the learning of lexical
templates are briefly described below:
 Existing ontologies share the same lexical patterns. For instance, approximately 60% of the labels that describe an ontological concept makes use
of an adjective followed by a noun (e.g. spatial region, industrial product,
natural hazard, etc.). Other labels use as lexical pattern ( 30%) a noun
followed by another noun (e.g., transport vehicle, knowledge domain, etc.).
 Ontology labels usually have less than four tokens. Approximately 85% of
labels fulfill this. Thus, for the current prototype we only focus on the definition of lexical templates for compound labels of two o three tokens.

A repository is used to store all the lexical templates obtained for each pair of
languages. Due to space limitations, in Table 1 we show only a sample list of the
lexical templates learned to translate compound labels from English into Spanish.
As an illustrating example of the compositional method, we show in Figure 4
the steps of the algorithm when collecting Spanish translations for the English
compound label AssociateProfessor, which was introduced in our motivating
example (see Figure 1). Our prototype finds ten translations for the token asso-
ciate and one for professor (normalized in the first step). In the next step, our
tool searches a lexical template (in our repository) to create candidate transla-
tions. In the template found, [J1 N2]en represents the source pattern in English
whilst [N2 J1]es represents the target pattern in Spanish. In both cases, numbers represent the position of each token of the compound label. Notice that, in
the last step the candidate translations profesor socio (professor member) and
profesor compa nero (professor mat) are discarded because they do not fulfill
the target pattern.

4 Translation Ranking Method

In this section we explain the ranking method, which sorts the list of translations
according to similarity with the context of the label to be translated. The method
?

?

?
AssociateProfessor

Step 1: Ontology Label Normalization

associate professor

Step 2: Obtain EnglishSpanish translations

(using Translation service)

some translations of "associate" (4/10)

translations of  "professor" (1/1)

socio (partner)
asociado (having partial rights and privileges)
vinculado (having a logical or causal connection)
companero (mate)

profesor (professor)

Step 3: Creating translations into Spanish

using Lexical Templates

Lexical Template for "associate professor":  [J1 N2]en[N2 J1]es

Source Pattern

some Candidate Translations (4/10)

Target Pattern

J  : adjective
N : noun

[J1 N2]en

profesor socio (professor member)
profesor asociado (associate professor)
profesor vinculado (connected profesor)
profesor companero (professor mat)

[N2 N1]es
[N2 J1]es
[N2 J1]es
[N2 N1]es

Step 4: Select candidate translations

profesor asociado (associate professor)
profesor vinculado (connected professor)

Fig. 4. Algorithm to translate the compound label AssociateProfessor into Spanish

takes as input the set of translations T obtained in the previous step. From
this set of translations, the ranking method uses a disambiguation algorithm
described in [9] to sort the translations. Once all the translations are ranked, the
method allows two operation modes:
 Semi-automatic mode: It shows a list with all the possible translations sorted
decreasingly. The method proposes the most relevant translation to be selected first although the user can change this default selection.

 Automatic mode: It automatically selects the translation with the highest

score.

Next, we first describe how the system obtains the context of each ontology label,
and then we describe the disambiguation algorithm used to sort the translations
according to similarity with their context.

4.1 Determining the Context of an Ontology Term

We defined context as the information/knowledge that can be used additionally
to perform some task. In our approach, the context of an ontology term is used to
disambiguate the lexical meaning of a ontology term. To determine the context of
an ontology term, the system retrieves the labels of the set of terms associated
with the term under consideration. The list of context labels, denoted by C,
comprises a set of names which can be direct label names and/or attributes
label names, depending on the type of term that is being translated.

In order to mitigate risks associated with system performance, the ranking
method limits the number of context labels used to disambiguate the translated

M. Espinoza, A. G omez-P erez, and E. Mena

label. Every context label c  C is compared with the ontology label l using a
measure based on Normalized Google Distance [1] (NGD). NGD measures the
semantic relatedness between any two terms, considering the relative frequency
in which two terms appear in the Web within the same documents. Those labels
with the higher values of similarity are chosen (maximum 3). To discover the
senses of each context label (denoted by Sc), the system performs the same
process used to discover the senses of each translated label (as explained in the
previous section).

In Figure 5, on the left, the dashed area represents all the context labels
found for the ontology label chair. Our prototype finds five labels, but only
selects three (see the dotted area) to disambiguate the term. In the table on the
right, we show for each type of ontology term (concept, attribute, or relation)
the context labels that could be extracted. For instance, for the concept chair
the system retrieves its hypernyms, hyponyms, attributes, and sibling concepts.

Fig. 5. Context of the ontology label chair

4.2 Disambiguating the Senses of the Translations

In some works [8,9] the glosses are considered as a very promising means of
measuring relatedness, since they can be used: 1) to make comparisons between
concepts semantically different, and 2) to discover relations of which no trace is
present in the resource they come from. For the current version of the prototype,
the ranking method relies on a measure based on glosses proposed in [9] to
sort the translations according to their context. However, we recognize that
glosses are by necessity short and may not provide sufficient information on
their own to make judgments about relatedness. Therefore, we make use of the
hierarchical graph of the sense to extend the gloss with the relatedness glosses
of their ontological terms.

We carry out disambiguation in relation to the senses of each translated label
and the senses of the context labels. In the following we describe the method:
let us suppose that the ontology label l after executing the translation process
?

?

?
has yielded n translations: T = {t1, t2, ..., tn}. For each translation the system
retrieves its corresponding senses, for example the first translated label (t1) to
be disambiguated has n senses St1 = {s1
}. We use the notation T SC
(translation sense collection) in order to group the senses of all translated labels.

, ..., sn
t1

, s2
t1

t1

T SC = {St1

 St2

 ...  Stn

}

where Stj , tj  T , represents all senses corresponding to jth translated label.

Now, suppose that the ontology label l has the context C which comprises
several labels: c1, c2, c3. Each of these context labels has a list of corresponding
}. We use the notation
senses, for instance, ci has m senses: Sci = {s1
CSC (context sense collection) in order to group the senses of each context label.

, ..., sn
cm

, s2
ci

ci

CSC = {Sc1

 Sc2

 Sc3

}

where Scj , cj  C, represents all senses corresponding to jth context label.

The goal of the disambiguation algorithm is to select one of the senses from
the set T SC as the most appropriate sense of the translation of label l. The
algorithm performs word sense disambiguation by using a measure of semantic
relatedness that is given by:

max

|T SC|
j=1

(SenseScore(T SCj, CSC))

where T SCj is the representation of one of the senses of each translated label.
The chosen sense is the one with the greater value of SenseScore, defined as:

SenseScore(T SCj, CSC) =

|CSC|

k=1

(Similarity(T SCj, CSCk))

where CSCk is the representation of each sense of the different context labels.
In order to compute the similarity between the senses of each context and
the translated label, the method applies an overlap scoring mechanism. Details
about this process are available in [9] as it is not the main goal of this paper.

In our example, c atedra (cathedra) in the sense of the position of profes-
sor is ranked as first translation of the ontology label chair. Once the right
sense has been selected, the system updates the linguistic information of the
corresponding ontological term.

5 Experimental Evaluation

The ontology corpus used for the evaluation was selected from the set of KnowledgeWeb [2] ontologies used to manage EU projects. The corpus statistics are
given in Table 2. In order to illustrate the utility of the tool to a broad community of ontology users, we are working in the evaluation of prominent ontologies
such as those used in the use cases the NeOn project. The results obtained are
ongoing work.

M. Espinoza, A. G omez-P erez, and E. Mena

Table 2. Ontologies corpus statistics

Ontology Domain Number of Ontological Terms % Compound labels
concepts attributes relations 3 tokens >3 tokens

Documentation-Meeting

Person&Project

Organization

Office

University
?

?

?
44%
47.2%
46.4%
12.5%
17.3%

25.6%
10.9%
7.1%
0%
0%

5.1 Experimental Results

The goal of the experiments is to evaluate some aspects of the translation ranking method (described in Section 4) which tries to select the most appropriate
translation for each ontology label. In particular, we evaluated three aspects of
the algorithm 1) the quality of the output when the algorithm automatically
suggest an translation, 2) the quality of all the set of translations, and 3) the
quality of translation of the compound labels.

The manual evaluation that we decided to apply was done by Spanish speakers
with a good level of English. In all the experiments a reference translation (gold
standard) provided by the evaluators was used. The gold standard allows
users to compare the quality of the translations provided by an expert with the
translations provided by the algorithm. Next, we give a short overview of each
experiment and show the obtained results.
Experiment 1: Accuracy. In order to evaluate the quality of the output of the
ranking method in automatic operation mode we propose a measure of accuracy.
The accuracy measures the capacity of the algorithm of translation to get in
an automatic way a correct translation according to context. To measure the
accuracy of the algorithm, we counted the number of times the first translation
was correct.
Experiment 2: Precision and Recall. The previous evaluation does not allow checking the completeness of the translations since it does not observe the
behavior of all the translated labels. Thus, we have measured precision as the
number of correct translations of all the translations provided by the system and
divided by the total number of translations provided by the system. To measure
the recall, we divided the number of correct translations of all the translations
provided by the system into the number of correct translations (provided by the
gold standard).
Experiment 3: Adequacy and Fluency. In order to measure the quality of
the translation of compound labels we propose a subjective 1-5 score for adequacy and fluency. The adequacy measures the capability of the translation
algorithm to determinate the quantity in which the meaning of a correct translation is preserved. On the other hand, the fluency measures the capability of the
algorithm to determine how good the corresponding language is. In this experi-
ment, each evaluator assigned fluency and adequacy ratings for each translated
?

?

?
Table 3. Results obtained in the three experiments

Ontology Domain

Documentation
Person&Project
Organization
Office
University

Spanish

German

Accu. Prec. Rec. Adeq. Flu. Accu. Prec. Rec. Adeq. Flu.
0.51
0.73
0.81
0.79
0.80

0.47 0.39 68% 75% -
0.35 0.81 89% 93% -
0.41 0.78 87% 95% 0.73
0.49 0.77 93% 95% 0.78
0.36 0.87 96% 93% 0.71

0.33 0.64 73% 69%
0.34 0.74 67% 76%
0.23 0.71 69% 73%

-
-

-
-

-
-

-
-

label. Each score ranges from one to five (with one being the poorest grade and
five the highest). The adequacy and fluency scores of two evaluators for each
sentence were averaged together, and an overall average adequacy and average
fluency score was calculated for each evaluated ontology.

In Table 3 we show the results achieved by the prototype in each experiment.
The values are organized by target language. All the percentages of adequacy
and fluency shown in this table correspond to those translations punctuated with
a value greater than 4. The experimental results show that our system is a good
approximation to enhance the linguistic expressivity of existing ontologies. For
example, in average our system suggest the correct translation 72% of the times.
Also, the values of recall suggest that a high percentage of correct translations are
part of the final translations shown to the user in the semi-automatic operation
mode. Moreover, the obtained results in each metric help us to analyze which
components need improvement. The main limitations discovered are:

 Translation service is highly dependent on the types of resources used and
their domain coverage. The worst values of precision and recall were obtained by the documentation ontology, because the domain of this ontology
is covered by the resources used for the translation only partially.

 The lack of learning of new lexical patterns limits the scalability of our tool. The
percentages of adequacy and fluency obtained for English-German compound
label translations are in general lower than the percentages of the EnglishSpanish ones. Our explication is that a major effort was put (in the current ver-
sion) for the learning of templates between English-Spanish languages. How-
ever, this situation can be improved by allowing users to provide, in runtime,
new lexical templates when these do not exist yet in any repository.

6 Related Work

Our work enhances the work presented in [3], where a system for supporting the
multilingual extension of ontologies expressed in just one natural language was
proposed. This tool is used to support the supervised translation of ontology
labels. Therefore, the tool offers a semi-automatic strategy. In our approach
we have implemented an automatic method to reduce human intervention while
enriching an ontology with linguistic information.

M. Espinoza, A. G omez-P erez, and E. Mena

In [8] they propose a framework for adding linguistic expressivity to conceptual
knowledge, as represented in ontologies. They use two lexical resources for the
linguistic or multilingual enrichment; WordNet, for the linguistic enrichment of
ontologies with English labels, and DICT dictionaries, for the linguistic and
multilingual enrichment of ontologies. In this work, they do not describe the
process to translate compound ontology labels, which are often not contained in
linguistic ontologies as WordNet. In our work, we use a compositional method
which first searches for translation candidates of a compound label and then
builds the translations for the candidates using lexical templates.

In [5] a method to give support to multilingual ontology engineering is devel-
oped. In this work some software tools have been used for supporting the process
of term extraction and translation. In particular the translation process requires
sentence aligned parallel text, tokenized, tagged and lemmatized. In our opinion,
obtaining a corpus aligned is not a simple task. Unlike this work, we rely on some
multilingual translation services and extend them by using lexical templates.

7 Conclusions and Future Work
In this paper we have presented LabelTranslator, a system that automatically
localize ontologies, providing translations across different natural languages. The
main features of this tool are the following:
1. It uses a translation mining service to obtain from different linguistic resources the possible translations of each ontological label. A compound label
is translated using a compositional method that searches candidate translations of each lexical component and then builds a translation using lexical
templates.

2. It uses a disambiguation method that ranks the possible translations of each
ontology label. A gloss overlap scoring mechanism is used to calculate the
similarity between two senses.

The experimental results obtained encourage us to tackle further improvements
and tests on our system.

Acknowledgements

This work is supported by the European Commissions Sixth Framework Program under the project name: Lyfecycle support for networked ontologies (NeOn)
(FP6-027595), the National Project GeoBuddies (TSI2007-65677C02), and the
spanish CICYT project TIN2007-68091-C02-02.
