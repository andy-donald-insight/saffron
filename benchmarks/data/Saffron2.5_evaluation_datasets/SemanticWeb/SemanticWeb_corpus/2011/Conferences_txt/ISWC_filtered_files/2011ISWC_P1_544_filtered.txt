Encyclopedic Knowledge Patterns from

Wikipedia Links

Andrea Giovanni Nuzzolese1,2, Aldo Gangemi1,

Valentina Presutti1, and Paolo Ciancarini1,2

1 STLab-ISTC Consiglio Nazionale delle Ricerche, Rome, Italy

2 Dipartimento di Scienze dellInformazione, Universit`a di Bologna, Italy

Abstract. What is the most intuitive way of organizing concepts for describing things? What are the most relevant types of things that people
use for describing other things? Wikipedia and Linked Data offer knowledge engineering researchers a chance to empirically identifying invariances in conceptual organization of knowledge i.e. knowledge patterns.
In this paper, we present a resource of Encyclopedic Knowledge Patterns that have been discovered by analyizing the Wikipedia page links
dataset, describe their evaluation with a user study, and discuss why it
enables a number of research directions contributing to the realization
of a meaningful Semantic Web.

1 Introduction

The realization of the Web of Data (aka Semantic Web) partly depends on the
ability to make meaningful knowledge representation and reasoning. Elsewhere
[5] we have introduced a vision of a pattern science for the Semantic Web as
the means for achieving this goal. Such a science envisions the study of, and
experimentation with, knowledge patterns (KP): small, well connected units of
meaning which are 1) task-based, 2) well-grounded, and 3) cognitively sound.
The first requirement comes from the ability of associating ontology vocabularies or schemas with explicit tasks, often called competency questions [7]: if
a schema is able to answer a typical question an expert or user would like to
make, it is a useful schema. The second requirement is related to the ability of
ontologies to enable access to large data (which typically makes them successful)
as well as being grounded in textual documents so as to support semantic technology applications that hybridize RDF data and textual documents. The third
requirement comes from the expectation that schemas that more closely mirror
the human ways of organizing knowledge are better. Unfortunately, evidence for
this expectation is only episodic until now for RDF or OWL vocabularies [5].

Linked data and social web sources such as Wikipedia give us the chance to
empirically study what are the patterns in organizing and representing knowledge i.e. knowledge patterns. KPs can be used for evaluating existing methods
and models that were traditionally developed with a top-down approach, and
open new research directions towards new reasoning procedures that better fit

L. Aroyo et al. (Eds.): ISWC 2011, Part I, LNCS 7031, pp. 520536, 2011.
c Springer-Verlag Berlin Heidelberg 2011
?

?

?
the actual Semantic Web applications need. In this study, we identify a set of
invariances from a practical, crowd-sourced repository of knowledge: Wikipedia
page links (wikilinks), which satisfy those three requirements, hence constituting
good candidates as KPs. We call them Encyclopedic Knowledge Patterns (EKP)
for emphasizing that they are grounded in encyclopedic knowledge expressed as
linked data, i.e. DBpedia1, and as natural language text, i.e. Wikipedia2. We
have collected such set of EKPs in an open repository3. EKPs are able to answer the following (generic) competency question:

What are the most relevant entity types that provide an effective and
intuitive description of entities of a certain type?

For example, when describing Italy (a country), we typically indicate its neighbor countries, cities, administrative regions, spoken languages, etc. The EKP for
describing countries should then include such a set of entity types: the most
relevant for describing a country. We assume EKPs as cognitively sound because
they emerge from the largest existing multi-domain knowledge source, collaboratively built by humans with an encyclopedic task in mind. This assumption is
bound to our working hypothesis about the process of knowledge construction
realized by the Wikipedia crowds: each article is linked to other articles when
explaining or describing the entity referred to by the article. Therefore, the arti-
cles main subject can be said to be soundly and centrally related to the linked
articles main subjects. DBpedia, accordingly with this intuition, has rdf-ized
a) the subjects referred to by articles as resources, b) the wikilinks as relations
between those resources, and c) the types of the resources as OWL classes.

Hypotheses. Assuming that the articles linked from a Wikipedia page constitute a major source of descriptive knowledge for the subject of that page, we
hypothesize that (i) the types of linked resources that occur most often for a
certain type of resource constitute its EKP (i.e., the most relevant concepts to
be used for describing resources of that type), and (ii) since we expect that any
cognitive invariance in explaining/describing things is reflected in the wikilink
graph, discovered EKPs are cognitively sound.

Contribution. The contribution of this paper is twofold: (i) we define an EKP
discovery procedure, extract 184 EKPs, and publish them in OWL2 (ii) we
support our hypotheses through a user-based evaluation, and discuss a number
of research directions opened by our findings.

The paper is organized as follows: Section 2 discusses related work, Section 3
describes the resources we have used and the basic assumptions we have made,
Section 4 focuses on the results we have gathered, Section 5 presents a user study
for the evaluation and fine-tuning of EKPs, and Section 6 draws conclusions and
gives an overview of research directions we are concentrating upon.

http://dbpedia.org
http://en.wikipedia.org

3 The EKP repository is available at http://stlab.istc.cnr.it/stlab/WikiLinkPatterns

A.G. Nuzzolese et al.

2 Related Work

To the best of our knowledge this work is the first attempt to extract knowledge
patterns (KPs) from linked data. Nevertheless, there is valuable research on
exploiting Wikipedia as a knowledge resource as well as on creating knowledge
patterns.
Knowledge patterns. [5] argues that KPs are basic elements of the Semantic
Web as an empirical science, which is the vision motivating our work. [4,16]
present experimental studies on KPs, focusing on their creation and usage for
supporting ontology design with shared good practices. Such KPs are usually
stored in online repositories4. Contrary to what we present in this work, KPs
are typically defined with a top-down approach, from practical experience in
knowledge engineering projects, or extracted from existing, e.g. foundational,
ontologies. These KPs are close to EKPs, but although some user-study proved
that their use is beneficial in ontology design [3], yet they miss some of the aspects
that we study here: evaluation of their cognitive soundness, and adequacy to
provide access to large-scale linked data. [14] presents a resource of KPs derived
from a lexical resource i.e., FrameNet [2]. In future work, we plan a compared
analysis between EKPs and other KPs.
Building the web of data. Research focusing on feeding the Web of Data is
typically centered on extracting knowledge from structured sources and transforming it into linked data. Notably, [8] describes how DBpedia is extracted from
Wikipedia, and its linking to other Web datasets.

Another perspective is to apply knowledge engineering principles to linked
data in order to improve its quality. [18] presents YAGO, an ontology extracted
from Wikipedia categories and infoboxes that has been combined with taxonomic
relations from WordNet. Here the approach can be described as a reengineering task for transforming a thesaurus, i.e. Wikipedia category taxonomy, to an
ontology, which required accurate ontological analysis.
Extracting knowledge from wikipedia. Wikipedia is now largely used as a
reference source of knowledge for empirical research. Research work from the
NLP community, e.g., [20,9,15], exploits it as background knowledge for increasing the performance of algorithms addressing specific tasks. Two approaches are
close to ours. [6] presents a method for inducing thesauri from Wikipedia by
exploiting the structure of incoming wikilinks. The graph of wikilinks is used
for identifying meaningful terms in the linked pages. In contrast, in our case we
exploit outgoing wikilinks, as well as the full potential of the linked data semantic graph for identifying semantic entities as opposed to terms. [19] presents a
statistical approach for the induction of expressive schemas for RDF data. Similarly to our study, the result is an OWL ontology, while in our experiment we
extract novel schemas from wikilink structures that are encoded in RDF. Some
studies have produced reusable results for improving the quality of the Web of

4 E.g. the ontology design patterns semantic portal,

http://www.ontologydesignpatterns.org
?

?

?
Data. We mention two notable examples: [13,1], which address the extraction
of relations between Wikipedia entities, and [12] that presents a multi-lingual
network of inter-connected concepts obtained by mining Wikipedia.

3 Materials and Methods

Our work grounds on the assumption that wikilink relations in DBpedia, i.e.
instances of the dbpo:wikiPageWikiLink property5, convey a rich encyclopedic
knowledge that can be formalized as EKPs, which are good candidates as KPs [5].
Informally, an EKP is a small ontology that contains a concept S and its

relations to the most relevant concepts Cj that can be used to describe S.

Representing invariances from wikipedia links. For representing wikilink
invariances, we define path (type) as an extension of the notion of property path6:

Definition 1 (Path). A path (type) is a property path (limited to length 1 in
this work, i.e. a triple pattern), whose occurrences have (i) the same rdf:type
for their subject nodes, and (ii) the same rdf:type for their object nodes. It is
denoted here as:

Pi,j = [Si, p, Oj]

where Si is a subject type, p is a property, and Oj is an object type of a triple. In
this work, we only extract paths where p=dbpo:wikiPageWikiLink. Sometimes
we use a simplified notation [Si, Oj], assuming p = dbpo:wikiPageWikiLink.

We extract EKPs from paths (see Definition 2), however in order to formalize
them, we perform a heuristic procedure to reduce multi-typing, to avoid redun-
dancies, and to replace dbpo:wikiPageWikiLink with a contextualized object
property. In practice, given a triple s dbpo:wikiPageWikiLink o, we construct
its path as follows:
 the subject type Si is set to the most specific type(s) of s
 the object type Oj is set to the most specific type(s) of o
 the property p of the path is set to the most general type of o

For example, the triple:

dbpedia:Andre Agassi dbpo:wikiPageWikiLink dbpedia:Davis Cup

would count as an occurrence of the following path:

P athAgassi,Davis = [dbpo:TennisPlayer, dbpo:Organisation, dbpo:TennisLeague]

Figure 1 depicts such procedure for the path P athAgassi,Davis:
5 Prefixes dbpo:, dbpedia:, and ka: stand for

http:dbpedia.org/ontology/, http:dbpedia.org/resource/
and http://www.ontologydesignpatterns.org/ont/lod-analysis-path.owl,
respectively.

6 In SPARQL1.1 (http://www.w3.org/TR/sparql11-property-paths/) property paths

can have length n, given by their route through the RDF graph.

A.G. Nuzzolese et al.

Fig. 1. Path discovered from the triple dbpedia:Andre Agassi dbpo:wikiPageWikiLink
dbpedia:Davis Cup

 dbpo:TennisPlayer is the subject type because it is the most specific type

of dbpedia:Andre Agassi, i.e., dbpo:TennisPlayer  dbpo:Person;
 dbpo:TennisLeague is the object type because it is the most specific type
of dbpedia:Davis Cup, i.e., dbpo:TennisLeague  dbpo:SportsLeague 
dbpo:Organisation

 dbpo:Organisation is the property of the path because it is the most general

type of dbpedia:Davis Cup.

Indicators. We use a set of indicators that are described in Table 1. Their
application and related interpretation in this work are discussed in the following
sections.

Table 1. Indicators used for empirical analysis of wikilink paths

Indicator
nRes(C)
nSubjectRes(Pi,j)

Description
number of resources typed with a certain class C, |{ri rdf:type C}|
path
number
that
{(si rdf:type Si)  Pi,j = [Si, p, Oj]}|

participate

resources

distinct

of

in

a

as

subjects,

|

nP athOcc(Pi,j)
nP ath(Si)

pathP opularity(Pi,j, Si) The ratio of how many distinct resources of a certain type participate as subject in a path
to the total number of resources of that type. Intuitively, it indicates the popularity of a
path for a certain subject type, nSubjectRes(Pi,j = [Si, p, Oj]) divided by nRes(Si)
number of occurrences of a path Pi,j = [Si, p, Oj]
number of distinct paths having a same subject type Si, e.g. the number of paths having
dbpo:TennisPlayer as subject type
sum of all nP athOcc(Pi,j) having a subject type Si divided by nP ath(Si) e.g. the avarage
number of occurrences of paths having dbpo:Philosopher as subject type

AvP athOcc(Si)

Boundaries of Encyclopedic Knowledge Patterns. We choose the boundaries of an EKP by defining a threshold t for pathP opularity(Pi,j, Si). Accord-
ingly, we give the following definition of EKP (Si) for a DBpedia type Si.
?

?

?
Definition 2 (Encyclopedic Knowledge Patterns). Let Si be a DBpedia
type, Oj (j = 1, .., n) a list of DBpedia types, Pi,j = [Si, p, Oj] and t a threshold
value.
Given the triples:

dbpedia:s dbpedia-ont:wikiPediaWikiLink dbpedia:o

dbpedia:s rdf:type dbpedia:Si
dbpedia:o rdf:type dbpedia:Oj

we state that EKP (Si) is a set of paths, such that

Pi,j  EKP (Si)  pathP opularity(Pi,j, Si)  t

(1)

We hypothesize values for t in Section 4, and evaluate them in Section 5.

OWL2 formalization of EKPs. We have stored paths and their associated indicators in a dataset, according to an OWL vocabulary called knowledge
architecture 7. Then, we have generated the Encyclopedic Knowledge Patterns
(EKPs) repository8 by performing a refactoring of the knowledge architecture
data into OWL2 ontologies). Given the namespace ekp: and an EKP (Si) =
[Si, p1, O1], . . . , [Si, pn, On], we formalize it in OWL2 by applying the following
translation procedure:

 the name of the OWL file is ekp:9 followed by the local name of S e.g.,
ekp:TennisPlayer.owl. Below we refer to the namespace of a specific EKP
through the generic prefix ekpS:;

 Si and Oj j = 1, . . . , n are refactored as owl:Class entities (they keep their

 pj keep their original URI and are refactored as owl:ObjectProperty enti-

original URI);

ties;

 for each Oj we create a sub-property of pi+n, ekpS : Oj that has the
e.g.

namespace;

name

ekpS:

local

same
and
ekp:TennisPlayer.owl#TennisLeague.

as Oj

the

 for each ekpS : Oj we add an owl:allVauesFrom restriction to Si on ekpS :

Oj, with range Oj.

For example, if P athAgassi,Davis (cf. Figure 1) is part of an EKP, it gets formalized as follows:

Prefix: dbpo: <http://dbpedia.org/ontology/>
Prefix:

ekptp: <http://www.ontologydesignpatterns.org/ekp/TennisPlayer.owl#>

Ontology: <http://www.ontologydesignpatterns.org/ekp/TennisPlayer.owl>
Class: dbpo:TennisPlayer

SubClassOf:

http://www.ontologydesignpatterns.org/ont/lod-analysis-path.owl

8 The EKP repository is available at http://stlab.istc.cnr.it/stlab/WikiLinkPatterns.
9 The prefix ekp: stands for the namespace

http://www.ontologydesignpatterns.org/ekp/.

A.G. Nuzzolese et al.

Table 2. Dataset used and associated figures

Dataset

dbpedia instance types en

Description
DBpedia ontology
Resource types i.e.
rdf:type triples

dbpedia page links en

Wikilinks triples

DBPOwikilinks

Wikilinks involving
only resources typed
with DBPO classes

Value

1,668,503

Indicator
Number of classes
Number of resources having a DBPO
type
rdf:type triples
6,173,940
Number of resources used in wikilinks 15,944,381
Number of wikilinks
107,892,317
Number of resources used in wikilinks 1,668,503
Number of wikilinks
16,745,830

ekptp:TennisLeague only dbpo:TennisLeague

Class: dbpo:TennisLeague
ObjectProperty: ekptp:TennisLeague

SubPropertyOf: dbpo:Organisation

...

from a subset of

(dbpedia page links en), and have

links

that would create semantic interpretation issues, e.g.

in dbpedia page links en). DBPOwikilinks

Materials. We have extracted EKPs
the DBpedia wikilink dataset
created a new
dataset (DBPOwikilinks) including only links between resources that are
typed by DBpedia ontology version 3.6 (DBPO) classes (15.52% of the
excludes a lot
total wikilinks
images
of
(e.g. dbpedia:Image:Twitter 2010 logo.svg), Wikipedia categories
(e.g.
dbpedia:CAT:Vampires in comics), untyped resources
(e.g. dbpedia:%23Drogo), etc.
includes

type
the resources involved in dbpedia page links en. We also use
10.46% of
dbpedia instance types en, which contains type axioms, i.e. rdf:type triples.
This dataset contains the materialization of all inherited types (cf. Section 4).
Table 2 summarizes the figures described above.

DBPO currently

classes, which are used to

4 Results

We have extracted 33,052 paths from the English wikilink datasets, however
many of them are not relevant either because they have a limited number of
occurrences, or because their subject type is rarely used. In order to select the
paths useful for EKP discovery (our goal) we have considered the following
criteria:

 Usage in the wikilink dataset. The resources involved in dbpedia page links en
are typed with any of 250 DBPO classes (out of 272). Though, we are interested in direct types 10 of resources in order to avoid redundancies when counting path occurrences. For example, the resource dbpedia:Ludwik Fleck has
three types dbpo:Scientist;dbpo:Person;owl:Thing because type assertions in DBpedia are materialized along the hirerachy of DBPO. Hence, only

10 In current work, we are also investigating indirectly typed resource count, which

might lead to different EKPs, and to empirically studying EKP ordering.
?

?

?
dbpo:Scientist is relevant to our study. Based on this criterion, we keep
only 228 DBPO classes and the number of paths decreases to 25,407.

 Number of resources typed by a class C (i.e., nRes(C)). Looking at the
distribution of resource types, we have noticed that 99.98% of DBPO classes
have at least 30 resource instances. Therefore we have decided to keep paths
whose subject type C has at least nRes(C)=30.

type

 Number

of

path

occurrences

(i.e.,
nP athOcc(Pi,j)). The average number of outgoing wikilinks per resource in dbpedia page links en is 10. Based on this observation and on
the previous criterion, we have decided to keep paths having at least
nP athOcc(P )=30*10=300.

subject

having

a

same

After applying these two criteria, only 184 classes and 21,503 paths are re-
tained. For example, the path [Album,Drug] has 226 occurrences, and the type
dbpo:AustralianFootballLeague has 3 instances, hence they have been
discarded.

EKP discovery. At this point, we had each of the 184 classes used as subject
types associated with a set of paths, each set with a cardinality ranging between
2 and 191 (with 86.29% of subjects bearing at least 20 paths). Our definition of
EKP requires that its backbone be constituted of a small number of object types,
typically below 10, considering the existing resources of models that can be considered as KPs (see later in this section for details). In order to generate EKPs
from the extracted paths, we need to decide what threshold should be used for selecting them, which eventually creates appropriate boundaries for EKPs. In order
to establish some meaningful threshold, we have computed the ranked distributions of pathP opularity(Pi,j, Si) for each selected subject type, and measured
the correlations between them. Then, we have fine-tuned these findings by means
of a user study (cf. Section 5), which had the dual function of both evaluating
our results, and suggesting relevance criteria for generating the EKP resource.
Our aim is to build a prototypical ranking of the pathP opularity(Pi,j, Si) of the
selected 184 subject types, called pathP opularityDBpedia, which should show
how relevant paths for subject types are typically distributed according to the
Wikipedia crowds, hence allowing us to propose a threshold criterion for any
subject type. We have proceeded as follows.
1. We have chosen the top-ranked 40 paths (Pi,j) for each subject type (Si),
each constituting a pathP opularity(Pi,j, Si). Some subject types have less
than 40 paths: in such cases, we have added 0 values until filling the gap.
The number 40 has been chosen so that it is large enough to include not
only paths covering at least 1% of the resources, but also much rarer ones,
belonging to the long tail.

2. In order to assess if a prototypical ranking pathP opularityDBpedia would
make sense, we have performed a multiple correlation between the different
pathP opularity(Pi,j, Si). In case of low correlation, the prototypical ranking
would create odd effects when applied to heterogeneous rank distributions
across different Si. In case of high correlation, the prototype would make

A.G. Nuzzolese et al.

Fig. 2. Distribution of pathP opularityDBpedia: the average values of popularity rank
i.e., pathP opularity(Pi,j, Si), for DBpedia paths. The x-axis indicates how many paths
(on average) are above a certain value t of pathP opularity(P, S).

sense, and we can get reassured that the taxonomy we have used (DBPO in
this experiment) nicely fits the way wikilinks are created by the Wikipedia
crowds.

3. We have created a prototypical distribution pathP opularityDBpedia that is
representative for all Si distributions. Such a distribution is then used to hypothesize some thresholds for the relevance of Pi,j when creating boundaries
for EKPs. The thresholds are used in Section 5 to evaluate the proposed
EKPs with respect to the rankings produced during the user study.

In

order

to

In order to measure the distribution from step 2, we have used the Pearson correlation measure , ranging from -1 (no agreement) to +1 (complete agreement),
between two variables X and Y i.e. for two different Si in our case. The correlation has been generalized to all 16,836 pairs of the 184 pathP opularity(Pi,j, Si)
ranking sets (184  183/2), in order to gather a multiple correlation. The value
of such multiple correlation is 0.906, hence excellent.

Once reassured on the stability of pathP opularity(Pi,j, Si) across the different

Si, we have derived (step 3) pathP opularityDBpedia, depicted in Figure 2.

establish

relevance

reasonable

thresholds,
pathP opularityDBpedia has been submitted to K-Means Clustering, which
generates 3 small clusters with popularity ranks above 22.67%, and 1 large
cluster (85% of the 40 ranks) with popularity ranks below 18.18%. The three
small clusters includes seven paths: this feature supports the buzz in cognitive
science about a supposed amount of 7 2 objects that are typically manipulated
by the cognitive systems of humans in their recognition tasks [11,10]. While the
7  2 conjecture is highly debated, and possibly too generic to be defended,
this observation has been used to hypothesize a first threshold criterion:
since the seventh rank is at 18.18% in pathP opularityDBpedia, this value of
pathP opularity(Pi,j, Si) will be our first guess for including a path in an EKP.
We propose a second threshold based on FrameNet [2], a lexical database,
grounded in a textual corpus, of situation types called frames. FrameNet is

some
?

?

?
Table 3. Sample paths for the subject type Album: number of path occurrences, distinct
subject resources, and popularity percentage value

nP athOcc(Pi,j) nSubjectRes(Pi,j) pathP opularity(Pi,j, Si) (%)
Path
170,227
[Album,Album]
108,928
[Album,MusicGenre]
[Album,MusicalArtist] 308,619
125,919
[Album,Band]
62,772
[Album,Website]
56,285
[Album,RecordLabel]
114,181
[Album,Single]
40,296
[Album,Country]

78,137
68,944
68,930
62,762
49,264
47,058
29,051
25,430

78.89
69.61
69.59
63.37
49.74
47.51
29.33
25.67

currently the only cognitively-based resource of potential knowledge patterns
(the frames, cf. [14]). The second threshold (11%) is provided by the average
number of frame elements in FrameNet frames (frame elements roughly correspond to paths for EKPs), which is 9 (the ninth rank in pathP opularityDBpedia
is at 11%). The mode value of frame elements associated with a frame is 7,
which further supports our proposal for the first threshold. An example of the
paths selected for a subject type according to the first threshold is depicted
in Tab. 3, where some paths for the type Album are ranked according to
their pathP opularity(Pi,j, Si). In Section 5 we describe an evaluation of these
threshold criteria by means of a user study.

Threshold criteria are also used to enrich the formal

interpretation of
EKPs. Our proposal, implemented in the OWL2 EKP repository, considers
the first threshold as an indicator for an existential quantification over an
OWL restriction representing a certain path. For example, [Album,MusicGenre]
is a highly-popular path in the Album EKP. We interpret high-popularity
i.e.: Album 
as a feature for generating an existential
(MusicGenre.MusicGenre). This interpretation suggests that each resource
typed as an Album has at least one MusicGenre, which is intuitively correct.
Notice that even if all paths have a pathP opularity(Pi,j, Si) of less that 100%,
we should keep in mind that semantic interpretation over the Web is made
in open-world, therefore we feel free to assume that such incompleteness is a
necessary feature of Web-based knowledge (and possibly of any crowd-sourced
knowledge).

interpretation,

5 Evaluation

Although our empirical observations on DBpedia could give us means for defining
a value for the threshold t (see Definition 2 and Section 4), we still have to
prove that emerging EKPs provide an intuitive schema for organizing knowledge.
Therefore, we have conducted a user study for making users identify the EKPs
associated with a sample set of DBPO classes, and for comparing them with
those emerging from our empirical observations.

User study. We have selected a sample of 12 DBPO classes that span so-
cial, media, commercial, science, technology, geographical, and governmental

A.G. Nuzzolese et al.

Table 4. DBPO classes used in the user-study and their related figures

nRes(S) nP ath(Si) AvP athOcc(Si)
DBPO class type
3,246
Language
1,009
Philosopher
10,102
Writer

Ambassador

Legislature
99,047
Album
Radio Station
16,310
Administrative Region 31,386
Country
2,234
37,742
Insect
5,215
Disease
Aircraft
6,420

29.27
18.29
15.30
15.58
25.11
11.71
7.31
11.30
35.16
9.16
12.10
10.32
?

?

?
domains. They are listed in Table 4. For each class, we indicate the number
of its resources, the number of paths it participates in as subject type, and the
average number of occurrences of its associated paths. We have asked the users
to express their judgement on how relevant were a number of (object) types (i.e.,
paths) for describing things of a certain (subject) type. The following sentence
has been used for describing the user study task to the users:

We want to study the best way to describe things by linking them to other
things. For example, if you want to describe a person, you might want to link
it to other persons, organizations, places, etc. In other words, what are the
most relevant types of things that can be used to describe a certain type of
things?

We asked the users to fill a number of tables, each addressing a class in the
sample described in Table 4. Each table has three columns:

 Type 1 indicating the class of things (subjects) to be described e.g. Country;
 A second column to be filled with a relevance value for each row based on
a scale of five relevance values, Table 5 shows the scale of relevance values
and their interpretations as they have been provided to the users. Relevance
values had to be associated with each element of Type 2;

 Type 2 indicating a list of classes of the paths (i.e. the object types) in which
Type 1 participates as subject type. These were the suggested types of things
that can be linked for describing entities of Type 1 e.g. Administrative
Region, Airport, Book, etc.

By observing the figures of DBPO classes (cf. Table 4) we realized that the
entire list of paths associated with a subject type would have been too long to be
proposed to the users. For example, if Type 1 was Country, the users would have
been submitted 169 rows for Type 2. Hence, we decided a criterion for selecting
a representative set of such paths. We have set a value for t to 18% and have
included, in the sample set, all Pi,j such that pathP opularity(Pi,j, Si)  18%.
Furthermore, we have also included an additional random set of 14 Pi,j such
that pathP opularity(Pi,j, Si) < 18%.

We have divided the sample set of classes into two groups of 6. We had ten
users evaluating one group, and seven users evaluating the other group. Notice
?

?

?
Table 5. Ordinal (Likert) scale of relevance scores

Relevance score Interpretation
?

?

?
The type is irrelevant;
The type is slightly irrelevant;
I am undecided between 2 and 4;
The type is relevant but can be op-
tional;
The type is relevant and should be used
for the description.

Table 6. Average coefficient of concordance for ranks (Kendalls W) for the
two groups of users

User group

Group 1
Group 2

inter-rater

Average
agreement
0.700
0.665

that the users come from different cultures (Italy, Germany, France, Japan, Ser-
bia, Sweden, Tunisia, and Netherlands), and speak different mother tongues. In
practice, we wanted to avoid focusing on one specific language or culture, at the
risk of reducing consensus.

In order to use the EKPs resulting from the user study as a reference for next
steps in our evaluation task, we needed to check the inter-rater agreement. We
have computed the Kendalls coefficient of concordance for ranks (W ), for all analyzed DBPO classes, which calculates agreements between 3 or more rankers as
they rank a number of subjects according to a particular characteristic. Kendalls
W ranges from 0 (no agreement) to 1 (complete agreement). Table 6 reports such
values for the two groups of users, which show that we have reached a good consensus in both cases. Additionally, Table 7 reports W values for each class in
the evaluation sample.

Table 7. Inter-rater agreement computed with Kendalls W (for all values p < 0.0001)
and reliability test computed with Cronbachs alpha

DBPO class Agreement Reliability DBPO class
0.836
Language
0.749
Writer
Legislature
0.612
Radio Station 0.680
0.645
Country
Disease
0.823

Agreement Reliability
0.551
Philosopher
0.543
Ambassador
Album
0.800
Administrative Region 0.692
0.583
Insect
Aircraft
0.677

0.865
0.915
0.969
0.946
0.929
0.931

0.976
0.958
0.888
0.912
0.896
0.957

Evaluation of emerging DBpedia EKPs through correlation with userstudy results: how good is DBpedia as a source of EKPs? The second step
towards deciding t for the generation of EKPs has been to compare DBpedia EKPs to those emerging from the users choices. DBpedia EKP (Si) would
result from a selection of paths having Si as subject type, based on their associated pathP opularity(Pi,j, Si) values (to be  t). We had to compare the
pathP opularity(Pi,j, Si) of the paths associated with the DBPO sample classes
(cf. Table 4), to the relevance scores assigned by the users. Therefore, we needed
to define a mapping function between pathP opularity(Pi,j, Si) values and the
5-level scale of relevance scores (Table 5).

We have defined the mapping by splitting the pathP opularityDBpedia distribution (cf. Figure 2) into 5 intervals, each corresponding to the 5 relevance
scores of the Likert scale used in the user-study. Table 8 shows our hypothesis

A.G. Nuzzolese et al.

Table 8. Mapping between wlCoverageDBpedia intervals and the relevance score scale

pathP opularityDBpedia interval Relevance score
[18, 100]
[11, 18[
]2, 11[
]1, 2]
[0, 1]
?

?

?
(Spearman

9. Average multiple
Table
correlation
be-
tween users assigned scores, and
pathP opularityDBpedia
based
scores

)

User group

Group 1
Group 2

Correl. with DBpe-
dia
0.777
0.717

Table 10. Multiple
() between
userss
pathP opularityDBpedia based score

correlation coefficient
assigned
and

score,

DBPO class

Language
Writer
Legislature
Radio Station
Country
Disease

/

Correl.
users
DBpedia
0.893
0.748
0.716
0.772
0.665
0.824

/

DBPO class

Correl.
users
DBpedia
0.661
Philosopher
0.655
Ambassador
0.871
Album
Administrative Region 0.874
0.624
Insect
Aircraft
0.664

of such mapping. The hypothesis is based on the thresholds defined in Section
4. The mapping function serves our purpose of performing the comparison and
identifying the best value for t, which is our ultimate goal. In case of scarce corre-
lation, we expected to fine-tune the intervals for finding a better correlation and
identifying the best t. Based on the mapping function, we have computed the
relevance scores that DBpedia would assign to the 12 sample types, and calculated the Spearman correlation value () wich ranges from 1 (no agreement) to
+1 (complete agreement) by using the means of relevance scores assigned by the
users. This measure gives us an indication on how precisely DBpedia wikilinks
allow us to identify EKPs as compared to those drawn by the users. As shown in
Table 9, there is a good correlation between the two distributions. Analogously,
Table 10 shows the multiple correlation values computed for each class, which
are significantly high. Hence, they indicate a satisfactory precision.

We can conclude that our hypothesis (cf. Section 1) is supported by these
findings, and that Wikipedia wikilinks are a good source for EKPs. We have
tested alternative values for t, and we have found that our hypothesized mapping
(cf. Table 8) provides the best correlation values among them. Consequently, we
have set the threshold value for EKP boundaries (cf. Definition 2) as t = 11%.

6 Discussion and Conclusions

We have presented a study for discovering Encyclopedic Knowledge Patterns
(EKP) from Wikipedia page links. In this study we have used the DBPO classes
to create a wikilink-based partition of crowd-sourced encyclopedic knowledge
expressed as paths of length 1, and applied several measures to create a boundary
?

?

?
around the most relevant object types for a same subject type out of wikilink
triples.

Data have been processed and evaluated by means of both statistical analysis
over the paths, and a user study that created a reference ranking for a subset of
subject types and their associated paths. Results are very good: stable criteria
for boundary creation (high correlation of path popularity distributions across
subject types), large consensus among (multicultural) users, and good precision
(high correlation between users and EKP rankings).

The 184 EKP so generated have been formalized in OWL2 and published, and
can be used either as lenses for the exploration of DBpedia, or for designing new
ontologies that inherit the data and textual grounding provided by DBpedia and
Wikipedia. Also data linking can take advantage of EKPs, by modularizing the
datasets to be linked.

There are many directions that the kind of research we have done opens up:

some are presented in the rest of this section.
Applying EKPs to resource concept maps. An application of EKPs is
the creation of synthetic concept maps out of the wikilinks of a resource. For
example, a concept map of all wikilinks for the resource about the scientist
dbpr:Ludwik Fleck contains 44 unordered resources, while a concept map created with a lens provided by the Scientist EKP provides the 13 most typical
resources with explicit relations. We should remark that EKPs typically (and in-
tentionally) exclude the long tail features of a resource, which sometimes are
important. Investigating how to make these relevant long tail features emerge
for specific resources and requirements is one of the research directions we want
to explore.
Wikilink relation semantics. An obvious elaboration of EKP discovery is to
infer the object properties that are implicit in a wikilink. This task is called
relation discovery. Several approaches have been used for discovering relations
in Wikipedia, (cf. Section 2, [9] is an extensive overview), and are being inves-
tigated. Other approaches are based on the existing semantic knowledge from
DBpedia: three of them are exemplified here because their results have already
been implemented in the EKP resource.

the

For

example,

Induction

properties.

from infobox

path
[Album,MusicalArtist] features a distribution of properties partly reported in Table 11. There is a clear majority for the producer property,
but other properties are also present, and some are even clear anomalies
(e.g. *[Album,dbprop:nextAlbum,MusicalArtist]11). In general, there are
two typical situations: the first is exemplified by [Album,MusicalArtist],
where the most frequent property covers only part of the possible semantics of the wikilink paths. The second situation is when the most frequent
property is maximally general, and repeats the name of the object type, e.g.
[Actor,dbprop:film,Film]. In our EKP resource, we add the most frequent

11 * indicates a probably wrong path.

A.G. Nuzzolese et al.

Table 11. Sample paths for the subject type Album from the infobox DBpedia dataset,
with their frequency. Some paths are clear mistakes.

nP athOcc(Pi,j)
Path
3,413
[Album,dbprop:producer,MusicalArtist]

[Album,dbprop:artist,MusicalArtist]

[Album,dbprop:writer,MusicalArtist]
[Album,dbprop:lastAlbum,MusicalArtist] 35
*[Album,dbprop:nextAlbum,MusicalArtist] 33
[Album,dbprop:thisAlbum,MusicalArtist] 27

[Album,dbprop:starring,MusicalArtist]

properties from the infobox dataset as annotations, accompanied by a frequency
attribute.

For

the

from

top

Induction

superclasses.

path
[Album,MusicalArtist] can be enhanced by inducing the top superclass
of MusicalArtist,
i.e. Person, as its property. This is possible either
in RDFS, or in OWL2 (via punning). The path would be in this case
[Album,Person,MusicalArtist]. This solution has not precision problems,
but is also quite generic on the semantics of a wikilink.

example,

Punning of the object type. For example, the path [Album,MusicalArtist]
can be enriched as [Album,MusicalArtist,MusicalArtist]. This solution is
pretty uninformative at the schema level, but can be handy when an EKP is used
to visualize knowledge from wikilinks, for example in the application described
above of a resource concept map, where resources would be linked with the name
of the object type: this results to be very informative for a concept map user. In
our EKP resource, we always reuse the object type as a (locally defined) object
property as well.

Additional approaches we have conceived would exploit existing resources
created by means of NLP techniques (e.g. WikiNet, [12]), or by game-based
crowdsourcing (e.g. OpenMind [17]).
issues. Given the multilingual and multicultural nature of
Intercultural
Wikipedia, comparison between EKPs extracted from different versions of
Wikipedia is very interesting. We have extracted EKPs from English and Italian versions, and we have measured the correlation between some English- and
Italian-based EKPs. The results are encouraging; e.g. for the subject type Album
the Spearman correlation between the top 20 paths for Italian resources and
those for English ones is 0.882%, while for Language is 0.657%. This despite the
fact that Italian paths have lower popularity values than English ones, and much
fewer wikilinks (3.25 wikilinks per resource on average).
Schema issues. DBPO has been generated from Wikipedia infoboxes. The
DBpedia infobox dataset contains 1,177,925 object property assertions, and their
objects are also wikilinks. This means that 7.01% of the 16,745,830 wikilink
triples that we have considered overlap with infobox triples. This is a potential
bias on our results, which are based on DBPO; however, such bias is very limited:
?

?

?
removing 7% of the wikilinks is not enough to significantly decrease the high
correlations we have found.

Finally, one might wonder if our good results could be obtained by using other ontologies instead of DBPO. We are experimenting with wikilink paths typed by Yago [18], which has more than 288,000 classes,
and a broader coverage of resources (82% vs. 51.9% of DBPO). Working with Yago is very interesting, but also more difficult, since it applies multityping extensively, and the combinatorics of
its paths is orders of magnitude more complex than with paths typed by DBPO. Sample Yago paths include e.g.: [Coca-ColaBrands,BoycottsOfOrganizations],
[DietSodas,LivingPeople]. Those paths are domain-oriented, which is a
good thing, but they also share a low popularity (ranging around 3% in top
ranks) in comparison to DBPO classes. In other words, the skewness of Yago
pathP opularity(Pi,j, Si) is much higher than that of DBPO, with a very long
tail. However, the clustering factor is not so different: a Yago EKP can be created
e.g. for the class yago:AmericanBeerBrands, and its possible thresholds provided by K-Means Clustering appear very similar to the ones found for DBPO
EKPs: we should only scale down the thresholds, e.g. from 18% to 1%.

Acknowledgements. This work has been part-funded by the European Commission under grant agreement FP7-ICT-2007-3/ No. 231527 (IKS - Interactive
Knowledge Stack). We would like to thank Milan Stankovic for his precious
advise.
