An Ontology Design Pattern for Referential

Qualities

Jens Ortmann and Desiree Daniel

Institute for Geoinformatics, University of Muenster, Germany

jens.ortmann@uni-muenster.de,

desiree.daniel@yahoo.com

Abstract. Referential qualities are qualities of an entity taken with reference to another entity. For example the vulnerability of a coast to sea
level rise. In contrast to most non-relational qualities which only depend
on their host, referential qualities require a referent additional to their
host, i.e. a quality Q of an entity X taken with reference to another entity R. These qualities occur frequently in ecological systems, which make
concepts from these systems challenging to model in formal ontology. In
this paper, we discuss exemplary resilience, vulnerability and affordance
as qualities of an entity taken with reference to an external factor. We suggest an ontology design pattern for referential qualities. The design pattern is anchored in the foundational ontology DOLCE and evaluated using
implementations for the notions affordance, resilience and vulnerability.

1 Introduction

Environmental problems are major challenges of the 21st century and occur in
all parts of the world on local, regional and global scales, especially in face of climate variability. The rate of global environmental change is surpassing response
and without action to mitigate its drivers and enhance societal resilience, these
changes will retard economic, social, environmental and developmental goals [16].
According to the International Council for Science [16], to meet this challenge,
what is required is a robust information infrastructure that can combine data
and knowledge both past and present with new observations and modeling techniques to provide integrated, interdisciplinary datasets and other information
products. One key functionality within this infrastructure is to assess vulnerability and resilience.

Before such an infrastructure can be realized, there is a need to sort out the
bottleneck that occurs on the conceptual level with notions such as vulnerability
and resilience. In an attempt to introduce ecological concepts to formal ontology,
the problem of modeling qualities arises. In addition to their host, qualities in
the ecological domain often depend on external entities. A recurring pattern is a
quality Q of an entity X taken with reference to another entity R. These qualities
have one host and cannot exist without an external factor. To name just one
example, the vulnerability of a coast cannot be assessed per se, but only with
respect to an external threat, like the vulnerability to sea level rise. So we have

L. Aroyo et al. (Eds.): ISWC 2011, Part I, LNCS 7031, pp. 537552, 2011.
c Springer-Verlag Berlin Heidelberg 2011

J. Ortmann and D. Daniel

the vulnerability of a coast with reference to sea level rise. Yet, vulnerability is
not considered a relational quality, but is attributed to the coast. Furthermore,
the same coast has different vulnerabilities with reference to different external
factors (e.g., a hurricane or an oil-spill).

Modeling qualities that inhere in more than one host represents a conceptual quandary that applies to ecological notions but it appears in many other
fields that deal with systems (e.g. economic systems, social systems, communication networks). We take a look at the notions of resilience, vulnerability and
affordance, which lack formal definitions. An approach that can model referential qualities in ontologies can lead to these concepts being implementable and
thereby usable in semantic web applications.

This paper therefore brings into focus the research question how can referential qualities be modeled in ontologies?. To solve the quandary, an Ontology
Design Pattern (ODP) [8] is suggested as a template to model different referential qualities. This work draws from Kuhns [20,21] Semantic Reference Systems.
Semantic Reference Systems provide a theory of how categories in an ontology
can be described with reference to other, already established categories. At the
same time the theory of Semantic Reference Systems paves the road to make
these ecological qualities operational. A high level formalization of the Ontology
Design Pattern as well as an OWL-DL1 implementation is carried out by the
authors. Both are aligned to the Descriptive Ontology for Linguistic and Cognitive Engineering (DOLCE) [23]. The ecological qualities resilience, vulnerability
and affordance serve to illustrate applications of the suggested ODP.

This paper proceeds by outlining the background on non-relational qualities,
relational qualities and Ontology Design Patterns in Sect. 2. Subsequently, Section 3 motivates this research by discussing three examples of referential qual-
ities. Section 4 describes the Ontology Design Pattern for referential qualities
and its implementation in OWL-DL. The implementation of the examples are
discussed in Sect. 5. In Sect. 6 the conducted research is evaluated against the
use cases as well as analytically. Finally, Sect. 7 concludes the paper.

2 Background

This section introduces the notions of non-relational qualities and relational
qualities with respect to DOLCE as well as the idea of the ODP approach.

2.1 Non-relational and Relational Qualities

In philosophy there exist several dichotomies of qualities (or properties), they
are labeled for example intrinsic-extrinsic, relational-non-relational, unary-
n-ary (cf. eg., [38]). The differences between these distinctions are sometimes
hard to grasp for non-experts, as for instance many standard examples of nonrelational qualities are intrinsic and unary (e.g. color of a rose), and many

1 The description logic (DL) variant of the web ontology language (OWL). See
http://www.w3.org/TR/owl-guide/ for more information. All websites referred to
in this paper were last accessed on 21.06.2011.
?

?

?
standard examples of relational qualities are extrinsic and binary (e.g. gravitational attractions). However, there exist intrinsic relational qualities and extrinsic non-relational qualities. In the following we will introduce the relational
non-relational distinction, as we perceive this one as the most intuitive to nonexperts in metaphysics. We only mention the intrinsic-extrinsic distinction as
additional criterion when necessary.

Non-Relational Qualities. Non-relational qualities can be modeled in
DOLCE. In essence, this can be seen as an ODP in itself, even though to our
knowledge it is never officially declared as such. The design pattern for modeling
qualities in DOLCE follows the EQQS (Endurant, Quality, Quale, Spaces) pattern described in [22]. The pattern comprises four categories. An endurant2 (E)
that serves as host for the quality (Q), with a quale (Q) that is located in a
quality-space (S). In DOLCE all entities are particulars [23]. Every particular
endurant has its own particular qualities. For example, we can say that two boys
have the same height, however, in DOLCE each boy has his own distinct height
quality. This allows qualities to change, for instance, if the boys grow, especially
when they grow at different rates and do not have the same heights as adults any
more. To make the distinct qualities operational, a quale is needed. The quale is
a representation of the quality in a quality space. For example, in a meter space
the height quality of the two boys is reflected by the same quale. The quale is
modeled as a region in a quality-space, which allows certain computations,
depending on the structure of the space. An illustration of the DOLCE quality
ODP is shown in Fig. 1. The formal relation and implementation of the quality
ODP can be found in [23].

Endurant

inherent

 0..* 
Quality

has-quale

 1..* 

 0..* 

Quale

r-location

 1..* 

Quality-Space

Fig. 1. UML class diagram of the quality ODP in DOLCE. A quality inheres in an
endurant. The quality has a quale that is located in a quality space.

Relational Qualities. Relational qualities inhere in more than one host. This
is not allowed in DOLCE, where the quality can only inhere in one host. For example the solubility of a substance in a liquid cannot be expressed in the EQQS
pattern in DOLCE, because the solubility inheres in both, the substance and the

2 Throughout the paper we use truetype fonts like quality to refer to categories in a

formal ontology.

J. Ortmann and D. Daniel

liquid. DOLCE falls short modelling qualities like solubility, distance, direction
[29]. Qualities that depend on two entities are often extrinsic and relational.
They usually qualify a relation between two entities. The formal relation that
expresses a relational quality has more than two entities, namely the quality
and the hosts. Therefore, a direct implementation in Description Logics is not
possible. However, there exists a logical ontology design pattern to transform
n-ary relations expressed in a more expressive logic into OWL [26]. This pattern can be used to encode relational qualities as well. Nonetheless, this model
diverts from the DOLCE EQQS pattern for qualities, and it violates DOLCEs
constraint that a quality can only inhere in one host.

2.2 Ontology Design Patterns

Ontology Design Patterns are recurring structures in ontologies. Similar to design patterns in software engineering they provide templates to specific problems
in engineering ontologies. The first patterns were not designed from scratch but
emerged in ontologies. A first account of this phenomenon in ontology engineering along with a framework to document and classify ontology design patterns
was given by Gangemi [8]. Gangemi and Presutti [10] list different types of
ontology design patterns, depending on their intended use. They distinguish between Structural ODPs, Reasoning ODPs, Presentation ODPs, Correspondence
ODPs, Lexico-Syntactic ODPs and Content ODPs for example. The details on
these different ODPs can be found in [10] or looked up on the website ontology-
designpatterns.org. In this paper we are only interested in Content ODPs, and
will refer to them as ODP for short. They can be defined as:

[Content ODPs] are distinguished ontologies. They address a specific set
of competency questions, which represent the problem they provide a
solution for. Furthermore, [Content ODPs] show certain characteristics,
i.e. they are: computational, small, autonomous, hierarchical, cognitively
relevant, linguistically relevant, and best practises. [10, p. 231]

Most important in this definition is that Content ODPs are small ontologies.
Gangemi and Presutti [10] also suggest a new paradigm for ontology engineer-
ing, based on small modular Content ODPs, which form that backbone of a
new ontology. The website ontologydesignpatterns.org is a community portal
intended to serve as hub for finding and contributing ODPs of all types.

3 Examples

In this section, we discuss the salience of affordance, resilience and vulnerability as well as the problems that occur on the conceptual level when modeling
these notions.. A major problem is still, that these qualities cannot be modelled
in formal ontology. This hinders modelling ecological systems in information
infrastructures.
?

?

?
3.1 Resilience

The notion of resilience originated within the Ecology domain through the work
of Holling [15]. From its beginning in ecology, resilience has transcended across
various disciplines such as Sustainable Science, Disaster Management, Climate
Change and Psychology [1,36,18,13] as it is deemed a salient concept pertaining
to systems in face of adversity. Holling [15] ascertained that ecological resilience
is a characteristic of ecosystems to maintain themselves in face of disturbance.
In other words, resilience can be viewed as a quality of a system.

After four decades of the resilience debate, the concept still remains on the
abstraction level. Instead of domains moving into an operational direction, there
is a constant re-invention of the wheel that hinders research. This impediment
can be attributed to the lack of a common lexicon across domains [24]. Walker
et al. [35] state that in order for resilience to be operational we have to consider
resilience in a specific context from what to what, for example the resilience
of corn in South Africa to the impacts of drought. This specificity brings into
focus the problem of having a quality that is dependent on a referent and the
limitations of DOLCE in this regard.

Since the inception of resilience in Ecology, several definitions across disciplines have emerged. Holling initially described resilience in contrast to stability:

Resilience determines the persistence of relationships within a system
and is a measure of the ability of these systems to absorb changes of
state variable, driving variables, and parameters and still persist. [15, p.
17]

In an attempt to disambiguate resilience, we [6] suggested a generalized definition
of resilience for the ecological and socio-ecological domain:

The ability of a system to cope with an external factor that undermines
it, with the system bouncing back. [6, p. 121]

This definition was proven to be compatible with definitions given by the Resilience Alliance (c.f. [5]) and by the United Nations International Strategy for
Disaster Reduction (c.f. [34, Annex1 p. 6]). To our knowledge, no attempts have
been made to model resilience as quality in DOLCE.

Resilience has been linked to vulnerability as both concepts aim to understand

socio-ecological systems in face of disturbance.

3.2 Vulnerability

Vulnerability can be described according to [27] as the extent to which a natural
or social system is susceptible to sustaining damage, for example from climate
change. As societies aim to enhance resilience in face of global climate change,
the assessment of vulnerability solely, provides a one sided approach to foster
adaptation strategies. Consequently, there is a need for the convergence of both
theoretical and practical approaches of both concepts [24].

J. Ortmann and D. Daniel

The MONITOR3 project embarked on the challenge of developing a risk ontology to act as a reference framework for risk management. The concept of
vulnerability was modeled and defined as the quality of the objects of an envi-
ronment, which determines damage, given a defined hazardous event [19].

3.3 Affordances

The notion of affordance was introduced by Gibson [11,12]. Gibson defined affordances as follows:

The affordance of anything is a specific combination of its substance and
its surfaces taken with reference to an animal [11, p. 67]

[A]ffordances are properties of things taken with reference to an observer
[12, p. 137]

For example, a chair offers a sitting affordance to a human and a hollow tree has
a shelter affordance to a bat or owl. Yet, there exists no definition of affordances
that is commonly agreed-upon. Affordances are often seen as either relational
qualities, that exist as relation between the environment and the agent (e.g.
[32]), or as qualities of (an object in) the environment taken with reference to
the agent. The latter view would benefit from an ODP for referential qualities.
Definitions supporting the latter view have been given for example by Heft [14,
p. 3] and Turvey [33, p. 174].

Today affordances play an important role, not only in their original field of
psychology, but they are applied for example in design [25], robotics [31], navigation and way-finding [30] and similarity analysis [17]. However, the potential
of affordances is far from exploited. One reason for this is that affordances are
challenging to model in formal theories, especially ontologies for the semantic
web. The first author has recently suggested to model affordances as qualities
in DOLCE [28]. However, in the cases where affordances were modeled in ontol-
ogy, the reference to the observing agent was not made explicit. This takes away
the key idea of an affordance.

4 An Ontology Design Pattern for Referential Qualities

In the cases addressed in this paper, we do not need to violate the constraint
of a unique host, but we need to extend the quality pattern by a referent entity that is required for the quality. Therefore, qualities like affordance, resilience
and vulnerability are not relational and they are not of the kind of non-relational
qualities that fit the DOLCE EQQS pattern. They have one host entity, but an
additional referent that is necessary for the quality to exist. However, Ellis suggested distinct (extrinsic) qualities that objects have in virtue of outside forces
[7, as discussed in [38]]. The notion of force comes very close to the terminology of definitions for vulnerability and resilience, and it also fits the dynamic

3 see http://www.monitor-cadses.org/
?

?

?
and potential nature of affordances. A referential quality could then be called a
non-relational extrinsic quality.

The resulting pattern can be described as EQRQS pattern with an endurant
(E), a quality (Q), a referent entity (R), a quale (Q) and a quality-space
(S). The referent is characterized as playing a special referent-role.

The remainder of the section presents the Ontology Design Pattern for referential qualities. In the classification of the Ontology Pattern Initiative4 this
pattern is a Content Ontology Design Pattern. We do not suggest referential
qualities as distinct type of quality to be considered in metaphysics, but intend
to give knowledge engineers and domain scientists a practical tool to model the
described qualities and to be able to account for qualities that do not solely
depend on one or more host entities. For practical reasons the scope of this
discussion is mostly limited to DOLCE [23] and its commitments.

In the following the ODP for referential qualities is introduced according to
the Content ODP Frame suggested in [8]. This frame provides eleven slots to
introduce a new Content ODP.
UML Diagram. Figure 2 shows the UML diagram of the referential quality
design pattern.

Endurant

inherent-in
 0..* 
Quality

 1..* 

has-quale

 0..* 

Quale

r-location

 1..* 

Quality-Space

 0..* 
specifically-constantly-dependent-on
 1..* 
Referent

plays-ref

Referent-Role

 1..* 

 1..* 

Fig. 2. UML class diagram of the referential quality ODP. The relations are to be read
starting from the category quality or from left to right

Generic Use Case (GUC). The referential quality patterns overall aim is to
enable modeling of qualities that have one major host but existentially depend
on some external factor.This is a recurring pattern of concepts in Ecology, Eco-
nomics, Natural Disaster Management, Climate Change, Computer Science, just
to name a few. The generic pattern can be phrased as a quality Q of an entity
X taken with reference to another entity R. These qualities occur in particular when following system-theoretic approaches to model a domain. A system is

4 see http://ontologydesignpatterns.org

J. Ortmann and D. Daniel

described not only by its elements but also by relations and interdependencies
between these elements [2]. In such systems there often exist qualities that an
entity has by virtue of an external factor. For this paper, attention is brought to
ecological systems, however, the pattern is not restricted to the domain of ecol-
ogy, but is kept generic enough to be used in the other aforementioned domains
as well.
Local Use Case(s). The local uses cases are equivalent to the examples described in Sect. 3. The referential quality pattern should be capable to account
for:

 an affordance as quality of an object taken with reference to an observer.
 resilience as the capacity of a sysem to cope with an external factor.
 vulnerability as the quality of an object with respect to a potential damage.

Affordance, resilience and vulnerability lack a formal ontological definition that
makes the concepts operational and allows a consideration of these concepts in
and across information systems. Even though conceptual definitions exist, there
is a dearth in formal ontological solutions that will allow for semantic integration
of information sources and models.
Logic Addressed. The Ontology Design Pattern is modeled in the Unified
Modeling Language (UML), it is then encoded in Description Logic and implemented in the Web Ontology Language OWL-DL.
Reference Ontologies. The Ontology Design Pattern uses DOLCE Lite5 as
upper level ontology. As this pattern provides a template to model certain types
of qualities, this paper uses especially the DOLCE category qualities. In addition to DOLCE Lite we use the Extended Descriptions and Situations module6
to specify a role.
Specialized Content ODPs. The ODP for referential qualities is a specialization of the quality ODP in DOLCE. Masolo and Borgo have discussed several
approaches to model qualities in formal ontology [22]. In DOLCE, a quality depends on one host entity. The quality invokes a quale, i.e. a magnitude of the
quality. The quale is located in an abstract quality space. DOLCE uses a framework of entity, quality, quale and quality-space [23]. This ODP extends
the DOLCE EQQS pattern with a referent.
Composed Content ODPs. The ODP for referential qualities does not formally compose of other ODPs in its most general form. Nonetheless, the pattern
can be seen to compose of the quality pattern that is specialized with a role
pattern. Unfortunately, there is no role pattern that is general enough to allow
endurants, perdurants or qualities to play the referent role. There exist patterns
for special roles, for example the Objectrole7, that can be used to model the
role part of the referential quality pattern. Hence, in case the referent-role
5 http://www.loa-cnr.it/ontologies/DOLCE-Lite.owl
6 http://www.loa-cnr.it/ontologies/ExtendedDnS.owl
7 see http://ontologydesignpatterns.org/wiki/Submissions:Objectrole
?

?

?
is played by a physical-object, the pattern is implemented as composition of
the DOLCE quality pattern and the Objectrole pattern.

A special case occurs when the referent is a referential-quality itself,
then the pattern can be recursively applied to realize a composition of various
referential quality patterns.
Formal Relation. Ref erential Quality(e, q, ql, qs, r, rr), where e is an en-
durant, perdurant or quality, q is a referential quality that inheres in e, ql is a
quale of q in the quality space qs, r is an endurant, perdurant or quality that
plays a referent-role rr for the referential quality q.
Sensitive Axioms.
Ref erential Quality(e, q, r) =df QU(q)

 (ED(e)  P D(e)  QU(e))  inheres(q, e)
 (ED(r)  P D(r)  QU(r)) 
 specif ically  constantly  dependent  on(q, r)
 plays  ref(r, s)

 (, s : subsumes(, )  (s))

where  is the category Role in DOLCE. Note that according to the DOLCE
definition of constant specific dependence, q and r can not be equivalent [23,
Dd(70), p. 31].
Explanation. Many existing approaches to model a quality that depends on
an external factor lead to unsatisfactory results. The referential quality design
pattern suggests a practical approach to model such qualities that is compatible
with DOLCE. The DOLCE pattern for qualities comes with qualia and quality-
spaces. This already anticipates a future operationalization of these qualities.
OWL(DL) encoding (Manchester syntax, excerpt8)
Class: referent-role

SubClassOf:

edns:role

Class: referential-quality

SubClassOf:
dol:quality
and (dol:specifically-constantly-dependent-on
some (rq:plays-ref some rq:referent-role))

5 Implementation of Affordance, Resilience and

Vulnerability

This section presents the exemplary implementations of vulnerability taken with
reference to a hazardous event, resilience taken with reference to an external
factor, and an affordances taken with reference to an agent. These examples

8 the

complete

examples presented in this
encoded in the OWL Manchester Syntax are available online at

implementation along with the

paper
http://www.jensortmann.de/ontologies/odp4refprop.html

J. Ortmann and D. Daniel

Endurant

inherent-in
 0..* 

Vulnerability

has-quale

 1..* 

 0..* 

Defined-Damage Extent

 0..* 
specifically-constantly-dependent-on
 1..* 

Damage Potential

plays-ref

 1..* 

 1..* 

Referent-Role

Fig. 3. UML class diagram of vulnerability in the MONITOR project, modeled according to the referential quality ODP

demonstrate potential applications. However, the ontological choices made to
restrict the host and referent of the quality do not necessarily reflect the full
scope of the modeled concepts.

The implementation of vulnerability is based on results from the MONITOR
project. Hence, it comprises of the referential-quality vulnerability, that
is specifically constantly dependent on a damage-potential9. The MONITOR
project describes damage potential as a quality of the environment. In our implementation we only model the damage potential as quality, but do not model
an environment explicitly. From the MONITOR account of vulnerability we concluded that the quale of vulnerability is a defined damage extent, which resides
in a special quality space for damage extents. damage-extent is a subcategory
of quale. Our implementation does not make the quality space explicit. Figure
3 shows the UML diagram of the vulnerability implementation.

As an example of how to apply vulnerability as a referential quality, we
implemented a small set of instances that reflect the vulnerability of a society to an earthquake for the case of Haiti. We introduced a subcategory
society of agent, because we treat the society as one whole, abstracting from
its constituting institutions, government and people. The category society
has one individual called haitian-society. The vulnerability individual is
called haitian-vulnerability-to-earthquake and is member of the newly
introduced subcategory vulnerability-to-earthquake. The referent-role
is played by an individual haitian-damage-potential that we simply introduce as member of quality. The quale of vulnerability is a member of the
defined-damage-extent, which is labeled as earthquake-damage-extent. The
quale requires further characterization. It could stand for a damage assessed in
monetary value or number of injured and dead. The quality space would be modeled accordingly, for example as metric space for money, or as space for counts
in the case of victim numbers.

9 Note that MONITOR uses generic dependence here.
?

?

?
Object

specifically-constantly-dependent-on

Effectivity

plays-ref

inherent-in

Referent-Role

inherent-in

Affordances

specifically-constantly-dependent-on

Agent

plays-ref

Fig. 4. UML class diagram of an affordance modeled according to the referential quality
ODP. For better clarity the cardinalities are not depicted here, but are the same as in
Fig. 2. Instead, the associations are directed in this diagram.

The implementation of resilience is based on [6]. It classifies resilience
as referential-quality. Aiming for a general account, we leave the external factor as well as the host for resilience unspecified and resort to the category
spatio-temporal-particular in DOLCE. We have implemented a specific example and made it available online, further details are left out here.

The implementation of an affordance is based on Turveys [33] definition of
an affordance contrasted with an effectivity. Therefore the implementation comprises two referential-qualities: affordance and effectivity. Both are
implemented as direct subcategories of referential-quality. The implementation enforces the referent of an affordance to be the host of an effectivitiy,
which in turn needs to be a DOLCE agent. To do justice to Turveys dispositional nature of affordance, the referent of the effectivity must host
the affordance. Figure 4 illustrates the implementation of affordance as UML
diagram.

An additional exemplary implementation with individuals of a concrete affordance serves to make the affordances example more graspable and easier
to evaluate. One of the most cited investigation of an affordance is Warrens
[37] account of the stair-climbing affordance that is provided by a step with
a riser height to a person with matching leg-length. The implementation of
stair-climbability introduces two new categories for the stair-climbing affordances
and for the stair-climbing effectivity. Individuals exist for the physical-object
step1 that hosts the referential-quality step1-climbability-affordance
and depends on the agent Susan with the effectivity leg-length10. Two
referent-role individuals fill the respective object-property slots for the individuals of affordance and effectivity. Qualia and quality spaces are not
modeled in the stair-climbing example.

10 The leg length as effectivity is an abstraction that Warren [37] made in his model.

J. Ortmann and D. Daniel

6 Evaluation

There is no strict methodology to evaluate ODPs as yet but only some criteria,
such as reusability, to assess the success of an ODP [10]. Therefore, a full evaluation of the suggested ODP cannot be given at this stage. However, this section
will shed some light on how well the ODP solved the local use-cases and asses
some analytical criteria taken form information systems evaluation.

6.1 Evaluation of the ODP against the Local Use Cases

The ontological account of vulnerability is taken from the MONITOR project.
It fits the referential quality pattern nearly perfectly. The only difference is that
MONITOR suggests a generic dependence between vulnerability and its host,
whereas the referential quality pattern requires a constant specific dependence.
We chose the specific dependence to express that a particular referential quality
depends on a particular referent, but not on a category of referents. Additionally,
generic dependence cannot be implemented in OWL-DL, the target language of
this ODP. Furthermore, the choice of specific or generic dependence seems to boil
down to the philosophical stance on the environment as being shared or being
individual. This issue is out of scope of this paper, but both views are supported
in the literature. Especially, Turveys [33] use of singular forms suggests that his
objects of discourse are particulars, not universals.

The example of vulnerability to an earthquake could be implemented in
DOLCE. Nonetheless, in a real scenario this example has to be integrated with
domain ontologies that account for earthquakes. However, the evaluation should
rather prioritize the potential for application in a real project like MONITOR.
Here we find our pattern is compatible with the ontology suggested in MONI-
TOR, and can lend support to their modeling decisions.

The implementation of resilience as category in DOLCE was straight forward
and directly captures the general definition of resilience [6]. A small example
showed that it is possible to create individuals that reflect the resilience of a
society to sea-level rise. However, the implementations of resilience and also
vulnerability do not make these concepts fully operational as yet. The definitions
of structured quality spaces are still missing. As soon as qualia and structures
are identified in the domain qualia and quality spaces can be defined. Probst
[29] suggested a classification of structured quality spaces and an approach to
model them in DOLCE.

The challenge in the affordance use case was to model an affordance as property of a thing taken with reference to an observer [12]. The ODP gives a direct
implementation of this in modeling the affordance as quality of an object that
is specifically constantly dependent on an agent. The effectivity is modeled as
quality of the agent who plays the referent role. An actual realization of one
example of a stair-climbing affordance showed that it is possible and feasible to
implement affordances with this ODP in DOLCE and that this implementation
complies with a well-established theory of affordances. The affordance example
also demonstrates how two referential quality patterns can be composed.
?

?

?
6.2 Analytical Evaluation
In [4], the authors suggested five criteria to evaluate information systems: Signif-
icance, internal validity, external validity, confirmability/objectivity and reliabil-
ity/dependability/auditability. Information system engineering is close enough
to ontology engineering and the suggested categories are defined broad enough
to use them to evaluate the ODP for referential qualities.

Significance. Referential qualities can be deemed as important building blocks
of domain ontologies that account for systems or networks. The whole idea of an
ontology design pattern is to turn the theoretical significance of a concept such
as referential quality, into a practical significance. The pattern provides a small
modular extension to DOLCE that allows to account for these qualities. The
authors make clear that the theory of referential qualities is not a contribution to
metaphysics, and that the aim is rather to give domain experts a handy template
to model common structures in their domain. The practical significance can only
be evaluated in terms of the adoption and use of this pattern in the future. The
MONITOR project already employs this pattern, without making the pattern
itself explicit. The authors own ongoing work on resilience and affordances will
also benefit from this pattern.

Internal Validity. The implementation of the three local use cases demonstrates
that the ODP works and can be applied in practice. A comparison with relational
and non-relational qualities and their respective modeling approaches has revealed
the shortcomings of modelling these qualities in formal ontology with respect to
requirements stated in the literature on affordances, resilience and vulnerability.
The ODP for referential qualities overcomes these shortcomings.

External Validity. The ODP extends an existing pattern for non-relational
qualities and uses DOLCE. The implementation of the use-cases conforms with
theory in the domain, but rival theories exist that might require a different
pattern. The findings in this paper are compatible with for example the specification suggested in the MONITOR project [19] and in Warrens stair climbing
experiment [37].

In general, the idea of ODPs and modularity in ontologies is to increase the
reusability of ontologies. This pattern is intentionally kept simple to achieve
this goal. The nature of ODPs is to make the theory transferable. However,
boundaries for the use have not been suggested. The authors see a huge potential
for application in a variety of domains that deal with systems and networks in
any form. Both authors are currently employing the pattern in their ongoing
thesis work.

Confirmability/Objectivity. The design pattern is introduced in a formal
way according to [8]. An OWL-DL implementation of the ODP and of the examples is available online. The theory of referential qualities is inspired by ecological
systems and the language used by domain scientist in ecology. An ecological bias
cannot be ruled out. Furthermore, the commitment to DOLCE and its way of
modeling qualities and qualia implies a cognitive bias of the theory.

J. Ortmann and D. Daniel

Reliability/Dependability/Auditability. The research objective has been
made clear in natural language. A detailed description of the OPD is available
in formal and natural language. The basic constructs can be easily retrieved from
the ODP frame given in Sect. 4, while the implementations are available online.

7 Conclusion and Future Work

This paper formally introduced an Ontology Design Pattern for referential qual-
ities. We have discussed the idea of referential qualities and introduced the pattern according to a suggested frame. Three use cases demonstrated the practicability of the pattern. Finally, the paper evaluated the patterns with respect to
the use cases together with its general engineering grounds. The pattern is kept
general and simple to ensure a flexible and easy application. The pattern has
the potential to facilitate ontological modeling of ecological systems. It thereby
paves the way for a stronger integration of ecological models and datasets.

Future work will be at first a further application and exploration of the ODP.
A promising aspect of referential qualities is their compatibility with Kuhns
Semantic Reference Systems [20,21] and Probsts semantic reference system for
observations and measurements of qualities [29]. This opens the door for the
operationalization that the presented concepts still lack. Operationalisation entails the physical and mental measurement of a concept relative to a reference
framework [3]. The process of operationalization is an important step to a clear
understanding of a concept. Finally, one of the reviewers suggested to consider
the Description and Situations Ontology [9] as alternative to the comparably
strong commitment to DOLCE.

Acknowledgements. The authors gratefully acknowledge the reviewers comments and suggestions. This work has been partly supported through the International Research Training Group on Semantic Integration of Geospatial Information by the DFG (German Research Foundation), GRK 1498.
