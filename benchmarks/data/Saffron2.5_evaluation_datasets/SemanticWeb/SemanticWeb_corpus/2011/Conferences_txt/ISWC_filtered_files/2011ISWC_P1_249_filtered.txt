Verification of the OWL-Time Ontology

Michael Gruninger

Department of Mechanical and Industrial Engineering,

University of Toronto, Toronto, Ontario, Canada M5S 3G8

Abstract. Ontology verification is concerned with the relationship between the
intended structures for an ontology and the models of the axiomatization of the
ontology. The verification of a particular ontology requires characterization of
the models of the ontology up to isomorphism and a proof that these models are
equivalent to the intended structures for the ontology. In this paper we provide
the verification of the ontology of time introduced by Hobbs and Pan, which
is a first-order axiomatization of OWL-Time. We identify five modules within
this ontology and present a complete account of the metatheoretic relationships
among the modules and between other time ontologies for points and intervals.

1 Introduction

Over the years, a number of first-order ontologies for time have been proposed. In addition to ontologies for timepoints and ontologies for time intervals ([2]), there are
also ontologies that axiomatize both timepoints and time intervals together with the relationships between them. More recently, Hobbs and Pan ([10], [12]) have proposed
a first-order axiomatization Towltime of OWL-Time1 as an ontology of time for the
Semantic Web that also includes both timepoints (referred to as instants) and intervals.
The primary objective of this paper is to provide a characterization of the models
of Towltime up to isomorphism using the notion of theory reducibility from [6]. This
will lead to a modularization of Towltime and allow us to identify incorrect or missing
axioms in the current axiomatization of Towltime. Finally, we will also use this reduction
to compare Towltime to other time ontologies for points and intervals, and address the
question as to whether Towltime forms an adequate core theory for time ontologies, or
whether it is too weak or too strong to play such a role.

2 Ontology Verification

Our methodology revolves around the application of model-theoretic notions to the design and analysis of ontologies. The semantics of the ontologys terminology can be
characterized by a set of structures, which we refer to as the set of intended structures
for the ontology. Intended structures are specified with respect to the models of wellunderstood mathematical theories (such as partial orderings, lattices, incidence struc-
tures, geometries, and algebra). The extensions of the relations in an intended structure
are then specified with respect to properties of these models.

1 http://www.w3.org/TR/owl-time/

L. Aroyo et al. (Eds.): ISWC 2011, Part I, LNCS 7031, pp. 225240, 2011.
c Springer-Verlag Berlin Heidelberg 2011

M. Gruninger

Why do we care about ontology verification? The relationship between the intended
models and the models of the axiomatization plays a key role in the application of
ontologies in areas such as semantic integration and decision support. Software systems
are semantically integrated if their sets of intended models are equivalent. In the area of
decision support, the verification of an ontology allows us to make the claim that any
inferences drawn by a reasoning engine using the ontology are actually entailed by the
ontologys intended models. If an ontologys axiomatization has unintended models,
then it is possible to find sentences that are entailed by the intended models, but which
are not provable from the axioms of the ontology. The existence of unintended models
also prevents the entailment of sentences or a possible barriers to interoperability.

With ontology verification, we want to characterize the models of an ontology up
to isomorphism and determine whether or not these models are elementarily equivalent
to the intended structures of the ontology. From a mathematical perspective this is formalized by the notion of representation theorems. The primary challenge for someone
attempting to prove representation theorems is to characterize the models of an ontology
up to isomorphism. For this we use the following notion from [6]:

Definition 1. A class of structures M can be represented by a class of structures N iff
there is a bijection  : M  N such that for any M  M, M is definable in (M)
and (M) is definable in M.

The key to ontology verification is that a theorem about the relationship between the
class of the ontologys models and the class of intended structures can be replaced
by a theorem about the relationship between the ontology (a theory) and the theory
axiomatizing the intended structures (assuming that such axiomatization is known). We
can use automated reasoners to prove this relationship and thus verify an ontology in a
(semi-)automated way.

The relationship between theories TA and TB is the notion of interpretation ([5]),
which is a mapping from the language of TA to the language of TB that preserves the
theorems of TA. If there is an interpretation of TA in TB, then there exists a set of
sentences (referred to as translation definitions) in the language LA  LB of the form

(x) pi(x)  (x)

where pi(x) is a relation symbol in LA and (x) is a formula in LB. Translation definitions will be used extensively in the proofs of theorems later in the paper.

We will say that two theories TA and TB are definably equivalent iff they are mutu-

ally interpretable, i.e. TA is interpretable in TB and TB is interpretable in TA.

The key to using theorem proving and model finding to support ontology verification

is the following theorem ([6]):

Theorem 1. A theory T1 is definably equivalent with a theory T2 iff the class of models
M od(T1) can be represented by M od(T2).

Let Mintended be the class of intended structures for the ontology, and let Tonto be
the axiomatization of the ontology. The necessary direction of a representation theorem
?

?

?
(i.e. if a structure is intended, then it is a model of the ontologys axiomatization) can
be stated as

M  Mintended  M  M od(Tonto)

If we suppose that the theory that axiomatizes Mintended is the union of some previously known theories T1, ..., Tn, then by Theorem 1 we need to show that Tonto interprets T1  ...  Tn. If  is the set of translation definitions for this interpretation,
then the necessary direction of the representation theorem is equivalent to the following
reasoning task:

Tonto   |= T1  ...  Tn

The sufficient direction of a representation theorem (any model of the ontologys axiomatization is also an intended structure) can be stated as

M  M od(Tonto)  M  Mintended

In this case, we need to show that T1  ...  Tn interprets Tonto. If  is the set of translation definitions for this interpretation, the sufficient direction of the representation
theorem is equivalent to the following reasoning task:

T1  ...  Tn   |= Tonto

Proving these two entailment problems constitutes the reducibility theorem for Tonto;
the set of theories T1, ..., Tn form the reduction of Tonto.

All of the theories introduced in this paper are being investigated in the context of
the COLORE (Common Logic Ontology Repository) project, which is building an open
repository of first-order ontologies that serve as a testbed for ontology evaluation and
integration techniques, and that can support the design, evaluation, and application of
ontologies in first-order logic. We identify the theories for the reduction by searching
through the COLORE ontology repository for ontologies that are definably equivalent
to the ontology that we are verifying, and then prove that the mappings between the
ontologies are correct.

3 Modularization of OWL-Time

The verification of the OWL-Time Ontology Towltime will also provide a decomposition of the ontology into a set of subtheories which are related by conservative exten-
sion. We will not present the verification of the entire OWL-Time Ontology in this pa-
per; rather we will focus on the subtheory Ttimespan of Towltime that omits the axioms
for durations and dates. Furthermore, throughout the paper we will identify additional
axioms that are required to prove the representation theorems, leading to the specifica-

timespan as an extension of Ttimespan. By the end of the paper, we
tion of a theory T

will show that T
timespan is definably equivalent to the following theories (which will
be introduced and discussed in detail in the following sections) from COLORE:
Tlinear_order  Tpseudo_complete  Tlog  Tweak_planar  Tdiamond

M. Gruninger

In Figure 1, we can see which subsets of these theories interpret subtheories of Towltime,
and this set of subtheories 2 constitutes the modules within Towltime. In this way, modules within OWL-Time are obtained by identifying ontologies within the COLORE
ontology repository that are definably equivalent to subtheories of OWL-Time. In the
following sections, we will specify the reduction theorems for each of these subtheories,
culminating in the representation theorem for T


owltime.

Tsemilinear order  Tcsgg  Tslog  Tweak planar  Tdiamond

Tsemilinear order  Tcsgg  Tslog  Tweak planar

Tsemilinear order  Tcsgg  Tslog

Tsemilinear order  Tcsgg

Tsemilinear order

Towltime duration

Towltime

Ttimespan

Teventuality

Towltime inside

Towltime interval

Towltime instants

Fig. 1. Relationships between the subtheories of Towltime and the theories from COLORE which
are used to prove the representation theorem for Towltime. Solid lines denote conservative extension and dotted lines denote interpretability between theories.

4 Instants and Intervals

The first two modules within OWL-Time that we will consider are Towltime_instant
and Towltime_interval, which axiomatize fundamental intuitions about timepoints (In-
stants) and time intervals (Intervals). Besides the objective of ontology verification,
we will also be interested in using the reduction of Towltime_interval to determine the
relationship to other ontologies for timepoints and time intervals. Given an existing
ontology T of timepoints and intervals, we will identify the theory that is a common
extension of both Towltime_interval and T , and also identify the common subtheory of
Towltime_interval and T .
2 The original first-order axiomatization of Towltime can be found at

http://www.cs.rochester.edu/ ferguson/daml/
daml-time-nov2002.txt
The CLIF (Common Logic Interchange Format) axiomatization of the subtheories of Towltime
discussed in this paper can be found at
http://stl.mie.utoronto.ca/colore/time/owltime_instants.clif
http://stl.mie.utoronto.ca/colore/time/owltime_interval.clif
http://stl.mie.utoronto.ca/colore/time/owltime_inside.clif
http://stl.mie.utoronto.ca/colore/time/eventuality.clif
http://stl.mie.utoronto.ca/colore/time/timespan.clif
?

?

?
4.1 Time Ontologies for Points

Ontologies for time points have been studied in [2] and [9], and all axiomatize an ordering relation over the points. Although Hobbs and Pan rightly argue that a restriction
to linear orders is too strong, allowing arbitrary partial orderings is arguably too weak.
We consider the following extension:

Definition 2. Towltime_instant_s is the extension of Towltime_instant with the axiom
(x, y)Instant(x)Instant(y)  (z)(bef ore(z, x)(z = x))(bef ore(z, y)(z = y)))

It is straightforward to see that the resulting ordering on the set of instants is a semilinear
ordering [4] as axiomatized by the theory Tsemilinear_ordering

3.

4.2 Time Ontologies for Points and Intervals

In his Catalog of Temporal Theories [9], Hayes introduced three time ontologies that
axiomatize both timepoints and time intervals. The endpoints theory combines the language of intervals and points by defining the functions beginof, endof, and between to relate intervals to points and vice-versa. This theory imports the axioms of linear_point
that define the binary before relation between timepoints as transitive and irreflexive,
and impose the condition that all timepoints are linearly ordered and infinite in both
directions. The vector_continuum theory is a theory of timepoints and intervals that
introduces the notion of orientation of intervals. It also imports theory linear_point. In
this theory single-point intervals, known as moments, are defined as intervals whose beginof and endof points are the same. The point_continuum theory combines intervals
and points by defining the relation in that relates a point to the interval it is contained
in. The verification of these three time ontologies is given in [7].
The theory IQ in [13] (which we will refer to as Tvila in this paper) is a common subtheory for all of the ontologies of time points and intervals. Later in the paper,
we will characterize the relationship between Tvila and Towltime_interval. To lay the
groundwork for this characterization, we review the classes of structures that will be
used for the reducibility theorem for these theories.

Graphical Incidence Structures. The basic building blocks for the models presented
in this paper are based on the notion of incidence structures ([3]).
Definition 3. A k-partite incidence structure is a tuple I = (1, ..., k, in), where
1, ..., k are sets with
?

?

?
i  j = , i = j
i  j)
in  (

and

i=j

Two elements of I that are related by in are called incident.

3 http://stl.mie.utoronto.ca/colore/ordering/

semilinear_ordering.clif

M. Gruninger

The models of the time ontologies in this paper will be constructed using special classes
of incidence structures.

Definition 4. An strong graphical incidence structure is a bipartite incidence structure

S = X, Y, inS

such that all elements of Y are incident with either one or two elements of X, and for
each pair of points p, q  X there exists a unique element in Y that is incident with
both p and q.

The class of strong graphical incidence structures is axiomatized by Tstrong_graphical

Definition 5. A loop graphical incidence structure is a bipartite incidence structure

S = X, Y, inS

such that all elements of Y are incident with either one or two elements of X, and for
each pair of points p, q  X there exists a unique element in Y that is incident with
both p and q, and for each point r  X there exists a unique element in Y that incident
only with r.

The class of loop graphical incidence structures is axiomatized by Tloop_graphical

These classes of incidence structures get their names from graph-theoretic represen-

5.

tation theorems of their own.

Definition 6. A graph G = (V, E) consists of a nonempty set V of vertices and a set
E of ordered pairs of vertices called edges.

An edge whose vertices coincide is called a loop. A graph with no loops or multiple

edges is a simple graph.

A complete graph is a graph in which each pair of vertices is adjacent.

Theorem 2. Let G = (V, E) be a complete graph.
isomorphic to I = (V, E,).

A bipartite incidence structure is a strong graphical incidence structure iff it is

Theorem 3. Let G = (V, E) be a complete graph with loops.
isomorphic to I = (V, E,).

A bipartite incidence structure is a loop graphical incidence structure iff it is

These representation theorems show that there is a one-to-one correspondence between
the particular class of incidence structures and the given class of graphs; in so doing,
we have a characterization of the incidence structures up to isomorphism.

4 http://stl.mie.utoronto.ca/colore/incidence/

strong-graphical.clif

5 http://stl.mie.utoronto.ca/colore/incidence/

loop-graphical.clif
?

?

?
Reducibility Theorems for Points and Intervals. We will ultimately be interested in
determining the relationship between the theory Tvila and Towltime_interval. On the one
hand, one of the design objectives for OWL-Time was to be a relatively weak theory
that could be consistently extended to other time ontologies. On the other hand, Tvila is
the common subtheory of existing time ontologies for points and intervals.

The approach taken in this paper is to compare different time ontologies by comparing the theories in their reductions. Using the axiomatizations of these classes of
incidence structures, we can prove the following reducibility theorem for Tvila.
Theorem 4. Tvila is definably equivalent to

Tlinear_order  Tstrong_graphical

Proof.

Using the same set of translation definitions, we can also prove the following:
Theorem 5. Let Tmoment be the extension of Tvila with the axiom
(t) timepoint(t)  (i) timeinterval(i)  (beginof(i) = t)  (endof(i) = t)
Tmoment is definably equivalent to

Tlinear_order  Tloop_graphical

In the next section we will show how this theory Tmoment is definably equivalent to an
extension of Towltime_interval.

4.3 Reducibility Theorems for Extensions of Towltime_interval
Given that the time ontologies in [9] and [13] use linear orderings over timepoints, We
introduce the following extensions and subtheories of Towltime_interval that impose a
linear ordering on instants.

Towltime_linear is the extension of Towltime_interval with the axiom
(t1, t2) Instant(t1)  Instant(t2)  (bef ore(t1, t2)  bef ore(t2, t1)  (t1 = t2))
Towltime_e is the extension of Towltime_interval with the axiom

(i) Interval(i)  (t1, t2) begins(t1, i)  ends(t2, i)

Towltime_leu is the extension of Towltime_le with the axiom

Towltime_le is the extension of Towltime_linear with Towltime_e.
(t1, t2, i1, i2) begins(t1, i1) ends(t2, i1) begins(t1, i2) ends(t2, i2)  (i1 = i2)
Towltime_m is the subtheory of Towltime without the axioms
(t) (Instant(t)  begins(t, t))
(t) (Instant(t)  ends(t, t))

The relationships between these theories are shown in Figure 2.

M. Gruninger

Tmoment

Towltime leu

Tvila

Towltime mleu

Towltime le

Towltime se

Towltime e

Towltime linear

Towltime semilinear

Towltime interval

Towltime m

Fig. 2. Relationships between extensions of Towltime_interval and other time ontologies for
points and intervals. Dotted lines denote nonconservative extension and solid lines denote definable equivalence.

Theorem 6. Towltime_leu is definably equivalent to

Tlinear_order  Tloop_graphical

Proof. Let 1 be the following set of translation definitions:

(x) point(x)  Instant(x)
(x) line(x)  Interval(x)

(x, y) inG(x, y)  (begins(x, y)  ends(x, y))

(x, y) bef ore(x, y)  lt(x, y)

Using Prover9 [11], we have shown that6

Towltime_le  1 |= Tlinear_order  Tloop_graphical

Let 1 be the following set of translation definitions:

(x) Instant(x)  point(x)

6 All proofs in this paper that have been generated by Prover9 can be found at

http://stl.mie.utoronto.ca/colore/time/mappings/proofs/
?

?

?
(x) Interval(x)  line(x)

(x, y) begins(x, y)  ((inG(x, y)  ((z) inG(z, y)  lt(x, z))
(x, y) ends(x, y)  ((inG(x, y)  ((z) inG(z, y)  lt(z, x))

(x, y) bef ore(x, y)  lt(x, y)

Using Prover9, we have shown that

Tlinear_order  Tloop_graphical  1 |= Towltime_le

Combining Theorem 6 and Theorem 4 gives us

Corollary 1. Towltime_leu is definably equivalent to Tmoment.

Since all subtheories and extensions of Towltime_interval have the same nonlogical lex-
icon, we can use the same translation definitions as in the proof of Theorem 6 to prove
the following theorem:

Theorem 7. Towltime_mleu is definably equivalent to

Tlinear_order  Tstrong_graphical

Combining Theorem 7 and Theorem 5 gives us

Corollary 2. Towltime_mleu is definably equivalent to Tvila.

4.4 Semilinear Ordering on Instants

If we now generalize these results to semilinear orderings on instants, then we need to
consider a different class of structures for the reducibility theorem.

Definition 7. A semilinear betweenness relation B is a ternary relation that is definable in a semilinear ordering X, < by the formula

(x, y, z) B(x, y, z)  (((x < y)  (y < z))  ((z < y)  (y < x)))

The semilinear betweenness relation captures the notion of comparability among instants within the semilinear ordering. The key axiom of Towltime_interval is the one
which states that for every two comparable points, there exists an interval of which they
are the endpoints. This relationship between intervals and the ordering over instants is
then captured by the following class of structures:
Definition 8. A closed semilinear graphical geometry is a structure S = X, Y, B, inG
such that
1. B = X, B is a semilinear betweenness relation;
2. I = X, Y, inG is a graphical incidence structure;

M. Gruninger

3. triples of points in the extension of the betweenness relation B are incident with the

same line in Y ;

4. any triple of points that are incident with the same line in Y are ordered by the

betweenness relation B.

The class of closed semilinear graphical geometries is axiomatized by Tcsgg

7.

We did not need this class for extensions of Towltime_interval with linear orderings
because all instants in a linear ordering are comparable. This is not the case with semilinear orderings  elements on different branches are not comparable.

We can use translation definitions similar to those from the proof of Theorem 6 to
prove the reducibility theorem for Towltime_se:
Theorem 8. The theory Towltime_se = Towltime_interval_e  Towltime_instant_s is
definably equivalent to

Tsemilinear_order  Tcsgg

4.5 Intervals without Begin and Ends

The preceding sections have shown the reducibility of theories that are extensions of Towltime_e (which requires that all intervals have endpoints) rather than
Towltime_interval (which allows intervals that do not have beginning or end in-
stants). Nevertheless, we can use these results to provide a representation theorem for
Towltime_interval.
Definition 9. Let I = P, I, in be an incidence structure.
A line l  I is solitary iff it is incident with a unique point.
A line l  I is isolated iff it is not incident with any point.

Theorem 9. Any model M of Towltime_interval contains as substructures a unique
model N of Towltime_e and a bipartite incidence structure I = P, L R C, in such
that

M = N  I

where L and R are disjoint sets of solitary lines and C is a set of isolated lines.

4.6 Discussion

If we consider the summary of results in Figure 2, we can see that Towltime_leu is the
theory which is a common extension of both Towltime_interval and Tvila. In addition,
Towltime_mleu is the common subtheory of Towltime_interval and Tvila; as such, it is
intepretable by all existing time ontologies for points and intervals.

As a consequence of these results, we can see that Towltime_interval is not interpretable by all of the existing ontologies for timepoints and intervals; in other words,
there are ontologies that are not definably equivalent to any consistent extension of
Towltime_interval. In particular, it is not interpretable by any time ontology that prevents the existence of moments [1], such as Tendpoints from [9].

7 http://stl.mie.utoronto.ca/colore/geometry/csgg.clif
?

?

?
5 Inside Intervals

Moving on to the next module Towltime_inside of Towltime, we encounter a new rela-
tion, inside, between instants and intervals. Before we introduce the classes of structures required to characterize the models of this module, we briefly discuss the problem
of unintended models of Towltime_inside.

5.1 A Critique of the Axioms

Ordering on Instants Inside an Interval. Mace can be used to construct a model of
Towltime_interval that satisfies the sentence
(t1, t2, i)inside(t1, i)inside(t2, i)bef ore(t1, t2)bef ore(t2, t1)(t1 = t2))
that is, a model in which the Instants in an Interval are not linearly ordered, even though
the axioms do entail the condition that the beginning and end instants themselves are
linearly ordered.

We add the following axiom to Towltime to guarantee that all Instants in an Interval

are linearly ordered:

(t1, t2, i) inside(t1, i)  inside(t2, i)

 (bef ore(t1, t2)  bef ore(t2, t1)  (t1 = t2))

(1)

Which Instants are Inside? Although Hobbs and Pan assert:

The concept of inside is not intended to include the beginnings and ends of
intervals.

the axiomatization in Towltime_inside does not quite capture these intended models.
While we can use Prover9 to show that the following sentence is entailed by Towltime
(i, t1, t2) P roperInterval(i) begins(t1, i) ends(t2, i)  inside(t1, i)inside(t2, i)
Mace can be used to construct models of Towltime_inside that falsify each of the following sen-
tences:

(i, t1) P roperInterval(i)  begins(t1, i)  inside(t1, i)
(i, t1) P roperInterval(i)  ends(t1, i)  inside(t1, i)

(i, t1) Interval(i)  begins(t1, i)  inside(t1, i)
(i, t1) Interval(i)  ends(t1, i)  inside(t1, i)

In other words, Towltime_inside is not strong enough to eliminate models in which only
the beginnings or ends of intervals are included as instants inside the interval.

If we are to entail these sentences (which should follow from the original intuition),

we need to extend Towltime with the following two sentences:

(i, t1, t2) inside(t1, i)  begins(t2, i)  bef ore(t2, t1)
(i, t1, t2) inside(t1, i)  ends(t2, i)  bef ore(t1, t2)

(2)

(3)

M. Gruninger

5.2 Semilinear Ordered Geometries

When we used incidence structures to represent the models of Towltime_interval, we
only needed to worry about two instants that are incident with an interval, namely, the
beginning and the end. For models of Towltime_inside, intervals may be incident with
a larger set of instants that are linearly ordered. We therefore need to introduce a new
class of structures.
Definition 10. A semilinear ordered geometry is a structure L = X, Y, B, inL such
that
1. B = X, B is a semilinear betweenness relation;
2. I = X, Y, inL is a weak bipartite incidence structure;
3. any triple of points that are incident with the same line in Y are ordered by the

betweenness relation B.

The class of semilinear ordered geometries is axiomatized by Tslog

8.

5.3 Reducibility Theorem for Towltime_inside

owltime_inside be the axioms in Towltime_inside  Towltime_se together with Ax-


Let T
ioms 1, 2, and 3.

owltime_inside is definably equivalent to

Theorem 10. T

Tsemilinear_order  Tcsgg  Tslog

Proof. Let 2 be the set of translation definitions in 1 together with:

(x, y) inL(x, y)  inside(x, y)

(x, y, z)B(x, y, z)  ((bef ore(x, y)bef ore(y, z))(bef ore(z, y)bef ore(y, z)))
Using Prover9, we have shown that


owltime_inside

 2 |= Tsemilinear_order  Tcsgg  Tslog

Let 2 be the set of translation definitions in 1 together with:

(x, y) inside(x, y)  inL(x, y)

Using Prover9, we have shown that

Tsemilinear_order  Tcsgg  Tslog  2 |= T


owltime_inside

8 http://stl.mie.utoronto.ca/colore/geometry/slog.clif
?

?

?
6 Eventualities

Hobbs and Pan introduce the class of eventualities to cover events, states, processes,
propositions, states of affairs, and anything else that can be located with respect to
time. In this section, we characterize the models of the two subtheories, Teventuality
and Ttimespan, of Towltime which axiomatize the intuitions for eventualities and their
relationships to instants and intervals.

6.1 Weak Planar Geometries

Since Teventuality extends Towltime_interval, a natural approach is to extend the geometries that are the underlying structures for the intended models.

Definition 11. A weak planar geometry is a tripartite incidence structure

E = X, Y, Z, inE

in which N(q) is a linear ordered geometry for each q  Z.
Examples of weak planar geometries can be found in Figure 3(a) and 3(b). In each
example, the incidence relation between the eventuality e1 and the intervals ij corresponds to the during relation; the incidence relation between e1 and the instants tk
corresponds to the atTime relation.

e1

e1

e1

i0

i1

i2

i1

i2

i1

i2

t1

t2

t3

t4

t1

t2

t3

t1

t2

t3

(a)

(b)

(c)

Fig. 3. Examples of weak planar geometries and diamond geometries

The class of weak planar geometries is axiomatized by Tweak_planar

9.

6.2 Reducibility Theorem for Teventuality

Let T

eventuality be the axioms in Teventuality  T



inside together with
(e) Eventuality(e)  T emporalEntity(e)

(e) atT ime(e)  Eventuality(e)
(e) during(e)  Eventuality(e)

(t, e) timeSpan(t, e)  Eventuality(e)  T emporalEntity(e)

9 http://stl.mie.utoronto.ca/colore/geometry/weak_planar.clif

(4)

(5)
(6)
(7)

M. Gruninger

Theorem 11. Teventuality is definably equivalent to

Tsemilinear_order  Tcsgg  Tslog  Tweak_planar

Proof. Let 3 be the set of translation definitions in 2 together with:

(x, y) inE(x, y)  (inside(x, y)  during(x, y)  atT ime(x, y))

Using Prover9, we have shown that

Teventuality  3 |= Tsemilinear_order  Tcsgg  Tslog  Tweak_planar

Let 3 be the set of translation definitions in 2 together with:

(x) eventuality(x)  plane(x)

(x, y) during(x, y)  inE(x, y)  plane(x)  line(y)
(x, y) atT ime(x, y)  inE(x, y)  plane(x)  point(y)

Using Prover9, we have shown that

Tsemilinear_order  Tcsgg  Tslog  Tweak_planar  3 |= Teventuality

6.3 Diamond Semilattices

We can now proceed to the final class of structures that we will need to characterize
models of Teventuality as part of the full representation theorem.

Definition 12. A diamond semilattice is a bounded semilattice in which all nonextremal
elements are incomparable.

Definition 13. A diamond geometry is a tripartite incidence structure

D = X, Y, Z, inD

in which N(q) is isomorphic to a diamond semilattice for each q  Z.

The class of diamond geometries is axiomatized by Tdiamond

10.

Figure 3(c) is an example of a diamond geometry, which is isomorphic to the extension of the timespan relation; note that it is a substructure of the weak planar geometry
in Figure 3(b). Figure 3(a) is an example of a weak planar geometry that does not contain a diamond geometry as a substructure; this corresponds to a model of Ttimespan in
which the extension of the timespan relation is empty.

10 http://stl.mie.utoronto.ca/colore/geometry/diamond.clif
?

?

?
6.4 Reducibility Theorem for Ttimespan
timespan = Ttimespan  T


eventuality is definably equivalent to

Theorem 12. T

Tsemilinear_order  Tcsgg  Tslog  Tweak_planar  Tdiamond

Proof. Let 4 be the set of translation definitions in 3 together with:

(x, y) inD(x, y)  timeSpan(x, y)

Using Prover9, we have shown that


timespan

 4 |= Tsemilinear_order  Tcsgg  Tslog  Tweak_planar  Tdiamond

Let 4 be the set of translation definitions in 3 together with:

(x, y) timeSpan(x, y)  (inD(x, y)  plane(x)  ((z) line(z)  inE(z, x)

((w) point(w)  (inE(w, x)  inE(w, z)))))

Using Prover9, we have shown that
Tsemilinear_order  Tcsgg  Tslog  Tweak_planar  Tdiamond  4 |= T


timespan

7 Representation Theorem for Towltime


timespan in Theorem 12 is the first step in the verification of the

The reducibility of T
ontology The second step is to define the class of intended models:
Definition 14. Mowltime is the following class of structures: M  Mowltime iff
1. M = P  G  L  E  D, where

(a) P = P, < is a linear ordering;
(b) G = P, I, inG is a closed semilinear graphical geometry;
(c) L = P, I, B, inL is a semilinear ordered geometry;
(d) E = P, I, E, inE is a weak planar geometry;
(e) D = P, I, E, inD is a diamond geometry.

2. p1, p2  before iff p1 < p2;
3. p, i  begins iff p, i  inG
and for any p  P such that p
, i  inG, we have p < p
4. p, i  ends iff p, i  inG
and for any p  P such that p
, i  inG, we have p
5. p, i  inside iff p, i  inL;
6. e, p  atTime iff e  E, p  P and e, p  inE;
7. e, i  during iff e  E, i  I and e, i  inE;
8. t, e  timeSpan iff t, e  inD and N(e) = K1,m,n.

timespan:

We can now state the Representation Theorem for T

< p;

;
?

?

?
Theorem 13. M  Mowltime iff M  M od(T
Proof. The theorem follows from Theorem 12 and Theorem 1, together with the fact
that each of the substructures of M  Mowltime corresponds to a theory in the reduction  Tsemilinear_order axiomatizes the class of semilinear orderings, Tcsgg axiomatizes the class of closed semilinear graphical geometries, Tslog axiomatizes the class
of semilinear ordered geometries, Tweak_planar axiomatizes the class of weak planar
geometries, and Tdiamond axiomatizes the class of diamond geometries.


timespan).

8 Summary

The first-order time ontology for the Semantic Web proposed by Hobbs and Pan aims to
be a core ontology for specifying temporal concepts for a wide variety of web applications and services. If it is to play this role effectively, we need a characterization of the
models of the ontology and a guarantee that these models are equivalent to the intended
models of the ontologys concepts. In this paper, we have provided a characterization
of the models of Towltime up to isomorphism. This verification of Towltime has also led
to modularization of the ontology and the identification of additional axioms to capture
intuitions for intended models. We have also shown that two axioms of Towltime make
it inconsistent with some existing time ontologies for points and intervals.

The next step is the proof of representation theorems for all of Towltine, including

the axioms for duration and dates, based on the duration and dates ontology in [8].
