Extending a Multi-Responsive Communication 

Architecture for Web Service Description  
Adrian Benfell

Kecheng Liu

Director, Informatics Research Centre, 

 Henley Business School,  
University of Reading,  

RG6 6WB. United Kingdom.  

Building 42, Whiteknights, Reading.  
k.liu@henley.reading.ac.uk

University of Portsmouth, 

Portsmouth Business School,  

Department of Strategy and Business Systems, 
Richmond Building, Portland Street, Portsmouth.  

PO1 3DE. United Kingdom.  
adrian.benfell@port.ac.uk

ABSTRACT
Reported in this paper is the view that contemporary web service 
description enabled  by techniques such as WSDL and Semantic 
Web technologies are not sufficient when matching web services 
with a set of continuously evolving user requirements driven by 
organisational objectives.  A project that tried to incorporate web 
services  into  a  software  deployment  is  used  as  the  vehicle  to 
highlight such limitations.  Consequently, we report on a method 
devised to supplement web services with pragmatic information 
and propose that adding pragmatic information to web services is 
a  research  challenge  that  needs  addressing.    In  addition  to  the 
move  proposed  in  this  paper,  we  claim  that  the  concept  of 
pragmatic  is  an  often  misguided  term  when  aligned  to  web 
service use in organisational contexts of different kinds.   
Categories and Subject Descriptors
D.2.1 [Requirements  Specification]: Reusable  Software    web 
services.  
General Terms 
Semiotics. 
Keywords
Pragmatic, Ontology, Semiotics, Web Services. 
1. INTRODUCTION 
In  this  paper  we  attempt  to  define  a  notion  of  pragmatic 
information  and  the  way  it  may  be  added  as  an  additional 
description to web services to meet the challenge of discovering 
web services that are more appropriately linked to contextualised 
use within organisations.    This  particular challenge relates  to  a 
project that incorporated the use of SOAP-based web services and 
the limitations that developed when the project requirements were 
unstable.   
Pragmatic information as we determine it relates to Peircean 
semiotics [22] and the role that particular types of sign take when 
all interested parties need to communicate.  We focus on Peircean 
semiotics, a theory popularised by Morris [19] when he used the 
terms syntactics, semantics and pragmatics.   

Permission to make digital or hard copies of all or part of this work for 
personal or classroom use is granted without fee provided that copies are 
not  made  or  distributed  for  profit  or  commercial  advantage  and  that 
copies bear this  notice and  the full  citation  on the  first page.  To  copy 
otherwise,  or  republish,  to  post  on  servers  or  to  redistribute  to  lists, 
requires prior specific permission and/or a fee. 
I-SEMANTICS  2011,  September  7-9,  2011  Graz,  Austria
Copyright  ACM 978-1-4503-0014-8/10/09... $10.00 

Broadly speaking, we use Morris term, syntactics, to relate 
to  web  services  that  may  be  described  by  the  Web  Services 
Description Language (WSDL) [31], semantics as it relates to the 
object  in  Peircean  semiotics,  and  pragmatics  to  interpretant, 
also  a  concept brought  into  play  from Peirce [22] to categorise 
various  types  of  sign.    Hence,  the  definition  of  pragmatic 
information that we allude to connects to web services described 
in such a way that organisational context through relevance and 
agreement is taken into account as interpretant signs. 
This paper is structured as follows: in section (2) we describe 
the case study, referred to as the project that is used to illustrate 
the measures taken to add pragmatic information to web services.  
In section (3) the term pragmatic information is characterised, and 
finally in section (4) the outcomes are discussed. 
2. THE CASE STUDY 
This case study is based upon a two-year project that aims to take 
the  skill  sets  of  older  workers  (particular  to  people  over  55), 
typically organised in a Curriculum Vitae (CV), and match them 
against  an  employment  database  that  contains  an  ontology  of 
terms normally  found in Human Resource  (HR) departments  in 
the  UK.    The  project  is  based  upon  the  idea  of  intelligent 
employment  candidate  searching  and  matching  focused  upon  a 
talent pool concept.  The centralised talent pool for this project is 
a bespoke development for older workers whom have a working 
history linked to skill shortage areas in the UK.  To build up the 
HR ontology for older workers, key profile characteristics include 
skills,  experience,  aspirations,  financial  conditions,  work-life 
priorities,  personal  needs  and  social  needs.    Although  these 
considerations may be related to all working age groups, each one 
forms a unique range of variables for older workers.  The project 
sits within a tumultuous social climate. 
The  primary  functional  specification  of  the  project  is  to 
enable the specific matching between employment specification to 
CV, CV to employment specification, employment specification 
to employment specification and CV to CV.  Within this project 
the HR ontology is seen as a vocabulary, a grammar, and semantic 
meanings.     The methods  proposed  for  the HR ontology  based 
matching process relate to the creation of a structured description 
in an XML format, or a CV in a word processed/pdf format that is 
parsed  to  a  web  service.    Other  considerations  connected  to 
employment  specification  and  CV  creation  includes  the  use  of 
ontology annotation tools in the longer term.   
Initially the project went through some controlled exploration 
to suggest appropriate ways of implementation.  Early simulation 
can be found at Xu [32].  All stakeholders agreed that a suitable 
implementation  mechanism  would  follow  a  subscription  based 
model  where  appropriate  web  services  could  be  configured  and 


the web services to exhibit characteristics similar to Software as a 
Service (SaaS), as the project owners had very little exposure to 
software  deployment  using  web  services.    All  were  very 
surprised  to  learn  that  they  had  to  access  the  core  software 
components  through  various  connections  described  in  a  WSDL 
file once they had agreed a contract.  The web service provider, at 
the  start  of  the  project,  said  that  essential  understanding  for 
operating the web services is contained in a manual that explains 
the WSDL-SOAP connections and the endpoints the web service 
can be contacted at.  The descriptions provided are predominantly 
syntactic, as semantic and pragmatic (as we defined them earlier 
in this paper) did not exist to support the project owners as web 
service  consumers.    The  project  owners  were  left  with  the 
question of managing organisational complexity for the project, as 
an evolving set of requirements that had to match a group of prebuilt web services.   
3. MANAGING ORGANISATIONAL 
COMPLEXITY FOR THE PROJECT 
The concept of affordance was turned to as a tool to manage the 
evolving set of requirements driven by the imposed organisational 
complexity.    Such  a  move  was  taken  in  an  attempt  to  reduce 
abstraction, and to capture the project requirements as a collection 
of rules held in a repository to allow modification as required.  
Affordance, as first presented by Gibson [12], are the capabilities 
of  a  person  that  allows  them  to  perform  meaningful  actions. 
Subsequently, affordance was characterised by Stamper [27, 28] 
as 
the  cultural  and 
organisational context that people find themselves in.  The signs 
present in everyday interaction enable people to undertake actions 
in relation to sign meaning, people define sign meanings as they 
relate to what they think exists, firstly as a social construction and 
secondly  as  sign  meanings  that  undergo  constant  change.  
Furthermore, affordance stresses the interaction between a person 
and  its  environment  as  a  collection  of  signs  that  set  normative 
behavioural  patterns (a  crucial  feature  of this  project  due  to  its 
social  climate).    Signs  in  this  context  govern  the  creation  of 
pragmatic  information  as  we  believe  it  be,  coupled  with  the 
premise that this move would be most appropriate to capture the 
evolutionary  project  requirements.    Following  Liu  [17]  and 
Stamper  [27,  28],  pragmatic  information  in  this  context  is 
expressed in a sign structure aligned to representamen, object 
and  interpretant,  terms  created  by  Peirce  [22].    According  to 
Stamper [27, 28]: 

influence  contingent  upon 

the  social 

1.  There is no knowledge without a knower, and 
2.  There is no knowing without action. 
Stamper  [27,  28]  links  affordance  to  a  form  of  ontology 
modelling as the study and categorisation of actions that may exist 
in  some  domain.   We  took  from  the  perspective  of  the  project 
owners  whom  were  using  a  particular  language  to  express  the 
concepts  belonging  to 
the  project  domain  and  devised  a 
framework  to  represent  affordance. 
  The  case  for  adding 
pragmatic information, as we perceived it should be when allied 
to  web  services,  was  based  upon  the  nature  of  web  service 
description  and  discovery  principles  where  communication 
between the web service provider and the project owners pointed 
to an exchange of signs convened by affordance: 

1.

3. The  same  signs  had 

Signs in an XML based web service description file (WSDL 
for  example)  were  created  by  a  web  service  provider  to 
describe their web services; 
2. The project owners as web service consumers had no control 
over  or  input  into  the  signs  created  by  the  web  service 
provider; 
in  some 
standardised  format  between  web  service  providers  and 
project  owners 
to  overcome  misunderstanding  and 
ambiguity; 
4. The  web  service  providers  and  project  owners  were 
generating  different  sign  meanings  according  to  their  own 
organisational contexts.  Common ground had to be sought in 
this respect. 

to  be  communicated 

3.1 Application of Semiotics for Web Service 
Description 
Peircean  semiotics  [22]  enabled  the  examination  of  the  signs 
created  by  the  web  service  provider  and  project  owners  in  a 
subjective manner of understanding, semiosis, as the signs created 
had different meanings across all stakeholders.  Peirces view of 
semiotics was used to arrange semiosis, in a shared format based 
upon Liu and Benfell [18], so that the web service providers and 
project  owners could  jointly  engage  in web  service  description.    
For  instance,  to  form  an  understanding  of  a  sign,  Peirce  [22] 
defined the term semiosis, the interplay between the three unified 
parts:  representamen,  object  and  interpretant.    In  his  second 
account Peirce lists a collection of signs based upon these three 
component parts, used to forge joint actions in the project: 





A representamen: qualisign, sinsign and legisign;  
An object: iconic, indexical and symbolic;  
An interpretant: rheme, dicent and argument.   
In developing this theory of signs, Peirce [22] said that a sign 
is  anything  that  stands  for  something  (the  object)  to  somebody 
(the  interpretant)  through  a  process  of  semiosis.    Peirces  [22] 
unique semiotic theory facilitated the categorisation of the signs 
created by the web service provider and project holders  see table 
1.   

Table 1: Signs and Web Services 

Firstness 
Qualisign 
(A quality) 

Icon 
(A similarity  
missing.  A sign 
that resembles 
the working of a 
web service 
such as a 
diagram. 

Secondness 
Sinsign 
(An existent thing)The WSDL 
files and the manuals supplied 
by the web service provider 
describing the SOAP patterns.  

Index 
(Causal connection) The actual 
web services and operations 
were named by the web service 
consumer coupled with 
specified data types. Proper 
noun  objects were also 
indentified by both the web 
service consumer and project 
owner.

Thirdness 
Legisign 
(A convention or law) Description 
file syntax contained listings of 
web service operations and 
associated variables and the 
associated datatypes. 
Symbol 
(Refers to its object by convention 
or law) Web service and 
operation naming and datatype 
conventions were documented in 
the manual.  The project owners 
followed the conventions supplied 
by the web service provider. 


Rheme 
(Quality only  
a common 
noun) Class 
names.  
Data type 
variables: age 
for example 
were identified 
by the web ser 
provider and 
project owners 

Secondness 
Dicent 
(An sign of actual existence  a 
sentence) The web service used 
for a general tasks were 
depicted in the manual by the 
web service provider.  Actual 
operations invoked for a sub 
tasks were.  Trans-situational 
grounds forming social norms 
and directives to capture 
organisational context pertinent 
to the project owners were not 
documented. 

Thirdness 
Argument 
(An inference from dicent signs in 
context) Pragmatic information 
represented as causation in 
relation to trans-situational 
grounds captured as conditions 
aligned to capabilities.  Deontic 
regulated actions inferred from 
necessary conditions based upon 
trans-situational grounds. 

is 

to 

According to [1, 8, 10, 11, 22], Peirces version of semiotics 
accounts for the practical, and intellectual, experiences of people 
such as those responsible for describing the project requirements.  
In the project we took the view that dicent and argument signs 
determined  how  pragmatic  information  can  be  added  to  web 
services,  hence  such  signs  made  possible  the  representation  of 
ontologies that express affordances in a shared semiosis. 
3.2 Shared Semiosis in a Web Service 
Description Context 
Shared  semiosis 
the  description  of  various 
linked 
organisational  contexts,  as  society  as  an  environment  sets 
boundaries  that  enable  many  patterns  of  behaviour  possible 
Stamper  [27,  28].    Should  a  person  be  removed  from  its 
environment  (an  organisation),  the  range  of  behaviour  that  a 
person is responsible for would cease to exist  affordance.   Also, 
according to Liu [17], a person by knowing the invariants (general 
patterns of behaviour) can learn the acceptable social boundaries, 
as social norms.  According to Boella et al [5] social norms exist 
where  models  of  human  activity  are  normatively  regulated.  
Essentially social norms  provide a mechanism by which people 
through  consensus,  recognise  and  adhere  to;  social  norms 
determine the meanings people attach to signs.  Regarding norm 
enforcement, social norms are enforced by coordination motives 
that are administered by social phenomena  they are the shared 
expectations  about  a solution to a  given  problem.   The idea  of 
social norms facilitated  the capture of affordances  in a software 
tool. 
As  social  norms  are  expected  patterns  of  behaviour,  the 
project  also  suggested  a  more  stringent  form  of  control  over 
peoples  actions.    We  proposed  the  use  of  directives  (a 
classification not  linked  to  speech acts)  taken directly  from  the 
Business Motivation Model (BMM) [6].  Directives are sustained 
by penalties for violation and are an expression of the obligations 
and  rights  people  have  within  a  social  structure  [5]  and  [17].  
BMM  promotes  a  range  of  core  features  that  are  applicable  to 
structuring  organisational  objectives:    organisational  mission, 
strategy, and tactical actions that people may take to achieve the 
organisational objectives commensurate with the requirements of 
a  project.    The  directive  component  was  used  to  constrain  the 
rules that  guided the matching of  organisational  objectives with 
social norms.  Within the project, directives were supported by a 
consenting mechanism that was accepted  by the project  owners 
since  they  were  used  to  overcome  more  stringent  problems  of 
coordination and cooperation.  The purpose of considering social 
norms and directives in a shared semiosis between the web service 
provider  and  the  project  holders  was  to  initiate  a  mechanism 
whereby the signs catalogued in table 1 were created and agreed 

to by consensus.  Social norms and directives were specified using 
deontic  operators  as  they  fall  into  the  category  of  behavioural 
norms  that  is what  people  obligatory (must), permitted (may) 
and forbidden (must not do) [Liu, 17].  Directives are imposed on 
individuals through acts agreed by an organisation and were used 
to solidify the boundaries of the project.  This approach initiated 
an  understanding  of  the  organisational  context  as  an  ontology 
model.   To achieve this move, joint action and shared semiosis 
shifted to the foreground.   
3.3 Joint Action and Shared Semiosis 
Joint action, for example in OASIS [20] is used to facilitate the 
sharing  of  a  vocabulary  between  web  service  providers  and 
consumers.  We defined the vocabulary for the project, in accord 
with  shared  semiosis,  as  trans-situational  grounds  Goldkuhl 
[14].   Such  grounds  are  the  social  phenomena  brought  into the 
current  web  service  description  activity  and  conversational 
situation  that  materialises  when  web  service  providers  and 
consumers communicate, Benfell  and Liu [3].  Trans-situational 
grounds overcame the issue  of modelling the present situation 
only.  For example: 
1. Capturing  trans-situational  grounds  reduced  the  potential 
danger  of  a  narrow  and  fossilised  ontology  model  being 
developed  counter  to  the  evolving  project  requirements,  as 
there were other background features that had be solicited in 
the problem situation; 
2. Multi-responsiveness as a deontic regulated action can only 
occur if all necessary conditions  (trans-situational grounds) 
are true at any point in time; 
3. Multi-responsiveness contains a number of trans-situational 
grounds Goldkuhl [14] that can be added to at any point in 
time to  a  repository.   Goldkuhl  refers to  this  as  memory 
traces  and  cites  Giddens  [13].   Capturing  trans-situational 
grounds facilitated the specification of norm-based agency as 
it is described by Boella et al [5]; 
Inferences related to permissible use of a web service were 
drawn as deontic regulated action from a software tool and is 
continuously updated by the project owners;  
5. As directives are owned by an organisation, and by nature, 
are independent of people, they were documented as textual 
entities  that  according  to  Cooren  [9]  can  exhibit  agency.  
This promoted the need for them to be captured accurately, 
and  therefore,  communicated  in  a  norm-based  framework 
implementation.  
Trans-situational  grounds  were  used  to  form  dicent  and 
argument signs (as in table 1) that described the web service under 
particular conditions in relation to the project requirements.  To 
structure  the  notion  of  joint  action  and  shared  semiosis,  we 
introduced  an additional abstract  level  capability.  This  idea 
shares  some  characteristics  similar 
to  business  capability 
modelling  promoted  by  Ulrich  [30].    Capabilities  are  used  to 
provide a transitive mechanism for directives and social norms so 
they may be reused on other projects.  Trans-situational grounds 
form  the  necessary  conditions  that  must  be  in  place  to  derive 
regulated  action, 
in  this  case  as  the  deontic  conditionals 
permission and forbidden.   
As  independent  dicent  signs  are  necessary,  function  (F), 
directives (D) and social norms (S), such signs on their own were 
only  sufficient  when  marked  as  true  (relevant  and  agreed  by 
consensus),  when  they  all  become  necessary  to  fulfilling  a 

4.


conjunction  for  deontic  regulated  actions  to  be  taken  in  closed 
world situations Beller [2].    For example, if a trans-situational 
ground is represented  as the web service provider must have a 
satisfactory  reputation,  determines  that  conjunctions  must  be 
present  between  the  atomic  conditions  in  the  closed  world 
principle.  This approach sets deontic regulated (DR) action that is 
contingent upon trans-situational grounds, as it forms the multiresponsive nature of communication.
Proposed thus far is an approach to web service description 
using semiotics and shared semiosis in joint actions to coordinate 
the  interaction  of  all  participants  (web  service  provider  and 
project  owners) engaging  with  a  web  service.   It  promoted  the 
idea  of  affordance  as  a  route  to  achieve  the  ontological 
description of requirements and how the web services complied 
with their ongoing development.  The Peircean [22] classification 
of  signs made  up a  taxonomic  scheme that was  placed  into  an 
encoding  and  decoding  cycle  whilst  the  software  tool  for  this 
project queries, send requests or updates participants that contains 
trans-situational  grounds. 
  Finally,  web  service  description 
includes  a  set  of  capabilities 
the 
appropriateness  of  the web  services  under  a  multitude  of 
necessary conditions as trans-situational grounds.  In addition, we 
took  the  principles  of  causation,  cause  and  effect,  Carroll  and 
Markosian [7] where a causes b, if and only if, a and b both take 
place.  Causation suggests that for b (DR multi-responsive action) 
to occur, an action a must be taken.  In doing so, directives and 
social norms (there is no knowledge without a knower, and there 
is no knowing without action), was expressed as:  

that  each  described 



In terms of trans-situational grounds, an action a causes b, if 
and only if, a is an ns condition and both a and b take place.   
With reference to necessary and sufficient conditions in order 
for  a  DR  multi-responsive  action  to  occur,  several  necessary 
conditions must be combined to make up sufficiency, and whilst 
necessary  and  sufficient  conditions  are  mutually  exclusive,  this 
resulted in a method to define ontologies linked to organisational 
contexts  and  the  appropriate  use  of  web  services  as  argument 
signs in the Peircean sense:   
1. Multi-responsiveness  is  a DR action in response to several 
different initiatives represented as trans-situational grounds; 
2. Trans-situational  grounds  for  a  deontic  action  are  brought 
into  the  current  situation  by  a  person  as  justification  for 
taking action regarding the selection of a web service; 
3. Trans-situational grounds (as necessary conditions) are ruleconstituting [18], which in the case for web service discovery 
directives  and  social  norms  are  conjunctions  to  functional 
specifications; 
4. A multi-responsive (deontic) action is a compound of rules 
that  reflect  organisational  contexts  as  dicent  signs,  as 
directives  (organisational  level  rules  such  as  those  found 
within the BMM [6]), and social norms  contained within a 
capability.    The  standardised  form  of  argument  signs  that 
make up a capability is: 

Argument = a(Fdicent (cid:1165) (Ddicent (cid:1166) Sdicent))   
b(DRMulti-responsive action) 

4. DISCUSSION AND CONCLUSION 
With regard to the project discussed in this paper, syntactic web 
service  description  where  WSDL  files  listed  the  operations 
available in each web service and the SOAP messaging structures 
that enable each one to work, was insufficient when considering 
the social climate of the project.  The description was sufficient 
however to identify the calling of various operations as required, 
but a WSDL file is primed to list the functional characteristics of 
web services only such as the input and output datatypes of each 
operation.  In turn, the project owners were left to speculate about 
the appropriateness of each web service.  The emergence of the 
semantic web directed the project owners to improved ways of 
describing web services, assessing the use of tools such as OWL-
S [21], and repositories such as BioCatalogue [4] and Seekda [23] 
to overcome the limitations of syntactic web service description, 
but  such  tools were  also  found to  be  limited, deficiencies  were 
previously noted in semantic web service description techniques 
by  Schoop  et  al    [24],  deMoor  [10],  Singh  [26]  and  Liu  and 
Benfell  [18].    Such  limitations  prevail  when  aligned  to  the 
contextual fitting of web  services in project  development where 
the  social features  are  essential.    Consequently,  recent attempts 
have  also  emerged  to  placate  the  limitations  of  syntactic  and 
semantic web service description by formulating a supplementary 
approach to include the representation of organisational contexts, 
defined  as  pragmatic  web  service  description.    In  this  case, 
methods  for  adding  pragmatic  information  to  web  services 
typically  begin  with  semantic  web  principles.    For  example, 
Sheping  et  al  [25]  and  Tamani  and  Evripidou  [29]  propose  a 
matching between service provider and consumer ontologies, each 
explained by using semantic web principles, whilst Lee et al [15] 
take  a  similar  route.     Liang et  al  [16]  recommend  a  means  to 
adding  a  pragmatic  web  service  layer  on  top  of  semantic  web 
principles  where  a  software-based  agent 
represents 
negotiation  requirements  searches  for  web  services  that  are 
described using semantic web techniques.  We suggest that these 
examples also have marked limitations to such an extent that the 
definition of pragmatic and the use of ontology do not reflect the 
needs of organisations when embarking upon projects such as the 
