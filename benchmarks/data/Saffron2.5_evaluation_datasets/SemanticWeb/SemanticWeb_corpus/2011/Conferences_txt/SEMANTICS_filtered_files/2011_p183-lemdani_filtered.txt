A Semantic Similarity Measure for Recommender Systems

Roza Lemdani, Geraldine Polaillon, Nacera Bennacer, and Yolaine Bourda

SUPELEC Systems Sciences (E3S) - Computer Science Department

{Roza.Lemdani,Geraldine.Polaillon,Nacera.Bennacer,Yolaine.Bourda}@supelec.fr

Gif-Sur-Yvette, France

ABSTRACT
In the past few years, recommender systems and semantic
web technologies have become main subjects of interest in
the research community. In this paper, we present a domain
independent semantic similarity measure that can be used
in the recommendation process. This semantic similarity is
based on the relations between the individuals of an ontol-
ogy. The assessment can be done offline which allows time
to be saved and then, get real-time recommendations. The
measure has been experimented on two different domains:
movies and research papers. Moreover, the generated recommendations by the semantic similarity have been evaluated
by a set of volunteers and the results have been promising.

Categories and Subject Descriptors
H.3.3 [Information Search and Retrieval]: Information
filtering

General Terms
Algorithms, Experimentation

Keywords
Recommender systems, ontology, semantic similarity

1.

INTRODUCTION

Nowadays, data available on the Internet are beyond imag-
ination, and looking for information is more and more difficult unless you know exactly what you are looking for. This
is why, recommender systems have been introduced in the
mid-1990s. Even if the recommendation task is perceived
pejoratively, it has a real advantage for users and system
owners. Apart from the significant increase in sales on the
e-commerce websites, recommender systems are designed to
help users by reducing their time and research effort. Such a
mechanism requires the usage of the previous items (called
the history) viewed by the user as an inspiration to calculate

Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for profit or commercial advantage and that copies
bear this notice and the full citation on the first page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior specific
permission and/or a fee.
I-SEMANTICS 2011, 7th Int. Conf. on Semantic Systems, Sept. 7-9, 2011,
Graz, Austria
Copyright 2011 ACM 978-1-4503-0621-8 ...$10.00.

the recommendations. This history is used to build a user
profile that will help to generate recommendations.

Several approaches exist for recommender systems [2]. Collaborative filtering and content-based recommendations are
among the most popular. In collaborative filtering, an item
is recommended to a user if it has been appreciated by similar users to this target user. Such approaches rely on ratings
and thus suffer from the lack of ratings and the cold-start
(new item or user) problem. One solution is to overcome this
lack using the content- or rating-based similarities between
items and exploit them to deduce a rating for items without ratings [4]. Content-based approaches [9] recommend to
the users items with the same characteristics as those they
have formerly appreciated. Thus, these systems require a
description of the recommendable items (e.g. keywords) in
order to compute the similarity between the items and assess the recommendations. The limitations of such systems
are the overspecialization and the new user problem but we
are not going to discuss them in this paper. Since semantic
web data are more and more available (e.g. Linked Data1),
we focus, in this paper, on data described in an ontology.

In the semantic web community, the similarity measures
are more often used in ontology alignment. They are based
on string matching [11], lexical matching using Jaccard, Dice
or overlap coefficients, and structure matching [12, 10, 3].
The authors of [7] introduced a graph matching algorithm.
Given a similarity measure between two nodes, the similarity
is propagated between the nodes until a fixpoint is reached.
In this case, the similarity measure takes into account the
neighborhood of the target nodes and adjusts the similarity
accordingly. These similarity measures are defined for ontology alignment and do not suit the recommendation domain.
Some recommendation approaches exploited the semantic
information described in an ontology [8, 1]. The authors of
[8] defined Quickstep, a research papers recommender system that relies on a taxonomy of subjects. The interests of
the subjects are computed according to the users subject
history and the hierarchy is used to reason and extract the
closest subjects to those of interest to the user. On the other
hand, AVATAR [1], a TV program recommender system
discovers semantic associations which consist in paths composed of properties which lead to recommendations according to a certain computed degree of interest. Both Quickstep
and AVATAR are domain-dependent.

In our approach, we define a domain-independent similarity measure based on the semantics of the items which no
longer relies on keyword description. The domain knowl-

1http://linkeddata.org/

183edge is entirely contained in an ontology and the similarity
measure is automatically adapted after defining the recommendable items set. Also, the semantics is used differently
than in [8, 1]. We consider that an item is defined by its
surrounding individuals (by means of properties) and those
individuals are also defined by their neighborhood. This allows two items to be compared not only by their explicit
definition, but also by the definition of their neighborhood.
Thus, the similarity is assessed in an iterated way inspired
by the algorithm of [7] except that our similarity measure is
adapted to the recommendation task. The defined measure
can be used as the base of a semantic-based recommender
system, as explained in this paper, and it is flexible enough
to be included in other recommendation modules as additional knowledge to enhance the user profile. Moreover, the
computation of the similarity values can be done off-line
which allows time to be saved in the recommendation process and then, have a real-time recommendation.

The following section introduces the semantic similarity
measure. In Sect. 3, the usage of the semantic similarity in
the recommendation process is discussed. The approach is
experimented and evaluated in Sect. 4. Finally, the conclusion and future work are exposed in Sect. 5.

2. THE SEMANTIC SIMILARITY
In the following, an ontology is denoted O(C,R,I) where
C is a set of concepts, R a set of properties (relations) and
I a set of individuals (instances).

The authors of [4] defined the semantic information independently from an ontology but relative to the items at-
tributes, their relations with other items and their role in
these relations. Thus, semantic similarity is computed with
a domain dependency and real knowledge of the structure
and relations between items. We define the semantic similarity between two items in a generic way. The domain
ontology allows independence between the semantic similarity computation and the domain knowledge. Thus, the
computation can be non-supervised.

Definition 1. Given C, the set of concepts of the ontology,
and i and j, two individuals, the semantic similarity between
i and j is a function sim : C  C  [0, 1] such that i and
j are similar if they are related to the same individuals by
means of any property, or if they are related to individuals
which are similar to themselves.
2.1 The Semantic Similarity Measure

Before computing the semantic similarity, the definition
of the candidate pairs for the computation is required. The
selected pairs for the semantic similarity computation are
those of the same nature. In other words, the pairs of individuals that instantiate the same concept. This distinction
is made because theres no point in computing the similarity between two individuals of different concepts. For exam-
ple, the similarity between a film and a production company
would not only be minimal or null, but also, it would not
make any sense.

The similarities are initialized so that two identical individuals have the maximum similarity which is 1, while the
similarity between two different instances is initialized to 0.

 1 if i = j

0 otherwise

sim0(i, j) =

(1)

The next step consists in computing the semantic similarity
between two individuals i and j in an iterative way. Once
again, if the two instances are identical, the similarity equals
1. Otherwise, it is defined as being the average of the semantic similarities of the pairs (i, j) related to (i, j).

 1


simk+1(i, j) =

simk(i,j)

|Ei,j|

if i = j
otherwise

(2)

Ei,j

with Ei,j = {(i, j)|R  R R(i, i)  R(j, j)}

For k = 0, the semantic similarity sim1(i, j) between two
individuals i and j only takes into account the individuals
that are both related to i and j by a property, due to equation 1.
In other words, only the individuals which are at
a distance 1 from i and j (We say that an instance a is at
a distance k from b if there is a sequence of k properties
linking a to b).

For k > 0, the computed similarities simk+1 in step k
are taken into account. Intuitively, this means that in step
k + 1, instances being at a distance k from i and j impact on
the similarity of these two instances. Indeed, at step k, the
similarity of the items being at a distance k  1 from i and
j (sim1) is computed only based on the individuals that are
both related to them, while at step k + 1, their similarity
(sim2) also takes into account the similar individuals.

The function sim is convergent. Thus, the semantic similarity computation reaches a fixpoint. The proof can be
found in the technical report [6].
2.2 Adding New Data in the System

Updating the system with new data makes the semantic
similarity no longer correct because adding a new individual or a new relation between two individuals influences the
semantic similarity values in the neighborhood. The actions
of adding an individual and adding a relation between two
individuals are distinguished. Thus, adding an individual
with relations to other individuals consists in first adding
the individual and then adding each relation one by one.
2.2.1 New Individuals
We consider that adding a new individual means adding
an individual without any relation with other individuals.
Consequently, adding an individual in the ontology implies
computing all the pairs containing this individual a and the
individuals b of the same nature. The semantic similarity of
each pair (a, b) (except for (a, a)) at every step k equals zero
since there is no property linking a to the other individuals.
2.2.2 New Relations Between Individuals
Adding a relation linking an individual a to an individual
b influences the semantic similarity of each pair at a distance
k from (a, b). The algorithm to update the similarity values
is described below.

Algorithm 1 Update sim(i, j, kmax)

for all k ]0, kmax] do

simk+1(i, j) =

|Ei,j|
propagate(Ei,j, k + 1, kmax)

Ei,j

simk(i,j)

end for

2.3 Complexity
The complexity of assessment of the semantic similarity
values for all the pairs of the system is about n2  k  m2,

184if kmax > k then

simk+1(i, j) =

for all (i, j)  Ei,j do
Ei ,j

simk(i,j)

|Ei ,j|

Algorithm 2 propagate(Ei,j, k, kmax)

propagate(Ei,j , k + 1, kmax)

end for

end if

where k is the maximum number of steps, n is the number of
individuals and m the average number of properties for each
individual. On the other hand, the complexity for adding a
relation between two individuals is about k3m4. Thus, the
complexity for adding a new individual with his m relations
is k3m5, and then, the complexity for adding n individuals
is n k3  m5. Consequently, when n > k2  m3, it is better
to use the second approach.

3. SEMANTIC SIMILARITIES IN THE REC-

OMMENDATION PROCESS

In a recommender system, the similarity can help to find
items of interest to the users, based on their history. Ba-
sically, this approach is entirely content-based. It is based
on the semantics expressed in an ontology which makes it
possible to reuse semantic web data that are more and more
spread and available.

The recommendation, in this paper, consists in getting
similar items to those appreciated by the user. Two items
are considered as being similar if their semantic similarity is
higher than a certain threshold. This threshold can be either
fixed by an expert or learned by the system, by adapting the
threshold according to the users feedback. So, given a rank
K and a user u who appreciated an item i, and given i
similar to i, the user interest e for i is measured so that:


e(u, i

) = simK (i, i


)  eval(u, i)

(3)

where eval(u, i) is an explicit (item ratings, information entered in forms) or implicit (clickstream data, research) valuation of the item i by the user u.

This measure allows the recommendations to be sorted.
Indeed, a 50% similarity should not be treated the same as
a 90% one. Also, on a 1 to 5 rating scale, a history item rated
4 by the user, should not be treated the same as a 5 star
rating. So, given a set of similar items to those appreciated
by the user, the recommendation is made according to the
implied order of e.

4. EXPERIMENTATION AND EVALUATION
We experimented the semantic similarity measure on movies

and research papers. For each domain, every possible pair of
individuals was first generated for each concept. Then, the
semantic similarity was computed for each pair. Instead of
running the computation process until reaching a fixpoint,
we fixed the rank to k = 10, which is sufficient to analyze
the evolution of the computed similarities from one rank to
another. Finally, a set of volunteers evaluated the generated
recommendations of the movie domain.
4.1 Research Papers

We used the Semantic Web Dog Food Corpus2 for the

2http://data.semanticweb.org/

research paper ontology. Each paper is related to a con-
ference. It has one or many subjects and a list of authors.
Moreover, each author has an affiliation. The research paper dataset is composed of 209 papers, 1282 authors, 216
affiliations, and 726 subjects. They belong to the 17th and
18th International World Wide Web Conference.

One can see on table 1 the number of paper pairs belonging to a certain similarity range for the ranks 0 to 10. The
numbers show that the semantic similarity values evolve between the ranks 1 and 10. It also shows important values for
the maximum similarity against lower values for the average
and the standard deviation. This means that while the pairs
that are not actually similar keep a low similarity value, the
similarity of the similar pairs keep growing. This semantic
similarity helps to find out similar pairs that are not necessarily related to the same individuals. For examples, lets
consider two authors with two different affiliations and who
dont have shared papers. A classical similarity measure
will classify them as being not similar while the presented
similarity measure will take into account their publications.
Thus, if they have similar publications, they would be considered as being similar which is logical.
4.2 Movies

For the experimentation, we used the MovieLens3 dataset,
which a classical dataset for recommendation and the information available on IMDB4. We focused only on the concepts Film, Person, Actor, Director, Writer, Country, Language and Genre so that each movie is related to a certain
number of persons who can be actors, directors or writers.
Also, a movie has one or many genres (Action, Adventure,
Animation, Children, Comedy, Crime, etc.), languages and
countries. The movie dataset is composed of 523 movies,
1813 main actors, 413 directors, 876 writers, 54 languages,
33 countries and 24 genres.

Table 1 depicts the number of film pairs belonging to a
certain similarity range for every rank. One can see that
similarity values keep increasing from one step to another.
Even if similarity values keep increasing, the increase is important at the beginning to become slight as we go along.

We had the recommendations applied on the movie domain evaluated by seventeen 16-40-year-old volunteers. The
evaluation consisted exclusively in explicit valuations (rat-
ings between 1 and 5) of the recommended items. First,
each user rated about 20 movies. For each recommended
item, the user was asked to check the like, dislike or N/A
button. The similarity threshold has been fixed to 40% according to the analysis of the obtained similarities for rank
10. Also, some pairs, which were wrongly detected as non
similar with the classical measure, have been correctly identified as similar after the propagation step. We presented
the users 10 recommendations from the semantic similarity at rank 10 and 10 recommendations from the semantic
similarity at rank 1 (classical measure).

The results of this evaluation are depicted on Fig. 1. We
can see that 63,8% of the recommendations satisfy the users
when the semantic similarity is propagated against 56,9%
for a classical measure. These results are encouraging and
we believe that it would perform better in a larger dataset
with various data.

3http://www.movielens.org/
4http://www.imdb.com/

185Table 1: Similarity distribution, standard deviation, max and average similarities by rank


136503


]0,0.1[

[0.1,0.2[

[0.2,0.3[

[0.3,0.4[

[0.4,0.5[

[0.5,0.6[

[0.6,1[

Sim


124618
128566


Std. dev. Avg. Max

