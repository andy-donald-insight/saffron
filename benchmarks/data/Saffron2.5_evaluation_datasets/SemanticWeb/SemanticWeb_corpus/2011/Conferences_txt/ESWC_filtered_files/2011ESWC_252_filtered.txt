The Semantic Public Service Portal (S-PSP) 

Nikolaos Loutas1,2, Deirdre Lee1, Fadi Maali1, Vassilios Peristeras3,  

and Konstantinos Tarabanis2 

 DERI, National University of Ireland Galway (NUIG), Galway, Ireland 
{nikos.loutas,deirdre.lee,fadi.maali}@deri.org  
 Information Systems Lab, University of Macedonia, Thessaloniki, Greece 

 European Commission, Directorate-General for Informatics, Interoperability Solutions for 

kat@uom.gr 

European Public Administrations 

vassilios.peristeras@ec.europa.eu 

Abstract.  One  of  governments  responsibilities  is  the  provision  of  public 
services to its citizens, for example, education, health, transportation, and social 
services.  Additionally,  with the explosion of the Internet in the past 20 years, 
many citizens have moved online as their main method of communication and 
learning. Therefore, a logical step for governments is to move the provision of 
public services online. However, public services have a complex structure and 
may span across multiple, disparate public agencies. Moreover, the legislation 
that  governs  a  public  service  is  usually  difficult  for  a  layman  to  understand. 
Despite this, governments have created online portals to enable citizens to find 
out about and utilise specific public services. While this is positive, most portals 
fail  to  engage  citizens  because  they  do  not  manage  to  hide  the  complexity  of 
public services from users. Many also fail to address the specific needs of users, 
providing  instead  only  information  about  the  most  general  use-case.  In  this 
paper we present the Semantic Public Service Portal (S-PSP), which structures 
and stores detailed public-services semantically, so that they may be presented 
to citizens on-demand in a relevant, yet uncomplicated, manner. This ontologybased  approach  enables  automated  and  logical  decision-making  to  take  place 
semantically  in  the  application  layer  of  the  portal,  while  the  user  remains 
blissfully unaware of its complexities. An additional benefit of this approach is 
that the eligibility of a citizen for a particular public service may be identified 
early.  The  S-PSP  provides  a  rich,  structured  and  personalised  public  service 
description to the citizen, with which he/she can consume the public service as 
directed. In this paper, a use-case of the S-PSP in a rural community in Greece 
is described, demonstrating how its use can directly reduce the administrative 
burden on a citizen, in this case is a rural Small and Medium Enterprise (SME). 

Keywords: eGovernment, public service, semantic, portal. 

1   Introduction 

Public  service  provision  is  an  important  duty  of  all  government  departments. 
Independent of what kind of service it is, every public service can be broken down into 
two  distinct  but  complementary  phases:  the  informative  phase  and  the  performative 

G. Antoniou et al. (Eds.): ESWC 2011, Part II, LNCS 6644, pp. 227242, 2011. 
 Springer-Verlag Berlin Heidelberg 2011 

N. Loutas et al. 

phase  [1].  During  the  informative  phase,  the  service  provider  provides  information 
about  the  service  to  the  citizen/  business1,  while  during  the  performative  phase  the 
citizen utilises the public service. The informative phase is essential for optimal service 
utilisation  and  public-administration  efficiency,  however  it  is  often  overlooked  by 
governments. In order to effectively use a public service, citizens must identify which 
public services address their needs and find answers to their questions regarding these 
services,  e.g.  am  I  eligible  for  this  service,  what  is  the  outcome  of  the  service, 
which public agency provides the service, etc. In this paper, we present a portal that 
facilitates the informative phase of public-service provision. 

An additional factor of public services is that they often have complex structures, and 
may be specialized into a variety of service versions. For example a public service that is 
concerned with the issuing of a driving license, may have alternative versions if this is 
the  first  license  of  the  applicant,  if  the  applicant  is  over 60,  if  the  applicant  wishes  to 
drive  lorries,  etc.  It  is  therefore  not  enough  for  citizens  to  identify  a  public  service  in 
general, but they must also go one step further and identify the specific service version 
for which they are eligible. The service versions refine the generic public service further 
and may be differentiated from one another according to:  

i.  the profile of the citizen that wishes to consume the service;  
ii.  the service inputs and outputs; and/or 
iii.  the service workflow.  

However, traditional governmental portals still follow a one-size-fits-all approach. 
Thus  the  portal  cannot  react  differently  and  tailor  the  offered  public  services  to  the 
needs  and  the  profile  of  each  individual  citizen.  Moreover,  the  citizen  has  to  figure 
out on their own  whether they are eligible for the service by reading lengthy public 
service descriptions (which very often include legal terminology). These are common 
problems  in  all  existing  national  eGovernment  portals.  According  to  [2],  the  most 
typical  problems  of  eGovernment  portals  can  be  grouped  into  the  following 
categories:  

  The user is unable to find the desired information or service.  
  The  user  is  unable  to  achieve  his  goal,  even  though  the  system  supports  it 

and he has started along the path to achieve it. 

  The user is able to accomplish his goal, but not efficiently, e.g., easily and 

quickly.  

In order to enhance the informative part of public service  provision and improve 
existing  governmental  portals,  this  paper  introduces  the  Semantic  Public  Service 
Portal (S-PSP), which aims:  

  To inform citizens whether they are eligible for a specific public service; 
  To personalize the public-service-related information according to the profile 
and  the  specific  needs  and  wants  of  the  citizen  and  identify  the  specific 
public service version;  

 
 

                                                           
1 For the remainder of the paper we refer only to citizens for the sake of brevity, but citizens 
and businesses are implied. 
?

?

?
  To provide complete and well-structured information for the public service; 

and 

  To  allow  citizens  to  invoke  public  services  that  are  available  online  (if  a 

service execution environment is in place).  

The  S-PSP  was  initially  developed  in  the  context  of  the  SemanticGov  project2, 
where it played the role of the national Member State portal [3]. It served as an entry 
point for the citizens to the public services offered by the SemanticGov platform. Two 
prototypes of the portal were installed at the Region of Central Macedonia in Greece 
and  the  City  of  Turin  in  Italy  [4].  Currently,  the  portal  is  one  of  the  three  building 
blocks of the Rural Inclusion3 platform, as will be described in more detail in section 
5. A running prototype of the portal is available at http://vmsgov03.deri.ie:8080/rural-
inc/services?pilot=gr&pageLanguage=en  

The  remainder  of  the  paper  is  structured  as  follows.  Section  2  discusses  related 
efforts.  The  S-PSP  is  presented  in  section  3,  along  with  an  overview  of  its 
architecture.  The  ontologies  that  the  S-PSP  used  are  discussed  in  section  4.  An 
example  of  the  S-PSP  in  use  in  the  context  of  the  Chios  Chamber  of  Commerce  is 
presented  in  section  5.  Finally,  our  conclusions  and  future  research  directions  are 
discussed in section 6.  

2   Related Work 

Researchers have tried to solve parts of the problem that we described in the previous 
section, focusing mostly on facilitating service search and discovery. Fang et al. [5] 
support the selection of an optimal set of featured service-links. These links will then 
appear  on  the  homepage  of  an  eGovernment  portal,  thus  helping  users  to  locate 
services more easily by reducing the number of steps that they have to perform until 
the desired service is found. This is expected to improve the citizens satisfaction and 
consequently  increase  the  number  of  people  using  the  portal.  Therefore,  a  heuristic 
Web-mining algorithm called ServiceFinder is proposed, which aims to help citizens 
find the services that they are looking for in eGovernment portals. ServiceFinder uses 
three  metrics  to  measure  the  quality  of  eGovernment  service  selection,  which  will 
then appear as links on the homepage of the portal. These are effectiveness (degree of 
easiness  to  locate  the  desired  service),  efficiency  (probability  to  locate  the  desired 
service)  and  utilization  (sum  of  easily  located  desired  services).  The  metrics  are 
calculated using patterns either extracted from the structure of the eGovernment portal 
or mined from a Web log. Although this approach may improve the service discovery 
by organizing better the available services within the portal, the process of finding a 
service in the portal is still based on a trial and error approach. This means that the 
user  is  still  browsing  the  eGovernment  portal  in  order  to  find  the  desired  service. 
Another  drawback  of  this  approach  as  compared  to  ours  is  that  it  provides  no 
information  to  the  citizen  with  respect  to  his/her  eligibility  for  the  identified  public 
service.   

                                                           
2 http://www.semantic-gov.org  
3 http://www.rural-inclusion.eu  

N. Loutas et al. 

Sacco  [6]  proposes  a  solution  enabled  by  dynamic  taxonomies,  which  support 
different facets that may be used by citizens. The facets that the system provides are: 
services, events of life, type of information, location, type of citizenship, person with 
special rights and person profile. The use of dynamic taxonomies makes this approach 
very  flexible  and  fast.  This  is  due  to  the  fact  that  dynamic  taxonomies  adapt 
dynamically to the subset of the universe on which the user is focusing. The use of 
multiple  facets  enhances  further  the  agility  of  the  approach.  Nonetheless,  this  work 
suffers  from  similar  problems  as  other  approaches  that  organize  services  in 
hierarchical  category  trees.  The  user  may  have  to  browse  deep  into  the  dynamic 
taxonomy and should also be aware of the way that public administration has decided 
to  organize  services  (even  if  multiple  facets  are  made  available),  which  may  differ 
from his/her perspective. Therefore, the cognitive effort of citizens is not reduced as 
much as expected. The eligibility question remains unanswered in this case as well.  

Recently, Stollberg and Muth [7] proposed an approach for service customization 
which is based on simplified service variants that expose only the service features that 
are relevant to the profile of a specific user or to the characteristics of a specific usage 
scenario. Hence, the authors define (i) the service variability metamodel, (ii) the main 
actors and (iii) the lifecycle of the service customization process. They also provide a 
set of tools based on the metamodel to support the service variant creation. This work 
approaches the problem of service customization from a different perspective than the 
one implemented in our work. However, we too acknowledge the need to formalize 
the process, we thus use the Public Service Ontology described in section 4 to model 
public services and the SBVR standard [8] for formally expressing the business rules 
that lead to different service versions.  

The  OneStopGov  project4  delivered  a  life-event  portal  that  supports  the  active, 
citizen-centric approach [9]. The portal follows a structured dialogue approach, based 
on  workflows  that  model  life-events  in  order  to  personalise  them  to  citizen  profiles 
and facilitate their execution. Hence, the OneStopGov approach adapts the life-event 
to citizens profile,  which practically  means that citizens  with different profiles  will 
most likely execute different versions of the same life-event. In the FIT project5, an 
adaptive  eGovernment  portal  has  been  implemented  [10].  The  approach,  which 
employs  Semantic  Web  and  Web  2.0  technologies,  proposes  a  framework  which 
captures  the  users  behaviour  in  the  portal  and  adapts  the  portal  accordingly.  FITs 
approach also recognizes the service version problem that we have described earlier 
and tries to overcome this by providing personalized eGovernment services. In order 
to  achieve  this,  the  FIT  portal  follows  an  iterative  ontology-driven  adaptation 
approach (monitor, analyze, plan, execute). The FIT portal also uses OWL ontologies 
to model users, events and adaptation rules.     

The portal presented in this paper tries to fulfil similar objectives like the related 
efforts described so far. Nevertheless, some differences can be spotted both in terms 
of functionalities provided and in terms of the technologies used. For example, none 
of the related efforts decide on the eligibility of the citizen for a public service before 

                                                           
4 www.onestopgov-project.org 
5 http://www.fit-project.org/ 
?

?

?
the  execution  of  the  service.  This  is  a  very  strong  asset  of  our  approach,  as  the 
eligibility check at an early stage during the informative part of service provision can 
save the citizen a lot of time and  money. It is interesting that the  work of [6] bears 
some resemblance with ours in the way that services are modelled and organized, but 
what is different, apart from the use of ontologies versus taxonomies, is the fact that 
in our work services are described at a greater level of granularity e.g. the distinction 
between service type and service version. This difference is very important and due to 
this  Saccos  work  is  not  able  to  personalize  services,  but  only  provide  generic  info 
about them. Moreover, it does not answer the eligibility question.  

3   Semantic Public Service Portal (S-PSP)  

The  Semantic  Public  Service  Portal  (S-PSP)  provides  information  about  available 
public-services,  which  a  user  may  browse  and  search  in  a  customisable  and  userfriendly manner. Through the use of the S-PSP,  a user can quickly identify:  
  which public service(s) are applicable to their individual use-case,  
  whether they are eligible for these public service(s), and  
  what  is  required  from  the  user  to  complete  these  public  service(s)  for  their 

individual use-case. 

Fig.  1  shows  the  homepage  of  the  S-PSP  with  the  list  of  all  currently  available 

public services and the languages they are available in.  

Fig. 1. The list of public services available in the S-PSP 

 

Once  a  user  selects  the  public  service  they  are  interested  in,  the  dialogue  page 
appears, as shown in Fig. 2. At this step, the user answers a series of questions, which 
will determine if a user is eligible for this service and what information they will need 
to  provide/complete  to  utilise  this  service.  Fig.  3  shows  the  customised  information 
that this particular users requires to utilise this service, moving from a one-size-fits-all 
approach that is unrealistic in the case of public services. 

N. Loutas et al. 

Fig. 2. The public-service dialogue to customise the public-service information 

 

Fig. 3. The customised information required to utilise this public service 

 

3.1   S-PSP Architecture 

The S-PSP follows a three-tier architecture, as shown in Fig. 4, which comprises of:  

 

 

 

the  User  Interface  Layer,  which  facilitates  the  interaction  between  the 
citizens and the portal, acting as an entry-point to the portals functionalities.  
the Application Layer, which implements the functionalities provided to the 
citizens. This layer consists of two components:  

o 
o 

the Service Tree Locator (STL) and  
the Query Mechanism. 

the Semantic Repository Layer where all the semantic artefacts (ontologies) 
used by the portal are stored.  
?

?

?
While  the  user  interacts  directly  with  the  S-PSP  interface,  the  service  provider 
collaborates  with  an  ontology  manager  to  define  the  public-service  descriptions, 
which  are  then  added  to  the  Semantic  Repository.  This  process  of  semantic  publicservice description is currently in the process of being automated, so that the service 
provider  may  create  the  service  description  using  a  tool  that  will  substitute  the 
ontology manager. 

The User Interface Layer 

The User Interface (UI) Layer provides citizens  with  the  means to interact  with the 
portal.  Its  main  functionality  includes  presenting  the  questions  asked  by  the  Query 
Mechanism to the citizens and collecting their answers. The answers are then returned 
to the Query Mechanism. It is important to clarify that all information that is  made 
available  through  the  UI,  e.g.  list  items  in  dropdown  lists,  questions  and  possible 
answers  etc.,  comes  from  the  underlying  ontologies  stored  in  the  Semantic 
Repository.  

Fig. 4. S-PSP Architecture 

 

The Application Layer 

The  Application  Layer  consists  of  the  Service  Tree  Locator  (STL)  and  the  Query 
Mechanism  components.  The  Service  Tree  Locator  (STL)  identifies  the  appropriate 
Service  Tree  Ontology  (STO),  which  models  the  public  service  that  addresses  the 
users  requirements.  Citizens  can  enter  keywords  in  the  portals  UI  to  describe  the 
service  that  they  are  looking  for.  These  keywords  are  sent  to  the  STL,  which  then 
queries  the  semantic  repository  using  SPARQL6  queries  to  find  matching  publicservice descriptions. The STL may contact WordNet7 in order to find synonyms and 
hypernyms/hyponyms for the keywords entered by the user, thus making the keyword 
search more effective. Finally, the resulting public services are returned to the citizens 
in order for them to select the appropriate one. SPARQL was chosen as the semantic 
query language, as it is a W3C Recommendation and has a large, active community. 

The Query Mechanism (QM) is the core component of the S-PSP as it identifies the 
questions  to  include  in  the  public-service  dialogue,  based  on  a  users  previous 

                                                           
6 http://www.w3.org/TR/rdf-sparql-query/  
7 http://wordnet.princeton.edu/  

N. Loutas et al. 

answers. The QM continually checks the users eligibility for the public service and, 
if  eligible,  it  stores  the  users  answers  in  order  to  determine  the  personalised 
information required to provide the service.  

The Repository Layer 

The Repository Layer contains the semantic repository component, which houses all of 
the ontologies of the S-PSP. These will be discussed in more detail in the next section. 

4   Semantic Description of Public Services 

The S-PSP structures and stores detailed public-services semantically. This ontologybased  approach  enables  automated  and  logical  decision-making  to  take  place  in  the 
application  layer  of  the  portal,  while  the  user  remains  unaware  of  its  complexities.   
Adopting an ontology-based approach reaps the benefit of the flexibility of the RDF 
model.  This,  together  with  the  highly  abstract,  conceptual  nature  of  RDF  triples, 
enable direct translation of fairly complex service scenarios into a machine-readable 
form.  Inference  over  OWL  ontologies  helps  achieve  more  concise  and  readable 
service  descriptions.  As  a  simple  example,  defining  SchengenCountry  as  a 
rdfs:subClassOf    EuropeanCountry  class,  means  that  any  instance  of  
SchengenCountry is also an instance of EuropeanCountry and eliminates the 
need  for  explicit  listing  of  such  a  condition.  However,  in  order  to  create  semantic 
public  service  descriptions  in  this  way  requires  a  detailed  analysis  of  the  public 
description. This is usually carried out by an ontology engineer, in close conjunction 
with  a  civil  servant  who  is  extremely  familiar  with  the  intricacies  of  the  public 
service. While this may be seen as a limitation of the approach, it results in a simple 
and  effective  tool  from  the  citizen  side.  We  are  also  in  the  process  of  creating  a 
public-service description tool, which will replace the need for an ontology engineer 
to  assist  the  civil  servant  in  describing  a  public  service  semantically.  The  different 
kinds of ontologies that are utilised by the S-PSP are: 

Fig. 5. Ontologies used by the S-PSP 

 
?

?

?
  Service Tree Ontology (STO) 
  Public Service Ontology 
  User Profile Ontology: models user preference and localization information. 
  Other  domain-specific  Ontology:  captures  business  information  needed  for 

service description. 

We describe the details of the main ontologies used in the following sections. 

4.1   Service Tree Ontology 

A Service Tree Ontology (STO) formally defines the dialogue that would usually take 
place between a public-service provider and a citizen for a particular public service. 
STOs have a tree-like structure and are written in OWL. The dialogue starts from a 
generic public service, which is stepwise refined after every question/answer pair. In 
the case that the citizen is eligible for the specific public service, the dialogue leads to 
the  public-service  version  that  matches  their  profile  and  a  detailed  structured 
description  of  the  public  service  version  is  made  available.  Otherwise  the  citizen  is 
informed that they are  not eligible for the specific public  service. STOs contain the 
business  rules  from  which  the  different  service  versions  derive  as  well  as  the 
questions  that  will  be  asked  to  the  citizen  in  order  to  collect  information,  which 
enables the portal to personalize the public service and decide on the eligibility of the 
citizen and on the matching service version. Moreover, the user interface of the portal 
is dynamically created based on information encoded in the STOs.  

Fig. 6. The meta-ontology for STOs 

 

In order to formalize the development of STOs, we have created a meta-ontology 
that  defines  the  classes  that  comprise  an  STO.  Each  STO  is  then  created  as  an 
instance  of  the  meta-ontology.  The  meta-ontology  contains  classes  that  have  been 
derived from the modelling of the aforementioned dialogue, as shown in Fig. 6.  

  Node. Nodes of an STO represent different states of the dialogue. A node has 

the following attributes:  

o  The hasDescription attribute provides a brief description of the node, 

as to what the node represents in the STO.  

o  The  hasEvidencePlaceholder  attribute  refers  to  the  administrative 
documents, e.g. certificates, which relate to a specific service version.  
A Node may contain zero or more EvidencePlaceholders.  

N. Loutas et al. 

o  The  containsPieceOfInformation  attribute  refers 

types  of 
information related to a specific service version, e.g. the amount of a fee 
that has to be paid. A Node may contain zero or more PieceOfInformation. 

to  other 

The following three classes, i.e. InternalNode and LeafNode have been defined in 

the ontology as subclasses of Node. They thus inherit all its attributes. 

 

InternalNode.  This  class  represents  those  nodes  of  the  STO  that  have 
descendants.  Apart  from  the  attributes  that  they  inherit  from  Node, 
InternalNodes have also: 

o  The  hasChildNode  attribute  which  indicates  the  descendants  of  the 
current  node.  There  can  be  more  than  one  descendants,  which 
constitute  specializations  of  their  parent  node,  mainly  by  containing 
more information about the citizens profile.  

o  The hasQuestion attribute which refers to a specific question asked to 

the citizen. 

o  The isRoot attribute which indicates whether the specific node is the 

initial node of the dialogue or not.  

  LeafNode.  This  class  represents  those  nodes  of  the  STO  that  have  no 
descendants.  LeafNodes  indicate  the  termination  of  the  dialogue,  whether 
successful  or  not.  Apart  from  the  attributes  that  they  inherit  from  Node, 
LeadNodes have also the isNotEligible attribute which if true indicates that 
the citizen is not allowed to use the specific public service.  

  Question.  This  class  represents  the  questions  that  the  portal  poses  to  the 

citizen. It has two attributes: 

o  hasData  models  the  question  itself,  e.g.  What  is  your  marital 

status?  

o  hasAnswer  models  the  possible  answers,  e.g.  in  the  previous 

question married, single, divorced, widow.  

  SparqlQuery.  This  class  represents  formally  a  business  rule  of  a  specific 
public service. The business rule is expressed as a SPARQL query which is 
stored in the hasData attribute.  

4.2   Public Service Ontology 

The  S-PSP  capitalizes  on  the  GEA  Public  Service  Model  implementation  in  OWL 
(Public Service Ontology) [11]. The Public Service Ontology, which is depicted in Fig. 7, 
is  used  for  representing  public  service related  information  by  creating  instances  of  the 
various classes that comprise the description of the public service. A brief description of 
the  Public  Service  Ontologys  classes  follows.  Societal  Entities  (e.g.  citizen,  business) 
have Needs related to specific Goals. A Societal Entity requests a Public Administration 
(PA)  Service  to  serve  its  Goals.  PA  Services  are  categorized  in  several  Domains  (e.g. 
Health, Transportation). Each Domain object is divided into several SubDomain objects 
(e.g. Domain Transportation has SubDomains Ground Transportation, Air Transportation 
and Water Transportation). There are several types of Social  Entities (e.g. legal entity, 
physical person). There are two categories of Governance Entities participating in service 
provision: Political Entities and Public Administration Entities. Based on the role which 
PA Entities can acquire during the service execution phase, we identify four Roles: 
?

?

?
Fig. 7. The Public Service Ontology 

 

 

Service  Provider  is  the  PA  Entity  that  provides  the  service  to  the  Societal 
Entities  (clients).  The  PA  Entities  belong  to  an  Administrative  Level  (e.g. 
municipality, regional). 

  Evidence Provider is the PA Entity that provides necessary Evidence to the 

Service Provider in order to execute the PA Service. 

  Consequence Receiver is the PA Entity that should be informed about a PA 

 

Service execution.  
Service Collaborator is the PA Entity that participates in the provision of a 
public service (but is not the service provider).  

Political Entities define PA Services which are governed by Preconditions usually 
specified in Legal Acts - Laws. Preconditions set the general framework in which the 
service should be performed and the underlying business rules that should be fulfilled  

N. Loutas et al. 

for  the  successful  execution  of  the  PA  Service.  Preconditions  can  be  formally 
expressed  as  a  set  of  clauses.  Preconditions  are  validated  by  Piece  of  Evidence 
serving a Purpose. As Evidence is primarily pure information, it is stored in Evidence 
Placeholders,  thus  the  Evidence  Placeholder  contains  Pieces  of  Evidences.  PA 
Service use specific types of Evidence Placeholders as Input. The Outcome refers to 
the  different  types  of  results  a  PA  Service  may  have.  GEA  defines  three  types  of 
Outcome: 

  Output, which is the documented decision of the Service Provider regarding 
the  service  asked  by  a  Societal  Entity.  This  is  currently  embedded  and 
reaches the client in the form of an Evidence Placeholder. 

  Effect, which is the change in the state of the real world (e.g. transfer money 
to  an  account)  caused  by  the  execution  of  a  service.  In  cases  where 
administration refuses the provision of a service, there is no Effect.  

  Consequence, which is information about the executed PA Service that needs 

to be forwarded to interested parties. 

4.3   Other Ontologies 

In addition to the STOs, the meta-ontology for STOs, and the Public service ontology, 
the following OWL ontologies are also used by the S-PSP:  

  Ontologies that model the profile of businesses and citizens, for example the 

brand name, type, or legal status.  

  Ontologies  that  contain  public  service  related  information,  such  as  the 
administrative documents that are required as input for the different versions 
of the public service (modelled as instances of the EvidencePlaceholder class 
of the Public Service Ontology).  

  Ontologies  that  include  listings  of  countries,  nationalities,  and  business 

types.  

4.4   Query Mechanisms (QM) Usage of an STO 

The  QM,  as  discussed  in  section  3.1,  is  the  core  component  of  the  S-PSP,  as  it 
identifies  the  questions  to  include  in  the  public-service  dialogue,  by  traversing  the 
corresponding public-service STO. During the traversal of the STO, the public service 
that the citizen has selected is being personalized according to their answers. This is 
achieved by resolving the generic service type into the appropriate service version. It 
is important to note that at each stage of the traversal, the next step option is unique. 
This means there is no case where the same citizen could follow two different paths in 
the same STO. If the current node is an InternalNode then the QM has to verify the 
conditions of all its descendants, which are expressed as SPARQL queries. Therefore, 
the QM takes the appropriate question from the STO and forwards it to the UI so that 
the question can be displayed to the citizen. In case the current node is a LeafNode, 
i.e.  it  has  no  descendants,  then  the  end  of  the  structured  conversation  has  been  
 
?

?

?
reached.  At  this  point  the  portal  has  collected  all  the  necessary  information  for 
identifying  the  specific  public  service  version  that  matches  the  citizens  profile  and 
for deciding on their eligibility. In case the citizen is not eligible for one of the service 
versions  that  are  modelled  in  the  STO  (isNotEligible  is  set  to  true),  then  the  QM 
terminates its execution and returns a notification message, for example, You are not 
eligible for this service because you are under 18 years old.  

QM Traversal Process in Pseudocode: 

Let IN be the set of InternalNodes,  

Let LN be the set of LeafNodes such as IN   LN = N, where N the set of Node 

instances defined in the STO 
Let root be the first IN of the STO 
Let curr be the Node (either InternalNode or LeafNode) to be processed 
Let validated  be a variable that stores the result of the evaluation of 
INs SparqlQuery  
Let ServiceBasedUserProfile be the citizen ontology instance that models the 
profile of a citizen/business 
curr := root 


validated := false 
askQuestions(curr)  
ServiceBasedUserProfile := readAnswers() 
foreach descendant d of curr 
  if (evaluate(d)=true) 
    curr := d 
    validated := true 
    break 
  end_if 
end_foreach 
if (validated = false) //in case there is no valid descendant 

LN) 

while (curr 
 
 
 
 
 
 
 
 
 
 
 
node 
 
 
end_while 
 showPublicServiceDescription(curr) 

  break 
end_if 

5   S-PSP In-Use: Rural Inclusion Trial-Site Chios 

The S-PSP is currently being utilised by Rural Inclusion8, an EC project funded under 
the Competitiveness and Innovative Framework Programme. Rural Inclusion aims at 
adopting  a  state-of-art  infrastructure  that  will  facilitate  the  offering  of  innovative 
services  by  public  administration  in  rural  areas.  The  S-PSP  is  one  of  three 
components  that  make  up  the  Rural  Inclusion  Platform,  which  is  being  rolled  out 
across five European trial-sites in France, Martinique, Greece, Latvia and Spain.  

The Chios Chamber of Commerce is one of the trial-partners. It is supervised by 
the  Greek  Ministry  of  Development  and  serves  as  a  consultant  of  a  wide  range  of 
business-related  matters  for  the  Greek  island  of  Chios.  Public  services  that  the 
chamber provides and that are presented in the Rural Inclusion platform include: 

 

                                                           
8 http://www.rural-inclusion.eu  

N. Loutas et al. 

Issuing of operation licenses for manufacturing companies 

  Registration of a new business in Chios 
  Provision of grants to new farmers 
 
In this section, we will present how the registration of a new business in Chios 
public service is modelled using the S-PSP ontologies. Although this service sounds 
straight-forward, there are actually more than 20 different versions which stem from 
variations  in  the  legal  status  of  the  enterprise/entrepreneur,  on  the  type  of  their 
activity, and on their nationality. Initially, a documentation exercise  was carried out 
with  the  service  provider,  in  order  to  gather  all  the  details  with  regards  to  the 
provision  of  the  specific  service.  Hence,  the  business  rules  that  are  associated  with 
this public service were identified and the activity diagram of the structured dialogue 
was  designed.  This  was  then  encoded  into  an  OWL  ontology  by  the  ontology 
manager. 

For  example,  one  of  the  business  rules  of  the  registration  of  a  new  business 
public  service  expressed  in  structured  English  (following  SBVR  [8])  reads  It  is 
obligatory that each SA company with equity capital less than 64,000 Euros pays an 
annual fee of 160 Euros. In order to collect the information that validates this rule, a 
question  was  created  asking  the  equity  capital  of  the  SA  company,  i.e.    Please 
provide  the  equity  capital  of  your  company.  In  the  STO  developed  for  this  public 
service,  this  question  was  then  attached  to  one  of  the  InternalNodes.  This  specific 
InternalNode has three descendants. One of them will correspond to the case of an SA 
company with capital less than 64,000 Euros. This will be expressed by a SPARQL 
expression linked to this specific node, as shown below.  

The InternalNode instance 

 <owl:Thing rdf:about="#ObligesRegistration_SA"> 
        <rdf:type rdf:resource="&www;PortalOntology.owl#InternalNode"/> 
        <prtl:containsPieceOfInformation rdf:datatype="&xsd;string" 
>Registration fee 160</prtl:containsPieceOfInformation> 
        <prtl:hasEvidencePlaceholder 
rdf:resource="&www;DocumentOntology.owl#Application"/> 
        <prtl:hasEvidencePlaceholder rdf:resource= 
"&www;DocumentOntology.owl#ArticleOfIncorporation"/> 
        <prtl:hasEvidencePlaceholder rdf:resource=" 
&www;DocumentOntology.owl#BusinessInceptionCertificate"/> 
        <prtl:hasEvidencePlaceholder 
rdf:resource="&www;DocumentOntology.owl#Chios_Perfecture_Statement"/> 
        <prtl:hasEvidencePlaceholder 
rdf:resource="&www;DocumentOntology.owl#IDorPassport"/> 
        <prtl:hasCondition rdf:resource="#LicencedSACompany"/> 
        <prtl:hasChildNode rdf:resource="#SA_equitybetween"/> 
        <prtl:hasChildNode rdf:resource="#SA_equityless"/> 
        <prtl:hasChildNode rdf:resource="#SA_equitymore"/> 
        <prtl:hasQuestion rdf:resource="#qstnEquityCapital"/> 
    </owl:Thing> 

The Question instance 

<owl:Thing rdf:about="#qstnEquityCapital"> 
        <rdf:type rdf:resource="&www;PortalOntology.owl#Question"/> 
        <prtl:hasAnswer rdf:datatype="&xsd;string"></prtl:hasAnswer> 
        <prtl:hasData xml:lang="en"> Please provide the equity capital of 
your company </prtl:hasData> 
    </owl:Thing> 
?

?

?
The SparqlQuery instance 

<owl:Thing rdf:about="#EquityLess"> 
        <rdf:type rdf:resource="&www;PortalOntology.owl#SparqlQuery"/> 
        <rdfs:comment rdf:datatype="&xsd;string" 
            >Checks if the EU applicant requires licensing and is 
registering an association</rdfs:comment> 
        <prtl:hasData rdf:datatype="&xsd;string" 
            >PREFIX bo:&lt;http://www.owl-
ontologies.com/BusinessOntology.owl#&gt;            PREFIX 
rdf:&lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;            PREFIX 
xsd:&lt;http://www.w3.org/2001/XMLSchema#&gt;             SELECT ?x FROM 
&lt;http://www.owl-ontologies.com/BusinessOntology.owl&gt;               
WHERE { ?x rdf:type ?t.  FILTER(?t=bo:SME). ?x bo:hasEquityCapital ?it. 
FILTER(?it=bo:Fund_less_Than_64000).}</prtl:hasData> 
    </owl:Thing> 

6   Evaluation 

The  evaluation  of  the  S-PSP  is  ongoing  as  part  of  the  Rural  Inclusion  Project.  As 
stated  previously,  the  S-PSP  is  one  of  three  components  that  make  up  the  Rural 
Inclusion Platform, which is being rolled out across five European public-sector trialsites in France, Martinique, Greece, Latvia and Spain. Initial results are positive, with 
the main constructive criticism focusing on improving the intuitive integration of the 
S-PSP into the actual trial-partner sites, and where they currently provide the actual 
public services. A complete evaluation will be published at a future date. 

7   Conclusion 

This  paper  presents  an  ontology-based,  public-services  portal,  the  S-PSP,  which 
facilitates the informative phase of public service provision. It checks the eligibility of 
the  citizens  for  a  specific  public  service  before  the  actual  execution  of  the  service, 
thus saving them time, effort and money. Also the public service related information 
is personalised according to the profile and the specific needs and wants of the citizen 
and the specific public service version required is identified, thus providing targeted, 
tailored and comprehensive information. The S-PSPs architecture is modular and as 
such it is easily extendable. This has been shown with the Rural Inclusion Platform, 
where the S-PSP has been integrated  with other components  for a specific solution. 
The S-PSP is also decoupled from the public-service execution environment that may 
be available in different technologies and communicates with it using Web Services. 
The  main  advantage  of  this  portal  is  its  use  of  semantics  to  describe  all  aspects  of 
public-services,  resulting  in  reusable,  extensible  public-service  data.  New  publicservices may be added to the portal through the creation of a new STO. 

Acknowledgments.  The  work  presented  in  this  paper  has  been  funded  in  part  by 
Science  Foundation  Ireland  under  Grant  No.  SFI/08/CE/I1380  (Lion-2)  and  the 
European  Union  under  Grant  No.  CIP-ICT  PSP-2008-2/238900  (Rural  Inclusion). 
The  authors  would  like  to  thank  all  the  Rural  Inclusion  project  partners  for  the 
creative discussions and ideas. 

N. Loutas et al. 
