An Approach for More Efficient Energy Consumption 

Based on Real-Time Situational Awareness  

Yongchun Xu, Nenad Stojanovic, Ljiljana Stojanovic,  

Darko Anicic, and Rudi Studer 

FZI Research Center for Information Technology 

76131 Karlsruhe, Germany 

name.familyname@fzi.de 

Abstract.  In  this  paper  we  present  a  novel  approach  for  achieving  energy 
efficiency in public buildings (especially sensor-enabled offices)  based on the 
application of intelligent complex event processing and semantic technologies. 
In the nutshell of the approach is an efficient method for realizing the real-time 
situational  awareness  that  helps  in  recognizing  the  situations  where  a  more 
efficient  energy  consumption  is  possible  and  reaction  on  those  opportunities 
promptly. Semantics allows a proper contextualization of the sensor data (i.e. its 
abstract interpretation), whereas complex event processing enables the efficient 
real-time  processing  of  sensor  data  and  its  logic-based  nature  supports  a 
declarative  definition  of  the  situations  of  interests.  The  approach  has  been 
implemented in the iCEP framework for intelligent Complex Event Reasoning. 
The  results  from  a  preliminary  evaluation  study  are  very  promising:  the 
approach  enables  a  very  precise  real-time  detection  of  the  office  occupancy 
situations that limit the operation of the lighting system based on the actual use 
of the space.  

Keywords:  Energy  Efficiency,  Complex  Event  Processing,  Semantic 
Technology, Office Occupancy Control. 

1   Introduction 

Real-time processing has become very important for sensor-based applications, since 
the quantity of data being generated from sensors requires onthe-fly processing and 
immediate reaction in order to be effective. There are many examples, starting from 
item-tracking  in  RFID-supported  logistics  to  remote  patient  monitoring  in  eHealth. 
Indeed, real-time awareness enables the detection of problems (e.g. a damaged item in 
a delivery, or an acute health problem in a patient) as soon as they happen, so that the 
reaction can be successfully  performed. Note that the  same  mechanism can be used 
for preventive reactions, i.e. reacting before a problem would happen.  

In the nutshell of this mechanism is the ability to recognize in real-time1 (or even 
ahead  of  time)  some  interesting  situations,  what  is  called  real-time  situational 
awareness.  Note  that  this  goes  beyond  the  traditional  (static)  situational  awareness 
                                                           
1 We  consider business real-time as the criteria  for declaring something to be processed in 

real-time. 

G. Antoniou et al. (Eds.): ESWC 2011, Part II, LNCS 6644, pp. 270284, 2011. 
 Springer-Verlag Berlin Heidelberg 2011 
?

?

?
(like  in  [1])  that  is  focused  on  the  understanding  a  situation  (if  possible  in  real-
time). Real-time situational awareness introduces the notion of real-time emergency: 
the main goal is to recognize a situation of interest as soon as possible in order to be 
able to react on it properly.  

On the other hand, such a process introduces several challenges for the processing 

of sensor-data: 

a) it should be very efficient in order to retain its real-time flavor and  
b) it should be very flexible in order to deal with various and dynamically changing 

patterns (situations) of interests (that should be recognized in real-time).  

Complex event processing is a technology that can resolve these challenges. 
Energy efficiency is one of application areas, where real-time situational awareness 
can  bring  a  substantial  added  value.  Smart  Grid  is  a  well-known  example:  Smart 
meters2  enable  real-time  publishing  of  information  about  energy  consumption  of  a 
user  (usually  once  every  seven  minutes),  which  consequently  can  support  the  realtime  optimization  of  the  energy  production.  Decreasing  energy  consumption  in 
buildings, public spaces and households is another very promising area for applying 
real-time situational awareness. It has been shown that the creation of the awareness 
about the current (in real-time) energy consumption in a household can bring itself up 
to 20% savings in electricity bills. Beside these passive savings, active energy savings 
by switching off electrical devices in particular situations are very common methods 
in reducing energy consumption3. 

Although well developed, current approaches for achieving energy efficiency seem to 
be  inefficient:  they  are  usually  dealing  with  customized  solutions  tuned  to  the 
predefined  energy  consumption  scenarios.  The  consequence  is  that  the  costs  for 
introducing and maintaining these solutions are quite high, since e.g. each new scenario 
(the so-called energy consumption pattern) has to be modeled separately. On the other 
hand,  due  to  a  high  variation  in  the  energy  consumption  profile  (e.g.  the  spatial 
distribution  of  energy  consumers),  energy  consumption  patterns  are  very  variable  and 
modeling  new  patterns  is  more  a  rule  than  an  exception.  Therefore,  although  oriented 
towards real-time recognition of the interesting situations, these approaches are suffering 
from the inflexibility in the detection process, e.g. by not having available a declarative 
description  of  the  situations  to  be  detected  and  by  not  performing  an  intelligent 
processing  (reasoning)  on  the  incoming  data.  Obviously,  the  application  of  semantic 
technologies can be very promising for resolving these challenges.    

In  this  paper  we  present  a  novel  approach  for  achieving  energy  efficiency  that 
exploits  real-time  situational  awareness  based  on  the  use  of  Complex  Event 
Processing and Semantic Technologies. The main idea is to enable a semantic-based 
description  of  the  situations  of  interests  (i.e.  energy  consumption  patterns)  and 
perform reasoning about those situations in real-time. The approach leverages on our 
work  in  the  domain  of  intelligent  Complex  Event  Processing  (iCEP)4,  especially 
complex  event  reasoning,  that  combines  a  very  efficient  in-memory  processing  (on 
the  fly)  of  a  huge  amount  of  streaming  data  and  the  reasoning  (on  the  fly)  using 
available domain knowledge. 

                                                           
2 http://www.smartmeters.com/faqs.html 
3 http://www.greentrac.com/ 
4 See iCEP.fzi.de 

Y. Xu et al. 

The approach has been  implemented using the iCEP framework and deployed in 
our experimental environment that supports testing novel technologies with a higher 
users involvement. We have performed a case study related to the office occupancy 
control that limits the operation of the lighting system based on the actual use of the 
space. Preliminary evaluation tests have shown very promising results regarding the 
usability  and  the  efficiency  of  the  approach:  the  approach  is  able  to  abstract  from 
particular patterns to be recognized into general/declarative situations to be reasoned 
about.      

The paper is structured in the following way: 
In the second section we give more details about our Energy Efficiency use case, 
from  the  real-time  consumption  point  of  view.  In  the  third  section  we  outline  the 
architecture  of  our  solution.  In  section  four  we  describe  some  evaluation  details, 
whereas  section  five  elaborates  briefly  on  the  related  work.  In  section  six  we  give 
some concluding remarks. 

2   Energy Efficiency in Offices: State of the Art and Requirements 

Analysis 

There are several studies which show that up to 70% of the energy consumption in an 
office  environment  can  be  saved  just  by  creating  awareness  about  the  current 
energy consumption. This is especially related to the very low electricity consumption 
of  the  equipment  and  lighting.  For  example,  while  according  to  Logicalis5,  94%  of 
workers  surveyed  turn  their  lights  off  at  home,  only  66%  thought  about  doing  the 
same at work. Turning the lights off all too often gets ignored by offices, whose lights 
continue to shine even after everyone has gone home. On the other hand, many of the 
energy saving activities can be automated, like whenever workers leave a room, the 
lights should be turned off (see more examples in the Evaluation section). 

There  are  several  approaches  which  are  dealing  with  the  automation  of  this 
process,  which are usually taking into  account the  following  factors  for the lighting 
issues:  

- control of the users presence in an office, as a necessary condition to turn on the 

light; 

- regulation of the artificial light, in relation to the natural light level; 
- possibility of a manual regulation of the light, forcing the automatic regulation, in 

order to better meet the users needs. 

Therefore,  the  automation  of  the  energy  saving  process  is  related  to  an  efficient 
sensing of the current situation in an office and reacting in particular situations. The 
best  examples  are  the  so-called  occupancy  controls  that  limit  the  operation  of  the 
lighting system based on the actual use of the space. Unlike scheduling controls, they 
do not operate by a pre-established time schedule. Instead, the system senses when the 
space is occupied and turns the lights on. When the system senses that there has been 
no activity in the space, it assumes the space is unoccupied and turns the lights off. To  
 

                                                           
5 http://www.energysavingsecrets.co.uk/HowToRunAnEnergyEfficientOffice.html 
?

?

?
prevent  the  system  from  turning  the  lights  off  while  the  space  is  still  occupied  but 
there is very little activity, a time delay typically ranging from 1 to 15 minutes can be 
programmed into the controls.  

However, as already mentioned in the Introduction, current approaches are based 
on a fix set of rules that are designed for a particular scenario. Lets illustrate this on 
the example depicted in Figure 1: an office with six desks, each equipped with a lamp. 
The task is to enable switching off the corresponding lamp when a person is leaving 
the  room.  The  most  advanced  systems  would  model  several  patterns  that  describe 
situations that a person is leaving the room which implies the need for switching off 
the light at her/his desk. A pattern for the region F would be (cf. Figure 1):  

If sequence (RegionF, RegionD, RegionB, Door) Then SwitchOff(LampF)   (1) 

Fig. 1. The distribution of sensors in a smart office. There are three types of sensors: 1) contact 
sensors (TFK - attached to the door), 2) moving sensors (M1  M6) and Light barrier sensors 
(L1-L4) 

 

The main drawbacks of such an approach are: 

1) 

2) 

3) 

the  energy  saving  patterns  are  hard-coded,  which  means  that  all  patterns 
must be explicitly defined in order to be taken into account; 
there  is  no  abstraction  in  the  pattern  definition,  so  that  any  kind  of 
generalization is excluded; 
the  patterns  are  static,  so  that  any  kind  of  changes  in  the  initial  setting 
cannot be realized easily. 

Consequently, the requirements for a novel approach are related to: 

1)  a  declarative  description  of  energy  saving  patterns  in  order  to  enable  an 

abstract definition of the situations to be recognized; 

Y. Xu et al. 

2) 

3) 

the  usage  of  domain  knowledge  in  order  to  support  the  use  of  implicit 
information in the detection process; 
the management of patterns, including their evolution.     

In the rest of the paper we present such an approach. 

3   iCEP Approach for the Energy Efficiency  

In order to resolve the above mentioned problems, we have developed a logic-based 
approach for the automatic control of the energy consumption in an office scenario. In 
the nutshell of the approach is a very efficient complex event processing supported by 
deductive  reasoning  capabilities,  implemented  in  the  ETALIS  engine  [2].  The  data 
processed  by  ETALIS  are  coming  from  sensors  placed  in  the  office  (cf.  Figure  1). 
Sensors  are  semantically  described  using  ontologies.  In  the  rest  of  this  section  we 
present the  information  model behind the approach and give  more details about  the 
underlying processing system. 

3.1   Information Model 

Figure 2 represents the information model used in the proposed approach. 

Fig. 2. Information model of the system 

 

It  consists  of  three  layers:  the  raw  data provided  by  sensors,  the  Digital  Entities 
provided by sensor resources and the context  information provided by the advanced 
system components or context-level resources. 

The  raw  data  consists  of  the  value  that  the  sensor  provides,  e.g.,  the  numerical 
value 25. A resource may augment this information with meta-information, e.g. that 
the measured value is a temperature that it is in degrees Celsius that it was measured 
by  sensor X at a certain point in time etc. We call the resulting information Digital 
Entity.  
?

?

?
This  information  is  not  yet  contextualized,  i.e.,  we  may  know  that  it  is  a 
temperature,  but  not  what  this  temperature  describes,  e.g.,  is  this  the  indoor 
temperature  of  a  room  or  the  temperature  within  the  fridge?  This  information  is 
modeled by the context information. The real world is modeled as Real-world entities, 
which are further described by the context attributes. The Real-world entities have an 
identifier and an entity type. The entity type, e.g., person, place, or car, etc. defines 
the context attributes of an entity of interest. For example, a person can have a blood 
pressure; whereas a car can have a certain fuel level. The context attributes have an 
attribute  name,  e.g.,  hasIndoorTemperature,  an  attribute  type,  e.g.,  temperature 
and a context value. The context value consists of a Digital Entity plus some quality 
of  information  parameters.  This  quality  of  information  may  be  different  from  the 
quality information that was provided by the observation and measurement, e.g., the 
accuracy for a room temperature may be calculated as a function of the accuracy of 
the  Digital  Entity  and  the  reliability  that  the  temperature  sensor  provides  the 
temperature of the room. 

In order to deal  with  situations  we introduce  Abstract Entities that correspond to 
the abstraction of the Real-world entities in a given application context. For example, 
a  Region  in  Figure  1  is  an  Abstract  entity.  Similarly  to  a  Real-world  entity,  an 
Abstract  entity  is  associated  to  some  Context  attribute,  which  has  some  Abstract 
value. Note that Abstract value is a matter of the interpretation of the raw data (see 
Figure 2).   

Finally,  a  situation  of  interests  is  a  combination  of  several  Abstract  states  and 
Values  that  represent  the  so-called  Event  types.  Combinations  are  based  on  event 
processing operators (AND, OR, SEQ, etc. [3]. 

Events  represent  instantiations  of  Event  types  in  real  time.  Those  events  are 

processed by ETALIS6 engine. 

The  sensor  system  takes  advantages  of  using  semantic  technologies.  We  use  an 
ontology that is specified in W3C RDF/XML standard format to manage the sensor 
information  and  the  background  domain  knowledge  (see  section  3.4).  Our  sensor 
system integrates ETALIS engine, which has the ability to perform stream reasoning 
with 
to  achieve  a  high  processing 
performance.  

the  background  knowledge  (ontologies) 

3.2   ETALIS 

ETALIS  Language  for  Events  [2]  is  a  logic-based  formalism  for  Complex  Event 
Processing (CEP) and Stream Reasoning. It uses SWI-Prolog Semantic Web Library7 
to represent an RDF/XML ontology as a set of Prolog rules and facts.  ETALIS is an 
open-source  implementation  of  the  language.  The  language  and  a  corresponding 
implementation are based on a novel event processing strategy which detects complex 
events by  maintaining the intermediate states. Every time  an atomic event (relevant 
w.r.t.  the  set  of  monitored  events)  occurs,  the  system  updates  the  internal  state  of 
complex  events.  Essentially,  this  internal  state  encodes  what  atomic  events  are  still 
missing for the completion a certain complex event. Complex events are detected as 

                                                           
6 http://code.google.com/p/etalis/ 
7 http://www.swi-prolog.org/pldoc/package/semweb.html 

Y. Xu et al. 

soon  as  the  last  event  required  for  their  detection  has  occurred.  Descriptions  telling 
which  occurrence  of  an  event  drive  the  detection  of  complex  events  (including  the 
relationships  between  complex  events  and  events  they  consist  of)  are  given  by 
deductive  rules.  Consequently,  detection  of  complex  events  then  amounts  to  an 
inference problem.  

Event processing formalisms based on deductive or logic rules [4, 5, 6] have been 
attracting  considerable  attention  as  they  feature  formal,  declarative  semantics. 
Declarative semantics of a CEP system prescribe what the system needs to detect, i.e., 
a  user  does  not  need  to  worry  how  that  will  be  detected. In  this  respect  declarative 
semantics  guarantees  predictability  and  repeatability  of  results  produced  by  a  CEP 
system. Moreover, CEP systems based on deductive rules can process not only events, 
but also any additional background knowledge relevant with respect to the detection 
of  complex  situations  in  real-time.  Hence  a  rule-based  approach  enables  a  high 
abstraction  level  and  a  uniform  framework  for  realizing  knowledge-based  CEP 
applications (i.e., specification of complex event patterns, contextual knowledge, and 
their  interaction).  Such  applications  can  be  further  supported  by  machine  learning 
(more specifically data mining) tools, to automate the construction and refinement of 
event patterns (see [7]). Although the machine learning support per se is out of scope 
of  this  paper,  we  want  to  emphasize  the  importance  of  the  formal,  rule-based 
semantics  which  can  further  enable  automated  construction  of  both,  event  patterns 
and  the  background  knowledge.  These  features  are  beyond  capabilities  of  existing 
approaches [8, 9, 10], and this is one of reasons  why ETALIS  follows a logic rulebased approach for event processing. 

In the following, we identify a number of benefits of the ETALIS event processing 
model,  realized  via  deductive  rules:  First,  a  rule-based  formalism  (like  the  one  we 
present  in  this  paper)  is  expressive  enough  and  convenient  to  represent  diverse 
complex  event  patterns.  Second,  a  formal  deductive  procedure  guarantees  the 
correctness of the entire event processing. Unlike reactive rules (production rules and 
ECA  rules),  declarative  rules  are  free  of  side-effects;  the  order  in  which  rules  are 
evaluated  is  irrelevant.  Third,  although  it  is  outside  the  scope  of  this  paper,  a 
deductive rule representation of complex events may further help in the verification of 
complex event patterns defined by a user (e.g., by discovering patterns that can never 
be  detected  due  to  inconsistency  problems).  Further  on,  ETALIS  can  also  express 
responses  on  complex  events,  and  reason  about  them  in  the  same  formalism  [11]. 
Fourth, by maintaining the state of changes, the ETALIS event model is also capable 
of  handling  queries  over  the  entire  space  (i.e.  answering  queries  that  span  over 
multiple  ongoing  detections  of  complex  events).  Ultimately,  the  proposed  event 
model allows for reasoning over events, their relationships, entire state, and possible 
contextual  knowledge  available  for  a  particular  domain  (application).  Reasoning  in 
the ETALIS event model can be further exploited to find ways to reach a given aim, 
which  is  a  task  that  requires  some  intelligence.  For  example,  an  application  or  a 
service needs to reach a stable or known (desired) state. To achieve this, the system 
has  to  have  a  capability  to  reason  about,  or  to  asses  states  (in  a  changing 
environment). Another example is to just track and trace the state of any entity at 
any time (in order to be able to sense and respond in a proactive way). 

Technically,  ETALIS  approach  is  based  on  the  decomposition  of  complex  event 
patterns  into  intermediate  patterns  (i.e.  goals).  The  status  of  achieved  goals  is 
?

?

?
materialized as first class citizens of a fact base. These materialized goals show the 
progress toward completion of one or more complete event patterns. Such goals are 
automatically  asserted  by  rules  as  relevant  events  occur.  They  can  persist  over  a 
period  of  time  waiting  in  order  to  support  detection  of  a  more  complex  goal  or 
complete  pattern.  Important  characteristics  of  these  goals  are  that  they  are  asserted 
only if they are used later on (to support a more complex goal or an event pattern), 
that goals are all unique and persist as long as they remain relevant (after that they can 
be deleted). Goals are asserted by rules which are executed in the backward chaining 
mode.  The  notable  property  of  these  rules  is  that  they  are  event-driven.  Hence, 
although  the  rules  are  executed  backwards,  overall  they  exhibit  a  forward  chaining 
behavior. For more information, an interested reader is referred to [2]. 

3.3   Example 

As already mentioned, one of the main advantages of our approach is the possibility 
to define the situations of interests in a declarative way and reason about them based 
on the incoming sensor data. 

In order to illustrate the abstractions introduced by ETALIS, we present here a very 
illustrative example for the occupancy control based on the office context presented in 
Figure 1. 

In the traditional approaches, the situation of interests: 
a person left the room and her/his desk lamp should be switched off within 5 sec 
must  be  described  by  using  one  rule  for  each  possible  situation.  An  example  is 
illustrated in Figure 3: a person left the room by traversing from Region F, through 
Region D and B till the door. 

Fig. 3. A possible path from the office desk to the door: a situation that can lead to switching 
off the lamp at the desk in the Region F 

 

Therefore,  traditional  approaches  must  cover  use  all  possible  evacuation  paths 
which  is  a  tedious  and  error  prone  process.  The  situation  is  even  worse  when  we 
consider that the distribution of objects in the office can be changed  the whole set of 
rules must be rewritten. 

Y. Xu et al. 

On  the  other  hand,  in  our  approach  there  is  only  one  logic-based  statement  that 

covers all requested situations, by describing them declaratively: 

Namespace: cep: http://www.icep.fzi.de/cepsensor.owl# 
Pattern.event: 

door_open <- status(cep:door, 'cep:door_opened'). 

status(A, B) <- sensor(X, Y)  

(rdfs_individual_of(Sensor, 'cep:Sensor'), 
rdf(Sensor, 'cep:hasName', X), 
rdf(State, 'cep:hasValue', Y), 
rdfs_individual_of(State, 'cep:State'), 
rdf(B, 'cep:detectedWithState', State), 
rdfs_individual_of(B, 'cep:Status'), 
rdf(Sensor, 'cep:locatedIn', A)). 

 

 

movement(Loc1,Loc2)    <-    status(Loc1,  cep:movementInRegion)  SEQ  status(Bord, 
cep:moveover) SEQ  status(Loc2, cep:movementInRegion) 

(rdfs_individual_of(Loc1, 'cep:Region'), 
rdfs_individual_of(Loc2, 'cep:Region'), 
rdfs_individual_of(Bord, 'cep:Borderline'), 
rdf(Loc1, 'cep:hasNeighbor', Loc2), 
rdf(Loc1, 'cep:hasBorderline', Bord), 
rdf(Loc2, 'cep:hasBorderline', Bord))2sec. 

comment: this statement detects the situation that a person has changed the region, if within 
2 sec the movement sensor and light barrier sensor for a Region has been activated 

cep:door)  <- 

(movement(Loc, 

movement(Loc1,Loc3) <- movement(Loc1,Loc2) SEQ movement(Loc2,Loc3) . 
movement(Loc, 
cep:moveover)) 2sec. 
comment: this statement is the most crucial one: by introducing recursive rules we are able 
to describe all possible paths which are containing succeeding regions   
SwitchOff(Loc) <- (movement(Loc, cep:door) SEQ door_open)5sec.  
comment:  this  statement  detects  the  situation  that  a  person  has  left  the  room  (after  a 
sequence of traversing between regions) and that after 5 sec the light at the starting location 
should be switched off 

cep:regionB)  SEQ  status(Bord, 

 

Note  that  the  particular  state  of  the  world  (like  this  presented  in  Figure  2)  is 
represented in the domain ontology and the CEP engine (ETALIS) is accessing that 
knowledge in the real time. 

rdf(?Subject, ?Predicate, ?Object) 
is a function in SWI-Prolog Semantic Web Library . It is an Elementary query for triples. 
Subject and Predicate are atoms representing the fully qualified URL of the resource. Object 
is either an atom representing a resource or literal (Value) if the object is a literal value. 

rdfs_individual_of(?Resource, ?Class) 
is  a  function  in  SWI-Prolog  Semantic  Web  Library.  It  tests  whether  the  Resource  is  an 
individual  of  class.  It  returns  true  if  Resource  is  an  individual  of  Class.  This  implies 
Resource has an rdf:type property that refers to Class or a sub-class thereof. It can be used to 
test, to generate classes Resource belongs to or to generate individuals described by Class.  
?

?

?
3.4   Domain Ontology 

The structure of the ontology used in our scenario is shown in Figure 4.  

The Sensor class hierarchy on the top left models the sensors of the scenario such 
as  contact  sensor,  movement  sensor  and  light  barrier  sensor.  Each  sensor  type  has 
one or several states, which describe the physical sensing information of sensors, e.g. 
the contact sensor has two states: on or off. The states of sensors are modeled by using 
the class State.  

The Actuator class hierarchy on the top right of the Figure 4, similar to the Sensor 
class hierarchy, models all actuators. Each Actuator has some processes, modeled in 
the class Process and defining the functions of the actuators. For example, the Switch 
has two processes corresponding to the switch on and switch off functions. 

Fig. 4. Illustration of the main concepts in the domain ontology 

 

The  Object  hierarchy  describes  the  real  world  entities  such  as  Lamp,  Door  and 
Region, which are connected to a sensor or an actuator. The object property locatedIn 
describes the connection between the Objects and Sensors or Actuators.  Each object 
has  several  statuses  e.g.  Door  has  two  statuses:  open  and  closed.  Some  of  these 
statuses can be detected by Sensor with the special State; the others are controlled by 
Actuator by using related Process. 

This  ontology  is  used  as  background  knowledge  by  ETALIS  engine.  Indeed, 
ETALIS allows using background knowledge in the detection process - any constraint 
can  be  easily  associated  to  each  situation,  which  enables  a  very  easy  generation  of 
new  occupancy  situations  that  should  be  detected.  For  example,  it  is  very  easy  to 
introduce  a  new  property  of  a  region  in  an  office,  like  to  treat  regions  that  have  a 
window separately from other regions. 

Y. Xu et al. 

4   Evaluation 

In order to evaluate the performance of the proposed system we have implemented a 
test case concerning efficient energy consumption in an office. We have used the FZI 
Living Lab8 environment for the testing. 

The  use  case  is  based  on  simulating  occupancy  control  situations  that  limit  the 
operation of the lighting system based on the actual use of the space. In other words, 
if there is a situation, that leads to possibly saving energy, being recognized in a way 
specified in Section 3.3, the corresponding lighting source should be either dimmed or 
switched off. In order to make the test realistic we have implemented the set of energy 
consumption patterns developed for a Building Energy Challenge9. Table 1 represents 
some  of  those  patterns.  Note  that  in  order  to  be  realistic  we  assume  that  there  are 
negative and positive situations from the energy efficiency point of view, depicted as 
Penalties  and  Bonus  in  Table  1  (the  setting  has  been  completely  taken  from  the 
Building Energy Challenge). 

Table 1. Examples of the consumption patterns from the Building Energy Challenge 

Penalties 

Bonus 

Having a window open while the heating 
system is on 
Leaving the office at the end of the day 
with the computer switched on 
Switch  on  the  artificial  light  while  day 
light is sufficient 
Having  a  temperature  lower  than  26  C 
with the air conditioning on [12] 

Switch  off  the  light  each  time  when 
leaving the office 
Switch off the heating each time when 
none is in the office 
Switch  off  the  computer  when  leaving 
the office for more than one hour 
Switch off the artificial light while day 
light is sufficient 

We  have  modeled  all  these  patterns  using  ETALIS  language  and  ontologies  as 
discussed in Section 3. The setting of the sensors was very similar to that presented in 
Figure 1 (additional sensors for measuring temperature, light intensity and actuators 
for electric devices have been introduced). 

We  performed  an  experiment  in  order  to  measure  savings  in  the  energy 
consumption. We have measured the power saving time in the period of one month in 
an  office  with  five  people.  We  find  this  setting  as  a  very  common  one.  As  already 
explained, our declarative approach doesnt depend on the number of sensors and the 

                                                           
8 Living Labs is a practical approach to realize open innovation with a regional dimension. By 
definition, it is research methodology for sensing, validating and refining complex solutions 
in real life contexts. It is conceptualized as an innovation platform that brings together and 
involves  a  multitude  of  actors,  such  as  end-users,  researchers,  industrialists  and  policy 
makers. They crucial characteristic is that they are user-centered with an active participation 
of users within the entire development process. Usually, Living Labs build upon or create a 
technology platform geared to answer the needs of users in a particular situation. 
9 A contest regarding energy consumption between several office buildings within a company, 
see: http://www.artist-embedded.org/docs/Events/2010/GREEMBED/0_GREEMBED_Papers/ 
IntUBE 20- 20GREEMBED.pdf 
?

?

?
size of the room. We performed several changes in the layout of the room (position of 
sensors)  but  without  the  need  to  change  the  complex  event  patterns.  Therefore,  the 
abstraction provided by our language is correct: interesting situations are defined on 
the level of objects, independently from the current position of sensors. 

Table 2 presents the results from this experiment. In the last column we present the 
average  value  of  measurements  and  in  the  rest  of  the  columns  the  values  for  four 
particular days (1st, 10th, 20th and 30th) in order to illustrate how theses consumption 
values varied.  

Power saving time represents the time when some electric devices were switched 
off because of the situation that the corresponding person (related to that device) had 
left the room. 

We  are  quite  satisfied  with  the  general  result  of  the  experiment:  the  proposed 
approach  leads  to  significant  reductions  in  the  energy  consumption.  We  didnt 
encounter any example of the false positive. 

Table 2. The results from the experiment 

 

Power 
saving time: 
Total time: 
Proportion: 
Error: 
Total switch: 
Error rate 

1st day 
33089s 

109199s 
30.3% 
?

?

?
17.9% 

10th day 
19548s 

103665s 
18.9% 
?

?

?
23.2% 

20th day 
58133s 

124676s 
46.6% 
?

?

?
30.5% 

30th day 
42152s 

117021s 
36% 
?

?

?
17.9% 

average 
38255s 

111354s 
34.3% 
?

?

?
18.3% 

The  only  problem  we  have  faced  is  the  rather  huge  error  rate,  whereas  an  error 
represents  the  number  of  situations  that  couldnt  be  detected  by  using  currently 
deployed  patterns  (out  of  scope  of  the  experiment).  In  the  following  we  give  an 
explanation (i.e. interfere factors) of these situations. 

The first interfere factor is the precision of the sensors. In the evaluation we used 
ELV  FS20  sensor  systems  including  FS20  PIRI-2  motion  sensor,  FS20  IR  light 
barrier sensor, FS20 TFK contact sensor and FS20 ST-3 radio electrical socket. The 
motion  sensor  and  the  light  barrier  sensor  have  a  minimal  send  time  interval  of  8 
seconds, which means they can only send a single value every 8 seconds. In the case 
of  a  high  activity  frequency,  the  sensors  cant  detect  all  activities.  Furthermore,  the 
sensors cant detect some situations such as two people come into the office together. 
In this  situation the sensors are not able  to recognize the  number of  the people and 
only one lamp will be switched on. To overcome this, we can use more sensors and 
the better sensors to increase the precision of the event detection. 

The second interfere  factor is unanticipated activity in the  office. For example, a 
user  forgets  to  close  the  door  after  coming  into  the  office.  Then  when  another  user 
leaves  the  office,  he  doesnt  need  to  open  the  door,  which  is  a  necessary  event 
according  to  the  pattern.  In  this  situation,  the  lamp  will  also  not  be  switched  off. 
Similarly, a visitor has visited the office, when he leaves the office, one lamp in the  

Y. Xu et al. 

office  will  be  falsely  switched  off.  This  problem  can  be  overcome  by  installing 
automatic door closing device and using new sensor technologies (such as RFID) to 
recognize the identity of the user.   

The  third  interfere  factor  results  from  the  fact  that  the  pattern  definition  doesnt 
match the character of a user. In the pattern we have defined that the movement event 
and door open event must happen within 5 seconds to trigger the switch off event. If a 
user is accustomed to do something else costing more than 5 seconds before he opens 
the door, then his lamp will not be switched off. The problem can be solved by doing 
some study on the characters of the users before defining the patterns. 

Modeling the above mentioned situations will be one of the subjects of the further 

work.  

5   Related Work 

In  this  section  we  only  present  the  related  work  related  to  the  current  lighting  control 
systems. Related work to our approach for complex event processing can be found in [2]. 
Current lighting and climate control systems often rely on building regulations that 
define  maximum  occupancy  numbers  for  maintaining  proper 
lighting  and 
temperatures. However, in many situations, there are rooms that are used infrequently, 
and  may  be  lighted,  heated  or  cooled  needlessly.  Having  knowledge  regarding 
occupancy and being able to accurately predict usage patterns may allow significant 
energy-savings.  

In  [13],  the  authors  reported  on  the  deployment  of  a  wireless  camera  sensor 
network  for  collecting  data  regarding  occupancy  in  a  large  multi-function  building. 
They  constructed  multivariate  Gaussian  and  agent  based  models  for  predicting  user 
mobility patterns in buildings.  

In [14], the authors identified that the majority of this energy waste occurs during 
the weekdays, not during the weeknights or over the weekends. They showed that this 
pattern of energy waste is particularly suited to be controlled by occupancy sensors, 
which  not  only  prevent  runaway  operation  after  typical  business  hours,  but  also 
capture savings during the business day. 

An  analysis  of  the  impact  of  the  new  trends  in  energy  efficient  lighting  design 
practices on human comfort and productivity in the modern IT offices is given in [14]. 
In [15], the authors presented the design and implementation of a presence sensor 
platform that can be used for accurate occupancy detection at the level of individual 
offices.  The  presence  sensor  is  low-cost,  wireless,  and  incrementally  deployable 
within existing buildings.  

An  examination  of  different  types  of  buildings  and  their  energy  use  is  given  in 
[16].  The  authors  discussed  opportunities  available  to  improve  energy  efficient 
operation through various strategies from lighting to computing. 

As a conclusion, there are  many approaches  for the lighting control, but  none of 
them  is  using  a  more  declarative  approach  that  would  enable  an  efficient  real-time 
situation detection. 

 
?

?

?
6   Conclusions 

In this paper we presented a novel approach for achieving energy efficiency in public 
buildings  (especially  sensor-enabled  offices)  based  on  the  application  of  intelligent 
complex event processing and semantic technologies. In the nutshell of the approach 
is  an  efficient  method  for  realizing  real-time  situational  awareness  that  helps  in 
recognizing the situations where a more efficient energy consumption is possible and 
reaction on those opportunities promptly. Semantics allows a proper contextualization 
of the sensor data (its abstract interpretation). Complex event processing enables the 
efficient  real-time  processing  of  sensor  data  and  its  logic-based  nature  supports  a 
declarative definition of the situations of interests.  

The approach has been  implemented using iCEP framework and deployed in the 
FZI  Living  Lab  environment  that  supports  testing  novel  technologies  with  a  higher 
users involvement. We have performed a case study related to the office occupancy 
control, that limits the operation of the lighting system based on the actual use of the 
space. Preliminary evaluation tests have shown very promising results regarding the 
usability  and  the  efficiency  of  the  approach:  the  approach  is  able  to  abstract  from 
particular patterns to be recognized into general/declarative situations to be reasoned 
about.  

Future work will be related to modeling a more comprehensive set of patterns for 
representing  more  complex  situations  as  described  in  the  Evaluation  section. 
Additionally, new tests in the Living Lab have been planned. 

Acknowledgments 

Research for this paper was partially financed by EU in the following FP7 projects: 
ALERT (ICT-258098), PLAY (ICT-258659) and ARtSENSE (ICT-270318). 
