Effective Computation of Maximal Sound

Approximations of Description Logic Ontologies

Marco Console, Jose Mora, Riccardo Rosati,
Valerio Santarelli, and Domenico Fabio Savo

Dipartimento di Ingegneria Informatica Automatica e Gestionale Antonio Ruberti

Sapienza Universit`a di Roma

{lastname}@dis.uniroma1.it

Abstract. We study the problem of approximating Description Logic (DL) ontologies specified in a source language LS in terms of a less expressive target
language LT . This problem is getting very relevant in practice: e.g., approximation is often needed in ontology-based data access systems, which are able to deal
with ontology languages of a limited expressiveness. We first provide a general,
parametric, and semantically well-founded definition of maximal sound approximation of a DL ontology. Then, we present an algorithm that is able to effectively
compute two different notions of maximal sound approximation according to the
above parametric semantics when the source ontology language is OWL 2 and
the target ontology language is OWL 2 QL. Finally, we experiment the above
algorithm by computing the two OWL 2 QL approximations of a large set of existing OWL 2 ontologies. The experimental results allow us both to evaluate the
effectiveness of the proposed notions of approximation and to compare the two
different notions of approximation in real cases.

1 Introduction

Description Logic (DL) ontologies are the core element of ontology-based data access
(OBDA) [15], in which the ontology is utilized as a conceptual view, allowing user access to the underlying data sources. In OBDA, as well as in all the current applications
of ontologies requiring automated reasoning, a trade-off between the expressiveness
of the ontology specification language and the complexity of reasoning in such a language must be reached. More precisely, most of the current research and development
in OBDA is focusing on languages for which reasoning, and in particular query an-
swering, is not only tractable (in data complexity) but also first-order rewritable [2,5].
This imposes significant limitations on the set of constructs and axioms allowed in the
ontology language.

The limited expressiveness of the current ontology languages adopted in OBDA provides a strong motivation for studying the approximation of ontologies formulated in
(very) expressive languages with ontologies in low-complexity languages such as OWL
2 QL. Such a motivation is not only theoretical, but also practical, given the current
availability of OBDA systems and the increasing interest in applying the OBDA approach in the real world [1,6,7,16]: for instance, ontology approximation is currently

P. Mika et al. (Eds.) ISWC 2014, Part II, LNCS 8797, pp. 164179, 2014.
c Springer International Publishing Switzerland 2014
?

?

?
one of the main issues in the generation of ontologies for OBDA within the use cases
of the Optique EU project.1

Several approaches have recently dealt with the problem of approximating Description Logic ontologies. These can roughly be partitioned in two types: syntactic and
semantic. In the former, only the syntactic form of the axioms of the original ontology
is considered, thus those axioms which do not comply with the syntax of the target
ontology language are disregarded [17,18]. This approach generally can be performed
quickly and through simple algorithms. However, it does not, in general, guarantee
soundness, i.e., to infer only correct entailments, or completeness, i.e., all entailments of
the original ontology that are also expressible in the target language are preserved [14].
In the latter, the object of the approximation are the entailments of the original ontol-
ogy, and the goal is to preserve as much as possible of these entailments by means of
an ontology in the target language, guaranteeing soundness of the result. On the other
hand, this approach often necessitates to perform complex reasoning tasks over the on-
tology, possibly resulting significantly slower. For these reasons, the semantic approach
to ontology approximation poses a more interesting but more complex challenge.
In this paper, we study the problem of approximating DL ontologies specified in
a source language Ls in terms of a less expressive target language Lt. We deal with
this problem by first providing a general, parametric, and semantically well-founded
definition of maximal sound approximation of a DL ontology. Our semantic definition
captures and generalizes previous approaches to ontology approximation [4,8,11,14].
In particular, our approach builds on the preliminary work presented in [8], which proposed a similar, although non-parameterized, notion of maximal sound approximation.
Then, we present an algorithm that is able to effectively compute two different notions of maximal sound approximation according to the above parametric semantics,
when the source ontology language is OWL 2 and the target ontology language is OWL
2 QL. In particular, we focus on the local semantic approximation (LSA) and the global
semantic approximation (GSA) of a source ontology. These two notions of approximation correspond to the cases when the parameter of our semantics is set, respectively, to
its minimum and to its maximum. Informally, the LSA of an ontology is obtained by
considering (and reasoning over) one axiom  of the source ontology at a time, so this
technique tries to approximate  independently of the rest of the source ontology. On
the contrary, the GSA tries to approximate the source ontology by considering all its
axioms (and reasoning over such axioms) at the same time. As a consequence, the GSA
is potentially able to approximate better than the LSA, while the LSA appears in principle computationally less expensive than the GSA. Notably, in the case of OWL 2 QL,
the GSA corresponds to the notion of approximation given in [14], which has been
shown to be very well-suited for query answering purposes.

Finally, we experiment the above algorithm by computing the LSA and the GSA in
OWL 2 QL of a large set of existing OWL 2 ontologies. The experimental results allow
us both to evaluate the effectiveness of the proposed notions of approximation and to
compare the two different notions of approximation in real cases. In particular, the main
properties pointed out by our experimental results are the following:

1 http://optique-project.eu

M. Console et al.

1. the computation of the LSA is usually less expensive than computing the GSA of a

given source ontology;

2. in many cases, both the LSA and the GSA of an ontology are very good approximations of the ontology, in the sense that the approximated ontologies actually entail
a large percentage of the axioms of the source ontology;

3. in many cases, the LSA and the GSA coincide. This and the previous property imply
that the computationally less expensive LSA is usually already able to compute a
high-quality sound approximation of the source ontology.

The paper is structured in the following way. First, in Section 2 we recall DL ontology languages, in particular OWL 2 and OWL 2 QL. Then, in Section 3 we present our
formal, parameterized notion of semantic sound approximation of an ontology, and illustrate some general properties of such a notion. In Section 4 we present the techniques
for computing the GSA and the LSA of OWL 2 ontologies in OWL 2 QL. Finally, we
present an experimental evaluation of the above techniques in Section 5, and draw some
conclusions in Section 6.

2 Preliminaries

Description Logics (DLs) [3] are logics that allow one to represent the domain of interest in terms of concepts, denoting sets of objects, value-domains, denoting sets of
values, attributes, denoting binary relations between objects and values, and roles denoting binary relations over objects.
In this paper we consider the DL SROIQ [10], which is the logic underpinning

OWL 2, as the maximal DL considered in this paper.

Let  be a signature of symbols for individual (object and value) constants and
predicates, i.e., concepts, value-domains, attributes, and roles. Let  be the set of all
SROIQ axioms over .

An ontology over  is a finite subset of .
A DL language over  (or simply language) L is a set of ontologies over . We call
L-ontology any ontology O such that O  L. Moreover, we denote by L the set of
axioms
We call a language L closed if L = 2L. As we will see in the following, there exist

OL O.
?

?

?
both closed and non-closed DL languages among the standard ones.
The semantics of an ontology is given in terms of first-order (FOL) interpretations
(cf. [3]). We denote with M od(O) the set of models of O, i.e., the set of FOL interpretations that satisfy all the axioms in O (we recall that every SROIQ axiom corresponds
to a first-order sentence). As usual, an ontology O is said to be satisfiable if it admits at
least one model, and O is said to entail a First-Order Logic (FOL) sentence , denoted
I = true for all I  M od(O). Moreover, given two ontologies O and O
O |= , if 
,
we say that O and O

are logically equivalent if M od(O) = M od(O).

In this work we will mainly focus on two specific languages, which are OWL 2,
the official ontology language of the World Wide Web Consortium (W3C) [9], and
one of its profiles, OWL 2 QL [12]. Due to the limitation of space, here we do not
provide a complete description of OWL 2, and refer the reader to the official W3C
specification [13].
?

?

?
We now present the syntax of OWL 2 QL. We use the German notation for describing
OWL 2 QL constructs and axioms, and refer the reader to [12] for the OWL functional
style syntax.

Expressions in OWL 2 QL are formed according to the following syntax:

B  A | Q | F (U ) | C | C
C  B | B | Q.A
Q  P | P  | P | P
R  Q | Q

E  (U )
F  D | T1 |

V  U | A | A
W  V | V

| Tn



where: A, P , and U are symbols denoting respectively an atomic concept, an atomic
denotes the inverse of P ; Q, also called unqualified
role, and an atomic attribute; P
existential role, denotes the set of objects related to some object by the role Q; F (U )
denotes the qualified domain of U with respect to a value-domain F , i.e., the set of
objects that U relates to some value in F ; (U ) denotes the range of U , i.e., the set
of values related to objects by U ; T1, . . . , Tn denote n unbounded value-domains (i.e.,
datatypes); the concept Q.A, or qualified existential role, denotes the qualified domain
of Q with respect to A, i.e., the set of objects that Q relates to some instance of A. C,
P , A, and D denote, respectively, the universal concept, role, attribute, and value-
domain, while C, P , and A denote, respectively, the empty concept, role, and
attribute.

An OWL 2 QL ontology O is a finite set of axioms of the form:

B  C

Q  R

U  V

E  F

ref (P )

irref (P )

A(a)

P (a, b)

U (a, v)

From left to right, the first four above axioms denote subsumptions between concepts,
roles, attributes, and value-domains, respectively. The fifth and sixth axioms denote
reflexivity and irreflexivity on roles. The last three axioms denote membership of an
individual to a concept, membership of a pair of individuals to a role, and membership
of a pair constituted by an individual and a value to an attribute.

From the above definition, it immediately follows that OWL 2 QL is a closed lan-
guage. On the other hand, we recall that OWL 2 is not a closed language. This is due to
the fact that OWL 2 imposes syntactic restrictions that concern the simultaneous presence of multiple axioms in the ontology (for instance, there exist restrictions on the
usage of role names appearing in role inclusions in the presence of the role chaining
constructor).

3 Approximation
In this section, we illustrate our notion of approximation in a target language LT of an
ontology OS in a language LS.

Typically, when discussing approximation, one of the desirable properties is that of
soundness. Roughly speaking, when the object of approximation is a set of models, this
property requires that the set of models of the approximation is a superset of those of the
original ontology. Another coveted characteristic of the computed ontology is that it be
the best approximation of the original ontology. In other words, the need of keeping

M. Console et al.

On the basis of these observations, the following definition of approximation in a

a minimal distance between the original ontology and the ontology resulting from its
approximation is commonly perceived.
target language LT of a satisfiable LS-ontology is very natural.
Definition 1. Let OS be a satisfiable LS-ontology, and let OS be the set of predicate
and constant symbols occurring in OS. An LT -ontology OT over OS is a global
semantic approximation (GSA) in LT of OS if both the following statements hold:
(i) M od(OS)  M od(OT );
(ii) there is no LT -ontology O

over OS such that M od(OS)  M od(O) 

M od(OT ).

We denote with globalApx (OS,LT ) the set of all the GSAs in LT of OS.

In the above definition, statement (i) imposes the soundness of the approximation,
while statement (ii) imposes the condition of closeness in the choice of the approxi-
mation.
We observe that an LT -ontology which is the GSA in LT of OS may not exist. This
is the case when, for each LT ontology O
T satisfying statement (i) of Definition 1,
there always exists an LT -ontology O
T which satisfies statement (i), but for which we
have that M od(OS)  M od(O
T )  M od(O
a language LT of an ontology OS.
Lemma 1. Given a language LT and a finite signature , if the set of non-equivalent
axioms in LT that one can generate over  is finite, then for any LS-ontology OS
globalApx (OS,LT ) = .

The following lemma provides a sufficient condition for the existence of the GSA in

T ).

belonging to globalApx (OS,LT ), we have that O

In cases where GSAs exist, i.e., globalApx (OS,LT ) = , given two ontologies O
and O
in globalApx (OS,LT ), they may be either logically equivalent or not. The
condition of non-equivalence is due to the fact that the language in which the original
ontology is approximated is not closed. We have the following lemma.
Lemma 2. Let LT be a closed language, and let OS be an ontology. For each O
and
O
are logically equivalent.
Proof. Towards a contradiction, suppose that M od(O) = M od(O). From this, and
from Definition 1 we have that M od(O)  M od(O) and M od(O)  M od(O).
Hence, there exist axioms  and  in LT such that O |=  and O |= , and O |= 
and O |= . Since both O
are sound approximations of OS, OS |= {, }.
Because LT is closed, the ontology O
 = O  {} is an LT -ontology. From the
above considerations it directly follows that M od(OS)  M od(O
)  M od(O).
This means that O
does not satisfy condition (ii) of Definition 1, and therefore O 
globalApx (OS,LT ), which is a contradiction. The same conclusion can be reached
analogously for O

and O

and O

.
?

?

?
In other words, if the target language is closed, Lemma 2 guarantees that, up to logical
equivalence, the GSA is unique.
Definition 1 is non-constructive, in the sense that it does not provide any hint as to
how to compute the approximation in LT of an ontology OS. The following theorem
suggests more constructive conditions, equivalent to those in Definition 1, but first we
need to introduce the notion of entailment set [14] of a satisfiable ontology with respect
to a language.
Definition 2. Let O be the set of predicate and constant symbols occurring in O, and
let L
, denoted as ES(O,L),
is the set of axioms from L that only contain predicates and constant symbols from
O and that are entailed by O.

be a language. The entailment set of O with respect to L

is unique.

Clearly, given an ontology O and a language L

In other words, we say that an axiom  belongs to the entailment set of an ontology
, if  is an axiom in L built over the signature of O
, the entailment set of O with respect

O with respect to a language L
and for each interpretation I  M od(O) we have that I |= .
to L
Theorem 1. Let OS be a satisfiable LS-ontology and let OT be a satisfiable LT -
ontology. We have that:
(a) M od(OS)  M od(OT ) if and only if ES(OT ,LT )  ES(OS,LT );
(b) there is no LT -ontology O

such that M od(OS)  M od(O)  M od(OT ) if
,LT ) 

such that ES(OT ,LT )  ES(O

and only if there is no LT -ontology O
ES(OS,LT ).

Proof. We start by focusing on the first statement. () Suppose, by way of contradic-
tion, that ES(OT ,LT )  ES(OS,LT ) and that M od(OS)  M od(OT ). This means
that there exists at least one interpretation that is a model for OS but not for OT . Therefore there exists an axiom   OT such that OS |= . Since OT is an ontology in LT ,
then  is an axiom in LT . It follows that   ES(OT ,LT ) and that   ES(OS,LT ),
which leads to a contradiction.
() Towards a contradiction, suppose that M od(OS)  M od(OT ), but
 ES(OS,LT ). This means that there exists at least one axiom
ES(OT ,LT )
  ES(OT ,LT ) such that   ES(OS,LT ). It follows that OT |=  while
OS |= , which immediately implies that M od(OS)  M od(OT ). Hence we have a
contradiction.
Now we prove the second statement. () By contradiction, suppose that there exists
such that M od(OS)  M od(O)  M od(OT ), and that there does
an LT -ontology O
,LT )  ES(OS,LT ).
not exist any LT -ontology O
From what shown before, we have that M od(OS)  M od(O)  M od(OT ) implies
that ES(OT ,LT )  ES(O
and OT
are LT ontologies, M od(O)  M od(OT ) implies that ES(OT ,LT ) = ES(O
,LT ).
Hence, ES(OT ,LT )  ES(O
,LT )  ES(OS,LT ), which contradicts the
hypothesis.
that ES(OT ,LT )  ES(O

such that ES(OT ,LT )  ES(O
,LT )  ES(OS,LT ). Moreover, since both O

() Suppose, by way of contradiction, that there exists an LT -ontology O

such
,LT )  ES(OS,LT ) and there is no LT -ontology O
?

?

?
such that M od(OS)  M od(O)  M od(OT ). From property (a) we have that
M od(OS)  M od(O)  M od(OT ). Since both O
and OT are LT ontologies,
then ES(OT ,LT )  ES(O
,LT ) implies that M od(O) = M od(OT ), which directly leads to a contradiction.

From Theorem 1 it follows that every ontologyOT which is a GSA in LT of an ontology
OS is also an approximation in LT of OS according to [8], and, as we shall show in the
following section, for some languages, this corresponds to the approximation in [14].

As discussed in [8], the computation of a GSA can be a very challenging task even
when approximating into tractable fragments of OWL 2 [12]. This means that even
though a GSA is one that best preserves the semantics of the original ontology, it currently suffers from a significant practical setback: the outcome of the computation of the
approximation is tightly linked to the capabilities of the currently available reasoners
for LS-ontologies. This may lead, in practice, to the impossibility of computing GSAs
of very large or complex ontologies when the source language is very expressive.
We observe that the critical point behind these practical difficulties in computing
a GSA of an ontology is that, in current implementations, any reasoner for LS must
reason over the ontology as a whole. From this observation, the idea for a new notion
of approximation, in which we do not reason over the entire ontology but only over
portions of it, arises. At the basis of this new notion, which we call k-approximation, is
the idea of obtaining an approximation of the original ontology by computing the global
semantic approximation of each set of k axioms of the original ontology in isolation.
Below we give a formal definition of the k-approximation.
In what follows, given an ontology O and a positive integer k such that k  |O|, we
denote with subsetk (O) the set of all the sets of cardinality k of axioms of O.
Definition 3. Let OS be a satisfiable LS-ontology and let OS be the set of predicate
and constant symbols occurring in OS. Let Uk = {Oj
i  globalApx (Oi,LT ),
such that Oi  subsetk (OS)}. An LT -ontology OT over OS is a k-approximation in
LT of OS if both the following statements hold:

| Oj

i
?

?

?
i Uk M od(Oj
Oj


 there is no LT -ontology O

i )  M od(OT );

over OS such that

M od(OT ).
?

?

?
iUk M od(Oj
Oj

i )  M od(O) 

The following theorem follows from Theorem 1 and provides a constructive condi-

tion for the k-approximation.
Theorem 2. Let OS be a satisfiable LS-ontology and let OS be the set of predicate and constant symbols occurring in OS. An LT -ontology OT over OS is a k-
approximation in LT of OS if and only if:

(i) ES(OT ,LT )  ES(
(ii) there is no LT -ontology O

over OS such that ES(OT ,LT )  ES(O

Oisubsetk (OS ) ES(Oi,LT ),LT );

,LT ) 
?

?

?
ES(

Oisubsetk (OS ) ES(Oi,LT ),LT ).
?

?

?
if

i )  M od(OT )

Proof. (sketch) The proof can be easily adapted from the proof of Theorem 1 by

observing that in order to prove the theorem one has to show that:
and only if ES(OT ,LT ) 
i Uk M od(Oj
(a)
Oj

Oisubsetk (OS) ES(Oi,LT ),LT );
ES(

i ) 
(b) and that there is no LT -ontology O
iUk M od(Oj
Oj
M od(O)  M od(OT ) if and only if there is no LT -ontology O
over OS such that
ES(OT ,LT )  ES(O
We note that in the case in which k = |OS|, the k-approximation actually coincides
with the GSA. At the other end of the spectrum, we have the case in which k = 1.
Here we are treating each axiom  in the original ontology in isolation, i.e., we are
considering ontologies formed by a single axiom . We refer to this approximation as
local semantic approximation (LSA).
?

?

?
,LT )  ES(
Oisubsetk (OS) ES(Oi,LT ),LT ).

over OS such that

We conclude this section with an example highlighting the difference between the

GSA and the LSA.
Example 1. Consider the following OWL 2 ontology O.

O = { A  B  C B  D A  R.D

B  C  F C  D R.D  E }.

The following ontology is a GSA in OWL 2 QL of O.
OGSA = { A  D B  D A  R

A  E C  D D  F }.

A  R.D

Indeed, it is possible to show that, according to Theorem 1, each axiom entailed by
OGSA is also entailed by O, and that it is impossible to build an OWL 2 QL ontology O
such that ES(OGSA, OW L 2 QL)  ES(O
, OW L 2 QL)  ES(O, OW L 2 QL).
Computing the LSA in OWL 2 QL of O, i.e., its 1-approximation in OWL 2 QL, we

obtain the following ontology.

OLSA = { B  D A  R

C  D A  R.D }.

It is easy to see that M od(O)  M od(OGSA)  M od(OLSA), which means that
the ontology OGSA approximates O better than OLSA. This expected result is a consequence of the fact that reasoning over each single axiom in O in isolation does not
allow for the extraction all the OWL 2 QL consequences of O.
Moreover, from Lemma 2, it follows that every O  globalApx (OS, OW L 2 QL)

is logically equivalent to OGSA.

4 Approximation in OWL 2 QL

In this section we deal with the problem of approximating ontologies in OWL 2 with
ontologies in OWL 2 QL.

Based on the characteristics of the OWL 2 QL language, we can give the following

theorem.

M. Console et al.

Algorithm 1. computeKApx(O, k)
Input: a satisfiable OWL 2 ontology O, a positive integer k such that k  |O|
Output: an OWL 2 QL ontology OApx
beginOApx  ;

foreach ontology Oi  subsetk (OS)
return OApx;

OApx  OApx  ES(Oi, OW L 2 QL);

end

Theorem 3. Let OS be a satisfiable OWL 2 ontology. Then the OWL 2 QL ontology

Oisubsetk (OS) ES(Oi, OW L 2 QL) is the k-approximation in OWL 2 QL of OS.
Proof. (sketch) To prove the claim, we observe that Lemma 1 holds for OWL 2 QL
ontologies, and this guarantees that for every OWL 2 ontology OS, there exists at least
one OWL 2 QL ontology which is its GSA, i.e., globalApx (OS, OW L 2 QL) = .
Moreover, we have that since OWL 2 QL is closed, for Lemma 2, all ontologies in
ES(OS, OW L 2 QL) are pairwise logically equivalent. Another consequence of the
fact that OWL 2 QL is closed is that, whichever language the original ontology OS is
expressed in, ES(OS, OW L 2 QL) is an OWL 2 QL ontology. Furthermore, given a set
of OWL 2 QL ontologies, the union of these ontologies is still an OWL 2 QL ontology.
From these observations, it is easy to see that, given an OWL 2 ontology OS and an

integer k  |OS|, the set
Oisubsetk (OS) ES(Oi, OW L 2 QL) satisfies conditions (i)
and (ii) of Theorem 2. Hence, we have the claim.
Notably, we observe that for k = |OS| the k-approximation OT in OWL 2 QL of OS
is unique and coincides with its entailment set in OWL 2 QL. This means that OT is
also the approximation in OWL 2 QL of OS according to the notion of approximation
presented in [14]. Therefore, all the properties that hold for the semantics in [14] also
hold for the GSA. In particular, the evaluation of a conjunctive query q without nondistinguished variables over OS coincides with the evaluation of q over OT (Theorem
5 in [14]).
From Theorem 3, one can easily come up with Algorithm 1 for computing the k-
approximation of an LS-ontology OS in OWL 2 QL. The algorithm first computes
every subset with size k of the original ontology OS. Then, it computes the ontology
which is the result of the k-approximation in OWL 2 QL of the ontology in input as the
union of the entailment sets with respect to OWL 2 QL of each such subset. A naive
algorithm for computing the entailment set with respect to OWL 2 QL can be easily
obtained from the one given in [14] for DL-Lite languages. We can summarize it as
follows. Let O be an ontology and let O be the set of predicate and constant symbols
occurring in O. The algorithm first computes the set  of axioms in OW L 2 QL which
can be built over O, and then, for each axiom    such that O |= , adds  to the
set ES(O, OW L 2 QL). In practice, to check if O |=  one can use an OWL 2 reasoner.
?

?

?
Since each invocation of the OWL 2 reasoner is N2EXPTIME, the computation of the
entailment set can be very costly [4].

A more efficient technique for its computation is given in [8], where the idea is to
limit the number of invocations to the OWL 2 reasoner by exploiting the knowledge
acquired through a preliminary exploration of the ontology. To understand the basic
idea behind this technique, consider, for example, an ontology O that entails the inclusions A1  A2 and P1  P2, where A1 and A2 are concepts and P1 and P2 are
roles. Exploiting these inclusions we can deduce the hierarchical structure of the general concepts that can be built on these four predicates. For instance, we know that
P2.A2  P2, that P2.A1  P2.A2, that P1.A1  P2.A1, and so on. To obtain
the entailed inclusion axioms, we begin by invoking the OWL 2 reasoner, asking for
the children of the general concepts which are in the highest position in the hierarchy.
So we first compute the subsumees of P2 through the OWL 2 reasoner. If there are
none, we avoid invoking the reasoner asking for the subsumees of P2.A2 and so on.
Regarding the entailed disjointness axioms, we follow the same approach but starting
from the lowest positions in the hierarchy.

The following theorem establishes correctness and termination of algorithm

computeKApx.
Theorem 4. Let OS be a satisfiable OWL 2 ontology. computeKApx(OS, k) terminates and computes the k-approximation in OWL 2 QL of OS.
Proof. (sketch) Termination of computeKApx(OS, k) directly follows from the
fact that OS is a finite set of axioms and that, for each Oi  subsetk (OS),
ES(Oi, OW L 2 QL) can be computed in finite time. The correctness of the algorithm
directly follows from Theorem 3.

5 Experiments

In this section we present the experimental tests that we have performed for the approximation of a suite of OWL 2 ontologies into OWL 2 QL through the two notions of
approximation we have introduced earlier.
We notice that by choosing a value for k different from |OS|, the computation of
the entailment set becomes easier. However, observing Algorithm 1, the number of
times that this step must be repeated can grow very quickly. In fact, the number of
sets of axioms in subsetk (OS) is equal to the binomial coefficient of |OS| over k, and
therefore for large ontologies this number can easily become enormous, and this can be
in practice a critical obstacle in the computation of the k-approximation.
For this reason, in these experiments we have focused on comparing the GSA (k-
approximation with k = |OS|) to the LSA (k-approximation with k = 1), and we
reserve the study of efficient techniques for k-approximation with 1 < k < |OS| for
future works. Furthermore, to provide a standard baseline against which to compare the
results of the GSA and LSA, we have compared both our approaches with a syntactic
sound approximation approach, consisting in first normalizing the axioms in the ontology and then eliminating the ones that are not syntactically compliant with OWL 2 QL.
We will refer to this approach as SYNT.

M. Console et al.

Table 1. Characteristics of the ontologies used in the GSA and LSA tests

Fungal anatomy

Pmr
Ma

Translational medicine

General formal Ontology

Biopax

Image
Protein
Pizza

Cog analysis
Time event

Spatial

Basic vertebrate anatomy

Ontology
Homology

Cabro

Vertebrate skeletal anatomy

Expressiveness Axioms Concepts Roles Attributes OWL2 QL Axioms

ALCHIQ

ALEI+

ALE +

SHIF(D)
ALCROIQ(D)
ALEHI+
ALCRIF(D)
SHIN (D)
ALER+
ALCF(D)

Ontology of physics for biology ALCHIQ(D)
ALE +
SHOIN (D)

ALCHQ(D)

ALE +
ALE +
ALCHIN
ALE +
ALER+
?

?

?
ALE +
?

?

?
Mosquito anatomy
Idomal namespace

Mosquito insecticide resistance

Galen-A
Ni gene

Fyp

Cognitive atlas

Genomic

Protein Modification

Po anatomy

Plant trait

Dolce

Neomark

Pato

Ont. of athletic events

Lipid
Plant
?

?

?
119560
?

?

?
ALEHIF+

ALEH+
ALEHIF+
?

?

?
ALE +

Fly anatomy
EL-Galen
Galen full
Pr reasoned

Snomed fragment for FMA

Gene

FMA OBO
?

?

?
119558

The suite of ontologies used during testing contains 41 ontologies and was assembled from the Bioportal ontology repository2. The ontologies that compose this suite
were selected to test the scalability of our approaches both to larger ontologies and to
ontologies formulated in more expressive languages. In Table 1 we present the most
relevant metrics of these ontologies.

All tests were performed on a DELL Latitude E6320 notebook with Intel Core
i7-2640M 2.8Ghz CPU and 4GB of RAM, running Microsoft Windows 7 Premium operating system, and Java 1.6 with 2GB of heap space. Timeout was set

2 http://bioportal.bioontology.org/
?

?

?
at eight hours, and execution was aborted if the maximum available memory was
exhausted. The tool used in the experiments and the suite of ontologies are available at http://diag.uniroma1.it/ mora/ontology approximation/
iswc2014/.

As mentioned in Section 4, the computation of the entailment set involves the use of
an external OWL 2 reasoner. Therefore, the performance and the results of the computed
approximations are greatly effected by the choice of the reasoner. For our tests, we have
used the Pellet3 OWL 2 reasoner (version v.2.3.0.6).

In Table 2 we present the results of the evaluation. An analysis of these results leads

to the following observations.

Firstly, we were able to compute the GSA for 26 out of the 41 tested ontologies. For
the remaining fifteen, this was not possible, either due to the size of the ontology, in
terms of the number of its axioms, e.g., the FMA 2.0 or Gene ontologies, which have
more than seventy thousand and one hundred thousand axioms, respectively, or due to
its high expressivity, e.g., the Dolce ontology or the General formal ontology. The LSA
approach is instead always feasible, it is quicker than the GSA approach for all but one
of the tested ontologies, and it is overall very fast: no ontology took more than 250
seconds to approximate with the LSA.

Secondly, it is interesting to observe the comparison between the quality of the approximation that one can obtain through the LSA with respect to that obtained through
the GSA. This relationship answers the question of whether the ontology obtained
through the LSA (the LSA ontology) is able to capture a significant portion of the
one obtained through the GSA (the GSA ontology). Our tests in fact confirm that
this is the case: out of the 26 ontologies for which we were able to compute the GSA,
in only four cases the LSA ontology entails less than 60 percent of the axioms of the
GSA ontology, while in twenty cases it entails more than 90 percent of them. The average percentage of axioms in the original ontologies entailed by the GSA ontologies
is roughly 80 percent, and of the axioms of the GSA ontologies entailed by the LSA
ontologies is roughly 87 percent.

Furthermore, the LSA provides a good approximation even for those ontologies for
which the GSA is not computable. In fact, Table 3 shows the percentage of axioms of the
original ontology that are entailed by the LSA ontology. Out of the twelve ontologies
for which we were able to obtain this value (the remaining three ontologies caused
an out of memory error), only in three cases it was less than 60 percent, while in
four cases it was higher than 80 percent. These results are particularly interesting with
respect to those ontologies for which the GSA approach is not feasible due to their
complexity, as is the case for example for the Dolce ontology, for Galen-A, and for the
Ontology of physics for biology. Indeed, even though these ontologies are expressed in
highly expressive DL languages, the structure of the axioms that compose them is such
that reasoning on each of them in isolation does not lead to much worse approximation
results than reasoning on the ontology as a whole: for the nine smallest ontologies in
Table 3, for which the GSA fails not because of the size of the ontology, the average
percentage is 68.6.

3 http://clarkparsia.com/pellet/

M. Console et al.

Table 2. Results of the GSA, LSA, and SYNT. The values represent, from left to right, the number
of axioms in the ontology obtained through the GSA, the percentage of axioms of the original
ontology that are entailed by the ontology obtained through the GSA, the number of axioms
in the ontology obtained through the LSA, the percentage of axioms of the ontology obtained
through the GSA that are entailed by the LSA, the number of axioms in the ontology obtained by
the SYNT, the percentage of axioms of the ontology obtained through the GSA that are entailed
by the ontology obtained through the SYNT, the percentage of axioms of the ontology obtained
through the LSA that are entailed by the ontology obtained through the SYNT, and finally the
GSA time and the LSA time (both in seconds).

axioms

GSA entails
original (%)

Ontology

Homology

Cabro

Basic vertebrate anatomy

Fungal anatomy

Pmr
Ma

General formal ontology

Cog analysis
Time event

Spatial

Translational medicine

Biopax

Vertebrate skeletal anatomy

Image
Protein
Pizza
?

?

?


104407
?

?

?
2182057
?

?

?


Ont. of physics for biology 1789821

Plant trait

Dolce



Ontology of athletic events

Neomark

Pato

Protein Modification

Po anatomy

Lipid
Plant

Mosquito anatomy
Idomal namespace

Cognitive atlas

Genomic


?

?

?


Mosquito insecticide res.

Galen-A
Ni gene

Fyp

Fly anatomy
EL-Galen
Galen full
Pr reasoned

Snomed fragment for FMA

Gene

FMA OBO





460849








axioms
?

?

?
140629

143306

LSA entails
GSA (%)
?

?

?

?

?

?

?

?

?







?

?

?













axioms
?

?

?
101860

119558

SYNT entails

SYNT entails

GSA (%)

LSA (%)

time (s)

time (s)
?

?

?

?

?

?

?

?

?







?

?

?












?

?

?

?

?

?

?

?

?







?

?

?












?

?

?

?

?

?

?

?

?







?

?

?













Finally, both the GSA and LSA compare favorably against the syntactic sound approximation approach. In fact, the average percentage of axioms in the LSA and GSA
ontologies that are entailed by the ontologies obtained through the SYNT approach are
respectively roughly 90 percent and 72 percent. While the latter result is to be expected,
the former is quite significant, even more so when one considers that the LSA is very
?

?

?
Table 3. LSA results for ontologies for which the GSA is not computable

Ontology

General formal ontology

Biopax
Protein

Ontology of physics for biology

Dolce

Neomark
Genomic
Galen-A

Fyp

EL-Galen
Galen full
Pr reasoned

SNOMED fragment for FMA

Gene

FMA OBO

Original
axioms
?

?

?
119560

axioms
?

?

?
140629

143306

LSA entails
original (%)

time (s)
?

?

?




?

?

?
fast. Indeed, a gain of 10 percent of axiom entailments by the LSA with respect to
the SYNT in the case of large ontologies such as Galen and Snomed translates to tens
of thousands of preserved axioms in very little computation time.

In conclusion, the results gathered from these tests corroborate the usefulness of both
the global semantic approximation and the local semantic approximation approaches.
The former provides a maximal sound approximation in the target language of the original approach, and is in practice computable in a reasonable amount of time for the
majority of the tested ontologies. The latter instead represents a less optimal but still
very effective solution for those ontologies for which the GSA approach goes beyond
the capabilities of the currently-available ontology reasoners.

6 Conclusions

In this paper we have addressed the problem of ontology approximation in Description
Logics and OWL, presenting (i) a parameterized semantics for computing sound approximations of ontologies, (ii) algorithms for the computation of approximations (the
GSA and the LSA) of OWL 2 ontologies in OWL 2 QL, and (iii) an extensive experimental evaluation of the above techniques, which empirically proves the validity of our
approach.

The present work can be extended in several ways. First, while we have focused on
sound approximations, it would be interesting to also consider complete approximations of ontologies. Also, we would like to study the development of techniques for
k-approximations different from GSA and LSA, i.e., for k such that 1 < k < |OS|, as
well as to analyze the possibility of integrating ontology module extraction techniques
in our approach. Then, this work has not addressed the case when there are differences

M. Console et al.

in the semantic assumptions between the source and the target ontology languages. For
instance, differently from OWL 2 and its profiles, some DLs (e.g., DL-LiteA [15]) adopt
the Unique Name Assumption (UNA). This makes our approach not directly applica-
ble, for instance, if we consider OWL 2 as the source language and DL-LiteA as the
target language. The reason is that the UNA implies some axioms (inequalities between
individuals) that can be expressed in OWL 2 but cannot be expressed in DL-LiteA. We
aim at extending our approach to deal with the presence of such semantic discrepancies
in the ontology languages. Finally, we are very interested in generalizing our approach
to a full-fledged ontology-based data access scenario [15], in which data sources are
connected through declarative mappings to the ontology. In that context, it might be
interesting to use both the ontology and the mappings in the target OBDA specification
to approximate a given ontology in the source OBDA specification.

Acknowledgments. This research has been partially supported by the EU under FP7
project Optique (grant n. FP7-318338).
