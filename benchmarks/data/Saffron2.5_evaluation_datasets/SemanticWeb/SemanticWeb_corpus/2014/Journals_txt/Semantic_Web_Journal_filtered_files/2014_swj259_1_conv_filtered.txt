Semantic Web 0 (2013) 10
IOS Press

Using the relation ontology Metarel for
modelling Linked Data as multi-digraphs

Editor(s): Mikel Egana Aranguren, Technical University of Madrid (UPM), Spain; Michel Dumontier, Carleton University, Ottawa, Canada;
Jesualdo Tomas Fernandez Breis, University of Murcia (UM), Spain
Solicited review(s): Carlos Aranda, Pontificia Universidad Catolica de Chile; Matt-Mouley Bouamrane, University of Glasgow, Scotland; one
anonymous reviewer

Ward Blonde a,c,, Erick Antezana b, Vladimir Mironov b, Stefan Schulz c, Martin Kuiper b and
Bernard De Baets a
a Department of Mathematical Modelling, Statistics and Bioinformatics, Ghent University, Coupure links 653,
9000 Gent, Belgium, Europe.
E-mail: {ward.blonde,bernard.debaets}@ugent.be
b Department of Biology, Norwegian University of Science and Technology, Realfagbygget DU1-111,
Hgskoleringen 5, Trondheim, Norway, Europe.
E-mail: {erick.antezana,vladimir.mironov,martin.kuiper}@bio.ntnu.no
c Institute for Medical Informatics, Statistics and Documentation, Medical University of Graz, Auenbruggerplatz 2,
8036 Graz, Austria, Europe.
E-mail: {ward.blonde,stefan.schulz}@medunigraz.at

Abstract.

The Semantic Web standards OWL and RDF are often used to represent biomedical information as Linked Data, however, the
OWL/RDF syntax, which combines both, was never optimised for querying. By combining two formal paradigms for modelling
Linked Data, namely multi-digraphs and Description Logic, many precise terms for relations have emerged that are defined in
the Metarel relation ontology. They are especially useful in Linked Data and RDF knowledge bases that 1) rely on SPARQL
querying and 2) require semantic support for chains of relations.

Metarel-described multi-digraphs were used for knowledge integration and reasoning in three RDF knowledge bases in the
domain of genome biology: BioGateway, Cell Cycle Ontology and Gene Expression Knowledge Base. These knowledge bases
integrate both data, like Kegg, and ontologies, like Gene Ontology, in the same RDF graphs. Their libraries with biomedically
relevant SPARQL queries show the practical benefits of this semantic paradigm. In addition to the management of RDF stores,
this paper describes how Metarel can be used for remodelling Linked Data as SPARQL-friendly and semantically rich multi-
digraphs. Metarel can be downloaded from http://www.semantic-systems-biology.org/metarel.

Keywords: Linked Data, RDF, relations, Description Logics, SPARQL, rules

1. Introduction

Hosted by the Semantic Systems Biology (SSB)
platform, Metarel is an ontology for class-level relations on the Semantic Web, that matured over the

*Corresponding author. E-mail: ward.blonde@ugent.be.

last five years [1]. Its support for direct relations between classes has successfully complemented the Web
Ontology Language (OWL) [2], which uses relations
between individuals at the level of its syntactic representation in the Resource Description Framework
(RDF) [3].

Three integrated RDF knowledge bases, BioGateway [4], Cell Cycle Ontology (CCO) [5] and Gene

1570-0844/13/$27.50 c 2013  IOS Press and the authors. All rights reserved

W. Blonde et al. / Metarel in multi-digraphs

SPARQL. Linked Data graphs are called browsable if
the lookup of any IRI node retrieves a recursive description of the node. This is done by returning all
the triples in which the node is a subject or an object
and by describing also all the blank nodes that are re-
trieved. An update language called SPARQL 1.1 Update (SPARUL) [11], that can be used for modifying
Linked Data through inferences from queries, is in the
process of becoming a W3C recommendation.

Expression Knowledge Base (GeXKB) [6], have used
Metarel for integration and reasoning. Their resulting RDF model is a multi-digraph (MDG), which
has appeared to be very manageable and intuitive for
writing and executing biomedically relevant queries
in the SPARQL Protocol and RDF Query Language
(SPARQL) [7,8].

The rising popularity of the Linked Data paradigm
urges to broaden the scope of Metarel as a bridge between semantically rich knowledge in OWL, and semantically poor triples that were published in various
manners on the Web. Two new use cases are described
in this paper: the translation of the OWL/RDF syntax towards MDGs and the semantic enrichment of
Linked Data through annotations with Metarels vo-
cabulary. They complement the use case of managing
RDF stores through Metarel-described MDGs.

After an overview of the scientific background of
Linked Data and the Semantic Web in Section 2,
Metarels three use cases are explained in Section 3.
The theoretical basis of Metarel, including its relation
to the currently standardised vocabulary of the Semantic Web, is given in Section 4. After that, in Section 5,
the practical work of integrating resources from the genomic domain as Linked Data through Metarel is sum-
marised. Sections 6 and 7 contain a discussion and the
conclusions.

2. Background

After the World Wide Web and the Semantic Web,
the paradigm of Linked Data is the latest concept created by Tim Berners-Lee [9,10]. By the use of the HyperText Transfer Protocol (HTTP), Internationalised
Resource Identifiers (IRI) and RDF, Linked Data is a
further extension of the Semantic Web. The emphasis
on browsability and HTTP links is an attempt to upgrade the Semantic Web from a series of separate RDF
boxes to a cross-linked web that integrates with any
type of data.

RDF and its standard query language SPARQL are
central technologies for the Semantic Web that connect
IRIs in a set of triples. Linked Data is data that is formatted in RDF for which the IRIs are dereferenceable
through HTTP by web browsers and query services,
which means that a representation can be retrieved for
the IRI. Hence, Linked Data effectively integrates two
types of resource retrieval: the first over the classical untyped web links through HTTP, and the second
over typed links in the form of RDF triples through

The advantages of Linked Data for the management
of large amounts of information and data have been acknowledged by the biomedical community [12]. The
Health Care and Life Science Interest Group of the
W3C (HCLS IG) has facilitated the research on RDF
and Linked Data through the development and integration of large-scale biomedical knowledge bases that
are accessible through SPARQL endpoints. Such web
resources, like Bio2RDF [13], OBO Foundry ontologies [14], DrugBank [15] and many others, are often interconnected and constitute a substantial part of
W3Cs Linking Open Data (LOD) project cloud [16].
SPARQL, the query language of RDF, can be used to
query links within the LOD cloud, thereby integrating
answers from large biomedical resources with more
popular resources like DBpedia [17] and W3C wordnet [18].

Many of the largest biomedical data resources are
to be found in the genomic domain. UniProtKB [19]
is a high-quality database about proteins, which is
maintained by the UniProt Consortium. Their system for uniquely identifying types of proteins and
genes through IRIs has been the basis for more specialised data resources. The Gene Ontology Annotations (GOA) [20] connect UniProt-identified protein
types to classes of functions, biological processes and
cellular locations in the Gene Ontology (GO) [21].
Enzymatic pathways, which elucidate how series of
protein interactions are coordinated into the realisation of biological functions, are described in the Kyoto
Encyclopedia of Genes and Genomes (KEGG) [22].
Some databases annotate genomic knowledge from
well-studied organisms, like NCBI Gene ID [23], or
from literature, like IntAct [24] for molecular interac-
tions. All these large genomic databases are part of the
LOD cloud.

GO is one of the few OBO ontologies that was
accepted by OBOs review panel. Also the PRotein
Ontology (PRO) [25], Chemical entities of biological entities (CHEBI) [26] as well as three other on-
tologies, have reached this status. Many other interesting ontologies, both OBO and OWL formatted, are

OBO candidates, like the Sequence Ontology [27] or
OBO ontologies of interest, like the NCBI organismal classification (NCBITaxon) [23]. All the OBO
ontologies together form a great body of knowledge
and can be used for annotating biomedical data. The
OBO Foundry provides a uniform method for identifying ontology classes through IRIs that start with
http://purl.obolibrary.org/obo, an OWL/RDF export
and a SPARQL endpoint in the Ontobee [28] system.
The semantics of links, as (chains of) RDF triples
between RDF resources, can be described with the
language constructs of W3Cs standards OWL and
RDF(S) [29]. According to their language specifications two different semantic contexts are distinguished.
The first is Direct Semantics (DS) [30], which suits
Description Logic (DL) [31] based dialects of OWL,
such as OWL DL and OWL EL [32]. This semantics subscribes to the set-theoretical DL semantics and
assumes a strict distinction between individuals (also
called instances) and classes, (e.g. those referred to by
proper names in natural language, such as Belgium,
the year 2012, Tim Berners-Lee) and classes (referred
to by general nouns like country, year, human). The
second semantic context, called RDF-Based Semantics (RBS) [33], supports Linked Data that is represented in OWL Full or RDF(S). Here the same symbol may be used for denoting an individual or class (or
it is just left open whether something is an individual
or a class). On the one hand this allows more flexibil-
ity, whereas it precludes, on the other hand, a solid semantic foundation such as given by DL, and a clear
ontological commitment as advocated by the Applied
Ontology community. As a consequence, the truth
value of logical expressions in OWL Full or RDF(S)
cannot be unambiguously decided. To cite an exam-
ple: The OWL full expression Mitochondrium hasPart
Membrane does not make clear whether all mitochondria have membranes, or whether all membranes are
parts of mitochondria. In contrast, the OWL DL axiom
Mitochondrium subClassOf hasPart some Membrane
clearly states that each individual mitochondrium has
some membrane as part.

DLs are decidable fragments of First Order Logic
(FOL) and have become increasingly adopted as the
foundation of life sciences and healthcare related ontologies [34]. Terminologies like SNOMED CT [35],
OpenGalen [36] and many OBO ontologies have been
engineered or converted into OWL dialects. There has
been a clear preference for the less expressive variant
OWL EL due to its polynomial time reasoning performance [37,38].

An important restriction of Direct Semantics is its
dependence on description logics syntax and seman-
tics, which allows only individual-level relations (so
called object properties), apart from the operators SubClassOf and EquivalentTo, which relate two classes,
and Type, which relates an individual with a class it
is member of. To use an object property in a DL axiom at the class level requires the use of quantifiers
like some and all. In spite of its Direct Semantics,
relations between classes in OWL profiles are indirect
when expressed in the standard Semantic Web syntax
OWL/RDF. The relation ontology Metarel, which is
described in this paper provides a means to clarify the
meaning of direct relation arcs in the form of a single
RDF triple. In the above example this means that Mitochondrium hasPart Membrane is further specified as
hasPart_all-some, in order to express the same meaning as in Mitochondrium subClassOf hasPart some
Membrane.

The description of links in graphs was explored in
so-called semantic networks in the decades preceding the development of DL in the nineties [39,40]. Semantic problems with such networks were discussed
by Woods in [41]. The research on semantic networks
has evolved into two directions; the axiom-based DL
on the one hand and the graph-based RDF on the other.
RDF(S) provides some notions derived from DL, like
rdfs:Class, rdf:type, rdfs:domain and rdfs:range, for
annotating RDF data. However, it is not based on individuals but on rdf:resource, which may be both individual or class. Because of this, it has not overcome
the problems reported by Woods. Metarel is similar
in scope as RDF(S), but seeks maximal compatibility
with DL.

3. Metarels use cases

There are several ways in which Metarel can facilitate the publishing of Linked Data, and the management of Linked Data through SPARQL and SPARUL.
Three use cases are explained here:

 the representation of SPARQL-friendly knowledge expressions that are translations of the standard OWL/RDF syntax,

 the semantic enrichment of existing Linked Data,

and

 the semi-automated management of RDF stores

that use Metarel.

W. Blonde et al. / Metarel in multi-digraphs

format is therefore very desirable. The MDG format
proposed here is very suited for querying in SPARQL,
because it prefers direct links instead of chains of
blank nodes. Only a few triples are required in a query
pattern about terms T1 and T2. The following query
pattern describes the relation between T1 and T2 in
both directions:

{T1 ?p1 T2.
?p1 rdfs:label ?pred1.}

{T2 ?p2 T1.
?p2 rdfs:label ?pred2.}

Generic queries of this type over graphs in the
OWL/RDF syntax cannot be created with SPARQL.
For example, classes that are defined through a set
of many different necessary and sufficient conditions,
will have a long chain of blank nodes between the
node for the class and nodes for terms that appear
in the conditions (see Figure 1). This chain has often
side chains of different types and sizes for each condi-
tion. Such RDF-expressed class definitions correspond
to many different patterns of chains, a bit similar to
molecules in organic chemistry. The exploration of the
chains should therefore happen through programming
languages like Java in combination with SPARQL.

Whereas browsing OWL/RDF could still be achieved with a combination of SPARQL and Java, normal
querying through SPARQL cannot be done. This can
be understood by considering the two models represented in Figure 1 in more detail. Imagine a health care
specialist who wants to investigate the occurrence of
injuries on the right side of the body, versus the left
side. Her count for the number of right-sided injuries
could happen on the MDG model with a SPARQL pattern of about three lines:

?Injury rdf:type Injury.
?Injury findingSite ?AnatomicalStructure.
?AnatomicalStructure laterality Right.

The same approach cannot be followed in OWL/
RDF, because there are no direct links between anatomical structures and their laterality, nor any fixed chains
of links with a standardised structure.

3.2. Use case 2: semantically enriching Linked Data

Metarel can be used to annotate Linked Data that
does not distinguish individuals from classes in a consequent manner. First of all, Metarel assumes the presence of an MDG, as depicted in Figure 2. Consider

Fig. 1. A fully defined class in SNOMED CT, expressed in
OWL/RDF (top) and an MDG (bottom). Standardised IRIs that are
used represent label (a), equivalent class (b), intersection of (c), first
(d), rest (e), nil (f), on property (g) and some values from (h). Empty
boxes are numerical identifiers. The dashed IRIs in the MDG model
can be described with Metarel in order to facilitate support for inferences from inverses, transitivity, chains and super-relations.

3.1. Use case 1: converting OWL/RDF to MDGs

The OWL/RDF syntax was engineered as a communication format that represents OWL faithfully and that
can easily be serialised. However, its modelling constructs make it hard, both programmatically and com-
putationally, to query OWL/RDF through SPARQL.
This is where Metarel comes to aid. Through extra language constructs in Metarel, large parts of OWL can be
extracted into an MDG, which is a SPARQL-friendly
section of RDF that is also suited for visualisation [42].
SPARQL has become one of the most used technologies of the Semantic Web. A SPARQL-friendly

12345IRIBlank IDLabel2351466OWL/RDFMDG1) Structure of right upper lobe bronchial lumen2) Structure of bronchus of right upper lobe3) Structure of right bronchial lumen4) Laterality5) Right6) Is aDL1 EquivalentTo ( 2 and 3 and ( 4 some 5 ))IRIcaaaaaaaaaaaabdddeeefghW. Blonde et al. / Metarel in multi-digraphs

ontologies, and it can be the basis for a further conversion to OWL. However, relations that are used between classes or between individuals and classes, like
pref3:inspecBy, do not have a straightforward interpretation with respect to algebraic properties like transitivity and inverse. A clearer interpretation exists for
relations between individuals, on the basis of which
most relations between classes can be defined [14].
Only pref1:worksIn and pref3:isLocationOf can be interpreted as such in Figure 2. For pref3:inspecBy a new
IRI is needed, for example in an IRI space pref4. The
Metarel vocabulary can be used to connect the original
IRI with the new IRI:

pref4:inspecBy rdf:type owl:ObjectProperty.
pref3:inspecBy mrl:isBasedOn pref4:inspecBy.
pref3:inspecBy rdf:type mrl:AllSomeRelation.

When the graph http://crawled_LOD_MDG is
used as a merger to contain all these triples, a valid representation in DL-based OWL dialects can easily be
created with SPARUL rules. The following rule translates arcs of relations that hold from an individual to a
class, into OWL DL:

PREFIX rdf:<http://www.w3.org/1999/02/22-rdf-
syntax-ns#>
PREFIX owl:<http://www.w3.org/2002/07/owl#>
PREFIX mrl:<http://www.metarel.org/>
INSERT INTO GRAPH <http://crawled_OWL_DL> {

?individual ?obj_property _:bnode.
_:bnode

rdf:type

?class.

WHERE {

GRAPH <http://crawled_LOD_MDG> {

?individual ?pred
?individual rdf:type
?class
rdf:type
rdf:type mrl:AllSomeRelation.
?pred
?pred
mrl:isBasedOn ?obj_property.

?class.
owl:Thing.
owl:Class.

Whereas the LOD_MDG graph in this example can
be used for SPARQL querying, the OWL_DL graph
can be used for consistency checking and fully automated reasoning.

3.3. Use case 3: managing RDF stores

Metarel has an RDF format, metarel.rdf, which can
be loaded into RDF stores. The whole architecture for
the usage of Metarel can be seen in Figure 3. Relations
that are used in Linked Data have to be annotated with
terms in Metarel, in order to enable the inferencing of

Fig. 2. An MDG about people, cities and UK institutes. Three of the
four nodes represent individuals. UK hospital, however, refers to the
class of all the hospitals in the UK.

three IRI spaces prefixed by pref1 to pref3. The following three triples form a little part of the MDG in
this figure:

pref1:John pref1:worksIn pref2:London.
pref3:UKHosp pref3:inspecBy pref1:John.
pref2:London pref3:isLocationOf pref3:UKGov.

The IRIs used in the triples are supposed to have la-
bels, in triples like pref1:John rdfs:label John. The
combination of the MDG with the labels is highly
browsable with SPARQL. When this Linked Data was
crawled and assembled in an RDF graph called http:
//crawled_LOD_MDG, then the following simple
SPARQL query, containing only two triple patterns, is
all that is required for describing a node as specified
by Berners-Lee in [10]:

PREFIX pref1:<http://people_space1/>
SELECT *
WHERE {

GRAPH <http://crawled_LOD_MDG> {

{pref1:John ?p1 ?o.}

{?s ?p2 pref1:John.}

Such MDGs may not always have a strong ontological commitment. In order to improve the semantics of
the MDG for consistency checking and reasoning, every IRI for a node should be defined as either an individual or a class:

pref1:John
rdf:type owl:Thing.
pref2:London rdf:type owl:Thing.
pref3:UKGov
rdf:type owl:Thing.
pref3:UKHosp rdf:type owl:Class.

The distinction between individuals and classes is
important information for the creation of consistent

UK governmentUK hospitalLondonJohnis inspected byis location ofworks in6

W. Blonde et al. / Metarel in multi-digraphs

(S,P,O) M:
R:
L:
M:
R:
O:
A:
M:
A:

(S,O)

relation arc
triple
typed link
relation
predicate
property
relation
relation couple
couple

Fig. 3. By merging Linked Data, metarel.rdf and annotated relations
in a single RDF graph, SPARUL rules can infer direct links as RDF
triples that can be queried through SPARQL.

new, direct links that support SPARQL queries. The
rules for creating such inferences have to be specified
in SPARUL, which works natively on RDF.

The set of triples in metarel.rdf plus a set of
triples that are annotations of relations with IRIs in
metarel.rdf, is called a Metarel ontology. The SPARUL
update queries will operate over a merger of the
Metarel ontology and MDG-modelled Linked Data.
SPARQL queries that support a user interface will typically only address the latter.

4. Metarels theoretical basis

4.1. MDGs in RDF

Metarel supports the RDF model in the form of
multi-digraphs (MDG), where the terms are represented as nodes and the predicates between the terms
as arcs (See Figure 2). Digraphs are graphs with directed arcs, whereas MDGs also allow multiple arcs
between two nodes. MDGs have similarities with RDF
graphs, such as nodes and arrows between the nodes,
however, for the ensuing explanation, it is important
to know that every MDG can be expressed as an RDF
graph, but not every RDF graph is an MDG. Indeed, an
RDF predicate can also be used as a subject or an object in an RDF triple, which is not allowed in MDGs.
The vocabulary in Metarel is based on relations,
which have relation couples as instances. A relation
couple is something that holds between two terms.
Each instantiation of a relation by a relation couple
is represented by a directed relation arc. In RDF as
MDG, every relation arc corresponds to an RDF triple
by using the two terms of the relation couple as sub-

Table 1

The terminology in Metarel (M) compared with terminology in RDF
(R), OWL (O), Linked Data (L) and algebra (A). They are compared
on the basis of a generic Subject-Predicate-Object structure, as used
in RDF.

ject and object in the triple, and by using the relation as predicate. Different RDF triples with different predicates for describing the same relation couple are allowed, as long as each separated triple provides a meaningful description by itself. Typed links,
as defined by Berners-Lee in [9], correspond to relation arcs.

Relation in Metarel corresponds to predicate in
RDF, property in OWL Full, and simply relation in
algebra. In the context of Metarel, relations are binary.
An overview of the terminology can be seen in Table 1.
The formal aspects of RDF and MDGs can be com-

bined with Metarel as follows:

 RDF: Graphs consist of a set of triples that give
an order to three RDF terms. The first, called subject term, can be an IRI or a blank node, the sec-
ond, called predicate term, is an IRI and the third,
called object term, is an IRI, a blank node or a
literal. The rdfs-label, e.g. nucleus, of a subject
term as IRI, e.g. obo:GO_0005634, is expressed
as a literal in the object term that is combined
through rdfs:label in the predicate term.

 MDG: Graphs are labelled, directed multigraphs
that allow multiple self-loops. Both the nodes
and arcs carry labels, but the label for each node
should be unique within the MDG.

Metarel describes M-graphs, which are Linked

Data graphs that have the following properties:

 M has the structure of an MDG. The MDG nodes
are ontology terms that are either individuals or
classes, and they correspond to subject and object
nodes of RDF triples. IRIs appear as MDG labels.
 An RDF triple in M corresponds to a directed arc

in the MDG.

Metarel ontologyMDG for ontologies, knowledge and datadescribesRDF graphLinked DataSPARULrulesmanagesSPARQLinterfacequeriesW. Blonde et al. / Metarel in multi-digraphs

 A relation couple between two ontology terms S
and O is unique and directed. The terms are related by exactly one multi-arc which is the aggregation of all directed arcs that have S as subject
node and O as object node in M. This multi-arc
provides a description of the relation couple.

 Relation couples that bear semantic and/or logical
similarities instantiate the same relation. E.g. the
relation couple between Johns heart and Johns
body shares the property of parthood with the relation couple between Austria and Europe. Both
instantiate a relation is part of , which is identified by an IRI.

 The typing of a relation couple between S and
O, by a relation R, is expressed by a single RDF
triple S R O in M. If S and/or O is a class,
then the logical meaning of R may express a FOL
quantification over arcs between instances of S
and O. The classification of relations by their
quantification method happens in a Metarel ontology outside M.

 Relations have properties like reflexivity, transi-
tivity, symmetry, super-, sub-, chained and inverse
relations. These properties are also described in a
Metarel ontology outside M.

4.2. Metarels ontological vocabulary

For describing M-graphs, Metarel uses an ontological vocabulary that has the above-described notion
of relation as a basis. This vocabulary can be used
in inference systems and rule systems, like a library
of SPARUL queries, which manipulate M-graphs.
Some language constructs that equate with constructs
in OWL are not recommended to be used. They are introduced for clarity and for comparison with OWL in
the next section.

The aim of Metarels ontological vocabulary is to
describe relations, like all are part of some, is integral part of, some are located in some or contains at all times. This description provides a semantics for the relations in terms of which other relations
can be inferred from them. Broken down to logics
they often summarize complex expressions. This approach is especially useful for relations that are based
on individual-relations, which are well understood in
DL and/or FOL.

A relation between individuals is called individual-
relation, a relation between classes class relation, a
relation between an individual and a class individual-

class relation and a relation between a class and an
individual class-individual relation.

An individual-based relation is a relation that may
relate classes, but that adheres strictly to first-order
quantifications based on individual-relations between
instances of these classes. A subclass of individualbased relation is all-some class relation. When e.g.
the IRI rel_ont:class_level_part_of is described in a
Metarel ontology as an all-some class relation, and it
is used in the RDF triple nucleus is part of cell, then
it means that every nucleus is part of some cell. Some
other examples (subclasses) of individual-based relations are all-all class relation (e.g. ABC computer all
are connected to all CDE printer), some-some class
relation (e.g. bird some eat some fish) and tight
class relation (e.g. heart is integral part of body,
meaning that every heart is part of some body and every body has some heart as part).

The IRI rel_ont:class_level_part_of is a class reis based on an individual-relation, e.g.
lation that
obo:is_part_of. The first one inherits certain algebraic
properties, like transitivity, from the latter. This connection is a metarelation called is based on, between
the class relation and the individual-relation, which enables to propagate algebraic properties like transitivity
to the class level. Every relation can also be annotated
explicitly, using multiple inheritance, as a transitive
relation (e.g. is part of ), a symmetric relation (e.g.
is connected to) or a reflexive relation (e.g. is same
as).

Class relations that are based on a pair of inverse
individual-relations can be related with is reciprocal
of. On the class level, assuming all-some semantics,
is part of is not the inverse of has part. For example,
beard is part of face may hold in the sense all beards
are part of some face, but face has part beard does
not hold in the sense all faces have part some beard.
In order to support relations between IRIs that are
not clearly either individuals or classes, some more
generic relations like subject-object relation and
subject-data relation, are also defined as direct subclasses of relation, which is the most generic class
in this hierarchy. At this level relations can also be annotated as being temporally qualified. In this way relation arcs can be created that hold at all times during
the existence of the subject, or only at some time (e.g.
biological cell all at all times contains some water
molecule). The addition of more specialised types of
relations in Metarel are under consideration, especially
with respect to probabilistic associations and default
interpretations. This would enable to express that hu-

W. Blonde et al. / Metarel in multi-digraphs

Fig. 4. Two class relation arcs is directly preceded by and is preceded by can be directly inferred on the class level from the metarelations between class relations in the Metarel ontology.

Fig. 5. Relation types in Metarel provide unambiguous meaning for
language constructs that have a different logical meaning in the RD-
F-based Semantics and the Direct Semantics of OWL.

man has part hair, considering that some people are
in fact bald.

Metarel also contains semantic rules, which are generalised from the individual-level to the class level.
Figure 4 shows an example of a chain rule for relations
at the class level. Blank nodes, like Axiom123 in the
figure, remain outside the MDG model. They can be
exploited for creating inferences with SPARUL.

4.3. Metarel in the Semantic Web

The IRIs used for Metarel are human readable,
which is important for the maintenance of a library
of SPARUL rules. For example, the term relation is
identified as follows:

http://www.metarel.org/Relation

Such IRIs will be abbreviated here through the
prefix mrl, like mrl:Relation. The IRIs, which are
provided by metarel.rdf, can be used for annotating relations in MDG-modelled Linked Data. Also
newly created relations, that are necessary for fitting in the MDG, are described by annotations with
Metarel terms. This happens through the predicates
rdf:type, rdfs:subPropertyOf and through the metarelation mrl:isBasedOn.

In order to avoid the usage of Metarel vocabulary that is already standardised by OWL, RDF or
RDF(S), equivalence statements are created in meta-
rel.rdf with owl:sameAs, as shown in Table 2. How-
ever, the correspondence of the terminology in Metarel

with the terminology in OWL and RDF is a complicated issue, because the two semantic contexts that exist for Semantic Web resources, DS and RBS, provide different meanings for the same language con-
structs, like owl:ObjectProperty and  ironically  even
owl:sameAs.

The hierarchy underneath the term relation in
Metarel is shown in Figure 5. Equations of terms in
Metarel with terms in OWL and RDF are indicated,
both for RBS and DS. The figure shows that Metarel
has more affiliation with RBS, since four terms equate
with RBS interpreted language constructs and only one
for DS. The terminology of Metarel has the virtue of
distinguishing the RBS and DS meanings more pre-
cisely, because class relations are object properties in
the RBS sense, but not in the sense of DS. Instead, object properties in DS equate to individual-relations in
Metarel.

By this equation of the vocabulary, an inference
system like SPARUL can convert some sections of
DS-interpreted OWL profiles bidirectionally to Linked
Data in the form of an MDG, described by Metarel.
RBS-interpreted resources can be semantically enhanced through Metarel.

5. Practical implementations

Metarel currently supports three integrated RDF
knowledge bases: BioGateway [4], CCO [5] and
GeXKB [6], whose original RDF data files were
created with ONTO-PERL [43]. All of them have

Relation type axiomis ahas startis end ofis directly preceded byhas second relation typehas first relation typehas resulting relation typeMetarel ontologyMDG ontologyis  preceded bysubPropertyOfbreast-feedingchildbirthpregnancyhas startis end ofis directly preceded byis preceded byAxiom 123relation = rdf:Property (RBS)owl:ObjectProperty (RBS)class relationall-some class relationinvertible individual-based class relationall-all class relationsome-some class relationtight class relationindividual-based relationindividual-relation = owl:ObjectProperty (DS)individual-class relationreflexive relation = owl:ReflexiveProperty (RBS)symmetric relation = owl:SymmetricProperty (RBS)transitive relation = owl:TransitiveProperty (RBS)class-individual relationW. Blonde et al. / Metarel in multi-digraphs

mrl:SubjectDataRelation
mrl:SubjectObjectRelation
mrl:Relation
mrl:ReflexiveRelation
mrl:SymmetricRelation
mrl:TransitiveRelation

owl:DatatypeProperty
owl:ObjectProperty
rdf:Property
owl:ReflexiveProperty
owl:SymmetricProperty
owl:TransitiveProperty

Table 2

IRIs in metarel.rdf
(left column) that are explicitly equalised
to RBS-interpreted IRIs in OWL and RDF (right column) with
owl:sameAs statements.

SPARQL endpoints for querying, and both CCO and
GeXKB are available in BioPortal [44], which interlinks them with other resources that are published as
Linked Data. These three knowledge bases all contain ontologies and data that is annotated with ontologies in the domain of genomics. The IRI-identified
data entities derive from the databases Gene Ontology Annotations, Kegg pathways, IntAct, UniProtKB
and NCBI Gene ID, as well as from the output of TurboOrtho [45], a multi-threaded C++ implementation of
the OrthoMCL algorithm [46]. All these data entities
were interpreted as classes of proteins, genes, biological pathways, protein interactions or protein orthologs.
They were annotated to the Gene Ontology, the Molecular Interactions ontology and NCBI Taxonomy, either
as subclasses or as having a relation to a class in these
ontologies.

BioGateway has also included all the OBO candidate ontologies that are accessible via the OBO
Foundry, both OBO formatted and OWL ontologies,
as well as the Basic Formal Ontology (BFO) [47]. The
RDF stores for CCO and GeXKB use the Semanticscience Integrated Ontology (http://code.google.com/
p/semanticscience/wiki/SIO) as upper level ontology.
The IRI-identified entities in all these resources,
both ontologies and data, represent classes exclusively.
The database approach of managing large numbers of
genomic data entities as instances of a few classes,
leads to class descriptions that are semantically flawed
and it cannot be used in the presence of OBO ontolo-
gies. Therefore the three knowledge bases BioGate-
way, CCO and GeXKB, have all used the same set
of 365 Metarel-annotated relations, which were extracted from the OBO formatted ontologies into a file
called Biorel.owl [7]. Biorel contains only individualrelations and could be validated as OWL 2 DL. A
merger of Biorel and Metarel, called BioMetarel, contains the necessary class relations and propagates the
semantic properties from the individual-level to the
class level. The addition of BioMetarel as a separate

RDF graph in the stores, has enabled to execution of
a set of iterated SPARUL queries, thereby creating
relational closures for reflexivity, transitivity, priority
over subsumption, super-relations and mixed relation
chains. This is where Metarel interlinks datasets that
use the same entities through a massive inference of
relation arcs (the typed links).

Examples of relation arcs are protein A interacts
with protein B, participates in process C, is located
in location D, and process C negatively regulates process E. Useful and responsive queries require the precomputed inference that protein A regulates process
E, which is achieved through a combination of the
SPARUL closures. The results of the reasoning were
positively evaluated in the three RDF stores, which
all have libraries of biomedically relevant SPARQL
queries. 158 million inferred relation arcs were created in BioGateway, the largest of the stores. Queries
can now optionally be launched over the inferred RDF
graphs, resulting in more complete answers.

6. Discussion

The combination of Ontology and DL has brought
an end to the problems that were reported by Woods
in [41] some decades ago. A universally accepted distinction of terms in either individual or class, as provided by Ontology, combined with decidable logics
like OWL DL, has solved the most common ambiguities in semantic networks. OBO ontologies, expressed
in the RDF syntax of OWL DL, form a good example of a modern semantic network with a clear inter-
pretation. Metarel supports this solution by exploring
to what extent multi-digraphs, free of blank nodes, can
be built on top of these foundations.

Many semantic formalisms have used graphical elements like dots, boxes, ovals and arcs, including Topic
Maps [48], Conceptual Graphs [49] and Peirces existential graphs [50]. Two problems remain unsolved
for most of these systems. Firstly, they do not distinguish identifiers from labels properly, since IRIs were
not standardised until recently. Secondly, they have attempted to provide a semantic foundation to the graphs
by translations to undecidable logics, FOL in partic-
ular. That undecidable logics cannot support a wellunderstood reasoning process has remained an uninteresting theoretical result until real-life applications
were developed in computer science two decades ago.
In the Semantic Web, RDF and OWL Full can be used
to model FOL syntactically.

W. Blonde et al. / Metarel in multi-digraphs

High expressivity
Defined classes
Decidable reasoning
SPARQL friendliness
Low number of IRIs

OWL DL

Table 3

RDF(S) Metarel

MDGs annotated with Metarel, compared to RDF-expressed OWL
DL and RDF(S). Advantages are checked for each of the three RDF
models. MDGs are less expressive and require more IRIs for distinguishing many types of relations, but they can be queried more
easily.

Metarels usage of relations between classes was inspired by OBOs Relationship Ontology [51], which
asserts relations between classes with tags and natural language definitions. Some relations, like is integral part of, had to be reengineered to the individualrelation is part of for translation to OWL DL. Metarel
can annotate it as a tight class relation, whereas most
others translate to all-some relations.

Although Metarel provides a vocabulary for relations in an ontological framework, it is not a logic. The
vocabulary can be used as a basis to specify logics, like
e.g. the Class-Relationship Logic of Nilsson [52]).

Metarel attempts to annotate MDGs in such a way
that it can be translated to DL. A faithful translation
in the other direction, from an expressive DL into an
MDG, however, is not possible. Metarel currently does
not bring the expressivity of MDGs beyond primitive
classes and quantifiers like all and some. Decidable
reasoning about logic constructs like number restric-
tion, domain and ranges, but most importantly, fullydefined classes, can only be handled in DLs.

An interesting approach for querying DL in OWL/
RDF is delivered by SPARQL-DL [53]. However, this
extension of SPARQL may require a greater knowledge of Description Logic and it has not specified a
SPARQL-friendly RDF format for storing - and thus
querying - reasoned inferences. Metarel could be complementary to such a technology for querying highly
expressive DL through SPARQL.

There is another improvement that modern semantic
technologies have achieved in comparison with the semantic networks from the past. More performant computers and the virtually unlimited number of identifiers that can be created through IRIs have facilitated
more detailed distinctions between closely related enti-
ties. Modern semantics distinguish e.g. Tim, the length
of Tim, a measurement of the length of Tim, the numerical value of the length of Tim and the measure-

ment unit that suits the numerical value of the length of
Tim. Metarel benefits from this evolution by proposing
closely related distinctions between relations, like is
part of as individual-relation, as all-some relation and
as a relation that holds at some time. These relations
need a different IRI and need to be treated differently
during management and reasoning processes. This increased number of IRIs implies a clear drawback compared to the architecture that was engineered for both
OWL and RDF(S). Metarel has its value as a combination of decidability and SPARQL-friendly querying.
The advantages and drawbacks of Metarel are compared with RDF(S) and RDF-expressed OWL DL in
Table 3.

Linked Data relies on RDF graphs that are brows-
able. For being browsable, query systems should be
able to follow chains of links over blank nodes au-
tomatically. It is not clear how this can be achieved
with SPARQL alone, without the need for a procedural language like Java. Since RDF/MDG does not contain any blank nodes, it is highly browsable and it can
be queried by SPARQL without any additions. Metarel
works very well together with this recent evolution in
the Semantic Web.

7. Conclusion

The use of MDGs, annotated with terms about relations in Metarel, enables a bridge between graphbased representations like RDF and DL-based representations like OWL. It complements the standard
OWL/RDF syntax, which contains all the information encoded by OWL, by providing an RDF format
that is less expressive, but highly queryable through
SPARQL. This makes MDGs very suited to express
Linked Data. Browsing to related concepts can happen with a single, generic SPARQL query instead of
requiring procedural techniques to browse over chains
of blank nodes.

Metarel can also facilitate interesting solutions for
materialising logical inferences from OWL as RDF
triples. Its use of primitive classes and existential restriction is not very expressive, but provides decidable
reasoning unlike RDF(S), OWL Full and other formalisms that use the RDF-Based Semantics. Transitiv-
ity, super-properties and chain rules may often be sufficient to support semantic queries within large biomedical datasets like Gene Ontology Annotations. The success of this approach was proven on different inte