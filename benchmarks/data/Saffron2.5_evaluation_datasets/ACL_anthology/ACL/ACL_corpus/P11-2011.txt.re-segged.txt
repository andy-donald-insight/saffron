Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics:shortpapers , pages 58?64,
Portland , Oregon , June 1924, 2011. c?2011 Association for Computational Linguistics
Tier-based Strictly Local Constraints for Phonology
Jeffrey Heinz , Chetan Rawal and Herbert G . Tanner
University of Delaware
heinz,rawal,btanner@udel.edu
Abstract
Beginning with Goldsmith (1976), the phonological tier has a long history in phonological theory to describe nonlocal phenomena . This paper defines a class of formal languages , the Tier-based Strictly Local languages , which begin to describe such phenomena . Then this class is located within the Subregular Hierarchy ( McNaughton and Papert , 1971). It is found that these languages contain the Strictly Local languages , are star-free , are incomparable with other known sub-star-free classes , and have other interesting properties.
1 Introduction
The phonological tier is a level of representation where not all speech sounds are present . For example , the vowel tier of the Finnish word pa?iva?a ? ? Hello ? is simply the vowels in order without the consonants : a?ia?a?.
Tiers were originally introduced to describe tone systems in languages ( Goldsmith , 1976), and subsequently many variants of the theory were proposed ( Clements , 1976; Vergnaud , 1977; McCarthy , 1979; Poser , 1982; Prince , 1984; Mester , 1988; Odden , 1994; Archangeli and Pulleyblank , 1994; Clements and Hume , 1995). Although these theories differ in their details , they each adopt the premise that representational levels exist which exclude certain speech sounds.
Computational work exists which incorporates and formalizes phonological tiers ( Kornai , 1994; Bird , 1995; Eisner , 1997). There are also learning algorithms which employ them ( Hayes and Wilson , 2008; Goldsmith and Riggle , to appear ). However , there is no work of which the authors are aware that addresses the expressivity or properties of tier-based patterns in terms of formal language theory.
This paper begins to fill this gap by defining Tier-Based Strictly Local ( TSL ) languages , which generalize the Strictly Local languages ( McNaughton and Papert , 1971). It is shown that TSL languages are necessarily star-free , but are incomparable with other known sub-star-free classes , and that natural groups of languages within the class are string extension learnable ( Heinz , 2010b ; Kasprzik and Ko?tzing , 2010). Implications and open questions for learnability and Optimality Theory are also discussed.
Section 2 reviews notation and key concepts . Section 3 reviews major subregular classes and their relationships . Section 4 defines the TSL languages , relates them to known subregular classes , and section 5 discusses the results . Section 6 concludes.
2 Preliminaries
We assume familiarity with set notation . A finite alphabet is denoted ?. Let ? n , ?? n , ?? denote all sequences over this alphabet of length n , of length less than or equal to n , and of any finite length , respectively . The empty string is denoted ? and | w | denotes the length of word w . For all strings w and all nonempty strings u , | w|u denotes the number of occurrences of u in w . For instance , | aaaa|aa = 3. A language L is a subset of ??. The concatenation of two languages L1L2 = { uv : u ? L1 and v ? L2}.
For L ? ?? and ? ? ?, we often write L ? instead of L{?}.
We define generalized regular expressions ( GREs ) recursively . GREs include ?, ? and each letter of ?. If R and S are GREs then RS , R + S , R ? S , R , and R ? are also GREs.
The language of a GRE is defined as follows.
58
L (?) = ?. For all ? ? ? ? {?}, L (?) = {?}.
If R and S are regular expressions then
L(RS ) = L(R)L(S ), L(R + S ) = L(R ) ? L(S ), and L(R ? S ) = L(R ) ? L(S ). Also,
L(R ) = ?? ? L(R ) and L(R ?) = L(R)?.
For example , the GRE ? denotes the language ??.
A language is regular iff there is a GRE defining it . A language is star-free iff there is a GRE defining it which contains no instances of the Kleene star (*). It is well known that the star-free languages (1) are a proper subset of the regular languages , (2) are closed under Boolean operations , and (3) have multiple characterizations , including logical and algebraic ones ( McNaughton and Papert , 1971).
String u is a factor of string w iff ? x , y ? ?? such that w = xuy . If also | u | = k then u is a k-factor of w . For example , ab is a 2-factor of aaabbb.
The function Fk maps words to the set of k-factors within them.
Fk(w ) = { u : u is a k-factor of w}
For example , F2(abc ) = { ab , bc}.
The domain Fk is generalized to languages L ? ?? in the usual way : Fk(L ) = ? w?LFk(w ). We also consider the function which counts k-factors up to some threshold t.
Fk,t(w ) = {( u , n ) : u is a k-factor of w and n = | w|u iff | w|u < t else n = t } For example F2,3(aaaaab ) = {( aa , 3), ( ab , 1)}.
A string u = ?1?2 ? ? ? ? k is a subsequence of a string w iff w ? ???1???2?? ? ? ???? k ??. Since | u | = k we also say u is a k-subsequence of w . For example , ab is a 2-subsequence of caccccccccbcc.
By definition ? is a subsequence of every string in ??. The function P?k maps words to the set of subsequences up to length k found in those words.
P?k(w ) = { u ? ?? k : u is a subsequence of w } For example P?2(abc ) = {?, a , b , c , ab , ac , bc }. As above , the domains of Fk,t and P?k are extended to languages in the usual way.
3 Subregular Hierarchies
Several important subregular classes of languages have been identified and their inclusion relationships have been established ( McNaughton and Papert , 1971; Simon , 1975; Rogers and Pullum , to
Regular Star-Free
TSL
LTT LT
PT
SL
SP
Figure 1: Proper inclusion relationships among subregular language classes ( indicated from left to right ). This paper establishes the TSL class and its place in the figure.
appear ; Rogers et al , 2010). Figure 1 summarizes those earlier results as well as the ones made in this paper . This section defines the Strictly Local ( SL ), Locally Threshold Testable ( LTT ) and Piecewise Testable ( PT ) classes . The Locally Testable ( LT ) languages and the Strictly Piecewise ( SP ) languages are discussed by Rogers and Pullum ( to appear ) and Rogers et al (2010), respectively . Readers are referred to these papers for additional details on all of these classes . The Tier-based Strictly Local ( TSL ) class is defined in Section 4.
Definition 1 A language L is Strictly k-Local iff there exists a finite set S ? Fk(o??n ) such that
L = { w ? ?? : Fk(own ) ? S}
The symbols o and n invoke left and right word boundaries , respectively . A language is said to be Strictly Local iff there is some k for which it is Strictly k-Local . For example , let ? = { a , b , c } and L = aa?(b + c ). Then L is Strictly 2-Local because for S = { oa , ab , ac , aa , bn , cn } and every w ? L , every 2-factor of own belongs to S.
The elements of S can be thought of as the permissible k-factors and the elements in Fk(o??n )? S are the forbidden k-factors . For example , bb and ob are forbidden 2-factors for L = aa?(b + c).
More generally , any SL language L excludes exactly those words with any forbidden factors ; i.e ., L is the intersection of the complements of sets defined to be those words which contain a forbidden factor . Note the set of forbidden factors is finite . This provides another characterization of SL languages ( given below in Theorem 1).
Formally , let the container of w ? o??n be C(w ) = { u ? ?? : w is a factor of o un } For example , C(oa ) = a ??. Then , by the immediately preceding argument , Theorem 1 is proven.
59
Theorem 1 Consider any Strictly k-Local language L . Then there exists a finite set of forbidden factors S ? ? Fk(o??n ) such that L = ? w?S ? C(w).
Definition 2 A language L is Locally t-Threshold k-Testable iff ? t , k ? N such that ? w , v ? ??, if
Fk,t(w ) = Fk,t(v ) then w ? L ? v ? L.
A language is Locally Threshold Testable iff there is some k and t for which it is Locally t-Threshold k-Testable.
Definition 3 A language L is Piecewise k-Testable iff ? k ? N such that ? w , v ? ??, if P?k(w ) =
P?k(v ) then w ? L ? v ? L.
A language is Piecewise Testable iff there is some k for which it is Piecewise k-Testable.
4 Tier-based Strictly Local Languages
This section provides the main results of this paper.
4.1 Definition
The definition of Tier-based Strictly Local languages is similar to the one for SL languages with the exception that forbidden k-factors only apply to elements on a tier T ? ?, all other symbols are ignored . In order to define the TSL languages , it is necessary to introduce an ? erasing ? function ( sometimes called string projection ), which erases symbols not on the tier.
ET (?1 ? ? ? ? n ) = u1 ? ? ? un where ui = ? i iff ? i ? T and ui = ? otherwise.
For example , if ? = { a , b , c } and T = { b , c } then ET ( aabaaacaaabaa ) = bcb . A string u = ?1 ? ? ? ? n ? oT ? n is a factor on tier T of a string w iff u is a factor of ET ( w).
Then the TSL languages are defined as follows.
Definition 4 A language L is Strictly k-Local on Tier T iff there exists a tier T ? ? and finite set
S ? Fk(oT ? n ) such that
L = { w ? ?? : Fk(oET ( w)n ) ? S}
Again , S represents the permissible k-factors on the tier T , and elements in Fk(oT ? n ) ? S represent the forbidden k-factors on tier T . A language L is a Tier-based Strictly Local iff it is Strictly k-Local on
Tier T for some T ? ? and k ? N.
To illustrate , let ? = { a , b , c }, T = { b , c }, and S = { ob,oc , bc , cb , bn , cn }. Elements of S are the permissible k-factors on tier T . Elements of F2(oT ? n ) ? S = { bb , cc } are the forbidden factors on tier T . The language this describe includes words like aabaaacaaabaa , but excludes words like aabaaabaaacaa since bb is a forbidden 2-factor on tier T . This example captures the nature of long-distance dissimilation patterns found in phonology ( Suzuki , 1998; Frisch et al , 2004; Heinz , 2010a).
Let LD stand for this particular dissimilatory language.
Like SL languages , TSL languages can also be characterized in terms of the forbidden factors . Let the tier-based container of w ? oT ? n be CT ( w ) = { u ? ?? : w is a factor on tier T of o un } For example , CT ( ob ) = (? ? T )? b ??. In general if w = ?1 ? ? ? ? n ? T ? then CT ( w ) = ???1(? ? T )??2(? ? T )? ? ? ? (? ? T )?? n ?? In the case where w begins ( ends ) with a word boundary symbol then the first ( last ) ?? in the previous GRE must be replaced with (? ? T )?.
Theorem 2 For any L ? TSL , let T , k , S be the tier , length , and permissible factors , respectively , and S ? the forbidden factors . Then L = ? w?S ? CT ( w).
Proof The structure of the proof is identical to the one for Theorem 1.  4.2 Relations to other subregular classes This section establishes that TSL languages properly include SL languages and are properly star-free.
Theorem 3 shows SL languages are necessarily TSL.
Theorems 4 and 5 show that TSL languages are not necessarily LTT nor PT , but Theorem 6 shows that TSL languages are necessarily star-free.
Theorem 3 SL languages are TSL.
Proof Inclusion follows immediately from the definitions by setting the tier T = ?.  The fact that TSL languages properly include SL ones follows from the next theorem.
Theorem 4 TSL languages are not LTT.
60
Proof It is sufficient to provide an example of a TSL language which is not LTT . Consider any threshold t and length k . Consider the TSL language LD discussed in Section 4.1, and consider the words w = akbakbakcak and v = akbakcakbak
Clearly w 6? LD and v ? LD . However,
Fk(own ) = Fk(ovn ); i.e ., they have the same k-factors . In fact for any factor f ? Fk(own ), it is the case that | w|f = | v|f . Therefore
Fk,t(own ) = Fk,t(ovn ). If LD were LTT , it would follow by definition that either both w , v ? LD or neither w , v belong to LD , which is clearly false . Hence LD 6? LTT . 
Theorem 5 TSL languages are not PT.
Proof As above , it is sufficient to provide an example of a TSL language which is not PT . Consider any length k and the language LD . Let w = ak(bakbakcakcak)k and v = ak(bakcakbakcak)k Clearly w 6? LD and v ? LD . But observe that P?k(w ) = P?k(v ). Hence , even though the two words have exactly the same k-subsequences ( for any k ), both words are not in LD . It follows that LD does not belong to PT .  Although TSL languages are neither LTT nor PT , Theorem 6 establishes that they are star-free.
Theorem 6 TSL languages are star-free.
Proof Consider any language L which is Strictly k-Local on Tier T for some T ? ? and k ? N . By Theorem 2, there exists a finite set S ? ? Fk(oT ? n ) such that L = ? w?S ? CT ( w ). Since the star-free languages are closed under finite intersection and complement , it is sufficient to show that CT ( w ) is star-free for all w ? oT ? n.
First consider any w = ?1 ? ? ? ? n ? T ?. Since (?? T )? = ?? T ?? and ?? = ?, the set CT ( w ) can be written as ? ? T ? ?1 ? T ? ?2 ? T ? ? ? ? ? n ? This is a regular expression without the Kleene-star.
In the cases where w begins ( ends ) with a word boundary symbol , the first ( last ) ? in the GRE above should be replaced with ? T ?. Since every CT ( w ) can be expressed as a GRE without the Kleene-star , every TSL language is star-free .  Together Theorems 14 establish that TSL languages generalize the SL languages in a different way than the LT and LTT languages do ( Figure 1).
4.3 Other Properties
There are two other properties of TSL languages worth mentioning . First , TSL languages are closed under suffix and prefix . This follows immediately because no word w of any TSL language contains any forbidden factors on the tier and so neither does any prefix or suffix of w . SL and SP languages?but not LT or PT ones?also have this property , which has interesting algebraic consequences ( Fu et al , 2011).
Next , consider that the choice of T ? ? and k ? N define systematic classes of languages which are TSL . Let LT,k denote such a class . It follows immediately that LT,k is a string extension class ( Heinz , 2010b ). A string extension class is one which can be defined by a function f whose domain is ?? and whose codomain is the set of all finite subsets of some set A . A grammar G is a particular finite subset of A and the language of the grammar is all words which f maps to a subset of G . For LT,k , the grammar can be thought of as the set of permissible factors on tier T and the function is w 7? Fk(oET ( w)n ). In other words , every word is mapped to the set of k-factors present on tier T . ( So here the codomain?the possible grammars?is the powerset of Fk(oT ? n ).) String extension classes have quite a bit of structure , which faciliates learning ( Heinz , 2010b ; Kasprzik and Ko?tzing , 2010). They are closed under intersection , and have a lattice structure under the partial ordering given by the inclusion relation (?). Additionally , these classes are identifiable in the limit from positive data ( Gold , 1967) by an incremental learner with many desirable properties.
In the case just mentioned , the tier is known in advance . Learners which identify in the limit a class of TSL languages with an unknown tier but known k exist in principle ( since such a class is of finite size ), but it is unknown whether any such learner is 5 Discussion Having established the main results , this section discusses some implications for phonology in general , Optimality Theory in particular , and future research.
There are three classes of phonotactic constraints in phonology : local segmental patterns , long-distance segmental patterns , and stress patterns ( Heinz , 2007). Local segmental patterns are SL ( Heinz , 2010a ). Long-distance segmental phonotactic patterns are those derived from processes of consonant harmony and disharmony and vowel harmony . Below we show each of these patterns belong to TSL . For exposition , assume ?={ l,r,i,o?,u,o}.
Phonotactic patterns derived from attested long-distance consonantal assimilation patterns ( Rose and Walker , 2004; Hansson , 2001) are SP ; on the other hand , phonotactic patterns derived from attested long-distance consonantal dissimilation patterns ( Suzuki , 1998) are not ( Heinz , 2010a ). However , both belong to TSL . Assimilation is obtained by forbidding disagreeing factors on the tier . For example , forbidding lr and rl on the liquid tier T = { l , r } yields only words which do not contain both [ l ] and [ r ]. Dissimilation is obtained by forbidding agreeing factors on the tier ; e.g . forbidding ll and rr on the liquid tier yields a language of the same character as LD.
The phonological literature distinguishes three kinds of vowel harmony patterns : those without neutral vowels , those with opaque vowels and those with transparent vowels ( Bakovic ?, 2000; Nevins , 2010). Formally , vowel harmony patterns without neutral vowels are the same as assimilatory consonant harmony . For example , a case of back harmony can be described by forbidding disagreeing factors { iu , io , o?u , o?o , ui , uo ?, oi , oo ?} on the vowel tier T ={ i,o?,u,o }. If a vowel is opaque , it does not harmonize but begins its own harmony domain . For example if [ i ] is opaque , this can be described by forbidding factors { iu , io o?u , o?o , uo ?, oo ?} on the vowel tier . Thus words like lulolilo ? are acceptable because oi is a permissible factor . If a vowel is transparent , it neither harmonizes nor begins its own harmony domain . For example if [ i ] is transparent ( as in Finnish ), this can be described by removing it from the tier ; i.e . by forbidding factors { o?u , o?o , uo ?, oo ?} on tier T ={ o?,u,o }. Thus words like lulolilu are acceptable since [ i ] is not on the relevant tier . The reasonable hypothesis which follows from this discussion is that all humanly possible segmental phonotactic patterns are TSL ( since TSL contains SL).
Additionally , the fact that LT,k is closed under intersection has interesting consequences for Optimality Theory ( OT ) ( Prince and Smolensky , 2004). The intersection of two languages drawn from the same string extension class is only as expensive as the intersection of finite sets ( Heinz , 2010b ). It is known that the generation problem in OT is NP-hard ( Eisner , 1997; Idsardi , 2006) and that the NP-hardness is due to the problem of intersecting arbitrarily many arbitrary regular sets ( Heinz et al , 2009). It is unknown whether intersecting arbitrarily many TSL sets is expensive , but the results here suggest that it may only be the intersections across distinct LT,k classes that are problematic . In this way , this work suggests a way to factor OT constraints characterizable as TSL languages in a manner originally suggested by Eisner (1997).
Future work includes determining automata-theoretic characterizations of TSL languages and procedures for deciding whether a regular set belongs to TSL , and if so , for what T and k . Also , the erasing function may be used to generalize other subregular classes.
6 Conclusion
The TSL languages generalize the SL languages and have wide application within phonology . Even though virtually all segmental phonotactic constraints present in the phonologies of the world?s languages , both local and nonlocal , fall into this class , it is striking how highly restricted ( sub-star-free ) and well-structured the TSL languages are.
Acknowledgements
We thank the anonymous reviewers for carefully checking the proofs and for their constructive criticism . We also thank the participants in the Fall 2010 Formal Models in Phonology seminar at the University of Delaware for valuable discussion , especially Jie Fu . This research is supported by grant #1035577 from the National Science Foundation.
62
References
Diana Archangeli and Douglas Pulleyblank . 1994.
Grounded Phonology . Cambridge , MA : MIT Press.
Eric Bakovic ?. 2000. Harmony , Dominance and Control.
Ph.D . thesis , Rutgers University.
Steven Bird . 1995. Computational Phonology : A Constraint-Based Approach . Cambridge University
Press , Cambridge.
G . N . Clements and Elizabeth Hume . 1995. The internal organization of speech sounds . In John A . Goldsmith , editor , The Handbook of Phonological Theory , pages 245?306. Blackwell , Cambridge , Mass ., and Oxford,
UK.
G . N . Clements . 1976. Neutral vowels in hungarian vowel harmony : An autosegmental interpretation . In David Nash Judy Kegl and Annie Zaenen , editors , North Eastern Linguistic Society ( NELS ) 7, pages 49? 64, Amherst , MA . University of Massachusetts , Graduate Linguistic Student Association.
Jason Eisner . 1997. Efficient generation in primitive Optimality Theory . In Proceedings of the 35th Annual ACL and 8th EACL , pages 313?320, Madrid , July.
S . Frisch , J . Pierrehumbert , and M . Broe . 2004. Similarity avoidance and the OCP . Natural Language and
Linguistic Theory , 22:179?228.
Jie Fu , Jeffrey Heinz , and Herbert Tanner . 2011. An algebraic characterization of strictly piecewise languages . In The 8th Annual Conference on Theory and Applications of Models of Computation , volume 6648 of Lecture Notes in Computer Science . Springer-
Verlag.
E.M . Gold . 1967. Language identification in the limit.
Information and Control , 10:447?474.
John Goldsmith and Jason Riggle . to appear . Information theoretic approaches to phonological structure : the case of Finnish vowel harmony . Natural Language and Linguistic Theory.
John Goldsmith . 1976. Autosegmental Phonology.
Ph.D . thesis , MIT , Cambridge , Mass . Published by
Garland Press , New York , 1979.
Gunnar Hansson . 2001. Theoretical and typological issues in consonant harmony . Ph.D . thesis , University of California , Berkeley.
Bruce Hayes and Colin Wilson . 2008. A maximum entropy model of phonotactics and phonotactic learning.
Linguistic Inquiry , 39:379?440.
Jeffrey Heinz , Gregory Kobele , and Jason Riggle . 2009.
Evaluating the complexity of Optimality Theory . Linguistic Inquiry , 40(2):277?288.
Jeffrey Heinz . 2007. The Inductive Learning of Phonotactic Patterns . Ph.D . thesis , University of California,
Los Angeles.
Jeffrey Heinz . 2010a . Learning long-distance phonotactics . Linguistic Inquiry , 41(4):623?661.
Jeffrey Heinz . 2010b . String extension learning . In Proceedings of the 48th Annual Meeting of the Association for Computational Linguistics , pages 897?906, Uppsala , Sweden , July . Association for Computational
Linguistics.
William Idsardi . 2006. A simple proof that Optimality Theory is computationally intractable . Linguistic Inquiry , 37(2):271?275.
Anna Kasprzik and Timo Ko?tzing . 2010. String extension learning using lattices . In Henning Fernau Adrian-Horia Dediu and Carlos Mart??n-Vide , editors , Proceedings of the 4th International Conference on Language and Automata Theory and Applications ( LATA 2010), volume 6031 of Lecture Notes in Computer Science , pages 380?391, Trier , Germany.
Springer.
Andras Kornai . 1994. Formal Phonology . Garland , New
York.
John J . McCarthy . 1979. Formal problems in Semitic phonology and morphology . Ph.D . thesis , MIT . Published by Garland Press , New York , 1985.
Robert McNaughton and Seymour Papert . 1971.
Counter-Free Automata . MIT Press.
Armin Mester . 1988. Studies in Tier Structure . New
York : Garland Publishing , Inc.
Andrew Nevins . 2010. Locality in Vowel Harmony . The
MIT Press , Cambridge , MA.
David Odden . 1994. Adjacency parameters in phonology . Language , 70(2):289?330.
William Poser . 1982. Phonological representation and action-at-a-distance . In H . van der Hulst and N.R.
Smith , editors , The Structure of Phonological Representations , pages 121?158. Dordrecht : Foris.
Alan Prince and Paul Smolensky . 2004. Optimality Theory : Constraint Interaction in Generative Grammar.
Blackwell Publishing.
Alan Prince . 1984. Phonology with tiers . In Mark Aronoff and Richard T . Oehrle , editors , Language Sound Structure , pages 234?244. MIT Press , Cambridge , Mass.
James Rogers and Geoffrey Pullum . to appear . Aural pattern recognition experiments and the subregular hierarchy . Journal of Logic , Language and Information.
James Rogers , Jeffrey Heinz , Gil Bailey , Matt Edlefsen , Molly Visscher , David Wellcome , and Sean Wibel.
2010. On languages piecewise testable in the strict sense . In Christian Ebert , Gerhard Ja?ger , and Jens Michaelis , editors , The Mathematics of Language , volume 6149 of Lecture Notes in Artifical Intelligence , pages 255?265. Springer.
63
Sharon Rose and Rachel Walker . 2004. A typology of consonant agreement as correspondence . Language , 80(3):475?531.
Imre Simon . 1975. Piecewise testable events . In Automata Theory and Formal Languages , pages 214? 222.
Keiichiro Suzuki . 1998. A Typological Investigation of Dissimilation . Ph.D . thesis , University of Arizona,
Tucson , AZ.
Jean-Roger Vergnaud . 1977. Formal properties of phonological rules . In R . Butts and J . Hintikka , editors , Basic Problems and Methodology and Linguistics . Amsterdam : Reidel.
64
