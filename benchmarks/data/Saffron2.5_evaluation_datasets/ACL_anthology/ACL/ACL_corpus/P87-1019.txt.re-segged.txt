NOMINALIZATION SINPUNDIT
Deborah A . Dahl , Martha S . Palmer , Rebecca J . Passonneau
Paoli Research Center
UNISYS Defense Systems 1
Defense Systems , UNISYS
P . O Box 517
Paoli , PA 19301 USA

This paper describes the treatment of nominalizations in the PUNDIT text processing system  . 
A single semantic definition is used for both nominalizations and the verbs to which they are related  , with the same semantic roles , decompositions , and selectional restrictions on the semantic roles  . However , because syntactically nominalizations are noun phrases  , the processing which produces the semantic representation is different in several respects from that used for clauses  .   ( 1 ) The rules relating the syntactic positions of the constituents to the roles that they can fill are different  .   ( 2 ) The fact that nominailzations are untensed while clauses normally are tensed means that an alternative treatment of time is required for nomlnalizations  .   ( 3 ) Because none of the arguments of a nominallzation is syntactically obllga-tory  , some differences in the control of the filling of roles are required  , in particular , roles can be filled as part of reference resolution for the nominalization  . The differences in processing are captured by allowing the semantic interpreter to operate in two different modes  , one for clauses , and one for nominalizations . Because many noml-nalizations are noun-noun compounds  , this approach also addresses this problem , by suggesting a way of dealing with one relatively tractable subset of noun-noun compounds  . 
1 Formerly SDC-A Burroughs Company.
1. Introduction
In this paper we will discuss the analysis of nominalizations in the PUNDIT text processing system  . 2 Syntactically , nomlnalizations are noun phrases , as in examples ( I ) - (7) . 
(1 ) An inspection of lube oil filter revealed metal particles  . 
(2 ) Lou of lubeoll preuure occurred during operation . 
(3) SAC received hif hu eafe.
(4) In ~ eeti  #ation revealed adequate lube oil.
(5) Request replacement of SAC..
(6) Erosion of impell or bladetip is evident.
(7) Unit has low output air pressure , resulting in ale *  #gaeturbine atarte . 
Semantically , however , nominali Tatlons resemble clauses , with a predlcate/argument structure like that of the related verb  . Our treatment attempts to capture these resemblances in such a way that very little machinery is needed to analyze nominalizations other than that already in place for other noun phrases and clauses  . 
There are two types of differences between the treatment of nomlnalizatlons and that of clauses  . There are those based on linqui~tle differences , related to ( 1 ) the mapping between syntactic arguments and semantic roles  , which is I The research described in this paper was supported in part by DARPA under contract  N000014-85-C-0012  , administered by the Office of Naval Research . APPROVEDFOR tense , which nomlnall sations lack . There are also differences in control ; in particular , control of the filling of semantic roles and control of reference resolution  . All of these issues will be discussed in detail below  . 
2. Clause analysis
The semantic processing to be described in this paper is part of the PUNDITs system for processing natural language messages  . The PUN-DIT system is a highly modular system , written in Prolog , consisting of distinct syntactic , semantic and discourse components . ~- lirschman 1985\] , and ~- lirschman 1986\] , describe the semantic components of PUNDIT , while ~) ah 11986 , Palmer 1988 , Passonneau 1986\] , describe the semantic and pragmatic omponents . 
The semantic domain from which these examples are taken is that of reports of failures of the starting air compressors  , or sac's , used in starting gasturbines on Navyships . 
The goal of semantic analysis is to produce a representation of the information conveyed by the sentence  , both implicit and explicit . This involves 1 ) mapping the syntactic realization onto an underlying predicate argument representation  , e . g . , assigning referents of particular syntactic consltuents to predicate arguments  , and 2 ) mak-\]Jig implicit argument fillers expll clt . We are using an algorithm for semantic interpretation based on predicate decomposition that integrates the performance of these tasks  . The integration is driven by the goal of filling in the predicate arguments of the decomposition  . ~almer1986\] . 
In order to produce a semantic representation of a clause  , its verb is first decomposed into a semantic predicate representation appropriate for the domain  . The arguments of the predicates constitute the SEMANTICROLES of the verb  , which are slml \] arto cases 4For example , fall decomposes into become in operatlve , with patient as its only semantic role . Semantic roles can be filled either by a syntactic constituent or by reference PUBLIC RELEASE  , DISTRIBUTION UNLIMITED . 
s PUNDITUND derstands and Integrates Text 4 In this domain the semantic roles include : agent  , Instigator , experiencer , Instrument , theme , Ioeatlon , actor , patient , source , reference_pt and goal . There are domain specific riteria for selecting a range of semantic roles  . The criteria which we have used are described resolution from from default or contextual information  . 
We have categorized the semantic roles into three classes  , based on how they are filled Semantic roles such as theme  , actor and patient are syntactically OBLIGATORY , and must be filled by surface constituents . Semantic roles are categor-ized as semantically ESSENTIAL when they must be filled even if there is no syntactic constituent ava Uahle  , sIn this case they can be filled pragmatically , making use of reference resolution , as explained below . The default categorization is NON-ESSENTIAL , which does not require that the role be filled . The algorithm in Figure 1 produces a semantic representation using this information  . 
Each step in the algorithm will be illustrated at least once in the next section using the following  ( typical ) CASREPS text . 
~ a ? failed.
Pumps heared.
In eestifatior treeealed metale on tamlnation in filter  . 
2.1. A Simple Example
DECOMPOSE VERB-The first example uses the fall decomposition for S acfailed : fall <- be eome P  ( in operatlve P ( patlent ( P )   )   )   . 
It indicates that the entity filling the OBLIGA -TORY patient role has or will become in operative  . 
FOR patient ROLE-
PROPOSESYNTACTICCONSTITUENT
FILLER-A mapping rule indicates that the syntactic subject is a likely filler for any pat ient role  . The mapping rules make use of intuitions about syntactic cues for indicating semantic roles first embodied in the notion of case ~  lllmore1968  , Palmer1981\] . The mapping rules can take advantage of general syntactic cues like " SUBJECT goes to PATIENT " while still indicating particular context sensitivities  . ( See~al-mer1985\] for details . )  inPaseonneau198611 s We are in the process of defining criteria for categorizing a role as ~ SSeNTIAL  . It is clearly very domain dependent . 

CALL REFERENCERESOLUTION-See is the subject of ma?failed  , and is suggested by the mapping rule as a 1Lkely filler of the patient role . 
At this point the semantic interpreter asks noun phrase analysis to provide a unique referent for the noun phrase subject  . Since no sac , have been mentioned previously , a new name is created : sael . 
TESTSELECTION RESTRICTIONS-In addition to the mapping rules that are used to associate syntactic constituents with semantic roles  , there are selection restrictions associated with each semantic role  . The selection restrictions for fail test whether or not the filler of the patient role is a mechanical device  . As a c is a mechanical device so the subject of the sentence mac failed maps straightforwardly onto the patient role  , e . g . , beeomeP ( inoper a t  veP ( patent ( sac1 )   )   )   . 
Since there are no other roles to be filled the algorithm term ~- ate successfully at this point and the remaining steps are not applied  . The next example illustrates further steps in the algorithm  . 
2 . 2 . Unfilled Obligatory Roles The second utterance in the example  , P smpm heared , illustrates the effect of an unfilled obligatory role  . 
DECOMPOSE VERB-shear , <- eauseP ( ! nstigator(I ) , be eome P ( sheared P ( patlent ( P )   )   )   ) Sheer is an example of a verb that can be used either transitively or intransitively  . In both cases the patient role is filled by a mechanical device that becomes heared  . If the verb is used transitively , the instigator of the shear in ? , also a mechanical device , is mentioned explicitly , as in , The rotating driees hafts heared the p smp . If the verb is used intransitively , as in the current example , the instigator is not made explicit ; however , the algorithm begins by attempting to fill it in . 
FOR Instigator ROLE-Working from left to right in the verb decomposition  , the first role to and relies heavily on what can be assumed from the context  . 
be filled is the instigator role . A mapping rule indicates that the subject of the sentence  , p smp , is a likely filler for this role . Reference resolution returns pump1 as the referent of the noun phrase . Since pump is a mechanical device , the selection restriction test passes . 
FOR patient ROLE-There are no syntactic constituents left  , so a syntactic constituent cannot be proposed and tested  . 
UNFILLED OBLIGA TORY ROLES-The patlent role , a member of the set of obligatory roles , is still unfilled . This causes failure , and the binding of p , * rnpl to the instigator role is undone . The algorithm starts over again , trying to fill the instigato role . 
FOR instigator ROLE-There are no other mapping rules for instigator  , and it is nonessential , so Case 4 applies and it is left unfilled , e The algorithm tries again to fill in the patient role  . 
FOR patlent ROLE-Two mapping rules can apply to the patient role  , one of which suggests the subject , in this case , the pump , as a filler . 
Reference resolution returns pump1 again , which passes the selection restriction of being a mechanical device  . The final representation is : e a use P ( instlgator ( I )   , be eome P ( sheared P ( patlent(pumpl )))) . 
The last sentence in the text , " Inveatlga-tionre ~ ealed metale on taminatlon~n filter  , " is interesting mainly because of the occurrence of two nomlnallzations which are discussed in detail in a separate section  . 
2.3. Temporal Analysis of Tensed
Clauses
The temporal component determines what kind of situation a predication denotes and what time it is asserted to hold for ~  assonneau1988\]  . 
Its input is the semantic decomposition of the verb and its arguments  , tense , an indication of whether the verb was in the perfector progressive  , and a list of unanalyzed constituents which may include temporal adverbials  . It generates three kinds of output : an assignment of IIn other domains  , the instigator might be an ~ SSZN . 
TLU . role and would get filled by pragmatics.
133 an actual time to the predication , if appropriate ; a representation of the type of sRuation denoted by the predication as either a state  , a processor a transition event ; and finally , a set of predicates about the ordering of the time of the situation with respect to other times explicitly or implicitly mentioned in the same sentence  . For the simple sentence , sac/'ailed , the input would consist of the semantic decomposition and a past tense marker : 
Deeomposlt lons become ( noperative ( patlent ( is sell )   ) )  3Terb forms Past The output would be a representation of a transitional event  , corresponding to the moment of becoming in operat ive  , and a resulting state in which the sacis in operative for some period initiating at the moment of transition  . 
8. Nomlnalls at lons
Nominallzations are processed very slml \] arly to clauses  , but with a few cruciald ~ erences , both in linguistic information accessed and in the control of the algorithm  . The first important linguistic characteristic of the nom  ; nallzation algorithm is that the same predicate decomposition can be used as is used for the related verb  . Secondly , d~erent mapping rules are required since syntactically a nominalls at lon is a noun phrase  . For example , where a likely filler for the patient of fail , is the syntactic subject , all kely filler for the patient of failure is an of pp  . Thirdly , nominalisations do not make use of the obligatory classification for semantic roles  , since noun phrase modifiers are not syntactical ly obligatory  . 
In terms of d~rerences in control structure , because nom ; nallzations may themselves bean a-phorl c , there are two separate role-filling stages in the algorithm instead of just one  . The first pass is for filling roles which are explicitly given syntactically  ; essential roles are left unfilled . If auomi-nalization is being used anaphorically some of its roles may have been specified or otherwise filled when the event was first described  . The ana-phorl creference to the event , the nomina \] izatlon , would automatically inherit all of these role This suggests the hypothesis that OBLIGATORY roles For clause decompositions automatically become BSSeNTL ~ roles for nominalization decompositions  . This hypothesi seems to hold in the current domain  ; however , it will have to be tested on other domains . We are indebted to James Allen for this observation  . 
fillers , as a byproduct of reference resolution.
After the first pass , the interpreter looks for a referent , which , if found , will unify with the noml-nalisatlon representation  , sharing variable bindings . This is a method of filling unfilled roles prag -matically that is not currently available to clause analysis s  . However , the first pass was important for filling roles with any explicit syntactic arguments of the nom  ; nalizatlon before attempting to resolve its reference  , since there may be more than one event in the context whkh nominallza-tion could be specifying  . For example , failure of pump and failure of saccan only be distinguished by the filler of the patient role  . After reference resolution a second role-filling pass is made  , where still unfilled roles may be filled prag -matically with default values in the same way that unfilled verb roles can be filled  . 
S . 1 . Temporal Analysis of Nomlnallza-tlons As with clauses  , the temporal analysis of norn in alls at lonstakes place after the semantic analysis  . Also as with clauses , one of the inputs to the temporal analysis of nomlna \] is at lons is the semantic decomposition  . The criticald ~ erence between the two cases is that a nom  ; nalisation does not occur with tense . PUNDIT compensates by looking for relevant temporal information in the superordinate constituents in which the nomi-nalizatlon is embedded  . Currently , PUNDIT processes nomlnalizatlons in three types of con ? texts  . 
The first context for which a nomlnalisation is temporally processed is when it occurs as the prepositional object of a temporal connective  ( e . g . , before , during , after ) and the matrix clause denotes an actual situation  . For example , in the sentences a clube oil pressure decreased belato  60 pslg after engagement , the temporal component processes the main clause as referring to an actual event which happened in the past and which resulted in a new situation  . When PUNDIT finds the temporal adverbial phrase after engagement  , it assumes that the engage-meat also has actual temporal reference  . In such cases , the nomlnalisaton is processed using the ! Clauses can describe previously mentioned events  , as discussed in \[ Dahl 1987\] . In order to handle cases like these , something analogous to reference resolution for clauses may be required  . However a treatment of this has not yet been implemented in PUNDIT  . 
1 34 meaning of the adverb and the tense of the main clause  . 
The second context in which a nominallza-tion undergoes temporal analysis is where it occurs as the argument o a verb providing temporal information about situations  . Such verbs are classified as aspectual . Occur is such a verb , so a sentence like failure occurred would be processed very s~mi Iarly to a clause with the simple past tense of the related verb  , i . e . , aomethlng faile & Another type of verb whose nominallzation arguments are temporally processed is a verb which itself denotes an actual situation that is semantically distinct from its arguments  . For example , the sentence in , a estlgatlon re~ealed metal?onfam~natloni ~ toil filter mentions three situations : the situation denoted by the matrix verb reveal  , and the two situations denoted by its arguments , in eemt ~ gatlona de on tamlnat lo ~ If the situation denoted by reveal has actual temporal reference  , then its arguments are presumed to as well . 
8 . 2 . Nominalls atlon Mapping Rules We will Use the previous example  , in eestl-gatlon revealed metale on tamlnatlon in filter  , to illustrate the nom ~ nall sation analysis algorithm  . We will describe the eontamlnatlon example first  , since all of its roles are filled by syntactic constituents  . The dotted llne divides the algorithm in Figure 2 in the Appendix into the parts that are the same ( above the line )  , and the parts that differ ( below the llne . ) DECOMPOSE VERB - Contaminate decomposes into a NON-ESSENTIAL instrument that contam-inates an OBLIGATORY loeatlon  . 
e ontaminate <- e ontaminated P ( instrument(I ) , loeatlon ( L )   ) FOR instrument role-In the example , metal is a noun modifier of contamination , and metall is selected as the filler of the ins trument role  . 
FOR theme ROLE - The theme of a nomina U-nation can be syntactically realized by an ofpporan in pp  . The role is filled with fllterl , the referent of/~l?er . 
At this point the temporal component is called for the nomlnalisation metale on tamlnatlon in oll fi lter with two inputs : the decomposition structure and the tense of the matrix verb  , in this case the simple past . Because this predicate is stative , the representation of the eontamlna-tlon situation is a state predicate with the decomposition and a period time argument as well as the unique identifier S  ,   ( which will be eventually be instantiated by reference resolution as \[ eontaminatel\]  ) : state ( S , e on tamlnated P ( instrument ( metall ) , \] oe at lon(filterl)) , ( perlod(S )) In this context , the past tense indicates that at least one moment within the period of contamination precedes the time at which the report was filed  . 
CALLREFERENCERESOLUTION FORNOl V\[I-
NALL ZATION-There are no previously mentioned ? on tamlnatlon events  , so a new referent , e on tamlnatlon l is created . There are noun filled roles , so the analysis is completed . 
8.3. Filllng Essential Roles
The analysis of the other nominallzation , in ~ emtlgatlon , illustrates how essential roles are filled . The decomposition of investigate has two semantic roles  , a NON-ESSENTIAL agent doing the investigation and an OBLIGATORY theme being investigated  . 9 investigate <- investlgate P ( agent ( A ) ~ theme ( T )   ) There are no syntactic constituents , so the mapping stage is skipped , and reference resolution is called for the nominallzatlon  . There are no previously mentioned investigative vents in this example  10  , so a new referent , investigaton l is created . At this point , a second pass is made to attempt of illany unfilled roles  . 
IIn other domains , the theme can be essential , as in " I heard a noise . Let's investigate . " I0If the example had been , A sewea?is eer is weet l-gate & tAepump . TA eisteetlgn tio so e eur re ~ just before tAe complete break down  . , a previously mentioned event would have been found  , and the agent and theme roles would have inherited the fillers  engineer1 and pnmpl from the reference to the previous event  . 

FOR agent ROLE-The role is NON-ESSENTIAL , so Case 4 applies , and it is left unfilled . 
FOR theme ROLE-The selection restriction on the theme of an ineestlgation is that it must be ad * msged component or adauaage causing event  . All of the events and entities mentioned so far , the , ae and the pump , the fails re of the sac and the shcar/ng of the pump satisfy this criteria  . In this case , the item in focus , the , hearing of the pump , would be selected ~) ah 11986\] . 
The final decomposition is : investlgate P ( agent ( A )   , theme ( shearl )) 4 . Other Compounds In addition to nom ~ nalisations , PUNDIT deals with three other types of noun-noun compounds  . One is the category of nouns with arguments . These include preuure and temperature , for example . They are decomposed and have semantic roles like nominalisations  ; however , their treatment is different from that of nomlualisa-tions in that they do not undergo time analysis  , since they do not describe temporal situations . As an example , the definition of preuure , pressure P ( theme ( T ) , loeation ( L )) , specifies the meand location as roles . The analysis of a noun phrase likes a ? oil preuure would fill in the loeatlon with the sac and the theme with the oil  , resulting in the final representation , pressure P ( theme ( oill ) , loeatlon(sael )) . 
The syntactic mapping rules for the roles permit the theme to be filled in by either a noun modifier  , such as all in this case , or the object of a no/prepositional phrase , as in prcuureo/oil . Siml-larly , the mapping rules for the location allow it to be filled in by either a noun modifier or by the object of an in prepositional phrase  . Because of this flexibility , the noun phrases , sacall pres-mute , all preuure in sac , and pressure of oi 1 in sac , all receive the same analysis . 
The second class of compounds is that of nouns which do not have semantic roles  . For these , a set of domain-specific semantic relationships between head nouns and noun modifiers has been developed  . These include : area of object , for example , blade tip , mater lal-form , such as metal part l clea ; and materal-objeet , such as metaleyllnder . These relationships are assigned by examining the semantic properties of the nouns  . The corresponding prepositional phrases , as in tipo/blade , particle , o/m et al , and cylinder of metal , have a similar analysis . 
Finally , many noun-noun compounds are handled as idioms , in cases where there is no reason to analyze the semantics of their internal structure  . Idioms in the CASREPS domain include , hip , force , gear * hair , and connecting p in . 
Our decision to treat these as idioms does not imply that we consider them unanalyzable  , or noncompositional , but rather that , in this domain , there is no need to analyze the many further . 
5 . Previous Computatlonal Treatments Previous computational treatments of nominalizations differ in two ways from the current approach  . In the first place , nominallzations have often been treated simply as one type of noun-noun compound  . This viewpoint is adopted by ~ in in 1980 , Leonard1984 , Brachman ( nuli)\] . Certainly many nomlnalizations contain nominal premodifiers and hence  , syntactically , are noun-noun compounds ; however , this approach obscures the generalization that prepositional phrase modifiers in non-compound noun phrases often have the same semantic roles with respect to the head noun as noun modifiers  . PUNDIT's analysis is aimed at a uniform treatment of the semantics ~ ml \] arl lty among expressions like repair of enflne  , enf~ne repair , and C someone ) repaired englne rather than the syntactic similarity of engine repair  , sir preuure , and metal partl-eles . Of the analyses mentioned above , Brachman's analysis seems to be most similar to ours in that it provides an explicit link from the nominalization to the related verb to relate the roles of the noun to those of the verb  . The second way in which our approach differs from previous approaches is that PUNDIT's analysis is driven by taking the semantic roles of the predicate and trying to fill them in any way it can  . This means that PUNDIT knows when a role is not explicitly present  , and consequently can call on the other mechanisms which we have described above to fill it in  . Other approaches have tended to start by fitting the explicitly mentioned arguments into the role slots  , thus they lack this flexibility . 
6. Lmltatons
The current system has two main limitations . First , there is no attempt to build internal structure within a compound  . Each nominal modifier is assumed to modify the head noun unless it is part of an idiom  . For this reason , cannot be handled by our system in its current state because impel\[or b\[a  , let ip forms a semantic unit and should be analysed as a a single argument of eroaion  . The second problem k related to the first . The system does not now keep track of the relative order of no rahal modifiers  . In this domain , this does not present serious problems , since there are no examples where a different order of modifiers would result in ad~erent analysis  . Generally , only one order is acceptable , as in macoileo~taminatlon , ~ o ~\ [ both powerful and extenslble , and which will provide a natural basis for further development  . 

We would like to thank Lynette Hirschman and Bonnie Webber for their helpful commments on this paper  . 
7. Conclusons
In this paper we have described a treatment of nom ~ nalisatlons ill which the goalls to maxim-\ [sethes~m ~\] arities between the processing of nom-in alls at lons and that of the clauses to whk h they are related  . The semantics ~ m ~\] arltles between nom ~nallzatlons and clauses are captured by making the semantic roles  , semant k decompositions , and selectional restrictions on the roles the same for nomlna \] isations and their related verbs  . As a result , the same semant k representation k constructed for both structures  . This s~m ; arity in representation it urna nows reference resolution to find referents for nom  ; nall sations whk h refer to events previously described in clauses  . In addl-tion , it allows the time component o integrate temporal relationships among events and situations described in clauses with those referred to by non~ua Usations  . 
On the other hand , where d ~ erences between nom~ua Usations and clauses have a clear \] in gulstic motivation  , our treatment provides for differences in processing  . PUNDIT recognizes that the semantic roles of non ~ na\]ised verbs are expressed syntactically as modifiers of nouns rather than arguments of clauses by having ad~erent set of syntactic mapping rules  . It ls also true in nominalls at lons that there are no syntac-tica Uy obligatory arguments  , so the analysis of a nom ; nall sation does not fall when there is an unfilled obligatory role  , as is the case with clauses . 
Finally , the temporal analysis component is able to take into account the fact that nomlnall zatlons are untensed  . 
~rh ; let here are many cases not yet covered by our system  , in general , we believe this to be an approach to processing nomlnalls at lons which is 
DECOMPOSEVERB ;
FOREACH SEMANTICROLE
CASEI : IFTHEREARESYNTACTICCONSTITUENTS-
PROPOSESYNTACTICCONSTITUENTFILLER
CALLREFERENCERESOLUTION & TESTSELECTIONAL RESTRICTION SCASE  2: IFROLEISOBLIGATORY ANDSYNTACTICALLYUNFILLED  - 

CASE 3: IFROLEISESSENTIAL ANDUNFILLED-CALL REFERENCERESOLUTION TO HYPO THESIZE AFILLER & TESTSELECTION ALRESTRICTION SCASE  4: IFROLEISNON-ESSENTIAL ANDUNFILLED-
LEAVEUNFILLED
CALL TEMPORAL ANALYSISON DECOMPOSITION
FIKure 1. Clause A Jtalysls Al Korl Chm
DECOMPOSENOMINALIZATION
FOREACH SEMANTICROLE :
IF THEREARESYNTACTICCONSTITUENTS-
PROPOSESYNT ACTICCONSTITUENT FILLER&CALL REFERENCERESOLUTION & TESTSELECTIONAL RESTRICTIONS CALL TEMPORAL ANALYSISON DECOMPOSITION CALL REFERENCE RESOLUTION FOR NOMINALIZATION NOUN PHRASE 
FOREACH SEMANTICROLE :
IFESSENTIAL ROLE ANDUNFILLED
CALL REFERENCERESOLUTION TO HYPO THESIZE AF ILLER
TESTSELECTION ALRESTRICTIONS
ELSELEAVEUNFILLED
FJKure2 . Nomlnallsa ~ ion Analysis AI Korlthm ~ rachman ( nuU ) \]
Ronald J . Brachman , A Structural
Paradigm for Representing
Knowledge . In BBN Report No . S605,
Bolt Beranek & Newman , Cambridge,


Deborah A . Dahl , Focusing and Reference Resolution in PUNDIT , Presented at AAAI , Philadelphia , PA ,  1986 . 

Deborah A . Da M , Determ ~- ers , Entitles , and Contexts , Presented at TInlap ? 3 , 
Las Cruces , New Mexico , January 7?9, 1987.

C . J . F ; n more , The Case for Case . In
Uni , ersal , in Linguim tie Theory , E.
Bach and R . T . Harms ( ed .), Holt,
Rinehart , and Winston , New York , 1968.

Tim Finin , The Semantic Interpretation of Compound Nominals , PhD Thesis , 
University of Tlll , ois at Urbana-
Champaign , 1980.

L . Hirschman and K . Puder , Restriction
Grammar : A Prolog Implementation . I
Lo?ie Pro?ramminffandira Application ,, D~-I . D . Warren and M . 
Van Caneghem ( ed .), 1985.

L.H ~ rschman , Conjunction in Meta-
Restriction Grammar . d . of Loglc Pro-grummin q , 1986 . 

Rosemary Leonard , The Interpretation of En?limh Noun Seque neem on the 
Computer . North Holland , Amsterdam , 1984.

Martha S . Palmer , A Case for Rule
Driven Semantic Processing . Proc . o/the19th ACL Conference , June , 1981 . 

Martha S . Palmer , Driving Semantics for a Limited Domain , Ph . D . thesis,
University of Edinburgh , 198, 5.

Martha S . Palmer , Deborah A . Dahl,
Rebecca J . ~ as sonneau \] Sch~man,
Lynette Hirschman , Marcia Line barger , and John Dowding , Recovering Implicit Information , Presented at the 24th Annual Meeting of the Association for
Computational Linguistics , Columbia
University , New York , August 1986.
~ assonneau 1988\]o
Rebecca J . Passonneau , A Computational Model of the Semantics of Tense and Aspect  , Loglc-Based Systems
Technical Memo No . 43, Paoli
Research Center , System Development
Corporation , November , 1986.

Rebecca J . Passonneau , Designing Lexical Entries for a Limited Domain , 
Loglc-Based Systems Technical Memo
No . 42, Paoli Research Center , System
Development Corporation , April , 1988.

