Proceedings of the ACL 2010 System Demonstrations , pages 25?29,
Uppsala , Sweden , 13 July 2010. c?2010 Association for Computational Linguistics
WebLicht : Web-based LRT services for German
Erhard Hinrichs , Marie Hinrichs , Thomas Zastrow Seminar f?r Sprachwissenschaft , University of T?bingen firstname.lastname@uni-tuebingen.de Abstract
This software demonstration presents WebLicht ( short for : Web-Based Linguistic Chaining Tool ), a webbased service environment for the integration and use of language resources and tools ( LRT ). WebLicht is being developed as part of the D-SPIN project1. WebLicht is implemented as a web application so that there is no need for users to install any software on their own computers or to concern themselves with the technical details involved in building tool chains . The integrated web services are part of a prototypical infrastructure that was developed to facilitate chaining of LRT services . WebLicht allows the integration and use of distributed web services with standardized APIs . The nature of these open and standardized APIs makes it possible to access the web services from nearly any programming language , shell script or workflow engine ( UIMA , Gate etc .) Additionally , an application for integration of additional services is available , allowing anyone to contribute his own web service . 1 Introduction Currently , WebLicht offers LRT services that were developed independently at the Institut f?r Informatik , Abteilung Automatische Sprachverarbeitung at the University of Leipzig ( tokenizer , lemmatizer , cooccurrence extraction , and frequency analyzer ), at the Institut f?r Maschinelle Sprachverarbeitung at the University of Stuttgart ( tokenizer , tag-ger/lemmatizer , German morphological analyser SMOR , constituent and dependency parsers ), at the Berlin Brandenburgische Akademie der Wissenschaften ( conversion of plain text to D-Spin format , tokenizer , taggers , NE recog - 1 D-SPIN stands for Deutsche SPrachressourcen INfrastruktur ; the D-SPIN project is partly financed by the BMBF ; it is a national German complement to the EU-project CLARIN . See the URLs http://www.d-spin.org and http://www.clarin.eu for details nizer ) and at the Seminar f?r Sprachwissen-schaft/Computerlinguistik at the University of T?bingen ( conversion of plain text to D-Spin format , GermaNet , Open Thesaurus synonym service , and Treebank browser ). They cover a wide range of linguistic applications , like tokenization , cooccurrence extraction , POS Tagging , lexical and semantic analysis , and several laguages ( currently German , English , Italian , French , Romanian , Spanish and Finnish ). For some of these tasks , more than one web service is available . As a first external partner , the University of Helsinki in Finnland contributed a set of web services to create morphological annotated text corpora in the Finnish language . With the help of the webbased user interface , these individual web services can be combined into a chain of linguistic applications . 2 Service Oriented Architecture WebLicht is a socalled Service Oriented Architecture ( Binildas et . al ., 2008), which means that distributed and independent services ( Tanenbaum et al 2002) are combined together to a chain of LRT tools . A centralized database , the repository , stores technical and content-related metadata about each service . With the help of Figure 1: The Overall Structure of WebLicht 3 The Service Repository Every tool included in WebLicht is registered in a central repository , located in Leipzig . Also realized as a web service , it offers metadata and processing information about each registered tool . For example , the metadata includes information about the creator , name and the adress of the service . The input and output specifications of each web service are required in order to determine which processing chains are possible . Combining the metadata and the processing information , the repository is able to offer functions for the chain building process . Wrappers : TCF , 0.3 / TCF , 0.3 Inputs Outputs lemmas postags - tagset : stts sem_lex_rels - source : GermaNet Table 1: Input and Output Specifications of T?bingen's Semantic Annotator A specialized tool for registering new web services in the repository is available.
Figure 2: A Screenshot of the WebLicht Webinterface 3 4 In Area 3, one can assemble the service tool chain and execute it on the input text . The Selected Tools list displays all web services that have already been entered into the web service chain . The list under Next Tool Choices then offers the set of tools that can be entered as next into the chain . This list is generated by inspecting the metadata of the tools which are already in the chain . The chaining mechanism ensures that this list only contains tools , that are a valid next step in the chain . For example , a Part-of-Speech Tagger can only be added to a chain after a tokenizer has been added . The metadata of each tool contains information about the annotations which are required in the input data and which annotations are added by that tool . As Figure 3 shows , the user sometimes has a choice of alternative tools - in the example at hand a wide variety of services are offered as candidates . Figure 3 shows a subset of web service workflows currently available in WebLicht . Notice that these workflows can combine tools from various institutions and are not restricted to predefined combinations of tools . This allows users to compare the results of several tool chains and find the best solution for their individual use case . The final result of running the tool chain as well as each individual step can be visualized in a Table View ( implemented as a seperate frame , Area 4), or downloaded to the user's local harddrive in WebLicht's own data exchange format TCF . 5 The TCF Format The D-SPIN Text Corpus Format TCF ( Heid et al 2010) is used by WebLicht as an internal data exchange format . The TCF format allows the combination of the different linguistic annotations produced by the tool chain . It supports incremental enrichment of linguistic annotations at different levels of analysis in a common XML-based format ( see Figure 4).
Figure 3: A Choice of Alternative Services Figure 4: A Short Example of a TCF Document , Containing the Plain Text , Tokens and POS Tags and Lemmas TCF format into other common and standardized data formats , for example MAF/SynAF or TEI . 6 Implementation Details The web services are available in RESTstyle and use the TCF data format for input and output . The concrete implementation can use any combination of programming language and server environment . The repository is a relational database , offering its content also as RESTstyle web services . The user interface is a Rich Internet Application ( RIA ), using an AJAX driven toolkit . It incorporates the Java EE 5 technology and can be deployed in any Java application server.
7 How to Participate in WebLicht Since WebLicht follows the paradigm of a Service Oriented Architecture , it is easily extendable by adding new services . In order to participate in WebLicht by donating additional tools , one must implement the tool as as RESTful web service using the TCF data format . You can find further information including a tutorial on the D-SPIN homepage2. 8 Further Work The WebLicht platform in its current form moves the functionality of LRT tools from the users desktop computer into the net ( Gray et al 2005). At this point , the user must download the results of the chaining process and deal with them on his local machine again . In the future , an online workspace has to be implemented so that annotated textcorpora created with WebLicht can also be stored in and retrieved from the net . For that purpose , an integration of the eSciDoc research environment3 into Weblicht is planned . The eSciDoc infrastructure enables sustainable and reliable longterm preservation of primary research and analysis data . To make the use of WebLicht more convenient to the end user , there will be predefined processing chains . These will consist of the most commonly used processing chains and will relieve the user of having to define the chains manually . In the last year , WebLicht has proven to be a realizable and useful service environment for the humanities . In its current state , WebLicht is still a prototype : due to the restrictions of the underlying hardware , WebLicht cannot yet be made available to the general public . 9 Scope of the Software Demonstration This demonstration will present the core functionalities of WebLicht as well as related modules and applications . The process of building language-specific processing tool chains will be shown . WebLichts capability of offering only appropriate tools at each step in the chain-building process will be demonstrated . 2 http://weblicht.sfs.uni-tuebingen.de/englisch/weblichttutorial.shtml 3 For further information about the eSciDoc platform , see https://www.escidoc.org / Figure 5: Annotation Layers are Added to the TCF Document by Each Service References Binildas , C.A ., Malhar Barai et.al . (2008). Service Oriented Architectures with Java . PACKT Publishing , Birmingham ? Mumbai Gray , J ., Liu , D ., Nieto-Santisteban , M ., Szalay , A ., DeWitt , D ., Heber , G . (2005). Scientific Data Management in the Coming Decade . Technical Report MSR-TR-2005-10, Microsoft Research . Heid , U ., Schmid , H ., Eckart , K ., Hinrichs , E . (2010). A Corpus Representation Format for Linguistic Web Services : the D_SPIN Text Corpus Format and its Relationship with ISO Standards . In Proceedings of LREC 2010, Malta . Tanenbaum , A ., van Steen , M . (2002). Distributed Systems , Prentice Hall , Upper Saddle River , NJ , 1st Edition.
29
