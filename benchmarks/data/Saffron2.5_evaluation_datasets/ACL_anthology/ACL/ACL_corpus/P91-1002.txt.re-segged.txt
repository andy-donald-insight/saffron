INCLUSION , DISJOINTNESS ANDCHOICE :
THELOGICOFLINGUISTICCLASSIFICATION
Bob Carpenter
Computational Linguistics Program
Philosophy Department
Carnegie Mellon University
Pittsburgh , PA 15213
carp ~ caesar.lcl.cmu.edu
Carl Pollard
Linguistics Department
Ohio Sate University
Columbus , OH 43210
pollard ~ hpuxa.ircc.ohio-state.edu

We investigate the logical structure of concepts generated by conjunction and disjunction over a monotonic multiple inheritance network where concept nodes represent linguistic categories and links indicate basic inclusion  ( ISA ) and disjoint-hess ( ISNOTA ) relations . We model the distinction between primitive and defined concepts as well as between closed-and open-world reasoning  . We apply our logical analysis to the sort inheritance and unification system of HPSG and also to classification in systemic hoice systems  . 

Our focus in this paper is a stripped-down monotonic inheritance-based knowledge representation system which can be applied directly to provide a clean declarative semantics for Halliday's systemic choice systems  ( see Winograd 1983 , Mellish 1988 , Kress 1976 ) and the inheritance module of head-driven phrase -structure grammar  ( HPSG )   ( Pollard and Sag 1987 , Pollard in press ) . Our inheritance networks are constructed from only the most rudimentary primitives : basic concepts and ISA and ISNOTA links  . By applying general algebraic techniques , we show how to generate a meet semilattice whose nodes correspond to consistent conjunctions of basic concepts and where meet corresponds to conjunction  . We also show how to embed this result in a distributive lattice where the elements correspond to arbitrary conjunctions and disjunctions of basic concepts and where meet and join correspond to conjunction and disjunction  , respectively . While we do not consider either role - or attribute-based reasoning in this paper  , our constructions are directly applicable as a frontend for the combined attribute-and concept -based formalisms of Ait-Kaci  ( 1986 )  , Nebel and Smolka (1989) , Carpenter (1990) , Carpenter , Pollard and Franz (1991) and Pollard ( in press ) . 
The fact that terms in distributive lattices have disjunctive normal forms allows us to factor our construction into two stages : we begin with the consistent conjunctive concepts generated from our primitive concepts and then form arbitrary disjunctions of these conjunctions  . The conjunctive construction is useful on its own as its result is a semilattice where meet corresponds to conjunction  . In particular , the conjunctive semilattice is ideally suited to conjunctive logics such as those employed for unification  , as in HPSG . 
We will consider the distinction between primitive and defined concepts  , a wellknown distinction expressible in terminological reasoning systems such as KL-ONE  ( Brachman 1979 , Brach-man and Schmolze 1985) , and its descendants ( such as LOOM ( MacGregor "1988 ) or CLASSIC ( Borgida et al 1989 ) ) . We also tackle the variety of closed-world reasoning that is necessary for modeling constraint-based grammar such as HPSG  . A similar form of closed-world reasoning is supported by LOOM with the disjoint-covering construction  . 
One of the benefits of our notion of inheritance is that it allows us to express the natural semantics of both systemic hoice systems and HPSG inheritance hierarchies using basic concepts and ISA and ISNOTA links  . In particular , we will see how choice systems correspond to ISNOTA reasoning  , multiple choices can be captured in our conjunctive construction and how dependent choices can be represented by inheritance  . One result of our construction will be a demonstration that the systemic classification and t t PSG systems are variant graphical representations of the same kind of underlying information regarding inclusion  , disjointness and choice . 
Inheritance Networks
Our inheritance networks are particularly simple , being constructed from basic concepts and two kinds of " inheritance " links  . 
Definition 1 ( Inheritance Network ) An inheritance net is a tuple ( Bas Conc , ISA , ISNOTA ) lo here : ? B as Conc : a finite set of basic concepts ? ISACB as ConcxB as Conc : the basic inclusion relation ? IS NOT AC_B as Conc?B as Conc : the basic disjointness relation The interpretation of an et is straightforward : each basic concept is thought of as representing a set of empirical objects  , where PISAQ means that all P's are Q's and P ISNOTAQ means that noP's are Q's  . Our primary interest is in the logical relationships between concepts rather than in the actual extensions of the concepts themselves  . This is in accord with standard linguistic practice  , where the focus is on types of utterances rather than utterance tokens  . An example of an inheritance network is given in Figure  1  . We have followed the standard convention of placing the more specific elements toward the bottom of the network  , with arrows indicating the directionality of the ISA links  ( for instance , dISAf and bISNOTAC ) . 
Y/\ de/\/\abIc
Figure 1: Inheritance Hierarchy
We can automatically deduce all of the inclusion and disjointness relations that follow from the basic ones  ( Carpenter and Thomason 1990 )  . 
Definition 2 ( Inclusion/Disjointness ) The inclusion relation mA*CB as Conc?B as Conc is the smallest such that : ? PISA * P?/fP ISAQ and QISA * R then PISA*R  ( Reflexive )   ( Transitive ) The disjointness relation ISNOTA*CB as Conc ?
BasConc is the smallest such that : ?/ fPISNOTA Qor QISNOTAP then PISNOTA * Q ? if PISA * Q and QISNOTA*R then PISNOTA*R  ( Symmetry )   ( Chaining ) These derived inclusion and disjointness relations express all of the information that follows from the basic relations  . In particular , ISA * is the smallest preorder extending ISA . For convenience , we allow concepts P such that PISNOTA * P ; any such inconsistent concepts are automatically filtered out by the conjunctive construction  . Similarly , we allow concepts P and Q such that PISA * Q and QIS h*P  . In this case , P and Q are merged during the conjunctive construction so that they behave identically  . 

A conjunctive concept is modeled as a set PC Bas Conc of basic concepts  . A conjunctive conceptP corresponds to the conjunction of the concepts PEP  ; an object is a Pif and only if it is a P for every PEP  . But arbitrary sets of basic concepts are not good models for conjunctive concepts  ; we need to identify conjunctive concepts which convey identical information and also remove those conjunctive concepts which are inconsistent  . We address the first issue by requiring conjunctive concepts to be closed under inheritance and the second by removing any concepts which contain a pair of disjoint basic concepts  . 
Definition 3 ( Conjunctive Concept ) A set PC_B as Conc is a conjunctive concept if : ? if PEP and PISA * P'then P'EP?noP  , P~EP are such that PISNOTA * P~Let Conj Conc be the set of conjunctive concepts  . 

There is a natural inclusion or specificity ordering on our conjunctive concepts  ; if PCQ then every object which can be classified as a Q can also be classified as a P  . The conjunctive concepts derived from the inheritancenet in Figure  1 are displayed in Figure 2  , where we have PCQ for every derived " ISA " arc Q---*P  . 
fYd , f  e , f/\/\a , d , fd , e , fc , e , f a , d , e , fb , d , e , fc , d , e , f
T :> < f a , b , d , e , f a , c , d , f
Figure 2: Conjunctive Concept Ordering
Defined Concepts
So far , we have considered only primitive basic concepts . A defined basic concept is taken to be fully determined by its set of superconcepts  ( in the general terminological case with roles , restrictions on role values can also contribute to the definition of a concept  ( Brachman and Schmolze 1985 ) ) . In particular , a defined basic concept P is assumed to carry the same information as the conjunction of all of the concepts P ' such that PISAP ~  . For example , consider the basic concept b in Figure 1 . 
The conjunctive concept b , d , e , f is strictly more informative than d , e , f ; the primitiveness of ballows for the possibility that there is information to be gained from knowing that an object is abthat cannot be gained from knowing that it is both ad and an e  . On the other hand , if we assume that b is defined , then the presence of d and e in a conjunctive concept should ensure the presence of b  , thus eliminating the sets d , e , f , c , d , e , f and a , d , e , f from consideration , as they are equivalen to the conjunctive concepts tively  . In the primitive case , being a dandane is a necessary condition for being ab  ; in the defined case , being a dande is also a sufficient condition for being ab  . 
In general , suppose that DefConcC_B as Conc is the subset of defined concepts  . To account for this new information , we add the following additional clause to the conditions that P must satisfy to be a conjunctive concept :  ( 1 ) If PeDefConc and P~\[P~P ~ and PIsA*P'CP then PEP  . 
With the example in Figure 1 and the assumption that DefConc = b , f , we generate the conjunctive concepts in Figure 3 . We have adopted the condition of only displaying the maximally specific primitive concepts of a conjunctive concept  , as the other basic concepts can be determined from these  . Note that the assumption that f , the most ( de . d , ec . , e . , c  Figure 3: Conjunctive Construction with Defined
Concepts general basic concept , is defined means that every conjunctive concept must contain f  , because the set P\[f ~ P and fISAP is empty and thus a subset of every conjunctive concept  . Thus is equivalent to finterms of conjunctive information so that every object is classified as an /  . 
The set of conjunctive concepts ordered by reverse set inclusion has the pleasant property of being closed under consistent meets  , where the meet operation represents conjunction ( " unification " )  . 
More precisely , a set 79 CConjConc of conjunctive concepts is consistent if there is a conjunctive concept P which contains all of the concepts contained in the conjunctive concepts in  7   9 so that U 79 CP . The following theorem states that for every consistent set  79 of concepts , there is a least P such that P__DU 7~- This least P is written II 7   9 agr/n ~ lmper\plusng 3rd   1st \/ genrose femneu
Figure 4: Systemic Choice Network and called the meet of 7   )   . 
Theorem 4 The meet in ( Conj Conc , : D ) for a consistent set 7   9 C_Conj Conc of conjunctive concepts is given by :   n79 -- NP'?ConjConcIP'-~P for each P ? 7 ~ = NP'?Co . j Cor , ? IP ' U79 = P?B as Conc I for every P ' ? Conj Conc , pi ~ Up implies P ? piProof : This is an immediate consequence of the fact that Conj Conc is closed under arbitrary intersections  . 
Another way to generate the meet of a collection of conjunctive concepts is to close their union under inheritance and concept definition  . It should be observed that joins ( intersections )  , while always existing , in general represent only informational generalizations  , not necessarily disjunctions . 
Systemic Choice Systems
Mellish ( 1988 ) showed how the concepts expressible using a systemic hoice network such as that found in Figure  4 can be embedded into the lattice of first-order terms with conjunction represented by unification  . Our characterization f the concepts expressible in a systemic net instead relies on the translation of systemic notation into an inheritance network with IsA and ISNOTA links  . 
The resulting conjunctive concepts correspond to the concepts that can be expressed in the systemic net  . An example of a systemic hoice network in the notation of Mellish  ( 1988 )  , is Figure 4 . The connective I , of which there are three in the diagram , signals disjoint alternatives ; for instance , the connective for gender is taken to indicate that a gender must be exactly one of masculine  , feminine or neuter . The connective , of which there is one before gender , indicates necessary preconditions for a choice ; in this case , a gender is only chosen if the number is singular and the person is third  . Finally , the connective , of which there is one labeled agr , indicates that a choice for an agreement value requires a choice for both number and person  . 
We construct an inheritance hierarchy from a systemic network by taking a basic primitive concept for every choice in the network  . The choices in Figure 4 are those items in boldface ; the italicized items simply label connectives and are only for convenience  ( alternatively , we could take the italicized elements to be defined basic concepts  )  . 
The ISNOTA relation between basic concepts is defined so that PISNOTAQ if P and Q are connected by the choice connective I  . For example , we have 3rd ISNOTA1st and mscISNOTAneu . Finally , the ISA relation is defined so that if P is one of the choices for a connective which has a precondition P ~ attached to it  , then we include PISAP ~ . For " instance , we have mscISAs ng and mscISA 3rd . 
In Figure 5 , we disply the conjunctive concepts lst 3rd sngplu ( lst , sng3rd , snglst , plu3rd , plu(3rd , sng , msc(3rd , sng , fem 3rd , sng , neu
Figure 5: Systemic Choices generated by the inheritance net stemming from the choice system in Figure  4  . A fully determined choice in a choice system corresponds to a maximally specific conjunctive concept  , of which there are six in Figure 5 . 
Sort Inheritance in HPSG
An example of an HPSG sort inheritance hierarchy which represent she same information as the systemic choice system in Figure  4  , in the notation of Pollard and Sag (1987) , is given in Figure 6 . The basic principle behind the HPSG notation is that the bold elements correspond to basic concepts  , while the boxed elements correspond to partitions  , s ~ called because the concepts in a partition are both pairwise disjoint and exhaustive  . In terms of an inheritance network , the elements of a partition ( those concepts directly below the partition in the diagram  ) are related by basic ISNOTA links . For instance , we would have plu IS NOT Asing . Each partition may also have dependencies which must be fulfilled for the choice to be made  ; in our case , before an element of the gender partition is chosen  , singular must be chosen for number and third for person  . These dependencies generate our basic IsA relation  . For instance , we must have plu ISA a grandfer nISAs ng . Carrying out this translation of the HPSG notation into an inheritance net produces to the same result as the translation of the systemic hoice system in Figure  4  , thus generating the conjunctive concept hierarchy in Figure  5  . 
In HPSG , it is useful to allow sorts to be defined by conjunction  . An example is main A base A strict-trans , which classifies the inputs to the passivization lexical rule  ( Pollard and Sag 1987:211 )  . Translating the example to our system produces a defined conjunctive concept corresponding to the conjunction of those three basic concepts  . On the other hand , a primitive sort such as aux cannot be defined as the conjunction of the sorts from which it inherits  , namely verb and in trans-raising , because auxiliaries are not the only intransitive raising verbs  . In the hierarchy in Figure 6 , it is most natural to consider the basic concept agr to be defined rather than primitive  ; it could simply be eliminated with the same effect  . However , in the context of a grammar , agr would be one of many possible basic sorts ( others being boolean , verb form , etc . ) and would thus not be eliminable . 
Disjunctive Concepts
While meets in the conjunctive concept ordering represent conjunction  , joins ( intersections ) do not represent disjunction . For instance , mscUfern = mscUneu=3rd , sng , but the information that an object is masculine or feminine is different hanthe information that it is masculine or neuter  , and more specific than the information that it is simply third-singular  . The granularity of the original network dramatically affects the disjunctive concepts which can be rep-plusng  3rd   1st rosefer nneu Figure 6: HPSG Inheritance Network Notation resented ( see Borgida and Etherington 1989 )  . For example , we could have partitioned gender into animate and neu concepts and then partitioned the an imate concept into m sc and fer n  . This move would distinguish the join of m sc and fern from the join of msc and neu  . 
To complete our study of the logic of simple inheritance  , we employ a wellknown lattice-theoretic technique for embedding a partial order into a distributive lattice  ; when applied to conjunctive concept hierarchies , the result is a distributive lattice where concepts correspond to arbitrary conjunctions and disjunctions of basic concepts with joins and meets representing disjunction and conjunction  . 
We model a disjunctive concept as a set 79 CConjConc of conjunctive concepts interpreted is -junctively  ; an object is classified as a 79 just in case it can be classified as a P for some P  E  79  . As with the conjunctive concepts , we identify disjunctive concepts which convey the same information  . In this case , we can add more specific concepts to a disjunctive concept  79 without affecting its information content . 
Definition 5 ( Disjunctive Concepts ) A subset 7   9 CConjConc of conjunctive concepts is said to be a disjunctive concept if whenever P  , QE Conj Concare such that QDP and PE 7   9 then qe79  . 
Let Disj Conc be the collection of disjunctive concepts  . 
The inclusion ordering between disjunctive concepts represents specificity  , but this time if 79 C_Q then 7 ~ is at least as specific as Q , as Qadmits as many possibilities as 79 . Note that the upper-closed sets of a partial ordering form a distributive lattice when ordered by inclusion  , since it is a sublattice of a power set lattice . 
Proposition 6The structure ( Disj Conc , C ) is a distributive lattice . 
Unions ( joins ) represent disjunctions in in Disj Conc . Likewise , intersections ( meets ) represent conjunctions . Furthermore , the function ? that maps a conjunctive concept P to the disjunctive concept ?  ( P ) = P'IP'_DP is an embedding of Conj Conc into Disj Conc that preserves existing meets  , so that ?( PnP ') = ?( P ) n?(P') . Note that this embedding coincides with the standard embedding of a domain into its upper  ( Smyth ) power domain ( Gunter and Scottin press )  , with the only difference being that we have reversed the orders of both domains  ( with the in-formationally more specific elements toward the bottom  )  , as is conventional in inheritance networks . 
More than 30 disjunctive concepts result from the conjunctive concepts in Figure  3  , so we will not provide a graphic display of the results of the disjunctive construction applied to a realistic example  ( for examples of the general construction , see Davey and Priestley 1990) . 
Closed World Reasoning
In HPSG , Pollard and Sag ( 1987 ) partition the concept sign into two subconcepts , phrase and tive concepts sign , phrase and word . 
Applying the disjunctive construction to this result  , though , gives us a disjunctive concept word , phrase which is strictly more informative than sign  . This distinction demonstrates the open-world nature of our construction  ; it allows for the possibility of signs which are neither words nor phrases  . This form of open-world reasoning is the standard in terminological reasoning system such as KL-ONE or CLASSIC  , though LOOM provides a notion of disjoint -covering which provides the kind of closed-world reasoning we require  . 
In dealing with linguistic grammars , on the other hand , we clearly wish to exclude any expression from signhood that is neither a phrase nor a word  ; these choices are mean to be exhaustive in a grammar  . The fact that signs can be either words or phrases is explicit  ; what we need is a way to say that nothing else can be a sign  . 
In general , we require a set Clos ConcCB as Conc of closed concepts to be specified  . When constructing the disjunctive concepts , we identify a closed concept with the disjunction of its immediate subconcepts  . In particular , we can replace every occurence of a closed concept with the disjunction of its immediate subconcepts  , so that P and P'\[P'IsAP are identified . Closed concepts are treatedually to defined concepts  ; a defined concept is taken to be the conjunction of its immediate superconcepts  , while a closed concept is identified with the disjunction of its immediate subconcepts  . The simplest way to achieve this effect is to generate the disjunctive concepts from the subset of conjunctive concepts which contain at least one subconcept of every closed concept which they contain  . This leads to the following restriction : ( 2 )   79 EO is j Conconly if for every PE 79 and PEP f3 Clos Conc there is some P~EP such that P~ISA P Thus if sign EC los Conc  , we would only consider the conjunctive concepts phrase and word  ; the concept sign contains a closed concept sign , but none of its subconcepts . Consequently , the set sign is no longer a disjunctive concept  , while phrase , word would be allowed ( assuming for this example that phrase and word are not themselves closed  )  . 
In grammar development , i will often be the case that all but the maximally specific concepts are closed  . In this case , the disjunctive construction will produce the boolean algebra with maximally specific on junctive concepts as atoms  . Such maximally specific conjunctive concepts were simply taken as primitive by King  ( 1989 )  , who generated a boolean algebra of types corresponding to disjunctions of maximal concepts  . 

We would like to thank BobK as perfor invaluable suggestions  . 

A'/t-Kaci , Bassan (1986) . An algebraic semantics approach to the effective resolution of type equations  . Theoretical Computer Science , 45:293-351 . 
Borgida , Alexander ; Brachman , Ronald J . ; McGuinness , Deborah L . and Resnick , Lori
A .  (1989) . CLASSIC : A structural data model for objects . In Proceedings of the SIGMOD International Conference on 
Management of Data , Portland , Oregon.
Borgida , Alex and Etherington , David W.
(1989) . Disjunction in inheritance hierarchies . In Proceedings of the First International Conference on Principles of Knowledge Representation and Reasoning  , pages 33--43 . Morgan Kanfmann . 
Brachman , Ronald J .  (1979) . On the episte-mological status of semantic networks  . In Findler , N . , editor , Associative Networks : Representation and Use of Knowledge by Computers  , pages 3-50 . Academic Press . 
Brachman , Ronald J . and Schmolze , James G.
(1985) . An overview of the KL-ONE knowledge representation system  . Cognitive Science , 9:171-216 . 
Carpenter , Bob (1990) . Typed feature structures : Inheritance , ( in ) equations and exten-sionality . In Proceedings of the First International Workshop on Inheritance in Natural Language Processing  ,  913 , Tilburg , 
The Netherlands.

Carpenter , Bob ; Pollard , Carl and Franz , Alex (1991) . The specification and implementation of constraint-based unification grammars  . In Proceedings of the Second International Workshop on Parsing Technology  , 
Cancun , Mexico.
Carpenter , Bob and Thomason , Richmond (1990) . Inheritance theory and pathbased reasoning : An introduction  . In Kyburg , Jr . , Henry E . ; Loui , Ronald P . and Carlson , Greg N . , ( ed . ) , Defeasible Reasoning and Knowledge Representation  , volume 5 of Studies in Cognitive Systems ,  309-344 . 

Davey , B . A . and Priestley , H . A .  (1990) . Introduction to Lattices and Order . Cambridge
University Press.
Flickinger , Daniel ; Pollard , Carl J . and Wasow , Thomas (1985) . Structure-sharing in lexical representation . I Proceedings of the ~3rd Annual Conference of the Association for Computational Linguistics  . 
Gunter , Carl and Scott , Dana S . ( in press ) . Semantic domains . In Theoretical Computer
Science . North-Holland.
Kasper , Robert T .  (1989) . Unification and classification : An experiment in information-based parsing  . In First International Workshop on Parsing Technologies  ,  17 . Pittsburgh . 
King , Paul (1989). A Logical Formalism for
Head-Driven Phrase Structure Grammar.
PhD thesis , University of Manchester.
Kress , Gunther ( ed . )  ( 1976 ) Halliday : System and Function in Language . University of
Oxford Press.
MacGregor , Robert (1988) . A deductive pattern matcher . In Proceedings of the 1988 National Conference on Artificial Intelligence , pages 403-408 , St . Paul , Minnesota . 
Mellish , Christopher S .  (1988) . Implementing systemi classification via unification  . 
Computational Linguistics , 14:40-51.
Nebel , Bernhard and Smolka , Gert (1989).
Representation adn reasoning with attributive descriptions  . IWBS Report 81, IBM-
Deutschl and GmbH , Stuttgart.
Pollard , Carl J . ( in press ) . Sorts in unification-based grammar and what they mean  . In Pinkal , M . and Gregor , B . , editors , Unification in Natural Language Analysis . MIT

Pollard , Carl J . and Sag , Ivan A . (1987).
Information-Based Syntax and Semantics :
Volume I-Fundamentals , volume 13 of
CSLI Lecture Notes . Chicago University

Winograd , Terry (1983) . Language as a Cognitive Process : Volume I- Syntax  . Addison-


