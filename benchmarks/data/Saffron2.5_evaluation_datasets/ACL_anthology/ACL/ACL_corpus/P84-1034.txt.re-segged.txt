APROPERTREAT MEMTOFSYNTAX ANDSEMANTICS IN MACHINETRANS LATION 
?oshihiko Nitta , Atsushi Okajima , Hiroyuki Kaji,
Youichi Hidano , Koichiro Ishihara
Systems Development Laboratory , Hitachi , Ltd.
1099 Ohzen ji Asao-ku , Kawasaki-shi , 215 JAPAN

A proper treatment of syntax and semantics in machine translation is introduced and discussed from the empirical viewpoint  . For English-Japanese machine translation , the syntax directed approach is effective where the Heuristic Parsing Model  ( HPM ) and the Syntactic Role System play important roles  . For JapaneseEnglish translation , the semantics directed approach is powerful where the Conceptual Dependency Diagram  ( CDD ) and the Augmented Case Marker System ( which is a kind of Semantic Role System ) play essential roles . Some examples of the difference between Japanese sentence structure and English sentence structure  , which is vital to machine translation ~ are also discussed together with various interesting ambiguities  . 
IINTRODUCTION
We have been studying machine translation between Japanese and English for several years  . 
Experiences gained in systems development and in linguistic data investigation suggest that the essential point in constructing a practical machine translation system is in the appropriate blending of syntax directed processing and the semantics directed processing  . 
In order to clarify the abovementioned suggestion , let us compare the characteristics of the syntax directed approach with those of the semantics directed approach  . 
The advantages of the syntax directed approach are as follows:  ( i ) It is not so difficult to construct the necessary linguistic data for syntax directed processors because the majority of these data can be reconstructed from already established and well -structured lexical items such as verb pattern codes and parts of speech codes  , which are overflowingly abundant in popular lexicons  . 
(2 ) The total number of grammatical rules necessary for syntactic processing usually stays within a controllable range  . 
(3 ) The essential aspects of syntactic processing are already wellknown  , apart from efficiency problems . 
The disadvantage of the syntax directed approach is its insufficient ability to resolve various ambiguities inherent in natural languages  . 
On the other hand , the advantages of the semantics directed approach are as follows:  ( i ) The meaning of sentences or texts can be grasped in a unified form without being affected by the syntactic variety  . 
(2 ) Semantic representation can play a pivotal role for language transformation and can provide a basis for constructing a transparent machine translation system  , because semantic representation is fairly independent of the differences in language classes  . 
(3) Consequently , semantics directed internal representation can produce accurate translations  . 
The disadvantages of the semantics directed approach are as follows:  ( I ) It is not easy to construct a semantic lexicon which covers realworld phenomena of a reasonably wide range  . The main reason for this difficulty is that a well-established and widely-accepted method of describing semantics does not exist  . ( For strongly restricted statements or topics , of course , there exist well-elaborated methods such as Montague grammar  \[2\]  , Script and MOP ( Memory Organization Packet ) theory \[13\] , Procedural Semantics\[14\] , and Semantic Interlingual Representation \[15\] . ) (2) The second but intractable problem is that , even if you could devise a fairly acceptable method to describe semantics  , the total number of semantic rule descriptions may expand beyond all manageable limits  . 
Therefore , we think that it is necessary to seek proper combinations of syntactic processing and semantic processing so as to compensate for the disadvantages of each  . 
The purpose of this paper is to propose a proper treatment of syntax and semantics in machine translation systems from a heuristic viewpoint  , together with persuasive examples obtained through operating experiences  . A sublanguage approach which would put some moderate restrictions on the syntax and semantics of source language is also discussed  . 

IISYNTAXAND SEMANTICS
It is not entirely possible to distinguish a syntax directed approach from a semantics directed approach  , because syntax and semantics are always performing their linguistic functions reciprocally ? As Wilks  \[16\] points out , it is plausible but a great mistake to identify syntactic processing with superficial processing  , or to identify semantic processing with deep processing  . The term " superficial " or " deep " only reflects the intuitive distance from the language representation in  ( superficial ) character strings or from the language representation in our  ( deep ) minds . 
Needless to say , machine translation inevitably has something to do with superficial processing ? In various aspects of natural language processing  , it is quite common to segment a superficial sentence into a collection of phrases ? A phrase itself is a collection of words ? In order to restructure the collection of phrases  , the processor must first of all attach some sorts of labels to the phrases ? If these labels are something like subject  , object , complement , etc . , then we will call this processor a syntax directed processor  , and if these labels are something like agent , object , instrument , etc . , or animate , inanimate , concrete , abstract , human , etc . , then we will call this processor a semantics directed processor ? The above definition is over simplified and of course incomplete  , but it is still enough for the arguments in this paper ? 
IIISYNTAX DIRECTED APPROACH :
APROTOTYPEENGLISH-JAPANESE
MACHINETRANS LATION SYSTEM
So far we have developed two prototype machine translation systems  ; one is for English-Japanese translation \[6\] and the other is for Japanese-
English translation ?
The prototype model system for English-
Japanese translation ( Figure I ) is constructed as a syntax directed processor using a phrase structure type internal representation called HPM  ( Heuristic Parsing Model )  , where the semantics is utilized to disambiguate dependency relationships ? The somewhat new name HPM  ( Heuristic Parsing Model ) reflects the parsing strategy by which the machine translation tries to simultate the heuristic way of actual human of language translation ? The essential features of heuristic translation are summarized in the following three steps :  ( I ) To segment an input sentence into phrasal elements  ( P  E ) and clausal elements ( CE )  . 
(2) To assign syntactic roles to PE's and CE's , and restructure the segmented elements into tree -forms by governing relation  , and into link-forms by modifying relation ? ( 3 ) To permute the segmented elements , and to assign appropriate Japanese equivalents with necessary case suffixes and postpositions  . 
Noteworthy findings from operational experience and efforts to improve the prototype model areas follows: 
Lexicons \[7\] entry : ? word ? phrase ? idiom ? etc . 
I description : ? attribute ? Japanese equivalent ? controlling marks for analysis  , transformation and generation ? etc . 
Input English Sentence
I Lexicon Retrieval I__~'~'----"---'~ IMorphological Analysis-llnternal Language' I Representation 
OonHPM\]~Syntactic Analysis\[based on HPM \] 
Tree/Link Transformation\[Sentence Generation ~ Morphological Synthesis = IF ? adjustment of tense and lmodei!\[Parsed~?assignment of Tree/Link\[L postpositions J- 

Postediting Support I_~\[' solution to manifold \]\[ meanings J  1  ~ . .

Output Japanese Sentence
Figure 1 Configuration of Machine Translation System : ATHENE  \[6\] ? WE : Word Element ? PE ; Phrasal Element ' CP : Clausal Element ? SE : Sentence ? This sample English sentence is taken from Datamation Jan  .  1982 . 
Figure 2 An Example of Phrase Structure Type Representation  ( I ) The essential structure of English sentences should be grasped by phrase structure type representations  . 
An example of phrase strucure type representation , which we call HPM ( Heuristic Parsing Model ) , is illustrated in Figure 2 . In Figure 2 , a parsed tree is composed of two substructures . One is " tree (~/) , " representing a compulsory dependency relation , and the other is " link ( k ~) , " representing an optional dependency relation . Each node corresponds to a certain constituent of the sentence  . 
The most important constituent is a " phrasal element  ( P  E ) " which is composed of one or more word element ( s ) and carries a part of the sentential meaning in the smallest possible form  . PE's are mutually exclusive . In Figure 2 , PE's are shown by using the " segmenting marker ( T ) " , such as
T With some help ( ADVL)\[ , \[ from overseas ( ADJV)\[j

T the Japanese ( SUBJ)T and
T are beginning ( GOV ) T , where the terminologies in parentheses are the syntactic roles which will be discussed later  . 
A " clausal element ( CE ) " is composed of one or more PE ( ' s ) which carries a part of sentential meaning in a nexus-like form  . ACE roughly corresponds to a Japanese simple sentence such as : "% wa/ga/wo/n i ~ suru /dearu\[koto\]  . " CE's allow mutual intersection . Typical examples are the underlined parts in the following : " It is important for you to do so  . " " . . . intended to yield a fifth generation system . "One interesting example in Figure 2 may be the part " With some help from overseas " , which is treated as only two consecutive phrasal elements  . This is the typical result of a syntax directed parser  . In the case of a semantics directed parser , the abovementioned part will be treated as a clausal element  . This is because the meaning of this part is " ( by ) getting some help from overseas " or the like , which is rather clausal than phrasal . 
(2 ) Syntax directed processors are effective and powerful to get phrase structure type parsed trees  . 
Our HPM parser operates both in a topdown way globally and in a bottom-up way locally  . An example of topdown operation would be the segmentation of an input sentence  ( i . e . the sequence of word elements ( WE's ) ) to get phrasal elements ( P  E )  , and an example of bottom-up operation would be the construction of tree-forms or link-forms to get clausal elements  ( CE ) or a sentence ( SE )  . These operations are supported by syntax directed grammatical data such as verb dependency type codes  ( cf . Tablei , which is a simplified version of Horn by's classification  \[5\]  )  , syntactic role codes ( Table 2 ) and some production rule type grammars ( Table 3& Table 4 )  . It may be permissible to say that all these syntactic data are fairly compact and the kernel parts are already well-elaborated  ( cf . \[ i \],\[8\],\[ ii \],\[12\]) . 





















Table 1Dependency Pattern of Verb
Verb Pattern
B e + ...
Vi(#Be ) + Complement,
It/There+Vi + ...
Vi\[+AdverbialModifier\]
Vt+To-infinitive
Vt + Object vt + that + ...
Vt+Object\[+not\]+

Examples be get , look rise ~ walk intend begin ~ yield agree , think know , bring
Table 2 Syntactic Roles



Object in To-infinitive Form
Noun in Apposition
Governing Verb
Governing Verb in To-infinitive Form
Governing Verb in Past Participle Form

Adjectival in Past Participle Form

Sentence ( 3 ) The weak point of syntax directed processors is their insufficient ability to disambiguate  ; i . e . the ability to identify dependency types of verb phrases and the ability to determine heads of prepositional phrase modifiers  . 
(4 ) In order to boost the aforementioned disambiguation power  , it is useful to apply semantic filters that facilitate the selective restrictions on linking a verb with nominals and on linking a modifier with its head  . 
A typical example of the semantic filter is illustrated in Figure  3  . The semantic filter may operate along with selective restriction rules such as : ?  N22   ( Animal ) + with + N753 ( Accessory ) 
Plausible\[':N22 is equipped with N753\]?V21 ( Watching-Action ) + with + N5 41 ( Watching Instrument ) ~OK\[vV21 by using N541 as an instrument \]
The semantic filter is not complete , especially for metaphorical expressions . Abird could also use binoculars . 
Table 3 Rules for Assigning Syntactic Roles to Phrasal Elements Pattern to be Scanned New Pattern to be Generated 
TOGOV ~+ OBJ *: focus , --: not mentioned , ~: empty ,  \[ . . . \]: optional Table 4 Rules for Constructing Clausal Elements Pattern to be Scanned New Element to be Generated 
I*\[SENT
He sawabird with binoculars ?

IIIf > ( a ) and ( d ) are plausible.
* X ~_.. Y implies that XJs modified by Y .
Figure 3 A Typical Operation of Semantic Filter ( 5 ) The aforementioned semantic filters are compatible with syntax directed processors  ; i . e . 
there is no need to reconstruct processors or to modify internal representations  . It is only necessary to add filtrating programs to the syntax directed processor  . 
One noteworthy point is that the thesaurus for controlling the semantic fields or semantic features of words should be constructed in an appropriate form  ( such as word hierarchy ) so as to avoid the socalled combinatorial explosion of the number of selective restriction rules  . 
(6 ) For the Japaneses sentence generating process , it may be necessary to devise a very complicated semantic processor if a system to produce natural idiomatic Japanese sentences is desired  . But the majority of Japanese users may tolerate awkward word-by-word translation and understand its meaning  . Thus we have concluded that our research efforts should give priority to the syntax directed analysis of English sentences  . The semantics directed generation of Japanese sentences might not be an urgent issue  ; rather it should be treated as a kind of profound basic science to be studied without haste  . 
(7 ) Even though the output Japanese translation may be a nawkward word-by-word translation  , it should be composed of pertinent function words and proper equivalents for content words  . 
Otherwise it could not express the proper meaning of the input English sentences  . 
(8) In order to select proper equivalents , semantic filters can be applied fairly effectively to test the agreement among the semantic codes assigned to words  ( or phrases )  . 
Again the semantic filter is not always complete . For example , in Figure 2 , the verb " yield " has at least two different meanings  ( and consequently has at least two different Japanese equivalents  ) : " yield " --> I " produce " ( ffiU midasu ) \[" concede " ( ffi Yuzuru )  . 
But it is neither easy nor certain how to devise a filter to distinguish the above two meanings mechanically  . Thus we need some human aids such as postediting and inter-editing  . 
(9 ) As for the pertinent selection of function words such as postpositions  , there are no formal computational rules to perform it  . So we must find and store heuristic rules empirically and then make proper use of them  . 
Some heruistic rules to select appropriate Japanese postpositions are shown in Table  5  . 
Table 5 Heuristic Rules for Selecting
Postpositions for " in + N "
Semantic Japanese Postpositions for
Category of NADVL/ADJV in + Nl ( Nlf Place ) Nl+de/Nl+niokeruin+N3 ( N3=Time ) N3+ni/N3+noin+N3&N4--/N3&Nd+go-ni ( Nd = Quantit ~ ) in+N6N 6? de wa/N 6+ no ( N6 fAb stract
Concept ) in + N8 ( N8f fiMeans ) NS+de/NS+niyoru ? No rules . + de/+no ? A kind of + wo-kite/idiom \[7\] to + wo-kitabe retrieved + wo-kakete/directly from + wo-kake taa lexicon  . 
English Examples in California in Spring in two days in my opinion in Z-method  ( speak ) in English in uniform inspectacles ( i0 ) To get back to the previous findings ( I ) and ( 2 )  , the heuristic approach was also found to be effective in segmenting the input English sentence into a sequence of phrasal elements  , and in structuring them into a tree-llke dependency diagram  ( cf . Figure 2) . 
( Ii ) A practical machine translation should be considered from a kind of heuristic viewpoint rather than from a purely rigid analytical linguistic viewpoint  . One persuasive reason for this is the fact that humans  , even foreign language learners , can translate fairly difficult English sentences without going into the details of parsing problems  . 
IVSEMANTICS DIRECTED APPROACH :
APROTOTY PEJAPANESE-ENGLISH
MACHINETRANS LATION SYSTEM
The prototype model system for Japanese-Engli sh translation is constructed as a semant ics directed processor using a conceptual dependency diagram as the internal representation  . 
Noteworthy findings through operational experience and efforts to improve on the prototype model are as follows : the Japanese language  , such as flexible word ordering and ambiguous usage of function words  , it is not advantageous to adopt a syntax directed representation for the internal base of language transformation  . 
For example , the following five Japanese sentences have almost the same meaning except for word ordering and a subtle nuance  . Lowercase letters represent function words . 
Bokuwa Fude de Tegamiwo Kaku.
(11 ( brush ) ( with ) ( letter ) ( write)
Bokuwategami wo Fude de Kaku.
Fude de Bokuwa Tegamiwo Kaku.
Tegamiwa Bokuwa Fude de Kaku.
Bokuwa Tegamiwa Fude de Kaku.
(2 ) Therefore we have decided to adopt the conceptual dependency diagram  ( CDD ) as a compact and powerful semantics directed internal representation  . 
Our idea of the CDD is similar to the wellknown dependency grammar defined by Hays  \[4\] and Robinson \[9\]  \[  i0\]  , except for the augmented case markers which play essentially semantic roles  . 
( 31 The conceptual dependency diagram for Japanese sentences is composed of predicate phrase nodes  ( PPNs in abbreviation l and nominal phrase nodes ( NTNs in abbreviation )  . Each PPN governs a few NPNs as its dependants . Even among PPNs there exist some governor -dependant relationships  . 
Examples of formal CDD description are :
PPN(NPNI , NPN2, . . . N-PNnl,
Kaku ( Boku , Te~ami , Fude),
Write(I , Letter , Brus--~'~ , where the underlined word " ~' represents them concept code corresponding to the superficial word " a "  , and the augmented case markers are omitted . 
In the avove description , the order of dependants NI , N2 ,   . . . , Nn are to be neglected . 
For example,
PPN(NPNn , . . . , NPN2 , NPNI ) is identical to the above first formula . This convention may be different from the one defined by Hays  \[4\]  . Our convention was introduced to cope with the abovementioned flexible word ordering in Japanese sentences  . 
(4 ) The aforementioned dependency relationships can be represented as a linking topology  , where each link has one governor node and one dependant node as its top and bottom terminal point  ( Figure 4 )  . 
(5) The links are labeled with case markers.
Our case marker system is obtained by augmenting the traditional case markers such as Fillmore's  \[3\] from the standpoint of machine translation . 
For the PPN-NPN link , its label usually represents agent , object , goal , location , topic , etc . For the PPN-PPN link , its label is usually represent causality , temporality , restrictiveness , etc . ( cf . Figure 4) . 

PPN ~' C4--~Kaku Write__-~ . J / T0\  /  T0 NP NINPN 2 NPN 3   8oku Tegaml Fude I Letter Brush * CI : case markar Figure  4 Examples of a Conceptual Dependency
Diagram ( CDD )   ( 6 ) As for the total number of case markers , our current conclusion is that the number of compulsory case markers to represent predicat ive dominance should be small  , say around 20 ; and that the number of optional case markers to represent adjective or adverbial modification should be large  , say from 50 to 70 ( Table 6) . 
(7 ) The reason for the large number of optional case markers is that the detailed classification of optional cases is very useful for making an appropriate selection of prepositions and participles  ( Table 7 )  . 
( g ) Each NPN is to be labeled with some properly selected semantic features which are under the control of a thesaurus type lexicon  . Semantic features are effective to disambiguate predicative dependency so as to produce an appropriate English verb phrase  . 
(9 ) The essential difference between a Japanese sentence and the equivalent English sentence can be grasped as the difference in the mode of PPN selections  , taken from the viewpoint of conceptual dependency diagram  ( Figure 51 . Once an appropriate PPN selection is made , it will be rather simple and mechanical to determine the rest of the dependency topology  . 
(I0 ) Thus the essential task of JapaneseEnglish translation can be reduced to the task of constructing the rules for transforming the dependency topology by changing PPNs  , while preserving the meaning of the original dependency topology  ( cf . Figure 5) . 
(Ill All the aforementioned findings have something to do with the semantic directed approach  . Once the English oriented conceptual dependency diagram is obtained  , the rest of the translation process is rather syntactic  . That is , the phrase structure generation can easily be handled with somewhat traditional syntax directed processors  . 
164 (12) As is wellknown , the Japanese language has a very high degree of complexity and ambiguity mainly caused by frequent ellipsis and functional multiplicity  , which creates serious obstacles for the achievement of a totally automatic treatment of " raw " Japanese sentences  . 
( exi ) " Sakanawa Taberu . "  ( fish )   ( eat ) has at least two different interpretations : ?"\ [ Sombody\]cane at a fish  . "  . " The fish may eat \[ something \] . " Table 6 Case Markers for CDD ( subset only )
Predicative AAgent
Dominance 0 Object ( Compulsory ) CC omplement
R Recipient
ACA gent in Causative
TTheme , Topic ( Mental Subject)
PP artner
Q Quote
RIRange of Interest
RQRange of Qualification
RM Range of Mention
IInstrument
E Element
Adverbial CT Goal in Abstract Collection Modification CF Source in Abstract Collection  ( Optional ) TP Point in Time Adjective ET Embedding Sentence Type Modifier 
Modification whose gapping is Theme ( Optional ) EA whose gapping is Agent
EO whose gapping is Object
Link and ~" ilnking through " AND "
Conjunction BT Conjunction through " BUT " ( Optional )   .   .   .   .   .   .   .   .   . 
( ex2) " Kawaii Ningyouwo Motteiru Onnanoko . "  ( lovely )   ( doll )   ( carry )   ( girl ) has also two different interpretations : " The lovel ~ ~ irl who carries a doll with her  . " " The girl who carries a lovel\[doll with her . "  ( 13 ) Thus we have judged that some sub-Japanese language should be constructed so a store str ict the input Japanese sentences within a range of clear tractable structures  . The essential restrictions given by the sublanguage should be concerned with the usage of function words and sentential embeddings  . 
Table 7 Detailed Classification of Optional Case Markers for Modification  ( subset only ) Phase Code Most-Likely Prepositions or Participles 















WI?..
from to , till during at in , insideout , outside over , above under , below beside before , in front of after , behind along through over , superior to a part from within . Case Marker EBody Code + Phase Code ? Body Code ~ T  ( = Time ) IS ( = Space ) IC ( = Collection ) ? Kasoukioku-~usesu-Hounlyorl , Dalyouryou-Deitaset to eno Kourltsuno Yol Nyushutsuryokuga Kanounl Naru  . 
~ Analysls ~4)'
Ji \] I Iiloon I , Ival . or ? ? IUf 7~ it a set to IITJ " .   .   .   .   .   .   . ~/ ~ A5)"
Naru (- Become ) - type CDD
Transformation > " The virtual storage access method enables the efficient input-output processing to a large capacity dataset  . 
~ Generatlon 4)
I enable I access method processing/3)\5)
Suru (= Make)-type CDD
Figure 5 Difference between Japanese and English Grasped Through CDD users  , if a Japanese-Engllsh translation system is used as an English sentence composing aid for 
Japanese people.
VCONCLUSION
We have found that there are some proper approaches to the treatment of syntax and semantics from the viewpoint of machine translation  . Our conclusions are as follows: ( i ) In order to construct a practical English -Japanese machine translation system  , it is advantageous to take the syntax directed approach  , in which a syntactic role system plays a central role  , together with phrase structure type internal representation  ( which we call HPM )  . 
(2) In English-Japanese machine translation , syntax should be treated in a heuristic manner based on actual human translation methods  . 
Semantics plays an assistant role in disambiguating the dependency among phrases  . 
(3) In English-Japanese machine translation , an output Japanese sentence can be obtained directly from the internal phrase structure representation  ( HPM ) which is essentially a structured set of syntactic roles  . Output sentences from the above are , of course , a kind of literal translation of stilted style , but no doubt they are understandable enough for practical use  . 
(4) In order to construct a practical
JapaneseEnglish machine translation system , it is advantageous to take the approach in which semantics plays a central role together with conceptual dependency type internal representation  ( which we call CDD )  . 
(5) In JapaneseEnglish machine translation , augmented case markers play a powerful semantic role  . 
(6) In JapaneseEnglish machine translation , the essential part of language transformation between Japanese and English can be performed in terms of changing dependency diagrams  ( CDD ) which involves predicate replacements . 
One further problem concerns establishing a practical method of compensating a machine translation system for its mistakes or limitations caused by the intractable complexities inherent to natural languages  . This problem may be solved through the concept of sublanguage  , pre-editing and postediting to modify source /target languages  . The sub-Japanese language approach in particular seems to be effective for JapaneseEnglish machine translaton  . One of our current interests is in a proper treatment of syntax and semantics in the sublanguage approach  . 

We would like to thank Prof . M . Nagao of Kyoto University and Prof . H . Tanaka of Tokyo Institute of Technology , for their kind and stimulative discussion on various aspects of machine translation  . Thanks are also due to Dr . J . 
Kawasaki , Dr . T . Mitsumaki and Dr . S . Mitsumori of 5DL Hitachi Ltd . for their constant encouragement to this work , and Mr . F . Yamano and Mr . A . Hirai for their enthusiastic assistance in programming  . 
REFERENCES\[i \] Chomsky , N . , Aspects of the Theory of Syntax ( MIT Press , Cambridge , MA ,  1965) . 
\[2\] Dowty , D . R . et . al . , Introduction to Montague Semantics ( D . Reidel Publishing Company , Dordrecht : Holland , Boston : U . S . A . , London:
England , 1981)\[3\] Fillmore , C . J . , The Case for Case , in : Bach and Harms ( eds . ) , Universals in Linguistic Theory , ( Holt , Reinhart and Winston , 1968)1-90\[4\] Hays , D . G . , Dependency Theory : A Formalism and Some Observations  , Language , vol . 40, no . 4 (1964) 511-525\[5\]Horn by,A . S . , Guide to Patterns and Usage in English , second edition ( Oxford University
Press , London , 1975).
\[6\]Nitta , Y . , Okajlma , A . et . al . , A Heuristic Approach to English-into-Japanese Machine Translation  , COLING-82 , Prague (1982) 283-288\[7\] Okajima , A . , Nitta , Y . at . al . , Lexicon Structure for Machine Translation , ICTP-83 , 
Tokyo (1983) 252-255\[8\] Quirk et . al . , A Grammar of Contemporary English ( Longman , London ; Seminar Press , New
York , 1972).
\[9\] Robinson , J . J . , Case , Category and Configuration , Journal of Linguistics , vol . 6 no . l(1970) 57-80\[I0\] Robinson , J . J . , Dependency Structures and Transformational Rules  , Language , voi . 46, no . 2 (1970) 259-25\[ii \] Robinson , J . J . , DIAGRAM : A Grammar for Dialogues , Co = ~ m . ACM voi . 25, no . l(1982) 2747 . 
\[12\] Sager , N . , Natural Language Information Processing ( Addison Wesley , Reading , MA . , 1981) . 
\[13\]S chank , R . C . , Reminding and Memory Organization : An Introduction to MOPs  , in:
Lehnert W.C . and Ringle , M.H.(ads.),
Strategies for Natural Language Processing ( Lawrence Erlbaum Associates , Publishers , Hillsdale , New Jersey , London , 1982) 455-493\[14\] Wilks , Y . , Some Thoughts on Procedural
Semantics , in : ibid . 495-521\[15\]Wilks,Y . , An Artificial Intelligence Approach to Machine Translation  , in : Schank , R . C . and Colby , K . M . ( ads . ), Computer Models of Thought and Language ( W . H . Freeman and
Company , San Francisco , 1973) 114-151\[16\] Wilks , Y . , Deep and Superficial Parsing , in : King , M . ( ed . ) , Parsing Natural Language ( Academic Press , London ,  1983) 219-246
