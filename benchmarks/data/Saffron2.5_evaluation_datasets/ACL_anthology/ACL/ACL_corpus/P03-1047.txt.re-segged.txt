Bridging the Gap Between Underspecification Formalisms : 
Minimal Recursion Semantics as Dominance Constraints 
Joachim Niehren
Programming Systems Lab
Universita?t des Saarlandes

Stefan Thater
Computational Linguistics
Universita?t des Saarlandes


Minimal Recursion Semantics ( MRS ) is the standard formalism used in largescale
HPSG grammars to model underspecified semantics . We present the first provably efficient algorithm to enumerate the readings of MRS structures  , by translating them into normal dominance constraints  . 
1 Introduction
In the past few years there has been considerable activity in the development of formalisms for underspecified semantics  ( Alshawi and Crouch , 1992; Reyle , 1993; Bos , 1996; Copestake et al , 1999; Egg et al ,  2001) . The common idea is to delay the enumeration of all readings for as long as possible  . Instead , they work with a compact underspecified representation  ; readings are enumerated from this representation by need  . 
Minimal Recursion Semantics ( MRS )   ( Copestake et al ,  1999 ) is the standard formalism for semantic underspecification used in largescale HPSG grammars  ( Pollard and Sag , 1994; Copestake and Flickinger ,  ) . Despite this clear relevance , the most obvious questions about MRS are still open :  1  . Is it possible to enumerate the readings of MRS structures efficiently ? No algorithm has been published so far  . Existing implementations seem to be practical , even though the problem whether an MRS has a reading is NP-complete  ( Althaus et al ,  2003 , Theorem 10 . 1) . 
2 . What is the precise relationship to other underspecification formalism ? Are all of them the same  , or else , what are the differences ? We distinguish the sublanguages of MRS nets and normal dominance nets  , and show that they can be intertranslated . This translation answers the first question : existing constraint solvers for normal dominance constraints can be used to enumerate the readings of MRS nets in low polynomial time  . 
The translation also answers the second question restricted to pure scope underspecification  . It shows the equivalence of a large fragment of MRSs and a corresponding fragment of normal dominance constraints  , which in turn is equivalent to a large fragment of Hole Semantics  ( Bos , 1996) as proven in ( Koller et al ,  2003) . Additional underspecified treatments of ellipsis or reinterpretation  , however , are available for extensions of dominance constraint only  ( CLLS , the constraint language for lambda structures ( Egg et al ,  2001)) . 
Our results are subject to a new proof technique which reduces reasoning about MRS structures to reasoning about weakly normal dominance constraints  ( Bodirsky et al ,  2003) . The previous proof techniques for normal dominance constraints  ( Koller et al , 2003) do not apply . 
2 Minimal Recursion Semantics
We define a simplified version of Minimal Recursion Semantics and discuss differences to the original definitions presented in  ( Copestake et al ,  1999) . 
MRS is a description language for formulas of first order object languages with generalized quantifiers  . Underspecified representations in MRS consist of elementary predications and handle constraints  . 
Roughly , elementary predications are object language formulas with ? holes ? into which other formulas can be plugged  ; handle constraints restrict the way these formulas can be plugged into each other  . 
More formally , MRSs are formulas over the following vocabulary :   1  . Variables . An infinite set of variables ranged over by h . Variables are also called handles . 
2 . Constants . An infinite set of constants ranged over by x , y , z . Constants are the individual variables of the object language  . 
3. Function symbols.
( a ) A set of function symbols written as P.
( b ) A set of quantifier symbols ranged over by Q ( such as every and some )  . Pairs Qx are further function symbols ( the variable binders of x in the object language )  . 
4. The symbol ? for the outscopes relation.
Formulas of MRS have three kinds of literals , the first two are called elementary predications ( EPs ) and the third handle constraints : 1 . h : P ( x1, .   .   . , xn , h1, .   .   . , hm ) where n,m ?02 . h:Qx(h1, h2) 3 .   h1  ?  h2 Label positions are to the left of colons ?: ? and argument positions to the right  . Let M be a set of literals . 
The label set lab ( M ) contains those handles of M that occur in label but not in argument position  . The argument handle set arg ( M ) contains the handles of M that occur in argument but not in label position  . 
Definition 1 ( MRS ). An MRS is finite set M of
MRS-literals such that:
M 1 Every handle occurs at most once in label and at most once in argument position in M  . 
M 2 Handle constraints h1  ?  h2 in M always relate argument handles h1 to labels h2 of M . 
M3 For every constant ( individual variable ) x in argument position in M there is a unique literal of the form h : Qx  ( h1 , h2) in M . 
We call an MRS compact if it additionally satisfies :  M4 Every handle of M occurs exactly once in an elementary predication of M  . 
We say that a handle h immediately outscopes a handle h ? in an MRSM iff there is an EPE in M such that h occurs in label and h ? in argument position of E  . The outscopes relation is the reflexive , transitive closure of the immediate outscopes relation  . 
every x student x read x , ysome y booky h1: every x(h2 , h4) , h3: student(x ) , h5: some y(h6 , h8) , h7: book(y ) , h9: read(x , y) , h2 ? h3 , h 6  ?  h7 Figure 1: MRS for ? Every student reads a book ? . 
An example MRS for the scopally ambiguous sentence ? Every student reads a book ? is given in Fig  .  1 . We often represent MRSs by directed graphs whose nodes are the handles of the MRS  . Elementary predications are represented by solid edges and handle constraints by dotted lines  . Note that we make the relation between bound variables and their binders explicit by dotted lines  ( as from every x to read x , y ) ; redundant ? binding-edges ? that are subsumed by sequences of other edges are omitted however  ( from every x to student x for instance )  . 
A solution for an underspecified MRS is called a configuration  , or scope-resolved MRS . 
Definition 2 ( Configuration ) . An MRSM is a configuration if it satisfies the following conditions  . 
C 1 The graph of M is a tree of solid edges : handles don?t properly outscope themselves or occur in different argument positions and all handles are pairwise connected by elementary predications  . 
C2 If two EPsh:P ( .   .   . , x , .   .   . ) and h0:Qx(h1 , h2) belong to M , then h0 outscopes h in M ( so that the binding edge from h0 to his redundant )  . 
We call Maconfiguration for another MRSM ? if there exists some substitution ?: arg  ( M ? ) 7? lab ( M ? ) which states how to identify argument handles of M ? with labels of M ?  , so that :
C3M = ?( E ) E is EP in M ?, and
C4?(h1) outscopes h2 in M , for all h1 ? h2 ? M ? . 
The value ? ( E ) is obtained by substituting all argument handles in E  , leaving all others unchanged . 
The MRS in Fig .   1 has precisely two configurations displayed in Fig  .   2 which correspond to the two readings of the sentence  . In this paper , we present an algorithm that enumerates the configurations of 
MRSs efficiently.
every x student x some y booky read x , y some y booky every x student x read x , y
Figure 2: Graphs of Configurations.
Differences to Standard MRS . Our version departs from standard MRS in some respects  . First , we assume that different EPs must be labeled with different handles  , and that labels cannot be identified . In standard MRS , however , conjunctions are encoded by labeling different EPs with the same handle  . These EP-conjunctions can be replaced in a preprocessing step introducing additional EPs that make conjunctions explicit  . 
Second , our outscope constraints are slightly less restrictive than the original ? qeq-constraints  . ? A handle his qeq to a handle h ? in an MRSM , h = q h ? , if either h = h ? or a quantifier h : Qx(h1 , h2) occurs in M and h2 is qeq to h ? in M . Thus , h = q h ? implies h ? h ? , but not the other way round . We believe that the additional strength of qeq -constraints is not needed in practice for modeling scope  . Recent work in semantic construction for HPSG ( Copestake et al . , 2001 ) supports our conjecture : the examples discussed there are compatible with our simplification  . 
Third , we depart in some minor details : we use sets instead of multisets and omit top-handles which are useful only during semantics construction  . 
3 Dominance Constraints
Dominance constraints are a general framework for describing trees  , and thus syntax trees of logical formulas . Dominance constraints are the core language underlying CLLS  ( Egg et al ,  2001 ) which adds parallelism and binding constraints . 
3.1 Syntax and Semantics
We assume a possibly in finite signature ? of function symbols with fixed arities and an in finite set Var of variables ranged over by X  , Y , Z . We write f , g for function symbol s and ar ( f ) for the arity of f . 
A dominance constraint ? is a conjunction of dominance  , inequality , and labeling literals of the following forms where ar  ( f ) = n : ? : := X/?Y X 6= Y X : f ( X 1 ,   .   .   .   , X n ) ???? Dominance constraints are interpreted over finite constructor trees  , i . e . ground terms constructed from the function symbols in ?  . We identify ground terms with trees that are rooted  , ranked , edge-ordered and labeled . A solution for a dominance constraint consists of a tree ? and a variable assignment ? that maps variables to nodes of ? such that all constraints are satisfied : a labeling literal X : f  ( X 1 ,   .   .   .   , X n ) is satisfied iff the node ? ( X ) is labeled with f and has daughters ? ( X 1 )  ,   .   .   .   , ?( Xn ) in this order ; a dominance literal X/?Y is satisfied iff ? ( X ) is an ancestor of ? ( Y ) in ? ; and an inequality literal X 6=Y is satisfied if f ? ( X ) and ? ( Y ) are distinct nodes . 
Note that solutions may contain additional material  . The tree f(a , b ) , for instance , satisfies the constraint Y : a ? Z : b . 
3.2 Normality and Weak Normality
The satisfiability problem of arbitrary dominance constraints is NP-complete  ( Koller et al , 2001) in general . However , Althaus et al ( 2003 ) identify a natural fragment of socalled normal dominance constraints  , which have a polynomial time satisfiability problem  . Bodirsky et al ( 2003 ) generalize this notion to weakly normal dominance constraints  . 
We call a variable a hole of ? if it occurs in argument position in ? and a root of ? otherwise  . 
Definition 3 . A dominance constraint ? is normal ( and compact ) if it satisfies the following conditions . 
N 1 ( a ) each variable of ? occurs at most once in the labeling literals of ?  . 
( b ) each variable of ? occurs at least once in the labeling literals of ?  . 
N2 for distinct roots X and Y of ?, X 6= Y is in ?.
N3(a ) if XC ? Y occurs in ?, Y is a root in ?.
(b ) if XC ? Y occurs in ?, X is a hole in ?.
A dominance constraint is weakly normal if it satisfies all above properties except for  N1  ( b ) and N3 ( b )  . 
The idea behind ( weak ) normality is that the constraint graph ( see below ) of a dominance constraint consists of solid fragments which are connected by dominance constraints  ; these fragments may not properly overlap in solutions  . 
Note that Definition 3 always imposes compactness , meaning that the heigth of solid fragments is at most one  . As for MRS , this is not a serious restriction , since more general weakly normal dominance constraints can be compactified  , provided that dominance links relate either roots or holes with roots  . 
Dominance Graphs . We often represent dominance constraints as graphs  . A dominance graph is the directed graph(V , /? union multi /) . The graph of a weakly normal constraint ? is defined as follows : The nodes of the graph of ? are the variables of ?  . A labeling literal X : f(X1, .   .   .   , Xn ) of ? contributes tree edges ( X , X i ) ?/ for 1 ? i ? n that we draw as X X i ; we freely omit the label f and the edge order in the graph  . A dominance literal X/?Y contributes a dominance edge  ( X , Y ) ? / ? that we draw as XY . 
In equality literals in ? are also omitted in the graph  . 
fag For example , the constraint graph on the right represents the dominance constraint X : f  ( X ? ) ? Y : g ( Y ? ) ? X?/?Z ?
Y ? / ? Z ? Z : a ? X 6= Y ? X 6= Z ? Y 6= Z .
A dominance graph is weakly normal or a wnd-graph if it does not contain any forbidden subgraphs : Dominance graphs of a weakly normal dominance constraints are clearly weakly normal  . 
Solved Forms and Configurations . The main difference between MRS and dominance constraints lies in their notion of interpretation : solutions versus configurations  . 
Every satisfiable dominance constraint has infinitely many solutions  . Algorithms for dominance constraints therefore do not enumerate solutions but solved forms  . We say that a dominance constraint is in solved form iff its graph is in solved form  . A wnd-graph ? is in solved form iff ? is a forest  . The solved forms of ? are solved forms ?? that are more specific than ?  , i . e . ? and ?? differ only in their dominance edges and the reachability relation of ? extends the reachability of ??  . A minimal solved form of ? is a solved form of ? that is minimal with respect to specificity  . 
The notion of configurations from MRS applies to dominance constraints as well  . Here , a configuration is a dominance constraint whose graph is a tree without dominance edges  . A configuration of a constraint ? is a configuration that solves ? in the obvious sense  . Simple solved forms are tree-shaped solved forms where every hole has exactly one outgoing dominance edge  . 


L3L4



Figure 3: A dominance constraint ( left ) with a minimal solved form ( right ) that has no configuration . 
Lemma 1 . Simple solved forms and configurations correspond : Every simple solved form has exactly one configuration  , and for every configuration there is exactly one solved form that it configures  . 
Unfortunately , Lemma 1 does not extend to minimal as opposed to simple solved forms : there are minimal solved forms without configurations  . The constraint on the right of Fig .  3 , for instance , has no configuration : the hole of L1 would have to be filled twice while the right hole of  L2 cannot be filled . 
4 Representing MRSs
We next map ( compact ) MRSs to weakly normal dominance constraints so that configurations are preserved  . Note that this translation is based on a nonstandard semantics for dominance constraints  , namely configurations . We address this problem in the following sections . 
The translation of an MRSM to a dominance constraint ? M is quite trivial  . The variables of ? M are the handles of M and its literal set is : h:  Px1  ,  . . . , xn(h1, .   .   . ) h:P ( x1, .   .   . , xn , h1, .   .   . ) ? M ? h:Qx(h1 , h2) h:Qx(h1 , h2) ? M?h1/?h2h1 ? h2 ? M?h/?h0h:Qx(h1 , h2) , h0 : P ( .   .   . , x , .   .   . ) ? M ? h 6= h ? h , h ? in distinct label positions of MC ompact MRSs M are clearly translated into  ( compact ) weakly normal dominance constraints . Labels of M become roots in ? M while argument handles become holes  . We akroot-to-root dominance literals are needed to encode variable binding condition  C2 of MRS . It could be formulated equivalently through lambda binding constraints of CLLS  ( but this is not necessary here in the absence of parallelism  )  . 
Proposition 1 . The translation of a compact MRSM into a weakly normal dominance constraint ? M preserves configurations  . 
This weak correctness property follows straightforwardly from the analogy in the definitions  . 
5 Constraint Solving
We recall an algorithm from ( Bodirsky et al ,  2003 ) that efficiently enumerates all minimal solved forms of wnd-graphs or constraints  . All results of this section are proved there . 
The algorithm can be used to enumerate configurations for a large subclass of MRSs  , as we will see in Section 6 . But equally importantly , this algorithm provides a powerful proof method for reasoning about solved forms and configurations on which all our results rely  . 
5.1 Weak Connectedness
Two nodes X and Y of a wnd-graph ? = ( V , E ) are weakly connected if there is an undirected path from X to Y in  ( V , E ) . We call ? weakly connected if all its nodes are weakly connected  . A weakly connected component ( wcc ) of ? is a maximal weakly connected subgraph of ? . The wccs of ? = ( V , E ) form proper partitions of V and E . 
Proposition 2 . The graph of a solved form of a weakly connected wnd-graph is a tree  . 
5.2 Freeness
The enumeration algorithm is based on the notion of freeness  . 
Definition 4 . A node X of a wnd-graph ? is called free in ? if there exists a solved form of ? whose graph is a tree with root X  . 
A weakly connected wnd-graph without free nodes is unsolvable  . Otherwise , it has a solved form whose graph is a tree ( Prop . 2) and the root of this tree is free in ? . 
Given a set of nodes V ? ? V , we write ? V ? for the restriction of ? to nodes in V ? and edges in V ? ? V ?  . 
The following lemma characterizes freeness : Lemma  2  . A wnd-graph ? with free node X satisfies the freeness conditions :  F1 node X has indegree zero in graph ? , and F2 no distinct children Y and Y ? of X in ? that are linked to X by immediate dominance edges are weakly connected in the remainder ? V\X  . 
5.3 Algorithm
The algorithm for enumerating the minimal solved forms of a wnd-graph  ( or equivalently constraint ) is given in Fig .  4 . We illustrate the algorithm for the problematic wnd-graph ? in Fig  .  3 . The graph of ? is weakly connected , so that we can call solve (?) . 
This procedure guesses topmost fragments in solved forms of ?  ( which always exist by Prop .  2) . 
The only candidates are L1 or L2 since L3 and L4 have incoming dominance edges , which violates F1 . Let us choose the fragment L2 to be topmost . 
The graph which remains when removing L2 is still weakly connected . It has a single minimal solved form computed by a recursive call of the solver  , where L1 dominates L3 and L4 . The solved form of the restricted graph is then put below the left hole of  L2  , since it is connected to this hole . As a result , we obtain the solved form on the right of Fig .  3 . 
Theorem 1 . The function solved-form ( ? ) computes all minimal solved forms of a weakly normal dominance graph ?  ; it runs in quadratic time per solved form . 
6 Full Translation
Next , we explain how to encode a large class of MRSs into wnd-constraints such that configurations correspond precisely to minimal solved forms  . The result of the translation will indeed be normal  . 
6.1 Problems and Examples
The naive representation of MRSs as weakly normal dominance constraints is only correct in a weak sense  . The encoding fails in that some MRSs which have no configurations are mapped to solvable wnd -constraints  . For instance , this holds for the MRS on the right in Fig 3 . 
We cannot even hope to translate arbitrary MRSs correctly in to wnd-constraints : the configurability problem of MRSs is NP-complete  , while satisfiability of wnd-constraints can be solved in polynomial time  . Instead , we introduce the sublanguages of MRS-nets and equivalent wnd-nets  , and show that they can be intertranslated in quadratic time  . 
solved-form (?)?
Let ?1, . . . , ? k be the wccs of ? = ( V , E)
Let ( Vi , E i ) be the result of solve(?i ) return ( V , ? k i=1 E i ) solve (?) ? precond : ? = ( V , /union multi/? ) is weakly connected choose a node X satisfying ( F1 ) and ( F2 ) in ? else fail Let Y1 ,   .   .   . , Ynbe all nodes s . t . X/YiLet ? 1, .   .   .   , ? k be the weakly connected components of ? V ? X , Y 1 ,  . . . ,Yn  Let ( Wj , Ej ) be the result of solve(?j ) , and Xj ? Wj its root return ( V , ? kj=1Ej ?/?/?1?/?2) where / ?1 = ( Yi , Xj ) ? X ? : ( Yi , X ?) ? / ? ? X ? ? Wj , /?2 = ( X , Xj ) ? ? X ? : ( Yi , X ? ) ?/? ? X ? ? Wj Figure 4: Enumerating the minimal solved-forms of a wnd -graph  . 


( a ) strong.


( b ) weak .


( c ) island
Figure 5: Fragment Schemas of Nets 6 . 2 Dominance and MRS-Nets A hypernormal path ( Althaus et al ,  2003 ) in a wnd-graph is a sequence of adjacent edges that does not traverse two outgoing dominance edges of somehole X in sequence  , i . e . a wnd-graph without situations Y1 X Y 2 . 
A dominance net ? is a weakly normal dominance constraint whose fragments all satisfy one of the three schemas in Fig  .  5 . MRS-nets can be defined analogously . This means that all roots of ? are labeled in ? , and that all fragments X : f(X1 ,   .   .   .   , X n ) of ? satisfy one of the following three conditions : strong  . n ? 0 and for all Y ? X1, .   .   .   , X n there exists a unique Z such that YC ? Z in  ?  , and there exists no Z such that XC?Z in ? . 
weak . n ? 1 and for all Y ? X1, .   .   .   , X n?1 , X there exists a unique Z such that YC ? Z in ? , and there exists no Z such that X n C ? Z in ? . 
island . n = 1 and all variables in Y X1 C?Y are connected by a hypernormal path in the graph of the restricted constraint ?  V?X1  , and there exists no Z such that XC?Z in ? . 
The requirement of hypernormal connections in islands replaces the notion of chain -connectedness in  ( Koller et al ,  2003) , which fails to apply to dominance constraints with weak dominance edges  . 
For ease of presentation , we restrict ourselves to a simple version of island fragments  . In general , we should allow for island fragments with n > 1 . 
6.3 Normalizing Dominance Nets
Dominance nets are wnd-constraints . We next translate dominance nets ? to normal dominance constraints ? ? so that ? has a configuration iff ?? is satisfiable  . The trick is to normalize weak dominance edges . The normalization norm ( ? ) of a weakly normal dominance constraint ? is obtained by converting all root-to-root dominance literals XC ? Y as follows: 
XC ? Y ? X n C ? Y if X roots a fragment of ? that satisfies schema weak of net fragments  . If ? is a dominance net then norm ( ? ) is indeed a normal dominance net . 
Theorem 2 . The configurations of a weakly connected dominance net ? correspond bijectively to the minimal solved forms of its normalization norm  ( ? )  . 
For illustration , consider the problematic wnd-constraint ? on the left of Fig  .  3 . ? has two minimal solved forms with topmost fragments  L1 and L2 respectively . The former can be configured , in contrast to the later which is drawn on the right of Fig  .  3 . 
Normalizing ? has an interesting consequence : norm  ( ? ) has ( in contrast to ? ) a single minimal solved form with L1 on top . Indeed , norm ( ? ) cannot be satisfied while placing L2 topmost . Our algorithm detects this correctly : the normalization of fragment  L2 is not free in norm ( ? ) since it violates property

The proof of Theorem 2 captures the rest of this section . We show in a first step ( Prop .  3 ) that the configurations are preserved when normalizing weakly connected and satisfiable nets  . In the second step , we show that minimal solved forms of normalized nets  , and thus of norm (?) , can always be configured ( Prop .  4) . 
Corollary 1 . Configurability of weakly connected MRS-nets can be decided in polynomial time  ; configurations of weakly connected MRS-nets can been umerated in quadratic time per configuration  . 
6.4 Correctness Proof
Most importantly , nets can be recursively decomposed into nets as long as they have configurations : Lemma  3  . If a dominance net ? has a configuration whose topmost fragment is X : f  ( X 1 ,   .   .   . , Xn ), then the restriction ? V ? X , X1, . . . , Xn  is a dominance net . 
Note that the restriction of the problematic net ? by  L2 on the left in Fig . 3 is not an et . This does not contradict the lemma , as ? does not have a configuration with topmost fragment  L2  . 
Proof . First note that as X is free in ? it cannot have incoming edges  ( condition F1 )  . This means that the restriction deletes only dominance edges that depart from nodes in X  , X 1 ,   .   .   . , Xn . Other fragments thus only lose in going dominance edges by normality condition  N3  . Such deletions preserve the validity of the schemas weak and strong  . 
The island schema is more problematic . We have to show that the hypernormal connections in this schema can never be cut  . So suppose that Y : f ( Y 1 ) is an island fragment with outgoing dominance edges  Y1 C ? Z1 and Y1 C ? Z2  , so that Z1 and Z2 are connected by some hypernormal path traversing the deleted fragment X : f  ( X 1 ,   .   .   . , Xn ) . We distinguish the three possible schemata for this fragment :  . . . 
( a ) strong.

( b ) weak .

( c ) island
Figure 6: Traversals through fragments of free roots strong : since X does not have incoming dominance edges  , there is only a single non-trival kind of traversal  , drawn in Fig . 6(a ) . But such traversals contradict the freeness of X according to  F2  . 
weak : there is one other way of traversing weak fragments  , shown in Fig . 6(b ) . Let XC ? Y be the weak dominance edge . The traversal proves that Y belongs to the weakly connected components of one of the Xi  , so the ?? X n C ? Y is unsatisfiable . This shows that the hole Xn cannot be identified with any root  , i . e . ? does not have any configuration in contrast to our assumption  . 
island : free island fragments permit one single nontrivial form of traversals  , depicted in Fig . 6(c ) . But such traversals are not hypernormal . 
Proposition 3 . A configuration of a weakly connected dominance net ? configures its normalization norm  ( ? )  , and vice versa of course . 
Proof . Let C be a configuration of ? . We show that it also configures norm (?) . Let S be the simple solved form of ? that is configured by C  ( Lemma 1 )  , and S ? be a minimal solved form of ? which is more general than S  . 
Let X : f(Y1, .   .   . , Yn ) be the topmost fragment of the tree S . This fragment must also be the topmost fragment of S ?  , which is a tree since ? is assumed to be weakly connected  ( Prop .  2) . S ? is constructed by our algorithm ( Theorem 1) , so that the evaluation of solve ( ? ) must choose X as free root in ? . 
Since ? is an et , some literal X : f(Y1, .   .   . , Yn ) must belong to ? . Let ?? = ? X,Y1, . . . ,Yn  be the restriction of ? to the lower fragments  . The weakly connected components of all Y1, .   .   . , Yn?1 must be pairwise disjoint by F2 ( which holds by Lemma 2 since X is free in ? )  . The X-fragment of net ? must satisfy one of three possible schemata of net fragments : weak fragments : there exists a unique weak dominance edge XC ? Zin ? and a unique hole Yn without outgoing dominance edges  . The variable Z must be a root in ? and thus be labeled  . If Z is equal to X then ? is unsatisfiable by normality condition  N2  , which is impossible . Hence , Z occurs in the restriction ? ? but not in the weakly connected components of any  Y1  ,   .   .   . , Yn?1 . Otherwise , the minimal solved form S ? could not be configured since the hole Yn could not be identified with any root  . Furthermore , the root of the Z-component must be identified with Yn in any configuration of ? with root X  . Hence , Csatisfies
YnC ? Z which is add by normalization.
The restriction ?? must be a dominance net by Lemma  3  , and hence , all its weakly connected components are nets . For all 1 ? i ? n ? 1 , the component of Yi in ?? is configured by the subtree of C at node Yi  , while the subtree of C at node Yn configures the component of Z in ??  . The induction hypothesis yields that the normalizations of all these components are configured by the respective subconfigura-tions of C  . Hence , norm (?) is configured by C . 
strong or island fragments are not altered by normalization  , so we can recurse to the lower fragments ( if there exist any )  . 
Proposition 4 . Minimal solved forms of normal , weakly connected dominance nets have configurations  . 
Proof . By induction over the construction of minimal solved forms  , we can show that all holes of minimal solved forms have a unique outgoing dominance edge at each hole  . Furthermore , all minimal solved forms are trees since we assumed connectedness  ( Prop . 2) . Thus , all minimal solved forms are simple , so they have configurations ( Lemma 1) . 
7 Conclusion
We have related two underspecification formalism , MRS and normal dominance constraints . We have distinguished the sublanguages of MRS -nets and normal dominance nets that are sufficient to model scope underspecification  , and proved their equivalence . Thereby , we have obtained the first provably efficient algorithm to enumerate the readings of underspecified semantic representations in MRS  . 
Our encoding has the advantage that researchers interested in dominance constraints can benefit from the large grammar resources of MRS  . This requires further work in order to deal with unrestricted versions of MRS used in practice  . Conversely , one can now lift the additional modeling power of CLLS to 


H . Alshawi and R . Crouch .  1992 . Monotonic semantic interpretation . In Proc . 30th ACL , pages 32?39 . 
E . Althaus , D . Duchier , A . Koller , K . Mehlhorn , J . Niehren , and S . Thiel .  2003 . An efficient graph algorithm for dominance constraints  . Journal of Algorithms . In press . 
Manuel Bodirsky , Denys Duchier , Joachim Niehren , and Sebastian Miele .  2003 . An efficient algorithm for weakly normal dominance constraints  . Available at www . ps . uni-sb . de/Papers . 
Johan Bos .  1996 . Predicate logic unplugged . In Amsterdam Colloquium , pages 133?143 . 
Ann Copestake and Dan Flickinger . An open source grammar development environment and broadcoverage English grammar using HPSG  . In Conference on Language Resources and Evaluation  . 
Ann Copestake , Dan Flickinger , Ivan Sag , and Carl Pollard .  1999 . Minimal Recursion Semantics : An Introduction . Manuscript , Stanford University . 
Ann Copestake , Alex Lascarides , and Dan Flickinger . 
2001 . An algebra for semantic construction in constraint-based grammars  . In Proceedings of the 39th ACL , pages 132?139 , Toulouse , France . 
Markus Egg , Alexander Koller , and Joachim Niehren . 
2001 . The Constraint Language for Lambda Structures . Logic , Language , and Information , 10:457?485 . 
Alexander Koller , Joachim Niehren , and Ralf Treinen . 
2001 . Dominance constraints : Algorithms and complexity  . In LACL?98, volume 2014 of LNAI , pages 106?125 . 
Alexander Koller , Joachim Niehren , and Stefan Thater . 
2003 . Bridging the gap between underspecification formalisms : Hole semantics as dominance constraints  . 
In EACL?03, April . In press.
Carl Pollard and Ivan Sag .  1994 . Head-driven Phrase Structure Grammar . University of Chicago Press . 
Uwe Reyle .  1993 . Dealing with ambiguities by underspecification : Construction  , representation and deduction . Journal of Semantics , 10(1) . 
