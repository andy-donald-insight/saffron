TREEUNIFICATION GRAMMAR
Frdd Popowich
School of Computing Science
Simon Fraser University
Bumaby , B.C.
CANADAV 5A 186

Tree Unification Grammar is a declarative unification-bas ~: l linguistic framework  . The basic grammar stmaures of this framework are partial descriptions of trees  , and the framework requires only a single grammar ule to combine these partial descriptions  . Using this framework , constraints associated with various linguistic phenomena  ( reflexivisation in particular ) ~ be stated succinctly in the lexicon . 

There is a mind in uni~ca~on-based grammar formalisms towards using a single grammar stmct me to contain the phonological  , syntactic and semantic information associated with a linguistic expression  . Adopting ' the terminology used by Pollard and Sag ( 1987 )  , this grammar structure is called a sign . Grammar rules , guided by the syntactic information contained in signs  , are used to derive signs associated with complex expressions from those of their constituent expressions  . The relationship between the signs and the complex signs derived from gramma rule application can be expressed in derivation ai structures  . These structures both explicitly illustrate relations that are implicit in the syntax of the signs and express relations that are present in the grammar roles  . 
Tree unification grammar ( TUG ) is a formalism which uses function-argument ( FA ) specif ~ ationa as its primary grammar structures . These specifications resemble partially specified derivational stmcmn ~ of sign-based formalisms like head-driven phrase structure grammar  ( HPSG )   ( Pollard and Sag ,  1987 ) and unification categorial grammar ( UCG )   ( 7_ , eev at , Klein and Calder ,  1987) . TUG uses FA specifications as lexical entries and possesses a single grammar rule which combines these specifications to obtain a specification for the complex expression being analysed  . The use of FA specifications allows generafisations that are often captured in gramma rules to be captured in the lexicon  . 

The development of TUG was a consequence of investigating extensions to the UCG framework  . As described by Zeevat , Kh ~,, . -dCalder (1987) , UCG is a grammar formalism which combines SOme of the notiow~s of categorial grammar with those of unification-based formalisms like HPSG and PATR -II  ( Shicberel . at . , 1983) . 
Thensse . t ~ h . ~ tM  ~ , ,~d in this lmq~r wu ~ o ~ at the Univmlity of Edln be Jq th under the rapport of ? Brifi Jh C  , ~- , ' ~ we all hScholm hlp and at 51hUm FmJ ~ Uui ~ kyunde * msAdvmu ~ Synmll Imti~e ~ Fellov ~ hip  . Special thar , Joto the Omm:f ~ Systmm Scknmmd zhe L * bm . atm . y for ~ rmdRnem ~ at Simon Fruer Unlve ~ izy fro . add it kmalml ~ p e ~ I would I . '%- . . to t/rank Dm ~ P ~ md Om ACL mv i~a for thmt ? , omm ~ B , ~4 mIl ~ Like HPSG , the fundamental construction used in UCG is the sign  . AUCG sign has auributes for phonology , category , semantics and order . Consider the sign for the expression Mary walks hown in  ( I )  . 
( I ) Mary-walks smt\[f'm\]\[eli\[\[fllmary ( fl )  , \[ el\]walk(el , fl )\] The phonology attribute of this sign(ie . Mary-walks ) represents a phonological specification of the linguistic expression associated with the sign  . For our needs we will use a simple sequence of words separated by hyphens  . The category structure of a sign is very similar to that used by categorial grammar  . There are three primitive categories , namely sent , np , and noun . Complex categories are of the form A/B , where B is a sign and A is a category ( either primitive or complex )  . The semantic representation uses a language called In L  ( Zcevat , Klein and Calder 1987 ) which incorporates many of the features of discourse ~ p  , csentation theory ( Kamp 1981) . An InL formula is of the form\[a\]Condition where Condition consists of a predicate name followed by its argument list  . Each element of the argument list is either a variable  ( i e . discourse marker ) or an In L formula . The variable a preceding Condition is the index of the fonnnla  . The order attribute of a sign contains information which is used to determine the ordering of the phonology of components during rule application  . If an argument possesses preasits order , then the phonology of the functor precedes that of the argument in that of them suh  . The value post describes the opposite situation . 
There is no restriction on the order of ( 1 ) as indicated by the appearance of the ' don't care ' variable '_' in the order attribute  . 
In L variables are assigned sorts . A sort can be thought of as a collection of features based on factors like gender and number  . 
Unification of variables of incompatibles on s will fail  , thus providing a mechanism by which semantic information can restrict possible derivations  . There are different sons for events , states and objects . Variables of the objects or x may be further specified with respect to gender  ( masculine , feminine , or neuter ) , and number . Unsorted variables will be denoted by the leuer a  , events by e , states by s , and gended ess objects by x , y , and z . The letterm will be used to represent variables corresponding to a masculine object  , f for feminine , and n for neuter . Unique identifiers which will be used to distinguish variables will appear as numbers following the variable names  ( i e . nl , ml , s2) . 
Signs may be underspecified and through the application of the gramma rules they may become increasingly specified by the merging of information  . Only two grammar rules are proposed in (' Zeev at , Klein and Calder ,  1987 ) :  ( 2 ) Wt-W2:C:S:-~Wt:C4 ( W2: C2: S2:pre ) : S :_ , 
W2 . ' C2"S2: pre(3) W2-WI:CiS:--d , W2: C2: S2: post , 
Wt:C/(W2:C2: S2:post):S:_application , the two roles in basic categorlal grammar . Capital letters amused to denote variables that are associated with unspecified values which will be instantiated during a derivation  . 
Colons are used to separate the different attributes of the sign when the sign is displayed in a horizontal rather than vertical manner  . Consider the result of applying rule O ) to the two signs associated with Mary and walks which are shown below  . 
(4 ) Mary : np : mary ( fl ) : _  ( 5 ) walks sent\[fin\]/ (  . .: np\[nom\]:\[x\]S:post ) \[ el \] \[\[ x\]S , walk(el , x ) \] The result of rule application is the sign that was introduced in  ( 1 )  . Rule application builds up the semantics of an expression by instantiating unspecified components  , like S in the lexical entry for wa/ks (5) , that have been placed into the s~rnanticstmc : ure . 
Associated with every linguistic expression is a derivation tree which describes how the sign corresponding to the complete expression is derived from grammar rules operating over signs associated with lexical entries  . The leaves of this binary tree are labelled with signs for individual words  , the root is labelled by the sign for the complete x pression  , while the other nonterminal nodes are associated with intermediate x pressions  . Each nonterminal node is labelled with the result obtained by applying a gramma rule to the signs which are referred to by its two daughter nodes  . The edges to the daughters of a nonterminal node are designated functor and argument depending on the role that the signat the daughter node plays during grammarule application  . 
As an example , the derivation tree provided in Figure 1 illustrates how backward functional application ( BFA )   ( 3 ) relates the signs for Mary ( 4 ) and wa/ks ( 5 ) to the sign associated with Mary-walks ( I )  . The functor edge of a nontenninal node is represented by a lined arker than that of the argument edge  . Rule application combines signs and builds derivation trees as a side effect  . A more generel form of this operation would be to combine trees to yield Uees directly  . Partial descriptions of a complete derivation tree could be combined to yield an increasingly further specified derivation tree  . 
The principle advantage of combining partial descriptions lies in the ease with which certain dependencie J between different constituents can be described  . Consider the general case in UCG where a functor is applied to an argument to produce a result ~ Each of these three constituents possesses its own set of features which describes the phonological  , syntactic and semantic information associated with it  ( Bouma , Kcenig and Uszkoreit ,  1988) . The relationship between these constituents is outlined in Figure  2  . The information F associated with the funa or can be dependent on the information G associated with the argument  ; he dependency relation is shown by the are labelled  0 in . Figure 2 . 
Such a dependency c4m be captured in the lexicel entry for the functor since the ftmctor contains the information associated with the argument in its own category name  ( as highlighted in bold in Figure 2 )  . We have already seen an example of such a dependency in Figure I-these numtic information of the funetor is dependent on that of the argumen LW hile the dependency marked by ~ can be captured in the lexicon in UCG  , the dependency marked by p must be captured by the grammar rule  ; the grammar rule must state how the information F ' associated with the result is obtained from that of the functor and that of the argument  . If we adop the premise that F = F , than p becomes an identity relation and there is no need for introducing additional grammar rules to capture a more complicated relation p  . 
Unfortunately , there are cases where the condition F = F " does not apply  . For instance , Bomna ( 1988 ) argues for the need of a lex feature which would distinguish lexical elements from phrases  ; a lexical funotor and its result would have different values for this feature  ( + iex and-lex respectively )  . Similarly , ffone wanted to encode bar level information ( Jackendoff ,  1977 ) into the different constituents hent here would be numerous cases where the bar level of a functor and that of its argument would not be the same  . 
Most importantly though , we can provide a straightforward m ~ ount of reflexivisation if we are not subject othe requirement that F--F ' as we shall see shortly  . 
BFAMary-walks sent ~\]\[ el\][\[fl\]m~y ( fl ) 0\[el\]walk ( el&l ) \]
Mary walks np\[nom\]sent\[fin\]/ ( Mary:np\[nom\]:[fl\]mary ( fl ) : post ) \[fl\]mmy ( fl ) \[ el\]\[\[fl\]mary ( fl )  , \[ el\]walk(el . f l )\] post
Figure 1: Derivation Tree resuh
Figure 2: Dependencies Between Constituents By using a partial description of a derivation tree as a lcxical antry  , dependencies corresponding to O in Figure 2 are captured in the lexicon instead of in the grammar rules  . For instance , the BFA grammar role states that the phonology of the resulting coost it mmt consists of the phonology of the argument followed by that of the functor  . The lexicel entry for walks ( 5 ) implicitly describe such a relationship through the presence of the post feature  . This fcamre is interpreted by the grammar role , with the relation being explicitly represented in the result  . If a partial description like the one introduced for wa/ks in Figure  3 is used as a lexical entry , this reladon is explicitly represented and the presence of a postfcs tumis actually not necessary  . Furthermore , local relationships other than those corresponding to ? ~ and p can be captured explicidy in the lexical entry  . For instance , the features associated with an argmnent can be dependent on those of its functor and information associated with the result can be directly related to that of the argument  . One could even have a more long distance dependency  , say between an argument and a subconstitoent of its funet or  , stated dimctiy in the lexical entry . 
Most importantly , the use of FA specifications similar to those introduced in Figure  3 allows us to capture the restrictions associated with reflexivisation i the lexicon  , without requiring the introduction of additional grammar rules or principles  . 
FUNCTION ARGUMENTS PECIFICATIONS
Although the grammar rules operate over trees in TUG  , signs still have a role to play in the organisation of information  . The signs of TUG differ from those of UCG in several respects  . First , subcategorisation information that is contained in the UCG sign is not present in the TUG sign  ; it is represented in the tree structures of the framework instead  . On a point of terminology , the second attribute of the TUG sign is referred to as the syntax instead of the category  , since it contains more than just categorial information  . 
Finally . the TUG sign will also contain an attribute for binding information  . For now , however , we will restrict our discussion to only the fh'st hree attributes of a TUG sign  . 
< a>\[sl\]_every-W\[np , C\]\[sl\]impl(\[x\]S)--everyo . : W\[det\]\[noun , C\]\[sl\]impi\[x\]S ?> man\[noun , _\]man(ml ) < ~> p:W-walks\[u ~* , fin )
LJP(\[x\]S ) ( walk(el , x))
W walks\[np , nom\]v , fin\]_\]P (\[ xIS ) walk(el , x ) wa/k ~
Figure 3: Lexical Entries
In TUG , a binary tree called an FA specification is associated with every linguistic expression  . These specifications resemble parl ~ l descriptions of derivation trees  . Each node of this binary tree is labelled with a sign  . The root node possesses a sign corresponding to the complet expression  , while the leaves are labelled with signs for the component words or morphemes  . Each nonterm/nal node dominates a functos node aud an argument node  . The terms functor-sign and argument-sign will be used to refer to the signs associated with the functor and argument nodes respectively  . The left-to-right ordering of functor and argument edges is not relevant l To refer to the sign of the root node of stree  , the term root . sign will be used . The tees rooted at nonterminal nodes of an FA specification will be called subtrees  . 
An FA specification contains an auxiliary list which specifies subtmes of the FAspe ~: ification with which other FA specifications must be unified  . It is represented as a list of labels contained in angle brackets appearing to the left of the FA specification as illustrated in the lexical entries introduced in Figure  3  . Observe that there are two edges leading from the functor-sign of the FA specification for every which do not lead to any nodes  . These hang/rig edges are associated with nodes whose terminal or nonterminal status has not yet been established  . So an FA specification may either state that a constituent has no subconstiments  ( terminal node sign )  , it may state that it has subconstiments ( nonterminal node sign )  , or it may say nothing about whether or not a constituent possesse subconstiments  ( node with hanging edges )  . 
The single grammar rule of TUG is introduced in ( 6 )  , where Ha denotes an FA specification with auxiliary list rr It describes how the FA specification for a complex linguistic expression is obtained from unification of the FA specifications associated with component expressions  . This rule states that an FA specification C ( which will be called the auxiliary tree ) possessing an empty auxiliary Hst\[\] is unified with the subtree of H described by the first element of the auxiliary list of H  . \[ C/a \] denotes the list formed by adding C to the front of the list ~ The result of this rule is a more fully i ~ tanfiated version of the primary tree  , H . The resnlt's auxiliary list will consist of all but the lust element of the auxiliary list of the primary tree  . Viewed procedurally , this rule states how to construct a new FA specification from two preexisting FA specifications  . 
Deelaratively , the rule merely states a relationship between FA specifications  . To illustrate how FA specifications are manipulated by this sing Jegramma rule we will trace theooustmction of the FA specification associated with the sentence Every man wa/ks  , using the lexical entries introduced in Figure 3 . 
The lexical entry for every requires an auxiliary tree to be unified at the location marked by a  . For the moment , let us examine the suttee associated with the argument of the lexical entry  . This subtree describes a functor-argument relation between two linguistic expressions  . One is a functor noun of unspecified case C possessing an index compatible with the ' entity ' son  , as designated by the presence of x , while the other is an argument determiner with phonology every  . Alternatively , one could view the determiner as aftmctor over the noun as suggested in  ( popowich ,  1988) . However , treating the noon as the fonctor allows a uniform treatment of nouns with possessive determiners and those with ' regular ' determiners  . This is the same treatment that has been adopted in HPSG  ( Pollard and Sag ,  1987) . We will propose that for any subtree the functor -sign and the root-sign will generally possess the same syntactic category information  , except for bar . levi information ( Popowich ,  1988) , in a manner t ~ mini seent of the head f e , ' ~ e convention of GPSG ( Gazdar et . aL , 1985) . Observe that the phonology of the root-sign of this subtree is that of the argument-sign followed by that of the functor-sign  . The argument-sign introduces a semantic index of the ' state's or t which will also be the index of the InL formula of any constituent which possesses a universally quantified noun phrase as its argument  . This means that sentences like Every man walks will describe a state  , even though the word walks describes an event . This argument-sign also introduces the semantic connective/rap/which is associated with the universal quantifier  . 
<>\[ sH_every-man\[np , C\]\[sl\]impl ( man ( ml ) ) - - every man \[ de~l \ [~ , Cl\[sl\]implman ( m1 ) Figure 4: Intermediate FA Specification When the FA specification forman is treated as a  ( depth zero ) auxiliary tree which is unified with a from the lexical entry for every  , we get a more instantiated FA specification which is assoc~ted with every man  . This specification , which is introduced in Figure 4 is similar to the lexical entry for every except hat x has been i ~ stantiated to nti  , Stoman(m\]) , and W to not possess any iabelled subtrees with which an auxiliary tree could be unified  . As an abbreviatory convention , the index preceding a predicate which contains the index as its first argument will be omitted  . Soman ( ml ) is actually an abbreviation for\[ml\]man ( ml ) and walk ( el , x ) is an abbreviation for \[ el walk ( el , x) . 
The FA specification for every mancan act as an auxiliary tree to be unified with  \[3 from the lexical entry for w ~/ ~ shown in Figure 3  . Any potential auxiliary tree must have an argument-sign whose syntax is compatible with the ' nominative noun phrase'specification  . No restrictions are placed on the indices of the root and argument signs  ; these indices will be specified by the auxiliary tree  . The lexical entry for wal ~ states how the semantics of then ~ ot-sign is formed from that of its functor and argument signs  . When the FA specification for every man is combined with this primary tree  , P of the primary tree is unified with b ~ ol of the auxiliary tree  , x is instantiated to ml , and S is unified with man(ml ) . C of the auxiliary tree is instantiated mn or a . The resulting FA specification is shown in Figure  5  . 
<> every-man-walks\[san~fml\[sl\]impl ( man ( m1 ) )  ( walk ( el , m1)) every-man walks\[npo~om\]\[v , fin\]\[sl\]impl(man(m1)) walk(el , m1) every man(d~l(neun , neml\[sl\]implman(m1)
Figure $: Final FA Specificad on
The FA specification for the complete sentence describes exactly one FA structure  . While FA specifications may contain variables and partially instantiated attributes  , FA structures do not . The lexical retries of TUG can be viewed as contributing constraints othe FA structure that is associated with a complex linguistic expression with the single grammar rule being used to combine these constraints  . During the analysis of an expression , constraints are continually proposed and never rescinded  . 
Eventually , these constraints will describe the final FA structure  ( s )  . Thus we distinguish between information structures and the description a of those structures in a manner similar to the approach proposed by Kaplanend Bresnan  ( 1982 ) and discussed in detail by Johnson ( 1987 )  . An FA specification can be interpreted as describing a set of FAstrae tums  . Gnmrma rule application thin corresponds to the intersection of the sets associated with the component FA specifications  . The resulting set is associated with a new FA specification  . If the resulting set contains no FA stm cuues , then there is no FA specification associated with the resulting set-grammar rule application fatls lAn ungrammatical sentence  ( i e . one without an FA structure ) will not be assigned an FA specification . The result of the 8rammatical nalysis of a sentence is the set of FA structures described by the final FA specification  . Grammatical sentences can have one or more FA specifications  , each of which will describe at least one FA structure  . 
We are requiring a wellformed FA specification to describe at least one FA structure  . In this respect , FA specifications differ from the description languages introduced in  ( Kaspar and Rounds , 1986) and in ( Johnson ,  1987) . These languages allow descriptions for which there may not be associated structures  . FA specifications are actually higher order descriptions which may be defined in terms of these description languages  . They are intended to ( transparently ) describe structures associated with linguistic expressions  ; they arc not intended to be a powerful language for describing fexm restructures in general  . Instead of using FA specifications to describe FA structures  , we could use one of these lower level description languages in conjunction with a restriction requiring a wellforme description to describe at least ones l  . nlcture . 
In TUG , many local dependencies between grammatical constituents and some other bounded relationships can be stipulated explicitly in lexical entries  . This is because FA specifications for one lexical entry can directly access information contained in the sign associated with a different linguistic expression  . For instance , we have already seen how the lexical ent ~ for a quantifier can directly specify semantic information  ( the index ) for a sentence in which it is contained . It is possible to incorporate the constraints on reflexivisation perspicuously in the lexicon without causing unnecessarily complicated lexical entries and without requiring the introduction of additional principles or grammar rules  . 
REFLEXIVE ANTECEDENTINF ORMATION
The TUG treatment of reflexives will be based on the concept of reflexive antecedent information  , henceforth R-ardecedera information . R-antecedent information , which will be distinct from the semantic information contained in a sign  . will be responsible for determining the antecedents of reflexive pronouns  . 
The constraints on reflexivisation will determine how the R-ante_-'eden__t information of one sign is related to the information contained in other signs of an FA structure  . 
Since the signs corresponding to the reflexive and its antecedenteed not both be present in the FA specification for a verb  ( as illustrated in sentences like John wrote a book about a picture of himself  )  , we will introduce a reflexive attribute into the TUG sign  . This ' binding ' attribute will contain the R -antecedent information e e_tied for establishing an anaphnric relationship between the reflexive and its antecedent  . Since we have already seen the type of information contained in the first three attributes of the sign  , let us consider the information contained in the fourth attribute  . 
The antecedent information is responsible for determining the discourse marker that can be the antecedent of the pronoun  . 
Based on a proposal for the treatment of personal pronouns described in  ( Johnson and Klein ,  1986 ) we will propose that the R-antecedent information explicitly describes the set of potential discourse markers available as antecedents for reflexives  . This is the information that will be contained in the reflexive attribute of a sign  . The lexical retry for the reflexive will only need to state that its antec~ient marker is an element from this store  . Unlike the Cooper storage mechanism described in ( Cooper ,  1983 ) which has been adopted in various proposals for an aphnra  ( Bach and Panee ,  1980 , Gazdar et . al . , 1985) , our reflexive attribute contains a set of antecedents  , not a set of anaphors . 
The R-antecedent if ormation will be represented as an ordered list of discourse markers  ( sorted variables ) corresponding to potential antecedents . Lists will be displayed in square brackets with the different element separated by commas  . The notation \[ .   . J/J will be used to designate x as an arbitrary element from a fist with \[ x/A \] denoting the list resulting from the addition of andement x to all stA  . The sign associated with a reflexive ( 7 ) himself\[np , obj\]true(m)\[ .   .   . ml_\] The discourse marker appearing in the semantic formula associated with the reflexive pronoun is an arbitrary element  ( of the masculine sort ) of the reflexive attribute of the pronoun . The condition true introduced in the semantic attribute is always satisfiable for any discourse marker  . We will discuss the semantics of the reflexive pronoun in more details hoaly  . 
The operation of selecting an arbitrary element from a list of arbitrary length is a fairly powerful operation  . Nevertheless , it seems to be a sufficiently primitive operation to be included in a framework  . It carmot be expressed in the PATR-rl framework ( Shieber et . al . , 1983) which is often used to implement grammars . 
If functional uncertainty ( Kaplan , Maxwell and Zaenm , 1987) were included as a primitive in PATR-n , then this arbitrary element selection operation could be implemented  . 
The constraints on reflexivisation , which affect the distribution of R-antecedent information and its interaction with other forms of information  , are in coq~orated directly into the TUG lexical entries  . One constraint is derived from Keenan's ( 1974 ) proposal whereby the antecedent for a pronoun is an argument of the functor containing the pronoun  . This can be incorporated into TUG by having the R -antecedent information of a functor consist of the R-antecedent information of its parent sign augmented with the semantic index I of its argument  . To illustrate this ' flow ' of R-antecedent information  , consider an analysis of the simple sentence Mary loves herself  . 
A series of FA specifications corresponding to different stages of an analysis for this sentence are shown in Figure  6  . To highlight the relevant information , much of the information contained in the signs of ti~se FA specifications has nut been d/s played  . The first FA specification corresponds to the lexical entry for loves  . Observe that the R-antecedent information of the functor-sign consists of the semantic index of the argument sign  ; the reflexive attribute of the sign associated with the object noun ? phrase is the same as that of the constituent which contains it Also note that the InL formula from the sign associated with the verb refc~nces the semantic indices of the signs for the two noun phases  . The second FA specification from Figure 6 illustrates the effect of unifying a sign ( actually a depth zero tree ) corresponding to the noun phrase Mary with the argument-sign of the initial FA specification  . Note that the semantic index , f / , of Mary is introduced into the reflexive attribute of the functor over Mary  . It also appears as the second argument of the semantic predicate love  ( underlined in the FA specification )  . Since the lexical entry for the verb also embodies the relation requiring the reflexive attribute of an argument-sign to contain the same information as its parent sign  , fl is also introduced into the sign associated with the objea noun phrase  . This ' flow ' of R-antecedent information is highlighted by the dark arrows in Figure  6  . In the final FA specification from this figure , a sign corresponding to the reflexive pronoun is unified with the sign of the object noun phrase in the FA specification  . The reflexive pronoun obtains its semantic index from the information contained in its reflexive attribute as highlighted by the small arrow  . This semantic index is used as the final argument in the InL formula associated with the verb  ( which is underlined in the FA specification )  . 
By incorporating Keenan's ( 1974 ) propose dependency into FA specifications in this manner  , we obtain a relationship much like predication . command ( Hellan , 1988) and F . command ( Chierchia , 1988) . Although these ' command ' restrictions on reflexivisation can account for much of the data concerning the distribution of reflexive pronouns  , additional restrictions are necessary ( Popowich ,  1988) . Just as the syntactic c-command relation needs to be used in conjunction with a locality restriction  ( eg . the syntactic'clause mate'restriction ) , the distribution of R-antecedent is restric:ed by a semantic locality restriction  . Such a restriction , which is proposed in Pollard and Sag (1983) , essentially states that reflexive ' information ' cannot pass through categories of a generalised prediccuive type  . A generalised predicative takes an NP denotation as its argument  , and returns either an NP denotation or a ' proposition  . ' Adopting the notation used in ( Dowry , Wall and Peters ,  1981) , the semantic type of a functor that takes expressions of semantic type c ~ as argument so produce resulting expressions of type ~ is < a  , \[3> . This means that the semantic type of a generalised predicative is either < NP ' ~> or < NP '  , S "> , where NP " and S ' are the semantic types associated with noun phrases and sentences respectively  . 
Conventional categories that are associated with generalised " l ' ~ ~  . .  . 4 ~ or r = ~ i , ,iss~im a , ~ ri ~ in ( Popo , ~ i ~ t ~ u~s the predicatives include possessed nominals  ( like picture of himself in a ~ o , ,'c i~u ~ ot ~ R , ~mt/c/ , ,acz of ~ , ~ rsw , = LSm ~ ~ two iaak ~ the phrase John's picture of himsel\]  ) and verb phases . 
L ' ~ kl ~ tiradinra ~ tc ~ um , v ~ wiUsk ~ lltyo~dlscu ~ ionb , /us insthos~sa ~ . 
( i ) W-Ioves-W' ( // ) Mary-ioves-W' ( iii ) Mary-loves-herself .   .   . 
ii " iiii "
WIoves-W'Mary lovea-W?Mary loves-herself\[ np  , nor a \] . . . \[ ap , noml . . . \[ rip , nom\] . . . 
\[ i ' . . . . . tm ...

W'loves/W "/ ~' loves h~rself loves\[np , obj\] . . . ~\[ np , obj\] . . . \[ np , obj\]\[y\] . . . Iove(sl , x , y)\[y\] . . . love(sl . fl , y ) Jill .   .   . iove(sl , fl , ? D . . .  " ' "  . . .  <  . . . 
Figure 6: Distribution of R-Antecedmt Information blocking of R-antecedent information  . Consider a subtree of an FA specification ( like a in Figure 7 ) where the functor-sign is an
ZF ., ~ d ~\[ xl\[Yl

Figure 7: Predicate-Command and Locality Restrictions genera fisod predicative  . The R-antecedent information of the generalised predinative is ? list consisting of only the semantic index of the argument-sign  . T be R-antecedent informatinn of the root-sign does not contribute to that of the functor sign  . The signs of an FA specification conesponding to genendised predicative functors will be marked with ? syntactic feature to distinguish them from non-goneralised predicatives  . Functor-signs will be marked with the feature gprdff they are generalised predicative ?  . 
Non-generalised predicative functors which take noun phases as arguments will be m?rked as ? prd  , and other functors will possess the fearer ?- prd  . Arguments will not be marked with any ' predicate ' features  . The sefcamres are not actually necess?ry for our account of the dism'butiun of reflexive pronouns  ; our restrictions on reflexivisation can be defined in terms of other basic features  . The use of these features will allow the behs vion r of R-antecedent information to be observed more easily  , as illustrated in Figure 7 . 2 Foep redicative functors , the R-antecedent information of the funotor-sign is composed of the semantic index of the argument -sign and the R-antecedent information from the root-sign  . Note that the R-antecedent information of the sign labelled a is not included in that of the generaliscd predicative  , but the semantic index of the argument-sign of a is included in that of the functor  . For nun-predicative functors , the R-ante?~lent information of the root-sign will be the same as that of the functor-sign  . 
ANEXAMPLE
Now that we have seen bowR-antecedent information can be incorporated into FA specifications  , we can exm nine how this infonnatiun iter acu with other forms of infonnatiun during the analysis of a more complex sentence  . We shall consider the analysis of the smtence Mary Iove ~ a picture of herself  . After introducing various lexical entries , we shall see how they arc combined with lexical entries introduced earlier in this paper to form more complex FA specifications  . 
shmcs dotu .   . ~ p~themtheedi~m~t~dlmcdyiutl~vmlmmI ~ iod ran'ms  , tl~yc~mbomn~d~l in L . -; ~ to ~ c . ,~ whlch cm tm us0d in lask:e / ca ~ ( Sbmbmoud ~19 ~ . Popowlch ,  19~) , Allot thotazi ~/ mm~~dB mdm~i ~ l~cmI~s ~ plifizdtlm ~ lhtl ~ m of Imld ~  . 
In the lexicale nu7 for herself in Figure 8 , it is the argument-sign that is assoc~ted with the linguistic expression herself  . This sign contains ? restriction \[ .   .   . f /_\] which specifies that the semantic index f associated with herself is ? member of the reflexive attribute of the sign  . This arbitrary element of the reflexive store is required to be ? variable of the feminine sort  . 
The s~tex of this sign states that herself can act only as a noun phrase of the objective case  . Thus it cannot appear in any positions in an FA specification which require the noun phrase to posses some other case  . like no , ~ ive . ~eother noun phrases , the argument-sign contains the semantic onnective and which will be used in determining the semantics of the font-sign  . 
Unlike lexical entries for proper names and quantified noun phrases  , the semantics of the argument-sign does not associate my restrictive condition on the index it introduces  ; the condition truc is always rafs fiable for any discourse marker  . This ties in with the view of pronotms being semantically underspecified linguistic items  . Viewed in terms of DRT ( Kamp ,  1981) , the fonnule tru ~( . O ( which is an abbreviation for\[f\]true ( /~ ) merely introduces a discourse marker into the universe but does not introduce any condition on that marker  . Since the syntax of our ~ anticnotation requires a formula to consist of an index -condition pair  , we need to introduce a condition like true along with the discourse marker  . 
<>\[ a\]--herself\[np , obj\]\[t\]and(u~e~O ) ~__\[ .   .   . ft_\]
Figure 8: LexicalEntry for herself
The Icxical entry for the ' depic five ' preposition of  . which is used in picmre-nonn constructions , i introduced in Figure 9 . Of takes an object noun phrase argument to form a constituent which modifies a common noun  . Additional restrictions would be required to ensure that it modifies only depictive nouns like picture and portrait  . Tim lexical entry requires an auxiliary tree corresponding to an object noun phrase to be unified with  0t and one for a noun to be unified with \[~ . It also introduces a semantic formula of ( x , y ) which requires the entity denoted by x to be of the entity denoted by y  . Semantic formulae of the form\[a I\[A , B \] are sbbreviatiuns for formulae of the form \[ a \] and  ( A ) ( B )  . The functor-sign of a has been specified as ? generalised predicative-it takes ? noun phrase as an argmnent and results in another noun phrase  . According to our restrictions on R-antecedent information  , the R-antecedem information A of the root-sign of a is not included in that of the generalised predicative but it is included in that of the argument-sign  . In this way , the same R-antecedent information that is associated with the root-sign of  0t is also available to the embedded noun phrase ( i e . the argument of ot ) as highlighted in bold in Figure 9 . The functor-sign of the lexical entry for of possesses the feature+prd since it takes a noun phrase as its argument to produce a noun  . Since an argument sign always in herils its R -antecedent information from the root-sign  , the same R-antecedent infomaation is associated with both the root-sign of the lexical entry and the embedded phrase  . 
In order to obtain the FA specification for picture of herself shown in Fignrc  I0  , the lexical en U 7 for hersel facts as the\[ho Lm\]\[x\]\[\[x\ ] S  , \[ alP(\[y\]S')(of(x , y))\]
A ~: w\[noun , + prd\]\[xlS\[xlA\]c ~ of-W"np , of \]\[ a\]P (\[ y\]S')(of(x , y))

W'of\[np , obj\]\[np , of , gprd\](_\]P (\[ y\]$') of(x , y)
A\[y\]
Figure 9: LexicalEntry for of auxiliary tree which is unified with cz of the lexical enu  7 for of , and the lexical entry for picture is unified with  \[3  . Since\[f \] and ( tru ~ O  ~ ) is an abbreviation for \[ j ~ and ( \[f \] tru ~ O ~ ) in Figure 8 , the unification of this formula with \[_\] P ( \[ y\]S' ) from the primary tree will result in P becoming instantiated to and  , yto ~ and 5"to true (/) . Note that in this example , P is a variable over our ( finite ) set of semantic onnectives . The FA specification for herself introduces a restriction on the reflexive auribote of the sign associated with herself This restriction requires f to be a member of the list A which is still uninstantiated  . To represent that the restriction \[ .   .   . f /_\] was unified with A , we will introduce A as a subscrila on this restriction in the FA specifications that we are discussing  . This will make it easier to examine the behaviour of R-antecedent information  . The lexical entry for the noun picture introduces a marker of the neuter sort  , n / , and includes a condition which requires this marker to be a picture pie  ( M )  . 
When this lexical entry is combined with the FA specification for of herself  , x from the primary treegets instantiated to the variable associated with the picture nl  . Note that \[ nl \] and ( true ( jO ) (of ( n l d ~ ) is equivalent to \[ ni \] of ( nldO . 
<? picture-of-her self\[noun\]\[nl\]\[pic ( nl )  , of ( nl , f)\]
A of-her self picture\[np , of \]\[ noun , + prd\]\[nland(true(f )) ( of(nI , f )) pic(nl )
A\[nlIA \] herself of\[np , obj\]\[~ , of , gprd\]\[t'\]end(true(O ) of(nl . O\[ . . . fw_\]A\[tl Figure I0: FAS pecification for a picture-noun The FA specification for the determiner a is very similar to the one for the universal quantifier introduced in Figure  3  . We will not discuss it in detail here . Instead we will just note that it is constructed so that the reflexive attribute of the mot-sign of the FA specification for the phrase a picture of herself will be the same as that of the sign associated with the complex noun picture of herself  . Since the reflexive attribute of the sign associated with this complex noun is the same as that of the embedded reflexive noun phrase  ( see Figure I0 )  , this means that the R-antecedent information , A , of the complex noun phrase a picture of herself is the same as that of the embedded noun phrase associated with the reflexive pronoun  . So , any antecedents available to the complex noun phrase will also be available to the embedded reflexive  . 
This will result in the appropriate distribution of R-antecedent when the FA specification associated with a picture of hersel facts as an auxiliary tree to be combined with the primary tree corresponding to the lexical entry for love ~  . 
The lexical entry for the transitive verb loves ( Figure 11 ) requires two auxiliary trees corresponding to its ohjea and subject no on phrases to be unified with suhtrees a and  \[3 respectively . It is structured in much the same way as the lexical entry for walks discussed earlier  . Note that for a , the functor-sign is not a generalised predicative and so the R-antecedent information of the functor sign is made up of the semantic index y of the argument-sign ad the R-antecedent information \[ x \] of the root-sign  .   \[3 does have a generalised predicative functor-sign , so the R-antecedent information A ' of the root sign is not included in that of the generalised predicative  , \[ x\] . 
< o . , ~? \[3: W-Ioves-W ' \[ sengfin \] \[_\] P ( \[ x\]S ) (\[a'\]P' ( \[y\]S' ) (Iove ~ s 1 , x , y)))

Wa:loves-W'\[rip , nom\]\[v , f in , gprd\]\[_\]P ( \[ xlS ) \[ a'\]P' ( \[ ylS " ) ( love ( sl , x , y))
A'\[x\]
W ' loves\[np , obj \]\[ v , fin , + prd\]\[1P'(\[yS')Iove(sl , x , y)\[x\]\[y , x/\
Figure II : Lexical Entry for loves
When the lexical entry for loves takes the FA specification for a picture of herself as an auxiliary tree to be unified with a  , the reflexive attribute A from the auxiliary tree becomes instantiated to \[ x\]  . But recall that there is still an additional restriction placed on the A which requires f to be an arbitrary member of A  . This means that f must be unified with x ; the subject of the verb is stipulated to be an entity possessing a marker of the feminine sort as illustrated in Figure  12  . Unification of the auxiliary tree with a also results in y being instantiated to the variable associated with the picture hi  . The semantic formula PIC ( n l d ~ in Figure 12 is an abbreviation for the somewhat lengthy formulatrill\[pie  ( M )  , oj ~ nlJ)\] . 
When the FA specification from Figure 12 is combined with the auxiliary tree corresponding to the lexical entry for Mary  , the variable f from the primary tree becomes insmntiated to the discourse marker associated with Mary  . An attempto unify an FA specification for a ' masculine ' noun phrase with  \[3 of the primary tree would fail since the nominative noun phrase is required to possess a semantic index of the feminines on  ( as shown in bold )  . Thus , for a sentence like John loves a picture of herself there would be no FA spedfication and consequently no FA structure  ( unless there were some femal entity named John )  . 

The name " Tree Unification Grammar " suggests that TUG might be related to other unification -based frameworks as well as to other tree-based frameworks  . We shall briefly compare TUG with some of the beuer known of these related frameworks  . A\[sent , fin\]flP(\[x\]SX\[sl]\[PIC(nl , 0~ove(sl , fja1)\])

Wloves-a-picture-of-her self\[np , nor a \]\[ v , fm , gprd\]\[_\]P (\[ f\]S)\[s1\]\[PIC(nlj ) , love(sl , f , n l )\]
A If \] a-picture-of-herself loves\[np , obj \]\[ v , fin , + prd\]\[nl\]and(PlC(nl , f )) love(sl , f , nl ) if \] nl , t'\]o . .t " '- . o . . . .
...:"hcrsclf ""-.
."\[ np , obj\]"'..
.....\[t\]and(~c ~6) ""\[ fl
Figure 12: FAS pecification for a verb phrase more detailed discussion can be found in  ( Popowich ,  1988) . 
Uszkoreit ( 1986 ) introduces Categorial Unification Grammar ( CUG ) as a class of grammars which combine the features of categorial granunars with those of unification granmlars  . In CUG , directed acyclic graphs ( DAGs ) are used as the basic granunar structures . Granunatical c~t ~ stituents possess attributes for phonology  , syntax , and semantics . These constituents are essentially the signs of CUG  . Two grammar rides , for forward and backward funct/onal application , are used to form new constituents . CUG is s in ~ lart oPATR-r\[in that it could serve as a language into which TUGs could be translated  . A potential disadvantage of CUG is that it might be too unrestricted in the type of operations that it allows  ( van Benthem ,  1987) . In addition , the type of structures allowed in TUG is very restricted  ( binary trees containing only a fixed number of attributes  ) while those allowed in CUG are much less resuicted  . The structures used by TUG , UCG and other formalisms can be translated into a low-level format consisting of CUGDAGs  . A major shortcoming of using CUG or PATR-I/asa linguistic formalism is that the dependencies that amnecessary for determining anaphoric relationships are ' hidden ' in the DAG describing the linguistic expression  ; information is distributed in a fiatgraph structure with no higher order grouping expressed  . Although this may be beneficial with respect to implementing grammars  , it can make it difficult to work with the structures  . The advantage of the FA structure is that it is an explicitly hierarchical  ~6v   , r . sentation structure-a tree with structured . nodes-instead of a graph of simple nodes . This hierarchical structure allows many linguistic generalisations  , particularly those associated with reflexivisation  , to be stated easily and transparently . 
Tree adjoinin grammars ( TAGs ) ( Joshi , Levy and Takahashi ,  1975 , Vijay-Shanker and Joshi , 1988) possess trees as basic grammar structures , and gramma rules are used to alter the structure of these trees  . The relationship between TUG and TAG is very superficial as will be illustrated after a short description of the framework  . ATAG contains/n/t/a/trees and auxiliary trees . 
Initial trees are defined as nary trees possessing only terminal symbols as leaves  . The leaves of an auxiliary tree are all terminal symbols except for a single nontenninal  , the foo L which is of the same category as the root of the tree  . These two types of trees comprise the class of elementary trees  . There is a trecadjoining operation which is used to form derived trees  . AppLication of this rule results in the insertion of auxiliary trees into the middle of ~ nitlal trees or other derived trees  , subject ospeci ~ c restrictions . 
TAGs are fundamentally different from TUGs since the adjoining operation alters the structure of the ume instead of merely further instentiating it  . Adjoining involves the insertion of trees at internal nodes while the TUG operation can be viewed as the overlaying of trees to form larger structures  . The TAG framework has fully specified trees that are modified by other fully specified trees in order to obtain more complex fully specified trees  . In TUG , partially specified trees are combined ( not modified ) in order to ohtain a more fully specified complex tree  . Feature structure based TAGs ( FlAGs )   ( Vijay-Shanker and Joshi ,  1988 ) are more closely related to TUG than traditional TAGs  . The adjoining operation of FTAG amounts to combining a description of the auxiliary tree with that of the tree into which it is adjoined  . In this way , a more complete description of the final tree is gradually constructed  . However , in FTAG tree descriptions the internal tree structure is not fixed  . The descriptions are organised so that additional trees may be adjoined at specific locations  . After all the required adjoining operations have been performed  , these gaps in the tree structure are closed via unification  . In TUG tree descriptions ( FA specifications ) the internal tree structure is fixed ; the fringe nodes of the FA specification are the only ones for which tree structure information may not be specified  ( as designated by the hanging edges described exriler  )  . 
The most closely related grammar formalism to TUG is HPSG as described in  ( Pollard and Sag ,  1987) . The phrasal signs of HPSG are almost notational variants of the FA specifications of TUG  ; phrasal signs were not present in the early forms of HPSG  ( Pollard , 1985) from which UCG and TUG evolved . Aside from the dighfly different appearance of these different structures  , FA specifications are slightly more restrictive in that a node may only have two descendents instead of the unlimited number allowed in HPSG  . TUG also differs from HPSG in that it requires only one  ( instead of two ) grammar rules . This is a consequence of TUG having essentially phrasal-signs a lexical entries  . In this way , a lexical entry can directly access information other than that associated with its sister signs in a derivation tree  ( or phrasal sign )  . This allows interesting proposals for the treatment of reflexives in controlled complements and unbounded dependency constructions which am discussed in dc ~ aJ  . lin(Popowich , 1988) . 

In TUG , the phonological , syntactic , semantic and antecedent information describing linguistic expressions is contained insigns which are organised into FA structures  . These FA structures are binary ores which encode the functor-argurnent dependencies between the signs corresponding to components of a complex expression  . Partial specifications of FA structures are associated with individua lexical entries and these FA specifications are combined by a single grammar ole  . Dependencies between information associated with different linguistic constituents hat  . 
are traditionally captured by grammar roles are captured explicitly in the TUG lexical entries  . TUG can in some sense be viewed as a ' lexicalised ' UCG  , where ' lexice lised ' is . used in the sense discussed in ( Schabes , Abeille and Joshi ,  1988) . 
However , the FA structures described by a TUG analysis of a sentence are difficult to obtain as derivation trees in UCG  . As discussed earlier , the UCG grammar roles require the semantic attributes of the root-sign and fonctor-sign of any subtree to be the same  . Additional gramma rules would be needed by UCG to allow the diffenmt relation Shil ~ S between semantic infonmation antecedent information of a root-sign and functor-sign  . The R-antecedent iformation of a functor-sign can either be the same as that of the mot-sign  ( non-predicative functors )  , or it can consist of the semantic index of its argument in addition to the R-antecedent information of the mot-sign  ( po- . dicative functors ) , or it can contain only the sanantic index of its argument  ( generalised predicative functors )  . 
The R-antecedent information contained in FA specifications i treated on a level equal to the other forms of information  ; there is no need to invoke special mechanisms for passing this information  . Its distribution is governed by the predication command and generalised predicative constraints  . The reflexive attribute of the sign contains information that m/ght be needed by a reflexive pronoun  . So if a sign for a reflexive pronoun appears in an FA specification  , the possible antee e_a en_ts for the reflexive are easily accessible  . During ~ unification , if the sign associated with a reflexive pronoun contains no variables of the appropriates on in its reflexive store  , then the use of the pronoun is ungrammatical md tree unification fails  . Since an FA specification is associated with each potential antecedent of a reflexive proneen  , failure of anaphora resolution can constrain possible analyses  ; if there is no possible antecedent for a reflexive  , there will not be an FA specification . 

Bach , Emmon , and Barbara Panee .  (1980) . Anaphora and Semantic Structure . In C . Masek , P . Hendrick and M . Miller ( Eds . ) , Papers from the Paragession on Language and Behavior at the  17th Regional Meeting of the Chicago Lingaistica Society  . 
Chicago , IL
Boama , Gosse .  (1988) . Modifiers and Specifiers in Categurial Unification Grammar  . Liagaistica , 26(1), 21-46 . 
Bouma , Gosse , Ester Koanig , and Hans Uszkoreit .  (1988) . A Flexible Graph-Unification Formalism and its Application to Natural Language Processing  . In IBM Jownat of Research and Developmenl . Special Issgeon Computational Linguistics . 
C'hierchis , Germaro .  (1988) . Aspects of a Categorial Theory of Binding . In R . Oehde , IL Bach , and D . Wheeler ( Eds . ) , Calegorial Grammars and Natural Language Structures  . D . 
Reidal , Dordrecht , Holland.
Cooper , Robin .  0983) . Quantification and Syntactic Theory . 
D . Reidel , Dordrecht , Holland.
Dowry , David , Robert Wall , and Stanley Peters .  0981) . 
lm roduction to Momague Semantics . D . Reidel , Dordrech L

Gazdar , Gerald , Ewan Klein , Geoffrey Pullum , and Ivan Sag . 
(1985) . Generalized Phrase Structure Grammar . Basil
Blackweil , London.
Hellan , I . , an .  (1988) . Anaphora in Norwegian and the Theorynf Grammar . Foils Publications , Dordrecht , Holland . 
Jackendoff , Ray .  (1977) . X . bar Syntax : A Study of Phrase
Structure . MIT Press , Cambridge , MA.
Johnson , Mark .  (1987) . Attribsae-Value Logic and the Theory of Grammar . Doctond dissertadun , Department of Linguistics,
Stanford University , CA.
Johnson , Mark , and Ewan Klein .  (1986) . Discourse , Anaphora and Parsing . In : llth International Conference on Compalational Linguistics  . Bonn University , West Germany . 
Joshi , Aravind , Leon Levy , and M . Takahashi .  (1975) . Tree Adjunct Grmnmm . Y . Camp , , ' . Syst . Sci . , VoL10(I) . 
Kamp , Hans .  (1981) . A Theory of Truth and Semantic Retatsentation . In J . Groenendijk , T . lanssen , and M . Stokhof(F . da . ), Formal Method ~ in the Study of Langaage . Mathematical
CemmTracts , Amsterdam.
Kaplan , Ron , and Joan Bresnan .  (1982) . Lexical-Functional Grammar . A Formal System for Grammatical Representation . In I . Bresnan ( EcL ) , The MentalRet ~ resen~ation of Grammatical
Relation & MIT Press , Cambridge , MA.
Kaplan , Run , lohn Maxwell , and Annie Zaenen . (ffanuary 1987) . Functional Uncertainty . In : The CSLI Monthly , Centre for the Study of Language and Information , Stanford University , CA . 
Kasper , Robe R , and William Rounds .  (1986) . A Logical Semantics for Featm ? Structures . In : 24th meeting Assoc . 
Comput . Ling . Columbia University , New York , N . Y . 
Keunan , Edward .  (1974) . The Functional Principle : Ge~er ~ llzlng the Nodon of ' Subject of '  . In M . LaGaly , R . Fox , and A . Bruck ( Ecls . ) , Papers from the l Oth Regional Meeting of the Chicago Linguistics Society  . Chicago , \[L . 
Pollard , Cad .  (1985) . Lectures on I-IPSG . Unpublished lecture notes , CSLL Stanford University , CA . 
Pollard , Cad , and Ivan Sag .  (1983) . Reflexives and Reciprocals in English : An Alternative to the Binding Theory  . In M . Badow , D . Flickinger , and M . Westcoat ( Eds . ) , Proceedings of the 2nd West Coast Conference on Formal Linguistics . 
Stanford Linguistics Association , Stanford , CA.
Pollard , Carl , and Ivan Sag .  (1987) . lnformmion . Based Syntax and Semantics , Report 1: Fumtamentals . Centre for the Study of Language and Information , Stanford University , CA . 
Popowich , Fred .  (1988) . Reflexives and Tree Unification Grammar . Doctoral dissertation , Centre for Cognitive Science , University of Edinburgh , Edinburgh , Scotland . 
Schabes , Yves , Anne Abeilie , and Aravind loshi .  (1988) . 
Parsing Strategies with " Loxicalized ' Grammars : Application to Tree Adjoining Grammars  . In: 12th International Conference on Computational Lingt ~ atic ~  . Budapest , Hungary . 
Shieber , Stuart , Hans Uszkoreit , Femando Pereira , Jane Robinson , and M , Tyson .  (1983) . The Formalism and Implementation fPATR-H . In B . Grosz and M . Stickel ( Eds . ) , Reaearch on Interactive Acquisition and Use of Knowledge  . SRI
International , Menlo Park , CA.
Uszkoreit , Hans . (1986), Categorial Unification Grammars . 
In : llth International Conference on Computational Linguistics  . 
Bonn University , West Germany.
van Benthem , Johan .  (1987) . Categorial Equations . In E . Klein and J . van Benthem ( Eds . ), Categories , Polymorphlsm and Unification . Centre for Cognitive Science , University of Edinburgh , and Institute for Language , Logic and Information , 
University of Amsterdam.
Vijay-Shanker , K . , and Aravind Joshi .   .  (1988) . Fuamre Structures Based Tree Adjoining Grammars . In: 12th International Conference on Computational Linguistics  . 
Budapest , Hungary.
Zeevat , Henk , Ewan Klein , and Jo Calder .  (1987) . An Inmxluction to Unification Categorial Grammar . In N . Haddock , E . Klein , and G . Morrill ( Eds . ) , Edinburgh Working Papers in Cognitive Science , VoI . I : Categorial Grammar , Unification Grammar , and Parsing . Cemrefor Cognitive Science , Univ . of
Edinburgh , Scod and.

