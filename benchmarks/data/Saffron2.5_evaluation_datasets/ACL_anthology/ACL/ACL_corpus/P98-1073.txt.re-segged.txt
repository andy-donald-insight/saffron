Versl'utilisation desmthodes formelles pour
led veloppement delinguiciels
Bilel Gargouri , Mohamed Jmaiel , Abdelmajid Ben Hamadou
Laboratoire LARIS
FSEG-SFAX , B.P . 1088
3018 SFAX , TUNISIA
Email : Abdel majid . Benhamadou@fsegs.rnu.tn
Abstract
Formal methods have ' nt been applied enough in the development process of lingware although their advantages have been proved in many other domains  . In this framework , we have investigated some applications dealing with different processing levels  ( lexical analyses , morphology , syntax , semantic and pragmatic ) . 
These investigations has mainly led to the following observations  . First of all , we have noticed a lack of use of methodologies that cover all the life cycle of a software development  . The formal specification has not been used in the first development phases  . In addition , we have noticed the lack of formal validation and consequently the insufficient guarantee of the developed software results  . Moreover , there has been no appeal to rigorous methods of integration to solve the dichotomy of data and processing problem  . However , the use of the formal aspect in the Natural Language Processing  ( NLP ) has generally been limited to describing the natural anguage knowledge  ( i . e . , grammars ) and specifying the treatments using algorithmic languages  . Few are those who have used a high level specification language  . 
This paper focuses on the contributions of formal methods in developing natural anguage software starting from an experimentation carried out on a real application and which consists in specifying and validating the system CORTEXA  ( Correction ORthographique des TEXtesArabes ) using the VDM formal method . 
First of all , we review the advantages of formal methods in the general software development process  . Then , we present he experimentation and the obtained results  . After that , we place the formal methods advantages in the context of NLP  . Finally , we give some methodological criteria that allow the choice of an appropriate formal method  . 

Rdsumd :
Lesmkt hodes formelles n ' on t pask td surf-is amment utiliskes dansle processus de ddveloppe ment des linguiciels  , alors qu ' elle sont fait leurs preuves dans d ' autres domaines  . 
Leprd sent article essay edemet treen reliefles avantages desmkthodes formelles dansle context e des langues naturelles  , partant desrksult at sd'une expkriencer kaliske surune application rkelle  . Dansun premier temps , nous rappel lonsles avantages globaux des mk thodes formelles dansle process us de dkveloppement d ' unlogiciel  . Ensuite , nous pla ? on scesavantages dansle contextedes langues na-turelles  . Enfin , nous donnons lescrith resm kthodologiques pour le choixd ' unemkthode formelle approprike  . 
1 Introduction
L ' automatisation des langues naturelles a bdnkficikjusqu'knosjours de nombreuses anndes de recherche set continue encore fair el ' objet de plusie urstravaux  , notamment dansle domaine dugknie linguistique pour led kveloppement d ' applications spkcifiques  . 
L'ktude des approches de dkveloppe ment des applications likes au Traitement Automatique des Langues Naturelles  ( TALN )  , k tousses niveaux ( i . e . , lexical , morphologique , syntax-ique , skmantique et pragmatique ) , ( Fuchs , 1993; Sabah ,  1989 ) nous a perm is deconstate run equasi-absence del ' utilisation demdthodologies de dkveloppement qui inth grent to utes les phases ducycle devied'un logiciel  . Enpar-ticulier , a univeaudes premihres d tapes , nous avons constatkl ' absence quasi-totale de la phase despkcification formelle  . 
D ' unautrec5t 4 , nous avons constat d une dif-fi cult k , voir eabsence devalidation form elle des approches utilisdes dans ledk veloppement et par consdquent degaranties urles performances des rk sultats obtenus  . Dem~me , nousavons remarqu6 lenon recours ? desm dthodes rigoure uses d ' in tkgration pour rksoud rele problhme de la dichotomie  donn6es-traitements  . 
L'utilisation des out ils formels s'est limit k e , dans laplup art descas , kla description du langage(i . e . , les grammaires ) etkl aspdcification destraitements r~duite , g@nkralement , kl ' usaged ' unlangage algorithmique . Rares sont ceux quion tutilisk unlangage de spkcification formelle de haut niveau  ( Zajac , 1986; Jensen et al ,  1993) . 
A prhsune prk sentation desavantages qu ' offrent lesm kthodes formelles dansle processus de dkveloppement d ' unlogiciel  , d'uneman ihregknkrale , cetarticle essay edemettreen reliefles avantage specifiques audomaine de TALN partant d ' une expkrience mendea use in denotrek quipeen utilisant lamkthode VDM  ( Dawes , 1991; Jones ,  1986) . I1 donne , ~ lafin , descrithres permettant lechoix d'unemkthode formelle approprike  . 
2 Rappe l des pr inc ipaux avantages des mdthodes formelles L ' int@gration desmkthodes formelles dansle process us dedkveloppement decertaines applications critiques commeles systhm estemps r deletles systhmes distribu'ksa donnkses preuvesces dernih resannkes  ( Barroca and Der-mid , 1992; Dick and Woods , 1997; Ledru ,  1993) . C'est cequia motiv kleurutilisation dansle ddveloppement delogiciels traitant desproblhmes complexes a unive a uindustriel  ( Hui et al ,  1997) . 
Unemkthode formelleest considkrke commeune ddmarcheded kveloppe nt de logiciels baskesur desnotations mathdmatiquest des preuves de validation formelles  ( Habrias ,  1995) . 
Cetted kmarcheutilise un processus derai Tine -ment quipart d ' unespkcification abstraite des be so in spourd k boucher surune spkcification raffinkee texk cutable  ( oud irectement codable en unlangage de programmation  )  . Lesprinci-paux avantages desmkthodes formelles peuvent ~ trerk sumks dans lespoints suivants : Laprd cision et lanon ambiguit d:l'utilisation d ' unlangage bask surdes notations form elle set prkcises permet d'k viter to ute ambiguit kettoute redondance dans laspk cification  . 
Laddteetiond ' erreurs conceptue Uesle plust St possible : l ' application depreuves devalidation delaspk cification toutle long du processus de raffinement decetted ernihre  , garantil addtection deserreurs de conception le plust St possible dansle process us de dkveloppement del ' application  . Enl ' absenced ' unetellevalidation , leserreurs de conceptiones eront cequi engend reraun  c6ut suppl ~ mentaire . 
Lasatisf action de la conception ( dventuellement del ' impld mentation ) parr apportaux be so in s:elle est garantiegr?ce au processus der affinement quipart d'une  sp4cification desbeso inset applique des rhgles coh~rentes de transformation pour about ir ~ la conception final e  . 
Le contrble de la cohd rence do nn des-traitements : quiest directement prisen chargegr?ce aux preuves devalidation  . 
Lardutilisation : leraffinement des specifications form elle set leurs d~compositions successives permettent demet treen ~ vidence des niveaux d ' abstraction in t ~ ressants pour lar ~ solution du probl ~ met pour promou voir lar ~ utilisation  ( dessp 4 cifications )  . 
3 P resentat ion et r~su l ta ts de l ' exp~r imentation  3  . 1 Cho ix et d~marche uti l is4e Pour mesurer l ' impact del ' utilisation desm ~thodes formelles dansle contexted uTALN  , nous avons effect u ~ l a specification complhte et valid ~ edu systhme CORTEXA  ( Correction ORthographique des TEXtesArabes )   ( Ben-Hamadou , 1993) d~velopp ~ ausein de not relab-oratoire . 
Outrela disponibilit ~ deladocumentation , enmati ~ redeconceptionet d ' impl ~ mentation , le choix du syst~me CORTEX Aest aussimotiv ~ par la diversit ~ des approches util is ~ es pour la representation desconnaiss ancest destraite -ments  . Eneffet , ilse compose : ? d'un module de d~tection des erreurs bas ~ surune analyse affixalequi utilise unsysthme ~  4tats finis ( lesr~seaux detransitions augment ~ es:ATN )  . L'analyse af-fixale effectuelad ~ composition d ' unmotenses composants premiers : pr~fixe  , in-fixe , suffix eetracine enser ~ f ~ rant ? unensemble de lexique set destructures de donn ~ es  , ? d ' unmodule decorrection deserreurs or -thographiques quiutilise unsysthme ~ base de rhgleset ? d'unautre module de correction des erreurs typographiques quise bases urun systbme mixte  . 
Lechoix de VDM pour laspecification de COR-TEXA estmotive  , d'une part , parle fait que cettem ~ tho desebase sur les pr ~dicats quid on-nent unhaut pouvoir express if  , etd ' autrepart , pours a notation simple etriche . Aussi , VDM afaitses preuves dans led ~ veloppement de plusieurs systhmes d ' information  . Contraire-mentaux environnements de specification des do nn~es linguistique stelsque D-PATR  ( Karttunen ,  1986) , EAGLES ( Erbach et al ,  1996) , etc , VDM permet despecifier ? lafo is destraite -ment set desdonn ~ es  ( dans not recontexte des do nn~es linguistiques ) et off reunem~thodologie de d~veloppe ntd ' applications sebasant surdes raffinement set des transformations valid ~ es  . 
Partant dela description informelle des be-soins , nousavons d6velopp ~lasp ficification abstraited usystbme CORTEXA ( appelfie aussispg cification implicite ) quieng lobe , en-treautres , lasp ficification form elle deses fonc-tions , deses action set deses rbgles de correction . Cettesp ~ cification af it 6 , ensuite , valid fieen utilisant despreuves for melles . Enfin , nous avons g~n ~ ral is ~ lasp ~ cification de conception  ( appel ~ eaussisp ficification explicite ou direct e  ) partir de lasp ~ cification abstraite moyen-nant desrbgles relatives ? la  m6thode VDM . 
Cette sp4cification deconceptionest facile-merit transform6e encode pourrfialiser laphased ' impl fimentation . 
3.2 R~sultats obtenus
L ' utilisation de lam~tho deformelle VDM pour la sp6cification complbte et valid ~ edu systbme CORTEXA a conduit , entreautres , aux con-stats suivants : InsuJ fisance nr ~ gles : l ' utilisation despreuves formelles nous a perm is demettreen relief  , parr apport ~\[ a specification initiale , certainesitu-ations nonprises encompte . En particulier , les preuves quiper mettent des ' assurer que pour chaque typed'erreurdolt exister aumoins une rhgle decorrection ou sont perm is deconstate r quel'ensemble desrbgles de correction  , initiale-ment propos ~ , nepermet p as deprend reen charget out el a typologied ' erreurs  . 
Exemple 1: preuve relative ? l'erreur desup- ( Vw '? ~ CH , Vw ~ Lex ) . ( Del(w,w')Aw'?_Lex ) ~, (3 ReReg) . w ~ R(w ') oh
Lex : le lexique der 4f ~ rence
CH:l'ensemble dess~quences de chaines de caracthresR l'ensemble des rhgles de correction R  ( w ) : l ' application de larhgle Rsurla chainew . On repr ~ senteuner hgleen VDM parune fonction Del  0 : unpr~di cat quiv ~ rifiel ' erreur desuppression decaract ~ re  . 
Laprd cision et la concision delasp dcification : encomparantla specification in-formelled u systhme CORTEXA  , pr ~ sent ~ edans la documentation , avecla specification formelled ~ velopp ~ e , nous remarquons que eet tedernihre est plus precise et plus concise  . L'exemple2 , donn ~ ci-aprhs , quipr ~ sentel a specification formelle de la fonction deg~n ~ ration desd~compositions affixales possibles d ' unmot w  , illustrece constat . 
Exemple 2: lsdecomp(w , p , i , s , root:CH)r:B preTrue post3a , bECH(w = p . a . i . b . sA root = a * b ) A(S prefix e(w , p)A
S suffix(w , s)/XS infixe(w , i )) oh
B : le type bool ~ en
Sinfixe 0 ( respectivementS prefixe 0 etSsu\]fixeO ) : unpr~di cat quiv ~ rifiela propri~t ~ d'un infixe  ( respectivement d ' unpr ~ fixet d ' unsuffixe ) pour une chaine . 
Facilit d du ddveloppe ment duco de : la specification deconception obtenues t suffisam -ment explicite pour lesd on n~eset alorith-mique pour lestraitements  . Elleest donc facile-ment codable en unlangage deprogrammation  . 
L'exemple 3 , illustrel ' usaged ' une notational-gorithmique dans la  sp6cification desfonctions . 
Ilpr ~ sentela fonction S-Radical dev ~ rification de la propri~t ~ d ' unradical  ( form 6 parlaracine et l ' in fixe )  . 
S radical : CHxCH > B
Sradieal(sl , s2)-=De\]ifs , -=\[\] then False else if S prefix e(sl , s2) then True else Sradieal ( tl(sl) , s2 ) ohriO : une fonction VDMquire tournelas ~ quence en en tree priv ~ e des at ~ te  . 
Unicitd delanotation : lesm~thodes formelles permettent d'utiliserlam ~ menotation pour d ~crire aussibienles donn ~ esquelestraite -ments  . Eneffet , avecle langage VDM-SL , as-soci ~ kVDM , nous avons puspecifier to utes les fonction set lesd on n ~ es der ~ f ~ rence de COR-TEXA  . Les exemples 4 et 5 illustrent cette unic it ~ pour la representation desdonn ~ escom-pos de set des fonctions  . 
Exemple 4 : l'en registrement relatifaux donn~es d'uned ~ composition d ' unmoten unpr ~ fixe  , uninfixe , unsuffixe et uneracine . 
Decomp::p:CHi:CHs:CHr:CH
Exemple 5: specification del'action quig ~ nhreles propositions decorrection dessuffixes par suppression de caracthre  A3s  ( p:CH , c:CHAR)SC and : set of CHpreTrue post 3a , b , plECHp = aec . bApl = a ? bAP le Suff ~ PlCSCandoh
CHAR : l'ensemble des caracthres
SC and : les suffixes candidatskla correction
Surf : l ' ensemble des suffixes.
Cohdrence do nn des-traitements : l'unicit ~ de la notation  , a permisd ' appliquer despreuves for mellesk la lo is surdes d on n ~ e set destraitement set par consequent de  contr61er lacoherence deces derniers . L'exemple 1 illustrece contr61e dansle casd ' unsysthme ~ baseder hgles . 

Lavalidation dechaque composant dusyst ~ me : pour chaque composant ou moduled usystbme CORTEXA  , nousavons appliqu6 les preuves devalidation appropri6es   , ce quinous a perm is devalider to usles r6sultats partiels du systbme . Let h6 or bmed el ' ex emple 6 , donn6ci-aprbs , permet de prouver qu ' ? lasuite del ' application delarbgle decorrection d'uneer-reur de substitution  , les propositions decorrection obtenues appartiennent au lexique  . 
Exemple 6:
Vw ' ECH , Vw ~ Lex . Sub(w,w ~): . 3 R ~ Reg . R ( w ' ) C_Lexo ~ Sub : unpr@di catqui v6rifie l'erreur de substitution de caracthres . 
4 In t6r6ts des m6thodes formelles en g6n ie linguistique Cette exp6rimentation   , bien qu ' elle so it as sez limit ~ edansle temps ( el leadur ~ uneannie en-viron ) et dans son context e ( elles ' est int6ress6 unseul systhmet nonk plusieurs )  , elle nousaper misd ' appr@cier ? just et itre l'int@r6t de recouriraux m6thodes formelles dansle pro-cess us de d6veloppement desapplications li6es au TALN . Ellenous a aussipermis de d6gager certains a vantages globaux d6di6s audomaine du TALN quiviennent consolider ceux que nous avons  d4j  ?  cit6s dans uncadre g6n6ral de d6veloppement des Iogiciels . Cesavantages sp6cifiques peuvent ~ tre r@sum6s et argument6s dans lespoints quisuivent . 
D ' a bord , a univeau dela specification des be so in s , les applications du TALN sont g6n6ralement trhsambitie uses au d6part   . Or on connaitau jourd'huiles limites desmodbles linguistique set desout ils de  repr6sentation desconnaissances . L ' utilisation d ' out ils formels dansles premibres  6tapes de d6veloppement   ( i . e . , analyse ) permet demett retrbs vite en 6vidence leslimites du systbmek d6velopper   , en particulier , surleplandela couverture linguistique et par cons6quent departir pour l'6tape deconceptions urune version valid6e du systbme quiser a impl@ment6 et de pr4voir   d'embl6 les possibilit6s d ' extention et de r6utilisation  . 
Parailleurs , la complexit6 destraitements li6s aulangage nature let la diversit6 des donn6es linguistique set desfortes int6ractions qui existent redonn@e set traitements rendent lat ~ chede conception trbs difficile et pou-vant engend rer desproblbmes  d'incoh6rence  . 
L ' utilisation des m6thodes formelles a univeau delaconception permet d ' abord  , de g6rer ladichotomie donn6es-traitements so it par l'int6gration   ( i . e . , en utilisation l'approche ob-jet ) , so it parle contr Sle de coh 6 rence(i . e . , par des preuves de validation ) eten suite demet treen 6 vidence , pardes regroupement set desraffinements success if s  , desabstractions int6ressantes   r6utilisables telsque des module soudessous-systbmes pouvant ~ tredisponibles dansune bibliot hbque  ( Darricau et al ,  1997) . 
Cesabstractions correspondent parexempledes modules standards duTALN traitant leniveau  phon6tique   , morphologique , syntaxique , etc . Notons ? ce proposque , lar6 utilisation desp6cifications(i . e . , de conception ) peutsefaire directement oumoy ennant des adaptations  . Les m6thodes formelles of frent des environnements qui facilitent cesadaptations  ( 6 diteurs ,  . . ) etquiper mettent lavalidation des nouvelles p6cifications  . 
Enfin , l'utilisation d'unenotation uniforme donnela possibilit6   d'int6grer dans lam@me application une vari6t @deconnaissances surla langue sp6cifi@es avec des formalismes diff6rents   ( i . e . , grammaires d'unification , HPSG , Gram-maires Formelles , etc ) . Cequipermet-terad'avoirunemeilleure coh6rence dans la sp6cification finale k produire . 
5 Les c r i tb res de cho ix d ' une m6thode formelle pour le TALNL ' utilisation de lam ~thode VDM pour laspecification complhte et valid ~ edu systhme 
CORTEXA a@t@?titred'essai . Toute-lois , le choix d'u nem ~ tho deform elle pour led ~veloppement d'une application de TALN reste crucial  . Cechoix dolt tenir compte de ssp ~ cificit ~ sdu domaine des langues naturelles sur lepl and u langage despecification et surcelui delam ~thodologie appliqu ~ e  . Dan scequisuit , nous donnonsques crith resquenous jugeons pertinents dansle choixd'unem~tho deformelle dansle contexte de TALN:m~thode:possibilit ~ d ' in t ~ grerdanslam ~ mespecification des connaissances linguistiques vari~esd~crites avec desformal-ismes  diff4rents   . Lelangage de sp4cification do it pouvoir unifier la representation des diff4rentes expressions . Lepouvoir expres-s if concerneaussila specification conjointedes do nn~es linguistiques et lestraitements quile urs sont appliques  . 
? Simplicit ~ delanotation et de lam~thodologie dd ~ veloppement  . 
? Couverture maximal educycle deviedu logiciel ~   d4velopper  . 
? Existanced'Ateliers de G~nie Logiciel ( AGLs ) quisup portent lam~thode . 
? Possibilit ~ desupporterl ' architecture du systhm visag ~  ( i . e . , s~quentielle , dis-tribu ~ e , parallhle , etc) . 
6 Conclusion
L'utilisation desm~thodes form elles dansle contextedes langues naturelles per met  , nonseulement deconsoliderles avantages globaux deces methodes dans le cadreg ~ n ~ ralded ~veloppement delogiciels  , mais aussider ap-porter denouve aux profitssp ~cifiquesau domaine  . Cetteutilisation concerneaussibienle processus de d~veloppe ment des applications que leur maintenance  . Cependant , le choix d'unem ~ tho deap propri ~ ersteli ~? la disponi-bilit ~ d ' out il slogiciels  associ4s quifacilitent sami seenoeu vreetkla construction d ' une bib-lioth hque de specifications r ~ utilisables  . 
Actuellement , no stravaux seconcentrent surl a finalisation d ' une approche que nous avons d~velopp ~ epourg~n ~ raliserl'utilisation desm~thodes formelles  ( VD Mouautres ) dansle processus de d~veloppe nt des linguiciels  . 
Cette approche in thg relesprincipaux formal-ismes existants de description desconnaissances linguistiques  ( i . e . , Grammaires d ' Unification,
Grammaires Formelles , HPSG , etc).

L . M . Barroca and J . A . McDermid .  1992 . Formal methods : use and relevance for the development of safety-critical systems  . The Computer Journal , 35(6) . 
A . Ben Hamadou .  1993 . Vdrification et correction automatiques par analyse affixale destextes dcritsen langage nature l : lecas del ' arabe nonvoyell d  . Ph . D . thesis , Facult ~ des Sciences de Tunis . Thhse Es-Sciences en Informatique . 
M . Darricau , H . Hadj Mabrouk , and J.G.
Ganascia .  1997 . Une approche pour lar ~ utilisation des sp6cifications delogiciels . 
Gdnie Logiciel , (45):21-27, September.
J . Dawes . 1991. The VDM-SL reference guide.
Pitman Publishing.
J . Dick and E . Woods .  1997 . Lessons learned from rigorou system software development  . Information and Software Technology , 39:551-560 . 
G . Erbach , J . Dorre , S . Manandhar , and
H . Uszkoreit .  1996 . A report on the draft ea-gles encoding standard for hpsg  . In Actes de
TALN-96, Marseille , France , May.
C . Fuchs . 1993. Linguistique et Traitements
Automatiques des Langues . Hachette.
H . Habrias .  1995 . Les specifications formelles pour lessysthmes d ' informations quoi ? pour quoi ? comments ? Ingdnierie dessyst ~ mesd'information  ,  3 (2) : . 205-253 . 
J . Hui , L . Dong , and X . Xiren .  1997 . Using formal specification language in industrial software development  . In Procedings of the IEEE International Conference on Intelligent Processing Systems  , pages 1847-1851 , Beijing , China , 

K . Jensen , G . E . Heidorn , and S . D . Richardson .  1993 . NLP : The PLNLP Approach . Kul-wer academic publishers . 
C . B . Jones .  1986 . Systematic software development using VDM . Printice Hall . 
L . Karttunen .  1986 . D-patr : A development environment for unification-based grammars  . In In Proceedings of the ~ lth International Conference on Computational Linguistics  , pages 74-80 , Bonn , Germany . 
Y . Ledru .  1993 . Developing reactive systems in a vdm framework . Science of Computer Programming , 20:51-71 . 
G . Sabah .  1989 . L ' intelligence artificielle et le langage . Hermes . 
R . Zajac .  1986 . Scsl : a linguistic specification language for rot  . In Procedings of COLING'86 , pages 25-92 , Bonn , Germany , August . 

