An Improved Heuristic for Ellipsis Processing *
Ralph M . Welschedel
Department of Computer & Information Sciences
University of Delaware
Newark , Delaware 19711
and Norman K . Sondheimer
Software Research
Sperry Univac MS2 G3
Blue Bell , Pennsylvania 19424
I . Introduction
Robust response to ellipsis ( fragmen-tary sentences ) is essential to acceptable natural language interfaces  . For instance , an experiment with the REL English query system showed  10% elliptical input ( Thompson ,  1980) . 
In Quirk , et al (1972) , three types of contextual ellipsis have been identi-fied:I  . repetition , if the utterance is a fragment of the previous sentence  . 
2 . replacement , if the input replaces a structure in the previous sentence  . 
3 . expansion , if the input adds a new type of structure to those used in the previous sentence  . 
Instances of the three types appear in the fol lowing example  . 
Were you angry ? a ) I was.
b ) Furious.
c ) Probably.
d ) For a time.
e ) Very .
f ) I did not want to be.
g ) Yesterday I was.
( repet i ion with change in person )   ( replacement )   ( expansion )   ( expansion )   ( expansion )   ( expansion )   ( expansion & repetition ) In addition to appearing as answers following questions  , any of the three types can appear in questions following statements  , statements following statements , or in the utterances of a single speaker . 
This paper presents a method of au-tomatically interpreting ellipsis based on dialogue context  . Our method expands on p~evious work by allowing for expansion ellipsis and by allowing for all combina-tions of statement following question  , question following statement , question following question , etc . 
* This material is based upon work partially supported by the National Science Foundation under 
Grant No . IST-8009673.
2. Related Work
Several natural language systems ( e . g . , Bobrow et al , 1977; Hendrix et al . , 1978; Kwasny and Sondheimer ,  1979 ) include heuristics for replacement and repetition ellipsis  , but not expansion ellipsis . One general strategy has been to substitute fragments into the analysis of the previous input  , e . g . , subst i tu t ing parse trees of the e l l ip t i calin put into the parse trees of the previous input in LIFER  ( Hendrix , et al ,  1978) . This only applies to inputs of the same type , e . g . , repeated questions . 
Allen ( 1979 ) deals with some examples of expansion ellips is  , by fitting a parse delliptical input into a model of the speaker's plan  . This is similar to other methods that interpret fragments by placing them into prepared fields in frames or case slots  ( Schank et al , 1980; Hayes and Mouradian , 1980; Waltz ,  1978) . This approach seems most applicable to l imited-domain systems  . 
3. The Heuristic
There are three aspects to our solu-tien : a mechanism for repetition and replacement el lipsis  , an extension for inputs of different types , such as fragmentary answers to questions , and an ex-tension for expansion ellipsis . 
3.1 Repetition and Replacement
As noted above , repetition and replacement ellipsis can be viewed as sub-stitution in the previous form  . We have implemented this notion in an augmented transition network  ( ATN ) grammar interpreter with the assumption that the " previous form " is the complete ATN path that parsed the previous input and that the lexical items consumed along that path are associated with the arcs that consumed them  . In ellipsis mode , the ATN interpreter executes the path using the e llipt-ical input in the following way : i  . e . , the cur ren ~ input , may be consumed along the path at any point . 
2 . Any arc requiring a word not found in the current input may be traversed using the lexical item associated with the arc from the previous input  . 
3 . However , once the path consumes the first word from the e lliptical input  , all words from the elliptical input must be consumed before an arc can use a word from the previous input  . 
4 . Traversing a PUSH arc may be accom~plished either by following the subpath of the previous input or by finding any constituent efthere-quired type in the current input  . 
The entire ATN can be used in these cases.
Suppose that the path for " Were you angry ?" is given by Table I  . Square brackets are used to indicate subpaths resulting from PUSH es  .  " . . . " indicates tests and actions which are irre levant te the current discussion  . 
01 d Lexical
State Arc Item
S(CATCOPULA . . . ( TOS x )) " w - - ~' r ~ e "
Sx(PUSHNP .   .   . ( TOSy ))\[ NP ( CATPRO .   .   . ( TONP a )) " you "
NP a ( POP . . .)\]
Sy(CATADJ . . . ( TOSz )) " angry "
Sz ( POP ...)
Table I
An ATN Path for " Were you Angry ?"
An elliptical input of " Washe ?" following " Were you angry ?" could be under -steed by traversing all of the arcs as in Table I  . Following point I above , " was " and " he " would be substituted for " were " and " you "  . Following point 3 , intravers-ing the arc ( CATADJ . . .   ( TOS z ) ) the lexical item " angry " from the previous input would be used  . Item 4 is illustrated by an elliptical input of " W as the old man ?"  ; this is understood by traversing the arcs at the Slevel of Table I  , but using the appropriate path in the NP network to parse the old man  3  . 2 T rans format ions of the Prev ious Form Whi le the approach illustrated in Section  3  . 1 is usefu l in a data base query env i ronment where ~\] liptical input typically is a mod lfication of the previous query  , it does not account for ellipticals tatements following questions  , elliptical questions following statements  , etc . Our approach to the problem is to write a set ef transformations which map the parse path of a question  ( e . g . , Table I ) into an expected parse path for a declarative response  , and the parse ~ path for a declarative into a path for an expected question  , etc . 
The left-hand side of a transformation is a pattern which is matched against the ATN path of the previous utterance  . 
Pattern elements include literals refer-r ing tearcs  , variables which match a single arc or embedded path  , variables which match zero or mere arcs , and sets efal-ternatives . It is straightforward to construct a disc rimination net corresponding to all left- hand sides for efficiently finding what patterns match the ATN path of the previous sentence  . The right-hand side ef a transformation is a pattern which constructs an expected path  . The form of the patternent heright-hand side is a list of references to states  , arcs , and lexical entries . Such references can be made through items matched on the left-hand side or by explici t construction e f literal path elements  . 
Our technique is to restrict the mapping such that any expected parse path is generated by app lying only one transformation and applying it only once  . A special feature of our transformational system is the automatic allowance for dia loguediex is  . An expected parse path for the answer to " Were you angry ?" is given in Table  2  . Note in Table 2 , " you " has become " I " and " were " has become " was " 
Old Lexical
State Arc Item ( PUSH NP . . . ( TOS a )) ( CATPRO . . . ( TONP a )) ( PoP . . . ) ( CATCOPULA .   .   . ( TOSy )) ( CATADJ . . . ( TOSz )) ( POP .   .   .  )
S\[NP"I "
NP a\]
Sa " was "
Sy " angry "

Table 2
Declarative for the expected answer for " Were you angry ?"  . 
Using this path , the ellipsis interpreter de'scribed in Sect ion  3  . 1 would understand the ellipses in " a ) " and " b ) " below , in the same way as " a ') " and " b'i " a ) I was . 
a ') I was angry.
b ) ~ yspouse was.
b ') Myspouse was angry.
86 3.3 Expansions
A large class of expansions are simple adjuncts , such as examples c , d , e , and g in section I . We have handled this by building our ellips is interpreter to allow departing from the base path at designated states to consume a nad junct from the input string  . We mark states in the grammar where adjuncts can occur  . For each such state , we list a set of linear ( though possibly cyclic ) paths , called " expansion paths " . Our interpreter as implemented allows depar tures from the base path at any state so marked in the grammar  ; it follows expansion paths by consuming words from the input string  , and must return to a state on the baseform . 
Each of the examples in c , d , e , and g of section I can be handled by expansion paths only one arc long  . They are given in Table 3 . 
Initial


Expansion Path ( PUSHADVERB ... ( TOS))
Probably ( I was angry).
( PUSHPF ...( Tos))
For a time ( I was angry).
(PUS ~ ~ P ( * this includes a teat that the NP is one of time or place  )  ?  . . ( TO S))
Yesterday ( I was angry).
( PUSHINTENSIFIER-ADVERB .   .   . ( TOSy )) ( I was ) very ( angry ) . 
Table 3
Example Expansion Paths
Since this is an extension to the ellipsis in ter preter  , combinations of repetition , replacement , and expansion can all be handled by the one mechanism  . For instance , in response to " Were you angry ?" , "Yesterday you were ( angry ) " would be treated using the expansion and rep lacement mechanisms  . 
~. Special Cases and Limitations
The ideal model of contextual el-lips is would correctly predict what are appropriate ell iptical forms in context  , what their interpretation is , and what forms are not meaningful in context . We believe this requires structural restric - tions  , semantic constraints , and a model of the goals of the speaker . Our heuris-tic does not meet these criteria in a number of cases  . 
Only two classes of structural con-stra ints are captured  . One relates the ellipsis to the previous form as a combi-nation of repetition  , replacement , and expansion . The o~her constraint is that the input must be consumed as a contiguous string  . This constraint is violated , for instance , in " I was ( angry ) yesterday " as a response to " Were you angry ?" Nevertheless  , the constraint is computa-tionally useful , since allowing arbitrary gaps in consuming the elliptical input produces a very large space of correct interpretations  . Aludicrous example is the following question and elliptical response : Has the boss given our mutual friendaraise ? 
A fatraise.
Allowing arbitrary gaps between the sub-str ings of the ellipsis allows an in-terpret a tion such as " A  ( boss has given our ) fat ( frienda ) raise . " While it may be possible to view all contextual ellipsis as combinations of the operations repetition  , replacement , and expansion applied to something , our model makes the strong assumption that these operations may be viewed as applying to an ATN path rather straightforwardly related to the previous utterance  . Not all expan-sions can be viewed that way , as example f in Section I illustrates . Also , answers of " No " require special processing ; that response in answer to " Were you angry " should not be interpreted as " No  , I was angry . "One should be able to account for such examples within the heuristic described in this paper  , perhaps by allow-ing the transformation system described in section  3  . 2 to be complete ly genera l rath-er than st rongly res t r i c ted to one and only one t rans format ion app l i cat ion  . Row-ever , we propose handling such cases by special purpose rules we are developing  . 
These rules for the special cases , plus the mechanism described in section 3 together will be formally equivalent in pred ictive power to a grammar for ellipti- calforms  . 
Though the heuristic is independent of the individual grammar  , designating expansion paths and transform at ions obviously is not  . The grammar may make this an easyoz " diffi cult task  . For instance in the grammar we are using , a subnetwork that collects all tense , aspect , and modality elements would simplify some of the transformations and expansion paths  . 
~ aturally , semantics must play an important partinell ips is processing  . 
Consider the utterance pair below :
Some wine.
Though syntactically this could be interpreted either as " Some wine  ( did have a martiniatlunch ) " , "( The boss did have ) some wine ( at lunch ) " , or " ( The boss did have a martiniat ) some wine " . Semantics should prefer the second reading . We are testing our heuristic using the RUS grammar  ( Bebrow ,  1978 ) which has frequent calls from the grammar requesting that the semantic component decide whether to build a semantic interpretation for the partial parse found or tove to that partial parse  . 
This should aid performance.
~. Summary and Conclusion
There are three aspect steour solution : a mechanism for repetition and replacement ell ips is  , an extension for inputs of different types , such as fragmentary answers to questions , and an extension for expansion ellipsis . 
Our heuristic deals with the three types of expansion ellipsis as follows : Repetition el lipsis is processed by repeating specific parts of a transformed previous path using the same phrases as in the transformed form  ( " I was angry " )  . 
Replacement ellipsis is processed by sub-st it uting the elliptical input for contig-uous constituents on a transformed previous path  . Expansion ellipsis may be processed by taking specially marked paths that detour from a given state in that path  . Combinations of the three types of ellipsis are represented by combinations of the three var iations in a transformed previous path  . 
There are two contributions of the work . First , our method allows for expansion ellipsis . Second , it accounts for combinations of previous sentence form and ellided form  , e . g . , statement fol lowing question , question following statement , question following question . Furthermore , the method works without any constraints on the ATN grammar  . The heuristics carry over to formalisms similar to the ATN  , such as contextfree grammars and augment-ed phrase structure grammars  . 
Our study of ellipsis is part of a much broader framework we are developing for processing syntactically and/or semantically ill- formed input  ; see
Weischedel and Sondheimer (1981).

Allen , James F . , " A Plan-Based Approach to Speech Act Recognit ion  , " Ph . D . Thesis , Dept . of ' Computer Science , University of
Toronto , Toronto , Canada , 1979.
Bobrew , D ., R . Kaplan , M . Kay , D . Norman,
H . Thompson and T . Winograd , " GUS , A
Frame-driven Dialog System ", Artificial
Intelligence , 8, (1977), 155-173.
Bobrow , R . , " The RUS System " , in Research in Natural Language Understand in $ , by B . 
Webber and R . Bobrow , BBN Report No . 3878, Belt Beranek and Newman , Inc . , Cambridge,
MA , 1978.
Hayes , P . and G . Mouradian , " Flexible
Parsing ", in Proc . of the 18th Annual
Meetin ~ of the Assoc . for Cemp . Ling.,
Philadelphia , June , 1980, 97-103.
Hendrix , G . , E . Sacerdoti , D . Sagalowicz and J . Slocum , " Developing a Natural Language Interface to Complex Data "  , ACM Trans . on Database S~s . , 3, 2, (1978--~, 105-147 . 
Kwasny , S . and N . Sondheimer , " Ungrammati-cality and Extragrammaticality in Natural Language Understanding Systems "  , in Proc . 
ef the 17th Annual Meeting of the Assoc.
for Comp . Lin ~ . , San Diego , August , 1979, 1923 . 
Quirk , R ., S . Greenbaum , G . Leech and J.
Svartvik , A Grammar of Centempory English,
Seminar Press , New York , 1972.
Schank , R . , M . Lebowitz and L . Birnbaum , " An Integrated Understander " , American
Journal of Comp . Ling ., 6, I , (1980), 1330.
Thompson , B . H . , " Linguist ic Analysis of ' Natural Language Communication with Computers "  , p ~' oce edings of the Eighth International Conference on Computation ai 
Linguistics , Tokyo , October , 1980, 190-201.
Waltz , D . , " An English Language Quest ion Answering System for a Large Relational 
Database ", Csmm . ACM , 21, 7, (1978), 526-559.
Weischedel , Ralph M . and Norman K . Son-dheimer , " A Framework for Processing Ill-Formed Input " , Technical Report , Dept . of Computer & Informatiou Sciences , Universi-ty of Delaware , Ne ~ ark , DE ,  1981 . 
Acknowledgement ~ luch credit is due to Amir Razi for his programming assistance  . 

