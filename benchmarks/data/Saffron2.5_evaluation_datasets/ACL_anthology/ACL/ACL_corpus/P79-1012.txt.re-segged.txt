ASNAPSHOTOFKDS
AKNOWLEDGED F_,LIVERY SYSTEM
James A . Mooreend William C . Mann
USC Ilnforma Uon Sciences Institute
Marina del Ray , CA
June , 1979

KDS Is a computer program which creates multl- par ~ raph  , Natural Language text from a computer represent at ion of knowledge to be delivered  . We have addressed a number of Issues not previously encountered In the generation of Natural Languages t the multi-sentence level  , vlz : ordering among sentences and the scope of each  , quality comparisons between alternative 8~regat ions of sub-sentent Jalun its , the coordination of communication with non-l inguistic activities by ? gcel-pursu in ~ planner  , end the use of dynamic models of speaker and hearer to shape the text to the task at hand  . 
STATEMENT OF THE PROBLEM
The task of KDS is to generate English text under the following constraints :  1  . The source of information Is a semantic net , having no a priori structuring to facilitate the outputtlng task  . 
This represents the most elaborate performance of KDS to date  . 
SYSTEMDESIGN
The KDS organization reflects our novel paradigm : FRAGMENT-AND-COMPOSE  . KDS decomposes the original network into fragments then orders and  8~regatas these according to the dictates of the text -producing task  , not according to the needs for which the internal representation was originally conceived  . KDS has shown the feasibility of this approach . 
The KDS organization Is a simple pipeline : FRAGMENT  , 
PLAN , FILTER , HILL-CLIMB , and OUTPUT.
FRAGMENT transforms the selected portion of the semantic net into an unordered set of propositions which correspond  , roughly , to minimal sentences . 
2 . The text is produced to satisfy an explicit goal held by the text generating system  , which describes a desired cognitive state of the reader  . 
3 . To achieve the desired state of the reader equires more than a single sentence  . 
RESULTS
This is not the forum for a extensive analysis of our results  ; for details , see Mann and Moore\[1979\] . However , to communicate the flavor of what ~ ve have accomplished -- from the motivating oal :  ( WANTS SPEAKER ( KNOWSHEARER
FldlE-ALARM-SCENE ) ) and about two pages of formal propositions describing the " Fire-alarm scene '  , KDS generated the following : WAenee or there is a \]' ire  , the ~ arms ~ jttm is started whic ~ Jounds the a /arm bell and starts the timer  . W~n it bnine ty seconds a\[tort ~ t time rL ~ started  , unlesstAeo/arm J ~$ temis cancelled it co~IS Wells Farfo  . Wht ~ WellsFar ~ is called , ff CO~Ist at FireDept .   . 
Wt ) en ~ ouke art kto/arm bill or ~ ousmell smoke , stop?utr~tMng . determinemheth , r there Is a firs and decide to permit the alarm J ~ stem or to cancel it  . When ), oudtterminem ketker there Isa\[ire . l\[t ~ ereiS , permitt ~ talarm S ~ s t tm ; otherwise cancel it .   . W~en ~ oupermit the alarm syst ~ , c ~! the FireDept . if possible and \ [ oilo ~ tktw ~ uatlon procedure  . When ~ carrollt keelates ~) sttet , l\[itiSmote t ~ ann ~ ner ~ seconds since the timer is started  , tkeal arms . Tsttme~lsWellsFargo:ock or mlse continue tm rr yt ld ng  . 
PLAN uses goal-sensitive rules to impose an ordering on this set of fragments  . A typical planning rule is : " When conveying a scene in which the hearer is to identify h imself with one of the actors  , expressell propositions involving that actor AFTER those which do not  , and separate these two partitions by a paragraph break '  . 
FILTER , deletes from the set , ell propositions currently represented as known by the hearer  . 
HILL-CLIMB coordinates two sub-activities : AGGREGATOR applies rules to combine two or three fragments into a single one  . A typical aggregation rule is : " The two fragments ' x does A ' and ' x does B ' can be combin ~! into a single fragment : ' x does A and B '"  . 
PREFERENCER evaluates each proposed new fragment , producing a numerical measure of its " goodness  "  . A typical preference rule is : " When instruct ing the hearer  , lncremm the accumulating measure by 10 for each occurrence of the symbol ' YOU '" . 
HILL-CLIMB uses AGGREGATOR to generate new candidate sets of fregments  , and PREFERENCER , to determine which new set presents the best one -step improvement over the current set  . 
The objective function of HILL-CLIMB has been enlarged to also take in to ecceunt the COSTOF FOREGONEOPPORTUNITIES  . This has drastically improved the initial performance  , since the topology a bounds wtth local maxima . 
KDS has used , at one time or another , on the order of 10 planning rules , 30 aggregation rules and 7 preference rules . 

The aggregation and preference rules are directly analogoua to the capabilities of linguistic eem potence and performance  , respectively . 
OUTPUT ls a simple ( two pages of LISP ) text generator driven by a contextfree grammar . 

The work reported here was supported by NSF Grant
MCS-76-07332.

Levin , J . A . , and Goldman , N . M . , Process models of reference in context , I$I/RR-78o 72 , Information Sciences Institute , Marina del Re) , , CA ,  1978 . 
Levin , J . A . , and Moore , J . A . , Dialogue Gamest mete-communicat ion structures for natural bnguqe interaction  , Co~ltive Science ,  1 , 4 ,  1978 . 
Mann , W . C . , Moore , J . A . , and Levin , J . A . , A comprehension model for human dialogue , in Proo . IJCAI-V ,
Cambridge , MA , 1977.
Mann , W . C . , and Moore , J . A . , Computer generation of multl-paraq~raph English text  , in preparation . 
Moore , J . A . , Levin , J . A . , and Mann , W . C . , A Gool-orianted model of human dialogue , AJCL microfiche 67 ,  1977 . 
Moore , J . A .   , Communication as a problem-solviq activity , in preparation . 

