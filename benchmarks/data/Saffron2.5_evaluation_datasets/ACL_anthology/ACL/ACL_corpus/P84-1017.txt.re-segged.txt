The Costs of Inheritance in Semantic Networks
Rob't F . Simmons
The University of Texas , Austin
Abstract
Questioning texts represented in semantic relations I requires the recognition that synonyms  , instances , and hyponyms may all satisfy a questioned term . A basic procedure for accomplishing such loose matching using inheritance from a taxonomic organization of the dictionary is defined in analogy with the unification a ! gorithm used for theorem proving  , and the costs of its application are analyzed . It is concluded tl , at inherit , ~ ncelogic can profitably beixi clu . ' ted in the basic questioning procedure . 
AI Handbook Study
In studying the pro- . ~ss of answering questions from fifty pages of the AItlandbook  , it is striking that such subsections as those describing problem representations are organized so as to define conceptual dictionary entries for the terms  . First , class definitions are offered and their terms defined  ; then examples are given and the computational terms of the definitions are instantiated  . Finally the technique described is applied to examples and redel'ined mathematical ! y  . Organizing these texts ( by hand ) into coherent hierarchic structures of discourse results in very usable conceptual dictionary definitions that are related by taxonomic and partitive relations  , leaving gaps only for nontechnical terms . For example , in " give snapshots of the state of the problem at various stages in its solution  , " terms such as " state ' , ' problem ' , and " solution " are defined by the text . while ? give ' , " snapshots ' , and " stages = are not . 
Our first studies in representing and questioning this text have used semantic networks with a minimal number of case arcs to represent the sentences and Super : ~ et/Instance and * Of/llas arcs to represent  , respectively , taxonomic and partitive relations between concepts  . Equivalence arcs are also used to represent certain relation sig~fified by uses of " is " and apposition  1supported by NSF Grant/ST 8200976 and * AND and * OR arcs represent conjunction . Since June 1982 , eight question-answering systems have been ' written  , some in procedural logic and some in compilable EIJSP  . Although we have so far studied questioning and data manipulation operations on about  40 pages of the text , the detailed study of inheritance costs discussed in this paper was based on  170 semantic relations ( SRs )  , represented by 733 binary relations each composed of a node-arc-node triple  . In this study the only inference rules used were those needed to obtain transitive closure for inheritance  , but in other studies of this text a great deal of power is gained by using general inference rules for paraphrasing the question into the terms given by an answering text  . The use of paraphrastienference rules is computationally expensive and is discussed elsewhere\[Simmons  1083\]  . 
The text-knowledge base is constructed either as a set of triples using subscripted words  , or by establishing node-numbers whose values are the complete SR and indexing these by the first element of every SR  . The latter form , shown in Figure 1 , occupies only about a third of the space that the triples require and neither for misclearly computationally better than the other  . 
The first experiments with this text-knowledge base showed that the cost of following inheritance ares  , i . e . obtaining taxonomic losures for concepts , was very high ; some questions required as much as a minute of central processor time  . As a result it was necessary to analyze the process and to develop an understanding that would minimize any redundant computation  . Our current system for questioning this fragment knowledge base has reduced the computation time to the range of  1/2 to less than 15 seconds per question in uncompiled
ELISP on a DEC 2060.
I believe the approach taken in this study is of particular interest to researchers who plan to use the taxonomic structure of ordinary dictionaries in support of natural language processing operations  . Beginning with studies made in 1075 \[ Simmons and Chester ,   1077\] it was apparentous that question-answering could be viewed profitably as a specialized form of theorem proving that  (   C100 ASTATE-SPACERE PRESENTATION OF APROBLE MEMPLEYS TWOKINDSOFENTITIES : STATES  , WHICHARED ATASTRUCIURESG MNG?SN APSHOTS " OF THECONDITION OF THE PROBLE MATE ACHS TAGEOFITS SOLUTION  , ANDOPERATORS . WHICHARE~Y_ANS FOR TRANS FOR MING THE
PROBLE MFROMONES TATE TO ANOTHER )   ( N 137 ( N 138 ( N 140 ( N 142 ( N 143 ( N 144 ( N 146 ( N 145 ( N 147 ( N 141 ( N 148 ( N 149 ( Nl  ~ ( N i ~ ( REPRESENTATIONS UPN 101HASN 138EGN 139 SNTC 100 ) )  ( ENTITY NBRPLQTY 2 . INSTN 140 INSTN 141 SNTC 100 ) )  ( STATENBRPL~N142 SNTCI00 ) )  ( STRUCTURE*OFDATAIN STR*N143 SNTC 100 ) )  ( GIVE TNS PRESINSTR N142AE   N144 vAT N145 SNT CLOG ) )  ( SNAPSI~3T NBR PL*OFN 146 SNTC 100 ) )  ( PROBLEMNBRSINGHASN 145 SUPN 79 SNTC 100 ) )  ( STAGEN BRPLIDENT VARI~J3* OFN 147 SNTC 100 ) )  ( SOLUTION NBRSING SNTC 100 ) )  ( OPERATORNBR PLEQUIV * N148 SNTC 100 ) )  ( PROCEDUREN BRPLIN STR*N149 SNTC 100 ) )  ( TRANS FOR MTNS PRESAE N146 * FROM N164 * TO N165 SNT C100  ) )  ( STATENBRSINGIDENTONE5 ~ JPN 140 SNTC 100 ) )  ( STATENBRSINGIDENT ANOTHERS UPN 140 SNTCI00 ) ) Example of SR representation of the question , = How many entities are used in the state-space representation of a problem ? =  ( REPRESENTATION * OF ( STATE-SPACE * OFPROBLE 24 ) HAS ( ENTITY CITYYO ) Figure 1 . Representation of Sem~tlc Relations
Query Triple:
Match Candid.
ARB ++ ++ means a match by unlficatlon.
++ C ( CLOSABCB ) ++ C ( CLOSC FRCB ) + R1 + ( SYNONY MRR 1 ) 
BR1 A(CO~RR1)
C + ? ( CLOSABCA ) where CLOSAB stands for Abstractive Closure and is defined in procedural logic  ( where the symbol < is shorthand for the reversed implication sign < --  , i . e . P < QS is equivalent to Q"S-->P ) :  ( CLOSABNIN 2 )  <  ( ORCINSTNIN 2 )   ( SUPN 1N2 ) )  ( INSTN 1N2 )  <  ( OR ( NIIN STN2 )   ( N1 ~* N2 ) )  ( INSTN 1N2 )  <  ( INSTN 1X )   ( INST XN2 )   ( SUPNiN2 )  <  ( OR ( NiE ~ U ? VN 2 ) (Ni SUP N2 ) )  ( SUPNIN 2 )  <  ( SUPNIX )   ( SUPXN2 ) CLOSCP stands for Complex Product Closure and is defined as  ( CLOSC PRN 1N2 )  <  ( TRANSITIVER ) (NI R N2 ) = N1RN2 is the new ARB " ( CLOSC PRN 1N2 )  <  ( NI~OFN2 ) *~  ( CLOSC FRN 1 N2 )  <  ( NILOCN 2 ) **  ( CLOSC FRNIN 2 )  <  ( NI*ANDN2 )   ( CLOSC PRN 1N2 )  <  ( NI*ORN2 ) ** These two relations turn out not to be universally true complex products  ; they only give answers that are possibly true , so they have been dropped for most question answering applications  . 
Figure 2 . Conditions for Match Lug Question and Candidate Triples terms in a question and a candidate answer  . A proceduralogic question-answerer was later developed and specialized to understanding a story about the flight of a rocket \[ Simmons  1084  , Simmons and Chester ,  1982 , Levine 1980\] . Although it was effective in answering a wide range c  , for dinary questions , we were disturbed at them , ~ gnitude of computation that was sometimes required  . This led us to the challenge of developing a system that would work effectively with large bodies of text  , particularly the AIIi and book . The choice of this text proved fortunate in that it provided experience with m~my taxonomic and partitive relations that were essential to an  . ~wering a test sample of questions . 
This hrief paper offers an initial description of a basic proccs  . ~ for questioning such a text and an analysis of the cost of using such a procedure  . It is clear that the technique and analysis apply to any use of the English dictionary where definitions are encoded in semantic neworks  . 
Relaxed Unification for Matching Semant lc

In the unification algorithm , two n-tuples , nl and n ? , unify if Arity ( nl ) ~ Arity ( n2 ) and if every element in nl matches an element in n2  . Two elements el and e2 match if el or e2 is a variable , or if el ~-- e2 , or in the case that el and e2 are lists of the same length , each of the elements of el matches a corresponding element of  e2  . 
Since semantic relations ( SRs ) are unordered lists of binary relations that vary in length and since a question representation  ( SRq ) can be answered by a sentence candidate ( SRc ) that includes more information than the question specified  , the Arity constraint i ~ revised to Arity ( SRqLess/Equal Arity ( SRc . 
The primitive elements of SRs include words , arc names , variables and constants . Arc names and words are organized taxonomically , and words are further organized by the discourse structures in which they occur  . One or more element 6f taxonomic or discourse structure may imply others  . Words in general can be viewed as restricted variables whose values can be any other word on an acceptable inference path  ( usually taxonomic ) that joins them . The matching constraints of unification can thus be relaxed by allowing two terms to match if one implies the other in a taxonomic losure  . 
The matching procedure is further adapted to read SRs effectively as unordered lists of triples and to seek for each triple ill SR qa corresponding one in SRc  . 
The two SRs below match because Head matches Head , Arcl matches Arcl , Vail matches Vall , etc . even though they are not given in the same order . 
SRq(Head Arcl Vail , Arc2 Val2, . . . , Arcn Vain ) SRc ( Head Arc2 Val2, Arcl Vail, . . . , Arch Vain ) The SR may be represented ( actually or virtually ) as a list of triples as follows:
SRq((HeadArclVail ) ( HeadArc2Val2) . . . ,  ( Head Arcn Vain ) Two triples match in Relaxed Unification according  ( at least ) to the conditions shown in Figure 2 . The query triple , ARB may match the candidate giving + + + to signify that all three elements unified  . If the first two elements match , the third may be matched using the procedures CLOSAB or CLOSCP to relate the  . nonmatching C with the question term B by discovering that B is either in the abstractive closure or the complex product closure of C  . The abstractive closure of an element is the set of all triples that can be reached by following separately the SUP and EQUIV arcs and the INST and EQUIV * arcs  . The complex product closure is the set of triples that can be reached by following a set of generally transitive arcs  ( not including the abstractive ones )  . The arc of the question may have a synonym or a converse and so develop alternative questions  , and additional questions may be derived by asking such terms as CRB that include the question term A in their ? abstractive closure  . Both closure procedure should be limited to n -step paths where n is a value between  3 and 6  . 
Computational Cost
In the above recursive definition the cost is not immediately obvious  . If it is mapped onto a graphic representation in semantic network form  , it is possible to see some of its implications . Essentially the procedure first seeks a direct match between a question term and a candidate answer  ; if the match fails , the abstractive closure arcs , SUP , INST , EQUFv' , and EQUIV * may lead . 
to a new candidate that does match . If these fail , then complex product arcs , * OF , HAS , LOC , AND , and OR may lead to a matching value . The graph below outlines the essence of the procedure  . 

A---R---B---SUP---Qi---INST---Ii---E ~ UlV - - - Qi - - - E ~ JIV * - - - Q 
I---*AND---eli---*OR . . . Cl
I---L0C---Q
I---*0 F---Q
I---HAS---Q
This graph shows nine possible complex product paths to follow in seeking a match between B and Q  . If we allow each path to extend N steps such that each step has the same number of possible paths  , then the worst case computation , assuming each candidate SR has all the arcs , is of the order , 9 raised to the Nth . If the A term of the question also has these possibilities  , and the R term has a synonym , then there appear to be 2*2*9**Nth possible candidates for answers . The first factor of 2 reflects the converse by assigning the Aterm 9**N paths . 
Assuming only one synonym , each of twoR terms might lead to a B via any of 9 paths , giving the second factor of 2 . If the query arc is also transitive , then the power factor 9 is increased by one . 
In fact , SRs representing ordinary text appear to h~ve less than an average of  3 possible-CP paths , so something like 2*3**Nth seems to be the average cost . So if N is limited to 3 there are about 2'81=162 candidates to be examined for each subquestion . These are merely rough estimates , but if the question is composed of 5 subquestions , we . might expect to examine something on the order of a thousand candidates in a complete search for the answer  . Fortunately , this is accomplished in a few seconds of comphtation time  . 
The length of tr?nsitive path is also of importance for two other reasons  . First , most of the CP arcs lead only to probable inference  . Even superset and instance are really only highly probable indicators of equivalence  , while LOC , HAS , and * OF are even less certain . Thus if the probability of truth of match is less than one for each step  , the number of steps that can reasonably be taken must be sharply limited  . Second , it is the case empirically that the great majority of answers to questions are found with short paths of inference  . In one all-answers version of the QA-system , we found a puzzling phenomem ) n in that all of the answers were typically found in tlle first fifteen seconds of computation although the exploratior ! continued for up to  50 seconds . 
Our current hypothesis is that the likelihood of discovering an answer falls of frapidly as the length of the inference path increases  . 

It is important onote that this experiment was solely concerned with the simple levels of inference concerned in inheritance from a taxonomic structure  . It shows that this class of inference can be embedded profitably in a procedure for relaxed unification  . In addition it allows us to state rules of inference in the form of semantic relations  . 
For example we know that the commander of troops is responsible for the outcome of their battles  . So if we know that Cornwall is commanded an army and the army lost a battle  , then we can conclude correctly that Cornwall is lost the battle  . An SR inference rule to this effect is shown below : 
Rule Axiom : ( ( LOSE AGT X AE Y )  <-  ( SUPXCO h/LMANDER )   ( SUPYBATTLE )   ( COMMANDAGTXAEW )   ( SUP WMILITARY-GROUP )   ( LOSEAGT WAEY ) )
TextAxioms : (( COMMANDAGTCORNWALLIS
AE ( ARMY MODBRITISH ) ) )   ( ( LOSE AGT ( AR/vfY MOD BRITISH ) 
AE ( BATTLE * OFY ORK TO WN ) )  ( ( CORNWALLIS SUP COMMANDER ) )  ( ( ARMY SUP  MILITARY-GROUP ) ) )   ( ( YORKTOWN SUP BATTLE ) )
Theorem : (( LOSE AGTCORNWALLIS
AE(BATTLE * OFYORKTOWN )))
The relaxed unification procedure described earlier allows us to match the theorem with the consequent of the rule which is then proved if its antecedents are proved  . It can be noticed that what is being accomplished is the definition of a theorem prover for the loosely ordered logic of semantic relations  . We have used such rules for answering questions of the AIh and book text  , but have not yet determined whether the cost of using such rules with relaxed unification can be justified  ( or whether some theoretically less appealing compilation is needed  )  . 

Levine , Sharon , Questioning English Text with Clausal Logic , Univ . of Texas , Dept . Comp . Sci . , Thesis , 1980 . 
Simmons , R.F ., Computations from the English,
Prentice-Hall , New Jersey , 198.i.
Simmons , R . F . IA Text Knowledge Base for the A!H and book , Univ . of Texas , Dept . of Comp . Sci . ,
Ti : -83-24, 1983.
Simmons , R . F . , and Chester , D . L . Inferences in quantified semantic networks . PROC5THINT . JT . 
CONI ~.. ART . INTELL . Stanford , 1977.

