Deriving the Predicate-Argument Structure for a Free Word Order 
Language *
Cern Bozsahin
Department of Computer Engineering
Middle East Technical University
06531 Ankara , Turkey
bozsahin@ceng , metu.edu.tr

In relatively free word order languages , grammatical functions are intricately related to case marking  . Assuming an ordered representation of the predicate-argument structure  , this work proposes a Combinatory Categorial Grammar formulation of relating surface case cues to categories and types for correctly placing the arguments in the predicate-argument structure  . This is achieved by treating case markers as type shifters  . Unlike other CG formulations , type shifting does not prolifer-ate or cause spurious ambiguity  . Categories of all argument-encoding grammatical functions follow from the same principle of category assignment  . 
Normal order evaluation of the combinatory form reveals the predicate-argument structure  . The application of the method to Turkish is shown . 
1 Introduction
Recent heorizing in linguistics brought for tha level of representation called the Predicate -Argument Structure  ( PAS )  . PAS acts as the interface between lexical semantics and d-structure in GB  ( Grimshaw ,  1990) , functional structure in LFG ( Alsina ,  1996) , and complements ructure in HPSG ( Wechsler ,  1995) . PAS is the sole level of representation in Combinatory Categorial Grammar  ( CCG )   ( Steedman ,  1996) . All formulations assume a prominence-based structured representation for PAS  , although they differ in the terms used for defining prominence  . For instance , Grimshaw ( 1990 ) defines the thematic hierarchy as : Agent > Experiencer > Goal/Location/Source > Theme " Thanks to Mark Steedman for discussion and material  , and to the anonymous reviewer of an extended version whose comments led to significant revisions  . This research is supported by TUBITAK ( EEEAG-90 ) and NATO Science Division ( TU-

whereas LFG accounts make use of the following ( Bresnan and Kanerva ,  1989 ) : Agent > Beneficiary > Goal/Experiencer > Inst > Patient/Theme > Locative  . 
As an illustration , the predicate-argument structures of the agentive verb murder and the psychological verb fear are  ( Grimshaw ,  1990 , p . 8): murder(x(y ))
Agent Theme fear(x(y ))
Exp Theme
To abstract away from language-particular case systems and mapping of thematic roles to grammatical functions  , I assume the Applicative Hierarchy of Shaumy an ( 1987 ) for the definition of prominence :
Primary Term > Secondary Term >
Tertiary Term > Oblique Term.
Primacy of a term over another is defined by the former having a wider range of syntactic features than the latter  . In an accusative language , subjects are less marked ( hence primary ) than objects ; all verbs take subjects but only transitive verbs take objects  . 
Te rm s ( = arguments ) can be denoted by the genotype indices on NPs , such as NP1 ,   NP2 for primary and secondary terms JAn NP2 would be a direct object ( NP acc ) in an accusative language , or an ergative-marked NP ( NP erg ) in an ergative language . This level of description also simplifies the formulation of grammatical function changing  ; the primary term of a passivized predicate ( PASSp ) is the secondary term of the active p . Ifollow Shaumyan and Steedman ( 1996 ) also in the ordered representation f the PAS ( 1 )  . The reader is referred to ( Shaumy an ,  1987 ) for linguistic justification of this ordering . 
(1) Pred . . . < Sec . Term > < Primary Term >
Given this representation , the surface order of tShaumy an uses T1 , T2 , but we prefer NPI , NP2 for easier exposition in later formulations . 
1 67 constituents is often in conflict with the order in the PAS  . For instance , English as a configurational SVO language has the mapping :  ( 2 ) SS : S~O
PAS:~NP2 ~"" ..~ P1
However , in a nonconfigurational language , permutations of word order are possible , and grammatical functions are often indicated not by configurations but by case marking  . For instance , in Turkish , all six permutations of the basic SOV order are possible  , and Japanese allows two verb-final permutations of underlying SOV  . The relationship between case marking and scrambling is crucial in languages with flexible word order  . A computational solution to the problem must rely on some principles of parsimony for representing categories and types of arguments and predicates  , and efficiency of processing . 
In a categorial formulation , grammatical functions of preverbal and postverbal NPs in  ( 2 ) can be made explicit by type shifting 2 the subject to S/ ( S\NP1 ) and the object to ( S\NP1 ) \ ( (S\NP1 ) /NP2 )  . These categories follow from the order-preserving type shifting scheme  ( Dowty ,  1988 ) :  ( 3 ) NP ~ T/ ( T ~ NP ) or TVT/NP ) To resolve the opposition between surface order and the PAS in a free word order language  , one can let the type shifted categories of terms proliferate  , or reformulate CCG in such a way that arguments of the verbs are sets  , rather than lists whose arguments are made available one at a time  . The former alternative makes the spurious ambiguity problem of CG parsing  ( Karttunen , 1989) even more severe . Multi-set CCG ( Hoffman , 1995) is an example of the set-oriented approach . It is known to be computationally tractable but less efficient than the polynomial time CCG algorithm of Vijay-Shanker and Weir  ( 1993 )  . It ry to show in this paper that he traditional curried notation of CG with type shifting can be maintained to account for Surface Form+-~PAS mapping without leading to proliferation of argument categories or to spurious ambiguity  . 
Categorial framework is particularly suited for this mapping due to its lexicalism  . Grammatical functions of the nouns in the lexicon are assigned  2aka   . typeraising , lifting , or type change by case markers , which are also in the lexicon . 
Thus , grammatical function marking follows naturally from the general CCG schema comprising rules of application  ( A ) and composition ( B )  . The functor-argument distinction in CG helps to model prominence relations without extra levels of representation  . CCG schema ( Steedman (1988 ; 1990)) is summarized in (4) . Combinator notation is preferred here because they are the formal primitives operating on the PAS  ( cf . (Curry and Feys , 1958) for Combinatory Logic ) . Application is the only primitive of the combinatory system  ; it is indicated by juxtaposition i the examples and denoted by ? in the normal order evaluator  ( ?4 )  . B has the reduction rule B f g a >_ f(g a ) . 
(4) X/Y : f Y : a = ~ A > X : f a
Y : aX\Y : f ==?' A < X : fax/Y:fr/z:g: ----  . 8 > x/z : Bfg
Yz : axr : . fxz:B fgx/Y : y rxz:9 x\z : Bigv/z:gXkV : ySx < x/z : By g 2 Grammatical Functions , Type Shifting , and Composition In order to derive all permutations of a ditransitive construction i Turkish using  ( 3 )  , the dative-marked indirect object ( NP3 ) must be type shifted in 48 ( 4!2 ) different ways so that coordination with the left -adjacent and the right-adjacent constituent is possible  . This is due to the fact that the result category T is always a conjoinable type  , and the argument category T/NP 3 ( and T~NP3 ) must be allowed to compose with the result category of the adjacent functor  . However , categories of arguments can be made more informative about grammatical functions and word order  . The basic principle is as follows : The category assigned for argument n must contain all and only the term information about NP if or all i < n  . A n NP2 type must contain in its category word order information about  NP1 and NP2 but not NP3  . This can be generalized as in ( 5 ) :  ( 5 ) Category assignment for argument n :
STr/Ta or Tr\T a
C(n ) ! NP ng overning element ( e . g . , a verb ) in the language whose highest genotype argument is 

Tr = The category obtained from Taby removing NP n . 
Case markers in Turkish are suffixes attached to noun groups  .   3 The types of case markers in the lexicon can be defined as:  ( 6 ) Lexical type assignment for the case marker ( -case ) encoding argument n :- case := C ( n ) : T ( C ( n ) x\N : x where T ( C ) denotes the semantic type for category C : ( 7 ) a . T ( NP n ) = I ( lower type for NP n ) b . T ( C ) = T ( if C is a type shifted category as in ( 3 ) ) c . T ( C ) = BBT ( if C is a type shifted and composed category )   ( 5 ) and ( 6 ) are schemas that yield three lexical categories per-case : one for lower type  , and two for higher types which differ only in the directionality of the main function due to  ( 5 )  . For instance , for the accusative case suffix encoding NP2 , we have : - ACC := NP 2: Ix\N : x := ( ( SINP1 ) / ( SINPIlNP2 ) ):Tx\N:x := ( ( SINP1 ) \ ( SINPIlNP2 ) ):Tx\N:x Type shifting alone is too constraining if the verbs take their arguments in an order different from the Applicative Hierarchy  ( ? 1 )  . For instance , the category of Turkish ditransitives i SINPIlNP31NP2  . 
Thus the verb has the wrapping semantics Cv ' where C is the permutator with the reduction rule Cfga > fag  . Type shifting an NP3 yields ( SINP1 INP2 ) / ( SINP1\] NP ~ INP3 ) in which the argument category is not lexically licensed  .   ( 5 ) is order-preserving in a language-particular way ; the result category always corresponds to a lexical category in the language if the argument category does too  . 
For arguments requiring a noncanonical order , we need type shifting and composition ( hence the third clause in ( 7 ) ): 3As suggested in ( Bozsahin and Gocmen ,  1995) , morphological and syntactic omposition can be distinguished by associating several attachment calculi with functors and arguments  ( e . g . , affixation , concatenation , clitics , etc,)
NP3: xT=~(SINP1)/(SINPIlNP3):Tx~(SINP , INP2)/(SINP , INP31 NP2 ) : B ( T x ) = BBT x Once syntactic a tegory of the argument is fixed  , its semantics i uniquely determined by (7) . 
The combinatory primitives operating on the PAS are I  ( 7a )  , T (7b--c) , and B (7c ) . Thas the reduction rule Tar>fa , and If > f . The use of T or B signifies that the term's category is a functor  ; its correct place in the PAS is yet to be determined  . I indicates that the term is in the right place in the partially derived 

According to (5) , there is a unique result-argument combination for a higher type  NP3  , compared to 24 using (3) .   ( 5 ) differs from ( 3 ) in another significant aspect : Tr and T a may contain directionally underspecified categories if licensed by the lexicon  . Directional underspecification seeded when arguments of a verb can scramble to either side of the verb  . It is necessary in Turkish and Warlpiri but not in Japanese or Korean  . The neutral slash I is a lexical operator ; it is instantiated to either \ or/during parsing  . A crucial use of underspecification is shown in ( 8 )  . SV composition could not follow through if the verbs had backward-looking categories  ; composition of the type shifted subject and the verb in this case would only yield a backward -looking  S\NP2 by the schema ( 4 )  . 
(8) Adamkurmu?ama ~ . ocuk to pladt masa-ytman . NOM set but chlld . NOM gather table-ACC

S/(SINPDSINP 11NP2S/NP2NP2-8>
S/NP 2.A
S/NP 2.A >
S'Theman had set the table but the child is cleaning it  . ' The schema in ( 5 ) makes the arguments available in higher types , and allows lower ( NP n ) types only if higher types fail ( as in NP2 in ( 8 ) ) . There are two reasons for this : Higher types carry more information about surface order of the language  , and they are sufficient to cover bounded phenomena  .   ?3 shows how higher types correctly derive the PAS in various word orders  . Lower types are indispensable for unbounded constructions such as relativization and coordination  . The choice is due to a concern for economy . If lower types were allowed freely , they would yield the correct PAS as well :
NPI : Ig NP 3: lit NP 2: Id DV : CvI
SINP zl NP3: ( Cv')(IoA3

SINPI : ( Cv ') ( Io ') (1i')
A < s:(cv')(Io')( , i')(Is')>_v'i'o's'(10) a . Mehmet kitab-toku-du
M . NOM book-ACC read-PAST
S/IV : Tin ' IV/W:TUTV : r'-A >
IV:TUrI-A >
S:Tmt ( Tb'rI ) > r'Um''Mehmetread teebook . ' In parsing this is achieved as follows : An NP k can only be the argument in a rule of application  , and schema ( 5 ) is the only way to obtain NP k from a noun group . Thus it suffices to check in the application rules that if the argument category is NPk  , then the functor's result category ( e . g . , X in X/Y ) has none of the terms with genotype indices lower than k  . NP2 in ( 8 ) is licensed because the adjacent functor is S/NP 2 . NP2 in ( 9 ) is not licensed because the adjacent functor has NP1  . 
For noun-governed grammatical functions such as the genitive  ( NPs )  ,   ( 5 ) licenses result categories that are underspecified with respect othegenotype index  . This is indeed necessary because the resulting NP can be further inflected on case and assume a genotype index  . For Turkish , the type shifted category is C ( 5 ) = NPagr / ( NPagr\NPs )  . 
Hence the genitive suffix bears the category C ( 5 ) \ N . Agreement features enforce the possessor -possessed agreement on person and number via unification  ( as in UCG ( Calder et al , 1988)): kalem-inuc-upencil-GEN . 3 stip-POSS . 3 sN . '--ffC(5)\N:TN:t---~(Ne=g~\NPs>\N : p . oss

NP ag~/(NP ~ g~\NP s ): ~ p5 NP ~, ~\ NP s:poss t'

NPo:::rp'C posst' ) >_ ( posst ' ) p '' The tip of the pencil ' 3 Word Order and Scrambling Due to space limitations  , the following abbreviated categories are employed in derivations : 
IV = SINP z
TV = SINPIINP 2
DV=SINPIINP3INP 2
The categories licensed by ( 5 ) can then be written as IV/TV and IV~TV for NP2 , TV/DV and TV~DV for NP3 , etc .   ( 10 a-b ) show the verb-final variations in the word order . The bracketings in the PAS and juxtaposition are left-associative  ; ( f a ) b is same as lab . 
b . kitab-tMeh me toku-du
IV/TV:Tb'S\IV : Tm~TV : rI " Bx <
S/T V : B(T m')(T b')
S : B ( Tm ' ) ( Tb ' ) r ' > r ' b ' mA ~" ( 10 a ) exhibits spurious ambiguity . Forward composition of S/IV and IV/TV is possible  , yielding exactly the same PAS . This problem is resolved by grammar ewriting in the sense proposed by Eisner  4   ( 1996 )  . Grammar rewriting can be done using predictive combinators  ( Wittenburg ,  1987) , but they cannot handle crossing compositions that are essential to our method  . Other normal form parsers , e . g . that of Hepple and Morrill (1989) , have the same problem . All gramma rules in ( 4 ) in fact check the labels of the constituent categories  , which show how the category is derived . 
The labels areas in ( Eisner , 1996) . -FC : Output of forward composition , of which forward crossing composition is a special case  . -BC : Output of backward composition , of which backward crossing composition is a special case  . -OT : Lexical or type shifted category . The goal is to block e . g . , X/Y-FC Y/Z-FC , B C , OT = ~ B > X/Z and X/Y-FCY-FC , B C , OT = ~ A > X in (10 a) . S/TV composition would have the label-FC , which cannot be an input to forward application . In (10b ) , the backward composition follows through since it has the category-label S/T V-BC  , which the forward application rule does not block  . We use Eisner's method to rewrite all rules in ( 4 )  . 
( l l ab ) show the normal form parses for postverbal scrambling  , and ( llc-d ) for verb-medial cases . 
4 Eisner (1996, p . 81 ) in fact suggested that he labeling system can be implemented in the grammar by templates  , or in the processor by labeling the chart entries . 
17001) a . oku-du Mehmet kitab-tread-PASTM . NOM book-ACC
IV : r'S/IV:Tm'IV~TV : Tb'

S\T V : B(T m')(T b')
A < b .


S : B ( Tm ' ) ( Tb ' ) r'>r'b'm''Mehmetread the book . ' oku-dukitab-i Mehmet
TV:r'IV~TV:Tb'S\IV:Tm'

IV:Tb'r'-A <
S:Tm' ( Tb'r' ) > r'Um'kitab-zoku-du Mehmet
IV/IV:Tb'IV:r'S\IV:Trn'

IV:Tb'r'

S : T in '( T b'r')>r'b'm'
Mehmetoku-dukitab-t
S/IV:Tm'TV : r'IV~TV : Tb'

IV:Tb'r'

S : T in '( T b'r')>r'b'm'
Controlled lexical redundancy of higher types , e . g . , having both ( and only ) IV/TV and IV~TV licensed by the lexicon for an NP2  , does not lead to alternative derivations in ( 1011 )  . Assume that A/B B\C , where A/B and B\C are categories produced by ( 5 )  , gives a successful parse using the output A\C . A\BB\C and A\BB/C are not composable types according to  ( 4 )  . The other possible configuration , A/B B/C , yields an A/C which looks for C in the other direction  . Multiple derivations appear to be possible if there is an order-changing composition over C  , such as C/C ( e . g . , a VP modifier IV/IV ) .   ( 12 ) shows two possible configurations with a Conthe right  .   ( 12b ) is blocked by label check because A/C-FCC = ~ A > A is not licensed by the grammar  . If C were to the left , only (12a ) would succeed . Similar reasoning can be used to show the uniqueness of derivation in other patterns of directions  . 
(12) a . C/C A/B B\C C ~ B x >

B x <
A/C-BC . A >
A-OTb . C/CA/BB/CC-B >
A/C-FC ***~ A >
Constrained type shifting avoids the problem with freely available categories in Eisner's normal form parsing scheme  . However , some surface characteristics of the language , such as lack of case marking in certain constructions  , puts the burden of type shifting on the processor  ( Bozsahin ,  1997) . 
Lower type arguments such as NP2 pose a different kind of ambiguity problem . Although they are required in unbounded constructions  , they may yield alternative derivations of local scrambling cases in a labelled CCG  . For instance , when NP2 is peripheral in a ditransitive construction and the verb can form a constituent with all the other arguments  ( S\NP2 or S/NP 2 )  , the parser allows NP2 . This is unavoidable unless the parser is made aware of the local and nonlocal context  . In other words , this method solves the spurious ambiguity problem between higher types  , but not among higher and lower types . One can try to remedy this problem by making the availability of types dependent on some measures of prominence  , e . g . , allowing subjects only in higher types to account for subject-complement asymmetries  . But , as pointed out by Eisner (1996, p . 85) , this is not spurious ambiguity in the technical sense  , just multiple derivations due to alternative lexical category assignments  . Eliminating ambiguity in such cases remains to be solved  . 
4 Revealing the PAS
The output of the parser is a combinatory form . The combinators in this form may arise from the CCG schema  , i . e . , the compositor B , and the substitutor S(Steedman ,  1987) . They may also be projected from the PAS of a lexical item  , such as the dupli-cator W ( with the reduction rule Wfa > faa ) for re-n+lf lexives , and BC for predicate composition with the causative suffix  . For instance , the combinatory form for ( 13 a ) is the expression ( 13b )  . 
(13) a . Adam Cocu ~,- akitab-tman . NOM child-DAT book-ACC : mt:c':Uoku-t-tu read-CAUS-PAST :  B3CAUSCr '' Theman had the child read the book . ' b . T . m'-(B . (T . b ') . ( T . c') . ( B3 . CAUSE . C . r ')) --
AA
BTc '
T t
B ~' ~" c AUsE
Although B works in a binary manner in CCG to achieve abstraction  , it requires 3 arguments for full evaluation ( its order is 3 )  . Revealing the PAS amounts to stripping off all combinators from the combinatory form by evaluating the reducible x-pressions  ( redexes )  . B f g is not a redex but B f ga is . 
In other words , the derivations by the parser must saturate the combinators in order to reveal the PAS  , which should contain no combinators . PAS is the semantic normal form of a derivation . 
The sequence of evaluation is the normal order , which corresponds to reducing the leftmost -outermost redex first  ( Peyton Jones ,  1987) . In tree-theoretic terms , this is depth-first reduction of the combinatort ee in which the rearrangement is controlled by the reduction rule of the leftmost com-binator  , e . g . , Tin ' X>_Xm ' where X is the parenthesized subexpression i  ( 13 b )  . Reduction by T yields:

BTc'O/"~,B~CAUSET
Furthe reductions eventually reveal the PAS : B . (T . b ')-( T-d ) . ( Ba-CAUSE . C . r ') . m '>_
T.b '.( T.d.(Ba.CAUSE'C'r ')). m '>_
T-d . ( B3"CAUSE'G'r')'b'-r rfl >_(1)(2) (3)
Ba.CAUSE.C.r'"d.b'.m '>_(4)
CAUSE.(C.r'.d.b').m'>(5)
CAUSE-(r'.b'.d ). m'(6)
By the second Church-Rosser theorem , normal order evaluation will terminate if the combinatory form has a normal form  . But Combinatory Logic has the same power as A -calculus  , and suffers from the same undecidability results . For instance , WWW has no normal form because the reductions will never terminate  . Some terminating reductions , such as Glib > N , has no normal for meither . It is an open question as to whether such forms can be projected from a natural language lexicon  . In an expression X . Y where X is not a redex , the evaluator recursively evaluates to reduce as much as possible because X may contain other edexes  , as in (5) above . Recursion is terminated either by obtaining the normal form  , as in (6) above , or by equivalence check . For instance , ( G . (I . a) . b) . Y recurses on the left subexpression to obtain ( G , a-b ) then gives upon this subexpression since the evaluator returns the same expression without further evaluation  . 
5 Conclusion
If an ordered representation f the PAS is assumed as many theories do nowadays  , its derivation from the surface string requires that the category assignment for case cues be rich enough in word order and grammatical function information to correctly place the arguments in the PAS  . This work shows that these categories and their types can be uniquely characterized in the lexicon and tightly controlled in parsing  . Spurious ambiguity problem is kept under control by normal form parsing on the syntactic side with the use of labelled categories in the grammar  . 
Thus , the PAS of a derivation can be determined uniquely even in the presence of type shifting  . The same strategy can account for deriving the PAS in unbounded constructions and nonconstituent coordination  ( Bozsahin ,  1997) . 
Parser's output ( the combinatory form ) is reduced to a PAS by normal order evaluation . Model theoretic interpretation can proceed in parallel with derivations  , or as a post evaluation stage which takes the PAS as input  . Quantification and scrambling in free word order languages interact in many ways  , and future work will concentrate on this aspect of semantics  . 


Alex Alsina .  1996 . The Role of Argument Structure in Grammar . CSLI , Stanford , CA . 
Cem Bozsahin and Elvan Gocmen .  1995 . A categorial framework for composition i multiple linguistic domains  . In Proceedings of the Fourth International Conference on Cognitive Science of 
NLP , Dublin.
Cem Bozsahin .  1997 . Grammatical functions and word order in Combinatory Grammar  . ms . 
Joan Bresnan and Jonni M . Kanerva .  1989 . Locative inversion in Chichewa : A case study of factorization in grammar  . Linguistic Inquiry , 20:1-50 . 
Jonathan Calder , Ewan Klein , and Henk Zeevat.
1988 . Unification categorial grammar . In Proceedings of the 12th International Conference on
Computational Linguistics , Budapest.
Haskell B . Curry and Robert Feys .  1958 . Combinatory Logic L North-Holland , Amsterdam . 
David Dowty .  1988 . Typeraising , functional composition , and nonconstituent conjunction . In Richard T . Oehrle , Emmon Bach , and Deirdre Wheeler , editors , Categorial Grammars and Natural Language Structures  . D Reidel , Dordrecht . 
Jason Eisner .  1996 . Efficient normal-form parsing for combinatory categorial grammar  . In Proceedings of the 34th Annual Meeting of the ACL , pages 7986 . 
Jane Grimshaw . 1990. Argument Structure . MIT
Press , Cambridge , MA.
Mark Hepple and Glyn Morrill .  1989 . Parsing and derivational equivalence . In Proceedings of the 4th EACL , Manchester . 
Beryl Hoffman .  1995 . The Computational Analysis of the Syntax and Interpretation f " Free " Word Order in Turkish  . Ph . D . thesis , University of Pennsylvania . 
Lauri Karttunen .  1989 . Radical lexicalism . In Mark Baltin and Anthony Kroch , editors , Alternative Conceptions of Phrase Structure . Chicago
University Press.
Simon L . Peyton Jones .  1987 . The Implementation of Functional Programing Languages  . Prentice-
Hall , New York.
Sebastian Shaumyan . 1987. A Semiotic Theory of
Language . Indiana University Press.
Mark Steedman .  1987 . Combinatory grammars and parasitic gaps . Natural Language and Linguistic Theory ,  5:403-439 . 
Mark Steedman .  1988 . Combinators and grammars . In Richard T . Oehrle , Emmon Bach , and Deirdre Wheeler , editors , Categorial Grammars and Natural Language Structures  . D . Reidel,

Mark Steedman .  1990 . Gapping as constituent coordination . Linguistics and Philosophy , 13: 207-263 . 
Mark Steedman .  1996 . Surface Structure and Interpretation . MIT Press , Cambridge , MA . 
K . Vijay-Shanker and David J . Weir .  1993 . Parsing some constrained grammar formalisms . Computational Linguistics , 19:591--636 . 
Stephen Wechsler .  1995 . The Semantic Basis of Argument Structure . CSLI , Stanford , CA . 
Kent Wittenburg .  1987 . Predictive combinators . In Proceedings of the 25th Annual Meeting of the
ACL , pages 73-79.

