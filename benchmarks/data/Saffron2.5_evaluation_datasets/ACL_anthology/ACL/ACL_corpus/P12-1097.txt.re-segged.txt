Proceedings of the 50th Annual Meeting of the Association for Computational Linguistics , pages 921?929,
Jeju , Republic of Korea , 814 July 2012. c?2012 Association for Computational Linguistics
Character-Level Machine Translation Evaluation
for Languages with Ambiguous Word Boundaries
Chang Liu and Hwee Tou Ng
Department of Computer Science
National University of Singapore
13 Computing Drive , Singapore 117417
{liuchan1,nght}@comp.nus.edu.sg
Abstract
In this work , we introduce the TESLA-
CELAB metric ( Translation Evaluation of
Sentences with Linear-programming-based
Analysis ? Character-level Evaluation for
Languages with Ambiguous word Boundaries ) for automatic machine translation evaluation . For languages such as Chinese where words usually have meaningful internal structure and word boundaries are often fuzzy,
TESLA-CELAB acknowledges the advantage of characterlevel evaluation over word-level evaluation . By reformulating the problem in the linear programming framework , TESLA-CELAB addresses several drawbacks of the characterlevel metrics , in particular the modeling of synonyms spanning multiple characters . We show empirically that TESLA-CELAB significantly outperforms characterlevel BLEU in the EnglishChinese translation evaluation tasks.
1 Introduction
Since the introduction of BLEU ( Papineni et al , 2002), automatic machine translation ( MT ) evaluation has received a lot of research interest.
The Workshop on Statistical Machine Translation ( WMT ) hosts regular campaigns comparing different machine translation evaluation metrics ( Callison-Burch et al , 2009; Callison-Burch et al , 2010; Callison-Burch et al , 2011). In the WMT shared tasks , many new generation metrics , such as METEOR ( Banerjee and Lavie , 2005), TER ( Snover et al , 2006), and TESLA ( Liu et al , 2010) have consistently outperformed BLEU as judged by the correlations with human judgments.
The research on automatic machine translation evaluation is important for a number of reasons . Automatic translation evaluation gives machine translation researchers a cheap and reproducible way to guide their research and makes it possible to compare machine translation methods across different studies . In addition , machine translation system parameters are tuned by maximizing the automatic scores . Some recent research ( Liu et al , 2011) has shown evidence that replacing BLEU by a newer metric , TESLA , can improve the human judged translation quality.
Despite the importance and the research interest on automatic MT evaluation , almost all existing work has focused on European languages , in particular on English . Although many methods aim to be language neutral , languages with very different characteristics such as Chinese do present additional challenges . The most obvious challenge for Chinese is that of word segmentation.
Unlike European languages , written Chinese is not split into words . Segmenting Chinese sentences into words is a natural language processing task in its own right ( Zhao and Liu , 2010; Low et al , 2005). However , many different segmentation standards exist for different purposes , such as Microsoft Research Asia ( MSRA ) for Named Entity Recognition ( NER ), Chinese Treebank ( CTB ) for parsing and part-of-speech ( POS ) tagging , and City University of Hong Kong ( CITYU ) and Academia Sinica ( AS ) for general word segmentation and POS tagging . It is not clear which standard is the best in a given scenario.
The only prior work attempting to address the problem of word segmentation in automatic MT evaluation for Chinese that we are aware of is Li et buy umbrella ? ?? buy umbrella ? ? ? buy rain umbrella Figure 1: Three forms of the same expression buy umbrella in Chinese al . (2011). The work compared various MT evaluation metrics ( BLEU , NIST , METEOR , GTM , 1 ? TER ) with different segmentation schemes , and found that treating every single character as a token ( characterlevel MT evaluation ) gives the best correlation with human judgments.
2 Motivation
Li et al (2011) identify two reasons that character-based metrics outperform word-based metrics . For illustrative purposes , we use Figure 1 as a running example in this paper . All three expressions are semantically identical ( buy umbrella ). The first two forms are identical because ??1 and ? are synonyms . The last form is simply an ( arguably wrong ) alternative segmented form of the second expression.
1. Word-based metrics do not award partial matches , e.g ., ?_?? and ?_? would be penalized for the mismatch between ?? and ?. Character-based metrics award the match between characters ? and?.
2. Character-based metrics do not suffer from errors and differences in word segmentation , so ?_?? and ?_?_? would be judged exactly equal.
Li et al (2011) conduct empirical experiments to show that character-based metrics consistently outperform their word-based counterparts . Despite that , we observe two important problems for the character-based metrics : 1. Although partial matches are partially awarded , the mechanism breaks down for ngrams where 1Literally , rain umbrella.
n > 1. For example , between ?_?_? and ?_?, higher-order ngrams such as?_? and ?_? still have no match , and will be penalized accordingly , even though ?_?_? and ?_? should match exactly . Ngrams such as ?_? which cross natural word boundaries and are meaningless by themselves can be particularly tricky.
2. Character-level metrics can utilize only a small part of the Chinese synonym dictionary , such as ? and ? ( you ). The majority of Chinese synonyms involve more than one character , such as ?? and ? ( umbrella ), and ?? and ?? ( child).
In this work , we attempt to address both of these issues by introducing TESLA-CELAB , a characterlevel metric that also models word-level linguistic phenomenon . We formulate the ngram matching process as a real-valued linear programming problem , which can be solved efficiently . The metric is based on the TESLA automatic MT evaluation framework ( Liu et al , 2010; Dahlmeier et al , 2011).
3 The Algorithm 3.1 Basic Matching
We illustrate our matching algorithm using the examples in Figure 1. Let ??? be the reference , and ?? be the candidate translation.
We use Cilin (?????)2 as our synonym dictionary . The basic ngram matching problem is shown in Figure 2. Two ngrams are connected if they are identical , or if they are identified as synonyms by Cilin . Notice that all ngrams are put in the same matching problem regardless of n , unlike in translation evaluation metrics designed for European languages . This enables us to designate ngrams with different values of n as synonyms , such as ?? ( n = 2) and ? ( n = 1).
In this example , we are able to make a total of two successful matches . The recall is therefore 2/6 and the precision is 2/3.
2http://ir.hit.edu.cn/phpwebsite/index.php?module=pagemaster & PAGE_user_op=view_page&PAGE_id=162 ? ? ?? Figure 2: The basic ngram matching problem ? ? ? ?? ?? ??? ? ? ?? Figure 3: The ngram matching problem after phrase matching 3.2 Phrase Matching We note in Figure 2 that the trigram ??? and the bigram ?? are still unmatched , even though the match between ?? and ? should imply the match between ??? and??.
We infer the matching of such phrases using a dynamic programming algorithm . Two ngrams are considered synonyms if they can be segmented into synonyms that are aligned . With this extension , we are able to match ??? and ?? ( since ? matches ? and ?? matches ?). The matching problem is now depicted by Figure 3.
The linear programming problem is mathematically described as follows . The variables w (?, ?) are the weights assigned to the edges , w (?,?) ? [0, 1] w (?,?) ? [0, 1] w (??,?) ? [0, 1] w (???,??) ? [0, 1] We require that for any node N , the sum of weights assigned to edges linking N must not exceed one.
wref (?) = w (?,?) wref (?) = w (?,?) wref (??) = w (??,?) wref (???) = w (???,??) ? ? ? ?? Figure 4: A covered ngram matching problem wcand (?) = w (?,?) wcand (?) = w (?,?) + w (??,?) wcand (??) = w (???,??) where wref(X ) ? [0, 1] ? X wcand(X ) ? [0, 1] ? X
Now we maximize the total match , w(?,?)+w(?,?)+w(??,?)+w (???,??) In this example , the best match is 3, resulting in a recall of 3/6 and a precision of 3/3.
3.3 Covered Matching
In Figure 3, ngrams ? and ?? in the reference remain impossible to match , which implies misguided penalty for the candidate translation . We observe that since ??? has been matched , all its sub-n-grams should be considered matched as well , including ? and ??. We call this the covered ngram matching rule . This relationship is implicit in the matching problem for English translation evaluation metrics where words are well delimited . But with phrase matching in Chinese , it must be modeled explicitly.
However , we cannot simply perform covered ngram matching as a post processing step . As an example , suppose we are matching phrases ?? and ?, as shown in Figure 4. The linear programming solver may come up with any of the solutions where w (?,?) + w (??,?) = 1, w (?,?) ? [0, 1], and w (??,?) ? [0, 1].
To give the maximum coverage for the node ?, only the solution w (?,?) = 0, w (??,?) = 1 is accepted . This indicates the need to model covered lem itself.
We return to the matching of the reference ?? ? and the candidate ?? in Figure 3. On top of the w (?) variables already introduced , we add the variables maximum covering weights c (?). Each c(X ) represents the maximum w(Y ) variable where ngram Y completely covers ngram X .
cref (?) ? max(wref (?), wref (??), wref (???)) cref (?) ? max(wref (?), wref (??), wref (??), wref (???)) cref (?) ? max(wref (?), wref (??), wref (???)) cref (??) ? max(wref (??), wref (???)) cref (??) ? max(wref (??), wref (???)) cref (???) ? wref (???) ccand (?) ? max(wcand (?), wcand (??)) ccand (?) ? max(wcand (?), wcand (??)) ccand (??) ? wcand (??) where cref(X ) ? [0, 1] ? X ccand(X ) ? [0, 1] ? X However , the max (?) operator is not allowed in the linear programming formulation . We get around this by approximating max (?) with the sum instead.
Hence , cref (?) ? wref (?) + wref (??)+ wref (???) cref (?) ? wref (?) + wref (??)+ wref (??) + wref (???) . . .
We justify this approximation by the following observation . Consider the subproblem consisting of just the w (?, ?), wref (?), wcand (?) variables and their associated constraints . This subproblem can be seen as a maximum flow problem where all constants are integers , hence there exists an optimal solution where each of the w variables is assigned a value of either 0 or 1. For such a solution , the max and the sum forms are equivalent , since the cref (?) and ccand (?) variables are also constrained to the range [0, 1].
The maximum flow equivalence breaks down when the c (?) variables are introduced , so in the general case , replacing max with sum is only an approximation.
Returning to our sample problem , the linear programming solver simply needs to assign : w (???,??) = 1 wref (???) = 1 wcand (??) = 1 Consequently , due to the maximum covering weights constraint , we can give the following value assignment , implying that all ngrams have been matched.
cref(X ) = 1 ? X ccand(X ) = 1 ? X 3.4 The Objective Function We now define our objective function in terms of the c (?) variables . The recall is a function of ? X cref(X ), and the precision is a function of ? Y ccand(Y ), where X is the set of all ngrams of the reference , and Y is the set of all ngrams of the candidate translation.
Many prior translation evaluation metrics such as MAXSIM ( Chan and Ng , 2008) and TESLA ( Liu et al , 2010; Dahlmeier et al , 2011) use the F-0.8 measure as the final score:
F0.8 =
Precision ? Recall 0.8? Precision + 0.2? Recall Under some simplifying assumptions ? specifically , that precision = recall ? basic calculus shows that F0.8 is four times as sensitive to recall than to precision . Following the same reasoning , we want to place more emphasis on recall than on precision.
We are also constrained by the linear programming framework , hence we set the objective function as ( ?
X cref(X ) + f ?
Y ccand(Y ) ) 0 < f < 1 is also four times as sensitive to recall than to pre-cision.3 The value of this objective function is our TESLA-CELAB score . Similar to the other TESLA metrics , when there are N multiple references , we match the candidate translation against each of them and use the average of the N objective function values as the segment level score . System level score is the average of all the segment level scores.
Z is a normalizing constant to scale the metric to the range [0, 1], chosen so that when all the c (?) variables have the value of one , our metric score attains the value of one.
4 Experiments
In this section , we test the effectiveness of TESLA-CELAB on some realworld EnglishChinese translation tasks.
4.1 IWSLT 2008 EnglishChinese CT
The test set of the IWSLT 2008 ( Paul , 2008) EnglishChinese ASR challenge task ( CT ) consists of 300 sentences of spoken language text . The average English source sentence is 5.8 words long and the average Chinese reference translation is 9.2 characters long . The domain is travel expressions.
The test set was translated by seven MT systems , and each translation has been manually judged for adequacy and fluency . Adequacy measures whether the translation conveys the correct meaning , even if the translation is not fully fluent , whereas fluency measures whether a translation is fluent , regardless of whether the meaning is correct . Due to high evaluation costs , adequacy and fluency assessments were limited to the translation outputs of four systems . In addition , the translation outputs of the MT systems are also manually ranked according to their translation quality.
Interjudge agreement is measured by the Kappa coefficient , defined as:
Kappa =
P ( A )? P ( E ) 1? P ( E ) where P ( A ) is the percentage of agreement , and P ( E ) is the percentage of agreement by pure 3Our empirical experiments suggest that the correlations do plateau near this value . For simplicity , we choose not to tune f on the training data.
Judgment Set 2 3 1 0.4406 0.4355 2 - 0.4134 Table 1: Interjudge Kappa for the NIST 2008 English-
Chinese task chance . The interjudge Kappa is 0.41 for fluency , 0.40 for adequacy , and 0.57 for ranking . Kappa values between 0.4 and 0.6 are considered moderate , and the numbers are in line with other comparable experiments.
4.2 NIST 2008 EnglishChinese MT Task
The NIST 2008 EnglishChinese MT task consists of 127 documents with 1,830 segments , each with four reference translations and eleven automatic MT system translations . The data is available as LDC2010T01 from the Linguistic Data Consortiuim ( LDC ). The domain is newswire texts . The average English source sentence is 21.5 words long and the average Chinese reference translation is 43.2 characters long.
Since no manual evaluation is given for the data set , we recruited twelve bilingual judges to evaluate the first thirty documents for adequacy and fluency (355 segments for a total of 355? 11 = 3, 905 translated segments ). The final score of a sentence is the average of its adequacy and fluency scores.
Each judge works on one quarter of the sentences so that each translation is judged by three judges . The judgments are concatenated to form three full sets of judgments.
We ignore judgments where two sentences are equal in quality , so that there are only two possible outcomes ( X is better than Y ; or Y is better than X ), and P ( E ) = 1/2. The Kappa values are shown in Table 1. The values indicate moderate agreement , and are in line with other comparable experiments.
4.3 Baseline Metrics 4.3.1 BLEU
Although word-level BLEU has often been found inferior to the new-generation metrics when the target language is English or other European languages , prior research has shown that characterlevel BLEU is highly competitive when the target language is Chinese ( Li et al , 2011). Therefore , we Metric Type consistency correlation correlation BLEU characterlevel 0.7004 0.9130 0.9643 TESLA-M word-level 0.6771 0.9167 0.8929 TESLA-CELAB ? characterlevel 0.7018 0.9229 0.9643 TESLA-CELAB hybrid 0.7281? 0.9490?? 0.9643 Table 2: Correlation with human judgment on the IWSLT 2008 EnglishChinese challenge task . * denotes better than the BLEU baseline at 5% significance level . ** denotes better than the BLEU baseline at 1% significance level.
Segment Pearson Spearman rank
Metric Type consistency correlation correlation BLEU characterlevel 0.7091 0.8429 0.7818 TESLA-M word-level 0.6969 0.8301 0.8091 TESLA-CELAB ? characterlevel 0.7158 0.8514 0.8227 TESLA-CELAB hybrid 0.7162 0.8923?? 0.8909?? Table 3: Correlation with human judgment on the NIST 2008 EnglishChinese MT task . ** denotes better than the BLEU baseline at 1% significance level.
use characterlevel BLEU as our main baseline.
The correlations of characterlevel BLEU and the average human judgments are shown in the first row of Tables 2 and 3 for the IWSLT and the NIST data set , respectively . Segment-level consistency is defined as the number of correctly predicted pairwise rankings divided by the total number of pairwise rankings . Ties are excluded from the calculation . We also report the Pearson correlation and the Spearman rank correlation of the system-level scores . Note that in the IWSLT data set , the Spearman rank correlation is highly unstable due to the small number of participating systems.
4.3.2 TESLA-M
In addition to characterlevel BLEU , we also present the correlations for the word-level metric TESLA . Compared to BLEU , TESLA allows more sophisticated weighting of ngrams and measures of word similarity including synonym relations . It has been shown to give better correlations than BLEU for many European languages including English ( Callison-Burch et al , 2011). However , its use of POS tags and synonym dictionaries prevents its use at the characterlevel . We use TESLA as a representative of a competitive word-level metric.
We use the Stanford Chinese word segmenter ( Tseng et al , 2005) and POS tagger ( Toutanova et al ., 2003) for preprocessing and Cilin for synonym definition during matching . TESLA has several variants , and the simplest and often the most robust , TESLA-M , is used in this work . The various correlations are reported in the second row of Tables 2 and 3.
The scores show that word-level TESLA-M has no clear advantage over characterlevel BLEU , despite its use of linguistic features . We consider this conclusion to be in line with that of Li et al (2011).
4.4 TESLA-CELAB
In all our experiments here we use TESLA-CELAB with ngrams for n up to four , since the vast majority of Chinese words , and therefore synonyms , are at most four characters long.
The correlations between the TESLA-CELAB scores and human judgments are shown in the last row of Tables 2 and 3. We conducted significance testing using the resampling method of ( Koehn , 2004). Entries that outperform the BLEU baseline at 5% significance level are marked with ?*?, and those that outperform at the 1% significance level are marked with ?**?. The results indicate that TESLA-CELAB significantly outperforms BLEU.
For comparison , we also run TESLA-CELAB without the use of the Cilin dictionary , reported in the third row of Tables 2 and 3 and denoted as TESLA-CELAB ?. This disables TESLA-turns TESLA-CELAB into a linear programming based characterlevel metric . The performance of TESLA-CELAB ? is comparable to the characterlevel BLEU baseline.
Note that ? TESLA-M can process word-level synonyms , but does not award characterlevel matches.
? TESLA-CELAB ? and characterlevel BLEU award characterlevel matches , but do not consider word-level synonyms.
? TESLA-CELAB can process word-level synonyms and can award characterlevel matches.
Therefore , the difference between TESLA-M and TESLA-CELAB highlights the contribution of characterlevel matching , and the difference between TESLA-CELAB ? and TESLA-CELAB highlights the contribution of word-level synonyms.
4.5 Sample Sentences
Some sample sentences taken from the IWSLT test set are shown in Table 4 ( some are simplified from the original ). The Cilin dictionary correctly identified the following as synonyms : ? = ?? week ?? = ?? daughter ? = ? you ?? = ?? work The dictionary fails to recognize the following synonyms : ?? = ? a ?? = ?? here However , partial awards are still given for the matching characters ? and?.
Based on these synonyms , TESLA-CELAB is able to award less trivial ngram matches , such as ? ?=???, ???=???, and ???=???, as these pairs can all be segmented into aligned synonyms . The covered ngram matching rule is then able to award tricky ngrams such as ??,??,? ?, ?? and ??, which are covered by ???, ???,???,??? and ??? respectively.
Note also that the word segmentations shown in these examples are for clarity only . The TESLA-CELAB algorithm does not need presegmented
Reference : ? ? ? next week .
Candidate : ? ?? ? next week .
Reference : ? ? ?? ?? ?
I have a daughter .
Candidate : ? ? ? ?? ?
I have a daughter .
Reference : ? ? ?? ?? ? ? you at here work qn ?
Candidate : ? ? ?? ?? ? ? you at here work qn ? Table 4: Sample sentences from the IWSLT 2008 test set
Schirm kaufen umbrella buy
Regenschirm kaufen umbrella buy
Regen schirm kaufen rain umbrella buy
Figure 5: Three forms of buy umbrella in German sentences , and essentially finds multicharacter synonyms opportunistically.
5 Discussion and Future Work 5.1 Other Languages with Ambiguous Word
Boundaries
Although our experiments here are limited to Chinese , many other languages have similarly ambiguous word boundaries . For example , in German , the exact counterpart to our example exists , as depicted in Figure 5.
Regenschirm , literally rain-umbrella , is a synonym of Schirm . The first two forms in Figure 5 appear in natural text , and in standard BLEU , they would be penalized for the nonmatching words Schirm and Regenschirm . Since compound nouns such as Regenschirm are very common in German and generate many out-of-vocabulary words , a common preprocessing step in German translation ( and translation evaluation to a lesser extent ) is to split compound words , and we end up with the last form Regen schirm kaufen . This process is analogous to We plan to conduct experiments on German and other Asian languages with the same linguistic phenomenon in future work.
5.2 Fractional Similarity Measures
In the current formulation of TESLA-CELAB , two ngrams X and Y are either synonyms which completely match each other , or are completely unrelated . In contrast , the linear-programming based TESLA metric allows fractional similarity measures between 0 ( completely unrelated ) and 1 ( exact synonyms ). We can then award partial scores for related words , such as those identified as such by WordNet or those with the same POS tags.
Supporting fractional similarity measures is nontrivial in the TESLA-CELAB framework . We plan to address this in future work.
5.3 Fractional Weights for Ngrams
The TESLA-M metric allows each ngram to have a weight , which is primarily used to discount function words . TESLA-CELAB can support fractional weights for ngrams as well by the following extension . We introduce a function m(X ) that assigns a weight in [0, 1] for each ngram X . Accordingly , our objective function is replaced by : ( ?
X m(X)cref(X ) + f ?
Y m(Y ) ccand(Y ) ) where Z is a normalizing constant so that the metric has a range of [0, 1].
Z = ?
X m(X ) + f ?
Y m(Y )
However , experiments with different weight functions m (?) on the test data set failed to find a better weight function than the currently implied m (?) = 1. This is probably due to the linguistic characteristics of Chinese , where human judges apparently give equal importance to function words and content words . In contrast , TESLA-M found discounting function words very effective for English and other European languages such as German . We plan to investigate this in the context of non-Chinese languages.
6 Conclusion
In this work , we devise a new MT evaluation metric in the family of TESLA ( Translation Evaluation of Sentences with Linear-programming-based Analysis ), called TESLA-CELAB ( Character-level Evaluation for Languages with Ambiguous word Boundaries ), to address the problem of fuzzy word boundaries in the Chinese language , although neither the phenomenon nor the method is unique to Chinese.
Our metric combines the advantages of characterlevel and word-level metrics : 1. TESLA-CELAB is able to award scores for partial word-level matches.
2. TESLA-CELAB does not have a segmentation step , hence it will not introduce word segmentation errors.
3. TESLA-CELAB is able to take full advantage of the synonym dictionary , even when the synonyms differ in the number of characters.
We show empirically that TESLA-CELAB significantly outperforms the strong baseline of characterlevel BLEU in two well known EnglishChinese MT evaluation data sets . The source code of TESLA-CELAB is available from http://nlp.comp.nus.edu.sg/software/.
Acknowledgments
This research is supported by the Singapore National Research Foundation under its International Research Centre @ Singapore Funding Initiative and administered by the IDM Programme Office.
References
Satanjeev Banerjee and Alon Lavie . 2005. METEOR : An automatic metric for MT evaluation with improved correlation with human judgments . In Proceedings of the ACL Workshop on Intrinsic and Extrinsic Evaluation Measures for Machine Translation and/or Summarization.
Chris Callison-Burch , Philipp Koehn , Christof Monz , and Josh Schroeder . 2009. Findings of the 2009 workshop on statistical machine translation . In Proceedings of the Fourth Workshop on Statistical Machine Translation.
928
Chris Callison-Burch , Philipp Koehn , Christof Monz , Kay Peterson , Mark Przybocki , and Omar F . Zaidan.
2010. Findings of the 2010 joint workshop on statistical machine translation and metrics for machine translation . In Proceedings of the Joint Fifth Workshop on Statistical Machine Translation and MetricsMATR.
Chris Callison-Burch , Philipp Koehn , Christof Monz , and Omar Zaidan . 2011. Findings of the 2011 workshop on statistical machine translation . In Proceedings of the Sixth Workshop on Statistical Machine Translation.
Yee Seng Chan and Hwee Tou Ng . 2008. MAXSIM : A maximum similarity metric for machine translation evaluation . In Proceedings of the 46th Annual Meeting of the Association for Computational Linguistics:
Human Language Technologies.
Daniel Dahlmeier , Chang Liu , and Hwee Tou Ng . 2011.
TESLA at WMT2011: Translation evaluation and tunable metric . In Proceedings of the Sixth Workshop on
Statistical Machine Translation.
Philipp Koehn . 2004. Statistical significance tests for machine translation evaluation . In Proceedings of the 2004 Conference on Empirical Methods in Natural
Language Processing.
Maoxi Li , Chengqing Zong , and Hwee Tou Ng . 2011.
Automatic evaluation of Chinese translation output : word-level or characterlevel ? In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics : Short Papers.
Chang Liu , Daniel Dahlmeier , and Hwee Tou Ng.
2010. TESLA : Translation evaluation of sentences with linear-programming-based analysis . In Proceedings of the Joint Fifth Workshop on Statistical Machine
Translation and MetricsMATR.
Chang Liu , Daniel Dahlmeier , and Hwee Tou Ng . 2011.
Better evaluation metrics lead to better machine translation . In Proceedings of the 2011 Conference on Empirical Methods in Natural Language Processing.
Jin Kiat Low , Hwee Tou Ng , and Wenyuan Guo . 2005. A maximum entropy approach to Chinese word segmentation . In Proceedings of the Fourth SIGHAN Workshop on Chinese Language Processing.
Kishore Papineni , Salim Roukos , Todd Ward , and WeiJing Zhu . 2002. BLEU : a method for automatic evaluation of machine translation . In Proceedings of the 40th Annual Meeting of the Association for Computational Linguistics.
Michael Paul . 2008. Overview of the iwslt 2008 evaluation campaign . In Proceedings of the International Workshop on Spoken Language Translation.
Matthew Snover , Bonnie Dorr , Richard Schwartz , Linnea Micciulla , and John Makhoul . 2006. A study of translation edit rate with targeted human annotation.
In Proceedings of the Association for Machine Translation in the Americas.
Kristina Toutanova , Dan Klein , Christopher D . Manning , and Yoram Singer . 2003. Feature-rich part-of-speech tagging with a cyclic dependency network . In Proceedings of the 2003 Conference of the North American Chapter of the Association for Computational Linguistics.
Huihsin Tseng , Pichuan Chang , Galen Andrew , Daniel Jurafsky , and Christopher Manning . 2005. A conditional random field word segmenter for SIGHAN bakeoff 2005. In Proceedings of the Fourth SIGHAN Workshop on Chinese Language Processing.
Hongmei Zhao and Qun Liu . 2010. The CIPS-SIGHAN CLP 2010 Chinese word segmentation bakeoff . In Proceedings of the Joint Conference on Chinese Language Processing.
929
