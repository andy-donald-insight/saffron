Coupling CCG and Hybrid Logic Dependency Semantics
Jason Baldridge

Division of Informatics
2 Buccleuch Place
University of Edinburgh
Edinburgh , UK , EH8 9LW

Geert-Jan M . Kruijff
Universita?t des Saarlandes
Computational Linguistics
Lehrstuhl Uszkoreit
Building 17, Postfach 151150
66041 Saarbru?cken , Germany


Categorial grammar has traditionally used the ?- calculus to represent meaning  . We present an alternative , dependency-based perspective on linguistic meaning and situate it in the computational setting  . This perspective is formalized in terms of hybrid logic and has a rich yet per spicuous propositional ontology that enables a wide variety of semantic phenomena to be represented in a single meaning formalism  . 
Finally , we show how we can couple this formalization to Combinatory Categorial Grammar to produce interpretations compositionally  . 
1 Introduction
The ?- calculus has enjoyed many years as the standard semantic encoding for categorial grammars and other grammatical frameworks  , but recent work has highlighted its inadequacies for both linguistic and computational concerns of representing natural language semantics  ( Copestake et al , 1999; Kruijff ,  2001) . The latter couples are source-sensitive categorial proof theory  ( Moortgat , 1997) to hybrid logic ( Blackburn ,  2000 ) to formalize a dependency-based perspective on meaning  , which we call here Hybrid Logic Dependency Semantics  ( HLDS )  . In this paper , we situate HLDS in the computational context by explicating its properties as a framework for computational semantics and linking it to Combinatory 
Categorial Grammar ( CCG).
The structure of the paper is as follows . In x2 , we briefly introduce CCG and how it links syntax and semantics  , and then discuss semantic representations that use indexes to identify subparts of logical forms  .   x3 introduces HLDS and evaluates it with respect to the criteria of other computational semantics frameworks  .   x4 shows how we can build HLDS terms using CCG with unification and  x5 shows how intonation and information structure can be incorporated into the approach  . 
2 Indexed semantic representations
Traditionally , categorial grammar has captured meaning using a ( simply typed ) ?- calculus , building semantic structure in parallel to the categorial inference  ( Morrill , 1994; Moortgat , 1997; Steedman , 2000b ) . For example , a ( simplified ) CCG lexical entry for a verb such as wrote is given in  ( 1 )  . 
(1) wrote `( snn ) = n : ? x : ? y:write(y;x)
Rules of combination are defined to operate on both categories and ?- terms simultaneously  . For example , the rules allow the following derivation for Ed wrote books  . 
(2) Edwrote booksn:Ed(snn ) = n : ? x : ? y:write(y ; x ) n : books > snn : ? y:write(y ; books ) < s:write(Ed ; books ) Derivations like ( 2 ) give rise to the usual sort of predicate-argument structure whereby the order in which the arguments appear  ( and are bound by the ?? s ) is essentially constitutive of their meaning . 
Thus , the first argument could be taken to correspond to the writer  , whereas the second argument corresponds to what is being written  . 
Computational Linguistics ( ACL ) , Philadelphia , July 2002 , pp .  319-326 . 
Proceedings of the 40th Annual Meeting of the Association for One deficiency of ?- calculus meaning representations is that they usually have to be type-raised to the worst case to fully model quantification  , and this can reverberate and increase the complexity of syntactic categories since a verb like wrote will need to be able to take arguments with the types of generalized quantifiers  . The approach we advocate in this paper does not suffer from this problem  . 
For CCG , the use of the ?- terms is simply a convenient device to bind arguments when presenting derivations  ( Steedman , 2000b ) . In implementations , a more common strategy is to compute semantic representations via unification  , at actic explicitly employed in Unification Categorial Grammar  ( UCG )   ( Zeevat ,  1988) . Using a unification paradigm in which atomic categories are bundles of syntactic and semantic information  , we can use an entry such as ( 3 ) for wrote in place of ( 1 )  . In the unification setting , (3) permits a derivation analogous to (2) . 
(3) wrote `( s:write(y;x)nn:y ) = n:x
For creating predicate-argument structures of this kind  , strategies using either ?- terms or unification to bind arguments are essentially notational variants  . However , UCG goes beyond simple predicate-argument structures to instead use a semantic representation language called Indexed Language  ( In L )  . 
The idea of using indexes stems from Davidson ( event variables )  , and are a commonly used mechanism in unification -based frameworks and theories for discourse representation  . In Lattaches one to every formulare presenting its discourse referent  . This results in a representation such as ( 4 ) for the sentence Ed came to the party . 
(4) [ e ] [ party(x ) ; past(e ) ; to ( e ; x) ; come(e ; Ed ) ] In L thus flattens logical forms to some extent , using the indexes to spread a given entity or event through multiple predications  . The use of indexes is crucial for UCG?s account of modifiers  , and as we will see later , we exploit such referents to achieve similar ends when coupling HLDS and CCG  . 
Minimal Recursion Semantics ( MRS )   ( Copestake et al , 1999; Copestake et al ,  2001 ) is a framework for computational semantics that is designed to simplify the work of algorithms which produce or use semantic representations  . MRS provides the means to represent interpretations with a flat  , underspecified semantics using terms of the predicate calculus and generalized quantifiers  . Flattening is achieved by using an indexation scheme involving labels that tag particular groups of elementary predications  ( EPs ) and handles ( here , h1; h2; ::::) that reference those EPs . Underspecification is achieved by using unresolved handles as the arguments for scope -bearing elements and declaring constraints  ( with the = q operator ) on how those handles can be resolved . Different scopes can be reconstructed by equating unresolved handles with the labels of the other EPs obeying the = q constraints  . For example ,   ( 5 ) would be given as the representation for every dog chases somewhite cat  . 
(5) hh 0 ; fh1:every(x ; h2 ; h3) ; h4: dog(x ) ; h11 : cat(y ) ; h8:some(y ; h9 ; h10) ; h11: white(y ) ; h7:chase(x ; y)g ; f h0 = q h7 ; h2 = q h4 ;   h9=qh11gi Copestake et alargue that these flat representations facilitate a number of computational tasks  , including machine translation and generation , without sacrificing linguistic expressivity . Also , flatness permits semantic equivalences to be checked more easily than in structures with deeper embedding  , and underspecification simplifies the work of the parser since it does not have to compute every possible reading for scope-bearing elements  . 
3 Hybrid Logic Dependency Semantics
Kruijff ( 2001 ) proposes an alternative way to representing linguistically realized meaning : namely  , as terms of hybrid modal logic ( Blackburn ,  2000 ) explicitly encoding the dependency relations between heads and dependents  , spatiotemporal structure , contextual reference , and information structure . We call this unified perspective combining many levels of meaning Hybrid Logic Dependency Semantics  ( HLDS )  . We begin by discussing how hybrid logic extends modal logic  , then look at the representation of linguistic meaning via hybrid logic terms  . 
3.1 Hybrid Logic
Though modal logic provides a powerful tool for encoding relational structures and their properties  , it contains a surprising inherent asymmetry : states  ( ? worlds ? ) are at the heart of the model theory for modal logic  , but there are no means to directly reference specific states using the object language  . 
This inability to state where exactly a proposition holds makes modal logican inadequate representation framework for practical applications like knowledge representation  ( Areces , 2000) or temporal reasoning ( Blackburn ,  1994) . Because of this , computational work in knowledge representation has usually involved reengineering first-order logic to suit the task  , e . g . , the use of metapredicates such as Hold of Kowalski and Allen  . Unfortunately , such logics are often undecidable . 
Hybrid logic extends standard modal logic while retaining decidability and favorable complexity  ( Areces , 2000) ( cf . ( Areces et al , 1999) for a complexity road map ) . The strategy is to add nominals , a new sort of basic formula with which we can explicitly name states in the object language  . Next to propositions , nominals are first-class citizens of the object language : formulas can be formed using both sorts  , standard boolean operators , and the satisfaction operator ?@? . A formula @ ip states that the formula pholds at the state named by i  . 1  ( There are more powerful quantifiers ranging over nominals  , such as # , but we do not consider them here . ) With nominals we obtain the possibility to explicitly refer to the state at which a proposition holds  . As Blackburn (1994) argues , this is essential for capturing our intuitions about temporal reference  . A standard modal temporal logic with the modalities F and P  ( future and past , respectively ) cannot correctly represent an utterance such as Edfinished the book because it is unable to refer to the specific time at which the event occurred  . The addition of nominals makes this possible , as shown in (6) , where the nominali represents the Reichenbachian event time  . 
(6) hPi(i ^ Ed-finish-book )
Furthermore , many temporal properties can be defined in terms of pure formulas which use nominals and contain no propositional variables  . For example , the following term defines the fact that the relations for F and P are mutually converse :  1A few notes on our conventions : p ; q ; rare variables over any hybrid logic formula ; i ; j ; k are variables over nominals ; di and hi denote nominals ( for dependent and head , respectively ) . 
(7) @ i[F]hPii^@i[P]hFii
It is also possible to encode a variety of other representations in terms of hybrid logics  . For example , nominals correspond to tags in attribute-value matrices  ( AVMs )  , so the hybrid logic formula in ( 8 ) corresponds to the AVM in ( 9 )  . 
(8 ) hSUBJi ( i ^ hAG Risingular ^ hPREDi dog ) ^h COMPih SUBJii ( 9 )  2
SUBJ1"
AGR singular
PRED dog #
COMP h
SUBJ1 i are at the heart of a sorting strategy . Different sorts of nominals can be introduced to build u parichs ortal ontology without losing the perspicuity of a propositional setting  . Additionally , we can reason about sorts because nominals are part and parcel of the object language  . We can extend the language of hybrid logic with fS or t : Nom in alg to facilitate the explicit statement of whatsort a nominal is in the language and carry this modification into one of the existing tableaux methods for hybrid logic to reason effectively with this information  . This makes it possible to capture the rich ontologies of lexical databases like WordNet in a clear and concise fashion which would be onerous to represent in first-order logic  . 
3.2 Encoding linguistic meaning
Hybrid logic enables us to logically capture two essential aspects of meaning in a clean and compact way  , namely ontological richness and the possibility to refer  . Logically , we can represent an expression?s linguistically realized meaning as a conjunction of modalized terms  , anchored by the nominal that identifies the head ?s proposition :  ( 10 ) @ h ( proposition
Vh?ii(di ^ depi))
Dependency relations are modeled as modal relations h?ii  , and with each dependent we associate a nominal d i  , representing its discourse referent . 
Technically ,   ( 10 ) states that each nominal di names the state where a dependent expressed as a proposition depi should be evaluated and is a ? i successor of h  , the nominal identifying the head . As an example , the sentence Ed wrote a long book in London receives the represention in  ( 11 )  . 
(11 ) @ h1 ( write^hACTi ( d0^Ed ) ^ h PAT i ( d5^book^hGRi ( d 7^ long ) ) ^ hLOCi ( d9^ London ) ) The modal relations ACT , PAT , LOC , and GR stand for the dependency relations Actor , Patient , Locative , and General Relationship , respectively . See Kruijff ( 2001 ) for the model theoretic interpretation of expressions such as  ( 11 )  . 
Contextual reference can be modeled as a statement that from the current state  ( anaphor ) there should be an accessible antecedent state at which particular conditions hold  . Thus , assuming an accessibility relation XS , we can model the meaning of the pronoun heasin ( 12 )  . 
(12) @ ih XSi(j ^ male)
During discourse interpretation , this statement is evaluated against the discourse model  . The pronoun is resolvable only if a state where male holds is XS-accessible in the discourse model  . Different accessibility relations can be modeled , e . g . to distinguish a local context ( for resolving reflexive anaphors like himself ) from a global context ( Kruijff ,  2001) . 
Finally , the rich temporal ontology underlying models of tense and aspect such as Moens and Steedman  ( 1988 ) can be captured using the sorting strategy . Earlier work like Blackburn and Lascarides ( 1992 ) already explored such ideas . HLDS employs hybrid logic to integrate Moens and Steedman?s notion of the event nucleus directly into meaning representations  . The event nucleus is a tripartite structure reflecting the underlying semantics of a type of event  . The event is related to a preparation ( an activity bringing the event about ) and a consequent ( a state ensuing to the event )  , which we encode as the modal relations PREP and CONS  , respectively . Different kinds of states and events are modeled as different sorts of nominals  , shown in (13) using the notation introduced above . 
(13 )  @  fActivity:e1ghPREPifAchievement:e2g  ^@  fAchievement:e2ghCONSifState:e3g To tie ( 13 ) in with a representation like ( 11 )  , we equate the nominal of the head with one of the nominals in the event nucleus  ( E ) a and state its temporal relation ( e . g . hP i ) . Given the event nucleus in (13) , the representation in (11) becomes (14) , where the event is thus located at a specific time in the past  . 
(14 ) @ h1 ( E ( 13 ) ^ write ^ hACTi ( d0^Ed ) ^ h PAT i ( d5^book^hGRi ( d 7^ long ) ) ^ hLOCi ( d9^ London ) ) ^@  h1fAchievement:e2g^hPifAchievement:e2g Hybrid logic?s flexibility makes it amenable to representing a wide variety of semantic phenomena in a propositional setting  , and it can furthermore be used to formulate a discourse theory  ( Kruijff and
Kruijff-Korbayova ?, 2001).
3.3 Comparison to MRS
Here we consider the properties of HLDS with respect to the four main criterial aid out by Copestake et al  ( 1999 ) which a computational semantics framework must meet : expressive adequacy  , grammatical compatibility , computational tractability , and underspecifiability . 
Expressive adequacy refers to a framework?s ability to correctly express linguistic meaning  . HLDS was designed not only with this in mind , but as its central tenet . In addition to providing the means to represent the usual predicate-valency relations  , it explicitly marks the named dependency relations between predicates and their arguments and modifiers  . These different dependency relations are not just labels : they all have unique semantic imports which project new relations in the context of different heads  . HLDS also tackles the representation of tense and aspect  , contextual reference , and information structure , as well as their interaction with discourse . 
The criterion of grammatical compatibility requires that a framework belink able to other kinds of grammatical information  . Kruijff ( 2001 ) shows that HLDS can be coupled to a rich grammatical framework  , and in x4 we demonstrate that it can be tied to CCG , a much lower power formalism than that assumed by Kruijff  . It should furthermore be straightforward to use our approach to hook HLDS up to other unification -based frameworks  . 
The definition of computational tractability states that it must be possible to check semantic equivalence of different formulas straightforwardly  . Like MRS , HLDS provides the means to view linguistic meaning in a flattened format and thereby ease the checking of equivalence  . For example ,   ( 15 ) describes the same relational structure as ( 11 )  . 
(15 ) @ h1 ( write ^ hACT id0^h PAT id 5^h LOC id 9 )  ^@  d0Ed^@d5book^@d9London  ^@  d7   long^@d5hGRid7 This example clarifies how the use of nominals is related to the indexes of UCG?s In L and the labels of MRS  . However , there is an important difference : nominals are full citizens of the object language with semantic import and are not simply a device for spreading meaning across several elementary predications  . They simultaneously represent tags on subparts of a logical form and discourse referents on which relations are predicated  . Because it is possible to view an HLDS term as a flat conjunction of the heads and dependents inside it  , the benefits described by Copestake et al with respect to MRS?s flatness thus hold for HLDS as well  . 
Computational tractability also requires that it is straightforward to express relationships between representations  . This can be done in the object language of HLDS as hybrid logic implicational statements which can be used with proof methods to discover deeper relationships  . Kruijff?s model connecting linguistic meaning to a discourse context is one example of this  . 
Underspecifiability means that semantic representations should provide means to leave some semantic distinctions unresolved whilst allowing partial terms to be flexibly and monotonically resolved  .   ( 5 ) shows how MRS leaves quantifier scope underspecified  , and such formulas can be transparently encoded in HLDS  . Consider (16) , where the relations RESTR and BODY represent the restriction and body arguments of the generalized quantifiers  , respectively . 
(16 ) @ h7 ( chase ^ hACT ih 4^h PAT ih 11 ) ^@ h1 ( every^h RESTRii^hBODYij ) ^@ h8 ( some^h REST Rik^h BOD Yil ) ^@ h4 dog^@h11 cat^@h11h GRi ( h12 ^ white )  ^@  ihQEQih4  ^@  khQEQih11 MRS-style underspecification is thus replicated by declaring new nominals and modeling = q as a modal relation between nominals  . When constructing the fully-scoped structures generated by an underspecified one  , the = q constraints must be obeyed according to the qeq condition of Copestake et al  . Because HLDS is couched directly in terms of hybrid logic  , we can concisely decl are the qeq condition as the following implication :  ( 17 ) @ihQEQij !@ ij_ ( @ih BODYik ^@ khQEQij ) Alternatively , it would in principle be possible to adopt a truly modal solution to the representation of quantifiers  . Following Alechina (1995) ,   ( generalized ) quantification can be modeled as modal operators . The complexity of generalized quantification is then pushed into the model theory instead of forcing the representation to carry the burden  . 
4 CCG Coupled to HLDS
In Dependency Grammar Logic ( DGL),
Kruijff ( 2001 ) couples HLDS to a resource-sensitive categorial proof theory  ( CTL )   ( Moortgat ,  1997) . Though DGL demonstrates a procedure for building HLDS terms from linguistic expressions  , there are several problems we can overcome by switching to CCG  . First , parsing with CCG grammars for substantial fragments is generally more efficient than with CTL grammars with similar coverage  . Also , a wide-coverage statistical parser which produces syntactic dependency structures for English is available for CCG  ( Clark et al ,  2002) . Second , syntactic features ( modeled by unary modalities ) in CTL have no intuitive semantic reflection , whereas CCG can relate syntactic and semantic features per spicuously using unification  . 
Finally , CCG has a detailed syntactic account of the realization of information structure in English  . 
To link syntax and semantics in derivations , every logical form in DGL expresses a nominal identifying its head in the format@ip  . This handles dependents in a linguistically motivated way through a linking theory : given the form of a dependent  , its ( possible ) role is established , after which its meaning states that it seeks a head that can take such a role  . However , to subsequently bind that dependent into the verb ?s argument slot requires logical axioms about the nature of various dependents  . This not only requires extra reduction steps to arrive at the desired logical form  , but could also lead to problems depending on the underlying theory of roles  . 
We present an alternative approach to binding dependents  , which overcomes these problems without a bandoning the linguistic motivation  . Because we work in a lexicalist setting , we can compile the effects of the linguistic linking theory directly into category assignments  . 
The first difference in our proposal is that arguments express only their own nominal  , not the nominal of a head as well . For example , proper nouns receive categories such as (18) . 
(18) Ed`n:@d1Ed
This entry highlights our relaxation of the strict connection between syntactic and semantic types traditionally assumed in categorial grammars  , a move in line with the MRS approach . 
In contrast with DGL , the semantic portion of a syntactic argument in our system does not declare the role it is to take and does not identify the head it is to be part of  . Instead it identifies only its own referent . Without using additional inference steps , this is transmuted via unification into a form similar to DGL?s in the result category  .   ( 19 ) is an example of the kind of head category needed . 
(19 ) sleeps ` s :@ h2 ( sleep^hACTi ( i^p ) )nn : @ ip To derive Ed sleeps ,   ( 18 ) and ( 19 ) combine via backward application to produce ( 20 )  , the same term as that built in DGL using one step instead of several  . 
(20)@h2(sleep ^ hACTi(d1^Ed))
To produce HLDS terms that are fully compatible with the way that Kruijff and Kruijff-Korbayova ?   ( 2001 ) model discourse , we need to mark the informativity of dependents as contextually bound  ( CB ) and contextually nonbound ( NB )  . In DGL , these appear as modalities in logical forms that are used to create a topic-focus articulation that is merged with the discourse context  . For example , the sentence he wrote a book would receive the following  ( simplified ) interpretation : ( 21 ) @ h1 ( [ NB ] write ^[ NB]h PATi ( d5^ book ) ^[ CB]h ACTi ( d6^hXSi ( d3^male ) ) ) DGL uses feature-resolving unary modalities ( Moortgat , 1997) to instantiate the values of informativity . In unification-based approaches such as CCG , the transferal of feature information into semantic representations is standard practice  . We thus employ the feature in fandmark informativity in logical forms with values resolved syntactically  . 
(22 ) Ed`ninf=CB:@d1Ed ( 23 ) sleeps ` s :@ h2 ( [ NB ] sleep ^ [ q]h ACTi ( i^p ) )nninf=q:@ip Combining these entries using backward application gives the following result for Ed sleeps :  ( 24 ) s :@ h2 ( [ NB ] sleep ^ [ CB]h ACTi ( d1^Ed ) ) A major benefit of having nominals in our representations comes with adjuncts  . With HLDS , we consider the prepositional verbal modifier in the sentence Ed sleeps in the bed as an optional Locative dependent of sleeps  . To implement this , we follow DGL in identifying the discourse referent of the head with that of the adjunct  . However , unlike DGL , this is compiled into the category for the adjunct  . 
(25 ) in ` ( s :@ i ( p^[r]h LOCi ( j^q ) )ns:@ip ) = n inf = r:@jq To derive the sentence Ed sleeps in the bed  ( see Figure 1 )  , we then need the following further entries : ( 26 ) the ` n in f = CB : p = n in f = NB : p ( 27 ) bed`n in f = NB :@ d3 bed This approach thus allows adjuncts to insert their semantic import into the meaning of the head  , making use of nominals in a manner similar to the use of indexes in Unification Categorial Grammar  . 
5 Intonation and Information Structure
Information Structure ( IS ) in English is in part determined by intonation . For example , given the question in (28) , an appropriate response would be (29) . 2 (28) I know what EdREAD . But what did Ed
WRITE ? (29) ( EdWROTE ) ( ABOOK).
L+H*LH % H*LL %
Steedman ( 2000a ) incorporates intonation into CCG syntactic analyses to determine the contribution of different constituents to IS  . Steedman calls segments such as Ed wrote of ( 29 ) the theme of the sentence , and a book the rheme . The former indicates the part of the utterance that connects it with the preceding discourse  , whereas the latter provides information that moves the discourse forward  . 
In the context of Discourse Representation Theory , Kruijff-Korbayova ? ( 1998 ) represents IS by splitting DRT structures into a topic/focus articulation of the form TOPIC  . /FOCUS . We represent 2 Following Pierrehumbert?s notation , the intonational contour L+H* indicates a low -rising pitch accent  , H * a sharply-rising pitch accent , and both LH % and LL % are boundary tones . 
Ed sleeps ( =  ( 24 ) ) in the bed s : @ h2 ( [ NB ] sleep ^ [ CB]h ACTi ( d1^Ed ) ) s : @ i ( p^[r]h LOCi ( j^q ) )ns:@ip ) = n inf = r:@jq n inf = CB : s = n in f = NB : s ninf=NB:@d3 bed>ninf = CB:@ d3 bed>s:@i ( p^[CB]h  LOCi ( d3^bed ) )ns:@ip < s : @ h2 ( [ NB ] sleep ^ [ CB]h ACTi ( d1^Ed ) ^[ CB]h LO Ci ( d3^bed ) ) Figure 1: Derivation of Ed sleeps in the bed . 
this in HLDS as a term incorporating the . /operator . Equating topic and focus with Steedman?s theme and rheme  , we encode the interpretation of ( 29 ) as: ( 30 ) @ h7 ( [ CB ] write ^[ CB]h ACTi ( d1^Ed )   . /[ NB]h PATi ( d4^ book ) ) DGL builds such structures by using a rewriting system to produce terms with topic/focus articulation from the terms produced by the syntax  . 
Steed man uses the pitch accents to produce lexical entries with values for the INFORMATION feature  , which we call here sinf . L+H * and H * set the value of this feature as ? ( for theme ) or ? ( for rheme )  , respectively . He also employs categories for the boundary tones that carry blocking values for s inf which stop incomplete intonational phrases from combining with others  , thereby avoiding derivations for utterances with nonsensical intonation contours  . 
Our approach is to incorporate the syntactic aspects of Steedman?s analysis with DGL?s rewriting system for using informativity to partition sentential meaning  . In addition to using the syntactic features in f , we allow intonation marking to instantiate the values of the semantic informativity feature inf  . 
Thus , we have the following sort of entry : ( 31 ) WROTE ( L+H * ) ` ssinf = ? : ? n n in f = w ; sinf=?:@ip=ninf=x ; sinf = ?:@ jq ? =@ h2 ( [CB]write^[w]hACTi ( i^p ) ^[ x]h PATi ( j^q ) ) We therefore straightforwardly reap the syntactic benefits of Steedman?s intonation analysis  , while IS itself is determined via DGL?s logical form rewriting system operating on the modal indications of informativity produced during the derivation  . The articulation of IS can thus be performed uniformly across languages  , which use a variety of strategies including intonation  , morphology , and word order variation to mark the informativity of different elements  . The resulting logical form plugs directly into DGL?s architecture for incorporating sentence meaning with the discourse  . 
6 Conclusions and Future Work
Since it is couched in hybrid logic , HLDS is ideally suited to be logically engineered to the task at hand  . Hybrid logic can be made to do exactly what we want  , answering to the linguistic intuitions we want to formalize without yielding its core assets ? a rich propositional ontology  , decidability , and favorable computational complexity . 
Various aspects of meaning , like dependency relations , contextual reference , tense and aspect , and information structure can be perspicuously encoded with HLDS  , and the resulting representations can be built compositionally using CCG  . CCG has close affinities with dependency grammar , and it provides a competitive and explanatorily adequate basis for a variety of phenomena ranging from coordination and unbounded dependencies to information structure  . Nonetheless , the approach we describe could in principle be fit into other unification-based frameworks like Head-Driven Phrase Structure Grammar  . 
Hybrid logic?s utility does not stop with sentential meaning  . It can also be used to model discourse interpretation and is closely related to logics for knowledge representation  . This way we can cover the track from grammar to discourse with a single meaning formalism  . We do not need to translate or make simplifying assumptions for different processing modules to communicate  , and we can freely include and use information across different levels of meaning  . 
We have implemented a ( preliminary ) Java package for creating and manipulating hybrid logic terms and connected it to Grok  , a CCG parsing system . 3 The use of HLDS has made it possible to improve 3The software is available at http://opennlp . sf . net and http://grok . sf . net under an open source license . 
the representation of the lexicon . Hybrid logic nominals provide a convenient and intuitive manner of localizing parts of a semantic structure  , which has made it possible to greatly simplify the use of inheritance in the lexicon  . Logical forms are created as an accumulation of different levels in the hierarchy including morphological information  . This is particularly important since the system does not otherwise support typed feature structures with inheritance  . 
Hybrid logics provide a perspicuous logical language for representing structures in temporal logic  , description logic , AVMs , and indeed any relational structure . Terms of HLDS can thus bemars halled into terms of these other representations with the potential of taking advantage of tools developed for them or providing input to modules expecting them  . 
In future work , we intend to combine techniques for building wide -coverage statistical parsers for CCG  ( Hockenmaier and Steedman , 2002; Clark et al . , 2002 ) with corpora that have explicitly marked semantic dependency relations  ( such as the Prague Dependency Treebank and NEGRA ) to produce
HLDS terms as the parse output.

We would like to thank Patrick Blackburn , Johan Bos , Nissim Francez , Alex Lascarides , Mark Steedman , Bonnie Webber and the ACL reviewers for helpful comments on earlier versions of this paper  . All errors are , of course , our own . Jason Baldridge?s work is supported in part by Overseas Research Student Award  ORS/98014014  . Geert-Jan Kruijff?s work is supported by the DFG Sonderforschungsbereich  378 Resource-Sensitive Cognitive Processes , Project NEGRAEM 6 . 

Natasha Alechina .  1995 . Modal Quantifiers . Ph . D . thesis , University of Amsterdam , Amsterdam , The Netherlands . 
Carlos Areces , Patrick Blackburn , and Maarten Marx .  1999 . A roadmap on complexity for hybrid logics . In J . Flum and M . Rodr??guez-Artalejo , editors , Computer Science Logic , number 1683 in Lecture Notes in Computer Science , pages 307?321 . Springer-Verlag . 
Carlos Areces .  2000 . Logic Engineering . The Case of Description and Hybrid Logics . Ph . D . thesis , University of Amsterdam , Amsterdam , The Netherlands . 
Patrick Blackburn and Alex Lascarides .  1992 . Sorts and operators for temporal semantics . In Proc . of the Fourth Symposium on Logic and Language , Budapest , Hungary . 
Patrick Blackburn .  1994 . Tense , temporal reference and tense logic . Journal of Semantics , 11:83?101 . 
Patrick Blackburn .  2000 . Representation , reasoning , and relational structures : a hybrid logic manifes to  . Logic Journal of the IGPL , 8(3):339?625 . 
Stephen Clark , Julia Hockenmaier , and Mark Steedman .  2002 . 
Building deep dependency structures using a wide -coverage CCG parser  . In Proc . of the 40th Annual Meeting of the Association of Computational Linguistics  , Philadelphia , PA . 
Ann Copestake , Dan Flickinger , Ivan Sag , and Carl Pollard . 
1999 . Minimal recursion semantics : An introduction . ms , www-csli . stanford . edu/?aac/newmrs . ps . 
Ann Copestake , Alex Lascarides , and Dan Flickinger .  2001 . 
An algebra for semantic construction in constraint -based grammars  . In Proc . of the 39th Annual Meeting of the Association of Computational Linguistics  , pages 132?139 , 
Toulouse , France.
Julia Hockenmaier and Mark Steedman .  2002 . Generative models for statistical parsing with combinatory categorial grammar  . In Proc . of the 40th Annual Meeting of the Association of Computational Linguistics  , Philadelphia , PA . 
Geert-Jan M . Kruijff and Ivana Kruijff-Korbayova ? .  2001 . A hybrid logic formalization of information structure sensitive discourse interpretation  . In Proc . of the Fourth Workshop on Text , Speech and Dialogue , volume 2166 of LNCS/LNAI , pages 31?38 . Springer-Verlag . 
Ivana Kruijff-Korbayova ? .  1998 . The Dynamic Potential of Topic and Focus : A Praguian Approach to Discourse Representation Theory  . Ph . D . thesis , Charles University , Prague,
Czech Republic.
Geert-Jan M . Kruijff .  2001 . A Categorial Modal Architecture of Informativity : Dependency Grammar Logic & Information Structure  . Ph . D . thesis , Charles University , Prague,
Czech Republic.
Marc Moens and Mark Steedman .  1988 . Temporal ontology and temporal reference . Computational Linguistics , 14:15?28 . 
Michael Moortgat .  1997 . Categorial type logics . In Johan van Benthem and Aliceter Meulen , editors , Handbook of Logic and Language . Elsevier Science B . V . 
Glyn V . Morrill .  1994 . Type Logical Grammar : Categorial Logic of Signs . Kluwer Academic Publishers , Dordrecht,
Boston , London.
Mark Steedman . 2000a . Information structure and the syntax-phonology interface  . Linguistic Inquiry , 34:649?689 . 
Mark Steedman . 2000b . The Syntactic Process . The MIT
Press , Cambridge Mass.
Henk Zeevat .  1988 . Combining categorial grammar and unification . In Uwe Reyle and Christian Rohrer , editors , Natural Language Parsing and Linguistic Theories , pages 202?229 . 
Reidel , Dordrecht.
