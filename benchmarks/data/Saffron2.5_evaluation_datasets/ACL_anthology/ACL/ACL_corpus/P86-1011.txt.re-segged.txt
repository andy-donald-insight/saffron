D . J . Weir K . Vijay-Shanker A.K . Joshi
Department of Computer and Information Science
University of Pennsylvania
Philadelphia , PA 19104
Abstract

We examine the relationship between the two grammatical formalisms : Tree Adjoining Grammars and Head Grammars  . We briefly investigate the weak equivalence of the two formalisms  . We then turn to a discussion comparing the linguistic expressiveness of the two formalisms  . 
1 Introduction
Recent work \[9 , 3\] has revealed a very close formal relationship between the grammatical formalisms of Tree Adjoining Grammars  ( TAG's ) and Head Grammars ( HG's )  . 
In this paper we examine whether they have the same power of linguistic description  . TAG's were first introduced in 1975 by Joshi , Levy and Takahashi\[1\] and investigated further in \[2  , 4 , 8\] . HG's were first introduced by Pollard\[5\] . TAG's and HG's were introduced to capture certain structural properties of natural languages  . These formalisms were developed independently and are not a-tionally quite different  . TAG's deal with a set of elementary trees composed by means of an operation called ad-join ing  . HG's maintain the essential character of contextfree string rewriting rules  , except for the fact that besides concatenation of strings  , string wrapping operations are permitted . Observations of similarities between properties of the two formalisms led us to study the formal relationship between these two formalisms and the results of this investigation are presented in detail in  \[9  , 3\] . We will briefly describe the formal relationship established in  \[9  , 3\] , showing TAG's to be equivalent to a variant of HG ' s  . We argue that the relationship between HG's and this variant of HG's called Modified Head Grammars  ( MHG's ) is very close . 
Having discussed the question of the weak equivalence of TAG's and HG's  , we explore , in Sections 4 and 5 , what might be loosely described as their strong equivalence  . Section 4 discusses consequences of the substantial notational differences between the two formalisms  . In Section 5 , with the use of several examples of analyses ( that cannot betThis work was partially supported by the NSF grants  MCS-82-19116-CER   , MCS-82-07294 and DCR-84-10413 . 
We are grateful to Tony Kroch and Carl Pollard , both of whom have made valuable contributions to this work  . 
given by CFG's ) , we attemp to give cases in which they have the ability to make similar analyses as well as situations in which they differ in their descriptive power  . 
1.1 Definitions
In this section , we shall briefly define the three formalisms :
TAG's , HG's , and MHG's.
1.1.1 Tree Adjoining Grammars
Tree Adjoining Grammars differs from string rewriting systems such as ContextFree Grammars in that they generate trees  . These trees are generated from a finite set of socalled elementary trees using the operation of tree adjunction  . There are two types of elementary trees : in it ial and auxiliary  . Linguistically , initial trees correspond to phrase structure trees for basic sentential forms  , whereas auxiliary trees correspond to modifying structures  . 
The nodes in the frontier of elementary trees are labelled by terminal symbols except for one node in the frontier of each auxiliary tree  , the foot node , which is labelled by the same nonterminal symbol as the root  . Since initial trees are sentential , their root is always labelled by the nonterminal S  . 
We now describe the adjoining operation . Suppose we adjoin an auxiliary tree ~ into a sentential tree  7  . The label of the node at which the adjoining operation takes place must be the same as the label of the root  ( and foot ) of ~ . The subtree under this node is excised from 7 , the auxiliary tree ~ is inserted in its place and the excised subtree replaces the foot of  8- Thus the tree obtained after adjoining j3 is as shown below . 
5/3: xsv?I
The Relationship Between Tree Adjoining Grammars And Head Grammarst The definition of adjunction allows for more complex constraints to be placed on adjoining  . Associated with each node is a selective adjo ining  ( SA ) constraint specifying that subset of the auxiliary tree which can be adjoined at this node  . If the SA constraint specifies an empty subset of trees  , then we call this constraint the Null Ad-join ing  ( NA ) constraint , ff the SA constraint specifies the entire set of auxiliary tree whose root is labelled with the appropriate nonterminal  , then by convention we will not specify the SA constraint  . We also allow obligatory adjolning ( OA ) constraints at nodes , to ensure that an adjunction is obligatorily performed at these nodes  . When we adjoin an auxiliary tree f ~ in a tree ~ those nodes in the resulting tree that do not correspond to nodes of f l  , retain those constraints appearing in "1 . The remaining nodes have the same constraints as those for the corresponding nodes of ft  . 
1.1.2 Head Grammars
Head Grammars are string rewriting systems like CFG's  , but differ in that each string has a distinguished symbol corresponding to the head of the string  . These are therefore called headed strings . The formalism allows not only concatenation of headed strings but also socalled head wrapping operations which split a string on one side of the head and place another string between the two substrings  . We use one of two notations to denote headed strings : when we wish to explicitly mention the head we use the representation w~-Sw ~  ; alternatively , we simply denote a headed string by ~ . Productions in a HG are of the form A-*f(al .   .   .   .   . a , ) or A ~ ax where : A is a nonterminal ; a ~ is either a nonterminal or a headed string ; and f is either a concatenation or a head wrapping operation  . 
R oach\[6\] has shown that there is a normal form for Head Grammars which uses only the following operations  . 
LCl(ul-d71 u2, vx-d-~2 v2)
LC2 ( Ul"d~lu2, ~1~-2?.)2)
LLl(ul'd-\[u2, u1~22~2)
LL2(uxh'71u2,vlh-~2v2)
LR1 ( ul-d71 u2, vx-d-iv2)
LR2(ux~'lu2 , vx'4-~v2) = tt1~1"1t/2t ~ la2U2:~1~1~/ , 2 ~) 1 ~) 2: ttl ~ llU1 a2 u2 u 2:tt 10 , 1 u1~22~)2 u2:t tll ) la2U2 ~ lU , 2: Ul ~) 1~2t 12 QI ~/ ,  2 1 . 1 . 3 Mod i f ied Head Grammars Pollard's definition of headed strings includes the headed empty string  ( ~ )  . However the term fi(~-~, . . .  ,~-~, . . . , W--~n ) is undefined when ~-~= ~ . This nonuniformity has led to difficulties in proving certain formal properties of  HG's\[6\]  . 
MHG's were considered to overcome these problems . Later in this paper we shall argue that MHG's are not only close to HG's formally  , but also that they can be given a linguistic interpretation which retains the essential characteristics of HG's  . It is worth noting that the definition of MHG's given here coincides with the definition of HG's given in Instead of headed strings  , MHG's use so called split strings . Unlike a headed string which has a distinguished symbol  , a split string has a distinguished position about which it may be split  . In MHG's , there are 3 operations on split strings : W , C1 , and C2 . The operations C1 and C2 correspond to the operations LC1 and LC2 in HG's . 
They are defined as follows:
CI(toITW2,UlTU2) = t01TW2UlU2
C2(WlTW2,u1Tu2): t /) 2 UlTU2
Since the split point is not a symbol ( which can be split either to its left or right ) but a position between strings , separate left and right wrapping operations are not needed  . 
The wrapping operation , W , in MHG is defined as follows:
W ( UAll-W2, Ul~'U2) = t/\]lUlTU2W2
We could have defined two operations W1 and W2 as in HG . But since W1 can very easily be simulated with other operations  , we require only W2 , renamed simply W . 
2MHG's and TAG's
In this section , we discuss the weak equivalence of TAG's and MHG ' s  . We will first consider the relationship between the wrapping operation W of MHG's and the adjoining operation of TAG's  . 
2.1 Wrapping and Adjoining
The weak equivalence of MHG's and TAG's is a consequence of the similarities between the operations of wrapping and adjoining  . It is the roles played by the split point and the foot node that underlies this relationship  . When a tree is used for adjunction , its foot node determines where the excised subtree is reinserted  . The strings in the frontier to the left and right of the foot node appear on the left and right of the frontier of the excised subtree  . As shown in the figure below , the foot node can be thought of as a position in the frontier of a tree  , determining how the string in the frontier is split  . 
~? o~v,~vz ~' oot around the split string v , tv2 . Thus , the split point and the foot node perform the same role  . The proofs showing the equivalence of TAG's and MHG's is based on this correspondence  . 
2.2 Inclusion of TAL in MHL
We shall now briefly present a scheme for transforming a given TAG to an equivalent MHG  . We associate with each auxiliary tree a set of production such that each tree generated from this elementary tree with frontier  wiXw2 has . 
an associate derivation in the MHG , using these productions , of the split string W lTW2 . The use of this tree for adjunction at some node labelled X can be mimicked with a single additonal production which uses the wrapping operation  . 
For each elementary tre ~ we return a sequence of productions capturing the structure of the tree in the following way  . We use nonterminals that are named by the nodes of elementary trees rather than the labels of the nodes  . For each node ~/ in an elementary tree , we have two nonterminal X . and I " . : X . derives the strings appearing on the frontier of trees derived from the subtree rooted at r/  ; Y , derives the concatenation f the strings derived under each daughter of  7  . If ~/ has daughters rh, .   .   . , ~ k then we have the production:
Y , --, Ci(X . ~,  .   .   . , X . J where the node T/i dominates the foot node ( by convention , we let i = 1 if r / does not dominate the foot node )  . Adjunction at ~/ , is simulated by use of the following production :
X . - ~ W ( X ~ , r . ) where # is the root of some auxiliary tree which can be adjoined at ~/  . If adjunction is optional aty/then we include the production : 
X , -~ Y , .
Notice that when T/has an NA or OA constraint we omit the second or third of the above productions  , respectively . 
Rather than present the full details ( which can be found in \[9 , 3\] ) we illustrate the construction with an example showing a single auxiliary tree and the corresponding MHG productions  . 

X r/l~Y ~ I)
Y , ~~ c2(~, x .,),
X .,-~ W ( X ~ , , , Y ..), x , .--. w(x ~, r , .).
x , .--. Y , ..
r ,,--, c2(b , x ., ~) x ., -~ Y . .
Y . . -, A where #1, .   .   .   ,  #  , are the roots of the auxiliary trees adjoin-able at ~ =  . 
2.3 Inclusion of MHL in TAL
In this construction we use elementary trees to directly simulate the use of productions in MHG to rewrite nonterminals  . Generation of a derivation tree in string -rewriting systems involves the substitution of nonterminal nodes  , appearing in the frontier of the unfinished erivation tree  , by trees corresponding to productions for that no n terminal  . 
From the point of view of the string languages obtained  , tree adjunction can be used to simulate substitution  , as illustrated in the following example . 

Notice that although the node where adjoining occurs does ' not appear in the frontier of the tree  , the presence of the node labelled by the empty string does not effect the string language  . 
For each production in the MHG we have an auxiliary tree  . A production in an MHG can use one of the three operations :  C1  , C2 , and W . Correspondingly we have three types of trees , shown below . 

A~fA#5~C~I6~Co ~
II coAIIi ~ , A  #constraints at each root have the effect of ensuring that a nonterminal is rewritten only once  ; NA constraints at the foot node ensures that , like the nodes labelled by A , they do not contribute to the strings derived ; OA constraints are used to ensure that every nonterminal introduced is rewritten at least once  . 
The two trees mimicking the concatenation operations differ only in the position of their foot node  . This node is positioned in order to satisfy the following requirement : for every derivation in the MHG there must be a derived tree in the TAG for the same string  , in which the foot is positioned at the split point  . 
The tree associated with the wrapping operation is quite different  . The foot node appears below the two nodes to be expanded because the wrapping operation of MHG's corresponds to the  LL2 operation of HG's in which the head ( split point ) of the second argument becomes the new head ( split point )  . Placement of the nonterminal , which is to be wrapped , above the other nonterminal achieves the desired effect as described earlier  . 
While straightforward , this construction does not capture the linguistic motivation underlying TAG's  . The auxiliary trees directly reflect the use of the concatenation and the wrapping operations  . As we discuss in more detail in Section 4 , elementary trees for natural anguages TAG's are constrained to capture meaningful linguistic structures  . 
In the TAG's generated in the above construction , the elementary trees are incomplete in this respect : as reflected by the extensive use of the OA constraints  . Since HG's and MHG's do not explicitly give minimalinguistic structures  , it is not surprising that such a direct mapping from MHG's to TAG's does not recover this information  . 
3HG's and MHG's
In this section , we will discuss the relationship between HG's and MHG's  . First , we outline a construction showing that HL's are included in MHL's  . Problems arise in showing the inclusion in the other direction because of the nonuniform way in which HG's treat the empty headed string  . In the final part of this section , we argue that MHG's can be given a meaningful linguistic interpretation  , and may be considered essentially the same as HG 's  . 
3.1 HL's and MHL's
The inclusion of HL's in MHL's can be shown by constructing for every HG  , G , an equivalent MHG , G ' . We now present a short description of how this construction proceeds  . 
Suppose a nonterminal X derives the headed string wlhw2  . Depending on whether the left or right wrapping operation is used  , this headed string can be split on either side of the head  . In fact , a headed string can be split first to the right of its head and then the resulting string can be split to the left of the same head  . Since in MHG's we can only split a string in one place  , we introduce nonterminals X~h , that derive split strings of the form wi~w2 whenever X derives wl-hw2 in the HG . The missing head can be reintroduced with the following productions : x'-~w  ( x ' ~ , hT ) and X"-~W(X'~ , , h ) Thus , the two nonterminals , X t and X r derive W l h T W 2 and wlThw2 respectively . Complete details of this proof are given in \[3\] . 
We are unable to give a general proof showing the in-clnsion of MHL's in HL's  . Although Pollard\[5\] allows the use of the empty headed string , mathematically , it does not have the same status as other headed strings  . For exam-pie , LCI(~,E ) is undefined . Although we have not found anyway of getting around this in a systematic manner  , we feel that the problem of the empty headed string in the HG formalism does not result from an important difference between the formalisms  . 
For any particular natural language , Head Grammars for that language appear to use either only the left wrapping operations LLi  , or only the right wrapping operations LRi . Based on this observation , we suggest hat for any HG for a natural anguage , there will be a corresponding MHG which can be given a linguistic interpretation  . Since headed strings will always be split on the same side of the head  , we can think of the split point in a split string as determining the head position  . For example , split strings generated by a MHG for a natural anguage that uses only the left wrapping operations have their split points immediately to the right of the actual head  . Thus a split point in a phrase not only defines where the phrase can be split  , but also the head of the string . 
4 Notational Differences between
TAG's and HG's
TAG's and HG's are notationally very different , and this has a number of consequences that influence the way in which the formalisms can be used to express various aspects of language structure  . The principal differences derive from the fact that TAG's are a tree-rewriting system unlike HG 's which manipulate strings  . 
The elementary trees in a TAG , in order to be linguistically meaningful , must conform to certain constraints that are not explicitly specified in the definition of the formal-aminimal linguistic structure  . Initial trees have essentially the structure of simple sentences  ; auxiliary trees correspond to minimal recursive constructions and generally constitute structures that act as modifiers of the category appearing at their root and foot nodes  . 
A hypothesis that underlies the linguistic intuitions of TAG's is that all dependencies are captured within elementary trees  . This is based on the assumption that elementary trees are the appropriate domain upon which to define dependencies  , rather than , for example , productions in a Context-free Grammar . Since in string-rewriting systems , dependent lexical items cannot always appear in the same production  , the formalism does not preven the possibility that it may be necessary to perform an unbounded amount of computation in order to check that two dependent lexical items agree in certain features  . However , since in TAG's dependencies are captured by bounded structures  , we expect that the complexity of this computation does not depend on the derivation  . Feature such as agreement may be checked within the elementary trees  ( instantiated up to lexical items ) without need to percolate information up the derivation tree in an unbounded way  . Some checking is necessary between an elementary tree and an auxiliary tree adjoined to it at some node  , but this checking is still local and unbounded . Similarly , elementary trees , being minimalinguistic structures , should capture all of the subcategorization information  , simplifying the processing required during parsing  . Further work ( especially empirical ) is necessary to confirm the above hypothesis before we can conclude that elementary trees can in fact capture all the necessary information or whether we must draw upon more complex machinery  . These issues will be discussed in detail in a later paper  . 
Another important feature of TAG's that differentiates them from HG's is that TAG's generate phrase-structure trees  . As a result , the elementary trees must conform to certain constraint such as left-to-right ordering and linguistically meaningful dominance relations  . Unlike other string-rewriting systems that use only the operation of concatenation  , HG's do not associate a phrase-structure tree with a derivation : wrapping  , unlike concatenation , does not preserve the word order of its arguments  . In the Section 5 , we will present an example illustrating the importance of this difference between the two formalisms  . 
It is still possible to associate a phrase -structure with a derivation in HG's that indicates the constituents and we use this structure when comparing the analyses made by the two systems  . These trees are not really phrase-structure trees but rather trees with annotations which indicate how the constituents will be wrapped  ( or concatenated )  . It is thus a derivation structure , recording the history of the derivation . With an example we now illustrate how a constituent analysis is produced by a derivation in a HG  . 
NP l

VP gl~l/\
VSL (:::, ~
I/\~o ~ NP VP
I i
IvV1 i5 Towards " Strong " equivalence
In Section 2 we considered the weak equivalence of the two formalisms  . In this section , we will consider three examples in order to compare the linguistic analyses that can be given by the two formalisms  . We begin with an example ( Example 1 ) which illustrates that the construction given in Section  2 for converting a TAG into an MHG gives similar structures  . We then consider an example ( Example 2 ) which demonstrates that the construction does not always preserve the structure  . However , there is an alternate way of viewing the relationship between wrapping and adjoining  , which , for the same example , does preserve the structure . 
Although the usual notion of strong equivalence ( i . e . , equivalence under identity of structural descriptions  ) cannot be used in comparing TAG and HG ( as we have already indicated in Section 4 )  , we will describe informally what the notion of " strong " equivalence should be in this case  . 
We then illustrate by means of an example ( Example 3 )  , how the two systems differ in this respect . 
5.1 Example 1
P ollard\[5\] has suggested that HG can be used to provide an appropriate analysis for easy problems to solve  . He does not provide a detailed analysis but it is roughly as follows  . 
NP LL2
JAP NP/\I riving easy to solve cannot obtain easy to solve and problems as intermediate phrases  . The appropriate le-mentary tree for a TAG giving the same analysis would be :/ 

APICP5
I\'t , osol ~ H

Note that the phrase easy to solve wraps around problems by splitting about the head and the foot node in both the grammars  . Since the conversion of this TAG would result in the HG given above  , this example shows that the construction captures the correct correspondence bt ween the two formalisms  . 
5.2 Example 2
We now present an example demonstrating that the construction does not always preserve the details of the linguistic analysis  . This example concerns cross-serial dependencies , for example , dependencies between NP's and V's in subordinate clauses in Dutch  ( cited frequently as an example of a non-context -free construction  )  . For example , the Dutch equivalent of John saw Marys wimis John Mary saws wim  . Although these dependencies can involve an arbitrary number of verbs  , for our purposes it is sufficient o consider this simple case  . The elementary trees used in a TAG , GTA a , generating this sentence are given below . 

VP5 VP/5\I/\I
IVP VP , VHP V'P Vii/I . I/\I
NV . --", ~ u , ~ n , saw
The HG given in \[5\] ( GHa ) assigns the following derivation structure ( an annotated phrase-structure cording the history of the derivation  ) for this sentence . 




S/~-C2 ~ VP ~ al/\
V3 ~ c2
I/\ saw NP VP
II
NV
I i
If we use the construction in Section 2 on the elementary trees for the TAG shown above , we would generate an HG , G  ~ a , that produces the following analysis of this sentence  . 
/?\ I
NP ? X ~ czV
II
HNP VP~o~ki,jNv . II
This does not give the same analysis as G~za : both G~a and GrA a give intermediate structures in which the predicate help  ( Maryswim ) is formed . This then combines with the noun phrase John giving the resulting sentence  . In the HGG ~ a John is first combined with Mary swim : this is not an acceptable linguistic structure  . G ~ a corresponds in this sense to the following unacceptable TAG  , GITAG . 
/3 ~/ S\
NP vP NP VP
W , 6'/H,SV\
I :/\ , '1 It/\~ , " NP VP\[e , f , l , ~\ ~' rvPe . ~ ~ a~jb " J/\,I . , ? S V ' 1 f 5W ~ , ~a WTAG to the unacceptable HG ; hut it can also be shown that the unacceptable TAG is converted into the acceptable HG  . This suggests that our construction does not always preserve linguistic analyses  . This arises because the use of wrapping operation does not correspond to the way in which the foot nodes plits the auxiliary tree in this case  . 
However , there is an alternate way of viewing the manner in which wrapping and adjoining can be related  . Consider the following tree . 
IIIIIT ' X ~ , : , , : : ./\\ u.,
Instead of wrapping W l W 2 around Ul and then concatenating us ; while deriving the string wxulw2u2 we could derive the string by wrapping UlU2 around w2 and then concatenating wl . This cannot be done in the general case ( for example , when the stringuis nonempty ) . 
The two grammars GHa and GTA a can be related in this manner since GTAG satisfies the required conditions  . 
This approach may be interpreted as combining the phrase  ulu2 with w ~ to form the phrase UlW2U  ~ . Relating the above tree to Example 2 , ux and us correspond to Mary and swim respectively and  w2 corresponds to saw . Thus , Mary swim wraps around saw to produce the verb phrase Mary saws wimas in the TAGGTAC and the HGGHG  . 
As the previous two examples illustrate , there are two ways of drawing a correspondence b tween wrapping and adjoining  , both of which can be applicable . However , only one of them is general enough to cover all situations  , and is the one used in Sections 2 and 3 in discussing the weak equivalence . 
5.3 Example 3
The normal notion of strong equivalence cannot be used to discuss the relationship between the two formalisms  , since HG's do not generate the standard phrase structure trees  ( from the derivation structure )  . However , it is possible to relate the analyses given by the two systems  . This can be done in terms of the intermediate constituent structures  . 
So far , in Examples 1and   2 considered above we showed that the same analyses can be given in both the formalisms  . 
We now present an example suggesting that this is not always the case  . There are certain constraints placed on elementary trees : that they use meaningful elementary trees corresponding to minimal linguistic structures  ( for example , the verb and all its complements , including the subject complement are in the same elementary tree  )  ; and that the final tree must be a phrase -structure tre  . As a result , TAG's cannot give certain analyses which the HG 's can provide  , as evidenced in the following example . 
The example we use concerns analyses of John persuaded Bill to leau  ,  . We will discuss two analyses both of which have been proposed in the literature and have been independently justified  . First , we present an analysis that can be expressed in both formalisms  . The TAG has the following two elementary trees . 
$ JiS \
AlPvPh/I~VP
JI/\
VNP5 fro
IIJ
Jol , , , f ~ ' ~ N
Ib ' ~
The derivation structure corresponding to this analysis that HG's can give is as follows  . 
5 LC2
A/P VP~_ct
NV AlP 5
However ,   Pollard\[5\] gives another analysis which has the following derivation structure  . 


NP VP z.l-I
IJ\
NVPL clt,/P1/\I\[o hag5fl
I/\I
In this analysis the predicate persuade to leave is formed as an intermediate phrase  . Wrapping is then used to derive the phrase persuade Bill to leave  . To provide such an analysis with TAG's , the phrase per suade to leave must appear in the same elementary tree  . Bill must either appear in an another elementary tree or must be above the phrase persuade to leave if it appears in the same elementary tree  ( so that the phrase per suade to leave is formed first  )  . It cannot appear above the phrase persuade to leave since then the word order will not be correct  . Alternatively , it cannot appear in a separate lementary tree since no matter which correspondence w make between wrapp ! ng and adjoining  , we cannot get a TAG which has meaningful elementary trees providing the same analysis  . Thus the only appropriate TAG for this example is as shown above  . 
The significance of this constrain that TAG's appear to have  ( illustrated by Example 3 ) cannot be assessed until a wider range of examples are evaluated from this point of view  . 
6 Conclusion
This paper focusses on the linguistic aspects of the relationship between Head Grammars and Tree Adjoining Grammars  . With the use of examples , we not only illustrate cases where the two formalisms make similar analyses  , but also discuss differences in their descriptive power  . 
Further empirical study is required before we can determine the significance of these differences  . We have also briefly studied the consequences of the notational differences between the formalisms  . A more detailed analysis of the linguistic and computationals pects of these differences is currently being pursued  . 
References\[1\]Joshi , A . K . , Levy , L . S . , and Takahashi , M . Tree Adjunct Grammars . Journal of Computer and System
Sciences 10(1), March , 1975.
\[2\] Joshi , A . K . How Much Context-Sensitivity is Neces-sary for Characterizing Structural descriptions-Tree Adjoining Grammars  . In D . Dowty , L . Karttunen and Zwicky , A . ( editors ) , Natural Language Processing - Theoretical , Computation alnd Psychological Perspective . Cambridge University Press , New York , 1985 . 
originally presented in 1983.
\[3\] Joshi , A . K . , Vijay-Shanker , K . , and Weir , D . J . Tree Adjoining Grammars and Head Grammars . Technical Report MS-CIS-86-1 , Department of Computer and Information Science , University of Pennsylvania , 
Philadelphia , January , 1986.
\[4\] Kroch , A . and Joshi , A . K . Linguistic Relevance of Tree Adjoining Grammars . Technical Report MS-CIS-85-18 , Department of Computer and Information Science , University of Pennsylvania , Philadelphia , April ,  1985 . 
also to appear in Linguistics and Philosophy ,  1986 . 
\[5\] Pollard , C . Generalized Phrase Structure Grammars , Head Grammars and Natural Language . PhD thesis,
Stanford University , August , 1984.
\[6\] Roach , K . Formal Properties of Head Grammars . 
1985 . Presented at Mathematics of Language workshop at the University of Michigan  , Ann Arbor . 
\[7\] Rounds , W . C . LFP : A Logic for Linguistic Descriptions and an Analysis of its Complexity  . September , 1985 . University of Michigan . 
\[8\] Vijay-Shanker , K . and Joshi , A . K . Some Computational Properties of Tree Adjoining Grammars  . In 23rd meeting of Assoc . of Computational Linguistics , pages 82-93 . July , 1985 . 
\[9\] Vijay-Shanker , K . , Weir , D . J . , and Joshi , A . K . Tree Adjoining and Head Wrapping . In 11 th International Conference on Computational Linguistics  . August , 1986 . 

