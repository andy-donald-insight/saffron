An Integrated Framework for Semantic and Pragmatic
Interpretation 1
Martha E . Pollack
Artificial Intelligence Center
SRI International
333 Ravenswood Ave
Menlo Park , CA 94025, USA
Fernando C . N . Pereira
Cambridge Computer Science Research Centre
SRI International
Suite 23, Millers Yard , Mill Lane
Cambridge CB2 1RQ , England

We report on a mechanism for semantic and pragmatic interpretation that has been designed to take advantage of the generally compositional nature of semantic analysis  , without unduly constraining the order in which pragmatic decisions are made  . To achieve this goal , we introduce the idea of a conditional interpretation : one that depends upon a set of assumptions about subsequent pragmatic processing  . Conditional interpretations are constructed compositionally according to a set of declaratively specified interpretation rules  . The mechanism can handle a wide range of pragmatic phenomena and their interactions  . 
1 Introduction
Compositional systems of semantic interpretation , while logically and computationally very attractive  \[6  , 20 , 26\] , seem unable to cope with the fact that the syntactic form of a autterance is not the only source of information about its meaning  . Contextual information -- information about the world and about the history of a discourse- -influences not only an utterance's meaning  , but even its preferred syntactic analysis\[3 , 5 , 7 , 16\] . Of course , context also influences the interpretation ( or meaning in context ) of the utterance , in which , for example , referring expressions have been resolved . 
One possible solution is to move to an integrated system of semantic and pragmatic interpretation  , defined recursively on syntactic analyses that are  1 This research as been funded by DARPA under Contract  N00039-84-C-0524  , and by a gift from the Systems Development Foundation as part of a coordinated research effort with the Center for the Study of Language and Information  , Stanford University . We would like to thank David Israel , F Lay Perrault , and Stuart Shieber for their helpful discussions regarding this work  . 
neutral about those decisions that depend upon context  . In this approach , a least-commitment grammar may be used to produce neutral representations that can be reconfigured later  . Such a grammar might , for example , leave quantifiers in place\[30\] , attach all prepositional phrases low and right \[22\]  , and bracke to the right all compound nominals .   2 These neutral analyses can then serve as input to a system that produces interpretations  ( and not meanings ) in a nearly compositional manner , in that the interpretation of a phrase a is a function of the interpretations of its syntactic on stituent sogether with its context of utterance  . 
This model of semantic interpretation assumes that contextual information is available whenever it is needed for deciding among alternative interpretations  . However , this is often not the case : questions about the interpretation of some constituent of an utterance might be answerable only when information about the interpretation of syn -tactically distant constituents becomes available  . 
Familiar examples of this can be found , for instance , in sentences with quantifier scoping ambiguities and in sentences that include intrasentential anaphora  . The socalled donkey sentences \[9\] exhibit both these phenomena . 
These difficulties do not necessitate a complete abandonment of compositionality  . To take advantage of the generally compositional nature of semantic analysis without constraining unduly the order in which pragmatic decisions are made  , we assign to phrases conditional interpretations ,   2Tllere are reasons to suspect hatult in mtely syntactic analysi should be incorporated into the same stage of processing as semantic and pragnuLtic analysis  ; in particular , it is difficult to develop syntactically neutral representations for certain constructions such as conjunction  . 
3 For simplicity , we shall use the term " phrase " to refer both to an entire utterance and to a constituent of an utterance  , distinguishing betwee althe two only when needed . 
7 5 which represent the dependence of a phrase's interpretation on assumptions about subsequent pragmatic processing  . Conditional interpretations are built compositionally according to declaratively specified interpretation rules  . 
The interpretation mechanism we discuss here has been implemented in Prolog as part of the Candide system  , a multimodal tool for knowledge acquisition . Incorporating both a graphical interface and a processor for English discourse  , Can-dide allows a user of the Procedural Reasoning System  ( PITS )   \[10\] to build and maintain procedural networks in a natural way  . Procedural networks , an essential part of PRS's knowledge base , encode the information about procedures that is used by PItS for reasoning about and performing tasks in any given domain  . The current version of Candide has been used to construct networks formal function procedures for NASA's space shuttle  . 
Further details of the Candide system will be presented elsewhere  \[24\]  . 
2 Conditional
Interpretations
In our approach to semantic and pragmatic interpretation  , conditional interpretations separate the context -independent aspects of an interpretation from those that are context-dependent  . Each conditional interpretation consists of a sense and a\[possibly empty\]set of assumptions  . As a first approximation , one might think of the sense of a phrase as representing purely semantic information  , that is , information that can be adduced solely from the linguistic ontent of the phrase  , no matter in which contex the phrase has been uttered  . The assumptions then represent constraints relating the phrase ' sense to its ultimate interpretation  . A complete interpretation has an empty assumption set  , indicating that all of its dependencies on context have been resolved  . 
The present version of the theory allows for two kinds of assumptions  . A bind assumption introduces a new parameter in an interpretation and places constraints on the binding of the parameter to individuals in the context  . A restrict assumption does not introduce a new parameter  , but instead further estricts the way in which an existing parameter can be bound  . 
These concepts are illustrated by the following conditional interpretation f the sentence " The jetfailed ":\[\[" The jt failed "\] =  ( fail ( z )  , bind(z , def , jet ) )  ( : ) The first element of the interpretation is the sense fail  ( z )  , while the second is the set of assumptions containing a single assumption whose informal reading is that z should be bound to something of the sort jet according to the constraints of definite reference  . 
3 The Interpretation Process
The process of semantic and pragmatic interpretation computes complete interpretations of sentences from least-commitment parse trees  . Two types of rules govern the interpretation process : semantic  . interpretation rules and pragmatic-discharge , rules . 
Semantic-interpretation rules specify the conditional interpretation of a phrase in terms of the conditional interpretations of its constituents  . 
Compositionality is enforced by making semantic -interpretation rules sensitive only to the syntactic types of a phrase and its constituents  , as well as to the types of assumptions in the conditional interpretations asociated with the constituents  ; semantic-interpretation rules are not sensitive to the senses of the constituents  . 
Pragmatic-discharge rules change the conditional interpretation faphrase by specifying how assumptions in the conditional interpretation may be eliminated with respect othe context of utterance  . For example , one discharge rule applies to assumptions constraining a parameter to be bound as a definite reference  . This rule allows an assumption of the form bind ( v , def , T ) to be discharged , provided that there is a unique contextually available entity of sort T  . The effect of applying the definite discharge rule to an interpretation  ( S , A ) is twofold : the bind assumption operated upon is removed from the set of assumptions A  ; the sense S is changed to reflect the binding . For instance , if the rule were applied to the interpretation i ( 1 )  , and if the context of utterance C contained a unique availablentity j of sort jet  , the resulting interpretation would be ~ fail(j ) , q ~) (2) As we shall see in the next section , assumption discharge will in general not only make use of but also change the discourse context  . Therefore , discharge rules should be viewed as four-place relations  . For example , the following would be an instance of the discharge  ( C , ( fail(z ) , bind(z , def , jet )) , (/ air(j ) ,  ~) , C ') , where C is the discourse context before the assumption is discharged  , while CI is the resulting discourse context . 
Semantic-interpretation rules are obligatory in that some semantic-interpretation rule associated with a given syntactic rule must be applied to any phrase analyzed by the syntactic rule  . In contrast , the application of pragmatic-discharge rules is optional  , although discharging a particular assumption too early or too late may lead to a deadend in the interpretation process  . Applying the same discharger uleat different points in the interpretation process for some utterance may lead to alternative interpretations  , as we shall illustrate with the examples in Sections  6 and 7  . 
Given a sentence and its syntactic analysis , the interpretation process applies semantic -interpretation and pragmatic-discharge rules  , according to their applicability conditions , to construct the derivation of a complete interpretation of the sentence  . In Candide , this process resembles a syntax-directed translation system  \[1\]  . Interpretation starts at the root node of the analysis tree  . For each node of the tree , the interpretation process selects an appropriate semantic-interpretation rule and calls itself recursively for each of the node's daughters  . Interpretations are constructed on return from the recursion  , and pragmatic-discharge rules are optionally applied in a discharge cycle that follows each application to a node of a semantic -interpretation rule  . 
Lexical ambiguity , multiple semantic-interpre-tation rules for a given syntactic onstruction  , optional application of discharge rules , and alternative ways of discharging a given assumption  . 
are all sources of nondeterrninism in the interpretation process  , which need to be somehow controlled . In Candide , we adopted four simple control tactics : overall depth-first search  , early discharge of assumptions , breadth-firstearch for alternative bindings of a discharged parameter  , and bounds on assumption percolation wherever it can be shown that an assumption would not be dis -chargeable outside a certain syntactic domain  . For lack of space , a fuller discussion of these heuristics will be conducted elsewhere  \[24\]  . 
4 The Discourse Context
Pragmatic-discharge rules need access to a discourse context haten codes information about relevant world knowledge and the discourse history  . 
Although our framework for semantic and pragmatic interpretation can accommodate alternative representations of the discourse context  , the specific discharge rules we have written and incorporated into the Candide system rely on a particular representation comprising four parts : immediate  con~ez4  , local contez ~ , global contezt , and a knowledge base . 
During the analysis of a sentence , the immediate context contains detailed information about the entities referred to in that sentence  ; it is used primarily for resolving intrasentential anaphora  . The local context generally contains detailed information about the immediately preceding sentence  ,   4 while the global context includes somewhat less detailed information about entities referred to throughout longer stretches of the discourse  . We use the local context primarily for pronoun resolution  , following the theory of centering introduced by Groszet  aL\[12\]  . The global context is employed primarily for the resolution of definite anaphora  , and is structured as a stack to make use of the theory of focusing  . Each element of the global-context stack is itself a list of entries containing information about the entities referred to in a discourse segment  \[13\]  . We refer to the top element of the global context as the intermediate contezt  . 
Individual discharge rules used in processing a sentence can extend the immediate context for that sentence  . For instance , the rule mentioned earlier that binds a parameter as a definite reference acids to their mnediate context an entry for the entity to which the parameter is bound  . When the assumption in (1) is discharged , resulting in the interpretation i(2) , an entry for j must be added to the immediate context  . The entry will include the sort of j ( jet ) and the surface position of that phrase in the sentence  ( subject )  . 
The discourse context must also be updated after each sentence has been processed  . In the simplest case , tile update will be quite straightforward , as illustrated in Figure 1: the current immediate context will become the new local context  , while a subset of the information encoded in the immediate context will be also added to the intermediate context  ( the topmost element of the global-contexts ack )  . The immediate context will 4This will not be true when a " pop " of the global context has just occurred  \[13\]  . 

Discourse context
Immediate context J
Local context J
Intermediate context
LCI . I~LCI J

DS~-,~LCH



Knowe 0 0eo IK 8Ii1
Figure 1: Updating the Discourse Context be cleared in preparation for the next sentence  . 
For the moment , we shall assume that the knowledge base is static  , although it will ultimately have to be reorganizable dynamically so as to reflect a language user's current perspective  . 
In fact , the update function can be rather more complex . For example , if the current utterance is recognized to be the start of a subordinate discourse segment  , a new , empty element can be pushed onto the global -context sack after the local context has been merged into the previous top element  . We shall discuss the discourse-context update function further elsewhere  \[24\]  . 
5 A Simple Discourse
The following simple discourse will provide our first illustration of the interpretation mechanism and  , in particular , the treatment of reference and coreference :
The jet failed . (3)
Close the manifold.
In the subsequent sections , we shall turn to more complex examples that provide further insight into the way in which pragmatic processes can interact with one another affecting syntactic and semantic decisions  . 
The three semantic-interpretation rules given in Figure  2 are needed in the example . Recall that the interpretation process is driven by semantic-interpretation rules  , which apply composition a Uy to phrases . Each such rule has three parts : an applicability condition  ( AC )  , a set of selection f~nc-tions(SF ) , and a cond flion ai-interpretation fuc . 
tion ( CIF ) . The applicability condition specifies the syntactic type of phrase to which the semantic interpretation rule applies  ; it is stated in terms of a predicate on trees .   5 The selection functions specify how to access the constituents of the phrase to which the rule is to heap plied  . Finally , the conditional-interpretation fuction defines the conditional interpretation of the phrase as a function of the conditional interpretations of its constituents  . A conditional-interpretation function will often depend separately on the sense and assumptions of a conditional interpretation I  , for which we use the notations Is and IA , respectively . 
Figure 3 shows an annotated tree represent-5The meanings of the predicates on trees used in this paper should be clear from their names  . 
e Our analysis trees are closer to the functionals truc  -1   ( f ai / ( a )  , bind(a , argl , device ) , restrict ( argl , fl ) 2 ( fail ( a) . bind(a , argl , device ) > ?
If ailed 3 ( b , bind(b , def , jet )) 4 the 5qet ,  0 ) iet Figure 3: Interpretation of " The jetfailed "\[ iv-c lause \]: 
AC : in trans-verb-clause ( T )
SF : pred(T ) = V , argl(T ) = A
CIF:IT\]=(~VIs , \[ VIAU\[A\]AU restrict(argl ,  = , \[ A\]s ))\[ defnp\]:
AC:def-np(T )
SF : argl(T ) = N
CIF:\[~I = ( z , \[ N\]AU bind(z , def , \[ N\]s ))\[ lex\]:
AC : lex-ltem(T )
SF : word stem(T ) = W
CIF:IT\]=Iw
Figure 2: Semantic-Interpretation Rules Iing the derivation of a complete interpretation of the first sentence in  ( 3 )  . Conditional interpretations of constituents of the complete sentence are shown above the root nodes of the corresponding subtrees  . 
Semantic-interpretation rule\[lex\]applies to lexical subtrees  ( Nodes 2 and 5 in Figure 3 ~ ) associ-tures of lexlcal-functional grammar \[4\] than to the usual surface constituent struc ture  . The sample analyses have been extrs mely simplified for expesitory reasons  ; terminal nodes , in particular , appear in the trees simply as the corresponding word  , but their actual representation , as required by interpretation rule \[ lex\] , has two branches : word stem for the actual root form of the terminal  , cat for its syntactic category . Finally , tree nodes relevan to the discussion are numbered for ease of reference  . 
7 Node 4 is also lexical , but defudte determiners contribute only to the interpretation of their mother nounating with each word stem W conditional interpretations Iw according to the lexicon  . The lexical entries relevan to the current discussion are :/ jet =  ( jet , ?)/ fail = ( fail(z ) , bind(z , argl , device ) ) In the conditional interpretation of a common noun  , the sense is always a sort term . The assumption set may be empty , as it is for ~ jet " above , but for a relational noun it will contain hind assumptions for the relation's arguments  , binding parameters occurring in the sort term . 
The lexical entries for verbs and the structural rules that combine a verb with its subject and complements must refer  , through assumptions , to the grammatical functions that provide the arguments of the predicates that represent the senses of verbs  ( roughly the gov crnable grammatical functions of lexical-functional grammar  \[4  , 27\]) . Since we are not defending any particular theory of grammar in this paper  , we shalls kirtatheoretical and terminological mine field by naming the grammatical functions relevant to our purposes argi for i =  1  ,   .   .   . , n , and calling them simply " arguments . " Arguments are used as edge labels in our analyses  , as well as in bind and restrict assumptions , and their intended interpretation should be clear from the examples we are discussing  . 
The encoding of selectional restrictions is illustrated here in the conditional interpretation of the verb " fail  , " which is fail(z ) , under the assumption that z must be bound as first argument of the verb to something of the sort device  . This inter-phrase , by rule\[defnp\] , rather than being given a separate interpretation . 
7 9 pretation effectively encodes the information that things that fail are devices  , Because the local tree rooted at Node 3 represents a definite noun phrase , rule\[defnp \] applies to it in a straightforward fashion  , yielding the conditional interpretation ( b , ( bind(b , def , jet )) (4) That is , " the jet " is interpreted as bunder the assumption that b can be bound in accordance with the constraints of definite reference to an entity of sort jet  . 
As mentioned earlier , a pragmatic-discharge rule may be used whenever it is applicable to some conditional interpretation i context  . In the current example , the rule for discharging the bind assumption is applicable to the conditional interpretation in  ( 4 )  , and it is actually used in the derivation to determine a referent for the definite noun phrase  . 
The process of resolving a definite reference is of course quite complex  \[5  , 11 , 28 , 29\] , and the rule that discharges assumptions to bind a parameter as a definite reference must reflect this complexity  . For the moment , let us assume that there is only one entity of the correct sort available for definite reference  ( perhaps introduced in a preceding portion of the discourse  ) : the jet identified as j . 
The pragmatic discharge rule can thus bind the parameter b to j  , extend the immediate context accordingly , and delete the bind assumption from the list of assumptions in the current conditional interpretation  . The resulting conditional interpretation of the string " the jet " is  ( j , ~ b ) , shown in
Figure 3 above Node 3~.
Finally , consider the interpretation of the whole sentence  . Rule\[iv-clause \] applies to the parse tree for the sentence  , specifying that its sense is the sense of the predicate  ( pred ) constituent , namely fail ( a ) , and that its set of assumptions is the union of ( i ) the assumptions from its predicate constituent ,   ( ii ) the assumptions from its argument ( argl ) constituent , and ( iii ) the new assumption restrict ( argl ,  = , j ) , where j is the sense of the argument constituent . The restrict assumption , which arises from the sentence's syntactic form , applies to whatever parameter is to be bound as the first argument of the sense of the sentenc ~ in STile conditional interpretation shown above Node  2 in the figure has a new parameter , Q , substituted for the variable z of the lexical entry because parameters introduced through bind assumptions in distinct appll cA tious of semantic interpretation-rules in a derivation must be themselves distinct  . 
this case , a , as specified by the bind assumption inherited from the predicate constituent  . The restrict assumption further constrains the binding of this parameter by requiring that it be equated with the entity j  . 
The interpretation process is completed after the two remaining assumptions are discharged  , as indicated at the top of Figure 3 .   9 They can be discharged successfully in parallel : binding a to j is legitimate because j is a jet  , and jet is a subsort of device . Before the next sentence is processed the discourse context needs to be updated  , as described earlier . 
The second sentence of our example is " Close the manifold "  ; we shall be concerned primarily with the way in which the reference resolution problem is handled  . The conditional interpretation for the definite noun phrase " the manifold " is  ( c , bind(c , def , manifold ) )  ( 5 ) Discharging the bind assumption here requires the use not only of world knowledge--namely  , that each jet is attached to one and only one manifold -- but also of knowledge of the discourse history -- namely that there is a single salient jet in context  , the one identifed as j . The latter information can be derived from the discourse context  , while the former must be encoded in the knowledge base  . 
This information is sufficient to resolve the reference in the sentence under consideration : " the manifold " refers to the manifold that is attached to j  . Hence the interpretation we derive from (5) is (, . ,+ , ) , CO ) where m is the unique manifold attached to jet j . 
For use in constraining subsequent reference , the discourse context must be updated with the information that m has the restricted sort : manifold IAz  . attached-~o(z , j ) , where sip is the subsort of s whose elements at is fyproperty P  . 
9In the Candide system as it currently exists , a bind assumption encoding a select lonal restriction and a restrict assumption encoding the filler of an argument must be discharged as so on as the latter has been is introduced  ; otherwise an erroneous interpretation mighthe derived if the restrict asmarnption is mistakenly applied at a higher clause node  . A better scheme would encode sufficient in for n ~ tion in these restrict assumptions to ensure that they could apply only to the appropriate clause  . 
806 Quantifier Scope
We shall now turn to the kind of interactions in pragmatic processing that challenge compositional systems  . In this section we shall discuss an example of quantifier scope ambiguity  ; following that , we shall give an example of our analysis of donkey sentences  , involving interactions between quantifier scoping and reference resolution  . 
The following sentence illustrates the quantifier scoping problem in its simplest form : 
Every driver controls a jet . (7)
This sentence might be given either a wide-scope existential  ( 3V ) interpretation , in which all the drivers control the same jet , or a narrow-scope existential ( V3 ) interpretation , in which each driver controls its own , possibly different , jet . 

AC : trans-verb-clause ( T )
SF : pred(T ) = V , argl(T ) = A1, arg2 = A2
CIF:\[T\]=(IV\]s , \[vhu\[A ~ hu\[AZ\]AU restrlct(argl , -- , \[ A1\]s ) , restrlct ( arg2 , =\[ A2\]s ))\[ gen-quant\]:
AC:gen-quant(T )
SF : pred(T ) = Q , argl(T ) = N
ClF:IT\]=(x , \[ N\]Au bind(z , \[ Q\]s , \[NIs ))\[ indefnp\]:
AC:indef-np(T )
SF : argl(T ) = N
CIF:\[T\]=(z , \[ N\]AU bind(z , indef , IN\]s ) ) Figure 4: Semantic-Interpretation Rules II Interpreting ( 7 ) requires additional rules of semantic interpretation  , shown in Figure 4 , and the lexical entry/control = ( co , ,~rols ( z , y ) , bind(z , argl , device ) , bind(y , arg2 , device ) ) Derivations of the 3V and the V ' ~ interpretations are shown in Figures  5 and 6  , respectively . 
In both derivations , the general noun phrase " every driver " is interpreted at Node  2 by rule\[gen-quant \] and the indefinite noun phrase " a jet " is interpreted at Node  1 by rule\[indefnp\] . However , the two derivations differ as to where the in definite-reference assumption is discharged  . In Figure 5 the assumption is discharged immediately after its introduction  . The resulting sense is a new entity j of sort jet  . The same 3V reading could also be derived by allowing the in definite-reference assumption to percolate up to Node  3  , but then discharging it before the generalized quantifier assumption  . In either case , the immediate context is updated at the time of the discharge with an entry for the new entity j  . 
Somewhat more interesting is the derivation of the ~ reading  , shown in Figure 6 . The indefinite-reference assumption is allowed to percolate to Node  3  , where the generalized-quantifier assumption is discharged  . This discharge applies a quantifier to its scope , but it also selects some subset of the outstanding in definite-reference assumptions in the current conditional interpretation ad discharges them  , by existential quantification of the respective parameters  , within the scope of the generalized quantifier . In our example , the rule converts the conditional interpretation ( con ~ rots ( a , b ) , bind(a , V , driver ) , bind(b , indef , j e 0 ) into the completed interpretation Ya:driver 3b : jet controls ( a , b ) , q b )  ?  7 A Donkey Sentence We can now discuss the more complicated interactions between assumptions occurring in donkey sentences  . Our example will be the sentence : Every driver controlling a jet closes it  . (8) Clearly , this sentence has an interpretation i which , for every driver controlling a jet , the driver closes the jet . However , it is difficult to see how this interpretation can be derived compositionally  . 
The we U-recognized problem is that , in the intended reading , the indefinite noun phrase % jet " has narrower scope than the determiner " every  , " forcing its interpretation to be part of the sort term translating the nominal " driver controlling a jet  . " But this means that the interpretation of the pronoun " it " will be outside the scope of the indefinite " a jet  . " Our solution to the problem of interpreting donkey sentences involves two new mechanisms : capture rules that allow the quantifier in a general bind  ( x , argl , d ~/ ce ) , bind(y , arg2 , d~/c e )) controls(V ~ r . arriver ~ mrols(~D . ~) ( controls(a , j ) , bind(a , V , driver ) ) ? p r~arg l ~ pred/argl ~ every driver a jet
Figure 5: ~ Interpretation ( mntro/s(x , y ) , bind(x , argl , dev/ce ) , bind(y , arg2 . d ~/ m )) controls ( Va~river 3b : jet controls(a , b ) , ~) ( controls(a , b ) , bind ( , * , V , driver ) , bind(b , in d of , jet )) ? a jet2(a , bind(a , V , driver )) or . /o \ every driver
Figure 6: V ' ~ Interpretation noun phrase to discharge in a particular waybind assumptions derived from singular noun phrases occurring in the general noun phrase  , and a pronoun resolution rule that discharges a pronoun-introduced bind assumption by replacing the as-sumption's parameter with the parameter bound by the assumption for a possible antecedent of the pronoun  . 
Figure 7 shows a simplified derivation of an interpretation of sentence  ( 8 )  , with some of the less interesting assumptions discharged immediately after their introduction rather than being listed explicitly  . Before discussing the main points of this example we need to explain our somewhat nonstandard representation of \[ reduced \] relative clauses  , as in the compound nominal " driver controlling a jet "  ( Node 2 )  . A relative clause is represented as a main clause but has one of its argument positions filled by a nominal  ( the head noun modified by tile relative clause ) instead of a noun phrase . The discharge rule discussed in Section 5 that combines a verb argument with its filler then has two versions : one in which the filler sense is an entity  , already described , and one in which the filler sense is a sort . In the latter case , the rule produces an interpretation whose sense is the filler sort restricted by the sense of the clause  . In the foregoing example , the sort-filler discharge rule is applied to the interpretation  ( contro is ( z , b ) , ? bind(z , argl , device ) , restrict ( argl ,  -- , driver ) , bind(b , indef ' , jet )) ?4"" CCa : ( driver Ikx . conwols(x , b )) closes(a , b ) , bind(b , V , jet ) I ) 4' ( Va : ( driver IZx . controls(x , b )) closes(a , c ) , bind(b , V , jet ) , bind(c , pron , neuter )) ?4 ( closes(a , c ) , bind(a , V , driver l~x . control xOc , b ) , bind(b , indef , jet )) , bind(c , pron . neuter )) closes argl(c . bind(c . pron . neuter )) it 3(a , bind(a , V , driver I ~ . controls(x , b ) , bind(b , In def , jet ))) every2(driverI ~ . x . controls(x , b ) , bind(b , indef , jet ) I ) controls driver 1(b , bind(b , indef , jet ) ) a jet Figure 7: Interpretation of a Donkey Sentence to produce the restricted sort  ( drive flAx . controls(z , b ) , bind(b , indef , jet )) After these preliminaries , we can go on to the main point of the example . The first observation to make is that the sentence has an alternative  ( albeit unlikely ) interpretation i which " a jet " is taken to refer to a specific jet that every d river controls  . This interpretation would be derived by discharging the corresponding indefinite -reference assumption at Nodes  1 or 2 in the derivation . 1? We shall assume that this is not done , and that the indefinite-reference assumption is therefore available at Node  3  . 
So farbind assumptions have been given as triples of a parameter  , a binding criterion ( derived from a determiner ) , and a sort restriction for the parameter . In fact , a fourth component of depen-10 A third interpretation is also possible , in which " a jet " is interpreted as a narrow -scope  ( nonreferential ) existential , and " it " is interpreted as having an extrasentential referent  . Limitations in Candide's handling of nonreferential indefinites preclude this reading  , but a somewmt different rule system will generate all three readings correctly  \[23\]  . 
dencies is in general required , a set of other assumptions that the given assumption may depend on  . 11 An assumption a ( the dependent assumption ) depends on another assumption ~ ( the independent assumption ) whenever the parameter for \] ~ occurs in the sort constraint of ~  . For the language fragment under discussion , a would be the bind assumption for a complex noun phrase and the bind assumption for a noun phrase within a prepositional phrase or relative clause in the complex noun phrase  . For correct binding of quantified parameters , emantic interpretation and discharge rules must maintain the invarian that assumptions on which a given assumption depends can occur only in its set of dependencies  . Consequently , whenever a dependent assumption c ~ is introduced any other assumption on which it depends must be moved into < ~' s dependencies  , thereby becoming in accessible to discharge rules . 
If a is later discharged , the assumptions in its set of dependencies again become accessible to  dis-11In the examples so farth is set has been empty and therefore omitted for the sake of clarity  . 
83 charge rules . Semantic interpretation must be modified to fit this analysis  . For instance , rule\[gen-quant\] , given earlier , should be instead\[gen-quant'\]:
AC:gen-quant(T )
SF : pred(T ) -- Q , argl(T--N
CIF:\[T\]=(z , bind(z , \[ Q\]s , \[ N\]s , IN\]A )) In Figure 7 , this rule is applied at Node3 . 
Capture may occur whenever a generalized -quantifier assumption with a nonempty set of dependencies D is discharged  . Any indefinite assumption in D may be captured by turning it into a universal-quantification assumption and putting it into the set of assumptions for the new conditional interpretation  . In our example , the indefinite assumption for " ajet " is captured in the discharge of the universal assumption for " every driver  . . . ", from Node 4 to Node 4' in the derivation . The resulting assumption is now Universal . 
If this assumption were discharged immediately , there would be no way of discharging the pronoun assumption as an intrasentential naphoric reference  . Instead the pronoun resolution rule is applied to discharge the pronoun assumption  , causing identification of the pronoun parameter c with the jet parameter b  . The resulting conditional interpretation is 4" . Finally , the remaining assumption can be discharged by quantification leading to the complete interpretation at Node  4 ~ a . 
The example shows how assumptions allow interactions between reference and quantification to be left unresolved until all the necessary information becomes available  . Early discharge of the assumption for " adriver " blocks the desired interpretation for the pronoun " it "  ; capture makes available the attributive use of " a driver ~" at an appropriate point for its identification with the direct object of " close  . "  8 Related Research Strictly compositional pproaches to semantic interpretation  , such as Montague grammar\[19\] , have so far proved inadequate for dealing with interactions between meaning and context  ; reasons for this are noted in Section 1 . Our approach can be thought of as a generalization of the compositional mechanism of Cooper storage  \[6\]  , or of its computational nalogue developed by Woods  \[30\]  . Alternative approaches that attempt to address these interactions include discourse -representation theory  ( DRT )  \[14 , 1 8\] and Barwise's partial-valuation approach \[2\]  . 
In DRT , the interpretation of a sentence is derived in a compositional manner from an intermediate representation called a discourse-representation structure  ( DRS )  . I to we ver , the rules that have been developed for constructing DRSs are not themselves compositional  . According to the DRS-construction rules presented by Kamp  \[18\]  , the DRS for a phrase is found only as a byproduct of finding the DRS for the embedding discourse  . In particular , DRS-construction rules apply only after the relative scope of noun phrases and anaphoric bindings have been determined  . It is conceivable that our notion of conditional interpretation might be reex pressible in DRT terms  , leading to a compositional system for
DRS construction.
Barwise \[2\] uses the notion of partial valuation , that is , partial assignments of values to variables , to analyze the sorts of interactions exemplified by the donkey sentences  . Similar comments apply to Webber's work\[29\] . In addition , none of the aforementioned accounts has been concerned with as wide a range of phenomenasis currently hawdied in Candide  .   12 One of the motivations for our work has been to see how Barwise's direct-interpretation approach could be turned into a twostage one in which phrases are first " compiled " into conditional interpretations  , which are then " executed " by applying pragmatic -discharge rules  . 
Finally , several other computational systems developed recently are concerned with interactions between context and meaning  , especially Pundit\[8 , 21\] and Tacitus\[17 , 16\] . Both these systems have emphasized solutions to such difficult pragmatic problems as referencer solution  . In particular , the Pundit project has made notable progress on the question of resolving missing arguments  , while the Tacitus group has done the same for questions involving the determination of implicit relations  . In Candide , solutions to such pragmatic problem should be encoded in the procedures that discharge assumptions  ; in future versions of the system the discharge procedures might be improved applying some of the techniques developed in this other work  . What neither Pundit nor Tacitus has been concerned with is the question of how to build interpretations  composition-12To date , we have included capabilite a for processing reference and coreference  ( definlte and indefinite noun phraaea , pronouns , poeate saive a , and proper nouns ) , quantifier scope , compound nominals , prepmltional-phrase t-tachment , and certain types of under a pecified relations ( e . g . , maln-verb " have ") . We shall report on these mecha , nismselse where \[24\] . 
84 ally . Both systems first build partial interpretations of sentences  , and then attempt to solve a collection of associated pragmatic problems  . Pun-dit does the latter in an overly constrained way  , with the result that it cannot handle systematically the sort of interactions exemplified by the donkey sentences  . Tacitus , on the other hand , casts all the pragmatic problems as theorems to be proved  ; the result is an underconstrained control strategy  . We believe that the generally compositional approach developed in Candideenables us to avoid both these extremes  . 
9 Further Work
We have developed a mechanism of semantic and pragmatic interpretation that relaxes the constraints of compositional semantics just -enough to allow pragmatic information to play its necessary role in the derivation of sentence interpretations  . Central to the mechanism are conditional interpetations  , which allow us to separate constraints on interpretation that depend only on syntactic structure  , represented by the sense component of the conditional interpretation  , from those that depend on pragmatic hoices , represented by the assumption component . The interpretation process is carried out by a combination of semantic-interpretation rules  , which build conditional interpretations of phrases on the basis of lexical and syntactic information  , and pragmatic-discharge rules , which satisfy assumptions on the basis of discourse and domain information  . While the system we have implemented deals with a variety of semantic and pragmatic phenomena  , of which only a few were discussed in this paper , it can only be seen as a first limited instantiation of a system architecure that requires much further work  . We shall mention ow a few of the directions that might be pursued in developing the architecture further  . 
At the most theoretical level , it is interesting to note the formal similarity of our interpretation rules to rules in " deductive ~ models of program-ruing language semantics  \[25\]  . It is also interesting to consider the connection between conditional interpretations and the relational theory of meaning from situation semantics  \[3\]  . These two similarities might be fruitful in developing a semantic justification for our formal interpretation rules in terms of constraints on interpretation relations  . 
The applicability of discharge rules depends in many cases on the compatibility of expected and supplied sorts for relation arguments  . In general , these sorts may be parameterized by assumption parameters  , and some semantic interpretation problems not considered here suggest that higher-order parameterized types  , instead of first-order sorts , may be needed . A suitable notion of type subsumption for such higher-order parameterized types  \[15\] would be useful . More generally , the whole architecture would benefit from a semantically grounded treatment of parameters and parameterized objects  . 
Other pragmatic processes associated with discharge rules  , such as those for reference resolution , also must be able to reason with parameterized objects -- for example in checking the uniqueness of a dependent object relative to arbitrary parameter assignments  . Ultimately , the proper treatment of singular noun phrases in context will require a closer connection between assumptions and \[ parameterized \] fragments of the discourse context  . 
References\[1\]A . V . Aho , R . Sethi , and J . D . Ullman . Compilers : Principles , Techniques and Tools . Addison-
Wesley , Reading , Massachusetts , 1985.
\[2\] J . Barwise . Noun phrases , generalized quanti-tiers and anaphora . In P . G ~ x denfors , editor , Generalized Quantifiers : Linguistic and Logical Approaches  , pages 1-29 , D . Reidel , Dordrecht,
Netherlands , 1987.
\[3\] J . Barwise and J . Perry . Situations and Attitudes . 
MIT Press , Cambridge , Massachusetts , 1983.
\[4\] J . Bresnan and R . Kaplan . Lexical-functional . grammar : a formal system for grammatical representation  . In J . Bresnan , editor , The Mental Representation of Grammatical R ~lations  , pages 173-281 , MIT Press , Cambridge , Massachusetts ,  1982 . 
\[5\]D . Caxter . Interpreting Anaphors in Natural Lan . 
guage Tezts . Ellis Horwood , Chichester , England , 1987 . 
\[6\]R . Cooper . Quantification and Syntactic Theory . 
D . Reidel , Dordrecht , Netherlands , 1983.
\[7\] S . Crain and M . Steedman . On not being led up the garden path : the use of context by the psychological syntax processor  . In D . Dowty , L . Karttunen , and A . Zwicky , editors , Natural Language Parsing : Psychological , Computational , and Theoretical Perspectives , pages 320-358 , Cambridge University Press , Cambridge , England ,  1985 . 
\[8\]D . A . Dahl , M . S . Palmer , and R . J . Passonneau . 
Nominalizations in Pundit . In Proceedings of the putational Linguistics , pages 131-139 , Stanford , 
California , 1987.
\[9\]P . Geach . Reference and Generality . Cornell University Press , Ithaca , New York ,  1962 . 
\[10\]M . P . Georgeff and A . L . Lansky . Procedural knowledge . Proceedings of the IEEE , Special Issue on Knowledge Representation ,  1383-1398 ,  1986 . 
\[11\]B . J . Grosz . The Representation ad Use of Focus in Dialogue Understanding  . Technical Report 151 , SRI International , Menlo Park , Ca . , 1977 . 
\[12\]B . J . Grosz , A . K . Joshi , and S . Weiustein . Providing a unified account of definite noun phrases in discourse  . In Proveedingso \] the 21st Annual Meeting of the Association for Computa . 
tional Linguistics , pages 44-50 , Cambridge , Massachusetts ,  1983 . 
\[13\]B . J . Grosz and C . L . Sidner . Attention , intentions , and the structure of discourse . Computational Linguistics , 12(3):175-204, 1986 . 
\[14\]F . Guenthner , H . Lehmann , and W . Schonfeld . A theory for the representation f knowledge . IBM Journal of Research and Development ,  30(1):39-56 , January 1986 . 
\[15\]R . Harper , F . Honsel \], and G . Plotkin . A framework for defining logics . In Proceedings of the Second Symposium on Logic in Computer Science  , Cornell University , IEEE , Ithaca , New York ,  1987 . 
\[16\]J . R . Hobbs . Interpretationaz abduction . In Proceedings of the ?6th Annual Meeting of the Association for Computational Linguistics  , Buffalo , 
New York , 1988.
\[17\]J . R . Hobbs . Overview of the TACITUS project . 
Computational Linguistics , 12(3), 1986.
\[18\]H . Kamp . A theory of truth and semantic interpretation . In J . A . G . Groenendijk , T . M . V . Janssen , and M . B . J . Stokhoi ~ editors , Formal Methods in the Studyo\]Language , pages 277-322 , Mathematisch Centrum , Amsterdam , Netherlands ,  1981 . 
\[19\]R . Montague . The proper treatment of quantification in ordinary English  . In R . H . Thomason , editor , Formal Philosphy , Yale University Press ,  1973 . 
\[20\]R . C . Moore . Problems in logical form . In Proceeding so \] the 19th Meetingo \] the Association for Computational Linguistics  , pages 117-124 , Stanford , California ,  1981 . 
\[21\]M . S . Palmer , D . A . Dahl , R . J . Schiffman , L . Hirschman , M . Linebarger , and J . Dowding . 
Recovering implicit information . In Proceedings of the ~ . ~th Annual Meeting of the Association , \[22\] for Computational Linguistics , pages 1019 , New
York , 1986.
F . C . Pereira-Logic for Natural Language Analysis . Technical Report 275, SRI International,
Menlo Park , California , 1983.
\[23\]F . C . Pereira-Towards a deductive theory of sentence interpretation  . Unpublished manuscript . 
\[24\]F . C . Pereira and M . E . Pollack . A compositional , declarative system for semaattic and pragmatic interpretation  . In preparation . 
\[25\]G . D . Plotkin . A Structural Approach to Operational Semantics . Lecture notes DAI MIFN-19 , Aarhus University , Aarhus , Denmark , September 1981 . 
\[26\]L . K . Schubert and F .  3 . Pelletier . From English to logic : contextfree computation of ' conventional ' logical translation  . Computational Linguistics , 8(1):26-44, 1982 . 
\[27\]P . Sells . Lectures on Contemporary Syntactic Theories . Volume 3 of CSLI Lecture Not ~ , Center for the Study of Language and Information , Stanford University , Stanford , California ,  1985 . 
Distributed by University of Chicago Press.
\[28\]C . L . Sidner . Focusing in the comprehension of definite anaphora-In Computational Models of Discourse  , MIT Press , Cambridge , Massachusetts ,  1983 . 
\[29\]B . L . Webber . So what can we talk about now ? In Computational Models of Discourse  , 
MIT Press , Cambrige , Ms ., 1983.
\[30\]W . A . Woods . Semantics and quantification in natural language question answering  . In M . Yovits , editor , Advances in Computers , Vol . 
17, pages 2-64, Academic Press , New York , New
York , 1978.

