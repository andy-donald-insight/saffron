Proceedings of the 47th Annual Meeting of the ACL and the 4th IJCNLP of the AFNLP , pages 432?440,
Suntec , Singapore , 27 August 2009. c?2009 ACL and AFNLP
Bilingual CoTraining for Monolingual Hyponymy-Relation Acquisition
Jong-Hoon Oh , Kiyotaka Uchimoto , and Kentaro Torisawa
Language Infrastructure Group , MASTAR Project,
National Institute of Information and Communications Technology ( NICT)
35 Hikaridai Seikacho , Sorakugun , Kyoto 619-0289 Japan
{rovellia,uchimoto,torisawa}@nict.go.jp
Abstract
This paper proposes a novel framework called bilingual cotraining for a largescale , accurate acquisition method for monolingual semantic knowledge . In this framework , we combine the independent processes of monolingual semantic-knowledge acquisition for two languages using bilingual resources to boost performance . We apply this framework to largescale hyponymy-relation acquisition from
Wikipedia . Experimental results show that our approach improved the Fmeasure by 3.6?10.3%. We also show that bilingual cotraining enables us to build classifiers for two languages in tandem with the same combined amount of data as required for training a single classifier in isolation while achieving superior performance.
1 Motivation
Acquiring and accumulating semantic knowledge are crucial steps for developing high-level NLP applications such as question answering , although it remains difficult to acquire a large amount of highly accurate semantic knowledge . This paper proposes a novel framework for a largescale , accurate acquisition method for monolingual semantic knowledge , especially for semantic relations between nominals such as hyponymy and meronymy . We call the framework bilingual cotraining.
The acquisition of semantic relations between nominals can be seen as a classification task of semantic relations ? to determine whether two nominals hold a particular semantic relation ( Girju et al ., 2007). Supervised learning methods , which have often been applied to this classification task , have shown promising results . In those methods , however , a large amount of training data is usually required to obtain high performance , and the high costs of preparing training data have always been a bottleneck.
Our research on bilingual cotraining sprang from a very simple idea : perhaps training data in a language can be enlarged without much cost if we translate training data in another language and add the translation to the training data in the original language . We also noticed that it may be possible to further enlarge the training data by translating the reliable part of the classification results in another language . Since the learning settings ( feature sets , feature values , training data , corpora , and so on ) are usually different in two languages , the reliable part in one language may be overlapped by an unreliable part in another language.
Adding the translated part of the classification results to the training data will improve the classification results in the unreliable part . This process can also be repeated by swapping the languages , as illustrated in Figure 1. Actually , this is nothing other than a bilingual version of cotraining ( Blum and Mitchell , 1998).
Language 1 Language 2
Iteration
Manually Prepared
Training Data for Language 1
Classifier Classifier
Training Training
Enlarged
Training Data for Language 1
Enlarged
Training Data for Language 2
Manually Prepared
Training Data for Language 2
ClassifierClassifier
Further Enlarged
Training Data for Language 1
Further Enlarged
Training Data for Language 2
Translate reliable parts of classification results
Training
Training Training
Training ?..
?..
Translate reliable parts of classification results Figure 1: Concept of bilingual cotraining Let us show an example in our current task : hyponymy-relation acquisition from Wikipedia.
Our original approach for this task was super-Sumida et al (2008), which was only applied for Japanese and achieved around 80% in Fmeasure.
In their approach , a common substring in a hypernym and a hyponym is assumed to be one strong clue for recognizing that the two words constitute a hyponymy relation . For example , recognizing a proper hyponymy relation between two Japanese words , ( kouso meaning enzyme ) and   ( kasuibunkaikouso meaning hydrolase ), is relatively easy because they share a common suffix : kouso . On the other hand , judging whether their English translations ( enzyme and hydrolase ) have a hyponymy relation is probably more difficult since they do not share any substrings . A classifier for Japanese will regard the hyponymy relation as valid with high confidence , while a classifier for English may not be so positive . In this case , we can compensate for the weak part of the English classifier by adding the English translation of the Japanese hyponymy relation , which was recognized with high confidence , to the English training data.
In addition , if we repeat this process by swapping English and Japanese , further improvement may be possible . Furthermore , the reliable parts that are automatically produced by a classifier can be larger than manually tailored training data . If this is the case , the effect of adding the translation to the training data can be quite large , and the same level of effect may not be achievable by a reasonable amount of labor for preparing the training data . This is the whole idea.
Through a series of experiments , this paper shows that the above idea is valid at least for one task : largescale monolingual hyponymy-relation acquisition from English and Japanese Wikipedia.
Experimental results showed that our method based on bilingual cotraining improved the performance of monolingual hyponymy-relation acquisition about 3.6?10.3% in the Fmeasure.
Bilingual cotraining also enables us to build classifiers for two languages in tandem with the same combined amount of data as would be required for training a single classifier in isolation while achieving superior performance.
People probably expect that a key factor in the success of this bilingual cotraining is how to translate the training data . We actually did translation by a simple lookup procedure in the existing translation dictionaries without any machine translation systems or disambiguation processes . Despite this simple approach , we obtained consistent improvement in our task using various translation dictionaries.
This paper is organized as follows . Section 2 presents bilingual cotraining , and Section 3 precisely describes our system . Section 4 describes our experiments and presents results . Section 5 discusses related work . Conclusions are drawn and future work is mentioned in Section 6.
2 Bilingual CoTraining
Let S and T be two different languages , and let CL be a set of class labels to be obtained as a result of learning/classification . To simplify the discussion , we assume that a class label is binary ; i.e ., the classification results are ? yes ? or ? no .? Thus , CL = { yes , no }. Also , we denote the set of all nonnegative real numbers by R+.
Assume X = XS ? XT is a set of instances in languages S and T to be classified . In the context of a hyponymy-relation acquisition task , the instances are pairs of nominals . Then we assume that classifier c assigns class label cl in CL and confidence value r for assigning the label , i.e ., c(x ) = ( x , cl , r ), where x ? X , cl ? CL , and r ? R +. Note that we used support vector machines ( SVMs ) in our experiments and ( the absolute value of ) the distance between a sample and the hyperplane determined by the SVMs was used as confidence value r . The training data are denoted by L ? X?CL , and we denote the learning by function LEARN ; if classifier c is trained by training data L , then c = LEARN(L ). Particularly , we denote the training sets for S and T that are manually prepared by LS and LT , respectively.
Also , bilingual instance dictionary DBI is defined as the translation pairs of instances in XS and XT .
Thus , DBI = {( s , t )} ? XS ? XT . In the case of hyponymy-relation acquisition in English and Japanese , ( s , t ) ? DBI could be ( s=(enzyme , hydrolase ), t =( ( meaning enzyme ),  ( meaning hydrolase))).
Our bilingual cotraining is given in Figure 2. In the initial stage , c0S and c0T are learned with manually labeled instances LS and LT ( lines 2?5). Then ciS and ciT are applied to classify instances in XS and XT ( lines 6?7). Denote CRiS as a set of the classification results of ciS on instances XS that is not in LiS and is registered in DBI . Lines 10?18 describe a way of selecting from CRiS newly la-2: L0S = LS ; L 3: repeat 4: ciS := LEARN(L i
S ) 5: ciT := LEARN(L i
T ) 6: CRiS := { c i
S(xS)|xS ? XS , ? cl ( xS , cl ) /? LiS , ? xT ( xS , xT ) ? DBI } 7: CRiT := { c i
T ( xT )| xT ? XT , ? cl ( xT , cl ) /? LiT , ? xS ( xS , xT ) ? DBI } 8: L(i+1)S := L i
S 9: L(i+1)T := L i
T 10: for each ( xS , clS , rS ) ? TopN(CRiS ) do 11: for each xT such that ( xS , xT ) ? DBI and ( xT , clT , rT ) ? CRiT do 12: if rS > ? then 13: if rT < ? or clS = clT then 14: L(i+1)T := L ( i+1)
T ? {( xT , clS )} 15: end if 16: end if 17: end for 18: end for 19: for each ( xT , clT , rT ) ? TopN(CRiT ) do 20: for each xS such that ( xS , xT ) ? DBI and ( xS , clS , rS ) ? CRiS do 21: if rT > ? then 22: if rS < ? or clS = clT then 23: L(i+1)S := L ( i+1)
S ? {( xS , clT )} 24: end if 25: end if 26: end for 27: end for 28: i = i + 1 29: until a fixed number of iterations is reached Figure 2: Pseudocode of bilingual cotraining beled instances to be added to a new training set in T . TopN(CRiS ) is a set of ciS(x ), whose rS is topN highest in CRiS . ( In our experiments , N = 900.) During the selection , ciS acts as a teacher and ciT as a student . The teacher instructs his student in the class label of xT , which is actually a translation of xS by bilingual instance dictionary DBI , through clS only if he can do it with a certain level of confidence , say rS > ?, and if one of two other condition meets ( rT < ? or clS = clT ). clS = clT is a condition to avoid problems , especially when the student also has a certain level of confidence in his opinion on a class label but disagrees with the teacher : rT > ? and clS 6= clT . In that case , the teacher does nothing and ignores the instance . Condition rT < ? enables the teacher to instruct his student in the class label of xT in spite of their disagreement in a class label . If every condition is satisfied , ( xT , clS ) is added to existing labeled instances L(i+1)T . The roles are reversed in lines 19?27 so that ciT becomes a teacher and ciS a student.
Similar to cotraining ( Blum and Mitchell , 1998), one classifier seeks another?s opinion to select new labeled instances . One main difference between cotraining and bilingual cotraining is the space of instances : cotraining is based on different features of the same instances , and bilingual cotraining is based on different spaces of instances divided by languages . Since some of the instances in different spaces are connected by a bilingual instance dictionary , they seem to be in the same space . Another big difference lies in the role of the two classifiers . The two classifiers in cotraining work on the same task , but those in bilingual cotraining do the same type of task rather than the same task.
3 Acquisition of Hyponymy Relations from Wikipedia Our system , which acquires hyponymy relations from Wikipedia based on bilingual cotraining , is described in Figure 3. The following three main parts are described in this section : candidate extraction , hyponymy-relation classification , and bilingual instance dictionary construction.
Classifier in E Classifier in J
Labeled instances
Labeled instances
Wikipedia
Articles in E
Wikipedia
Articles in J
Candidates in J
Candidates in E
Acquisition of translation dictionary
Bilingual CoTraining
Unlabeled instances in J
Unlabeled instances in E
Bilingual instance dictionary
Newly labeled instances for E
Newly labeled instances for J
Translation dictionary
Hyponymy-relation candidate extraction
Hyponymy-relation candidate extraction
Figure 3: System architecture 3.1 Candidate Extraction We follow Sumida et al (2008) to extract hyponymy-relation candidates from English and Japanese Wikipedia . A layout structure is chosen of article TIGER
Range
Siberian tiger
Bengal tiger
Subspecies
Taxonomy
Tiger
Malayan tiger ( b ) Tree structure of
Figure 4(a)
Figure 4: Wikipedia article and its layout structure as a source of hyponymy relations because it can provide a huge amount of them ( Sumida et al , 2008; Sumida and Torisawa , 2008)1, and recognition of the layout structure is easy regardless of languages . Every English and Japanese Wikipedia article was transformed into a tree structure like Figure 4, where layout items title , ( sub)section headings , and list items in an article were used as nodes in a tree structure . Sumida et al (2008) found that some pairs consisting of a node and one of its descendants constituted a proper hyponymy relation ( e.g ., ( TIGER , SIBERIAN TIGER )), and this could be a knowledge source of hyponymy relation acquisition . A hyponymy-relation candidate is then extracted from the tree structure by regarding a node as a hypernym candidate and all its subordinate nodes as hyponym candidates of the hypernym candidate ( e.g ., ( TIGER , TAXONOMY ) and ( TIGER , SIBERIAN TIGER ) from Figure 4). 39 M English hyponymy-relation candidates and 10 M Japanese ones were extracted from Wikipedia . These candidates are classified into proper hyponymy relations and others by using the classifiers described below.
3.2 Hyponymy-Relation Classification
We use SVMs ( Vapnik , 1995) as classifiers for the classification of the hyponymy relations on the hyponymy-relation candidates . Let hyper be a hypernym candidate , hypo be a hyper?s hyponym candidate , and ( hyper , hypo ) be a hyponymy-relation candidate . The lexical , structure-based , and infobox-based features of ( hyper , hypo ) in Table 1 are used for building English and Japanese classifiers . Note that SF 1Sumida et al (2008) reported that they obtained 171 K , 420 K , and 1.48 M hyponymy relations from a definition sentence , a category system , and a layout structure in Japanese
Wikipedia , respectively.
used in Sumida et al (2008) but LF
SF
Let us provide an overview of the feature sets used in Sumida et al (2008). See Sumida et al (2008) for more details . Lexical features LF cal evidence encoded in hyper and hypo for hyponymy relations . For example , ( hyper,hypo ) is often a proper hyponymy relation if hyper and hypo share the same head morpheme or word.
In LF along with the words/morphemes and the parts of speech of hyper and hypo , which can be multi-word/morpheme nouns . TagChunk ( Daume ? III et al ., 2005) for English and MeCab ( MeCab , 2008) for Japanese were used to provide the lexical features . Several simple lexical patterns2 were also applied to hyponymy-relation candidates . For example , ? List of artists ? is converted into ? artists ? by lexical pattern ? list of X .? Hyponymy-relation candidates whose hypernym candidate matches such a lexical pattern are likely to be valid ( e.g ., ( List of artists , Leonardo da Vinci )). We use LF quently used section heading in a Wikipedia article , such as ? History ? or ? References ,? is used as a hyponym candidate in a hyponymy-relation candidate , the hyponymy-relation candidate is usually not a hyponymy relation . LF these hyponymy-relation candidates.
Structure-based features are related to the tree structure of Wikipedia articles from which hyponymy-relation candidate ( hyper,hypo ) is extracted . SF and hypo in the tree structure . SF type of layout items from which hyper and hypo are originated . These are the feature sets used in
Sumida et al (2008).
We also added some new items to the above feature sets . SF nodes including root , leaf , and others . For example , ( hyper,hypo ) is seldom a hyponymy relation if hyper is from a root node ( or title ) and hypo is from a hyper?s child node ( or section headings ). SF texts of hyper and hypo in a tree structure . They can provide evidence related to similar hyponymy-relation candidates in the structural contexts.
An infobox-based feature , IF , is based on a 2We used the same Japanese lexical patterns in Sumida et al . (2008) to build English lexical patterns with them.
435
Type Description Example
LF
LF
LF
LF
LF
SF
SF
SF
SF
SF
IF Semantic properties of hyper and hypo hyper : ( taxobox,species ), hypo : ( taxobox,name ) Table 1: Feature type and its value . ? in LF
Except those in LF
Wikipedia infobox , a special kind of template , that describes a tabular summary of an article subject expressed by attribute-value pairs . An attribute type coupled with the infobox name to which it belongs provides the semantic properties of its value that enable us to easily understand what the attribute value means ( Auer and Lehmann , 2007; Wu and Weld , 2007). For example , infobox template City Japan in Wikipedia article Kyoto contains several attribute-value pairs such as ? Mayor=Daisaku Kadokawa ? as attribute=its value . What Daisaku Kadokawa , the attribute value of mayor in the example , represents is hard to understand alone if we lack knowledge , but its attribute type , mayor , gives a clue?Daisaku Kadokawa is a mayor related to Kyoto . These semantic properties enable us to discover semantic evidence for hyponymy relations . We extract triples ( infobox name , attribute type , attribute value ) from the Wikipedia infoboxes and encode such information related to hyper and hypo in our feature set IF .3 3.3 Bilingual Instance Dictionary
Construction
Multilingual versions of Wikipedia articles are connected by cross-language links and usually have titles that are bilinguals of each other ( Erdmann et al , 2008). English and Japanese articles connected by a cross-language link are extracted from Wikipedia , and their titles are regarded as translation pairs4. The translation pairs between 3We obtained 1.6 M object-attribute-value triples in
Japanese and 5.9 M in English.
4197 K translation pairs were extracted.
English and Japanese terms are used for building bilingual instance dictionary DBI for hyponymy-relation acquisition , where DBI is composed of translation pairs between English and Japanese hyponymy-relation candidates5.
4 Experiments
We used the MAY 2008 version of English
Wikipedia and the JUNE 2008 version of
Japanese Wikipedia for our experiments . 24,000 hyponymy-relation candidates , randomly selected in both languages , were manually checked to build training , development , and test sets6. Around 8,000 hyponymy relations were found in the manually checked data for both languages7. 20,000 of the manually checked data were used as a training set for training the initial classifier . The rest were equally divided into development and test sets . The development set was used to select the optimal parameters in bilingual cotraining and the test set was used to evaluate our system.
We used TinySVM ( TinySVM , 2002) with a polynomial kernel of degree 2 as a classifier . The maximum iteration number in the bilingual cotraining was set as 100. Two parameters , ? and TopN , were selected through experiments on the development set . ? = 1 and TopN=900 showed 5We also used redirection links in English and Japanese Wikipedia for recognizing the variations of terms when we built a bilingual instance dictionary with Wikipedia cross-language links.
6It took about two or three months to check them in each language.
7Regarding a hyponymy relation as a positive sample and the others as a negative sample for training SVMs , ? positive sample:negative sample ? was about 8,000:16,000=1:2 parameter in the following experiments.
We conducted three experiments to show effects of bilingual cotraining , training data size , and bilingual instance dictionaries . In the first two experiments , we experimented with a bilingual instance dictionary derived from Wikipedia cross-language links . Comparison among systems based on three different bilingual instance dictionaries is shown in the third experiment.
Precision ( P ), recall ( R ), and F as in Eq (1), were used as the evaluation measures , where Rel represents a set of manually checked hyponymy relations and HRbyS represents a set of hyponymy-relation candidates classified as hyponymy relations by the system:
P = | Rel ? HRbyS|/|HRbyS | (1)
R = | Rel ? HRbyS|/|Rel|
F 4.1 Effect of Bilingual CoTraining
ENGLISH JAPANESE
P R F
INIT 77.9 67.4 72.2 74.5 78.5 76.6
TRAN 76.8 70.3 73.4 76.7 79.3 78.0
BICO 78.0 83.7 80.7 78.3 85.2 81.6
Table 2: Performance of different systems (%) Table 2 shows the comparison results of the four systems . SYT represents the Sumida et al (2008) system that we implemented and tested with the same data as ours . INIT is a system based on initial classifier c0 in bilingual cotraining . We translated training data in one language by using our bilingual instance dictionary and added the translation to the existing training data in the other language like bilingual cotraining did . The size of the English and Japanese training data reached 20,729 and 20,486. We trained initial classifier c0 with the new training data . TRAN is a system based on the classifier . BICO is a system based on bilingual cotraining.
For Japanese , SYT showed worse performance than that reported in Sumida et al (2008), probably due to the difference in training data size ( ours is 20,000 and Sumida et al (2008) was 29,900).
The size of the test data was also different ? ours is 2,000 and Sumida et al (2008) was 1,000.
Comparison between INIT and SYT shows the effect of SF feature types , in hyponymy-relation classification.
INIT consistently outperformed SYT , although the difference was merely around 0.5?1.8% in F BICO showed significant performance improvement ( around 3.6?10.3% in F INIT , and TRAN regardless of the language . Comparison between TRAN and BICO showed that bilingual cotraining is useful for enlarging the training data and that the performance gain by bilingual cotraining cannot be achieved by simply translating the existing training data.
81 60 55 50 45 40 35 30 25 20
F 1
Training Data (103)
English
Japanese
Figure 5: F ing data size during bilingual cotraining
Figure 5 shows F of the training data including those manually tailored and automatically obtained through bilingual cotraining . The curve starts from 20,000 and ends around 55,000 in Japanese and 62,000 in English . As the training data size increases , the F indicates that the two classifiers cooperate well to boost their performance through bilingual cotraining.
We recognized 5.4 M English and 2.41 M
Japanese hyponymy relations from the classification results of BICO on all hyponymy-relation candidates in both languages.
4.2 Effect of Training Data Size
We performed two tests to investigate the effect of the training data size on bilingual cotraining . The first test posed the following question : ? If we build 2n training samples by hand and the building cost is the same in both languages , which is better from the monolingual aspects : 2n monolingual training samples or n bilingual training samples ?? Table 3 and Figure 6 show the results.
437
In INIT-E and INIT-J , a classifier in each language , which was trained with 2n monolingual training samples , did not learn through bilingual cotraining . In BICO-E and BICO-J , bilingual cotraining was applied to the initial classifiers trained with n training samples in both languages . As shown in Table 3, BICO , with half the size of the training samples used in INIT , always performed better than INIT in both languages . This indicates that bilingual cotraining enables us to build classifiers for two languages in tandem with the same combined amount of data as required for training a single classifier in isolation while achieving superior performance.
81 20000 15000 10000 7500 5000 2500
F 1
Training Data Size
INIT-E
INIT-J
BICO-E
BICO-J
Figure 6: F with/without bilingual cotraining n 2n n
INIT-E INIT-J BICO-E BICO-J 2500 67.3 72.3 70.5 73.0 5000 69.2 74.3 74.6 76.9 10000 72.2 76.6 76.9 78.6
Table 3: F with/without bilingual cotraining (%) The second test asked : ? Can we always improve performance through bilingual cotraining with one strong and one weak classifier ?? If the answer is yes , then we can apply our framework to acquisition of hyponymy-relations in other languages , i.e ., German and French , without much effort for preparing a large amount of training data , because our strong classifier in English or Japanese can boost the performance of a weak classifier in other languages.
To answer the question , we tested the performance of classifiers by using all training data (20,000) for a strong classifier and by changing the training data size of the other from 1,000 to 15,000 ({1,000, 5,000, 10,000, 15,000}) for a weak classifier.
INIT-E BICO-E INIT-J BICO-J 1,000 72.2 79.6 64.0 72.7 5,000 72.2 79.6 73.1 75.3 10,000 72.2 79.8 74.3 79.0 15,000 72.2 80.4 77.0 80.1
Table 4: F glish classifier is strong one
INIT-E BICO-E INIT-J BICO-J 1,000 60.3 69.7 76.6 79.3 5,000 67.3 74.6 76.6 79.6 10,000 69.2 77.7 76.6 80.1 15,000 71.0 79.3 76.6 80.6
Table 5: F
Japanese classifier is strong one
Tables 4 and 5 show the results , where ? INIT ? represents a system based on the initial classifier in each language and ? BICO ? represents a system based on bilingual cotraining . The results were encouraging because the classifiers showed better performance than their initial ones in every setting . In other words , a strong classifier always taught a weak classifier well , and the strong one also got help from the weak one , regardless of the size of the training data with which the weaker one learned . The test showed that bilingual cotraining can work well if we have one strong classifier.
4.3 Effect of Bilingual Instance Dictionaries We tested our method with different bilingual instance dictionaries to investigate their effect . We built bilingual instance dictionaries based on different translation dictionaries whose translation entries came from different domains ( i.e ., general domain , technical domain , and Wikipedia ) and had a different degree of translation ambiguity . In Table 6, D1 and D2 correspond to systems based on a bilingual instance dictionary derived from two handcrafted translation dictionaries , EDICT ( Breen , 2008) ( a general-domain dictionary ) and ? The Japan Science and Technology Agency Dictionary ,? ( a translation dictionary for technical terms ) respectively . D3, which is the same as BICO in Table 2, is based on a bilingual TRY represents the number of translation dictionary entries used for building a bilingual instance dictionary . E2J ( or J2E ) represents the average translation ambiguities of English ( or Japanese ) terms in the entries . To show the effect of these translation ambiguities , we used each dictionary under two different conditions , ?=5 and ALL . ?=5 represents the condition where only translation entries with less than five translation ambiguities are used ; ALL represents no restriction on translation ambiguities.
DIC F
TYPE E J ENTRY E2J J2E
D1 ?=5 76.5 78.4 588K 1.80 1.77
D1 ALL 75.0 77.2 990K 7.17 2.52
D2 ?=5 76.9 78.5 667K 1.89 1.55
D2 ALL 77.0 77.9 750K 3.05 1.71
D3 ?=5 80.7 81.6 197K 1.03 1.02
D3 ALL 80.7 81.6 197K 1.03 1.02
Table 6: Effect of different bilingual instance dictionaries The results showed that D3 was the best and that the performances of the others were similar to each other . The differences in the F within the same system triggered by translation ambiguities . The performance gap between D3 and the other systems might explain the fact that both hyponymy-relation candidates and the translation dictionary used in D3 were extracted from the same dataset ( i.e ., Wikipedia ), and thus the bilingual instance dictionary built with the translation dictionary in D3 had better coverage of the Wikipedia entries consisting of hyponymy-relation candidates than the other bilingual instance dictionaries . Although D1 and D2 showed lower performance than D3, the experimental results showed that bilingual cotraining was always effective no matter which dictionary was used ( Note that F glish and 76.6 in Japanese .) 5 Related Work Li and Li (2002) proposed bilingual bootstrapping for word translation disambiguation . Similar to bilingual cotraining , classifiers for two languages cooperated in learning with bilingual resources in bilingual bootstrapping . However , the two classifiers in bilingual bootstrapping were for a bilingual task but did different tasks from the monolingual viewpoint . A classifier in each language is for word sense disambiguation , where a class label ( or word sense ) is different based on the languages.
On the contrary , classifiers in bilingual cotraining cooperate in doing the same type of tasks.
Bilingual resources have been used for monolingual tasks including verb classification and noun phrase semantic interpolation ( Merlo et al , 2002; Girju , 2006). However , unlike ours , their focus was limited to bilingual features for one monolingual classifier based on supervised learning.
Recently , there has been increased interest in semantic relation acquisition from corpora . Some regarded Wikipedia as the corpora and applied handcrafted or machine-learned rules to acquire semantic relations ( Herbelot and Copestake , 2006; Kazama and Torisawa , 2007; Ruiz-casado et al , 2005; Nastase and Strube , 2008; Sumida et al , 2008; Suchanek et al , 2007). Several researchers who participated in SemEval07 ( Girju et al , 2007) proposed methods for the classification of semantic relations between simple nominals in English sentences . However , the previous work seldom considered the bilingual aspect of semantic relations in the acquisition of monolingual semantic relations.
6 Conclusion
We proposed a bilingual cotraining approach and applied it to hyponymy-relation acquisition from Wikipedia . Experiments showed that bilingual cotraining is effective for improving the performance of classifiers in both languages . We further showed that bilingual cotraining enables us to build classifiers for two languages in tandem , outperforming classifiers trained individually for each language while requiring no more training data in total than a single classifier trained in isolation.
We showed that bilingual cotraining is also helpful for boosting the performance of a weak classifier in one language with the help of a strong classifier in the other language without lowering the performance of either classifier . This indicates that the framework can reduce the cost of preparing training data in new languages with the help of our English and Japanese strong classifiers . Our future work focuses on this issue.
439
References
So?ren Auer and Jens Lehmann . 2007. What have Innsbruck and Leipzig in common ? Extracting semantics from wiki content . In Proc . of the 4th European Semantic Web Conference ( ESWC 2007), pages 503?517. Springer.
Avrim Blum and Tom Mitchell . 1998. Combining labeled and unlabeled data with cotraining . In COLT ? 98: Proceedings of the eleventh annual conference on Computational learning theory , pages 92?100.
Jim Breen . 2008. EDICT Japanese/English dictionary file , The Electronic Dictionary Research and Development Group , Monash University.
Hal Daume ? III , John Langford , and Daniel Marcu.
2005. Search-based structured prediction as classification . In Proc . of NIPS Workshop on Advances in Structured Learning for Text and Speech Processing,
Whistler , Canada.
Maike Erdmann , Kotaro Nakayama , Takahiro Hara , and Shojiro Nishio . 2008. A bilingual dictionary extracted from the Wikipedia link structure . In Proc.
of DASFAA , pages 686?689.
Roxana Girju , Preslav Nakov , Vivi Nastase , Stan Szpakowicz , Peter Turney , and Deniz Yuret . 2007.
Semeval2007 task 04: Classification of semantic relations between nominals . In Proc . of the Fourth International Workshop on Semantic Evaluations ( SemEval2007), pages 13?18.
Roxana Girju . 2006. Out-of-context noun phrase semantic interpretation with crosslinguistic evidence.
In CIKM ?06: Proceedings of the 15th ACM international conference on Information and knowledge management , pages 268?276.
Aurelie Herbelot and Ann Copestake . 2006. Acquiring ontological relationships from Wikipedia using RMRS . In Proc . of the ISWC 2006 Workshop on Web Content Mining with Human Language Technologies.
Jun?ichi Kazama and Kentaro Torisawa . 2007. Exploiting Wikipedia as external knowledge for named entity recognition . In Proc . of Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning , pages 698?707.
Cong Li and Hang Li . 2002. Word translation disambiguation using bilingual bootstrapping . In Proc . of the 40th Annual Meeting of the Association for Computational Linguistics , pages 343?351.
MeCab . 2008. MeCab : Yet another part-of-speech and morphological analyzer . http://mecab.
sourceforge.net/.
Paola Merlo , Suzanne Stevenson , Vivian Tsang , and Gianluca Allaria . 2002. A multilingual paradigm for automatic verb classification . In Proc . of the 40th Annual Meeting of the Association for Computational Linguistics , pages 207?214.
Vivi Nastase and Michael Strube . 2008. Decoding Wikipedia categories for knowledge acquisition . In
Proc . of AAAI 08, pages 1219?1224.
Maria Ruiz-casado , Enrique Alfonseca , and Pablo Castells . 2005. Automatic extraction of semantic relationships for Wordnet by means of pattern learning from Wikipedia . In Proc . of NLDB , pages 67? 79. Springer Verlag.
Fabian M . Suchanek , Gjergji Kasneci , and Gerhard Weikum . 2007. Yago : A Core of Semantic Knowledge . In Proc . of the 16th international conference on World Wide Web , pages 697?706.
Asuka Sumida and Kentaro Torisawa . 2008. Hacking Wikipedia for hyponymy relation acquisition . In Proc . of the Third International Joint Conference on Natural Language Processing ( IJCNLP ), pages 883?888, January.
Asuka Sumida , Naoki Yoshinaga , and Kentaro Torisawa . 2008. Boosting precision and recall of hyponymy relation acquisition from hierarchical layouts in Wikipedia . In Proceedings of the 6th International Conference on Language Resources and
Evaluation.
TinySVM . 2002. http://chasen.org / ? taku / software/TinySVM.
Vladimir N . Vapnik . 1995. The nature of statistical learning theory . Springer-Verlag New York , Inc.,
New York , NY , USA.
Fei Wu and Daniel S . Weld . 2007. Autonomously semantifying Wikipedia . In CIKM ?07: Proceedings of the sixteenth ACM conference on Conference on information and knowledge management , pages 41? 50.
440
