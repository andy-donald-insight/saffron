TWOTY PES OF PLANNING
INLANG UAGE GENERATION
Eduard H . Hovy
USC/Informaton Sciences Institute
4676 Ar\]miralty Way , Suite 1001
Marina del Rey , CA 90292-6695, U.S.A.

Abstract
As our understanding of natural language generation has increased  , a number of tasks have been separated from realization and put together under the heading a text planning I  . So far , however , no one has enumerated the kinds of tasks a text planner should be able to do  . This paper describes the principaless on learned in combining a number of planning tasks in a planner-realiser : planning and realization should be interleaved  , in a limited-commitment planning paradigm , to perform two types of p \] an nlng : prescriptive and restrictive  . Limited-commitment planning consists of both prescriptive  ( hierarchical expansion ) planning and of restrictive planning ( selecting from options with reference to the status of active goals  )  . 
At present , existing text planners use prescriptive plans exclusively  . However , a large class of p\]anner tasks , especially those concerned with the pragmatic ( nonliteral ) content of text such as style and slant , is most easily performed under restrictive planning  . The kinds of tasks suited to each planning style are listed  , and a program that uses both styles is described . 
1 Introduction
PAULINE ( Planning And Uttering Language In Natural Environments  ) is a language generation program that is able to realize a given input in a number of different ways  , depending on how its pragmatic ( interpersonal and situation-specific ) This work was done while the author was at the Yale University Computer Science Department tNew Haven This work was supported in part by the Advanced Research Projects Agency monitored by the Office of Naval Research under contract  N00014-82-K-0149  . It was also supported by AFOSR contract F49620-87-C-0005  . 
goals are set by the user . The program consists of over 12 , 000 lines of T , a dialect of LISP developed at Yale University . 
PAULINE addresse simultaneously a wider range of problems than has been tried in any single language generation program before  ( with the possible exception of \[ Clippinger 74\] )  . As is to be expected , no part of PAULINE provides a sat-ie factorily detailed solution to any problem  ; to a larger or smaller degree , each of the questions it addresses is olved by a set of simpl ~ ed  , somewhat adho ? methods . However , this is not to say that the program does not provide some interesting insights about he nature of language generation and the way that generators of the future will have to be structured  . 
One insight pertains to the problems encountered when the various tasks of generation -- both of text planning and of realization ~ are interleaved to provide plannlng-on-demand rather than strict topdown planning  ( which has been the approach taken so far )  . The planning tasks that are best performed on demand tend to have short-range effects on the text  ( compared to those best performed in full before realization  )  . In order to achieve the types of communicative goals such tasks usually serve  , the planner must ensure that they work together harmoniously so that their effects support one anothe rather than conflict  . 
This requirement imposes constraints on the orga -nlzation and architecture of a generation system  . 
This paper describes PAULINE's architecture , the text planning tasks implemented , and how the tasks are managed . Unfortunately many details have to be left unsaid  ; the interested reader is referred to relevant material at appropriate points  . 
Overview descriptions appear in \[ Hovy 87 a , 87 b \] . 
179 1.1 The Problem
Depending on how the user sets the communicative goals  , PAULINE produces over 100 variations of an episode that took place at Yale University in April  1986   ( it also produces multiple versions of episodes in two other domains  ; see\[Hovy 86 a , 86 b \]) . In each case , PAULINE is also given a description of the hearer and the same three principal topics from a single underlying representation network  . 
As a quick in formal description of the episode,
PAULINE says :
Exaxnple I . YALEUNIVERSITY PUNISHED
ANUMBER OFS TUDENTS FOR BUILDING A
SHANTY TOW NONBE IN ECKE PLAZ ABY
ARRESTING 76 STUDENTS AND TEARINGIT
DOW NONE MORNING INE ARLY APRIL . THE
STUDENTS WANTEDY AlETODIVE STFROM
COMPANIES DOING BUSINESS IN SOUTH
AFRICA . FINALLY . THEUNIVERSITY GAVE
IN ANDALLD VEDTHES TUDENTS TO
REBUILDIT.
This is the kind of description one may hear from a passer by  . In contrast , when PAULINE is given the goals to be more formal and to slant its description of the episode toward the protesters  , it produces :
Example 2. ASARD 4 INDERTOY AlE
UNIVERSITY TO DIVEST FROMCOI~ANIES
DOINGBUSINESS INSOUTH AFRICA.A
LARGE NUMBER OF CONCERNED STUDENTS
ERECTEDASH ANTY TO WN---NAMED WINNIE 14ANDELA CITY---ONBE IN ECKE PLAZ AIN
EARLYAPRIL . THELOCAL COMMUNITY
EXPRESSED SUPPORTFORTHESTUDENTS "
ACTION . LATER , AT6:30 A MON APRIL 14 , THESHANTY Te~WAS DESTROYI~BY
OFFICIALS ; ALSO , ATTHATTIME , THE
POLICE ARRESTED 76 STUDENTS . THESTUDENTS REQUESTED THATY ALEUNIVERSITYGIVE TH~PERMISSIONTOREAS SEMBLEITON BEINE CKE 
PLAZA ; CONCURRENTLY , SEVERALLOCAL
POLITICIANS AND FACULTYM ~ BEP . SEXPRESSEDCRITICISMOFYALE'SACTIONS . FINALLY , YALE PER MITTED THESTUDENTS TO RECONSTRUCT THE

Of course , in face-to-face conversations a protester would probably be less formal and more openly opinionated  . PAULINE ( although nowspe-\]c~-gin support of the university  ) illustrates :
Example 8. ITPISSES MEOFF THATA
FEWSHIFTLESSSTUDENTS WERE our TO
MAKETROU BLEON BEINE CKE PLAZ AONE
DAY . THEY TOOKO VERBE INE CKEPLAZA
AND BUILTASH ANTY TOWN . WINNIE
MANDEL ACITY , BECAUSE THEY WANTED
YALEUNIVERSITY TO PULL THEIR MONEY
OUTOFCOMPANIES WITHBUSINESSIN
SOUTHAFRICA.THEUNIVERSITYASKED
THESTUDENTS TO BUILD THE SHANTY TO WN
ELSE WHERE , BUTTHEY REFUSED . IAM
HAPPYTHATOFFICIALSRDIOVED THESHANT OWN
ONEMORNING . FINALLY . YALEGAVE IN
LETTHEIDIOTSPUTITUPAGAIN . ATTHE
SAMETIMEY ALES AID THAT A COMMISSION
WOULDGOTOSOUTHAFRICAIN JULY TO CHECKOUT THE SYST\]~f OFAPARTHEID  , BECAUSE THE
UNIVERSITY WANTED TO BERE ASONABLE.
The construction of such texts is beyond the capabi ~ ties of most generators written to date  . 
Though many generators would be capable of producing the individual sentences  , some of the pre-real ~ ation planning tasks have never been attempted  , and others , though studied extensively ( and in more detail than implemented in PAULINE ) have not been integrated into a single planner under pragmatic ontrol This paper involves the questions : what are the sepl ~ n-  ; -g tasks ? How can they all be integrated into one planner ? How can extralinguistic communicative goals be used to control the planning process ? What is the nature of the relation between text planner and text realiser ?  2 Interleaving or Top-Down
Planning ? 2 . 1 The Trouble with Traditional
Planning
In the text planning that has been done , two principal approaches were taken . With the integrated approach , planning and generation is one contln-uous process : the planner-realizer handle syntac-tic constraints the same way it treats treats all other constraints  ( such u focus or lack of requisite hearer knowledge  )  , the only difference being that syntactic constraints tend to appear late in the planning -realisation process  . Typically , the generator is written as a hierarchical expansion planner  ( see\[Sacerdoti77\] ) -- this approach is exemp U-fled by KAMP , Appelt's planner-generator (\[ Appelt 81 ,  82 ,  83 ,  85\]) . With the #eparated approach , planning takes place in its entirety before realization starts  ; once planning is over , the planner is of no further use to the realizer . This is the case in the generation systems of \[ McKeown  82\]  , \[ McCoy\[Paris87\] , and \[ McDonald & Pustejovsky 85\] . 
Neither approach is satisfactory . Though conceptually more attractive , the integrated approach makes the grammar unwieldy  ( it is spread throughout heplan library ) and is slow and impractical mafter all , the realization process proper is not a planning task -- and furthermore  , it is not clear whether one could formulate all text planning tasks in a sufficiently homogeneous set of terms to be handled by a single planner  .   ( This argument is made more fully in \[ How/85\] and \[ McDonald & Pustejovsky 85\]  . ) On the other hand , the separated approach typically suffers from the stricture of a one-way narrow-band width interface  ; such a planner could never take into account fortuitou syntactic opportunities -- or even he aware of any syntactic notion ! Though the separation permits the use of different representations for the planning and realization tasks  , this solution is hardly better : , once the planning stage is over , the realizer has no more recourse to it ; if the realizer is able to fulfill more than one planner instructions at once  , or if it is unable to an instruction , it has no way to bring about any replanning . Therefore , in practice , separated generators perform only planning that has little or no syntactic import--usually  , the tasks of topic choice and sentence order . 
Furthermore , both these models both run counter to human behavior : When we speak  , we do not try to satisfy only one or two goals , and we operate ( often , and with success ) with conflicting goals for which no resolution exists  . We usually begin to speak before we have planned out the full utterance  , and then proceed while performing certain planning tasks in bottom-up fashion  . 
2.2 A Solution : Interleaving
T , Lking this into account , a better solution is to perform limited -commitment planning ~ to defer planning until necessitated by the realization process  . The planner need assemble only a par?tial set of generator instructions menough for the realization component to start working on and can then continue planning when the realization component requires further guidance  . This approach interleaves planning and realization and is characterized by a two-way communication at the realizer's decision points  . The advantages are : First , it allows the separation of planning and realization tasks  , enabling them to be handled inappropriate terms . ( In fact , it even allows the separation of special-purpose planning tasks with idiosyncratic representational requirement so be accommodated in special-purpose planners  . ) Second , it allows planning to take into account unexpected syntactic opportunities and inadequacies  . 
Third , this approach accords well with the psycholinguistic research of \[ Bock  87\]  , \[ Rosenherg 77\] , \[Danks 77\] , \[DeSmedt&Hempen87\] , \[ Hempen & Hoenkamp 78\] , \[ Hempen 77 ,  76\] , and \[ Levelt & Schriefers87\] . This is the approach taken in

But there is a cost to this interleaving : the type of planning typically activated by the realizer differs from traditional top-clown planning  . There are three reasons for this .  1 . Top-down planning is prescriptive : it determines a series of actions over an extended range of time  ( i . e . , text ) . However , when the planner cannot expand its plan to the final level of detailm remember  , it doesn't have access to syntactic information m then it-has to complete its task by planning in line  , during realization . And in line planning usually requires only a single decision  , a selection from the syntactically available options  . After in line planning culmi-nates in a decision , subsequent processing continues as realkation -- at least until the next set of unprovided-for p tions  . Unfortunately , unlike hierarchical plan steps , subsequent in-llne planning optidns need not work toward the same goal  ( or indeed have any relation with each other )  ; the planner has no way to guess even remotely what the next set of optious and satisfiable goals might be  . 
2 . In line planning is different for a second reason : it is impossible to formulate workable plans for common speaker goals such as pragmatic goals  . 
Aspeaker may , for example , have the goals to impress the hearer , to make the hearer feel socially ~ subordinate , and yet to be relatively informal These goals play as large a role in generation as the speaker 's goal to inform the hearer about the topic  . However , they cannot be achieved by constructing and following a topdown plan--what would the plan 's steps prescribe ? Certainly not the sentence " I want to impress you  , but still make you feel subordinatem ! Pragmatic effects are best achieved by making appropriate subtle decisions during the generation process : an extra adjective here  , a slanted verb there . Typically , this is a matter of inline planning . 
3 . A third difference from traditional planning is the following : Some goals can be achieved  , flushed from the goal list , and forgotten . Such goals ( for example , the goal to communicate a certain set of topics ) usually activate prescriptive plans . In contrast , other goals cannot ever be throughout the text ; if you are friendly , arrogant , or opinionated , you remains o--you cannot suddenly be " friendly enough " and then flush that goal  . These goals , which are pragmatic and stylistic in nature , are well suited to in-llne planning . 
Generation , then , requires two types of planning . Certain tasks are most easily performed in topdown fashion  ( that is , underguidance of a hierarchical planner , or of a fixed-plan ( schema or script ) applier ) , and other tasks are most naturally performed in a bottom-up  , selective , fashion . 
That is , some tasks are prescriptiee--they act over and give shape to long ranges of text--and some are restr/ct/ee--they act over short ranges of text  , usually as a selection from some number of alternatives  . Prescriptive strategies are forms , tive : they control the construction and placement of parts in the paragraph and the sentence  ; that is , they make some commitment to the final form of the text  ( such as , for example , the inclusion and order of specific sentence topics  )  . Restrictive strategies are selective : they decide among alternatives that were left open  ( such as , for example , the possibility of including additional topics under certain conditions  , or the specific content of each sentence ) . A restrictive planner cannot simply plan for , it is constrained to plan with : the options it has to select from a represented to it by the realizer  . 
2  . 3 P lann ing Rest r i c t ive ly : Mon i - to r ing Since there is no way to know which goals subsequent decisions will affect  , restrictive planning must keep track of all goals -- confllcting or not and attempt to achieve them all in parallel  . Thus , due to its bottom-up , runtime nature , planning with restrictive strategies takes the form of execution monitoring  ( see , say , \[ Fikes , Hart & Niisson 72\] , \[ Sacerdoti77\] , \[ Miller85\] , \ [ Doyle , Atkiuson & Doshi86\] , \[Broverman & Croft 87\]) ; we will use the term monitoring here , appropriate for a system that does not take into account he world's actual reaction  ( in generation , the bearer's actual response ) , but that trusts , perhaps naively , that the world will react in the way it expects . Moni-toring requires the following : ? checking , updating , and recording the current satisfaction status of each goal ? determining which goal  ( s ) each option will help satisfy , to what extent , in what ways ? determining which goal ( s ) each option will thwart , to what extent , and in what ways ? computing the relative priority of each goal in order to resolve conflicts  ( to decide , say , whether during instruction to change the topic or to wait for a socially dominant hearer to change it  ) When the planner is uncertain about which long term goals to pursue and which sequence of actions to select  , the following strategies are useful : ? prefer common intermediate goals  ( subgoals shared by various goals \[ Durfee & Lesser  86\]  ) ? prefer cheaper goals ( more easily achieved goals ; \ [ Durfee & Lesser 86\] ) ? prefer disorlmlnatiue ~ nter mediate goals ( goals that most effectively indicate the longterm promise of the avenue being explored  )   ( \ [ Durfee & Lesser 86\] ) ? prefer least-satls fied goals ( goals furthest from achievement ) ? prefer least-recently satisfied goals ( go a Ls least recently advanced ) ? combine the latter two strategies ( a goal receives higher priority the longer it waits and the fewer times it has been advanced  ) 3 Planning in PAULINE 3 . 1 Program Architecture , Input and Opinions The user provides PAULINE with input topics and a set of pragmatic goals  , which activate a number of intermediate rhetorical goals that control the style and slant of the text  . Whenever planning or realization require guidance  , queries are directed to the activated rhetorical goals and their associated strategies  ( see Figure 1 )  . 
Prescriptive planning is mostly performed ur-ing topic collection and topic organi Eation and restrictive planning is mostly performe during realization  . Restrictive planning is implemented in PAULINE in the following way : None of the pro-gram's rhetorical goals  ( opinion and style ) are everfully achieved and flushed ; they require decisions to be made in their favor throughout the text  . 
PAULINE keeps track of the number of times each such goal is satisfied by the selection of some option  ( of course , a single item may help satisfy a number of goals simultaneously  )  . For conflict resolution , PAULINE uses the least-satisfied strategy : the program chooses the option helping the goals with the lowest total satisfaction status  . In order to do this , it must know which goals each option will help satisfy  . Responsibility for providing this "1
Topic Collection
Topic Organization

Text-topic collection:


DESCRIBE-interpretation-new topics - juxtaposition-ordering-sentence type- organisation-clauses-word Jl 



RL
HS
ET &
OS
RT
IR
CA
AT
LE






Aspects of

Figure 1: Program Architecture information lies with whatever produces the option : either the lexicon or the language specialist functions in the grammar  . 
PAULINE's input is represented in a standard case -frame-type language based on Conceptual Dependency  ( \[Schank 72 ,  75\] , \[Schank & A bel-son 77\] ) and is embedded in a property-inheritance network  ( see\[Charn lak , Riesbeck , & McDermott 80\] , \[Bohrow & Winograd 77\]) . The shanty town example consists of about 120 elements . No intermediate representation ( say , one that varies depending on the desired slant and style  ) is created . 
PAULINE's opinions are based on the three affect values GOOD  , NEUTRAL , and BAD , as described in \[ Hovy 86 b\] . Its rules for a ~ ect combination and propagation enable the program to compute an opinion for any representation element  . 
For instance , in example 2 ( where PAULINE speaks as a protester )  , its sympathy list cont ~- . 
the elements representing the protesters and the protesters ' goal that Yale divest  , and its antipathy list contains Yale and Yale's goal that the university remain in an orderly state  . 
3.2 Text Planning Tasks
This section very briefly notes the text planning tasks that PAULINE perforr as : topic collection  , topic interpretation , additional topic inclusion , topic juxtaposition , topic ordering , intrasentential slant , and intrasentent lalstyle . 
Topic Collection ( Prescriptive ) : This task collecting , from the input elements , additional representation elements and determining which aspects of them to say--is preeminently prescriptive  . Good examples of topic collection plans ( also called schemas ) can be found in \[ McKeown82\] , \[ Paris & McKeown87\] , and \[ R~sner 86I . In this spirit PAULINE has three plansm the DE -SCRIBE plan to find descriptive aspects of objects  , the RELATE plan to relate events and state -changes  , and the CONVINCE plan to selectopics that will help convince the hearer of some opinion  . 
Whenever it performs topic collection , PAULINE applies the prescriptive steps of the appropriate collection plan to each candidate topic  , and then in turn to the newly-found candidate topics  , for as long as its pragmatic riteria ( amongst others , the amount of time available ) allow . The CON-VINCE plan ( described in\[Hovy85\] ) contain % say good results , and appeal to authority . Example 1 presents the topics as given ; in example 2 , the CONVINCE plan prescribes the inclusion of the protesters ' goal and the support given by the local community and faculty  ; and in example 3 , with opposite sympathies , the same plan prescribes the inclusion of Yale's request and of the announcement of the investigation commission  . 
Topic Interpretation ( Preserlptlve and Restrictive ) : As described in\[Hovy87c\] , generators that slavishly follow their input elements usually produce bad text  . In order to produce formulations that are appropriately detailed and/or slanted  , a generator must have the ability to aggregate or otherwise interpret its input elements  , either individually or in groups , as instances of other representation elements . But finding new interpretations can be very dlt ~ cult  ; in general , this task requires the generator ( a ) to run inferences off the input elements , and ( b ) to determine the expressive suitability of resulting interpretations  . Though unbounded inference is not a good idea , limited inference under generator control can improve text significantly  . One source of control is the generator's pragmatic goals : it should try only inferences that are likely to produce goal-serving interpretations  . In this spirit , PAULINE has a number of prescriptive and restrictive strategies that suggest specific interpretation if erencesslanted towards its sympathies  . For example , in a dispute between ~ we ~ ( the program'sympathies ) and Uthey S , some of its strategies call for the interpretations that ? coercion : they coerce others into doing things for them ? appropriation : they useugly tactics  , such as taking and using what is n't " theirs ? conciliation : we are conciliatory  ; we moderate our demands Interpretation occurred in examples  1 and 3: the notions of punishment in example 1  , and of appro-priation ( % ook over Beinecke Plazas ) and conc~-iation ( ~? ale gave in ~ ) in example 3 , did not appear in the representation network . 
Additional Topic Inclusion ( Restrictive ) : During the course of text planning , the generator may find additional candidate topics  . When such topics serve the program's goals , they can be included in the text . But whether or not to include these instances can only be decided when such topics are found  ; the relevant strategies are therefore restrictive  . For example , explicit statements of opinion may be interjected where appropriate  , such as , in example 3 , the phrases Ultpisses meoffm and uI am happy that ~  . 
Topic Juxtaposition ( Restrictive ) : By jux-taposing sentence topics in certain ways , one can achieve opinion-related and stylistic effects  . For example , in order to help slant the text , PAULINE uses multi-predicate phrases to imply certain affects  . Two such phrases are a Not only X , but Y ~ and uX ; however , Y ~; depending on the speaker's feelings about X , these phrases attribute feelings to Y , even though Y may really be neutral ( for more detail \[ How/86b\] )  . With respecto stylistic effect , the juxtaposition of several topics into a sentence usually produces more complex  , form a ~ sounding text . For example , consider how the phrases u as a reminder w , us\]so , at that times , and ~ concurrently ~ are used in example 2 to link sentences that are separate in example 3  . The task of topic juxtaposition is best implemented re-strictively by presenting the candidate topics as options to strategies that check the restrictions on the use of phrases and select suitable ones  . 
(The equivalent prescriptive formulation amounts to giving the program goals such as \[ find in the network two topics that will fit into a % Yot o  , ~/ buff phrase \] , a much less tractable task . ) Topic Order ing ( Prescriptive ) : The ordering of topics in the paragraph is best achieved prescriptively  . Different circumstances call for different orderings  ; newspaper articles , for instance , often contain an introductory summa-rising sentence  . In contrast to the above mentioned schemas ( \[ McKeown82\] , etc . ) , steps in PAULINE's topic collection plans are not ordered  ; additional plans must be run to ensure coherent text flow  . PAULINE uses one of two topic-ordering plans which are simplified scriptifications of the strategies discussed in \[ Hobbs  78  , 79\] and \[ Mann & Thompson 83 ,  87\] . 
Intrasentential Slant ( Restrictive ) : In addition to interpretation , opinion inclusion , and topic juxtaposition , other slanting techniques include the use of stress words  , adjectives , adverbs , verbs that require idiosyncratic predicate contents  , nouns , etc . Due to the local nature of most of these techniques and to the fact that options are only found rather late in the realization process  , they are best implemented restrictively . In example 2 , for example , the protesters are described as " a large number of concerned students ~  . This is generated in the following way : The generator's noun group specialist produces  , amongst others , the goals to say adjectives of number and of opinion  . Then the special is that controls the real -ternatives that express number attributively  ( such as ~ a few = , Zmany ~ , a number ) together with the connotations each carries . The restrictive strategies activated by the rhetorical goals of opinion then select the options of ~ many ~ and ~ a large number " for their slanting effect  . Finally , the restrictive strategies that ~ xvethe rhetorical goals determining formality selecthe latter alternative  . 
The opinion % oncerned " is realized similarly , as are the phrases zasa reminder ~ and , in example 3 , " a few shiftles students " and ~ idiots ' . 
Intrasentential Style ( Restrictive ) : Control of text style is preeminently a restrictive task  , since syntactic alternatives usually have relatively local effect  . PAULINE's rhetorical goals of style include haste  , formality , detail , simplicity ( see\[Hovy 87 d\]) . Associated with each goal is a set of restrictive strategies or plans that actae criteria at relevant decision points in the realization process  . Consider , for example , the stylistic difference between examples 2 and 3 . The former is more for-real : the sentences are longer  , achieved by using conjunctions ; they contain adverbial clauses , usually at the beginnings of sentences (~ later , at 5:30 amone morning') ; adjectival descriptions are rel-ativised ( a named Winnie Mandela City ' )  ; formal nouns , verbs , and conjunctions are used (% rected , requested , concurrently , permitted =) . In contrast , example 3 seems more colloquial because the sentences are shorter and simpler  ; they contain fewer adverbial clauses ; and the nouns , verbs , and conjunctions are informal ( ffibuilt , asked , at the same time , let =) . Indications of the formality of phrases , nouns , and verbs are stored in discriminations in the lexicon  ( patterned after\[Goldman 75\] )  . 
4 Conclusion
The choices distributed throughouthe generation process are not just a set of unrelated ad hoc decisions  ; they are grammatically related or , through style and slant , convey pragmatic information . Therefore , they require control Since traditional topdown prescriptive planning is u no able to provide adequate control  , a different kind of planning is required . The limited-commitment planning organization of PAULINE illustrates a possible solution  . 
Text planning provides a wonderfully rich context in which to investigate the nature of prescriptive and restrictive planning and execution monitoring -- issues that are also important to general 
AI planning research.
5 Acknowledgement
Thanks to Michael Factor for comments.
6 References 1.


4 o 6.


Appelt , D . E . , 1982 . P/ , ~mu'n ~ Nm / /- ~ mlm ~ ge U ~ ter-w ~ eem to , q ~ i ~ i Mulh ' ple Goelz Ph . D . dissertation , Stanford University . 
Appelt , D . E . , 1982 . Planning Natural Language Ut-teranc ~ . / h~t~d/~#of~S~omlAAA/Co~fe ~,

Appelt , D . E . , 1983 . Telegram : A Grammar Formal-km for Language Planning  . Pme~d/ngs of the ~/ ~?/ CAI Conference , Karlgruhe . 
Appelt , D . E . , 1986 . Planning E~bh Sentee ~ eu . Cambridge : Cambridge University Pre ~ . 
Bienkow=kl , MJL . , 1986 . A Computational Model for Extern poraneou ~ Elabor ~ tions  . Princeton Univerwity Cognitive Science Laboratory Technical Report no I  . 
Bobrow , D . G . & Winograd , T . , 197"/ . An Overview of KRL , a Knowledge-Reprementation Lan Suage . C . o9-Bock , J . K . , 1987 . Exploring Levels of Processing in 5 ent m , ce Production . In N~'w ~/ Language G'e ~ . , r,~on . -Reee ~ Ad ~ nt ~ bt Arl iftei alnt dlige ~ , P ~ Aolo ~ , ~mi/~'nt ~ d~/e  ~ , Kempon G . ( ed ), $51-364 . Boston : Kluwer
Academic Publishers.







Broverman , C . A . & Croft , W . B . , 1987 . Reasoning about Exceptions during Plan Execution Monitoring  . 
P~med/~mo~the ~ Conferee of AAA /, Seattle.
Chm~iak , E . , Riubeck , C . K . & McDermott , D . V , 1980 . Art/JL . mtI~/ee ~ Pmg , umm/ng . Hilkdale :
Lawrence Erlbamn Auociat ~.
Cllppinger , J . H . , 1974 . AD/seourse Spea/d ~ P ~ naP ~ Theo ~ of Di  #eom . meBh~dor and a Limltcd Theo ~ of P ~ jehoaml/~D/ ~ o ~' me  . Ph . D . di ~ ertation,
Univ ~ ity of Pennzylvania.
Dmnkt , J . H . , 1977 . Producing Ideu and Senteneu . In Sentence Pm dud/on . -Detdop , ne~s'nRe ~ are hand The-orll , Rosenberg S . ( ed ), 226-258 . Hilkdale : Lawrence
Erlb-um A ~ oci = tu.
DeSmedt , K . & Kempen , G . , 1987 . Increment , d Sen-fence Production . In Na ~ nd Languace Genemt/on . " Recent Advancem in A ~' ~? iol Int dll genee , P~/chotogg , and Zin-~t/em , Kempen G . ( ed ), 356-870 . Boston : Kluwer
Academic Publisher #.
Doyle , R . J . , Atkin Jon , D . J . & Doshi , R . S . , 1986 . Generating Perception Requemt ~ and Expectations to Ver-ify the Execution of Plans  . Prooee 4a'ngmoft , Jue ~ Com- , fem ~ of AAA / , Philadelphia . 
Durfee , E . H . & Lejer , V . R . , 1986 . Incremental Planning to Controla Blackboard-Bued Problem Solver  . 
Pmeee~ng . of t . k e . F , ~ g / ~ Gon/evm ~ e o . ft~eCom'~eSd-e~S~e ~/ sArn h~1"mt . 
185 15 . Fikes , R~E . , Hart , P . E . & Niisson , N . J . , 1972 . Learning and execut in generalized robot plans . Arh ~ qe/a /
Intdlige ~, 3, 251-288.
16 . Goldman , N . M . , 1975 . Conceptual Generation . In Conceptu ~ In/orm ~ o ~ Pm ce ~' n ?, Schank , R . C . ( ed ), 289-371 . Amsterdam : North . Holl and Publishing

17 . Hobbs , J . R . , 1978 . Why is Discour ~ Coherent ?$111
Technical Note 176.
18 . Hobbs , J . R . , 1979 . Coherence and Coreferenos . 
~' ee Selence , 8(I ), 67-90.
19 . Hovy , E . H . , 1985 . Integrating Text Planning and Production in Generation  . Pmceed/nf~oj't ~ AqnZ/sZ/CA\]
Co~e , e , ? e , Los Angeles.
20 . Hovy , E . H . , 1986a . Some Pragmatic Decision Criteria in Generation . In N~ra ~ Genemh ~ . . New Re~dt ~ in Arh'fwi ~ Intdlieenee , P ~; e~o ~ , and Lin ~ , i ~ t le ~ K empen G . ( ed ), 3-18 . Boston : Kluwer Academic
Publishers , 1987.
21, Hovy , E . H . , 1986b , Putting A~ect into TexL Pro-eeed lnc , olt ~ , Eighth Co , /evince o ! t&~Coen~eeSdmu =
Socletp , Amherst.
Pm0m0 ~ Co~hu/nt ~ . Ph . D . dissertation , Yale University . 
23 . How /, E . H . , 1987 o . Generatin 8 Natural Language under Pragmatic Constraints . Journalo ~ Pmomat ~, 11(6), 889-719 . 
24 . Hovy , E . H . , 1987c . Interpretation i Gener ~ ion . Pro-eee ~ ng ~ olthe Siz ~ Co ~ e ~ , nceo ~ AAA\] , Seattle . 
25 . Hovy , E . H . , 1987 d . What Makes Lan ~ uap Formal ? Pmceed ~ no , . f the Ni~tACo~v~ee ~? eol the Cog~iH ~ eSdme ~
Soe~etg , Seattle.
26 . Kempen , G . , 1976 . Directions for Building a Sen-tents Generator which is Psychologically Plausible  . 
Unpublkhed paper , Yale University.
27 . Kempen , G . , 1977 . Concep ! ; uali~ing and Formulating in Sentence Production . In Se~e ~ ePn ~& wt~n : De-edopme ~ i ~ ~ Je~eA and Theory  , Rosenberg S . ( ed ), 259-274 . Hilisdale : Lawrence Eribaum Aesociates . 
28 . Kempen , G . & Hoenkamp , E , 1978 . A Procedural Grammar for Sentence Production . University of Nijmegen Technical Report , Nijmegen . 
29 . Levelt , W ~ . \] V\[ . & Schriefers , H . , 1987 . StaRes of Lexical Access . In N ~ , , mtr . . , ~ , ~ eGeaemtio ~" Rec~Ad-~anee ~ in Artifidal In ~ dllgense  , P ~ jdu~o ~ , and I . i  ~ . 
Kempen G . ( ed ), 895-404 . Boston : Kluwer Academic

30 . Mann , W . C . & Thompson , S , k . , 1983 . Relational Propositions in Discourse . USC/Information Sciences
Institute Research Report RS-8.~115.
31 . Mann , W . C . & Thompson , S . A . , 1987 . Rhetorical Structure Theory : Description and Construction of Text Structures  . In NaZuml L~nguage Generation : Reeer ~ Ad , ; a neee in Am'tidal Intdlieen ~ , Pal~holo ~ , and Lingei , - t/ee , Kempen G . ( ed ), 85-96 . Boston : Kluwer Academic Publishers . 
32 . McCoy , K . F . , 1985 . The Role of Perspective in Responding to Property Misconceptions  . Proceeding soithe Nimbus XJ CAI Co~el ~ . mee . LosAn~l ~ . 
33. McDonald , D.D .& Pustejovsky , J.D ., 1986.
Description-Directed Natural Language Generation.
Proceedingmelt Ae Ninth IJCAI Conference , Los Angeles . 
84 . McKeown , K . R . , 1982 . Genera ~ ng Nahum / Language in l ~ qJm ~ to Q~m ~ o ~ ~ D  ~  . ~ b ~ eq ~ . riee . 
Ph.D . disesrtation , University Of Pennsylvar ~ a.
85 . Miller , D . P . , 1985 . P/mm/~bySea , w . hTh mugk $ 1mula ~6 o ~ . Ph . D . diesertation , Yale University . 
86 . Novek , HJ . , 1987 . Strategies for Generating Coherent Descriptions of Object Motions in Time-Varying Iro N  , cry . In N~m//m , r ~ eG e ~ L*ro ~ on . . R ~ Nnce ~ in Arti~'ml lntdllomce , P~chologg , and Ldnoui ~ icm , Kempen G . ( ed ), 117-182 . Boston : Kluwer Academic

87 . Paris , C . L . & McKeown , K . IL , 1987 . Discourse Strategies for Descriptions of Complex Physical Objects  . In N~/ . An 4 ~ eG ~ w ~/ on . " NewRe~t ~ in A ~7~/ ~ Intd // genee , Pmuehotol ~6 nd /'/ , 4 u/at/eJ , Kempen G . ( ed ), 97-118 . Boston : Kluwer Academic Publish . 

88 . Paris , C . L . , 1987 . The Useo ~ Ezptidt User Modeb in Te ~ Gensrm ~ o ~ . Tm\]o ~ . ~ to a User's Lewdoi ~ e . 
Ph.D . di?ertation , Columbia University.
89 . Rosenber ~, S . , 1977 . Semantic Constraints on Sen-tenos Production : An Experiment ni Approach  . In Smtme , Pmdae6on : Deedopment ~ in P~o~cha . d The . 
or w , Rosenberg S . ( ed ), 195-228 . Hilisdale : " Lawrence
Eribaum Amoc/ates.
?40.R~nar , D ., 1986. ~ nS#~mm~Gem~ie~ngson
D~?~~a ~ Sema.~c/u.tRep ~ a~onsn.
Ph.D . dissertation , Univemit ~. t Stuttgart.
41 . R6sner D . , 1987 . The Automated News Agency SEM-TEX--a Text Generator for German  . In Nahm ~ Oe ~: ~ a . NewRe~t ~ iaA  ~ if wialI,~dli ~' ~ e,P ~ . Ado ~, and ~, Kempen G . ( ed ), 188-148 . 
Boston : Kluwer Academic Publishers.
42 . Sacerdoti , E . , 1977 . AR~zcho~y or Plen~msg Behat ~ or . 
North . Holland Publishing Company.
45 . Schank , ILC . , 1972 . ' Semantics ' in Conceptual Analysis . Li ~ 30(2), 101-139 . Amsterdam : North-
Holl and Publishing Company.
44 . Schank , R . C . , 1975 . Concept ~ I ~ or m ~ on P ~' e ~, 4 . 
Amsterdam : North-Holland Publishing Company.
45 . Schank , R . C . & Abekon , R . P . , 1977 . Serip ~ P ~ u , Goa/sami U~n ~ ng . Hilisdale : Lawrence Erlbaum


