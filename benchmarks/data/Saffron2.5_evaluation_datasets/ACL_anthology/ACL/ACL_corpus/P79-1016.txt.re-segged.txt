Paraphrasing Using Given and New Information
in a Question Answer System
Kathleen R . McKeown
Department of Computer and Information Science
The Moore School
University of Pennsylvania , Philadelphia , Pa .   19104 ABSTRACT : The design and implementation of a paraphrase component for a natural language quest lon-answer system  ( CO-OP ) is presented . A major point made is the role of given and new information in formulating a paraphrase that differs in a meaningful way from the user's question  . A description is also given of the transformational grammar used by the paraphraser to generate questions  . 
I ? INTRO~ION
In a natural language interface to a database query system  , a paraphraser can be used to ensure that the system has correctly understood the user  . Such a paraphraser has been developed as part of the CO-OP system \[ KAPLAN  79\]  . In CO-OP , an internal representation of the user's question is passed to the paraphraser which then generates a new version of the question for the user  . Upon seeing the paraphrase , the user has the option of rephrasing her/his question before the system attempts to answer it  . Thus , if the question was not interpreted correctly , the error can be caught before a possibly lengthy search of the database is initiated  . Furthermore , the user is assured that the answers/he receives is an answer to the question asked and not to a deviant version of it  . 
The idea of using a paraphraser in the above way is not new  . To date , other systems have used canned templates to form paraphrases  , filling in empty slots in the pattern with information from the user's question \[ WALTZ  78  ; CODD 78\] . In CO-OP , a transformational grammar is used to generate the paraphrase from an internal representation of the question  . Moreover , the CO-OP paraphraser generates a question that differs in a meaningful way from the original question  . It makes use of a distinction between given and new information to indicate to the user the existential presuppositions made In her/his question  . 
II . OVERVIE WOF THECO-OPS ~"3-rEM
The CO-OP system is aimed at infrequent users of database query systems  . These casual users are likely to be unfamiliar with computer systems and unwilling to invest the time needed to learn a formal query language  . 
Being able to converse naturally in English enables such persons to tap the information available in a database  . 
In order to allow the question-answer process to proceed naturally  , CO-OP follows some of the " cooperative principles " of conversation \[ GRICE  75\]  . In particular , the system attempts to find meaningful answers to failed questions by addressing any incorrect assumptions the questioner may have made in her /his question  . When the direct response to a question would be simply " no " or " none "  , CO-OP gives a more informative response by correcting the quest loner's mistaken as stm~tlons  . 
The false assumptions that CO-OP corrects are the existential presuppositions of the question  . * Since these presuppositions can he computed from the surface structure of the question  , a large store of semantic knowledge for inferenclng purposes is not needed  . In * For example , in the question " Which users work on projects sponsored by NASA ?'  , the speaker makes the existential presupposition that there are project smpommred by NASA  . 
67 fact , a lexicon and database schema are the only items which contain domain-specific information  . 
Consequently , the CO-OP system is a portable one ; a change of database requires that only these two knowledge sources be modified  . 
III . THECO-OPPARAP ~% ~ SER
CO-OP's paraphraser provides the only means of error-checking for the casual user  . If the ? , seris familiar with the system , s/he can ask to have the intermediate results printed  , in which case the parser's output and the formal database query will be shown  . The naive user however , is unlikely to understand these results . It is for this reason that the paraphraser was designed to respond in English  . 
The use of English to paraphrase queries creates several problems  . The first is that natural language is inherently ambiguous  . A paraphrase must clarify the system's interpretation of possible ambiguous phrases in the question without introducing additional ambiguity  . 
One particular type of ambiguity that a paraphraser must address is caused by the linear nature of sentences  . A modifying relative clause , for example , frequently cannot be placed directly after the noun phrase it modifies  . In such cases , the semantics of the sentence may indicate the correct choice of modified noun phrase  , but occasionally , , the sentence may be genuinely ambiguouS . For example , question ( A ) below has two interpretations , both equally plausible . The speaker could be referring to books dating from the  '~0s or to computers dating from the '60s  . 
( A ) Which students read books on computers dating from the  '60s ? A second problem in paraphrasing English queries is the possibility of generating the exact question that was originally asked  . If a grammar were developed to simply generate English from an underlying representation of the question this possibility could be realized  . 
Instead , a method must be devised which can determine how the phrasing should differ from the original  . 
The CO-OF paraphraser addresses both the problem of ambiguity and the rephrasing of the question  . It makes the system's interpretation of the question explicit by breaking down the clauses of the question and reordering them dependent upon their function in the sentence  . 
Thus , quest lon ( A ) above will result in either paraphrase ( B ) or ( C )  , reflecting the interpretation the system has chosen  . 
( B ) Assuming that there are books on computers ( those computers date from the '60 s )  , which students read those books ? ( C ) Assuming that there are hooks on computers ( those hooks date from the ' ~ Os )  , which students read those books ? ~1~e method adopted guarantees that the paraphrase will differ from the original except in cases where no relative clauses or prepositional phrases were used  . It was formulated on the basis of a distinction between given and new information and indicates to the user the presuppositions s/he has made in the question  ( in the " assuming that " clause )  , while focussing her/his attention on the attributes of the class s/he is interested in  . 
IV . LINGUISTIC8ACI~ROUND
As mentioned earlier , the lexicon and the database are the sole sources of world knowled qe for CO-OP  . While this design increases CO-OP's portability , it means that little semantic information is available for the paraphraser's use  . Contextual information is also limlte ~ since no running history or context is maintained for a user session in the current version  . 
The input the paraphraser receives from the parser is basically a syntactic parse tree of the question  . Using this information , the paraphraser must reconstruct the question to obtain a phrasing different from the orig inal  . The following question must therefore be addressed : What reasons are there for choosing one syntactic form of expression over another ? Some linguists maintain that word order is af fected by functional roles elements play wi thin the sentence  . * Terminology used to describe the t~pesof roles that can occur varies widely  . Some of the dlstinctons that have been described include given/new  , topic/comment , theme/theme , and presupposition/focus . Definitions of these terms however , are not consistent ( for example , see\[PRINCE ?9\] for a discussion of various usages of " given/new  "   )   . 
Nevertheless , one influence on expression does appear to be the interaction of sentence content and the be liefs of the speaker concerning the knowledge of the listener  . 
Some elements in the sentence function in conveying information which the speaker assumes is present in the " consciousness = of the listener\[CHAFE?fi\]  . This information is said to be contextually dependent  , either by virtue of its presence in the preceding discourse or because it is part of the shared world knowledge of the dialog participants  . In a question-answer sys~ , shared world knowledge refers to information which the speaker assumes is present in the database  . Information functioning in the role just descr ibed has been termed " given "  . 
" New " labels all information in the sentence which is presented as not retrievable from context  . In the declarative , elements functioning in asserting information What the listener is presumed not to know are called new  . In the question , elements funci:ioning in conveying what thes ~ eaker wants to know  ( i . e . -what s/he doesn't know ) represent information which the speaker presumes the listener is not already aware of  . 
Flr basid entifies additional functions in the question  . 
Of these , ( ii ) is used here . to aug~mt the interpretation of new informat ion  . He says : " ( i ) it indicates the want of knowledge on the part of the inquirer and appeals to the informan to satisfy this want  . 
( ii )\ [ a\]iti , ~ erts knowledge to the informant in that it informs him what the inquirer is interested in  ( what is on her/his mind ) and * Some other influences on syntactic expression are discussed in \[ MORGAN and GRE ~   73\]  . They surest that stylistic reasons , in addition to some of the functions discussed here  , determine when different syntactic constructions are to be used  . They point out , for example , that the passive tense is often used in academic prose to avoid identification of agent and to lend a scientific flavor to the text  . 
\[ b \] from what particular angle the int imated want of knowledge is to be satisfied  . "\[FIRBAS 74;\[ . 3 1\] Although word order vis-a-v is these and related distinctions has been discussed in light of the declarative sentence  , less has been said about the interrogative form  . Hell ida7  \[  HALLII14Y   67\] and Krlzkova * are among the few to have analyzed the question  . Despite the fact that they arrive at diffe rent conclusions **  , the two follow similar lines of reasoning . Krlz kova argues that both the wh-item of the wh -question and the finite verb  ( e . g . -" do " or " be ' ) of the yes/no question point to the new information to be disclosed in the response  . These elements she claims , ere the only unknowns to the questioner . 
Helllda7 , in discussing the yes/no question , also argues ~ at the finite verb is the only unknot  . The polarity of the text is in question and the finite element indicates this  . 
In this paper the interprete tion of the unknown elements in the question as defined by Krizkova and Helllday is followed  . The wh-items , in defining the questioner's lack of knowledge  , act as new information . Fir has ' analysis of the functions in questions is used to further elucidate thero leofnew information in questions  . There ~ aining elements are given information . They represent information assumed by the quest ioner to be true of the database domain  . This lapeling of information within the quest i on will allow the construction of a natura l paraphrase  , avoiding ambiquity . 
V . ~ ~
Following the analysis described above , the CO-OP paraphrass r breaks down questions into given and new information  . ~tores~ectfically , an input question is divided into three parts , of which (2) and (3) form the new information . 
(1 ) given information ( 2 ) Function ii ( a \] from Fir has above ( 3 ) Functionil ( b \] from Fir has above In terms of the quest ion components  ,   ( 2 ) comprises the question with no subclauses as it defines the lack of knowledge for the hearer  . Part ( 3 ) comprises the direct and indirect modif iers of the interrogative words as they indicate the angle from which the question Was asked  . They define the attributes of the missing information for the hearer  . Part(1) is fomed from the remaining clauses . 
As an exile , consider question ( D ) :  ( D ) which division of the computing facility works on projects using oceanography research ? Following the outline above  , part ( 2 ) of the para I ~ rase will be the question minus subclauses : ~ ich division works on proj~-te  ?'  , part (3) , the modifiers of the interrogative words , will be " of the computing facility " which modif ies = which division '  . The remaining clause , Summary by ( FZRB ~ 74\] of the untranslated article = The Inter rogative Sentence and Some Problems of the So -called Functional Sentence Perspective  ( Contextual O~anizatlon of the Sentence \] , ~ assrec 4 , IS , ;8 . 
** It ~ ould be noted that Halllda 7 and Krizkova discuss unknowns in the question in order to define the theme end them of a quest ion  . Although they agree the unkno ~ for the quest ioner  , they disagree about whlch elements functlon as ~ and whlch function as theme  . A full discussion of their analysis and conclusions is given in \[ ~ XEO ~  79\]  . 
6 8 " projects using oceanography research " is considered given information  . The three parts can then be assembled into a natural sequence :  ( E ) Assuming that there are projects using oceanography research  , which division works on those projects ? Look for a division of the computing facility  . * In question ( D ) , information belonging to each of the three categories occurred in the question  . If one of these types of information is missing , the question will be presented minus the initial or concluding clauses  . 
Only part ( 2 ) of the paraphrase will invariably occur . 
If more than one clause occurs in a particular category  , the question will be furthered splintered . Additional given information is parenthesized following the " assuming that  . . . " clause . Example ( F ) below illustrates the paraphrase for a question containing several clauses of given information and no clauses defining specific attributes of the missing information  . 
Clauses containing information characterized by category  ( 3 ) will be presented as separate sentences following the stripped-down question  .   ( G ) below demonstrates a paraphrase containing more than one clause of this type of information  . 
( F ) Q : Which users work on project sinoceanography that are sponsored by NASA ? P : Asst ~ mlng that there are project sinoceanography  ( those projects are sponsored by NASA )  , which users work on those projects ? ( G ) Q : Which programmers in superdlvislon 5000 from the ASD group are advised by Thomas Wlrth ? P : Which programmers are advised by Thomas Wlrth ? Look for programmers in superdlvl slon  5000  . 
The programmers must be from the ~. gD group.
VI . IMPLEMENTATION OVER VIEW
The paraphrase r's first step in processing is to build a tree structure from the representation it is given  . The tree is then divided into three separate trees reflecting the division of given and new information In the question  . The design of the tree allows for a simple set of rules which flatten the tree  . The final stage of processing in the paraphraser is translation  . 
In the translation phase , labels In the parser's representation are translated into their corresponding words  . During this process , necessary transformations of the grammar are performed upon the string  . 
Several aspects of the implementation will not be discussed here  , but a description can be found in \[ MCKEOWN 791 . The method used by the paraphraser to handle conjunction  , disjunction , and limited quantification is one of these . A second function of the paraphraser is also described In\[MCKEOWN  79\]  . The set of procedures used to paraphrase the user ' s query can also be used to generate an English version of the parser's output  . If the tree is not divided into given and new information  , the flattening and transfor , mt lonal rules can be applied to produce a question that is not in the three-part form  . rnCO-OP , generation is used to produce corrections of the user's mistaken presuppositions  . 
* This example , as well as all sample questions and paraphrases that follow  , were , = aken from actual sessions with the paraphraser . Question ( A ) m adits possible paraph cases ( B ) and ( C ) are the only examples that were not run on the paraphraser  . 
A . THE PHRA.qESTRUCTURETREE
In its initial processing , the paraphraser transforms the parser's representation into one that is more convenient for generation purposes  . The resultant structure is a tree that highlights certain syntactic features of the question  . This initial processing gives the paraphraser some independence from the CO-OP system  . 
Were the parser's representation changed or the component moved to a new system  , only the initial processing phase need be modified  . 
The paraphraser's phrase structure tree uses the main verb of the question as the root node of the tree  .   1"Ne subject of the main verb is the root node of the left subtree  , the object ( if there is one ) the root node of the right subtree . In the current system , the use of binary relations in the parser's representation  ( see\[KAPLAN 79\] for a description of MetaQuery Language ) creates the illusion that every verb or preposition has a subject and object  . Tneparaphraser's tree does allow for the representation of other constructions should the incccning language use them  . 
Each of the subtrees represents other clauses in the question  . Both the subject and the object of the main verb will have a subtree for each other clause it participates in  . If a noun in one of these clauses also participates in another clause in the sentence  , it will have subtrees too . 
As an example , consider the question : " ~ Fnlch active users advised by Thomas Wirthwork on projects in area  3?"  . The phrase structure tree used in the paraphraser is shown in Figure I  . Since " work " is the main verb , it will be the root node of the tree . " users " is root of the left subtree , " projects " of the right . Each noun participates in one other clause and therefore has one subtree  . Note that the adjective " active " does not appear as part of the tree structure  . Instead , it is closely bound to the noun it modifies and is treated as a property of the noun  . 
+7\ users projects advised by / ~ in
Thoma swlrth area object object
Figurei
B . DIVIDING THETREE
Tneconstructed tree is computatlons llysuited for the three-part paraphrase  . The tree is flattened after it has been divided into subtrees containing given information and the two types of new information  . The splitting of the tree is accomplished by first extracting the topmost smallest portion of the tree containing the wh-item  . At the very least , this will include the root node plus the left and right subtree root nodes  . This portion of the tree is the stripped down question  . The clauses ~ hlch define the particular aspect fror a which the question is asked are found by searching the left and right subtrees for the wh -ltem or questioned noun  . The subtree whose root node is the wh-item contains these clauses  . Note that this may be the entire left or right subtree or may only be a subtree of one of these  . The remainder of the tree represents given information  . Figure 2 illustrates thls division for the previous example  . 
69 i ? fotion
O : Which acl : ive users advised by Thomas Wtrth work on projects in a rea  3? P : Assuming that there are projects in a rea 3  , which active users work on those projects ? Look for users advised by Thomas wirth  . 
Figure 2
C ? FLATT ~ ING
If the structure of the phrase structure t ree is as in Figure  3  , with A the left subtree and B the right , then the following rules define the flat tening process : 
TREE -> ARB
SUBTREE -> R'A*B'
In other words , each of the subtrses will be linearized by doing a preorder treversal of that subtree  . As a node in a subtresh as three pieces of information associated with it  , one more rule is required to expand a node . A node consists of : ( 1 ) arc-lal~l ( 2 ) as t-lahel ( 3 ) subject/object where arc-label is the label of the verb or preposition used in the parse tree and set-label the label of a noun phrase  . Subject/object indicates whether the subnode noun phrase functions as subject or object in the clause  ; it is used by the subject-aux transformation and does not apply to the expansion rule  . The following rule expands a node:
NODE -> ARC-tABEL SET-LABEL
TWo transformations are applied during the fl attening process  . They are wh-frontlng and subject-aux inversion . They are further described in the section on transformations  . 
Tree : a Subtree:

Figure 3
The tree of given information is flattened first . It is part of the left or right subtree of the phrase structure tree and therefore is flattened by a preorder traversal  . It is during the flattening stage that the words " Assuming that there\[be\]  . . . ? are inserted to introduce the clause of given information  . " Be " will agree with the subject of the c lause  . If there is more than one clause , parentheses are inserted around the addition a lones  . The tree representing the stripped doom quest ion is flattened next  . It is followed by the modifiers of the questioned  no~1  . The phrase " Look for " is inserted before the first clause of modifiers  . 

D . TRANSFORMATIONS
The graewar used in the paraphraser is a transformation alone  . In addition to the basic flattening rules described above  , the following transformations are used : ~ an ~ -fr?ntingation ~  . do-support ( ~ subject-aux inversion ~ fflx-hopping k contrsction has deletion The curved lines indicate the ordering restrictions  . 
There are two connected groups of transform at ions  . If wh-fronting applies , then so will do-support , subJect-aux inversion , and affix-hopplng . The second group of transformations is invoked through the application of negation  . It includes do-support , contraction , and affix-hopping . Has-deletion is not affected b 7 the absence or presence of other tranafomations . A description of the transformation rules follo ~ . The rules used here are based on analyses descr ibed by \[ ~ IAN and ~  75\] and analyses described by \[ CULLICOV ~ 76\]  . 
The rule for wh-fronting is specified as follows , where SD abbreviates structural description and SC  , structural change :
SD:X-NP-Yi 23
SC:2+i03 condition : 2 dominates wh
The first step in the implementation of wh -fronting is a search of the tree for the wh - item  . A slightly different approach is used for paraphrasing than is used for generation  . The difference occurs because in the original question  , the NP to be fronted may be the head noun of some relative clauses or prepositional phrases  . 
When generating , these clauses must be fronted along with the heed noun  . Since the clauses of the original que ~ ion are broken down for the paraphrase  , it will never he the case when pars ~ hrssing that the NP to be fronted also dominates relat ive clauses or prepositional phrases  . For this reason , when paraphrase mode is used , the applicability of wh-fronting is tas ted for and is applied in the flattening process of the stripped down question  . If it applies , only one word need be moved to the initial position  . 
When generation is being done , the applicability of wh-fronting is tested for immediately before flattening  . 
If the transformation applies , the tree is split . The subtree of which the wh-itmn is the root is flattened separstely from the remair ~ er of the tree and is attached in fronted position to the string resulting from flattening the other part  . 
After wh-fronting has been applled , do-support is invoked . In CO-OP , the underlying representation of the q ~ aation does not contain mudals or auxiliary verbs  . 
Thus , fronting the wh-item necessitates supplying an auxiliary  . The following rule is used for do-support :
SD:NP-NP-tense-V-X 1234
SC = 1   do+2   3   4 condition = 1 dominates wh SubJect-aux inversion is activated immediately afterwards  . Aqaln , if wh-frontlng applied , subject-aux inversion will apply also . The rule is =
SD:NP-NP-AUX-X
I 234
SC:I3+204 condition : i dominates wh
Affix-hopping follows subject-aux inversion . In the Paraphraser it is a combination of what is commonly thought of as afflx-hopplng and number -agreement  . Tense and number are attributes of all verbs in the Parser's representation  . When an auxiliary is generated , the tense and n~nberare " hopped " from the verb to the auxiliary  . Formally:
SD:X-AUX-Y-tense-nua ~ - V-Zi 234 56
SC : 12+43056
Some transformational analyses propose that wh -frontlng and subJect-aux inversion aPPly to the relative clause as well as the question  . In the CO-OPParaphraser , the heed-noun is properly positioned by the flattening process and wh-frontlng need not be used  . Subject-aux inversion however , may be applicable . In cases where the head noun of the clause is not its subject  , subject-aux inversion results in the proper order . 
? The rule for negation is tested during the translation phase of execution  . It has been formalized as:
SD:X-tense-V-NP-Y 1234
SC:i 2+no   3   4 condition : 3 marked as negative In EheCO-OP representation , an indication of negation is carried on the object of a binary relation  ( see\[KAPLAN 79\] )  . When generating an English representation of the question  , it is possible in some cases to express negation as modification of the noun  ( see question ( H ) below )  . In all cases however , negation can be indicated as Part of the verb ( see version ( I ) of question ( H ) ) . 
Therefore , when the object is marked as negative , the Paraphraser moves the negation to heroine Part of the verbal element  . 
( R ) which students have no advisors ? ( I ) Which students don't have advisors ? In English  , the negative marker is attached to the auxili ary of the verbal element and therefore  , as was the case for questions , an auxiliary must be generated . 
Do-support is used . The rule used for do-support after negation differs from the one used after wh-frontlng  . 
They are presented this way for clarity , but could have been combined into one rule . 
SD:X-tense-V-no-Y 123
SC:1 do + 23
Affix-hopping , as described above , hops the tense , number , and negation from the verb to the auxiliary verb . The cycle of transformations invoked thruappl ication of negation is completed with the contraction transformation  . The statement of the contraction transformation I s " 
SD:X-do+tense-no-Y 1234
SC:I #2+n * t # 0   4 where  #indicates that the result mus the treated as a unit for further transformations  . 
VII . CONCLUSIONS
The paraphraser described here is a sylltactic one  . 
while this work has examined the reasons for d ifferent form e  . ) f expression , additions must be made in the area of semantics  . The substitution of synonyms , phrases , or idioms for portions or all of the question requires an examination of the effect of context on word meaning and of the intentions of the speaker on word or phrase choice  . The lack of a rich semantic base and contextual information dictated the syntactic approach used here  , but the paraphraser can be extended once a wider range of information becomes available  . 
The CO-OP paraphraser has been designed to be domain-independent and thus a change of the database requires no charges in the paraphraser  . Paraphrasers which use the template form hb wever , will require such changes . This is because the templates or patterns , which constitute the type of question that can be asked  , are necessarily dependent on the domain . For different databases , a different set of templates must be used . 
The CO-OPParaphraser also differs from other systems in that it generates the question using a transformational grammar of questions  . It addresses two specific problems involved in generating paraphrases -" I  . ambiguity in determining which noun phrases a relative clause modifies  2  . the production of a question that differs from the user's These goals have been achieved for questions using relative clauses through the application of a theory of given and new information to the generation process  . 
~E ~ NTS
Thls work was partially supported by an IBM fellowship and NSF grant  MCS78-08401  . I would like to thank Dr . 
Aravind K . Joshi and Dr . Bonnie Webbar for their invaluable comments on the style and content of this paper  . 

I . \[A ~4 AJIAN and HENY 75\] . Akmajian , A . and Heny , F . , An Introduct ion to the Pr inciples o f Transformational 
S-~tax,~IT Press__l~/~.
2 . \[CHAFE77\] . Chafe , W . L .   , "Glvenness , Contrastiveness , Definiteness , Subjects , Topics , and Points of View " , Subj ~ t and Topic ( ed . C . N . Li ),
Academic Press , 1977.
3 . \[COOl ) 78\] . todd , E . F . , et el . , Rendezvous Version i - An Experimental English language Quer  7 For mu-~for Casual Users of Relational Data Bases  , IE ~ Researc ~' ~ eport "~' ~2!Y 4"~'~9~7) , IBN Resear-'r ~ La " ~-' ~ or y , 
San Jose , Ca ., 1978.
4 . \[CULLICOVER 76\] . Culllcover , P . W . , Syntax,
Academic Press , N.Y ., 1976.
5 . \[ DANES 74\] . Danes , F . ( ed . ) , Papers on Functional Sentence Perspectiver Academia  , Prague ,  ~7~ 6 . \[FIRBASR6\] . Fir has , Jan , " On Defining the Theme in Functional Sentence Analysis "  , Travaux Lin ~ uistigues de
Praguei , Univ . of Alabama Pres ~.
7 . \[FIRBAS 74\] . Firbas , Jan , "Some Aspects of the Czechoslovak Approach to Problems of Functional Sentence Perspective "  , Papers on Functional Sentence Perspective , 
Academia , Prague , ~\]7~.
8 . \[GOLDEN 75\] . Goldman , N . , " Conceptual Generat ion ' , Conceptual Information Proceesir ~( R . C . Schank ), North-Holland Publishing Co . , Amsterdam , 1975 . 
9 . \[GRICE 75\] . Grlce , H . P . , " Logic and Conversation " , in ~ tax and Sea~mtics , ~ Acts , Vol . 3, ( P . Cole and J . L . Morgan , Ed . ), Academ?c Press , N . Y . , 1975 . 
71 10 . \[ HALLZDA ? 67\] . Balllday , H . A . K . , " Notes on Transltlvlt7 and Theme in ~ l l sh ' , Journal of
L1n~ulst lcs 3,196 7.
11 . \[ HI ~75\] . Heldocn , G . , " Aucp , mted Phrase Structure Grammar ' , TINLAP-1 Proceedl~s , June 1975 . 
12 . \[ JOSHI79\] . Joshl , A . K .   , " Centered Loqlcz the Role of Enttt 7 Centered Sentence Reptuent atton in Natural Language Inferenctng '  , to appear in IJCAI
Proceed in qs 79.
13 . \[KAMAN 79\] . Kaplan , S . J .   , " Cooperative Responses from a Portable Natural Larquage Data Base Query System '  , Ph . D . DlS Seratton , Univ . of Pennsylvenia,
Philadelphia , Pa ., 1979.
14 . \[ MCDONALD 78\]?~ tcDonald , D . O .   , " ~_~__h ~ quent Reference : SynU ~ cic and Rhetorical Constraints '  , 
TINLAP-2 Proceed lrqs , 1978.
15 . \[ MCKEOM ~79\] . McKeown , K . , " Peraphramir~j Usinq Given and New Information In a  0uestion-Answr SyStem ' , forthcoming Master's Thesis , Univ . of Pennsylvania,
Phtledelphla , Pc ., 1979.
16 . \[ MORGAN and GRE~77\] . ~ organ , J . L . and Green , G . M . : " Pra?~natlcs and Reedlnq Comprehensions , University of Illlnols ,  1977 . 
17 . \[ PRINCE79\] . Prince , E . , " On the Gtven/Nw Dist inct ion ' , to appear in CLS 15 ,  1979 . 
18 . \[S Iff ~ ObB and SLOCIR 72\] . Simmons , R . and $ 1ocum , 3 . , " Generattnq Enqllsh Discourse from Semantic Networks "  , Univ . of Texas at Aust tnw C~r Vol . 
5, #10, October 1972.
19 . ~ LTZ78\] . Waltz , D . L . , " An ~ , gllsh Langu ~ e Question Answering System for a Large Relational Database '  , CA(R , Vol . 217, July 1978 . 

