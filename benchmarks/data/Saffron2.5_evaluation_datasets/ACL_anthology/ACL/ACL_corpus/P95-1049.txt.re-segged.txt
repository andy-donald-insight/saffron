Mapping Scrambled Korean Sentences into English Using 
Synchronous TAGs
CHyun S . Park
omputer Laboratory
University of Cambridge
Cambridge , CB23 QG , U.K.
Hyun . Park ~ cl.cam.ac.uk
Abstract
Synchronous Tree Adjoining Grammars
can be used for Machine Translation . However , translating a free order language such as Korean to English is complicated  . I present a mechanism to translates crambled Korean sentences into English by combining the concepts of Multi-Component 
TAGs ( MCTAGs ) and Synchronous TAGs ( STAGs).
1 Motivation
Tree Adjoining Grammars ( TAGs ) were first developed by Joshi , Levy , and Takahashi ( Joshi et al ,  1975) . There are other variants of TAGs such as STAGs ( Shieber and Schabes ,  1990) , and MCTAGs ( Weir ,  1988) . STAGs in particular can be used for machine translation and were applied to KoreanEnglish machine translation in a military message domain  ( Palmer et al ,  1995) . 
Park ( Park ,  1995 ) suggested a way of handling Korean scrambling using MCTAGs together with a priority concept  . However , asscrambled argument structures in Korean were represented as sets using MCTAGs  , a mechanism to combine MCTAGs and STAGs was necessary to translate Korean scrambled sentences into English  . 
2Korean English Machine
Translation Using STAGs
STAGs are a variant of TAGs introduced to characterize correspondences between tree adjoining languages  . They can be used to relate TAGs for two different languages for machine translation  ( Abeill 6 et al . , 1990) . The translation process consists of three steps . The source sentence is parsed according to the source grammar  . Each elementary tree in the derivation is considered with the features given from the derivation through unification  . Second , the source derivation tree is transferred to a target derivation  . 
This step maps each elementary tree in the source derivation tree to a tree in the target derivation tree by looking in the transfer lexicon  . And finally , the target sentence is generated from the target derivation tree obtained in the previou step  . 
The transfer lexicon consists of pairs of trees , one from the source language and the other from the target language  . Within the pair of trees , nodes may be linked . Whenever adjunction or substitution is performed on a linked node in a source tree  , the corresponding operation applies to the linked node in the target ree  . 
i "-':1,"--'," ii"?
Fibre 1: The KE Transfer Lexicon
Canonical ordering of the arguments of transitive verbs in Korean is SOV  . Whereas the case marker in English is implicit in the word  , case markers are explicit in Korean . This is reflected in the transfer lexicon of Figure  1  . So , the pair a in Figure 1 shows that Korean has an explicit subject case marker i  , and the pair / ~ shows that Korean has an explicit object case marker lul  . Also , the pair 7 shows the links between SOV structure of Korean to SVO structure of English  . 
K : Tom-i Jerry-lulc coss nunta.
1 Tom-NOM Jerry-ACC chase
E : Tom chases Jerry.
To translate sentence (1) , we start with the pair 7 in Figure 1 , and we substitute the pair a on the link from the Korean node SP to the English node NP  . 
Then , pair / ~ is substituted into the NP-OP pairs in 7 , thus correctly transferring sentence (1) . 
317 3 Handling of Scrambling in Korean
Using MCTAGs
TAGs and related formalisms , due to the extended domain of locality , can combine a lexical head and all of its arguments in a single elementary structure of the grammar  . However , Becker and Rambow show that TAGs that obey the cooccurrence on straint cannot handle the full range of scrambled sentences  ( Becket and Rainbow ,  1990) . As a result , nonlocal MC-TAG-DL ( Multi-Component TAG with Dominance Link ) was proposed as a way of handling scrambling 1 . Later , by adding a priority concept to MC-TAG-DL , Park ( Park ,  1995 ) suggested a way of handling scrambling in Korean . 
3.1 aAT ~& flAT ~ structures
I " IF . . . \]*" Tom , No : ",
I-'C ,,-,,'\ [1, o

For handling scrambling , the multi-adjunction concept in MCTAGs can be used for combining a scrambled argument and its landing site  . For example , a subject ( e . g . , Tom ) would have two Korean structures as above . For notational convenience , call the two structures , aAT ~ s ~ , and ~ AT~Gs ~ , respectively . In general , a AT~G represents a canonical NP structure and flAT ~ G represents a scrambled NP structure  .  ~ . A ~ s  ~ , shows a pair of structures for representing the scrambled subject argument  . Call the left structure of ~ AT~GsT ~ , flAT~s ~ , and the right structure , ~AT  ~ g  ~ ,  . ~ A~g~s ~, represents a scrambled subject , and ~ . AT~G ~ , is used for representing the place where the subject would have been in the canonical sentence  . Similarly , flAT ~ Go ~ , denotes a pair of structures for representing a scrambled object argument  . 
The basic idea is that whenever an argument is not in a scrambled position  , it should be substituted into an available mpty slot using the aAT ~ structure  . The fiAT ~ G structure will be used only when the argument is in a scrambled position so that the a AT~G structure cannot be used  . 
3.2 An Example
K : Jerry-lul Tom-ic cossnun La.
2 Jerry-ACC Tom-NO Mehase-DECL
E : Tom chases Jerry
From the elementary trees in Figure 2 , both sentences , (1) and (2) can be derived . For example , Figures 2(a ) , 2(b ) , and 2(d ) can be used for sentence (1) , to derive Figure 3(a ) . However , for sentence ( 2 ) where the order is OSV ( the object argument is nAn additional constraint system called dominance links was added  , thus giving rise to MC-TAG-DL . 
mu ?; jo ~ , 0j ' Ii ( a )   ( b )   ( c ) ~AT ~ OoT ~ ( d ) ~i ~ ure 2: Elementary , Trees scrambled ) , Figures 2(a ) , 2(c ) , and 2(d ) are used to derive Figure 3(b ) ( fl , 4T ~ G  ~ , is adjoined onto 5 , and ~ , 4 T~G ~ is substituted into OPl ~ node . ) . As the trace feature is locally set within each flAT ~ structure  , two OP nodes in Figure 3 ( b ) are coreferenced with the same variable ,  < 1 > , indicating where the object should have been in the canonical sentence  . 

ASP Vp
AA
NPIOP VP
NNO~1V
III
I(a ) Canonical ! l " I\J , "---.
( b ) Scrambled
Fi ~ tre 3: Derived Trees
Each elementary tree is given a priority . A higher priority is given to a AT~G structure over flAT ~ G  . 
Generally , when a structure given a higher priority over others can be successfully used for the final derivation of a sentence  , the remaining structures will not be tried at all  . Only when the highest priority structure fails will the next available structure be tried  2  . 
4 Using MCTAGs in STAGs
For mapping Korean to English , the simple object ( NP ) structure of English ( e . g . , the right structure of /3 pair in Figure 1 ) can be mapped to two structures , i . e . , aA~o ~ , and ~ AT~go ~ , , thus generating two possible lexical pairs . 
~ As a way of implementing a verb-final condition in Korean  , /KA'/'~s ~ , structure is dominated by fl . AT~s ~ , , and each S-type verb elementary tree will nave an A/'  . A constraint on the root node , which guarantees that j3~4T ~ type structure cannot be adjoined onto the partially derived tree unless its predicate structure  ( its S-type verb elementary tree ) is already part of the partial derived tree up to that point  . An example including long-distances crambling is shown in  ( Park ,  1995) . 

For translating sentence (1) , the aA~Go ~ , -NP pair is used for Jerry ( similar to the /~ pair in Figure 1 )  . However , in sentence (2) , the/~AT~Go ~ , -NP pair should be used instead for translating the scrambled argument Jerry  ( i . e . , Figure 4(a )) . Thus , it is necessary that a Korean flA:RG structure ( MCTAG ) be mapped to an English NP structure ( TAG ) to transfer as crambled argument in Korean . I assume that there is one head structure for each MCTAG structure  , and that the/~A~G ~ ( placeholder structure ) is the head structure for each/~AT~G structure . The root node of the head structure is always mapped to the root node of the target  ( English ) structure . 
Usually , the nodes in the source language should be linked to each relevant node in the target language  , and vice versa ( in STAGs ) . However , in the case that it is a multicomponent structure  ( e . g . , /~ AT ~) , an adjunction odeneed not necessarily be linked to any node  . If it is not linked to any node of the target language  , the structure can be freely adjoined onto any available node of the partially derived tree of the source language  , which is approximately what scrambling is about . However , substitution nodes will always be linked ( the difference between a substitution node and an adjunction node is that an adjunction ode does not introduce a new structure to the partially derived tree whereas a substitution node always does  )  . 
t ~"-)' . ,' . " l " .   .   .   .   . "( a)K-E Lexicon . , : :"",,~/ oP . .~ . - . . ,~ m .  ,  .   .   .   . -" kr -- .   .   .   . 
~ N ' ~ pt "'11"'"- ii:~:1:~)I . , ~ I:!~~'i": . k2r/V . "" k ~\]" .   .   .   . /I . JL .   .   .  , , ~ . .1 Y'am ( b ) K-E Derived Trees After Applying ( a ) Figure 4: KE Transfer Lexicon and Derived Tree In Figure 4  ( a )  , the root node NP of an English TAG is mapped to the OP node of/~A~G ~  , of a Korean TAG which is a head structure . All the other nodes are mapped to each relevant node except S ~  . As it is not linked , / ~ AT ~ , can be adjoined onto any available node in the partially derived Korean tree  . Actually , the restriction on whether flAT , GoLf , can be adjoined onto a certain node does not come from the formalism of Synchronous TAGs  , but purely from the grammar of Korean TAGs . Figure 4 ( b ) shows the final derived trees for both Korean and English after applying  4  ( a ) to the partially derived trees . 
5 Conc lus ion and Future D i rec t ion Using MCTAGs allows the scrambled argument structure to be represented as a single  ( set ) structure . This makes possible the mapping of Korean scrambledm ' gument structures into English argument structures  . The application of similar mechanisms for other languages and for mapping quasi logical forms to logical forms  ( Alshawi et al , 1992) using STAGs is also being investigated . 

Anne Abeilld , Yves Schabes , and Aravind K . Joshi . 
1990 . Using Lexicalized TAGs for Machine Translation . In Proceedings of the International Conference on Computational Linguistics  ( COLING'90 )  , Helsinki , Finland . 
H . Alshawi , D . Carter , J . Eijck , B . Gamback , R . Moore , D . Moran , F . Pereira , S . Pulman , M . Rayner , and A . Smith .  1992 . The Core Language Engine . MIT Press . 
Tilman Becker and Owen Rainbow.
Distance Scrambling in German.
port , University of Pennsylvania.
1990. Long-
Technical re-
Aravind K . Joshi , L . Levy , and M . Takahashi .  1975 . 
Tree Adjunct Grammars . Journal of Computer and System Sciences . 
Martha Palmer , Hyun S . Park , and Dania Egedi.
1995 . The Application of KoreanEnglish Machine Translation to a Military Message Domain  . 
In Fifth Annual IEEE Dual-Use Technologies and
Applications Conference.
Hyun S . Park .  1995 . Handling of Scrambling in Korean Using MCTAGs . In Second Conference of Pacific Association for Computational Linguistics  . 
Stuart Shieber and Yves Schabes .  1990 . Synchronous Tree Adjoining Grammars . In Proceedings of the 13 th International Conference on Computational Linguistics  ( COLING'90 )  , Helsinki , 

David J . Weir .  1988 . Characterizing Mildly Context-Sensitive Grammar Formalisms  . Ph . D . 
thesis , University of Pennsylvania.

