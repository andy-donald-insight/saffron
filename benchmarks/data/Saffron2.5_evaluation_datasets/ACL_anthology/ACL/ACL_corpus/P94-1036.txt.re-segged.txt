Multiset-Valued Linear Index Grammars :
Imposing Dominance Constraints on Derivations
Abstract
This paper defines multiset-valued linear index gram- 
mar and unordered vector grammar with dominance links  . The former models certain uses of multiset-valued feature structures in unification-based formalisms  , while the latter is motivated by word order variation and by " quasi-trees "  , a generalization of trees . 
The two formalisms are weakly equivalent , and an important subset is at most context -sensitive and polynomially parsable  . 
Introduction
Early attempts to use contextfree grammars ( CFGs ) as a mathematical model for natural anguage syntax have largely been abandoned  ; it has been shown that ( under standard assumptions concerning the recursive nature of clausal embedding  ) the cross-serial dependencies found in Swiss German cannot be generated by a CFG  ( Shieber ,  1985) . Several mathematical models have been proposed which extend the formal power of CFGs  , while still maintaining the formal properties that make CFGs attractive formalisms for formal and computational linguists  , in particular , polynomial parsability and restricted weak generative capacity  . These mathematical models include tree adjoining grammar  ( TAG )   ( Joshi et al , 1975; Joshi ,  1985) , head grammar ( Pollard ,  1984) , combinatory categorial grammar ( CCG )   ( Steedman ,  1985) , and linear index grammar ( LIG ) ( Gazdar ,  1988) . These formalisms have been shown to be weakly equivalent to each other  ( Vijay-Shanker et al , 1987; Vijay-Shanker and Weir ,  1994) ; we will refer to them as " LIG-equivalent formalisms "  . LIG is a variant of index grammar ( IG ) ( Aho ,  1968) . Like CFG , IG is a contextfree string rewriting system , except that the nonterminal symbols in a CFG are augmented with stacks of index symbols  . The rewrite rules push or pop indices from the index stack  . In an IG , the index stack is copied to all nonterminal symbols on the right hand side of a rule  . In a LIG , the stack is copied to exactly one righthand side nonterminal  . 11Note that a LIG is not an IG that is linear ( i . e . , whose productions have at most one nonterminal on the righthand 
Owen Rambow
Univesit@Paris 7
UFR Linguistique , TALANA
Case 7003, 2, Place Jussieu
F-75251 Paris Cedex05 , Francer ambow ? linguist , jussieu , frWhile LIG-equivalent formalisms have been shown to provide adequate formal power for a wide range of linguistic phenomena  ( including the aforementioned Swiss German construction  )  , the need for other mathematical formalisms has arisen in several unrelated areas  . In this paper , we discuss three such cases . First , capturing several semantic and syntactic issues in unification-based formalisms leads to the use of multiset-valued feature structures  . Second , word order facts from language such as German , Russian , or Turkish cannot be derived by LIG-equivalent formalisms  . Third , a generalization of trees to " quasi-trees " ( Vijay-Shanker , 1992) in the spirit of D-Theory ( Marcus et al ,  1983 ) leads to the definition of a new formal system . In this paper , we introduce two new equivalent mathematical formalisms which provide adequate descriptions for these three phenomena  . 
The paper is structured as follows . First , we present the three phenomena in more detail . We then introduce multiset-valued LIG and present some formal properties  . Thereafter , we introduce a second rewriting system and show that it is weakly equivalent to the LIG variant  . We then briefly mention some related formalisms . We conclude with a brief summary . 
Three Problems for LIG-Equivalent
Formalisms
The three problems we present are of a rather different nature  . The first arises from the way a linguistic problem is treated in a specific type of framework  ( unification-based formalisms )  . The second problem derives directly from linguistic data  . The third problem is a formalism which has been motivated on independent  , methodological grounds , but whose formal properties are unknown . 
Multiset-Valued Feature Structures
HPSG ( Pollard and Sag , 1987; Pollard and Sag ,  1994 ) uses typed feature structures as its formal basis  , which are Turing-equivalent . However , it is not necessarily side ) , but rather , it is a contextfree grammar with linear indices ( i . e . , the indices are never copied ) . 
2 63 the case that the full power of the system is used in the linguistic analyses that are expressed in it  . HPSG analyses include information about constituent structure which can be represented as a contextfree phrase-structure tree  . In addition , various mechanisms have been proposed to handle certain linguistic phenomena that relate two nodes within this tree  . One of these is a multiset-valued feature that is passed along the phrase-structure tree from daughter node to mother node  . Multiset-valued features have been proposed for the SLASH feature which handles wh-dependencies  ( Pollard and Sag ,  1994 , Chapter 4) , and for certain semantic purposes , including the representation of stored quantifiers in a mechanism similar to Cooper -storage  . Another use may be the representation fant i -coreference constraints arising from Principle C of Binding Theory  ( be it that of ( Chomsky , 1981) or of Pollard and Sag (1992)) . 
It is desirable to be able to assess the formal power of such a system  , for both theoretical and practical reasons . Theoretically , it would be interesting if it turned out that the linguistic principles formulated in HPSG naturally lead to certain restricted uses of the unification-based formalism  . Clearly this would represent an important insight into the nature of grammatical competence  . On the practical side , formal equivalences can guide the building of application such as parsers for existing HPSG grammars  . For example , it has been proposed that HPSG grammars can be " compiled " into TAGs in order to obtain a computationally more tractable system  ( Kasper ,  1992) , thus sidestepping the issue of building parsers for HPSG directly  . 
However , LIG-equivalent formalisms cannot serve as targets for compilations in cases in which HPSG uses multiset-valued feature structures  . 
Word Order Variation
Becket et al (1991) discuss scrambling , which is the permutation of verbal arguments in language such as German  , Korean , Japanese , Hindi , Russian , and Turkish . If there are embedded clauses , scrambling in many languages can affect arguments of more than one verb  ( " long-distance " scrambling )  . 
(1)  .   .   . dab\[den Kiihlschrank \] ibisher noch .   .   . that the refrigerator Accs of ary et niem and \[ ti zure parieren \] versprochen hat no-ones oM to repair promised has  .   .   . that so far , no one has promised to repair the refrigerator Scrambling in German is " doubly unbounded " in the sense that there is no bound on the number of clause boundaries over which an element can scramble  , and an element scrambled ( long-distance or not ) from one clause does not preclude the scrambling of an element from another clause :  ( 2 )   .   .   . dab\[demKunden\]i\[denKfihlschrank\]j .   .   . that the client DAW the refrigerator Accbisher nochniem and ti\[\[tj ZU reparieren \] so far yet no-one NoM to repair zu versuchen \] versprochen hattotry promised has  .   .   . that so far , no one yet has promised the client to repair the refrigerator Similar data has been observed in the literature for other languages  , for example for Finnish by Karttunen (1989) . Becker et al ( 1991 ) argue that a simple TAG ( and the other LIG-equivalent formalisms ) cannot derive the full range of scrambled sentences  . Rambow and Satta ( 1994 ) propose the use of unordered vector grammar ( UVG ) to model the data . In UVG ( Cremers and Mayer ,  1973) , several contextfree string rewriting rules are grouped into vectors  , as for verspricht'promises': ( 3 )   ( ( S --+ NPnom VP )  , ( VP-4NPdat VP ) , ( VP--~S inf V ) , ( V~verspricht )) During a derivation , rules from a vector can be applied in any order , and rules from different vectors call be interleaved  , but at the end , all rules from an instance of a vector must have been used in the derivation  . By varying the order in which rules from different vectors are applied  , we can derive different word orders . Observe that the vector in ( 3 ) contains exactly one terminal symbol ( the verb )  ; grammars in which every elementary structure ( vector in UVG , tree in TAG , rule in CFG ) contains at least one terminal symbol we will call lexicalized  . 
Languages generated by UVG are known to be context -sensitive and semilinear  ( Cremers and Mayer , 1974) and polynomially parsable ( Satta ,  1993) . However , they are not adequate for modeling natural language syntax  . In the following example ,   ( 4a ) is out since there is no analysis in which the moved NPc-commands its governing verb  , as is the case in (4b ) . 
(4) a .  *  .   .   . dabniemand\[demKundeu\]\[ti .   .   . that no-ones oM the client DATZU versuchen\]\[ den Kiihlschrank \] jvers prochent otry the refrigerator Acc promised hat\[tj zure parieren\ ] i has to repair b  .  ?  .   .   . daftniemand\[demKunden\]\[den Kiihlschrank \] j\[tizu versuchen\]versprochen hat\[tj zu reparieren \] iW hat is needed is an additional mechanism that enforces a dominance relation between the sister node of an argument and its governing verb  . 
Quasi-Trees
Vijay-Shanker ( 1992 ) introduces " quasi-trees " as a generalization of trees  . He starts from the observation that the traditional definition of tree adjoining gram -proach because the trees of a TAG start out as fully specified objects  , which are later modified ; in particular , immediate dominance relations in a tree need not hold after another tree is adjoined into it  . In order to arrive at a definition that is compatible with a unification-based approach  , he makes three minimal assumptions about the nature of the objects used for the representation of natural language syntax  . The first assumption ( left implicit ) is that these objects represent phrase-structure . The second assumption is that they " give a sufficiently enlarged domain of locality that allows localization of dependencies such as subcategorization  , and filler-gap " ( Vijay-Shanker ,  1992 , p . 486) . The third assumption is that dominance relations can be stated between different parts of the representation  . These assumptions lead Vijay-Shanker to define quasi-trees  , which are partial descriptions of trees in which " quasi-nodes "  ( partial descriptions of nodes ) are related by dominance constraints . Each node in a traditional tree ( as used in TAG ) corresponds to two quasi-nodes , a top and a bottom version , such that the top dominates the bottom . 
There are two ways of interpreting quasi-trees : either quasi-trees can be seen as data structures in their own right  ; or quasi-trees can be seen as descriptions of trees whose denotations are sets of  ( regular ) trees . 
If quasi-trees are defined as data structures , we can define operation such as adjunction and substitution and notions such as " derived structure "  . More precisely , we define quasi-trees to be structures consisting of pairs of nodes  , called quasi-nodes , such that one is the " top " quasi-node and the other is the " bottom " quasi-node  . The top and bottom quasi-node of a pair are linked by a dominance constraint  . Bottom quasi-nodes immediately dominate to pquasi -nodes of other quasi-node pairs  , and each top quasi-node is immediately dominated by exactly one bottom quasi-node  . For simplicity , we will assume that there is only a bottom root quasi-node  ( i . e . , no top root quasi-node ) , and that bottom frontier quasi-nodes are omitted ( i . e . , frontier nodes just consist of top quasi-nodes ) . Furthermore , we will assume that each quasi-node has a label , and is equipped with a finite feature structure . A sample quasi-tree is shown in Figure 1 ( quasi-tree a5 of Vijay-
Shanker (1992, p . 488)).
We follow Vijay-Shanker (1992, Section 2 . 5 ) in defining substitution as the operation of forming a quasi-node pair from a frontier node of one tree  ( which becomes the top node ) and the root node of another tree ( which becomes the bottom node )  . As always , a dominance link relates the two quasi-nodes of the newly formed pair  . 
Adjunction is not defined separately : it suffices to say that a pair of quasi-nodes i " broken up  "  , thus forming two quasi-trees . We then perform two substitutions . 
Observe that nothing keeps us from breaking up more than one pair of quasi-nodes in either of two quasi-trees  , and then performing more than two substitutions ( as $
NPS
Is
NP VP v P
V e
Figure 1: Sample quasi-treelong as dominance constraints are respected  )  ; there are no operations in regular TAG that correspond to such operations  . We will say that a quasi-tree is derived if in all quasi-node pairs  , the two quasi-nodes are equated , meaning that they have the same label and the two feature structures are unified  , and furthermore , if all frontier quasi-nodes have termina labels . The string associated with this quasi-tree is defined in the usual way  . 
We have now fully defined a formalism ( if informally ) : its data structures ( quasi-trees )  , its combination operation ( substitution ) , and the notion of derived structure . We will call this formalism Quasi-Tree Substitution Grammar  ( QTSG )  . It can easily be seen that all examples discussed by Vijay-Shanker  ( 1992 ) are derivations in QTSG . The question arises as to the formal and computational properties of QTSG  . 
Multiset-Valued LIG
In order to find a mathematical model for certain uses of multiset-valued feature structures  , discussed above , we now introduce a multiset-valued variant of LIG  . We denote by . A4 ( A ) the set of multisets over the elements of A , and we use the standard set notation to refer to the corresponding multiset operations  . 
Definition 1 A multlset-valued Linear Index Grammar ( -LIG ) is a 5-tuple ( tiN , VT ,  ~ , P , S ) , where VN , VT , and VI are disjoint sets of terminals , nonterminals , and indices , respectively ; SEVN is the start symbol ; and P is a set of productions of the following form : p : As  ) voBls lvl .   .   . v ~- lB , snvn for some n > O , A , B1, .   .   . , BnEVN , s , sl, .   .   . , sn multisets of members of VI , and vo , .   .   . , vnEV ~ . 
The derivation relation ~ for a-LIG is defined as follows  . Let ~, 7? ( VN-A4(~) UVT )*, t,tl, .   .   .   , tn multisets of members of VI , and p ? P of the form given above . Then we have ~ At 7~ ~ voBlt lvx ? . . vn - lB , t~v~7 such that t = U~=l(ti \ si)Us . If G is a-LIG , L(G ) = wIS = Z = ~ cw,w ? v 4 . 

Suppose we want to apply rule p to an instance of nonterminal A with an index multiset in a sentential form  . First , we remove the indices in s from t , then we rewrite the nonterminal , then we distribute the remaining indices freely among the newly introduced nonterminals  B1  ,   .   .   .   , Bn , creating new multisets , and finally we adds i to the new multiset for each Bi  , creating the new ti . 
The reader will have noticed , and hopefully excused , the abuse of notation in this definition , which results from mixing set-notation and string -notation  . We can also define-LIG as a pure string -rewriting system which does not require the definition of additional data structures  ( the multisets ) for the notion of " derivation " ( see ( Rambow ,  1994)) . However , the definition provided here ( using an explicit representation of multisets ) has the advantage of corresponding more directly to the intuition underlying-LIG and is much easier to understand and use in proofs  . The issue is purely notational . 
We now introduce a restriction on derivations , which will be useful later . 
Definition 2 A linearly-restrlcte derivation in a- LIG is a derivation  0 : S~w with wEV ~ . such that : I . The number of index symbols added ( and hence removed ) during the derivation is linearly bounded by

2 . The number ore-productions used during the derivation is linearly bounded by Iwl  . 
We let LR ( G ) = wI there is a derivation e : S~w such that 0 is linearly-restricted , and we let ? R(-LIG ) = LMG)\[Ga-LIG . If G is a-LIG such that LR(G ) = L(G ) , we say that G is linearly restricted . Many of the results that we will show apply only to linearly restricted-LIGs  . However , as we will see , all linguistic applications will make use of this restricted version  . 
EXAMPLE 1
The following grammar derives the language COUNT-5 , where COUNT-5=anbncndneIn > 0 . 
Let G1 = ( VN , VT , VI , P , S ) with:
VN = S,A,B,C,D,E
VT = a , b , d , e ? = s ~, Sb , S ~ , Sd , S ~
P = PI:S > SS a , Sb , Sc , Sd , S ~
P2: S~ABC DE
P3: As~~Aa , P4: A--~Ep5:BSb>Bb , P6: B-----+EpT:Cs~----rCc , ps:C~ep9:Dsd > Dd , Plo:D >
Pll : Ese ) Ee , Pl ~: E > e
A sample derivation is shown in Figure 2.
This example shows that Z : ( -LIG ) is not contained in /: ( LIG )  , since the latter cannot derive COUNT-5 . We now define two normal forms which will be used later  . 
We omit the proofs and refer to ( Rambow , 1994) for details . 
Definition 3A-LIGG = ( VN , VT , VI , P , S ) is in restricted index normal form or RINF if all productions in P are of one of the following forms ' where 
A , BEVN , fEVI and a E(VTUVN )*) : 1 . A ) ag . A ) B f 3 . AI ~ B Theorem 1 For any - LIG , there is an equivalent-LIG in RINF . 
Definition 4A-LIGG = ( VN , VT , V  ~ , P , S ) is in Extended Two Form ( ETF ) if every production in P has the form As --+ BlSlB~S2  , As--*Bs' , or A-*a , where A , B x , B2EVN , s , sl , s2 , s ' EVI * , and a EVT Ue . 
Theorem 2 For any - LIG , there is an equivalent-LIG in ETF . 
We now discuss some formal properties of-LIG.
For reasons of space limitation , we only sketch the proofs ; full versions can be found in ( Rain bow ,  1994) . 
We start with the weak generative power . We have already seen that-LIG can generate languages not in ?  ( LIG )   ( and hence not in ? ( TAG ) ) . We will now show that linearly restricted-LIGs are at most context-sensitive  . 
Theorem 3 ? R(-LIG)_C ? ( CSG).
Outline of the proof . We simulate a derivation in a linear bounded automaton  . The space needed for this is bounded linearly in the length of the input word  , since the number of the symbols that are erased , the index symbols and nonterminals that rewrite to ?  , is linearly bounded . ? What sort of languages could a-LIG possibly not generate ? Consider the copy language L = ww \] wEa  , b * , and let us suppose that it is generated by G , a-LIG . This language cannot be generated by a CFG . 
We therefore know that for any integer M , there are infinitely many strings in L whose derivation in G is such that at some point  , an index multiset in the sentential form contains more than Mind exsymbols  ( since any finite use of index symbols can be simulated by a pure CFG  )  . It must be the case that this unbounded multiset is crucial in restricting the second half of the generated string in such a way that it copies the first half  ( again , since a pure CFG cannot derive such strings ) . However , it is impossible for a data structure like a ( multi- ) set ( over a finite index alphabet ) to record the required sequential information . Therefore , the second half of the string cannot be adequately constrained  , and G cannot exist . This argument nmtivates the following conjecture . 
Conjecture 4wwlwEa , b * is not in ?: (- LIG).

SSS a , 8b , Se , 8d , Be
S8a , Sb , 8e , Sd , Se , Sa , 8b , Se , Sd , Se , Sa , Sb , Se , Sd , SeAsa , sa , saBsb , Sb , sbCsc , sc , scDsd , Sd , sdEso , s e , seAs . , s . , s . Bsb , Sb , sbCso , soe DSd , Sd , SdEs , s . , aaaBSb , 8b , 8bCo , oe Dd , sdE80, s . a a a b b b c c c c d d d e e e Figure 2: Sample derivation in-LIG G1 
We now turn to closure properties.
Theorem 5L : ( -LIG ) is a substitution-closedfull abstract family of languages  ( AFL )  . 
Outline of the proof . Since ? ( -LIG ) contains all contextfree languages , it contains all regular languages , and therefore it is sufficiento show that L : ( -LIG ) is closed under intersection with regular languages and substitution  . These results are shown by adapting the techniques used to show the corresponding results for 
CFGs.?
Finally , we turn to the recognition and parsing problem . Again , we will restrict our attention to the linearly restricted version of - LIG  . 
Theorem 6 Each language in / ~ R ( -LIG ) can be recognized in polynomial deterministic time  . 
Outline of the proof . We extend the CKY parser for CFG . Let G be a-LIG in ETF . Since G may containe-productions , the algorithm is adapted by letting the indices of the matrix refer to positions between symbols in the input string  , not the symbols themselves . 
In order to account for the index multiset , we let the entries in the recognition matrix be pairs consisting of a nonterminal symbol and a\[ Yl-tuple of integers :  ( A , ( nl ,   .   .   .   , nlv , I ) ) The IVil-tuple of integers represents a multiset  , with each integer designating the number of copies of a given index symbol that the set contains  . In an entry of the matrix , each pair represents a partial derivation of a substring of the input string  . More precisely , if the input word is al .  -  . an , and if ~= il, .   .   . , ilv , I , then we have ( A , ( nl , .   .   .   , nlvd )) in entry ti , j of the recognition matrix if and only if there is a derivation As : := ?  . ai+l .   .   . aj , where multisets contains nk copies of index symbol it  , , 1 < k < I vii . Clearly , there is a derivation in the grammar if and only if entry  t0  , n contains the pair ( S ,  (0  ,   .   .   .  ,0) )  . Now since the grammar is linearly restricted , each nk is bounded by n , and hence the number of different pairs is linearly bounded by IVN In W'I  . Thus each entry in the matrix can be computed in O  ( nl+21 vd ) steps , and since there are O(n2) entries , we get an overall time complexity of
O(n3+21v,I).?
UVG with Dominance Links
We now formally define UVG with dominance links ( UVG-DL )  , which serves as a formal model for the second and third phenomena introduced above  , word order variation and quasi-trees . The definition differs from that of UVG only in that vectors are equipped with dominance relations which impose an additional condition on derivations  . Note that the definition refers to the notion of derivation tree of a UVG  , which is defined as for CFG . 
Definition 5 An Unordered Vector Grammar with Dominance Links  ( UVG-DL ) is a 4-tuple ( VN , VT , V , S ) , where VN and VT are sets of nonterminals and terminals  , respectively , S is the start symbol , and V is a set of vectors of contextfree productions equipped with dominance links  . For a given vector vEV , the dominance links form a binary relation domv over the set of occurrences of nonterminals in the productions of v such that if domv  ( A , B ) , then A ( an instance of a symbol ) occurs in the right hand side of some production inv  , and B is the lefthand symbol ( instance ) of some production in v . 
If G is a UVG-DL , L ( G ) consists of all words wEVY t which have a derivation p of the form such that ~ meets the following two conditions :  1  . piP2? ? . Pr is a permutation of a member of V * . 
2 . The dominance relations of V , when interpreted as the standard dominance relation defined on trees  , hold in the derivation tree of ~ . 
The second condition can be formulated as follows : if v in V contributes instances of productions Pl and  P2   ( and perhaps others )  , and the kth daughter in the right hand side of Pl dominates the lefthand nonterminal of  P2  , then in the contextfree derivation tree associated with #  ( the unique node associated with ) the kth daughter node of pl dominates ( the unique node associated with ) P2 . We now give an example .   ( The superscripts distinguish instances of symbols and are not part of the nonterminal alphabet  . )
EXAMPLE2
Let G2----(VN , VT , V , St ) with : v2: ( VP (1) ~ NP nom VP(2)) , ( VP (3) dom ~= ( VP (2) , V p(S )) , ( VP (4) , VP ( S)) , ( VP (~) , VP(S )) vz : ( VP(1)----+ VP ( DV p(2)) ,   ( Vp ( 3 ) - - - - + zu versuchen ) with dom vs v4: ( Vp ( D - - - - + NF acc VP ( 2 ) ) , ( VP (3) > zure parieren ) with dome , v h : ( NP nom - ' - + der Meister ) with dom vs = v6: ( NP dat ~ nieman dem ) with dome . = 0vr : ( NP acc ~ denK ~ hlschrank ) with dome , = 0) NP dat Vp(4)) , ( VP (5) ---+ VP (6) VP ( r)) , ( VP(s ) > verspricht ) with . 
= ( VP(2), Vp(3)) = ( VP (~), Vp(3))
Figure 3: Definition of V for UVG-DLG2
NP ? ~) " . . . vP(p41)'?'?o *= oO . Oo..
der Meister NP(Pn ) "'" ' . . ._. ~ ..( ~ l ) . . . .
den Kuehlschrank VP(_Pz2):"" . . . VP ( IP 42) ~ .   .   .   .   .  " . !*% ? NP(i61)"VP(P23)"' . oizure parier enniemandem VPIP ~2 ) VP IP 24 ) zuver such enverspricht
Figure 4: Sample UVG-DL derivation
VN=S',VP,NPnom,NPdat,NPaec
VT = daft , verspricht , zuver suchen , zure parieren , der Meister , nieman dem , den Kiihlschrank 2
V = vx , v2 , v3 , v4 , vh , vr , VT where the vi are as defined in Figure 3 . 
A sample derivation is shown in Figure 4 , where the dominance relations are shown by dotted lines  . Observe that the example grammar is lexicalized . We will denote the class of lexicalized UVG-DL by UVG-DLLex  . 
It is clear that the dominance links of UVG-DL are the additional constraints that we argued above are necessary to adequately restrict the structural relation between arguments and their verbs  . Furthermore , UVG-DL is a notational variant of QTSG : every vector represents a quasi-tree  , and identifying quasi-nodes corresponds to rewriting  . The condition on a successful derivation in QTSG -that all nonterminal nodes be identified - corresponds to the definition of a derivation in UVG-DL  . We have therefore found a mathematical model for the second and third phenomenon mentioned ~ Gloss  ( in order ) : that , promises , to try , to repair , the master , no one , the refrigerator . 
in Section 2.
We now turn to the formal properties of UVG-DL.
Our main result is that UVG-DL is weakly equivalenl ~ to-LIG  . The sets of a-LIG implement the dominance links and make sure that all members from one set of rules are used during a derivation  . We first introduce some more terminology with which to describe the derivations of UVG-DLs  . If two productions P ~ , 1 and Pv , 2 from vector v are linked by a dominance link from a righthand side nonterminal of p~  , l to the left . -h and nonterminal P v , 2 , then we will denote this link by l , ,1 , ~ . We will say that p ~ . l ( or the right hand side nonterminal in question ) has a passive dominance requirement of Iv , l , 2 , and that Pv , 2 has an active dominance requirement of Iv , l , 2 . If Pv , 1 or Pv , 2 is used in a partial derivation such that the other production is not used in the derivation  , the dominance requirement ( passive or active ) will be called unfulfilled . Let ~0 bea ( partial ) derivation . We associate with  #a multiset which represent all the unfulfilled active dominance requirements of  ~0  , written T ( L0) . 
Theorem 7 ~ ( UVG-DL ) = L : ( -LIG ) parts ( one for each inclusion )  . We first show the inclusion Z ( UVG-DL ) C_L: ( -LIG )  . Let G = ( VN , Vw , V , S ) beaU VG-DL , where V =  Vl ,   .   .   . , vK with vi = ( pi,1, . . . , pi , k , ), kl = Ivil , 1<i < K . We construct a-LIGG '= ( VN , VT , Yi , P , S ) . Let Yi = li,j,kI1<i < K,1<j,k<ki . Define P as follows . 
Let v in V , and let p inv be the production A ) Wo Bl Wl .   .   . B ~ w , beiny r . In the following , we will denote by T ( p ) the multiset of active dominance requirements of p  , and by . l-i ( p ) the multiset of passive dominance requirements of Bi  , 1 < i < n . Add to P the following production : A T ( p ) ~ woBI . J-I ( p ) wl ' " " Bn-l-n ( p ) wnP contains no other productions . We show by induction that for A in VN , and w in V . ~, we have A = ~ a w iff A = ~= :' c'w . Specifically , we show that for all integer skk , 0: A = : ~ cw , wEV ~ , with unfulfilled active dominance requirements T ( 0 )  , implies that there is a derivation AT ( 0 ) = ~ : ?' G'w , and , conversely , we show that forial linteger sk , A t == ~ G , a , AEVN , t a multiset of elements of l/i , and a EV ~ , implies that there is a derivation 0 : A = ~ Ga such that T ( 0  ) = t . 
For the inclusion/:(-LIG ) CL:(UVG-DL ) , we take a slightly different approach to avoid notational complexity  . Let G = ( VN , VT , Vx , P , S ) bea-LIG in RINF . We construct a UVG-DLG '= ( VN , VT , V , S ) , where V is defined as follows : 1 . If pEP is a-LIG production of RINF type 1 , then (( p ) , 0) EV . 
2 . If pEP is a-LIG production of RINF type 2 , with p = A ----+ Bf for A , BEVN , fEI , ~ , then for all qEP such that q = Cf~D , v = (( A
B,C.~D ), domv(B,C )) is in V .
Let AbeintiN , and w in V ~ . We show by induction that S = ~ : ~ a w iff S = ~ : ~ a ' w  . Specifically , we first show that for all integers k , for all-LIGs G and the corresponding UVG-DLG ' as constructed above  , if there is a derivation t ~: S ~ : : ~ ew with k instances of applications of rules of type  2  , then there is a derivation 0 ': S : ~: : ~ a'w such that 0 and O ~ are identical except for the index symbols in the sentential forms of  0  . For the converse inclusion , we show that for all integers k , for all-LIGs G and the correspond UVG-DLG ~ as constructed above  , if there is a derivation O':S ~ a , w with k instances of applications of rules from vectors with two elements  , then there is a derivation O : S : : ~= ~ aw such that g and  0 ~ are identical except for the index symbols in the sentential forms of  0  . ? This equivalenceltsus transfere sults from- LIG to UVG-DL  . It can easily be seen from the construction employed in the proof of Theorem  7 that a lexicalized UVG-DL maps to a linearly restricted-LIG  . For linguistic purposes we are only interested in lexicalized grammars  , and therefore the linear restriction is quite natural  . We obtain the following corollaries thanks to
Theorem 7.
Corollary 8 L : ( UVG-DLLex ) C_LI ( CSG).
Corollary 9L: ( UVG-DL ) is a substitution-closed full

Corollary 10 Each language in /: ( UVG-DLLex ) can be recognized in polynomial deterministic time  . 
Related Formalisms
Based on word-order facts from Turkish , Hoffman ( 1992 ) proposes an extension to CCG called-CCG , in which arguments of functors form sets , rather than being represented in a curried notation  . Under function composition , these sets are unioned . Thus the move from CCG to-CCG corresponds very much to the move from LIG to-LIG  . We conjecture that ( a version of ) -CCG is weakly equivalent to-LIG . 
Staudacher ( 1993 ) defines a related system called distributed index grammar or DIG  . DIG is like LIG , except that the stack of index symbols can be split into chunks and distributed among the daughter nodes  . However , the formalism is not convincingly motivated by the linguistic data given  ( which can also be handled by a simple LIG ) or by other considerations . 
Several extensions to-LIG and UVG-DL are defined in  ( Rambow ,  1994) . First , we can introduce the " integrity " constraint suggested by Becker et al  ( 1991 ) which restricts long-distance relations through nodes  . 
This is necessary to implement the linguistic notion of " barrier " or " island "  . Second , we can define the tree-rewriting version of UVG -DL  , called V-TAG . This is motivated by Conjecture 4 , which ( if true ) means that UVG-DL cannot derive Swiss German . Under either extension , the weak generative power is extended , but the formal and computational results obtained for-LIG and UVG-DL still hold  . 

This paper has presented two equivalent formalisms  , -LIG and UVG-DL , which provide formal models for the three different phenomena that we identified in the beginning of the paper  . We have shown that both formalisms , under certain restrictions that are compatible with the motivating phenomena  , are restricted ill their generative capacity and polynomially parsable  , thus making them attractive candidates for modeling natural language  . Furthermore , the formalisms are substitution-closed AFLs , suggesting that the definitions we have given are " natural " from the point of view of formal language theory  . 

I would like to thank BobKasper , Gai~lle Recourcd , Giorgio Satta , EdStabler , two anonymous reviewers , and discussions . The research reported in this paper was conducted while the author was with the Computer and Information Science Department of the University of Pennsylvania  . The research was sponsored by the following grants : A RODAAL  03-89-C-0031  ; DARPAN 00014-90-J-1863 ; NSF IRI90-16592 ; and Ben
Franklin 91S .3078C-1.

Aho , A . V .  (1968) . Indexed grammars - an extension to contextfree grammars  . JACM , 15:647-671 . 
Becker , Tilman ; Joshi , Aravind ; and Rambow , Owen (1991) . Long distances crambling and tree adjoining grammars  . In Fifth Conference of the European Chapter of the Association for Computational Linguistics  ( EACL'91 )  , pages 2126 . ACL . 
Chomsky , Noam (1981) . Lectures in Government and Binding . Studies in generative grammar 9 . Foris,

Cremers , A . B . and Mayer , O .  (1973) . On matrix languages . Information and Control , 23:86-96 . 
Cremers , A . B . and Mayer , O .  (1974) . On vector languages . J . Comput . Syst . Sei . , 8:158-166 . 
Gazdar , G .  (1988) . Applicability of indexed grammars to natural languages  . In Reyle , U . and Rohrer , C . , editors , Natural Language Parsing and Linguistic
Theories . D . Reidel , Dordrecht.
Hoffman , Beryl (1992) . A CCG approach to free word order languages . In 30th Meeting of the Association for Computational Linguistics  ( ACL'92 )  . 
Joshi , Aravind ; Levy , Leon ; and Takahashi , M(1975) . 
Tree adjunct grammars . J . Comput . Syst . Sci . , 10:136-163 . 
Joshi , Aravind K .  (1985) . How much context sensitivity is necessary for characterizing structural descriptions -- Tree Adjoining Grammars  . 
In Dowty , D . ; Karttunen , L . ; and Zwicky , A . , editors , Natural Language Processing -- Theoretical , Computation alnd Psychological Perspective , pages 206-250 . Cambridge University Press , New York , NY . Originally presented in 1983 . 
Karttunen , Lauri (1989) . Radica lexicalism . In Baltin , Mark and Kroch , Anthony S . , editors , Alternative conceptions of phrase structure , pages 43-65 . University of Chicago Press , Chicago . 
Kasper , Robert (1992) . Compiling head-driven phrase structure grammar into lexicalized tree adjoining grammar  . Presented at the TAG+Workshop , University of Pennsylvania . 
Marcus , Mitchell ; Hindle , Donald ; and Fleck , Margaret (1983) . D-theory : Talking about talking about trees . In Proceedings of the 21st Annual Meeting of the Association for Computational Linguistics  , 
Cambridge , MA.
Pollard , Carl (1984) . Generalized phrase structure grammars , head grammars and natural language . 
PhD thesis , Stanford University , Stanford , CA.
Pollard , Carl and Sag , Ivan (1987) . Information-Based Syntax and Semantics . Vol 1: Fundamentals . CSLI . 
Pollard , Carl and Sag , Ivan (1992) . Anaphors in English and the scope of binding theory  . Linguistic
Inquiry , 23(2):261-303.
Pollard , Carl and Sag , Ivan (1994) . Head-Driven Phrase Structure Grammar . University of Chicago Press , Chicago . Draft distributed at the Third European Summer School in Language  , Logic and Information , Saarbriicken ,  1991 . 
Rambow , Owen (1994) . Formal and Computational Models for Natural Language Syntax  . PhD thesis , Department of Computer and Information Science , University of Pennsylvania , Philadelphia . 
Rambow , Owen and Satta , Giorgio (1994) . A rewriting system for free word order syntax that is nonlocal and mildly context sensitive  . In Martfn-Vide , Carlos , editor , Current Issues in Mathematical Linguistics , North-Holland Linguistic series , Volume 56 . Elsevier-North Holland , Amsterdam . 
Satta , Giorgio (1993) . Recognition of vector languages . 
Unpublished manuscript , Universith di Venezia.
Shieber , Stuart B .  (1985) . Evidence against the context-freeness of natural language  . Linguistics and Philosophy , 8:333-343 . 
Staudacher , Peter (1993) . New frontiers beyond context-freeness : DI -grammars and DI-automata  . 
In Sixth Conference of the European Chapter of the Association for Computational Linguistics  ( EACL'93 )  . 
Steedman , Mark (1985) . Dependency and coordination in the grammar of Dutch and English  . Language , 61 . 
Vijay-Shanker , K .  (1992) . Using descriptions of trees in a Tree Adjoining Grammar  . Compvtational Linguistics , 18(4):481-518 . 
Vijay-Shanker , K . and Weir , David (1994) . The equivalence of four extensions of contextfree grammars  . 
Math . Syst . Theory . Also available as Technical Report CSRP 236 from the University of Sussex , School of Cognitive and Computing Sciences . 
Vijay-Shanker , K . ; Weir , D . J . ; and Joshi , A . K .  (1987) . 
Characterizing structural descriptions produced by various grammatical formalisms  . In 25th Meeting of the Association for Computational Lingvistics  ( ACL'87 , Stanford , CA . 

