Flexible Parsing
Phil Hayes and George Mouradian
Computer Science Department , Carnegie Mellon University
Pittsburgh . PA 15213, USA
Abstract '
When people use natural language in natural settings  , they often use it ungrammatically , rn is Sing out or repeating words , breaking-oil and restarting , speaking in Iragments , etc . . Their human listeners are usually able to cope with these deviations with little difficulty  . If a computer system wisllest c accept natural language input from its users on a routine basis  , it must display a similar in difference . In this paper , we outline a set of parsing flexibiiii i iiiii i iiii i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i i lies that : ' , ucha system should provide . Wego , onto describe Flex P . a bottom-up pattern-matching parser that we have designed and implemented to provide these flexibilities for restricted naturallanai  . age input to a limited-domain computer system . 
1. The Importance of Flexible Parsing
When people use natural language in natural conversation  , they often do not respect grammatical niceties . Instead of speaking sequences of grammatically wellformed and complete sentences  , people Often miss out or repeal words or phrases , break off what they are saying and rephrase or replace it  , speak in fragment S , or use otherwise incorrect grammar . 
The Iollowing example colwersation involves a number of these grammatical deviations : A : I wmlt  .   , can you sendame moa message to to Smith El : Is Ihal John or John Smith or Jim Smith 
A : Jim
Instead of being unable or refusing to parse such ungrammaticality  , human listeners are generally unperturbed by it . Neither participant in the above example , for instance , would have any dificulty in Iollowing the conversation  . 
If computers are ever to converse naturally with humans  , they must beal ) l ~ , to l ) nr . ~t ~ th ~ 4irinl ) Id: . isilexii ~ iy and rni ) Izslly ; mhtlnmns do . While considerable advances have been made in recent years in applied natural language processing  , fewel the systems thai have bean constructed have paKI  5uificien   , uttenlion In I hok in rIsel devialio = l that will inevitably occur = u ~ their ulq  ) ulif ( f ) eyaretlsedIn , ' ~ natural environment . In many cases , if the user's tat ) t i t ( ions solCOlllefnl totiles ysh . ~m's grammar , an in ( iication of in comprnller manl ) followed by a rerluest to rephrase may be Ihe besthe  ( : a = ~ P ~ xt ~? ~ ( : lW (  ; ht ~ . liP . vt . ? I hat . ~uch , fllexibili ! yi . parsing severely limits I hepracticality O nat Lira language contpuler hderl:~rces  , an ( is a major roasell whyn alar ~ d language tlaa yet to find wide acceptance in sucl ~  ; tpplications as database retrieval Or interactive caromrod langut  ,  . ges . 
In this paper , we report on a flexible parser , called FlexP , suitable for use with a restricted natural language interlace to a limited-domain counputer system  . W  ~ . describe first the kinds of grammatical deviations we are trying Iodeal with  , then the basic design decisions for FlexP with juslificalion for them based on the kinds of problem to be solved  , and finally more details of our parsing system with worked examples of its operation  . These examples , and most of the others in tl~epaper , represent natural language input to an electronic mail system that we and others  \[1 I are constructing as part of our research on user interfaces  . This system employs FlexP to purse ils input . 
2. Types of Grammatical Deviation
There are a number of distinct types of grammatical deviation and not  ; illlypt ~ ; r ~ tl ) tOll ~ lit1 ; Ill Iypes of COlnln unicat Jonsiltiation . Intllinso ; cites . 
we first define the restricted type el communication situation that we will be concerned  will1  , thai of a limile ~- I-domain computer system and its user communicating via a keyboard and  ( hsplays creen . We then present a taxonomy of grammatical deviations common in this context  , and by implication ase tel parsing flexibilities needed to deal with them  . 
2 . 1 .   Communicalio0t with a Limited-Domain System In the remainder of this paper  , we will focus out a restricted type of can to ) unitarian situation , that between a limited-domain system and its user  , and on the p : tr sing flexibilities need e ( f by suu has y stem Le ColJe with the user's inevitable grammatical deviations  . Examples of the type of system we have in mind are data-b  ; ~eretr 0 eval systems , electroa ) icmail systems , medical diaunosis systems , or any systems operating in a domains or E ' stricted thaithey can COmp k Hely understand  ; 311 y relevant input a user might provide , In short , exactly the kind O ! system that is normally used for work in applied natural Imt guage processing  . There are several points to be made . 
First . although , ~uch systems can be expected to parse and understand anythi  , lg relevant latheir domain , their users cannot be expected to confine tl lemselves to relevant input  . As Bohrowel , al .  121  . ale . users of lcn explain Iltl ~ ir underlying motivations or olh or wzsejt = nlify their l  ( ~ ( Itli' . % l , ' ~ illl(~llnB ~ Itlih ~ ilr(!l~v ; ililIlllh(!'(i()lnain()fth(:~yst~in . \]' hitro , ~tlJ is lhal slJch systems cannot expecl Io parse  ;  . d l l l x ~ i l i n l n H . , : vun wd hl he use of flexible parsir x . jlechniq q . .
Secondly . a flexible parser is just purl of the conversational comporient of such  ;  , I system , ai'id cannot solve all parsi , g problems by itself , For example , il a parser can extract two coherent fragments train anotherwise in comprellensible input  , the decisions about what I he system should next must be made by another component of the system  . A decision on wllether to jump to a conclusion about wll at the user intended  , to present him with a set of alternative interpretations  , or to profess total confusion , can only be made with information about the It is tory of the conversation  , beliefs about the user's goals , and measures of plausibility for any given action by the user  . See \[7~ for more discus Siono I his broader view of graceful interaction in man-machine communication  . Suffice it to say that we assume a flexible parser is iust one component of a larger system  , and I halany in comprehensions or ambiguities that it finds are passed onto another component of the system with access to higtler-level information  , putting it in a better Position to decide what to do next  . 
Finally , we assume that , as usual for such systems , input is typed , rather than spoken as is normal in human conversations  . This simplifies low . level processing tremendously because keystrokes unlike speech wave-farms are unambiguous  . On the other hand , problems like misSpelling arise , and a flexible parser cannot assume thut segmentation into words by spaces : Slid carriage returns will always be corr ~: t  . 
However , such input is stilt one side of a conversation , rather than a polished text in the manner of most written material  . As such , it is likely to contain many of the same type of errors normally found in spoken conversations  . 
2.2. Misspelling
Misspelling is perhaps the most common form of grammatical deviation in written language  . Accordingly . it is the form of ungrammaticality that has been dealt wdh the most by language processing systems  . PARRYJ tIJ . I . II'E\[1 Jl~I .   ; taxit lumer nusolher systems have tried te correct misspelli  . p0J t from their users . 
llhisn ( , :' ? a , mchw ; l ~ Sll ~ ll ~ . i ~ tl by IIH ~ . A . ll , ce Oli Veu ISCI ~ Illi I ic nl ! s ( ' lllc : htill ( Jilt " correctly spelled words An input word = to t fot  . ldm the dictionary is assumed to be misspell and is compared against each of the dictionary words  . If a dichonary word comes close enough to the input word according to some criteria of lexical matching  , it is used in place of the input word . 
Spelhng correction nloy be attempted in or outol COntext  . For instance . 
there is only one regs on ~ . lble correction for " relavegt " or Ior " seperate "  . 
l)tdIorallmlitlIlike*'till " SOltlek . ' ~ datconlext is typlc; . dlyile cossory as m ' TII see yet = tmApril " or " hew  ;  . tS shot will lt lestolent ill . " Inellect , c(lltexlc ; in Lx . . t ! . lse ( It or c ( ttl COtile size Oi Ihedi Clll ) ltaly tOie searched for correct words . ) ' hislJtlhnakl , = sIhese uichinuret:ficlentaldredice stile possibilily elnlullll  ) le Ill . :ll( . ; hus OII he input ; . tgall lSt lifeLliCtiOIafy . The LIFEF1UIs ys letn use stile strong cun : ; traln Is typically llrovlde ~ by its SCII ;  . nIICgl ; nnlnalifIhlSwaytor ( . '~Iuc ( 3 tile range el possibilities Ior spelling correction  . 
A particuk vly trouble some kind of spelling error results in a valid word different from the one intended  , as in " show meon of the messages " . 
CParly . ~lich on error colt only t ~ e corre ( ; It ~ l I hrotlghcI ) nlp ; Irison against -' . contextually determined vocabulary . 
2.3. Novel Words
Even accomplished users Of a language will sometimes encounter words they do not know  . Sucisituations are a test of their language learning skills  . If one ( lidn'lknowtile word " fawn " . one could nt least decide it was a cotour from " a faw nCOlOUreds weater "  . If one just knew Ih ~ wur ( Jil ~ lulOfIlialu ~ . t young ( . IL~I . one nllgh\[CgllcJud ( J thai II was L~ll~lg used to meantile colour of a young deer  . in general , beyond making direct inferences tb out the role ol unknown words from their immediate context  , vocabulary learning c : ~ l require arbitrary amounts of real * world knowledge and  . derence . and this is certainly beyond the capabilities Of present day altificial intelligence techniques  ( though see Carbonell \[4 for work in this direction )  . 
There is . however , a very common special subclass of novel words that is well within the capabilities of present day systems : unknown proper names  . Given an appropriate context , either sentential or discourse , it is relatively straightforward to parse unknown words in totile names of people  , places , etc . Thus in " send copies to Moledes . ki Chise lov " it is reasonable to conclude Iron the local context that " Mole de ski " is a first name  . " Chiselov "= sasuman ~ e , and together they identily a person ( the intended roe : pit ' . hi of the copm ~5) . Strnt ~ gles like this were used in the POLITICS\[ St  . FRUMP 16 J . and PARRY 11II systems . 
Since novel words are by definition not in the known voc = bulary  , how can a parsing system distiogt , sh them from misspellings ? In most cases . 
the novel words will not be close enough loknown words to allow SUC CeSSful correction  , a S in the above oxamole , bulthis is not illways true ; an unknown first name of " AI"COUldeasily be corrected to " all "  . 
Conversely , it is not s~te to assume that unklown words ill contexts which allow proper names are re  ;  . lly proper names as in : " send copies to al managers "  . In this example . " or " probably should be corrected to " all " . 
In order to resolve such cas ~ . it may be necessary to clleck ; gainstalist of referents lor proper name R , if this is known , or other w is ( ~ to consider such factors a R whelher tile in lli ; ll letters of I how ords are capilalized . 
A Slaras we know . no systems yet constr , ctc < t have int ~ jroted their handling of mi . ~spcltwortl . qiln(tunknown , proper nanl ~" sIoIhe degree oullined ; . If l ?) v ~ . , . However , Itt ~ COOP19 l . ~, y , , it ~ ln allows sysll Hllnlic access In a dat; . illaSt . ? (: Ulllaillll ~ j ) l Ollerii ; nneswl lhotllIheni'~L~tIi ) lilICitlSlOll of I he words , 1 I he system's iln rsing vocabulary . 
2.4. Erroneous segmenting markers
Wntten text is segmented into words by spaces and new lines  , and into higher level units by commas , periods and olher punctuation marks . Both classes , especially the second , may be omitted or inserted speciously . 
Spoken laf~gt Jagosaso segmented , but by the Clt , te different markers of stress , interaction and noise words and phrases : we will not cons = der those further here  . 
In corre Ct segmentation ; ll the lexical level results in two or more words being run to get l  ) er , as in " run together " . or a single word being split up into two or more segments  , nsin " together " or ( inconveniently ) " together " . or combinations of these effects as in " run lo gethel "  . In all cases , it seems natural to deal with such errors by extending the spelling correction mechanism to be able to recognize target words as initials e  ( jments of unknown words , and vice versa . AS far as we know . no current systems deal with incorrect segmentation into words  . 
The other type of segmenting error , incorrect punctuation , has a much broader impact on parsing methodology . Current parsers typ ; catty work one sentence at a time . and assume that each sentence is terminated by an explicit end of sentence marker  . A flexible parser must be able to deal with Ihe potenliai absence of such a marker  , and recognize the sentence boundary regardless . It sllould also be able to make use of such punctuation if il is used correctly  , and to ignore it if it is used incorrectly . 
Instead of pun Ctuation , many interactive systems use carriage-return to il ~' Ji cale sentence termination  . Missing sentence terminators in this case correspond to two sentences on one line  . or to the typing of a sentence without the terminating return  , while specious terminators correspond tO typing a sentence on more than one line  . 
2 . 5 . Btokon-Ofl and Resta Hod Utfer all cas Inspoken language  , it is very common to break off and restart all or part of an utterance : I want to -- Could you lell me the name ? Wastile man--er--tile of liciol here yesterday ? Usually  . such restarts are sK jn all ~ lin some way . by " urn " or " er " . or more explicitly by " lersbacktip " or some si  ,   , Ior phrase . 
In written language , such restarts do not normnlly occur because they are erase  ( l by lhew riterbolore there atlersees I henl . interactive COmputer sysle--n ~ typically prp vide facilitios for I heir user stO delete the last cllorocler  , word . orctlrletl Ihno as I hotlghii had never been typed  , for the very purpose of allowing such restalts . Given these signals , tl ~ elustar Isaru ~ Jasy Io ( lete clanti in ler pr (  ; I . However . sonlein lL ' bstIS ( ~ rsI : lll to make use ol I heses = gnals . Sometimes . for instance , i ~ lp tlt not containing a carriage-return can be spread over several lines by intermixing of input and output  . A flexible parser should be able to make sense out  . of " obvious " restarts that are not signalled , as in : delete the show mea U the messages from Smith  2  . 6 . Fragmentary and Otherwise Elliptical Input Naturally occurmg language often involves utterances that are not complete sentences  . Often the appropriateness of such fragmentary utterances depends oil conversational or physical context as in : A : Do you mean Jim Smith or Fred Smith ? 
B : Jim
A : Senda message to Smith
B : OK
A : with copies to Jones
A flexible parser must be able to parse such fragments given the appropriate context  . 
There is a question here of what such fragments should be parsed into  . 
Parsing systems which have dealt with the problem have typically assumed tlit such inputs are ellipses of complete sentences  , and that their parsing involves finding that complete sentence  , and pursing it . Thus the sentence corresponding to " Jim " in the example above would be " I moon Jim "  . Essenhally this view has been taken by the LIFER \[81 and GUS \[2l systems . An alternative view=s that such fragments are notellipses of more complete sentences  , but are themselves complete such . We have taken this view in our approach to flexih to parsing  , as we will explain more fully below . Carbonoll ( personal communication ) suggests a third view appropriale for some fragments : that of an extended case frame  , hitile second examt . lleabove , for instance . A's ' with copies foJ ones " forms a natural pint ul the c = ts ~  . ' Irameest ~ . lblish ~ tfly " Self ( a message to . ~;mith " Yet : molh ~ . ,r approach to Ir~lgmnnt l)ar: ; if l q is taken in the PLANES system ~ 12\[ which always parses in terms el major fragments rather than Complete utterances  . This technique relies on there I~ing only one way to combine I he fragments thus obtained  , whicll may he a reasonable aSslnlpt Jontarill; . in y limited clara ; rot systenls . 
Ellipses calluln a occur without regard Io context  . A type I halinler act = ve . '; yshtms are paHK : uhtrly likely 1 oI: . lceiscryl ) licness in which ; irh cles : tn df dh ( ~ rnOll-e ~ . ~ . %enlJ ; iJ words are entitled ; isill ": ; hownle SS ;  . IgOSalterJune17"inste . ;p . Iol them ? l recomplete " . , ; how me all me snacles dat ( . ~lafter June 17"Again , tiler ( : is a question of whether to consider I hecryptic tnl  ) LII cunlpluh ~ , which would me ~ fninod Jlying file system's urzmmmr  , or whether to considerilelliltical , and cnmpleleit by using I lexlble techniqueste parse if against the comply  . reversiol lasit exisls in
I he standard gr ; In lnlar.
Other cam ; nonforms of ellipses are associated with conjunction as in : John gotup and\[John \] brushed histeeth  . 
Mary saw Bill and BIllsawl Mary.
Fred recognized\[I he buildingland\[Fred\[ walked towards the building  . 
Since conjunctions can support such a wide range of ellipsis  , it is generally impractical to recognize such utterances by appropriate grammar exlensions  . Efforts to deal with conhlnct J on have I herefore depended on general mecllanisms which supplement the basic parsing strategy  , as in fhe LUNAR system\[fSl , or wilich modify the grammar temporarily , as ill the workel K wasny and Sond heimer II OI . We have not attempted 1o deal wilh tills type of ellipsis in our parsing system  , and will not discuss further the type at flexibility it requires  . 
2 . 7 . Inierjected Phrases , Omission , and Substitution Sometimes people inlorject noise or other qualifying phrases into what is otherwise a normal grmnmatical flow as in : I want the message dated I think June  17 Such interjections can be inserted at a hnost any point in an utterance  , and so must be dealt with as they arise by flexible techniques  . 
It is retahvely straightforward for a system of limited comprehension to screen out andigfloro standard noise phrases such as  "1 think " or " aslaras I can tell " . More trouble some are interjections that cannel be recogni  , ~ed by the system , as might for instance be the case in D is play \[ ju  . ' ~ I to relre: ; hmy memory I the message dated June 17 . 
I want to seetile message as I forgot what it said J dated June  17  . 
where the unrecognized intefiections are bracketed  . A flexible parser should be able to ignore such interjections  . There is always tile chance that the unrecogniz c ~ tpart was an important part of whattile user was Iryillg Insay  , bl . fl clearly , the problems that arise from tills c; . tnllot be handlml by a parser . 
Omissions of words ( or phrases ) from the input are closely related to cryptic input a S discussed above  , and one way of dealing with cryptic Iflp Lll into treatil as a set of omi  . ~, ~ ions . However , JnCryptic input only in ess ~ . * fdi ~ difdormali Oll is missed oul . while it is cooce ivable thai one could also onlit essential if llormation as ill: 
Display Ihemen , ageJunet7
Herr ~ it is unclear whether tile Si ) e\[lkerilleansaines . ,Ja(le dated ell , hlnetforb *: lore Juno 17 or ; liter June 17 ( we assume that the system add fess c~t Calf di . ~; t ) layl hilt ~ tsill lfn ( . ~l Jately , or i 1ol at all ) . If aft onlission can b~i1 ; llrow l ~( I(l () Wllill I hJsw ; ly , tile I ); fr . ?, l ? r n l l n l d d h e . ?; it ) k . TM t OgE , itf'!r ; llP : illtile alfern ~ diven liarc?lnh~xtual reso hllinflnf the ambi Hllilyor for the basis of a  ( lllesti ( lll Iotileus ? . ~ r ) . If tileom is . ' ~ in n can be narrowed downtoone ; llh . ~rn ; l live f helltile illl ) tlt was flleloly CI yl ) tic . 
Besides omitting words and phrases , people sometimes substitute incorrect or unintended ones  . Often such substitutions are spelling errors and should be caught by I hespelling correction mechanism  , but sometinles they are in advertent substitutions or uses of equivalent vocabulary not known tO the system  . This type of substitution is just like an omission except that there is an unrecognized word or phrase in the place where tile omitted input should have been  . For instance , in " the message over June 17" , " over " takes the place of " dated " or " sent after " or whatever elst : is appropriate at that point  . If the substifution is of vocabulary which is appropriate but unknown to the syslem  , parsing o substihlted words can provide tl ~ e basis of vocabulary extension  . 
2.8. Agreement Failure
It is not uncommon for people to fail to make the appropriate agreement between the various parts of a noun or verb phrase as in : I wants to send a messages to Jim Smith  . 
\]' heap propriate action is to ignore the lack of agreement  , and Weischedel and Black \[13J describe a melhod for relaxing the predicates in an ATN which typically check for soch agreements  . However , it is generally not possible to conclude locally which value of the marker  ( number or person ) for whicll the clash occurs is actually intended . We considered examples in which the disagreement involves more than inflections  ( as in " tile message over Jr , he 17") in the section on substitutions . 
2.9. Idioms
Idioms are phrases whose interpretation is not what would be obtained by parsing and interpreting them constructively in the normal way  , They may also not adllere to the standard syntactic rules  . Idioms must thus be parsed as a whole in a pattern matching kind of mode  . Parsers based purely oil patlern matching , like thaiel PARRYIItJ , titus are able to parse idioms naturally , while others must eifher add a preprocessing phrase of pattern matchim j as in tile LUNAR system  \[15~  . or mix specific patterns in will1 more general rules , as in Ihework of Kwnsny and Sondheimer\[10\] . 
Semantic grammars\[3 ,   81 provide a relatively natural way of mixing idiomatic and more general patterns  . 
2.10. User Supplied Changes
In normal hunlall conversal iff l , once SOme ; Ihing is said , it is suid and c; . tllnOtbech,lnul . ~ t , excl ; pt indirectly by more words wl fich refer Uack to tile original ones  . In inler actively typf . ~llie ) at , there is alway S the poss it ) ilily thaiausern lay notice ;  . in error he has made ; . ind go back an ( I correclithm f . ~(: ll , wilhoul wading for the : wstem top tlrslle=Is own  , possibly slow and inef\[e(:tive , motile ( Isel correction . Wilh appropriate editing lacilities , I he user may do this wilh ouler asing inlervening words  , all d , if he system is processing his input oil a word by word basis  , may 3 . An Approach to Flexible Parsing Most current parsing systems are unable to code with most of the kinds of grammatical deviation outlined above  . This is because typical parsing systems attempt to apply their grammar to Illeir input in a rigid way  , and since deviant input , by defimtion , does not conform to the grammar , they are unable to produce any kind of parse for it at all  . Attempts to parse more flexibly have typically involved parsing strategies to be used after a to g-down parse using an ATN  It4J or similar tran~lionnet has failed . 
Such efforts include the ellipsis and garapll rase mechanisms of LIFER  \[81  , tile predicate relaxation techniques of Weischedel and Black  \[13J   , and several of the devices for extending ATN's proposed by K wasny and 
Sondheimer\[101.
thus alter a word that the system has already processed  . A flexible parser must be able to take advantage of such user provided corrections to unknown words  , and to prefer them over its own corrections . It must also be Dre Dared to change its parse if the user changes a valid word to another different but equally valid word  . 

We have constructed a parser , Flex P . which can apply its grammar tO its input flexibly  , and thus dealwd h the grammatical deviations discussed in the previotls sech on We shot dd empllas ~  ; ~ e , however , that FlexP is designed to be used in thu llt turluce to a restncted-domain system AG such  . it is intended to work Iromadomuilt-sDecific semantic grammar  . 
rather titanonest . tuble I or broader classes of input . FlexP thus does not embody a solut loll for I lexible parsing of natural language in general  . In describing FlexP . we will note those of its techoiques that seem unlikely to scale up to use with more complex grammars with wider coverage  . 
We have adopted in Flex Pan approach to flexible parsing based not on ATN's  . but closer to the pattern-matching purser OItile PARRY system  \[11J   . possibly timmost robust parser yet constructed . Our approacl ~ is based on several design decisions : ? bottom up rather than topdown por ~ing : This aid siothe ? Parsing el fragmentary utterances  , un(Iinther ~ rxll . li ?, lnf interjech on Ralld restarts . 
? pattern matching: 1 Ilisis essential In ridioms , and also aids in tileilelection n ! omissions and sobs Mutions in non-i  ( limontic phrases . 
? parses uspension and conli , luoiion : Thu ; tt ) ilily to F . uspelldit I ); Irse and letter re . ~ Lineil . '; I ) rocnRsil U , i ~ ill tllortant for into rlections , restarts , and non-expliciterntinolions . 
In the remain ( ler of this section we examine and juslify these design decisions in more detail  . 
3.1. Bottom-Up Parsing
Our choice of a bottom-up strategy is based o , our need to rocu ~ jnize isolated sentence Iragments  . If an utterance which would normally be considered only a fragment of a complete sentence is to be recognized topdown  , there are lwo approaches to take . First . the grammar can be altered so that I he fragment is recognized as a complete ulteraoce in its own right  . This is undesirable bee ; ruse it can cause enormous exp ; ms ion of the grmn mar , and because it becomes difficult to decide whethers fragmeot appears in isolali ~ or as port OI a larger utterance  , especiully if the possibility of missing end of sentence markers also exists  . The second option is for the purser to infer from the convers  ; ttidnal context what grammatical subcategory ( or sequence of sub-cate ( jories ) the fragment might fit Dn to . and the e to do a topdown parse tram that subcategory  . 
This essentially is tiletzlctic used in the GUS \[21 and LIFER lot systems . 
This strutegy=s clearly better than the first one  . but has two Problems ; first of predicting all no . ss~ble subcategories which might come next . and secondly , of inefficiency if a large number are predicted . Kwosr . y and S on d heimer I10\] use: . combination of the two strategies by temporarily modifying an ATN grammar to accept fragment categories as complete ulterances at the braes they are contextually predicted  . 
Pattern-uP Doming avoids the problem of predicting what subcategories may occur  . If a fragment filling a given subcategory does occur  , it is ~3 rsed as such whatever the context . However . if n given input can be p . ' ~ rsed as more thon one subcategory , the bottom-up approach would l lave to produce them all  . even if only one would be predicted topdown . In a syslem of limited comprehension , fragmentary recognition is sometunes necessary because not all of an input conbere cognized  , rather tilan because elintentional ellipsis . Here . it is probably in ) possible to makepte ( tictloos alt CI bottom-up pursing is tile ( ) lily toothed that is likely to work . As described below , boltom-upstnltegms , coupled with suspended purses , are also help hrlin recognizing mteqections and restarts  . 
3.2. Pattern M~tching
We have chosen to use a granlnlar of linear I ) ; lltorns rntller thao aIT uiiSlllOn network boc ;  . ttl . . ; e palterll-nlllChlllg ineshus well wllll I)olJoln . uppur Slllg , bec; . it is e itf ; . 1ci Iitutes reco~llllOiI(11 UIIuI ; uIcuS wilhnll li . % sioIl . ~;lltSUbStitutiOnS . ;ll(i \[ ~3 cause it is I~eces . ~ . ury ; . l l l y w ; lyl ~ Jrtilele cogn dionoii(tidm ; it iC phrases . 
TIIu ( . r31 lllil; . t ; oJ the parser is ; . = SO to frew rde or I ) roduCtlOItrll lt ~$ whose tell h ;  . u ) ( I : role is ; . ttil ) ( . l\[ilII; . ltL = fnOfCOil:;llttlHIttS(ll;XlL ; ; . ll()1hl(Ih(lk:vel) ; tlt ll wll lose righthand side derides a result constWJiot  . Elenleots el the pattern may be labelled ophols al or allow for repeated matches  , We make the assumption , certainly true I or the grammar we are presently working with  . that the grammar will be semantic rather than synttctic  , with patterns corresponding tOidiemntic phrases or to object and event descriph ~  , lsmeonulgfulit ) some hmitod domain , rather than to general syntactic structures . 
Linear patterns fit well with bottom-up parsing because they can De indexed by any of their components  , and because , once indexed , it is straiglltforward to confirm wl ) ether a pattern matches input already processed in away consistent with the way II~e pattern was indexed  . 
Patterns help with rite detection of omissions and substitutions because in either case the relevant pattern can still be indexed by the remaining elements that appear correctly in the input  , and thus the pattern as a whole can be recognized even if some of its elements are missing or incorrect  . In the case of substitutions , such otechnique cnn actually help locus the st~011ing correction , proper name reco(jnition , or vocabulary learning techniques , whichever is appropriate , by tsolahng the substituted input and the pattern constituent which it should have matched  . In effect . 
this allows the normally bottom-up parsing strategy to go topdown to resolve such substitutions  . 
In normal left to right processing , it is not necessary to activate all the patterns io  ( lexed by every new word as it is COn Sidered . If a new word is accounted lot by a pattern that has already been part K flly matclled by previous input  , it is likely that no other patterns need to be indexed and mulched Io ~" thai input  , ll ) ts heuristic PlowsFlexP's pursing algorithm to limit the number of patterns it to est on tatch  . We should emphasize . 
however , that it is a I ' . ettrstic . and while it has caused us no trouble with the limited * dominogrammar we have been using  , it is unclear how well it would transfer to a more complex grmn mar  . FlexP's algorithm does . 
however , carry alongntul tii ) le partial par . ."~es in other alliblguOUS cases . 
removing tile need for any backtracking.
3 . ;3 . Parse Suspension and Continuation Flex Pemploys the technique of suspending a Parse with the possibility el later cominualion to help with the recognition of inlerle cliof ls  , restart S . 
and implK , ilterml natio , s . Tile I arsm galgurit tun works tell to right in a tre : tdlh-lir  . q t retainer . It ntain lui = is a set of p ; Irtiu ! parses , each el which ~ tc cotlnts for I he inputul re~lty proces  . =~ . .(t but riot yet accot . llodlot by . '1 COmpleted pari . ; e . The purser attempts to incorporate o~tch new input into each of I huP  ; tr tial p ~ . ~ rsOs . II his is successful , the t ) artiul parses are exleniled al~llil : lyirl creos ~or decrease illittinl ber  . If no partial purse can be extendo ~ t , the entire set is ~ . lVed as a SU spended parse , There are several possible explanations for input mismatch  . Le . the failure o ! tilenex ! input tO extend a parse  . 
? The input could be an implicit terminal = on , i . e . the start of a new toplevel utterance , and the previous utterance should be assumed complete  . 
? the:Inp?ll?util ~ . ib ~ J are slart , m whl cll case li . eactive Parse should be abandoned and a new parse starte  ( I Item that point . 
? The input could be the start of an interjection , io which casel heact we parse should be temporarily suspended  , and a newmtrse started for the intorlection . 
It is not possible , in general , tOdL~tmguish between these cases at the time tim mismatch occurs  . II the active parse is not at a possible termination Point  . then input mismatch cannot indicate implicit to suspend the active parse and wuit to see if it is continued at the next input mismot clt  . On the other hand . if the active parse is at a possible termination point  , input mismutch does not rule out interjection or even restart  . In this situation , our algorithm tentatively ussumes that there has been an implicit termination  , but suspends the active parse anyway for subsequent potential continuation  . 
Note also that tl ~ e possibility el implicit termination provides justification for the strategy of interpreting each input immediately it is received  . If the input signals an implicit termination , then the user = nay well expect the system to respond immediately to the input thus terminated  . 
4. Details of Flex P
This section describes how FlexP achieves the Sex = bit = ties discussed earlier  , The implementation described is being used as the parser for an intelli  ( jent interface Io ; i multi-medium essage system\[1\] , The intelligence in this interface is cnn centrated in utl  . ser A ( lent whict l = ned=sites between the user and the underlying tool System  . The Agent ensures that the interaction goes smootlfly by  , a moog other things , checking I hattile user specifies the operations he wants performed and their parameters correctly and uuumbiguously  , conducting a dialogue wilh the user if prohlems arise  . Th ( : role elFlexP " ustileAgent's parser is to transform the user's input into the internal ropresenlutions employed by tile Agent  . 
Us . idly this in l ) ut is are ( It lest for a clio , hytheto ( llora description of obiects known to the tool . Our exzmq = les are drawn from that context . 
4.1. Prolimi . ary Example
Suppose tile user types display new messages Interpretation begins as soon as any input is available  , The first word is used us an index into the store of rewrite rides  . Each rule gives a pattern and ustructure to be pr = xlu  ( : od when lira pattern is matcher f . The component sel the structureure built from the structures or words which match the elements of the pattern  . The word " display " indexes the rule : ( pat . = . or . : ( I ) is play Message Descript . i . on ) result , : JSL ruc Lureiype : Opera Lion Reques IL
Opera Lion : Display
Message: ( Fitlet Message l ) escr'ip Lion ) \] Using this rule I he parser constructs the partial parse tree  ( Display Message Oescriptio .  )

Idisplay
We call the partially-instantiated pattern which labels the zipper node ah WJo thesis  . It represents a possible interpretation lot a segment of input  . 
The next word " new " does not directly match the hypothesis  , but since " new " is a MsgAdj ( an adjective which can modify a description of a message  )  , il indexes the rule: ( paLLm'n : ( ? l\]et * Msg Adj Msgl lead * Msg Case ) resulL : JSt . rucL . roIyl)e : Message Descrip Lion Cnllq ) O , e , LS : .   .   .   .   .   .   .   .   .   .   .   . \]) Here . "?" means optional , and . . . . . means repeatable . For the sakeOf clarity , we have omitted other prefixes which distinguish between terminal and non-terminul pattern elements  . Tile result of this rule fits the current hypothesis  , so extends the purse as follows: ( t ) isliInyMessagel\]escripLion ) 
II
II
J(?DeL*MsgA dj Msgl lead ? MsgCase)
I 1 iI it=s play new 1 he hypolhesis is not yolhdly conlirm (  . , dev q . , nIhuughalltht ; elements ore Itarched . It . ~!;l~(:i ) ll ? lt ~ ltll ~ llln = all . ~ he . " ~; tlnlthq ~ r h ~ w ~ rI , ~vt ~ lhypothesis which is ool yiu completoly matclled  . Thi . slower put luH = I ) ut : ulnusLime clirr ( , r l t h w ~= l H I t ! : ; t : ; b ~ c ; . lus ~; ilpledicts whal should COlliei it . ~ x\[ill the ill put stream . 
The third input m ; . dcho . , ; I he C ; . It(~tlory M : ; gl-lead(head noun elame t . sage ( lest : Silltion ) and so litstile current hypothesis , This match lills the lust non-oplional slot in I hut pattern  . By doing so it make stile current hypothesis and its parent pattern potemia/lycomplete  . When the parser finds a potentially complete phrase whose result is of interest to the Agent  ( and the parent phrase in this example is in that category  )  , the result is constructed and sent . However . since the p ; irs ~ , r has not seen a lomlination signal , this purse is keplu ( . , hvu . Ihuiiq ) ut 5 , ;us su lur may be only a prefix Ior some longer utterance such as " display new messages about ADA "  . In this case " uboutADA '" would be recognized as a match for MsgCase  ( a prepositional phrase that can be part of a message description  )  , the purse would be extended , and a revision of the previous slructul'e sent to the Agent  . 
4.2. Unrecognized Words
When an input word cannot be found in the dictionary  , spelling correction is attempted in a background process which runs at lower priority than the parser  ,   1"he input word and a list at possibilities derived front the current hypothesis are passed as arguments  . For example : display the new messaegs produces lhepartial parse  ( Display Message Oescrip = . to n )
II
II
I(?Pet " Msg Adj Msgt lead ? MsgCuse)
III
It I display Lhenew
The lower pattern is the current hypothesis and has two elements eligible to match the next input  . Another Ms ( JA di could be matched . A matcll for Msg Heud would also lit . Both elements have associated lists of keywords known to occur in phrases wl ~ ich match them  . The one for Msg Head in clu(lest l ~ e word " nt ~ . ~ os , ages '' . and the spelling correcter passes this back to the purser as the most likely interpretation  . 
In some cases the spelling correcter produces several likely alternatives  . The parser handles such aln higuous words using the same mecllanisms which ucconlmot late phrases with ambiguous interpretations \]' hutis  . ulternative interpretations are curried alt Jng until I here is enough input to discriminate those which are pla  . sible from those which are not . 
lied ~., tailsira:given in then ~: xt section.
The user in uy also corrl : ctI he input taxi himself  , These changes are hundle ~ liniln lch the S ; llnoway as those proposed by I hespellillg correcter  . Of course , the s~u' . ~ . r-suppliotch ; in gosure given priority , and Ililrs = . .'s built u~ . all gIheformalver ' . ; iun musIlxJml v . lili . ~lord is carded . 
Spellimj correction is run as a separate , lower priority process because it reusonublo parse may be produced even without a proper interpretation for the unknown word  . Since spelling correction can involve rather time -consuming searches  , this work is best done when the parser has . no better alternatives to explore . 
4.3. Ambiguous Input
In the first example there was only one I ~ypothesis about the structure Of the input  . More generally , there may be several hypotheses which I ) rovide competing interprelution suboul what has already been seen and whal will appear = text  . Until these p~lrtial parses are Iound to be inconsistent with the actual input  , they are carried along as part of the ~ zctive purse  . Therefore the active parse is a set at partial purse trees each find appropriate parses  . We have not encountered such circumstances wilh tiles = n all domain-specitic semantic grammar we have been using  . 
4 . 4 . Flexible Matching rl+eoaly I lexibiltty described solar * s that allowed by the optional elements el patterns  , I Iom ~ ssions can be anttcipLIte(I , allow ancestrlay be built Ilil (= the grammar . In Ihi $ sechon we show how other OlnissiOI1S may h~lUll ittl (  ; ~ t ; tnltO lexitiililles achit=ved by ~ jlow , ncj ; t ( J ( 'liliontilfreHtlom in the wtwan item is allowed tO  matcI1 a pattern . I here are two ways in with a toplevel Ilypothesis about the overall structure at the input so far antia curr~nthyl  ) othesis concerning the next input . The actual mlplementation allows sharln ( j of CO nl n ) OII structure aln Ollg competing hypotheses and so = Smoreollic = en than this descnption suggests  . 
The input were there any messages on . . . . . .
could be completed by giving a date ("+ . . on Tuesday ") or a topic (" . .+ on ADA ") . Consequently , the subphrase " any messages on " results in two partial parses :  ( ? DeL " Msg Adj Msgl lead ? Msg Case ) 
II\]
III any messages ( On DaLe)

Iona . d(?De(."NsgAd.jHs,jl lead*NsgCase)
III
IIIa.y messages ( O.TOpiC)

Ion
II 1110 next in ptll were " Tttesday " it wold ( be consislenl will 1Ihetirst parse , I ) lll nnf the necond . Shice one olthe\[t Jl Orn ; it lVeS(DOS~lc count tarthelilt ) el . I ho so thai do IIO imay I ) ~ J(tisc ; tr(Ic'(I . On Ih P . oilier liimd , it : Illtilei): . lrti~ . lt): . ISI !', . ~tillltOIlt; . lt(:hlilt . = in lilt . Oll ' ~ t . ~l ; tctiol~iSt ; , tkoll . We consi(tor 511 ChL~IIU ; Iil (+ IIS ill the S( . ~llOl ) UIIsuspol+th . ~, lf xlrses . 
AS~tjeltur\[tlstr: . ltegy , we carry se Vel: . 11 linssitile in lerl ) retallOltS only ask in tj ; I . ~thert ! is 11 oclear lit ; st ; . lllernalive . II1l): . lrlictllar ' ~ of h ~ xible parsing t * . ,chniqueS are us~t to suttl ) ort parses Ior which th ,  . = rearepl-'tuszblo ; alternative stmtor normal imrsing . This heuristic helps achieve 11 ) 0 wlllch the malching crilerla may be relaxed , namely ? relax consistency constraints , e . g . number agreement ? allow out Of order matches Consff  ; lency constraints are predicates which are attached to rules  . 
They assert relationships which must hold among the items which till the pattern Fhese constraints allow contexl-sensilive constructions in the gram nmr  . Such predicates are commonly used for simdar purposes by ATN parsers  1!41 and the flexibility achieved by relaxmg these constraints has been explored belore  113J   . The tochm quefits smoothly into FlexP but has no1   ; ictt Jally been needed or used in our current application  . 
Ont Deother hand . nutoforder matching is essential for the 13arser's a Pliroach Io errors Of Olni SS lOn . transposition , antisubstitution . Even wile l ~ strictly Iltl ( . = liir ~ l~(J . several eielnents el~t ) ; JllC ' rll may tie elkll bie to match lhen ext input item  . For example . = n the pattern for a
Message Oescription ( ? DeL " Mso Adj Msgl lead " Msg Case ) each at the lirst thre ~ , etemetlts is in di ; dlyeligible but the lasl is not . On the otil t . ~ rh ; ind+uncuM sulleadit ; isI ~ . ' cnmLtt clie ( IDilly tile last elen lell liSeligible trader tile strict interpretation ot the pattern  . 
Consider the input dl Spl~ty new ; i ~ 1 . 11 A\[') A Tile I . ~; tI wo words p ; . ~ rsenormally to produce ( Display Message Descript . ion )
II
II
I(?Pet " Nsg Adj Nsg Head " Msg Case)
II
II display new
The next word ( foes not fit that hypothesis . The two eligible elements predict either another message adjective or a Msg Head  . The word " about " does not matched herot these , nor can the parser construct any path to them using intermediate hypotheses  . Since there are no other partial parses available to account for this input  , and since normal matching tails , flexible matching is tried . 
First . previously skioPed elements are compared to the input  . In this example , the element ? Pet is considered but does not match  . Next , elements to the right of the eligible elements are considered  . Thus MsgCase is considered even though the non -optional element Msg Head has not been matched  . This succeeds and allows the partial parse to be extended to  ( Display Message Descript ~ on ) 
II
II
I(?gel ? Msg ^ dj Msgt lead " Msg Case)
III
IJ ( Abou L Lopic)
III display new about which correctly predicts the final input item  . 
Unree ocjnizable substitutions are also handled by this mechanism  . In the pllra . sed is play the new stuff aboul ADA the word " stuff " iS not found in the dictionary so spelling correction is tned but does not produce any plausible alternatives  . While spelling correction = s under way , the remainings purs can be parsed by siml ~ y omlthng " stuff " and using the flexible matching proce < hJre  . 
Tr; . lnspo31 llOlIS : . ire hand lEKII hrough one applic-'~ll of lel I lexible matching if I hoelemenl of the Irans posL ' < l pair is option ~ d  , two applic ; . tlions if not . 
4 . 5 + Suspe-dod Parses h'lteri ~ . ~: ; tions are in ore colnll ~ on in spoken than in wl ; elllanguage but do at : curif = lyp ( ~ t input sgln Oltlnes . To de alw dh such , 1 put , out design allow slot blocked patiostObe suspended rtll her than merely discarded  . 
Users . especially novices . = nayembellish their inpul will1 words and phrases that dor ' , ~t provide essential information and cannot be specifically anl  , clpale t + Consider t . voex a mines : display please massages dated June 17 disl~ay I or me messages dated June 17 In the first case . them l ~ . rjected word " please " could be recognized as a r :  . mn monnoise phrase wI . ch means nothing to the Agent except possibly to suggust that the user is a nowce  . The second example is more difficult . 
Both words of the interjected phrase can appear in a  num0er of legitimate and me~lnu'lghJI constru+ ; h( . a . ' ~: they cannot be ignored so easily . 

For the latter example , parses uspension works us follows . After the first word , the active parse contains a single partial parse :   ( Display Hossage Descr'tpt . ion )

Idisplay
The next word does not fit this hypothesis , so it is suspended . In its place , a new active parse is constructed . It contains several partial parses including ( For Person ) and ( For Thne\[nLerva\] ) 
IIt I for rot
The next word confirms the first of these , hut the fourth word " messages " does not . When the Darser finds that it cannot extend the active parse  , it considers the suspended parse . Since " messages " fits , the active and suspended parses are exchanged antithe remainder of the input processed normally  , so that the parser recognizes " display messages dated June  17" as if it had never contained " form e " . 
5. Conclusion
When peDDle use language naturally , they make mistakes and employ economies of expression that  . allen result in language which is ungrammalical by strict standards  . In particular , such grammatical deviations will in p . vilabty occur in the inpul of a computer syslem which allows its user I oeln ploynalural langua ?  . le . Such a computer system must , I her t ~ . ior ?: , Iop , t ~ l ); Lrt ~ H to I ) arsH its input nexibly , if il is avoid Irt=slration for its user . 
ht this paper , we have attemple ' ( J Io outline the main kinds of flexibility anc ' ttural I  ;  . tnguage parsur intended for ~ att = raluses l to u k provide  . We also describod a bottom-up pattern-matching parser  , FloxP , which exhibits these I loxibilities , and wllicl ~ is suitable for restricted natural language input to a limited-domain system  . 
References 1 . Ball , J . E . and Hayes , P . J . Representation of Task-Independent Knowledge in a Gracefully Interacting User Interface  . Tecll . Rept . , CarnegieMellon University Computer Science Department  ,  1980 . 
2 . Bobrow , 0 . G . , Kaglan , R . M . , Kay . M . . Norman 0 . A . , Thompson , H . , and Wintxjrad , T . "GUS : a Frame-Driven Dialogue System . " Artificial
Intelligence 8 (1977), 155-173.
3 . Burton . R . R . Semantic Grammar : An Engineering Technique for Constructing Natural Language Understanding Systems  . BBN Report 3453, Bolt , Beranek . and Newman , Inc . , December , 1976 . 
4 . Carbonell , J . G . Towards a Self-Extending Parser . Proc . of 17th Annual Meeting of the Assoc . for Comput . Ling . , La Jolla , Ca . ,
August , 1979, pp . 37.
5 . Carbonell , J . G . Subjective Understanding : Com~uter Models ol Be / ielSystems  . Ph . D . Th . . Yale University , 1979 . 
6 . DeJong , G . Skimming Stories in Real-Time . Ph . D . Th . , Computer
Science Dept ., Yale University , 1979.
7 . Hayes , P . J . . and Reddy , R . Graceful Interaction in Man-Machine Communication  . ProD . Sixth Int . Jr . Conf . on Artificial Intelligence . Tokyo , 1979, pp .  372-374 . 
8 . Hendrix , G . G . Human Engineering for Applied Natural Language Processing  . Pro ( . Fifth Int . Jr . Conf . on Artificial Intelligence , MIT , 1977, pp .  183-191 . , g . Kaplan , S . J . Cool ) nrative\[~espunses tramaPortableNaturall . lllU ! l~!;(:DataB~l :; ~ QL,~tVSy . ~ t(~m . Ph . D . Th . . Dept . of Computer and Intormalion Science , University of Pennsylv ~ ulia , Philadelphia .  1079 . 
10 . Kwasny , S . C . and Sondheimer , N . K . Ungrammaticality and Extrao Grammaticality in Natural Language Understanding Systems  . Pro ( . 
of 17 Ul Annual Meeting of the Assoc . for Comput . Ling . , La Jolla , Ca . ,
August . 1979, pp . 10-23.
11 . Parkison . R . C . , Colby , K . M . . and Faught . W . S . " Conversational Langua ( . io Comprehension Using Inlegraled PzH tern-Matching and Parsing  . "  . . lttthci~d hlt~lliget~c ~ . ) (1077) . I 11-134 . 
1 2 . Waltz . D . L . " An English Language Que . ~lion Answering System for a Large Relational gala Base  . " Comm . ACM21 . 7 (1978) .  526-539 . 
13 . Weischedel . R . M . and Black . J . Res ~) onding to Polentially Unparseable Senlences . Tecta . Rept .  79/3 . Depl . ol Computer and tniormalion Sciences , t J niversity ol Delaware ,  1070 . 
14 . Woods , W . A . " Transition Network Grammars for Natural Language Analysis  . " Comm . ACM 13, 10 ( October 1970), 591-606 . 
15 . Woods , W . A . . Kaglan , R . M . , and Nash-Webber , B . The Lunar , ?~: ienc , ~; talt LiH ~, l~t ' . '; y ', ~ teln:Final Report . Tech . Rept . 2378, Bolt,
Beranek , and Newman , Inc ., 1972.

